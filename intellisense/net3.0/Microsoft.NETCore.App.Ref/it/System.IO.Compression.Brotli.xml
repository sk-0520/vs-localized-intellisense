<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.IO.Compression.Brotli</name>
  </assembly>
  <members>
    <member name="T:System.IO.Compression.BrotliDecoder" />
    <member name="M:System.IO.Compression.BrotliDecoder.Decompress(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@,System.Int32@)">
      <param name="source" />
      <param name="destination" />
      <param name="bytesConsumed" />
      <param name="bytesWritten" />
    </member>
    <member name="M:System.IO.Compression.BrotliDecoder.Dispose" />
    <member name="M:System.IO.Compression.BrotliDecoder.TryDecompress(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@)">
      <param name="source" />
      <param name="destination" />
      <param name="bytesWritten" />
    </member>
    <member name="T:System.IO.Compression.BrotliEncoder" />
    <member name="M:System.IO.Compression.BrotliEncoder.#ctor(System.Int32,System.Int32)">
      <param name="quality" />
      <param name="window" />
    </member>
    <member name="M:System.IO.Compression.BrotliEncoder.Compress(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@,System.Int32@,System.Boolean)">
      <param name="source" />
      <param name="destination" />
      <param name="bytesConsumed" />
      <param name="bytesWritten" />
      <param name="isFinalBlock" />
    </member>
    <member name="M:System.IO.Compression.BrotliEncoder.Dispose" />
    <member name="M:System.IO.Compression.BrotliEncoder.Flush(System.Span{System.Byte},System.Int32@)">
      <param name="destination" />
      <param name="bytesWritten" />
    </member>
    <member name="M:System.IO.Compression.BrotliEncoder.GetMaxCompressedLength(System.Int32)">
      <param name="inputSize" />
    </member>
    <member name="M:System.IO.Compression.BrotliEncoder.TryCompress(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@)">
      <param name="source" />
      <param name="destination" />
      <param name="bytesWritten" />
    </member>
    <member name="M:System.IO.Compression.BrotliEncoder.TryCompress(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@,System.Int32,System.Int32)">
      <param name="source" />
      <param name="destination" />
      <param name="bytesWritten" />
      <param name="quality" />
      <param name="window" />
    </member>
    <member name="T:System.IO.Compression.BrotliStream">
      <summary>Fornisce i metodi e le proprietà usati per comprimere e decomprimere i flussi tramite la specifica del formato di dati Brotli.</summary>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.Compression.BrotliStream" /> usando il livello di compressione del flusso specificato.</summary>
      <param name="stream">Flusso da comprimere.</param>
      <param name="compressionLevel">Uno dei valori di enumerazione che indica se evidenziare l'efficacia di velocità o compressione quando si comprime il flusso.</param>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.Compression.BrotliStream" /> usando il livello di compressione del flusso specificato. Facoltativamente mantiene aperto il flusso.</summary>
      <param name="stream">Flusso da comprimere.</param>
      <param name="compressionLevel">Uno dei valori di enumerazione che indica se evidenziare l'efficacia di velocità o compressione quando si comprime il flusso.</param>
      <param name="leaveOpen">
        <see langword="true" /> per mantenere il flusso aperto dopo avere eliminato l'oggetto <see cref="T:System.IO.Compression.BrotliStream" />; in caso contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.Compression.BrotliStream" /> usando la modalità di compressione del flusso specificata.</summary>
      <param name="stream">Flusso da comprimere.</param>
      <param name="mode">Uno dei valori di enumerazione che indica se comprimere o decomprimere il flusso.</param>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.Compression.BrotliStream" /> usando la modalità di compressione del flusso specificata. Facoltativamente mantiene aperto il flusso.</summary>
      <param name="stream">Flusso da comprimere.</param>
      <param name="mode">Uno dei valori di enumerazione che indica se comprimere o decomprimere il flusso.</param>
      <param name="leaveOpen" />
    </member>
    <member name="P:System.IO.Compression.BrotliStream.BaseStream">
      <summary>Ottiene un riferimento al flusso sottostante.</summary>
      <returns>Oggetto flusso che rappresenta il flusso sottostante.</returns>
      <exception cref="T:System.ObjectDisposedException">Il flusso sottostante è chiuso.</exception>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Inizia un'operazione di lettura asincrona. (Si consiglia di usare il metodo <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />.)</summary>
      <param name="buffer">Buffer da cui verranno letti i dati.</param>
      <param name="offset">Offset dei byte in <paramref name="array" /> da cui iniziare la lettura dei dati dal flusso.</param>
      <param name="count">Numero massimo di byte da leggere.</param>
      <param name="asyncCallback">Callback asincrono facoltativo, da chiamare quando l'operazione di lettura è completa.</param>
      <param name="asyncState">Oggetto fornito dall'utente che distingue questa specifica richiesta di lettura asincrona da altre richieste.</param>
      <returns>Oggetto che rappresenta l'operazione di lettura asincrona, che può essere ancora in sospeso.</returns>
      <exception cref="T:System.IO.IOException">Il metodo ha tentato di leggere in modo asincrono oltre la fine del flusso o si è verificato un errore del disco.</exception>
      <exception cref="T:System.ArgumentException">Uno o più argomenti non sono validi.</exception>
      <exception cref="T:System.ObjectDisposedException">Sono stati chiamati dei metodi dopo la chiusura del flusso.</exception>
      <exception cref="T:System.NotSupportedException">L'implementazione corrente di <see cref="T:System.IO.Compression.BrotliStream" /> non supporta l'operazione di lettura.</exception>
      <exception cref="T:System.InvalidOperationException">Impossibile completare la chiamata.</exception>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Inizia un'operazione di scrittura asincrona. (Si consiglia di usare il metodo <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />.)</summary>
      <param name="buffer">Buffer da cui verranno scritti i dati.</param>
      <param name="offset">Offset dei byte in <paramref name="array" /> da cui iniziare la scrittura dei dati dal flusso.</param>
      <param name="count">Numero massimo di byte da scrivere.</param>
      <param name="asyncCallback">Callback asincrono facoltativo, da chiamare quando l'operazione di scrittura è completa.</param>
      <param name="asyncState">Oggetto fornito dall'utente che distingue questa specifica richiesta di scrittura asincrona da altre richieste.</param>
      <returns>Oggetto che rappresenta l'operazione di scrittura asincrona che può essere ancora in sospeso.</returns>
      <exception cref="T:System.IO.IOException">Il metodo ha tentato di scrivere in modo asincrono oltre la fine del flusso o si è verificato un errore del disco.</exception>
      <exception cref="T:System.ArgumentException">Uno o più argomenti non sono validi.</exception>
      <exception cref="T:System.ObjectDisposedException">Sono stati chiamati dei metodi dopo la chiusura del flusso.</exception>
      <exception cref="T:System.NotSupportedException">L'implementazione corrente di <see cref="T:System.IO.Compression.BrotliStream" /> non supporta l'operazione di scrittura.</exception>
      <exception cref="T:System.InvalidOperationException">Impossibile eseguire l'operazione di scrittura perché il flusso è chiuso.</exception>
    </member>
    <member name="P:System.IO.Compression.BrotliStream.CanRead">
      <summary>Ottiene un valore che indica se il flusso supporta la lettura durante la decompressione di un file.</summary>
      <returns>
        <see langword="true" /> se il valore di <see cref="T:System.IO.Compression.CompressionMode" /> è <see langword="Decompress," /> e il flusso sottostante non è chiuso e supporta la lettura; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.IO.Compression.BrotliStream.CanSeek">
      <summary>Ottiene un valore che indica se il flusso supporta la ricerca.</summary>
      <returns>
        <see langword="false" /> in tutti i casi.</returns>
    </member>
    <member name="P:System.IO.Compression.BrotliStream.CanWrite">
      <summary>Ottiene un valore che indica se il flusso supporta la scrittura.</summary>
      <returns>
        <see langword="true" /> se il valore di <see cref="T:System.IO.Compression.CompressionMode" /> è <see langword="Compress" /> e il flusso sottostante non è chiuso e supporta la scrittura; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.DisposeAsync">
      <summary>Consente di liberare in modo asincrono le risorse non gestite utilizzate da <see cref="T:System.IO.Compression.BrotliStream" />.</summary>
      <returns>Attività che rappresenta l'operazione di eliminazione asincrona.</returns>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.EndRead(System.IAsyncResult)">
      <summary>Attende il completamento della lettura asincrona in sospeso. (Si consiglia di usare il metodo <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />.)</summary>
      <param name="asyncResult">Riferimento alla richiesta asincrona in sospeso da completare.</param>
      <returns>Numero di byte letti dal flusso, tra 0 (zero) e il numero di byte richiesto. L'oggetto <see cref="T:System.IO.Compression.BrotliStream" /> restituisce 0 solo alla fine del flusso; in caso contrario, si blocca fino a quando non è disponibile almeno un byte.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> non è stato generato da un metodo <see cref="M:System.IO.Compression.BrotliStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> nel flusso corrente.</exception>
      <exception cref="T:System.InvalidOperationException">Non è possibile eseguire l'operazione finale perché il flusso è chiuso.</exception>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.EndWrite(System.IAsyncResult)">
      <summary>Gestisce la fine di un'operazione di scrittura asincrona. (Si consiglia di usare il metodo <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />.)</summary>
      <param name="asyncResult">Oggetto che rappresenta la chiamata asincrona.</param>
      <exception cref="T:System.InvalidOperationException">Il flusso sottostante è chiuso o <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.Flush">
      <summary>L'implementazione corrente di questo metodo non presenta alcuna funzionalità.</summary>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.FlushAsync(System.Threading.CancellationToken)">
      <summary>Cancella in modo asincrono i dati di tutti i buffer del flusso Brotli, determina la scrittura dei dati memorizzati nel buffer nel dispositivo sottostante e monitora le richieste di annullamento.</summary>
      <param name="cancellationToken">Token da monitorare per le richieste di annullamento. Il valore predefinito è <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Attività che rappresenta l'operazione di scaricamento asincrona.</returns>
    </member>
    <member name="P:System.IO.Compression.BrotliStream.Length">
      <summary>Questa proprietà non è supportata e genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <returns>Valore long.</returns>
      <exception cref="T:System.NotSupportedException">Questa proprietà non è supportata in questo flusso.</exception>
    </member>
    <member name="P:System.IO.Compression.BrotliStream.Position">
      <summary>Questa proprietà non è supportata e genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <returns>Valore long.</returns>
      <exception cref="T:System.NotSupportedException">Questa proprietà non è supportata in questo flusso.</exception>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>Legge un numero di byte decompressi nella matrice di byte specificata.</summary>
      <param name="buffer">Matrice usata per archiviare i byte decompressi.</param>
      <param name="offset">Offset dei byte in <paramref name="buffer" /> in corrispondenza del quale cui verranno inseriti i byte letti.</param>
      <param name="count">Numero massimo di byte decompressi da leggere.</param>
      <returns>Numero di byte decompressi nella matrice di byte. Se è stata raggiunta la fine del flusso, viene restituito zero o il numero di byte letto.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Il valore <see cref="T:System.IO.Compression.CompressionMode" /> era <see langword="Compress" /> al momento della creazione dell'oggetto oppure è già presente un'operazione asincrona attiva su questo flusso.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> o <paramref name="count" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException">La lunghezza di <paramref name="buffer" /> meno il punto iniziale dell'indice è minore di <paramref name="count" />.</exception>
      <exception cref="T:System.IO.InvalidDataException">Il formato dei dati non è valido.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso sottostante è Null o è chiuso.</exception>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.Read(System.Span{System.Byte})">
      <summary>Legge una sequenza di byte dal flusso Brotli corrente in un intervallo di byte e fa avanzare la posizione all'interno del flusso Brotli in base al numero di byte letti.</summary>
      <param name="buffer">Un'area di memoria. Quando questo metodo termina, il contenuto di quest'area viene sostituito dai byte letti dall'origine corrente.</param>
      <returns>Numero complessivo di byte letti nel buffer. È possibile che questo numero sia inferiore a quello dei byte allocati nel buffer se la quantità di byte disponibili è minore oppure che corrisponda a zero (0) se è stata raggiunta la fine del flusso.</returns>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>Legge in modo asincrono una sequenza di byte dal flusso Brotli corrente, li scrive in una matrice di byte iniziando in corrispondenza di un indice specificato, fa avanzare la posizione all'interno del flusso Brotli in base al numero di byte letti e monitora le richieste di annullamento.</summary>
      <param name="buffer">Buffer in cui scrivere i dati.</param>
      <param name="offset">Offset dei byte in <paramref name="buffer" /> da cui iniziare la scrittura dei dati dal flusso Brotli.</param>
      <param name="count">Numero massimo di byte da leggere.</param>
      <param name="cancellationToken">Token da monitorare per le richieste di annullamento. Il valore predefinito è <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Attività che rappresenta l'operazione di lettura asincrona e che esegue il wrapping del numero totale di byte letti in <paramref name="buffer" />. Il valore del risultato può essere minore del numero di byte richiesti se il numero di byte attualmente disponibili è minore di quelli richiesti o può essere pari a 0 (zero) se è stata raggiunta la fine del flusso Brotli.</returns>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <summary>Legge in modo asincrono una sequenza di byte dal flusso Brotli corrente, li scrive in un intervallo di memoria di byte, fa avanzare la posizione all'interno del flusso Brotli in base al numero di byte letti e monitora le richieste di annullamento.</summary>
      <param name="buffer">L'area di memoria su cui scrivere i dati.</param>
      <param name="cancellationToken">Token da monitorare per le richieste di annullamento. Il valore predefinito è <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Attività che rappresenta l'operazione di lettura asincrona e incapsula il numero totale di byte letti nel buffer. È possibile che il valore risultante sia inferiore al numero dei byte allocati nel buffer se la quantità di byte disponibili è minore oppure che corrisponda a zero (0) se è stata raggiunta la fine del flusso Brotli.</returns>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>Questa proprietà non è supportata e genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="offset">Posizione all'interno del flusso.</param>
      <param name="origin">Uno dei valori di <see cref="T:System.IO.SeekOrigin" />.</param>
      <returns>Valore long.</returns>
      <exception cref="T:System.NotSupportedException">Questa proprietà non è supportata in questo flusso.</exception>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.SetLength(System.Int64)">
      <summary>Questa proprietà non è supportata e genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="value">Lunghezza del flusso.</param>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>Scrive i byte compressi nel flusso sottostante dalla matrice di byte specificata.</summary>
      <param name="buffer">Buffer contenente i dati da comprimere.</param>
      <param name="offset">Offset dei byte in <paramref name="array" /> da cui verranno letti i byte.</param>
      <param name="count">Numero massimo di byte da scrivere.</param>
      <exception cref="T:System.ObjectDisposedException">Impossibile eseguire l'operazione di scrittura perché il flusso è chiuso.</exception>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.Write(System.ReadOnlySpan{System.Byte})">
      <summary>Scrive una sequenza di byte nel flusso Brotli corrente da un intervallo di byte di sola lettura e sposta in avanti la posizione corrente nel flusso Brotli in base al numero di byte scritti.</summary>
      <param name="buffer">Un'area di memoria. Questo metodo copia il contenuto di questa area nel flusso Brotli corrente.</param>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>Scrive in modo asincrono i byte compressi nel flusso Brotli sottostante dalla matrice di byte specificata.</summary>
      <param name="buffer">Buffer contenente i dati da comprimere.</param>
      <param name="offset">Offset dei byte in base zero in <paramref name="buffer" /> da cui iniziare la copia dei byte nel flusso Brotli.</param>
      <param name="count">Numero massimo di byte da scrivere.</param>
      <param name="cancellationToken">Token da monitorare per le richieste di annullamento. Il valore predefinito è <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Attività che rappresenta l'operazione di scrittura asincrona.</returns>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
      <summary>Scrive in modo asincrono i byte compressi nel flusso Brotli sottostante dall'intervallo di memoria di byte specificato.</summary>
      <param name="buffer">Area di memoria da cui scrivere i dati.</param>
      <param name="cancellationToken">Token da monitorare per le richieste di annullamento. Il valore predefinito è <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Attività che rappresenta l'operazione di scrittura asincrona.</returns>
    </member>
  </members>
</doc>