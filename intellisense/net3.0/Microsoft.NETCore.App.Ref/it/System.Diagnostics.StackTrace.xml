<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Diagnostics.StackTrace</name>
  </assembly>
  <members>
    <member name="T:System.Diagnostics.StackFrame">
      <summary>Fornisce informazioni su un oggetto <see cref="T:System.Diagnostics.StackFrame" /> che rappresenta una chiamata a una funzione sullo stack di chiamate per il thread corrente.</summary>
    </member>
    <member name="M:System.Diagnostics.StackFrame.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.StackFrame" />.</summary>
    </member>
    <member name="M:System.Diagnostics.StackFrame.#ctor(System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.StackFrame" /> acquisendo eventualmente informazioni sull'origine.</summary>
      <param name="fNeedFileInfo">
        <see langword="true" /> per acquisire il nome file, il numero della riga e il numero della colonna dello stack frame; in caso contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Diagnostics.StackFrame.#ctor(System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.StackFrame" /> che corrisponde a un frame sopra lo stack frame corrente.</summary>
      <param name="skipFrames">Numero di frame fino allo stack da ignorare.</param>
    </member>
    <member name="M:System.Diagnostics.StackFrame.#ctor(System.Int32,System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.StackFrame" /> che corrisponde a un frame sopra lo stack frame corrente, acquisendo facoltativamente informazioni sull'origine.</summary>
      <param name="skipFrames">Numero di frame fino allo stack da ignorare.</param>
      <param name="fNeedFileInfo">
        <see langword="true" /> per acquisire il nome file, il numero della riga e il numero della colonna dello stack frame; in caso contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Diagnostics.StackFrame.#ctor(System.String,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.StackFrame" /> che contiene solo il nome file e il numero di riga indicati.</summary>
      <param name="fileName">Nome file.</param>
      <param name="lineNumber">Numero della riga nel file specificato.</param>
    </member>
    <member name="M:System.Diagnostics.StackFrame.#ctor(System.String,System.Int32,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.StackFrame" /> che contiene solo il nome file, il numero di riga e il numero di colonna indicati.</summary>
      <param name="fileName">Nome file.</param>
      <param name="lineNumber">Numero della riga nel file specificato.</param>
      <param name="colNumber">Numero della colonna nel file specificato.</param>
    </member>
    <member name="M:System.Diagnostics.StackFrame.GetFileColumnNumber">
      <summary>Ottiene il numero della colonna nel file che contiene il codice in esecuzione. Le informazioni vengono generalmente estratte dai simboli di debug relativi al file eseguibile.</summary>
      <returns>Numero di colonna del file oppure 0 (zero) se non è possibile determinare il numero di colonna del file.</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrame.GetFileLineNumber">
      <summary>Ottiene il numero della riga nel file che contiene il codice in esecuzione. Le informazioni vengono generalmente estratte dai simboli di debug relativi al file eseguibile.</summary>
      <returns>Numero di riga del file oppure 0 (zero) se non è possibile determinare il numero di riga del file.</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrame.GetFileName">
      <summary>Ottiene il nome del file che contiene il codice in esecuzione. Le informazioni vengono generalmente estratte dai simboli di debug relativi al file eseguibile.</summary>
      <returns>Nome del file oppure <see langword="null" /> se non è possibile determinare il nome del file.</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrame.GetILOffset">
      <summary>Ottiene l'offset dall'inizio del codice MSIL (Microsoft Intermediate Language) per il metodo in esecuzione. Tale offset può essere approssimativo, in base al fatto che il compilatore JIT stia generando o meno un codice di debug. La generazione di queste informazioni di debug è controllata dall'elemento <see cref="T:System.Diagnostics.DebuggableAttribute" />.</summary>
      <returns>Offset dall'inizio del codice MSIL per il metodo in esecuzione.</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrame.GetMethod">
      <summary>Ottiene il metodo in cui è in esecuzione il frame.</summary>
      <returns>Metodo in cui è in esecuzione il frame.</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrame.GetNativeOffset">
      <summary>Ottiene l'offset dall'inizio del codice nativo compilato in modalità JIT (&amp;gt;Just-in-Time) per il metodo che è in esecuzione. La generazione di queste informazioni di debug è controllata dalla classe <see cref="T:System.Diagnostics.DebuggableAttribute" />.</summary>
      <returns>Offset dall'inizio del codice compilato in modalità JIT (Just-in-Time) per il metodo che è in esecuzione.</returns>
    </member>
    <member name="F:System.Diagnostics.StackFrame.OFFSET_UNKNOWN">
      <summary>Definisce il valore restituito dal metodo <see cref="M:System.Diagnostics.StackFrame.GetNativeOffset" /> o dal metodo <see cref="M:System.Diagnostics.StackFrame.GetILOffset" /> quando l'offset nativo o MSIL (Microsoft Intermediate Language) è sconosciuto. Questo campo è costante.</summary>
    </member>
    <member name="M:System.Diagnostics.StackFrame.ToString">
      <summary>Compila una rappresentazione leggibile dell'analisi dello stack.</summary>
      <returns>Rappresentazione leggibile dell'analisi dello stack.</returns>
    </member>
    <member name="T:System.Diagnostics.StackFrameExtensions">
      <summary>Offre metodi di estensione per la classe <see cref="T:System.Diagnostics.StackFrame" /> che rappresenta una chiamata a una funzione sullo stack di chiamate per il thread corrente.</summary>
    </member>
    <member name="M:System.Diagnostics.StackFrameExtensions.GetNativeImageBase(System.Diagnostics.StackFrame)">
      <summary>Restituisce un puntatore all'indirizzo di base dell'immagine nativa in esecuzione in questo stack frame.</summary>
      <param name="stackFrame">Uno stack frame.</param>
      <returns>Un puntatore all'indirizzo di base dell'immagine nativa o <see cref="F:System.IntPtr.Zero" /> se la destinazione scelta è .NET Framework.</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrameExtensions.GetNativeIP(System.Diagnostics.StackFrame)">
      <summary>Ottiene un puntatore di interfaccia per l'inizio del codice nativo per il metodo in esecuzione.</summary>
      <param name="stackFrame">Uno stack frame.</param>
      <returns>Un puntatore di interfaccia per l'inizio del codice nativo per il metodo in esecuzione o <see cref="F:System.IntPtr.Zero" /> se la destinazione scelta è .NET Framework.</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrameExtensions.HasILOffset(System.Diagnostics.StackFrame)">
      <summary>Indica se è disponibile un offset dall'inizio del codice IL per il metodo in esecuzione.</summary>
      <param name="stackFrame">Uno stack frame.</param>
      <returns>
        <see langword="true" /> se l'offset è disponibile; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrameExtensions.HasMethod(System.Diagnostics.StackFrame)">
      <summary>Indica se sono disponibili informazioni sul metodo in cui è in esecuzione il frame specificato.</summary>
      <param name="stackFrame">Uno stack frame.</param>
      <returns>
        <see langword="true" /> se sono disponibili informazioni sul metodo in cui è in esecuzione il frame corrente. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrameExtensions.HasNativeImage(System.Diagnostics.StackFrame)">
      <summary>Indica se l'immagine nativa è disponibile per lo stack frame specificato.</summary>
      <param name="stackFrame">Uno stack frame.</param>
      <returns>
        <see langword="true" /> se un'immagine nativa è disponibile per lo stack frame; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrameExtensions.HasSource(System.Diagnostics.StackFrame)">
      <summary>Indica se il file che contiene il codice che è in esecuzione nello stack frame specificato è disponibile.</summary>
      <param name="stackFrame">Uno stack frame.</param>
      <returns>
        <see langword="true" /> se il codice che è in esecuzione nello stack frame specificato è disponibile. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Diagnostics.StackTrace">
      <summary>Rappresenta un'analisi dello stack, vale a dire una raccolta ordinata di uno o più stack frame.</summary>
    </member>
    <member name="M:System.Diagnostics.StackTrace.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.StackTrace" /> dal frame del chiamante.</summary>
    </member>
    <member name="M:System.Diagnostics.StackTrace.#ctor(System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.StackTrace" /> dal frame del chiamante, acquisendo facoltativamente informazioni sull'origine.</summary>
      <param name="fNeedFileInfo">
        <see langword="true" /> per acquisire nome file, numero di riga e numero di colonna; in caso contrario <see langword="false" />.</param>
    </member>
    <member name="M:System.Diagnostics.StackTrace.#ctor(System.Diagnostics.StackFrame)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.Diagnostics.StackTrace" /> che contiene un solo frame.</summary>
      <param name="frame">Frame che l'oggetto <see cref="T:System.Diagnostics.StackTrace" /> deve contenere.</param>
    </member>
    <member name="M:System.Diagnostics.StackTrace.#ctor(System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.StackTrace" /> utilizzando l'oggetto eccezione fornito.</summary>
      <param name="e">Oggetto eccezione dal quale creare l'analisi dello stack.</param>
      <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="e" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.StackTrace" />, utilizzando l'oggetto eccezione fornito e facoltativamente acquisendo informazioni sull'origine.</summary>
      <param name="exception">Oggetto eccezione dal quale creare l'analisi dello stack.</param>
      <param name="needFileInfo">
        <see langword="true" /> per acquisire nome file, numero di riga e numero di colonna; in caso contrario <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="e" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.StackTrace" /> utilizzando l'oggetto eccezione fornito e ignorando il numero di frame specificato.</summary>
      <param name="e">Oggetto eccezione dal quale creare l'analisi dello stack.</param>
      <param name="skipFrames">Numero di frame dello stack da cui iniziare la traccia.</param>
      <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="e" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="skipFrames" /> è negativo.</exception>
    </member>
    <member name="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32,System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.StackTrace" /> utilizzando l'oggetto eccezione fornito, ignorando il numero di frame specificato ed eventualmente acquisendo le informazioni sull'origine.</summary>
      <param name="e">Oggetto eccezione dal quale creare l'analisi dello stack.</param>
      <param name="skipFrames">Numero di frame dello stack da cui iniziare la traccia.</param>
      <param name="fNeedFileInfo">
        <see langword="true" /> per acquisire nome file, numero di riga e numero di colonna; in caso contrario <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="e" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="skipFrames" /> è negativo.</exception>
    </member>
    <member name="M:System.Diagnostics.StackTrace.#ctor(System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.StackTrace" /> dal frame del chiamante, ignorando il numero di frame specificato.</summary>
      <param name="skipFrames">Numero di frame dello stack da cui iniziare la traccia.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="skipFrames" /> è negativo.</exception>
    </member>
    <member name="M:System.Diagnostics.StackTrace.#ctor(System.Int32,System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.StackTrace" /> dal frame del chiamante, ignorando il numero di frame specificato ed eventualmente acquisendo le informazioni sull'origine.</summary>
      <param name="skipFrames">Numero di frame dello stack da cui iniziare la traccia.</param>
      <param name="fNeedFileInfo">
        <see langword="true" /> per acquisire nome file, numero di riga e numero di colonna; in caso contrario <see langword="false" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="skipFrames" /> è negativo.</exception>
    </member>
    <member name="P:System.Diagnostics.StackTrace.FrameCount">
      <summary>Ottiene il numero di frame nell'analisi dello stack.</summary>
      <returns>Numero di frame nell'analisi dello stack.</returns>
    </member>
    <member name="M:System.Diagnostics.StackTrace.GetFrame(System.Int32)">
      <summary>Ottiene lo stack frame specificato.</summary>
      <param name="index">Indice dello stack frame richiesto.</param>
      <returns>Stack frame specificato.</returns>
    </member>
    <member name="M:System.Diagnostics.StackTrace.GetFrames">
      <summary>Restituisce una copia di tutti gli stack frame nella traccia corrente dello stack.</summary>
      <returns>Matrice di tipo <see cref="T:System.Diagnostics.StackFrame" /> che rappresenta le chiamate di funzioni nella traccia dello stack.</returns>
    </member>
    <member name="F:System.Diagnostics.StackTrace.METHODS_TO_SKIP">
      <summary>Definisce l'impostazione predefinita per il numero di metodi da omettere dall'analisi dello stack. Questo campo è costante.</summary>
    </member>
    <member name="M:System.Diagnostics.StackTrace.ToString">
      <summary>Compila una rappresentazione leggibile dell'analisi dello stack.</summary>
      <returns>Rappresentazione leggibile dell'analisi dello stack.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolBinder">
      <summary>Rappresenta un raccoglitore di simboli per codice gestito.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolBinder.GetReader(System.Int32,System.String,System.String)">
      <summary>Recupera l'interfaccia del visualizzatore dei simboli per il file corrente.</summary>
      <param name="importer">Interfaccia di importazione dei metadati.</param>
      <param name="filename">Nome del file per cui è richiesta l'interfaccia del visualizzatore.</param>
      <param name="searchPath">Percorso di ricerca utilizzato per rilevare il file di simboli.</param>
      <returns>Interfaccia <see cref="T:System.Diagnostics.SymbolStore.ISymbolReader" /> in cui è possibile leggere i simboli di debug.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolBinder1">
      <summary>Rappresenta un raccoglitore di simboli per codice gestito.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolBinder1.GetReader(System.IntPtr,System.String,System.String)">
      <summary>Recupera l'interfaccia del visualizzatore dei simboli per il file corrente.</summary>
      <param name="importer">Struttura <see cref="T:System.IntPtr" /> che fa riferimento all'interfaccia di importazione dei metadati.</param>
      <param name="filename">Nome del file per cui è richiesta l'interfaccia del visualizzatore.</param>
      <param name="searchPath">Percorso di ricerca utilizzato per rilevare il file di simboli.</param>
      <returns>Interfaccia <see cref="T:System.Diagnostics.SymbolStore.ISymbolReader" /> in cui è possibile leggere i simboli di debug.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolDocument">
      <summary>Rappresenta un documento al quale fa riferimento un archivio di simboli.</summary>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolDocument.CheckSumAlgorithmId">
      <summary>Recupera l'identificatore dell'algoritmo di checksum.</summary>
      <returns>GUID identificativo dell'algoritmo di checksum. Saranno tutti valori zero, se non sono presenti checksum.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolDocument.DocumentType">
      <summary>Recupera il tipo del documento corrente.</summary>
      <returns>Tipo di documento corrente.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolDocument.FindClosestLine(System.Int32)">
      <summary>Restituisce la riga più vicina che rappresenta un punto di sequenza, data una riga del documento corrente che può o essere o meno un punto di sequenza.</summary>
      <param name="line">Riga specificata nel documento.</param>
      <returns>Riga più vicina che rappresenta un punto di sequenza.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolDocument.GetCheckSum">
      <summary>Ottiene il checksum.</summary>
      <returns>Checksum.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolDocument.GetSourceRange(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Recupera l'origine del documento incorporato per l'intervallo specificato.</summary>
      <param name="startLine">Riga iniziale del documento corrente.</param>
      <param name="startColumn">Colonna iniziale del documento corrente.</param>
      <param name="endLine">Riga finale del documento corrente.</param>
      <param name="endColumn">Colonna finale del documento corrente.</param>
      <returns>Origine del documento relativa all'intervallo specificato.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolDocument.HasEmbeddedSource">
      <summary>Verifica se il documento corrente è memorizzato nell'archivio simboli.</summary>
      <returns>
        <see langword="true" /> se il documento corrente è memorizzato nell'archivio di simboli, <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolDocument.Language">
      <summary>Recupera il linguaggio del documento corrente.</summary>
      <returns>Linguaggio del documento corrente.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolDocument.LanguageVendor">
      <summary>Recupera il fornitore di linguaggio del documento corrente.</summary>
      <returns>Fornitore di linguaggio del documento corrente.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolDocument.SourceLength">
      <summary>Recupera la lunghezza, in byte, dell'origine incorporata.</summary>
      <returns>Lunghezza di origine del documento corrente.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolDocument.URL">
      <summary>Ottiene l'URL del documento corrente.</summary>
      <returns>URL del documento corrente.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolDocumentWriter">
      <summary>Rappresenta un documento al quale fa riferimento un archivio di simboli.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolDocumentWriter.SetCheckSum(System.Guid,System.Byte[])">
      <summary>Imposta le informazioni di checksum.</summary>
      <param name="algorithmId">GUID che rappresenta l'ID dell'algoritmo.</param>
      <param name="checkSum">Checksum.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolDocumentWriter.SetSource(System.Byte[])">
      <summary>Archivia l'origine non elaborata di un documento nell'archivio dei simboli.</summary>
      <param name="source">Origine del documento rappresentata come byte senza segno.</param>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolMethod">
      <summary>Rappresenta un metodo all'interno di un archivio simboli.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolMethod.GetNamespace">
      <summary>Recupera lo spazio dei nomi in cui è definito il metodo corrente.</summary>
      <returns>Spazio dei nomi in cui è definito il metodo corrente.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolMethod.GetOffset(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)">
      <summary>Recupera l'offset MSIL (Microsoft Intermediate Language) all'interno del metodo che corrisponde alla posizione specificata.</summary>
      <param name="document">Documento per cui è richiesto l'offset.</param>
      <param name="line">Riga del documento corrispondente all'offset.</param>
      <param name="column">Colonna del documento corrispondente all'offset.</param>
      <returns>Offset interno al documento specificato.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolMethod.GetParameters">
      <summary>Recupera i parametri per il metodo corrente.</summary>
      <returns>Matrice di parametri per il metodo corrente.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolMethod.GetRanges(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)">
      <summary>Recupera una matrice di coppie di offset di inizio e di fine corrispondente agli intervalli MSIL (Microsoft Intermediate Language) relativi a una data posizione all'interno del metodo.</summary>
      <param name="document">Documento per cui è richiesto l'offset.</param>
      <param name="line">Riga del documento corrispondente agli intervalli.</param>
      <param name="column">Colonna del documento corrispondente agli intervalli.</param>
      <returns>Matrice delle coppie di offset di inizio e di fine.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolMethod.GetScope(System.Int32)">
      <summary>Restituisce l'ambito lessicale di maggiore inclusione quando viene specificato un offset all'interno di un metodo.</summary>
      <param name="offset">Offset di byte all'interno del metodo dell'ambito lessicale.</param>
      <returns>Ambito lessicale di maggiore inclusione per l'offset di byte specificato all'interno del metodo.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolMethod.GetSequencePoints(System.Int32[],System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
      <summary>Recupera i punti di sequenza per il metodo corrente.</summary>
      <param name="offsets">Matrice degli offset di byte a partire dall'inizio del metodo per i punti di sequenza.</param>
      <param name="documents">Matrice di documenti in cui sono posizionati i punti di sequenza.</param>
      <param name="lines">Matrice di righe dei documenti in cui sono posizionati i punti di sequenza.</param>
      <param name="columns">Matrice di colonne dei documenti in cui sono posizionati i punti di sequenza.</param>
      <param name="endLines">Matrice di righe dei documenti in cui terminano i punti di sequenza.</param>
      <param name="endColumns">Matrice di colonne dei documenti in cui terminano i punti di sequenza.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolMethod.GetSourceStartEnd(System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[])">
      <summary>Recupera la posizione iniziale e finale dell'origine del metodo corrente.</summary>
      <param name="docs">Documenti di origine iniziali e finali.</param>
      <param name="lines">Righe iniziali e finali dei documenti di origine corrispondenti.</param>
      <param name="columns">Colonne iniziali e finali dei documenti di origine corrispondenti.</param>
      <returns>
        <see langword="true" /> se le posizioni sono definite, <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolMethod.RootScope">
      <summary>Recupera l'ambito lessicale di primo livello per il metodo corrente. Questo ambito racchiude l'intero metodo.</summary>
      <returns>Ambito lessicale di primo livello che racchiude l'intero metodo.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount">
      <summary>Recupera il conteggio dei punti di sequenza nel metodo.</summary>
      <returns>Conteggio dei punti di sequenza nel metodo.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolMethod.Token">
      <summary>Recupera la proprietà <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" /> contenente i metadati per il metodo corrente.</summary>
      <returns>Token di metadati per il metodo corrente.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolNamespace">
      <summary>Rappresenta uno spazio dei nomi all'interno di un archivio simboli.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolNamespace.GetNamespaces">
      <summary>Recupera i membri figlio dello spazio dei nomi corrente.</summary>
      <returns>Membri figlio dello spazio dei nomi corrente.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolNamespace.GetVariables">
      <summary>Ottiene tutte le variabili definite in ambito globale all'interno dello spazio dei nomi corrente.</summary>
      <returns>Variabili definite in ambito globale all'interno dello spazio dei nomi corrente.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolNamespace.Name">
      <summary>Ottiene lo spazio dei nomi corrente.</summary>
      <returns>Spazio dei nomi corrente.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolReader">
      <summary>Rappresenta un visualizzatore dei simboli per codice gestito.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolReader.GetDocument(System.String,System.Guid,System.Guid,System.Guid)">
      <summary>Ottiene un documento specificato in base al linguaggio, al fornitore e al tipo.</summary>
      <param name="url">URL identificativo del documento.</param>
      <param name="language">Linguaggio del documento. È possibile specificare questo parametro come <see cref="F:System.Guid.Empty" />.</param>
      <param name="languageVendor">Identità del fornitore del linguaggio del documento. È possibile specificare questo parametro come <see cref="F:System.Guid.Empty" />.</param>
      <param name="documentType">Tipo del documento. È possibile specificare questo parametro come <see cref="F:System.Guid.Empty" />.</param>
      <returns>Documento specificato.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolReader.GetDocuments">
      <summary>Recupera una matrice di tutti i documenti definiti nell'archivio simboli.</summary>
      <returns>Matrice di tutti i documenti definiti nell'archivio simboli.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolReader.GetGlobalVariables">
      <summary>Ottiene tutte le variabili globali del modulo.</summary>
      <returns>Matrice di tutte le variabili del modulo.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken)">
      <summary>Recupera un oggetto del metodo del lettore di simboli, quando viene specificato l'identificatore di un metodo.</summary>
      <param name="method">Token di metadati del metodo.</param>
      <returns>Oggetto del metodo del lettore di simboli dell'identificatore del metodo specificato.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken,System.Int32)">
      <summary>Recupera un oggetto del metodo del lettore di simboli, quando viene specificato l'identificatore di un metodo e la versione continua e di modifica.</summary>
      <param name="method">Token di metadati del metodo.</param>
      <param name="version">Versione continua e di modifica del metodo.</param>
      <returns>Oggetto del metodo del lettore di simboli dell'identificatore del metodo specificato.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolReader.GetMethodFromDocumentPosition(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)">
      <summary>Recupera un oggetto del metodo del lettore di simboli che contiene una posizione specificata in un documento.</summary>
      <param name="document">Documento in cui è contenuto il metodo.</param>
      <param name="line">Posizione della riga all'interno del documento. Le righe sono numerate, partendo da 1.</param>
      <param name="column">Posizione della colonna all'interno del documento. Le colonne sono numerate, partendo da 1.</param>
      <returns>Oggetto del metodo del lettore relativo alla posizione specificata nel documento.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolReader.GetNamespaces">
      <summary>Recupera gli spazi dei nomi definiti nell'ambito globale all'interno dell'archivio simboli corrente.</summary>
      <returns>Spazi dei nomi definiti nell'ambito globale all'interno dell'archivio simboli corrente.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolReader.GetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String)">
      <summary>Recupera un valore di attributo quando viene specificato il nome dell'attributo.</summary>
      <param name="parent">Token di metadati dell'oggetto per cui è richiesto l'attributo.</param>
      <param name="name">Nome dell'attributo.</param>
      <returns>Valore dell'attributo.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolReader.GetVariables(System.Diagnostics.SymbolStore.SymbolToken)">
      <summary>Recupera le variabili che non sono locali, quando viene specificato l'elemento padre.</summary>
      <param name="parent">Token di metadati relativo al tipo per cui sono richieste le variabili.</param>
      <returns>Matrice di variabili relative all'elemento padre.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolReader.UserEntryPoint">
      <summary>Recupera il token di metadati per il metodo specificato come punto di ingresso utente per il modulo, se presente.</summary>
      <returns>Token di metadati per il metodo che corrisponde al punto di ingresso dell'utente per il modulo.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolScope">
      <summary>Rappresenta un ambito lessicale in <see cref="T:System.Diagnostics.SymbolStore.ISymbolMethod" /> che consente di accedere agli offset iniziali e finali dell'ambito, nonché ai relativi ambiti padre e figlio.</summary>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolScope.EndOffset">
      <summary>Recupera l'offset finale dell'ambito lessicale corrente.</summary>
      <returns>Offset finale dell'ambito lessicale corrente.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolScope.GetChildren">
      <summary>Recupera gli ambiti lessicali figlio dell'ambito corrente.</summary>
      <returns>Ambiti lessicali figlio dell'ambito lessicale corrente.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolScope.GetLocals">
      <summary>Recupera le variabili locali all'interno dell'ambito lessicale corrente.</summary>
      <returns>Variabili locali dell'ambito lessicale corrente.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolScope.GetNamespaces">
      <summary>Recupera gli spazi dei nomi utilizzati nell'ambito corrente.</summary>
      <returns>Spazi dei nomi utilizzati nell'ambito corrente.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolScope.Method">
      <summary>Recupera il metodo che contiene l'ambito lessicale corrente.</summary>
      <returns>Metodo contenente l'ambito lessicale corrente.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolScope.Parent">
      <summary>Recupera l'ambito lessicale padre dell'ambito corrente.</summary>
      <returns>Ambito lessicale padre dell'ambito corrente.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolScope.StartOffset">
      <summary>Recupera l'offset iniziale dell'ambito lessicale corrente.</summary>
      <returns>Offset iniziale dell'ambito lessicale corrente.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolVariable">
      <summary>Rappresenta una variabile all'interno di un archivio simboli.</summary>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolVariable.AddressField1">
      <summary>Recupera il primo indirizzo della variabile.</summary>
      <returns>Primo indirizzo della variabile.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolVariable.AddressField2">
      <summary>Recupera il secondo indirizzo della variabile.</summary>
      <returns>Secondo indirizzo della variabile.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolVariable.AddressField3">
      <summary>Recupera il terzo indirizzo della variabile.</summary>
      <returns>Terzo indirizzo della variabile.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolVariable.AddressKind">
      <summary>Recupera il valore <see cref="T:System.Diagnostics.SymbolStore.SymAddressKind" /> descrittivo del tipo dell'indirizzo.</summary>
      <returns>Tipo dell'indirizzo. Uno dei valori di <see cref="T:System.Diagnostics.SymbolStore.SymAddressKind" />.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolVariable.Attributes">
      <summary>Ottiene gli attributi della variabile.</summary>
      <returns>Attributi di variabile.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolVariable.EndOffset">
      <summary>Recupera l'offset finale della variabile all'interno dell'ambito della variabile.</summary>
      <returns>Offset finale della variabile.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolVariable.GetSignature">
      <summary>Ottiene la firma di variabile.</summary>
      <returns>Firma di variabile come blob opaco.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolVariable.Name">
      <summary>Ottiene il nome della variabile.</summary>
      <returns>Nome della variabile.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolVariable.StartOffset">
      <summary>Recupera l'offset iniziale della variabile all'interno dell'ambito della variabile.</summary>
      <returns>Offset iniziale della variabile.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolWriter">
      <summary>Rappresenta un writer di simboli per codice gestito.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.Close">
      <summary>Chiude <see cref="T:System.Diagnostics.SymbolStore.ISymbolWriter" /> e inserisce i simboli nel relativo archivio.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseMethod">
      <summary>Chiude il metodo corrente.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseNamespace">
      <summary>Chiude l'ultimo spazio dei nomi aperto.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseScope(System.Int32)">
      <summary>Chiude l'ambito lessicale corrente.</summary>
      <param name="endOffset">Punti successivi all'ultima istruzione nell'ambito.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)">
      <summary>Definisce un documento di origine.</summary>
      <param name="url">URL identificativo del documento.</param>
      <param name="language">Linguaggio del documento. Questo parametro può essere <see cref="F:System.Guid.Empty" />.</param>
      <param name="languageVendor">Identità del fornitore del linguaggio del documento. Questo parametro può essere <see cref="F:System.Guid.Empty" />.</param>
      <param name="documentType">Tipo del documento. Questo parametro può essere <see cref="F:System.Guid.Empty" />.</param>
      <returns>Oggetto che rappresenta il documento.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
      <summary>Definisce un campo in un tipo o in un campo globale.</summary>
      <param name="parent">Tipo di metadati o token di metodo.</param>
      <param name="name">Nome del campo.</param>
      <param name="attributes">Combinazione bit per bit degli attributi del campo.</param>
      <param name="signature">Firma di campo.</param>
      <param name="addrKind">Tipi di indirizzo per <paramref name="addr1" /> e <paramref name="addr2" />.</param>
      <param name="addr1">Primo indirizzo relativo al campo specificato.</param>
      <param name="addr2">Secondo indirizzo relativo al campo specificato.</param>
      <param name="addr3">Terzo indirizzo relativo al campo specificato.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
      <summary>Definisce una variabile globale singola.</summary>
      <param name="name">Nome della variabile globale.</param>
      <param name="attributes">Una combinazione bit per bit degli attributi della variabile globale.</param>
      <param name="signature">Firma della variabile globale.</param>
      <param name="addrKind">Tipi di indirizzo per <paramref name="addr1" />, <paramref name="addr2" /> e <paramref name="addr3" />.</param>
      <param name="addr1">Primo indirizzo relativo alla variabile globale specificata.</param>
      <param name="addr2">Secondo indirizzo relativo alla variabile globale specificata.</param>
      <param name="addr3">Terzo indirizzo relativo alla variabile globale specificata.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Definisce una singola variabile nell'ambito lessicale corrente.</summary>
      <param name="name">Nome della variabile locale.</param>
      <param name="attributes">Una combinazione bit per bit degli attributi della variabile locale.</param>
      <param name="signature">Firma della variabile locale.</param>
      <param name="addrKind">Tipi di indirizzo per <paramref name="addr1" />, <paramref name="addr2" /> e <paramref name="addr3" />.</param>
      <param name="addr1">Primo indirizzo relativo alla variabile locale specificata.</param>
      <param name="addr2">Secondo indirizzo relativo alla variabile locale specificata.</param>
      <param name="addr3">Terzo indirizzo relativo alla variabile locale specificata.</param>
      <param name="startOffset">Offset iniziale della variabile. Se questo parametro è uguale a zero, viene ignorato e la variabile viene definita nell'intero ambito. Se il parametro è diverso da zero, la variabile rientra negli offset dell'ambito corrente.</param>
      <param name="endOffset">Offset finale della variabile. Se questo parametro è uguale a zero, viene ignorato e la variabile viene definita nell'intero ambito. Se il parametro è diverso da zero, la variabile rientra negli offset dell'ambito corrente.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
      <summary>Definisce un singolo parametro nel metodo corrente. Il tipo di ciascun parametro viene individuato in base alla posizione occupata all'interno della firma del metodo.</summary>
      <param name="name">Nome del parametro.</param>
      <param name="attributes">Combinazione bit per bit degli attributi del parametro.</param>
      <param name="sequence">Firma del parametro.</param>
      <param name="addrKind">Tipi di indirizzo per <paramref name="addr1" />, <paramref name="addr2" /> e <paramref name="addr3" />.</param>
      <param name="addr1">Primo indirizzo relativo al parametro specificato.</param>
      <param name="addr2">Secondo indirizzo relativo al parametro specificato.</param>
      <param name="addr3">Terzo indirizzo relativo al parametro specificato.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
      <summary>Definisce un gruppo di punti di sequenza nel metodo corrente.</summary>
      <param name="document">Oggetto del documento per il quale definire i punti di sequenza.</param>
      <param name="offsets">Offset del punto di sequenza misurati dall'inizio dei metodi.</param>
      <param name="lines">Righe del documento per i punti di sequenza.</param>
      <param name="columns">Posizioni del documento per i punti di sequenza.</param>
      <param name="endLines">Righe finali del documento per i punti di sequenza.</param>
      <param name="endColumns">Posizioni finali del documento per i punti di sequenza.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.Initialize(System.IntPtr,System.String,System.Boolean)">
      <summary>Imposta l'interfaccia di emissione dei metadati da associare a un writer.</summary>
      <param name="emitter">Interfaccia di emissione dei metadati.</param>
      <param name="filename">Nome del file per il quale vengono scritti i simboli di debug. Per alcuni writer è richiesto un nome file, per altri questo parametro non è necessario. Se specificato per un writer che non usa i nomi file, il parametro sarà ignorato.</param>
      <param name="fFullBuild">
        <see langword="true" /> indica una ricompilazione completa, <see langword="false" /> indica che si tratta di una compilazione incrementale.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)">
      <summary>Apre un metodo in cui immettere informazioni sui simboli.</summary>
      <param name="method">Token di metadati per il metodo da aprire.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenNamespace(System.String)">
      <summary>Apre un nuovo spazio dei nomi.</summary>
      <param name="name">Nome del nuovo spazio dei nomi.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)">
      <summary>Apre un nuovo ambito lessicale nel metodo corrente.</summary>
      <param name="startOffset">Offset, in byte, dall'inizio del metodo alla prima istruzione dell'ambito lessicale.</param>
      <returns>Identificatore di ambito opaco che può essere utilizzato con il metodo <see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)" /> per definire gli offset iniziali e finali di un ambito successivamente. In questo caso, gli offset passati a <see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)" /> e <see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseScope(System.Int32)" /> saranno ignorati. Un identificatore di ambito è valido solo nel metodo corrente.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)">
      <summary>Specifica l'inizio e la fine effettivi di un metodo in un file di origine. Utilizzare <see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)" /> per specificare l'estensione di un metodo, indipendente dai punti di sequenza del metodo.</summary>
      <param name="startDoc">Documento che contiene la posizione iniziale.</param>
      <param name="startLine">Numero della riga iniziale.</param>
      <param name="startColumn">Colonna iniziale.</param>
      <param name="endDoc">Documento che contiene la posizione finale.</param>
      <param name="endLine">Numero della riga finale.</param>
      <param name="endColumn">Numero della colonna finale.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)">
      <summary>Definisce l'intervallo di offset per l'ambito lessicale specificato.</summary>
      <param name="scopeID">Identificatore dell'ambito lessicale.</param>
      <param name="startOffset">Offset di byte dell'inizio dell'ambito lessicale.</param>
      <param name="endOffset">Offset di byte della fine dell'ambito lessicale.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])">
      <summary>Definisce un attributo, quando vengono specificati il nome e il valore dell'attributo.</summary>
      <param name="parent">Token di metadati per il quale definire l'attributo.</param>
      <param name="name">Nome dell'attributo.</param>
      <param name="data">Valore dell'attributo.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetUnderlyingWriter(System.IntPtr)">
      <summary>Imposta l'oggetto <see langword="ISymUnmanagedWriter" /> sottostante (la corrispondente interfaccia non gestita) utilizzata dall'oggetto <see cref="T:System.Diagnostics.SymbolStore.ISymbolWriter" /> gestito per emettere i simboli.</summary>
      <param name="underlyingWriter">Puntatore al codice che rappresenta il writer sottostante.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetUserEntryPoint(System.Diagnostics.SymbolStore.SymbolToken)">
      <summary>Identifica il metodo definito dall'utente come punto di ingresso per il modulo corrente.</summary>
      <param name="entryMethod">Token di metadati per il metodo che corrisponde al punto di ingresso dell'utente.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.UsingNamespace(System.String)">
      <summary>Specifica che il nome dello spazio dei nomi completo viene utilizzato all'interno dell'ambito lessicale aperto.</summary>
      <param name="fullName">Nome completo dello spazio dei nomi.</param>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.SymAddressKind">
      <summary>Specifica i tipi di indirizzo per le variabili locali, i parametri e i campi nei metodi <see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />, <see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)" /> e <see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)" /> dell'interfaccia <see cref="T:System.Diagnostics.SymbolStore.ISymbolWriter" />.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.BitField">
      <summary>Campo di bit. Il parametro <paramref name="addr1" /> è il punto in cui inizia il campo, mentre il parametro <paramref name="addr2" /> è la lunghezza del campo.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.ILOffset">
      <summary>Offset MSIL (Microsoft Intermediate Language). Il parametro <paramref name="addr1" /> è la variabile locale MSIL o l'indice di parametro.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.NativeOffset">
      <summary>Offset nativo. Il parametro <paramref name="addr1" /> è l'offset all'inizio dell'elemento padre.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.NativeRegister">
      <summary>Indirizzo di registro nativo. Il parametro <paramref name="addr1" /> è il registro in cui è memorizzata la variabile.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.NativeRegisterRegister">
      <summary>Indirizzo relativo al registro. Il parametro <paramref name="addr1" /> è il registro di basso livello, mentre il parametro <paramref name="addr2" /> è il registro di alto livello.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.NativeRegisterRelative">
      <summary>Indirizzo relativo al registro. Il parametro <paramref name="addr1" /> è il registro e il parametro <paramref name="addr2" /> è l'offset.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.NativeRegisterStack">
      <summary>Indirizzo relativo al registro. Il parametro <paramref name="addr1" /> è il registro di basso livello, il parametro <paramref name="addr2" /> è lo stack di registri e il parametro <paramref name="addr3" /> è l'offset dal puntatore dello stack alla parte più significativa del valore.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.NativeRVA">
      <summary>RVA (Relevant Virtual Address) nativo. Il parametro <paramref name="addr1" /> è l'RVA del modulo.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.NativeSectionOffset">
      <summary>Offset di sezione nativo. Il parametro <paramref name="addr1" /> è la sezione, mentre il parametro <paramref name="addr2" /> è l'offset.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.NativeStackRegister">
      <summary>Indirizzo relativo al registro. Il parametro <paramref name="addr1" /> è lo stack di registri, il parametro <paramref name="addr2" /> è l'offset dal puntatore dello stack alla parte meno significativa del valore e il parametro <paramref name="addr3" /> è il registro di alto livello.</summary>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.SymbolToken">
      <summary>La struttura <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" /> è una rappresentazione in forma di oggetto di un token che indica informazioni sui simboli.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymbolToken.#ctor(System.Int32)">
      <summary>Inizializza una nuova istanza della struttura <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" /> per un valore specificato.</summary>
      <param name="val">Valore utilizzato per il token.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymbolToken.Equals(System.Diagnostics.SymbolStore.SymbolToken)">
      <summary>Determina se l'oggetto <paramref name="obj" /> è uguale all'istanza.</summary>
      <param name="obj">Oggetto <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" /> da verificare.</param>
      <returns>
        <see langword="true" /> se <paramref name="obj" /> è uguale all'istanza; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymbolToken.Equals(System.Object)">
      <summary>Determina se <paramref name="obj" /> è un'istanza di <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" /> e se è uguale all'istanza.</summary>
      <param name="obj">Oggetto da controllare.</param>
      <returns>
        <see langword="true" /> se <paramref name="obj" /> è un'istanza di <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" /> e se è uguale all'istanza, <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymbolToken.GetHashCode">
      <summary>Genera il codice hash per il token corrente.</summary>
      <returns>Codice hash per il token corrente.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymbolToken.GetToken">
      <summary>Ottiene il valore del token corrente.</summary>
      <returns>Valore del token corrente.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymbolToken.op_Equality(System.Diagnostics.SymbolStore.SymbolToken,System.Diagnostics.SymbolStore.SymbolToken)">
      <summary>Restituisce un valore che indica se due oggetti <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" /> sono equivalenti.</summary>
      <param name="a">Struttura <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" />.</param>
      <param name="b">Struttura <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" />.</param>
      <returns>
        <see langword="true" /> se <paramref name="a" /> e <paramref name="b" /> sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymbolToken.op_Inequality(System.Diagnostics.SymbolStore.SymbolToken,System.Diagnostics.SymbolStore.SymbolToken)">
      <summary>Restituisce un valore che indica se due oggetti <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" /> non sono equivalenti.</summary>
      <param name="a">Struttura <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" />.</param>
      <param name="b">Struttura <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" />.</param>
      <returns>
        <see langword="true" /> se <paramref name="a" /> e <paramref name="b" /> non sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.SymDocumentType">
      <summary>Contiene i GUID pubblici per i tipi di documento da utilizzare con l'archivio dei simboli.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymDocumentType.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.SymbolStore.SymDocumentType" />.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymDocumentType.Text">
      <summary>Specifica il GUID del tipo di documento da utilizzare con l'archivio dei simboli.</summary>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.SymLanguageType">
      <summary>Contiene i GUID pubblici per i tipi di linguaggio da utilizzare con l'archivio dei simboli.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymLanguageType.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.SymbolStore.SymLanguageType" />.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.Basic">
      <summary>Specifica il GUID del tipo di linguaggio Basic da utilizzare con l'archivio dei simboli.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.C">
      <summary>Specifica il GUID del tipo di linguaggio C da utilizzare con l'archivio dei simboli.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.Cobol">
      <summary>Specifica il GUID del tipo di linguaggio Cobol da utilizzare con l'archivio dei simboli.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.CPlusPlus">
      <summary>Specifica il GUID del tipo di linguaggio C++ da utilizzare con l'archivio dei simboli.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.CSharp">
      <summary>Specifica il GUID del tipo di linguaggio C# da utilizzare con l'archivio dei simboli.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.ILAssembly">
      <summary>Specifica il GUID del tipo di linguaggio ILAssembly da utilizzare con l'archivio dei simboli.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.Java">
      <summary>Specifica il GUID del tipo di linguaggio Java da utilizzare con l'archivio dei simboli.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.JScript">
      <summary>Specifica il GUID del tipo di linguaggio JScript da utilizzare con l'archivio dei simboli.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.MCPlusPlus">
      <summary>Specifica il GUID del tipo di linguaggio C++ da utilizzare con l'archivio dei simboli.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.Pascal">
      <summary>Specifica il GUID del tipo di linguaggio Pascal da utilizzare con l'archivio dei simboli.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.SMC">
      <summary>Specifica il GUID del tipo di linguaggio SMC da utilizzare con l'archivio dei simboli.</summary>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.SymLanguageVendor">
      <summary>Contiene i GUID pubblici per i fornitori di linguaggio da utilizzare con l'archivio dei simboli.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymLanguageVendor.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.SymbolStore.SymLanguageVendor" />.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageVendor.Microsoft">
      <summary>Specifica il GUID del fornitore di linguaggio Microsoft.</summary>
    </member>
  </members>
</doc>