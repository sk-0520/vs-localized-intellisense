<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.ComponentModel.TypeConverter</name>
  </assembly>
  <members>
    <member name="T:System.ComponentModel.AddingNewEventArgs">
      <summary>Fornisce dati per l'evento <see cref="E:System.Windows.Forms.BindingSource.AddingNew" />.</summary>
    </member>
    <member name="M:System.ComponentModel.AddingNewEventArgs.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.AddingNewEventArgs" /> senza utilizzare parametri.</summary>
    </member>
    <member name="M:System.ComponentModel.AddingNewEventArgs.#ctor(System.Object)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.AddingNewEventArgs" /> utilizzando l'oggetto specificato come nuovo elemento.</summary>
      <param name="newObject">Oggetto <see cref="T:System.Object" /> da utilizzare come valore del nuovo elemento.</param>
    </member>
    <member name="P:System.ComponentModel.AddingNewEventArgs.NewObject">
      <summary>Ottiene o imposta l'oggetto da aggiungere all'elenco di associazioni.</summary>
      <returns>Oggetto <see cref="T:System.Object" /> da aggiungere come nuovo elemento all'insieme associato.</returns>
    </member>
    <member name="T:System.ComponentModel.AddingNewEventHandler">
      <summary>Rappresenta il metodo che gestirà l'evento <see cref="E:System.Windows.Forms.BindingSource.AddingNew" />.</summary>
      <param name="sender">Origine dell'evento, in genere un contenitore di dati o un insieme associato ai dati.</param>
      <param name="e">Oggetto <see cref="T:System.ComponentModel.AddingNewEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="T:System.ComponentModel.AmbientValueAttribute">
      <summary>Specifica il valore per passare a una proprietà che determini il proprio valore da un'altra origine. Questo concetto è noto come ambiente. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.ComponentModel.AmbientValueAttribute.#ctor(System.Boolean)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ComponentModel.AmbientValueAttribute" />, dato un valore Boolean come relativo valore.</summary>
      <param name="value">Il valore di questo attributo.</param>
    </member>
    <member name="M:System.ComponentModel.AmbientValueAttribute.#ctor(System.Byte)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ComponentModel.AmbientValueAttribute" />, dato un intero senza segno a 8 bit come relativo valore.</summary>
      <param name="value">Il valore di questo attributo.</param>
    </member>
    <member name="M:System.ComponentModel.AmbientValueAttribute.#ctor(System.Char)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ComponentModel.AmbientValueAttribute" />, dato un carattere Unicode come relativo valore.</summary>
      <param name="value">Il valore di questo attributo.</param>
    </member>
    <member name="M:System.ComponentModel.AmbientValueAttribute.#ctor(System.Double)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ComponentModel.AmbientValueAttribute" />, dato un numero in virgola mobile e precisione doppia come relativo valore.</summary>
      <param name="value">Il valore di questo attributo.</param>
    </member>
    <member name="M:System.ComponentModel.AmbientValueAttribute.#ctor(System.Int16)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ComponentModel.AmbientValueAttribute" />, dato un intero con segno a 16 bit come relativo valore.</summary>
      <param name="value">Il valore di questo attributo.</param>
    </member>
    <member name="M:System.ComponentModel.AmbientValueAttribute.#ctor(System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.AmbientValueAttribute" />, dato un intero con segno a 32 bit come relativo valore.</summary>
      <param name="value">Il valore di questo attributo.</param>
    </member>
    <member name="M:System.ComponentModel.AmbientValueAttribute.#ctor(System.Int64)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.AmbientValueAttribute" />, dato un intero con segno a 64 bit come relativo valore.</summary>
      <param name="value">Il valore di questo attributo.</param>
    </member>
    <member name="M:System.ComponentModel.AmbientValueAttribute.#ctor(System.Object)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ComponentModel.AmbientValueAttribute" />, dato un oggetto come relativo valore.</summary>
      <param name="value">Il valore di questo attributo.</param>
    </member>
    <member name="M:System.ComponentModel.AmbientValueAttribute.#ctor(System.Single)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ComponentModel.AmbientValueAttribute" />, dato un numero in virgola mobile e precisione singola come relativo valore.</summary>
      <param name="value">Il valore di questo attributo.</param>
    </member>
    <member name="M:System.ComponentModel.AmbientValueAttribute.#ctor(System.String)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ComponentModel.AmbientValueAttribute" />, data una stringa come relativo valore.</summary>
      <param name="value">Il valore di questo attributo.</param>
    </member>
    <member name="M:System.ComponentModel.AmbientValueAttribute.#ctor(System.Type,System.String)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ComponentModel.AmbientValueAttribute" />, dato il valore e il relativo tipo.</summary>
      <param name="type">Oggetto <see cref="T:System.Type" /> del parametro <paramref name="value" />.</param>
      <param name="value">Valore di questo attributo.</param>
    </member>
    <member name="M:System.ComponentModel.AmbientValueAttribute.Equals(System.Object)">
      <summary>Determina se l'oggetto <see cref="T:System.ComponentModel.AmbientValueAttribute" /> specificato è uguale all'oggetto <see cref="T:System.ComponentModel.AmbientValueAttribute" /> corrente.</summary>
      <param name="obj">Oggetto <see cref="T:System.ComponentModel.AmbientValueAttribute" /> da confrontare con l'oggetto <see cref="T:System.ComponentModel.AmbientValueAttribute" /> corrente.</param>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.ComponentModel.AmbientValueAttribute" /> specificato è uguale all'oggetto <see cref="T:System.ComponentModel.AmbientValueAttribute" /> corrente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.AmbientValueAttribute.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Codice hash per l'oggetto <see cref="T:System.ComponentModel.AmbientValueAttribute" /> corrente.</returns>
    </member>
    <member name="P:System.ComponentModel.AmbientValueAttribute.Value">
      <summary>Ottiene l'oggetto che corrisponde al valore di <see cref="T:System.ComponentModel.AmbientValueAttribute" />.</summary>
      <returns>L'oggetto che corrisponde al valore di <see cref="T:System.ComponentModel.AmbientValueAttribute" />.</returns>
    </member>
    <member name="T:System.ComponentModel.ArrayConverter">
      <summary>Fornisce un convertitore di tipi per convertire oggetti <see cref="T:System.Array" /> in e da diverse altre rappresentazioni.</summary>
    </member>
    <member name="M:System.ComponentModel.ArrayConverter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.ArrayConverter" />.</summary>
    </member>
    <member name="M:System.ComponentModel.ArrayConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converte l'oggetto valore specificato nel tipo di destinazione specificato.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="culture">Le impostazioni cultura in cui <paramref name="value" /> verrà convertito.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire.</param>
      <param name="destinationType">Tipo <see cref="T:System.Type" /> in cui convertire il valore.</param>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il valore convertito.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione.</exception>
    </member>
    <member name="M:System.ComponentModel.ArrayConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>Ottiene un insieme di proprietà per il tipo di matrice specificato dal parametro del valore.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> che specifica il tipo matrice per cui ottenere le proprietà.</param>
      <param name="attributes">Matrice di tipo <see cref="T:System.Attribute" /> che verrà utilizzata come filtro.</param>
      <returns>Insieme <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> con le proprietà esposte per una matrice oppure <see langword="null" /> se non vi sono proprietà.</returns>
    </member>
    <member name="M:System.ComponentModel.ArrayConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Ottiene un valore che indica se l'oggetto supporta le proprietà.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <returns>
        <see langword="true" /> perché è necessario chiamare il metodo <see cref="M:System.ComponentModel.ArrayConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" /> per individuare le proprietà dell'oggetto. Questo metodo non restituisce mai <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.AttributeCollection">
      <summary>Rappresenta un insieme di attributi.</summary>
    </member>
    <member name="M:System.ComponentModel.AttributeCollection.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.AttributeCollection" />.</summary>
    </member>
    <member name="M:System.ComponentModel.AttributeCollection.#ctor(System.Attribute[])">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.AttributeCollection" />.</summary>
      <param name="attributes">Matrice di tipo <see cref="T:System.Attribute" /> che fornisce gli attributi per questo insieme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="attributes" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.AttributeCollection.Attributes">
      <summary>Ottiene l'insieme di attributi.</summary>
      <returns>Insieme di attributi.</returns>
    </member>
    <member name="M:System.ComponentModel.AttributeCollection.Contains(System.Attribute)">
      <summary>Consente di determinare se questo insieme di attributi dispone dell'attributo specificato.</summary>
      <param name="attribute">Oggetto <see cref="T:System.Attribute" /> da individuare nell'insieme.</param>
      <returns>
        <see langword="true" /> se l'insieme contiene l'attributo o se è l'attributo predefinito per il tipo di attributo. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.AttributeCollection.Contains(System.Attribute[])">
      <summary>Consente di determinare se questo insieme di attributi contiene tutti gli attributi specificati nella matrice di attributi.</summary>
      <param name="attributes">Matrice di tipo <see cref="T:System.Attribute" /> da individuare nell'insieme.</param>
      <returns>
        <see langword="true" /> se l'insieme contiene tutti gli attributi. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.AttributeCollection.CopyTo(System.Array,System.Int32)">
      <summary>Consente di copiare l'insieme in una matrice partendo dall'indice specificato.</summary>
      <param name="array">Oggetto <see cref="T:System.Array" /> in cui copiare l'insieme.</param>
      <param name="index">Indice da cui iniziare.</param>
    </member>
    <member name="P:System.ComponentModel.AttributeCollection.Count">
      <summary>Ottiene il numero di attributi.</summary>
      <returns>Numero di attributi.</returns>
    </member>
    <member name="F:System.ComponentModel.AttributeCollection.Empty">
      <summary>Specifica un insieme vuoto da utilizzare invece di crearne uno nuovo. Questo campo è di sola lettura.</summary>
    </member>
    <member name="M:System.ComponentModel.AttributeCollection.FromExisting(System.ComponentModel.AttributeCollection,System.Attribute[])">
      <summary>Crea un nuovo insieme <see cref="T:System.ComponentModel.AttributeCollection" /> da un insieme <see cref="T:System.ComponentModel.AttributeCollection" /> esistente.</summary>
      <param name="existing">Insieme <see cref="T:System.ComponentModel.AttributeCollection" /> da cui creare la copia.</param>
      <param name="newAttributes">Matrice di tipo <see cref="T:System.Attribute" /> che fornisce gli attributi per questo insieme. Può essere <see langword="null" />.</param>
      <returns>Nuovo insieme <see cref="T:System.ComponentModel.AttributeCollection" /> che è una copia di <paramref name="existing" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="existing" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.AttributeCollection.GetDefaultAttribute(System.Type)">
      <summary>Restituisce l'oggetto <see cref="T:System.Attribute" /> predefinito di un dato oggetto <see cref="T:System.Type" />.</summary>
      <param name="attributeType">Oggetto <see cref="T:System.Type" /> dell'attributo da recuperare.</param>
      <returns>L'oggetto <see cref="T:System.Attribute" /> predefinito di un dato oggetto <paramref name="attributeType" />.</returns>
    </member>
    <member name="M:System.ComponentModel.AttributeCollection.GetEnumerator">
      <summary>Ottiene un enumeratore per questo insieme.</summary>
      <returns>Enumeratore di tipo <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="P:System.ComponentModel.AttributeCollection.Item(System.Int32)">
      <summary>Ottiene l'attributo con il numero di indice specificato.</summary>
      <param name="index">Indice in base zero di <see cref="T:System.ComponentModel.AttributeCollection" />.</param>
      <returns>Oggetto <see cref="T:System.Attribute" /> con il numero di indice specificato.</returns>
    </member>
    <member name="P:System.ComponentModel.AttributeCollection.Item(System.Type)">
      <summary>Ottiene l'attributo con il tipo specificato.</summary>
      <param name="attributeType">Oggetto <see cref="T:System.Type" /> di <see cref="T:System.Attribute" /> da ottenere dall'insieme.</param>
      <returns>Oggetto <see cref="T:System.Attribute" /> con il tipo specificato o, se l'attributo non esiste, il valore predefinito per il tipo di attributo.</returns>
    </member>
    <member name="M:System.ComponentModel.AttributeCollection.Matches(System.Attribute)">
      <summary>Consente di determinare se un attributo specificato è uguale a un attributo nell'insieme.</summary>
      <param name="attribute">Istanza di <see cref="T:System.Attribute" /> da confrontare con gli attributi in questo insieme.</param>
      <returns>
        <see langword="true" /> se l'attributo è contenuto nell'insieme e presenta lo stesso valore dell'attributo nell'insieme. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.AttributeCollection.Matches(System.Attribute[])">
      <summary>Consente di determinare se gli attributi nella matrice specificata sono uguali agli attributi dell'insieme.</summary>
      <param name="attributes">Matrice di <see cref="T:System.CodeDom.MemberAttributes" /> da confrontare con gli attributi in questo insieme.</param>
      <returns>
        <see langword="true" /> se tutti gli attributi della matrice sono contenuti nell'insieme e presentano gli stessi valori degli attributi nell'insieme. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.AttributeCollection.System#Collections#ICollection#Count">
      <summary>Ottiene il numero di elementi contenuti nella raccolta.</summary>
      <returns>Numero di elementi contenuti nella raccolta.</returns>
    </member>
    <member name="P:System.ComponentModel.AttributeCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Ottiene un valore che indica se l'accesso alla raccolta è sincronizzato (thread-safe).</summary>
      <returns>
        <see langword="true" /> se l'accesso alla raccolta è sincronizzato (thread-safe); in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.AttributeCollection.System#Collections#ICollection#SyncRoot">
      <summary>Ottiene un oggetto che può essere usato per sincronizzare l'accesso alla raccolta.</summary>
      <returns>Oggetto che può essere usato per sincronizzare l'accesso alla raccolta.</returns>
    </member>
    <member name="M:System.ComponentModel.AttributeCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Viene restituito un <see cref="T:System.Collections.IEnumerator" /> per l'oggetto <see cref="T:System.Collections.IDictionary" />.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> per l'oggetto <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="T:System.ComponentModel.AttributeProviderAttribute">
      <summary>Consente il reindirizzamento degli attributi. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.ComponentModel.AttributeProviderAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.AttributeProviderAttribute" /> con il nome del tipo indicato.</summary>
      <param name="typeName">Nome del tipo da specificare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeName" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.AttributeProviderAttribute.#ctor(System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.AttributeProviderAttribute" /> con il nome del tipo e della proprietà specificati.</summary>
      <param name="typeName">Nome del tipo da specificare.</param>
      <param name="propertyName">Nome della proprietà per cui recuperare gli attributi.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="propertyName" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.AttributeProviderAttribute.#ctor(System.Type)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.AttributeProviderAttribute" /> con il tipo indicato.</summary>
      <param name="type">Tipo da specificare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.AttributeProviderAttribute.PropertyName">
      <summary>Ottiene il nome della proprietà per cui recuperare gli attributi.</summary>
      <returns>Nome della proprietà per cui recuperare gli attributi.</returns>
    </member>
    <member name="P:System.ComponentModel.AttributeProviderAttribute.TypeName">
      <summary>Ottiene il nome di tipo dell'assembly passato al costruttore.</summary>
      <returns>Il nome completo dell'assembly del tipo specificato nel costruttore.</returns>
    </member>
    <member name="T:System.ComponentModel.BaseNumberConverter">
      <summary>Fornisce un convertitore di tipi di base per i tipi numerici non a virgola mobile.</summary>
    </member>
    <member name="M:System.ComponentModel.BaseNumberConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determina se questo convertitore può convertire un oggetto del tipo di origine specificato nel tipo nativo del convertitore.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="sourceType">
        <see cref="T:System.Type" /> che rappresenta il tipo dal quale si desidera effettuare la conversione.</param>
      <returns>
        <see langword="true" /> se questo convertitore può eseguire l'operazione; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.BaseNumberConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Restituisce un valore che indica se questo convertitore può convertire un oggetto nel tipo di destinazione specificato, utilizzando il contesto.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="t">
        <see cref="T:System.Type" /> che rappresenta il tipo nel quale si desidera effettuare la conversione.</param>
      <returns>
        <see langword="true" /> se questo convertitore può eseguire l'operazione; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.BaseNumberConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converte l'oggetto specificato nel tipo nativo del convertitore.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> che specifica le impostazioni cultura per la rappresentazione del numero.</param>
      <param name="value">Oggetto da convertire.</param>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il valore convertito.</returns>
      <exception cref="T:System.Exception">
        <paramref name="value" /> non è un valore valido per il tipo di destinazione.</exception>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione.</exception>
    </member>
    <member name="M:System.ComponentModel.BaseNumberConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converte l'oggetto specificato in un altro tipo.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> che specifica le impostazioni cultura per la rappresentazione del numero.</param>
      <param name="value">Oggetto da convertire.</param>
      <param name="destinationType">Tipo in cui convertire l'oggetto.</param>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il valore convertito.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione.</exception>
    </member>
    <member name="T:System.ComponentModel.BindableAttribute">
      <summary>Specifica se un membro viene generalmente utilizzato per l'associazione. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.ComponentModel.BindableAttribute.#ctor(System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.BindableAttribute" /> con un valore booleano.</summary>
      <param name="bindable">
        <see langword="true" /> per utilizzare la proprietà per l'associazione; in caso contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.ComponentModel.BindableAttribute.#ctor(System.Boolean,System.ComponentModel.BindingDirection)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.BindableAttribute" />.</summary>
      <param name="bindable">
        <see langword="true" /> per utilizzare la proprietà per l'associazione; in caso contrario, <see langword="false" />.</param>
      <param name="direction">Uno dei valori di <see cref="T:System.ComponentModel.BindingDirection" />.</param>
    </member>
    <member name="M:System.ComponentModel.BindableAttribute.#ctor(System.ComponentModel.BindableSupport)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.BindableAttribute" /> con uno dei valori <see cref="T:System.ComponentModel.BindableSupport" />.</summary>
      <param name="flags">Uno dei valori di <see cref="T:System.ComponentModel.BindableSupport" />.</param>
    </member>
    <member name="M:System.ComponentModel.BindableAttribute.#ctor(System.ComponentModel.BindableSupport,System.ComponentModel.BindingDirection)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.BindableAttribute" />.</summary>
      <param name="flags">Uno dei valori di <see cref="T:System.ComponentModel.BindableSupport" />.</param>
      <param name="direction">Uno dei valori di <see cref="T:System.ComponentModel.BindingDirection" />.</param>
    </member>
    <member name="P:System.ComponentModel.BindableAttribute.Bindable">
      <summary>Ottiene un valore che indica che una proprietà viene generalmente utilizzata per l'associazione.</summary>
      <returns>
        <see langword="true" /> se la proprietà viene generalmente utilizzata per l'associazione. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="F:System.ComponentModel.BindableAttribute.Default">
      <summary>Consente di specificare il valore predefinito per l'attributo <see cref="T:System.ComponentModel.BindableAttribute" />, che è <see cref="F:System.ComponentModel.BindableAttribute.No" />. Questo campo è di sola lettura.</summary>
    </member>
    <member name="P:System.ComponentModel.BindableAttribute.Direction">
      <summary>Ottiene un valore che indica la o le direzioni dell'associazione dati di questa proprietà.</summary>
      <returns>Direzione del data binding di questa proprietà.</returns>
    </member>
    <member name="M:System.ComponentModel.BindableAttribute.Equals(System.Object)">
      <summary>Determina se due oggetti <see cref="T:System.ComponentModel.BindableAttribute" /> sono uguali.</summary>
      <param name="obj">Oggetto da confrontare.</param>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.ComponentModel.BindableAttribute" /> specificato è uguale all'oggetto <see cref="T:System.ComponentModel.BindableAttribute" /> corrente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.BindableAttribute.GetHashCode">
      <summary>Viene utilizzato come funzione hash per la classe <see cref="T:System.ComponentModel.BindableAttribute" />.</summary>
      <returns>Codice hash per l'oggetto <see cref="T:System.ComponentModel.BindableAttribute" /> corrente.</returns>
    </member>
    <member name="M:System.ComponentModel.BindableAttribute.IsDefaultAttribute">
      <summary>Determina se questo attributo è predefinito.</summary>
      <returns>
        <see langword="true" /> se l'attributo è il valore predefinito per questa classe di attributi; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="F:System.ComponentModel.BindableAttribute.No">
      <summary>Consente di specificare che una proprietà non viene generalmente utilizzata per l'associazione. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.BindableAttribute.Yes">
      <summary>Consente di specificare che una proprietà viene generalmente utilizzata per l'associazione. Questo campo è di sola lettura.</summary>
    </member>
    <member name="T:System.ComponentModel.BindableSupport">
      <summary>Specifica i valori con i quali indicare se una proprietà può essere associata a un elemento di dati o a un'altra proprietà.</summary>
    </member>
    <member name="F:System.ComponentModel.BindableSupport.Default">
      <summary>La proprietà è impostata sul valore predefinito.</summary>
    </member>
    <member name="F:System.ComponentModel.BindableSupport.No">
      <summary>La proprietà non è associabile in fase di progettazione.</summary>
    </member>
    <member name="F:System.ComponentModel.BindableSupport.Yes">
      <summary>La proprietà è associabile in fase di progettazione.</summary>
    </member>
    <member name="T:System.ComponentModel.BindingDirection">
      <summary>Specifica se per il modello esistono una o due modalità di associazione.</summary>
    </member>
    <member name="F:System.ComponentModel.BindingDirection.OneWay">
      <summary>Il modello può accettare solo i valori delle proprietà. Utilizzato con un oggetto <see cref="T:System.Web.UI.ITemplate" /> generico.</summary>
    </member>
    <member name="F:System.ComponentModel.BindingDirection.TwoWay">
      <summary>Il modello può accettare ed esporre i valori delle proprietà. Utilizzato con un oggetto <see cref="T:System.Web.UI.IBindableTemplate" />.</summary>
    </member>
    <member name="T:System.ComponentModel.BindingList`1">
      <summary>Fornisce un insieme generico che supporta l'associazione dati.</summary>
      <typeparam name="T">Tipo di elementi contenuti nell'elenco.</typeparam>
    </member>
    <member name="M:System.ComponentModel.BindingList`1.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.BindingList`1" /> utilizzando i valori predefiniti.</summary>
    </member>
    <member name="M:System.ComponentModel.BindingList`1.#ctor(System.Collections.Generic.IList{`0})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.BindingList`1" /> con l'elenco specificato.</summary>
      <param name="list">Un oggetto <see cref="T:System.Collections.Generic.IList`1" /> di elementi che devono essere contenuti nell'oggetto <see cref="T:System.ComponentModel.BindingList`1" />.</param>
    </member>
    <member name="E:System.ComponentModel.BindingList`1.AddingNew">
      <summary>Si verifica prima dell'aggiunta di un elemento all'elenco.</summary>
    </member>
    <member name="M:System.ComponentModel.BindingList`1.AddNew">
      <summary>Aggiunge un nuovo elemento alla raccolta.</summary>
      <returns>Elemento aggiunto all'elenco.</returns>
      <exception cref="T:System.InvalidOperationException">La proprietà <see cref="P:System.Windows.Forms.BindingSource.AllowNew" /> è impostata su <see langword="false" />.  
-oppure- 
Non è possibile trovare un costruttore senza parametri pubblico per il tipo di elemento corrente.</exception>
    </member>
    <member name="M:System.ComponentModel.BindingList`1.AddNewCore">
      <summary>Aggiunge un nuovo elemento alla fine dell'insieme.</summary>
      <returns>L'elemento aggiunto all'insieme.</returns>
      <exception cref="T:System.InvalidCastException">Il nuovo elemento non è dello stesso tipo degli oggetti contenuti nell'oggetto <see cref="T:System.ComponentModel.BindingList`1" />.</exception>
    </member>
    <member name="P:System.ComponentModel.BindingList`1.AllowEdit">
      <summary>Ottiene o imposta un valore che indica se è possibile modificare gli elementi dell'elenco.</summary>
      <returns>
        <see langword="true" /> se è possibile modificare gli elementi dell'elenco; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</returns>
    </member>
    <member name="P:System.ComponentModel.BindingList`1.AllowNew">
      <summary>Ottiene o imposta un valore che indica se è possibile aggiungere elementi all'elenco utilizzando il metodo <see cref="M:System.ComponentModel.BindingList`1.AddNew" />.</summary>
      <returns>
        <see langword="true" /> se è possibile aggiungere elementi all'elenco con il metodo <see cref="M:System.ComponentModel.BindingList`1.AddNew" />; in caso contrario, <see langword="false" />. L'impostazione predefinita dipende dal tipo sottostante contenuto nell'elenco.</returns>
    </member>
    <member name="P:System.ComponentModel.BindingList`1.AllowRemove">
      <summary>Ottiene o imposta un valore che indica se è possibile rimuovere elementi dall'elenco sottostante.</summary>
      <returns>
        <see langword="true" /> se è possibile rimuovere elementi all'elenco con il metodo <see cref="M:System.ComponentModel.BindingList`1.RemoveItem(System.Int32)" />; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</returns>
    </member>
    <member name="M:System.ComponentModel.BindingList`1.ApplySortCore(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
      <summary>Ordina gli elementi se ne è stato eseguito l'override in una classe derivata; in caso contrario genera un oggetto <see cref="T:System.NotSupportedException" />.</summary>
      <param name="prop">Un oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> che specifica in base a quale proprietà ordinare.</param>
      <param name="direction">Uno dei valori di <see cref="T:System.ComponentModel.ListSortDirection" />.</param>
      <exception cref="T:System.NotSupportedException">Il metodo non viene sottoposto a override in una classe derivata.</exception>
    </member>
    <member name="M:System.ComponentModel.BindingList`1.CancelNew(System.Int32)">
      <summary>Elimina un nuovo elemento in attesa.</summary>
      <param name="itemIndex">L'indice del nuovo elemento da aggiungere</param>
    </member>
    <member name="M:System.ComponentModel.BindingList`1.ClearItems">
      <summary>Rimuove tutti gli elementi dalla raccolta.</summary>
    </member>
    <member name="M:System.ComponentModel.BindingList`1.EndNew(System.Int32)">
      <summary>Esegue il commit di un nuovo elemento in sospeso nell'insieme.</summary>
      <param name="itemIndex">L'indice del nuovo elemento da aggiungere.</param>
    </member>
    <member name="M:System.ComponentModel.BindingList`1.FindCore(System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary>Ricerca l'indice dell'elemento che ha il descrittore di proprietà specificato con il valore specificato, se la ricerca è implementata in una classe derivata; in caso contrario un oggetto <see cref="T:System.NotSupportedException" />.</summary>
      <param name="prop">Oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> da cercare.</param>
      <param name="key">Valore di <paramref name="prop" /> da cercare.</param>
      <returns>Indice in base zero dell'elemento che corrisponde al descrittore di proprietà e che contiene il valore specificato.</returns>
      <exception cref="T:System.NotSupportedException">Il metodo <see cref="M:System.ComponentModel.BindingList`1.FindCore(System.ComponentModel.PropertyDescriptor,System.Object)" /> non viene sottoposto a override in una classe derivata.</exception>
    </member>
    <member name="M:System.ComponentModel.BindingList`1.InsertItem(System.Int32,`0)">
      <summary>Inserisce l'elemento specificato nell'elenco in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero in cui inserire l'elemento.</param>
      <param name="item">Elemento da inserire nell'elenco.</param>
    </member>
    <member name="P:System.ComponentModel.BindingList`1.IsSortedCore">
      <summary>Ottiene un valore che indica se l'elenco è ordinato.</summary>
      <returns>
        <see langword="true" /> se l'elenco è ordinato; in caso contrario <see langword="false" />. Il valore predefinito è <see langword="false" />.</returns>
    </member>
    <member name="E:System.ComponentModel.BindingList`1.ListChanged">
      <summary>Si verifica quando viene modificato l'elenco o un elemento dell'elenco.</summary>
    </member>
    <member name="M:System.ComponentModel.BindingList`1.OnAddingNew(System.ComponentModel.AddingNewEventArgs)">
      <summary>Genera l'evento <see cref="E:System.ComponentModel.BindingList`1.AddingNew" />.</summary>
      <param name="e">Oggetto <see cref="T:System.ComponentModel.AddingNewEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="M:System.ComponentModel.BindingList`1.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
      <summary>Genera l'evento <see cref="E:System.ComponentModel.BindingList`1.ListChanged" />.</summary>
      <param name="e">Oggetto <see cref="T:System.ComponentModel.ListChangedEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="P:System.ComponentModel.BindingList`1.RaiseListChangedEvents">
      <summary>Ottiene o imposta un valore che indica se l'aggiunta o la rimozione di elementi all'interno dell'elenco genera eventi <see cref="E:System.ComponentModel.BindingList`1.ListChanged" />.</summary>
      <returns>
        <see langword="true" /> se l'aggiunta o la rimozione degli elementi genera gli eventi <see cref="E:System.ComponentModel.BindingList`1.ListChanged" />; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</returns>
    </member>
    <member name="M:System.ComponentModel.BindingList`1.RemoveItem(System.Int32)">
      <summary>Rimuove l'elemento in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero dell'elemento da rimuovere.</param>
      <exception cref="T:System.NotSupportedException">Si intende rimuovere un elemento aggiunto di recente e la proprietà <see cref="P:System.ComponentModel.IBindingList.AllowRemove" /> è impostata su <see langword="false" />.</exception>
    </member>
    <member name="M:System.ComponentModel.BindingList`1.RemoveSortCore">
      <summary>Rimuove qualsiasi ordinamento applicato con il metodo <see cref="M:System.ComponentModel.BindingList`1.ApplySortCore(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" /> se l'ordinamento è implementato in una classe derivata; in caso contrario genera <see cref="T:System.NotSupportedException" />.</summary>
      <exception cref="T:System.NotSupportedException">Il metodo non viene sottoposto a override in una classe derivata.</exception>
    </member>
    <member name="M:System.ComponentModel.BindingList`1.ResetBindings">
      <summary>Genera un evento <see cref="E:System.ComponentModel.BindingList`1.ListChanged" /> di tipo <see cref="F:System.ComponentModel.ListChangedType.Reset" />.</summary>
    </member>
    <member name="M:System.ComponentModel.BindingList`1.ResetItem(System.Int32)">
      <summary>Genere un evento <see cref="E:System.ComponentModel.BindingList`1.ListChanged" /> di tipo <see cref="F:System.ComponentModel.ListChangedType.ItemChanged" /> per l'elemento nella posizione specificata.</summary>
      <param name="position">Indice in base zero dell'elemento da reimpostare.</param>
    </member>
    <member name="M:System.ComponentModel.BindingList`1.SetItem(System.Int32,`0)">
      <summary>Sostituisce l'elemento in corrispondenza dell'indice specificato con l'elemento specificato.</summary>
      <param name="index">Indice in base zero dell'elemento da sostituire.</param>
      <param name="item">Nuovo valore dell'elemento in corrispondenza dell'indice specificato. Il valore può essere <see langword="null" /> per i tipi di riferimento.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero.  
-oppure- 
 <paramref name="index" /> è maggiore di <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</exception>
    </member>
    <member name="P:System.ComponentModel.BindingList`1.SortDirectionCore">
      <summary>Ottenere la direzione di ordinamento dell'elenco.</summary>
      <returns>Uno dei valori di <see cref="T:System.ComponentModel.ListSortDirection" />. Il valore predefinito è <see cref="F:System.ComponentModel.ListSortDirection.Ascending" />.</returns>
    </member>
    <member name="P:System.ComponentModel.BindingList`1.SortPropertyCore">
      <summary>Ottiene il descrittore di proprietà utilizzato per ordinare l'elenco se l'ordinamento viene implementato in una classe derivata; in caso contrario viene restituito <see langword="null" />.</summary>
      <returns>Il <see cref="T:System.ComponentModel.PropertyDescriptor" /> utilizzato per ordinare l'elenco.</returns>
    </member>
    <member name="P:System.ComponentModel.BindingList`1.SupportsChangeNotificationCore">
      <summary>Ottiene un valore che indica se sono abilitati gli eventi <see cref="E:System.ComponentModel.BindingList`1.ListChanged" />.</summary>
      <returns>
        <see langword="true" /> se gli eventi <see cref="E:System.ComponentModel.BindingList`1.ListChanged" /> sono supportati; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</returns>
    </member>
    <member name="P:System.ComponentModel.BindingList`1.SupportsSearchingCore">
      <summary>Ottiene un valore che indica se l'elenco supporta la ricerca.</summary>
      <returns>
        <see langword="true" /> se l'elenco supporta la ricerca, in caso contrario <see langword="false" />. Il valore predefinito è <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.BindingList`1.SupportsSortingCore">
      <summary>Ottiene un valore che indica se l'elenco supporta l'ordinamento.</summary>
      <returns>
        <see langword="true" /> se l'elenco supporta l'ordinamento, in caso contrario <see langword="false" />. Il valore predefinito è <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)" />.</summary>
      <param name="prop">L'oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> da aggiungere come un criterio di ricerca.</param>
    </member>
    <member name="M:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#AddNew">
      <summary>Consente di aggiungere un nuovo elemento all'elenco. Per ulteriori informazioni, vedere <see cref="M:System.ComponentModel.IBindingList.AddNew" />.</summary>
      <returns>Elemento aggiunto all'elenco.</returns>
      <exception cref="T:System.NotSupportedException">Questo metodo non è supportato.</exception>
    </member>
    <member name="P:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#AllowEdit">
      <summary>Ottiene un valore che indica se è possibile modificare gli elementi dell'elenco.</summary>
      <returns>
        <see langword="true" /> se è possibile modificare gli elementi dell'elenco; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</returns>
    </member>
    <member name="P:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#AllowNew">
      <summary>Ottiene o imposta un valore che indica se è possibile aggiungere elementi all'elenco utilizzando il metodo <see cref="M:System.ComponentModel.BindingList`1.AddNew" />.</summary>
      <returns>
        <see langword="true" /> se è possibile aggiungere elementi all'elenco con il metodo <see cref="M:System.ComponentModel.BindingList`1.AddNew" />; in caso contrario, <see langword="false" />. L'impostazione predefinita dipende dal tipo sottostante contenuto nell'elenco.</returns>
    </member>
    <member name="P:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#AllowRemove">
      <summary>Ottiene un valore che indica se è possibile rimuovere elementi dall'elenco.</summary>
      <returns>
        <see langword="true" /> se è possibile rimuovere elementi dall'elenco con il metodo <see cref="M:System.ComponentModel.BindingList`1.RemoveItem(System.Int32)" />; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</returns>
    </member>
    <member name="M:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
      <summary>Ordina l'elenco in base a un oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> e a un oggetto <see cref="T:System.ComponentModel.ListSortDirection" />. Per una descrizione completa di questo membro, vedere <see cref="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />.</summary>
      <param name="prop">Oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> in base al quale effettuare l'ordinamento.</param>
      <param name="direction">Uno dei valori di <see cref="T:System.ComponentModel.ListSortDirection" />.</param>
    </member>
    <member name="M:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />.</summary>
      <param name="prop">Oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> in base al quale effettuare la ricerca.</param>
      <param name="key">Valore del parametro <paramref name="prop" /> da ricercare.</param>
      <returns>Indice della riga che presenta il dato oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" />.</returns>
    </member>
    <member name="P:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#IsSorted">
      <summary>Per una descrizione di questo membro, vedere <see cref="P:System.ComponentModel.IBindingList.IsSorted" />.</summary>
      <returns>
        <see langword="true" /> se è stato chiamato il metodo <see cref="M:System.ComponentModel.IBindingListView.ApplySort(System.ComponentModel.ListSortDescriptionCollection)" /> e non il metodo <see cref="M:System.ComponentModel.IBindingList.RemoveSort" />, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)" />.</summary>
      <param name="prop">Un oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> da rimuovere dagli indici utilizzati per la ricerca.</param>
    </member>
    <member name="M:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#RemoveSort">
      <summary>Per una descrizione di questo membro, vedere il metodo <see cref="M:System.ComponentModel.IBindingList.RemoveSort" />.</summary>
    </member>
    <member name="P:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#SortDirection">
      <summary>Per una descrizione di questo membro, vedere <see cref="P:System.ComponentModel.IBindingList.SortDirection" />.</summary>
      <returns>Uno dei valori di <see cref="T:System.ComponentModel.ListSortDirection" />.</returns>
    </member>
    <member name="P:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#SortProperty">
      <summary>Per una descrizione di questo membro, vedere <see cref="P:System.ComponentModel.IBindingList.SortProperty" />.</summary>
      <returns>Oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> che viene utilizzato per l'ordinamento.</returns>
    </member>
    <member name="P:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#SupportsChangeNotification">
      <summary>Per una descrizione di questo membro, vedere <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />.</summary>
      <returns>
        <see langword="true" /> se viene generato un evento <see cref="E:System.ComponentModel.IBindingList.ListChanged" /> quando viene modificato l'elenco o un elemento dell'elenco, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#SupportsSearching">
      <summary>Per una descrizione di questo membro, vedere <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />.</summary>
      <returns>
        <see langword="true" /> se l'elenco supporta la ricerca con il metodo <see cref="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#SupportsSorting">
      <summary>Per una descrizione di questo membro, vedere <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />.</summary>
      <returns>
        <see langword="true" /> se l'elenco supporta l'ordinamento, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.BindingList`1.System#ComponentModel#IRaiseItemChangedEvents#RaisesItemChangedEvents">
      <summary>Ottiene un valore che indica se le modifiche al valore della proprietà dell'elemento generano eventi <see cref="E:System.ComponentModel.BindingList`1.ListChanged" /> di tipo <see cref="F:System.ComponentModel.ListChangedType.ItemChanged" />. Questo membro non può essere sottoposto a override in una classe derivata.</summary>
      <returns>
        <see langword="true" />Se il tipo di elenco <see cref="T:System.ComponentModel.INotifyPropertyChanged" />implementa; in <see langword="false" />caso contrario,. Il valore predefinito è <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.BooleanConverter">
      <summary>Fornisce un convertitore di tipi per convertire oggetti <see cref="T:System.Boolean" /> in e da diverse altre rappresentazioni.</summary>
    </member>
    <member name="M:System.ComponentModel.BooleanConverter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.BooleanConverter" />.</summary>
    </member>
    <member name="M:System.ComponentModel.BooleanConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ottiene un valore che indica se il convertitore può convertire un oggetto dal tipo di origine specificato in un oggetto di tipo Boolean utilizzando il contesto specificato.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="sourceType">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo dal quale si desidera effettuare la conversione.</param>
      <returns>
        <see langword="true" /> se l'oggetto può eseguire la conversione. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.BooleanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converte l'oggetto valore specificato in un oggetto di tipo Boolean.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> che specifica le impostazioni cultura della conversione.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire.</param>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta la conversione di <paramref name="value" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> non è un valore valido per il tipo di destinazione.</exception>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione.</exception>
    </member>
    <member name="M:System.ComponentModel.BooleanConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Ottiene un insieme di valori standard per il tipo di dati Boolean.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <returns>Oggetto <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> che contiene un insieme standard di valori validi.</returns>
    </member>
    <member name="M:System.ComponentModel.BooleanConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Ottiene un valore che indica se l'elenco di valori standard restituito dal metodo <see cref="M:System.ComponentModel.BooleanConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> è un elenco esclusivo.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <returns>
        <see langword="true" /> perché l'oggetto <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> restituito da <see cref="M:System.ComponentModel.BooleanConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> è un elenco completo dei valori possibili. Questo metodo non restituisce mai <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.BooleanConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Ottiene un valore che indica se il convertitore supporta un insieme di valori standard che possono essere selezionati da un elenco.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <returns>
        <see langword="true" /> perché è possibile chiamare il metodo <see cref="M:System.ComponentModel.BooleanConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> per trovare un insieme comune di valori supportati dall'oggetto. Questo metodo non restituisce mai <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.ByteConverter">
      <summary>Offre un convertitore di tipi per la conversione di oggetti di tipo intero senza segno a 8 bit in e da diverse altre rappresentazioni.</summary>
    </member>
    <member name="M:System.ComponentModel.ByteConverter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.ByteConverter" />.</summary>
    </member>
    <member name="T:System.ComponentModel.CancelEventHandler">
      <summary>Rappresenta il metodo che gestisce un evento annullabile.</summary>
      <param name="sender">Origine dell'evento.</param>
      <param name="e">Oggetto <see cref="T:System.ComponentModel.CancelEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="T:System.ComponentModel.CharConverter">
      <summary>Fornisce un convertitore di tipi per convertire oggetti carattere Unicode in e da diverse altre rappresentazioni.</summary>
    </member>
    <member name="M:System.ComponentModel.CharConverter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.CharConverter" />.</summary>
    </member>
    <member name="M:System.ComponentModel.CharConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ottiene un valore che indica se il convertitore può convertire un oggetto dal tipo di origine specificato in un oggetto carattere Unicode utilizzando il contesto specificato.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="sourceType">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo da cui eseguire la conversione.</param>
      <returns>
        <see langword="true" /> se il convertitore può eseguire la conversione. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.CharConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converte l'oggetto specificato in un oggetto carattere Unicode.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="culture">Le impostazioni cultura in cui <paramref name="value" /> verrà convertito.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire.</param>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta la conversione di <paramref name="value" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> non è un valore valido per il tipo di destinazione.</exception>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione.</exception>
    </member>
    <member name="M:System.ComponentModel.CharConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converte l'oggetto valore specificato in un oggetto carattere Unicode utilizzando gli argomenti.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="culture">Le impostazioni cultura in cui <paramref name="value" /> verrà convertito.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire.</param>
      <param name="destinationType">Tipo <see cref="T:System.Type" /> in cui convertire il valore.</param>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il valore convertito.</returns>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione.</exception>
    </member>
    <member name="T:System.ComponentModel.CollectionChangeAction">
      <summary>Consente di specificare il tipo di modifica apportata all'insieme.</summary>
    </member>
    <member name="F:System.ComponentModel.CollectionChangeAction.Add">
      <summary>Consente di specificare che all'insieme è stato aggiunto un elemento.</summary>
    </member>
    <member name="F:System.ComponentModel.CollectionChangeAction.Refresh">
      <summary>Consente di specificare che è stato modificato l'intero insieme. Ciò è determinato dall'utilizzo di metodi in grado di modificare l'intero insieme, come ad esempio il metodo <see cref="M:System.Collections.CollectionBase.Clear" />.</summary>
    </member>
    <member name="F:System.ComponentModel.CollectionChangeAction.Remove">
      <summary>Consente di specificare che dall'insieme è stato rimosso un elemento.</summary>
    </member>
    <member name="T:System.ComponentModel.CollectionChangeEventArgs">
      <summary>Fornisce dati per l'evento <see cref="E:System.Data.DataColumnCollection.CollectionChanged" />.</summary>
    </member>
    <member name="M:System.ComponentModel.CollectionChangeEventArgs.#ctor(System.ComponentModel.CollectionChangeAction,System.Object)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.CollectionChangeEventArgs" />.</summary>
      <param name="action">Uno dei valori di <see cref="T:System.ComponentModel.CollectionChangeAction" /> che specifica il tipo di modifica apportata all'insieme.</param>
      <param name="element">
        <see cref="T:System.Object" /> che specifica l'istanza dell'insieme in cui è stata apportata la modifica.</param>
    </member>
    <member name="P:System.ComponentModel.CollectionChangeEventArgs.Action">
      <summary>Ottiene un'azione che specifica il tipo di modifica apportata all'insieme.</summary>
      <returns>Uno dei valori di <see cref="T:System.ComponentModel.CollectionChangeAction" />.</returns>
    </member>
    <member name="P:System.ComponentModel.CollectionChangeEventArgs.Element">
      <summary>Ottiene l’istanza dell'insieme con la modifica.</summary>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta l'istanza dell'insieme con la modifica oppure <see langword="null" /> se l'insieme viene aggiornato.</returns>
    </member>
    <member name="T:System.ComponentModel.CollectionChangeEventHandler">
      <summary>Rappresenta il metodo che gestisce l'evento <see cref="E:System.Data.DataColumnCollection.CollectionChanged" /> generato in occasione dell'aggiunta o della rimozione di elementi da un insieme.</summary>
      <param name="sender">Origine dell'evento.</param>
      <param name="e">Oggetto <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="T:System.ComponentModel.CollectionConverter">
      <summary>Fornisce un convertitore di tipi per convertire oggetti insieme in e da diverse altre rappresentazioni.</summary>
    </member>
    <member name="M:System.ComponentModel.CollectionConverter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.CollectionConverter" />.</summary>
    </member>
    <member name="M:System.ComponentModel.CollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converte l'oggetto valore specificato nel tipo di destinazione specificato.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="culture">Le impostazioni cultura in cui <paramref name="value" /> verrà convertito.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire. Questo parametro deve ereditare da <see cref="T:System.Collections.ICollection" />.</param>
      <param name="destinationType">Tipo <see cref="T:System.Type" /> in cui convertire il valore.</param>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il valore convertito.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione.</exception>
    </member>
    <member name="M:System.ComponentModel.CollectionConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>Ottiene un insieme di proprietà per il tipo di matrice specificato dal parametro del valore utilizzando il contesto e gli attributi specificati.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> che specifica il tipo matrice per cui ottenere le proprietà.</param>
      <param name="attributes">Matrice di tipo <see cref="T:System.Attribute" /> che verrà utilizzata come filtro.</param>
      <returns>Insieme <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> con le proprietà esposte per questo tipo di dati oppure <see langword="null" /> se non vi sono proprietà. Questo metodo restituisce sempre <see langword="null" />.</returns>
    </member>
    <member name="M:System.ComponentModel.CollectionConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Ottiene un valore che indica se l'oggetto supporta le proprietà.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <returns>
        <see langword="false" /> perché <see cref="M:System.ComponentModel.CollectionConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" /> non deve essere chiamato per trovare le proprietà di questo oggetto. Questo metodo non restituisce mai <see langword="true" />.</returns>
    </member>
    <member name="T:System.ComponentModel.ComplexBindingPropertiesAttribute">
      <summary>Specifica l'origine dati e le proprietà del membro di dati per un componente che supporta l'associazione dati complessa. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.ComponentModel.ComplexBindingPropertiesAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.ComplexBindingPropertiesAttribute" /> senza utilizzare parametri.</summary>
    </member>
    <member name="M:System.ComponentModel.ComplexBindingPropertiesAttribute.#ctor(System.String)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ComponentModel.ComplexBindingPropertiesAttribute" /> utilizzando l’origine dati specificata.</summary>
      <param name="dataSource">Nome della proprietà da utilizzare come origine dati.</param>
    </member>
    <member name="M:System.ComponentModel.ComplexBindingPropertiesAttribute.#ctor(System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.ComplexBindingPropertiesAttribute" /> utilizzando l’origine dati e il membro dati specificati.</summary>
      <param name="dataSource">Nome della proprietà da utilizzare come origine dati.</param>
      <param name="dataMember">Nome della proprietà da utilizzare come origine dei dati.</param>
    </member>
    <member name="P:System.ComponentModel.ComplexBindingPropertiesAttribute.DataMember">
      <summary>Ottiene il nome della proprietà del membro di dati per il componente al quale è associato l'oggetto <see cref="T:System.ComponentModel.ComplexBindingPropertiesAttribute" />.</summary>
      <returns>Nome della proprietà del membro di dati per il componente al quale è associato l'oggetto <see cref="T:System.ComponentModel.ComplexBindingPropertiesAttribute" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ComplexBindingPropertiesAttribute.DataSource">
      <summary>Ottiene il nome della proprietà dell'origine dati per il componente al quale è associato l'oggetto <see cref="T:System.ComponentModel.ComplexBindingPropertiesAttribute" />.</summary>
      <returns>Nome della proprietà dell'origine dati per il componente al quale è associato l'oggetto <see cref="T:System.ComponentModel.ComplexBindingPropertiesAttribute" />.</returns>
    </member>
    <member name="F:System.ComponentModel.ComplexBindingPropertiesAttribute.Default">
      <summary>Rappresenta il valore predefinito per la classe <see cref="T:System.ComponentModel.ComplexBindingPropertiesAttribute" />.</summary>
    </member>
    <member name="M:System.ComponentModel.ComplexBindingPropertiesAttribute.Equals(System.Object)">
      <summary>Determina se l'oggetto <see cref="T:System.Object" /> specificato è uguale all'istanza <see cref="T:System.ComponentModel.ComplexBindingPropertiesAttribute" /> corrente.</summary>
      <param name="obj">Oggetto <see cref="T:System.Object" /> da confrontare con l'istanza <see cref="T:System.ComponentModel.ComplexBindingPropertiesAttribute" /> corrente.</param>
      <returns>
        <see langword="true" /> se l'oggetto è uguale all'istanza corrente; in caso contrario, <see langword="false" />, indica che non sono uguali.</returns>
    </member>
    <member name="M:System.ComponentModel.ComplexBindingPropertiesAttribute.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Codice hash di un intero con segno a 32 bit.</returns>
    </member>
    <member name="T:System.ComponentModel.ComponentConverter">
      <summary>Fornisce un convertitore di tipi per convertire i componenti in e da diverse altre rappresentazioni.</summary>
    </member>
    <member name="M:System.ComponentModel.ComponentConverter.#ctor(System.Type)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.ComponentConverter" />.</summary>
      <param name="type">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo da associare al convertitore del componente.</param>
    </member>
    <member name="M:System.ComponentModel.ComponentConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>Ottiene un insieme di proprietà per il tipo di componente specificato dal parametro del valore.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> che specifica il tipo di componente per il quale ottenere le proprietà.</param>
      <param name="attributes">Matrice di tipo <see cref="T:System.Attribute" /> che verrà utilizzata come filtro.</param>
      <returns>
        <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> con le proprietà esposte per il componente oppure <see langword="null" /> se non sono specificate proprietà.</returns>
    </member>
    <member name="M:System.ComponentModel.ComponentConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Ottiene un valore che indica se l'oggetto supporta le proprietà utilizzando il contesto specificato.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <returns>
        <see langword="true" /> perché è necessario chiamare il metodo <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> per individuare le proprietà dell'oggetto. Questo metodo non restituisce mai <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.ComponentEditor">
      <summary>Fornisce la classe di base per un editor di componenti personalizzato.</summary>
    </member>
    <member name="M:System.ComponentModel.ComponentEditor.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.ComponentEditor" />.</summary>
    </member>
    <member name="M:System.ComponentModel.ComponentEditor.EditComponent(System.ComponentModel.ITypeDescriptorContext,System.Object)">
      <summary>Consente di modificare il componente e restituire un valore che indica se il componente è stato modificato in base a un determinato contesto.</summary>
      <param name="context">Un oggetto contesto opzionale che può essere utilizzato per ottenere ulteriori informazioni sulla modifica.</param>
      <param name="component">Componente da modificare.</param>
      <returns>
        <see langword="true" /> se il componente è stato modificato, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ComponentEditor.EditComponent(System.Object)">
      <summary>Consente di modificare il componente e restituire un valore che indica se il componente è stato modificato.</summary>
      <param name="component">Componente da modificare.</param>
      <returns>
        <see langword="true" /> se il componente è stato modificato, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.ComponentResourceManager">
      <summary>Fornisce una funzionalità semplice per l'enumerazione delle risorse per un componente o un oggetto. La classe <see cref="T:System.ComponentModel.ComponentResourceManager" /> è un <see cref="T:System.Resources.ResourceManager" />.</summary>
    </member>
    <member name="M:System.ComponentModel.ComponentResourceManager.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.ComponentResourceManager" /> con i valori predefiniti.</summary>
    </member>
    <member name="M:System.ComponentModel.ComponentResourceManager.#ctor(System.Type)">
      <summary>Crea una classe <see cref="T:System.ComponentModel.ComponentResourceManager" /> che ricerca le risorse negli assembly satellite in base alle informazioni derivate dalla classe <see cref="T:System.Type" /> specificata.</summary>
      <param name="t">Oggetto <see cref="T:System.Type" /> dal quale la classe <see cref="T:System.ComponentModel.ComponentResourceManager" /> deriva tutte le informazioni per la ricerca dei file di risorse.</param>
    </member>
    <member name="M:System.ComponentModel.ComponentResourceManager.ApplyResources(System.Object,System.String)">
      <summary>Applica il valore di una risorsa alla proprietà corrispondente dell'oggetto.</summary>
      <param name="value">Oggetto <see cref="T:System.Object" /> che contiene il valore della proprietà da applicare.</param>
      <param name="objectName">Oggetto <see cref="T:System.String" /> che contiene il nome dell'oggetto da cercare nelle risorse.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> o <paramref name="objectName" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.ComponentResourceManager.ApplyResources(System.Object,System.String,System.Globalization.CultureInfo)">
      <summary>Applica il valore di una risorsa alla proprietà corrispondente dell'oggetto.</summary>
      <param name="value">Oggetto <see cref="T:System.Object" /> che contiene il valore della proprietà da applicare.</param>
      <param name="objectName">Oggetto <see cref="T:System.String" /> che contiene il nome dell'oggetto da cercare nelle risorse.</param>
      <param name="culture">Impostazioni cultura per cui applicare le risorse.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> o <paramref name="objectName" /> è <see langword="null" />.</exception>
    </member>
    <member name="T:System.ComponentModel.Container">
      <summary>Consente di incapsulare zero o più componenti.</summary>
    </member>
    <member name="M:System.ComponentModel.Container.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Container" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent)">
      <summary>Aggiunge l'oggetto <see cref="T:System.ComponentModel.Component" /> specificato all'insieme <see cref="T:System.ComponentModel.Container" />. Non è stato assegnato alcun nome al componente.</summary>
      <param name="component">Componente da aggiungere.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent,System.String)">
      <summary>Consente di aggiungere l'oggetto <see cref="T:System.ComponentModel.Component" /> specificato all'oggetto <see cref="T:System.ComponentModel.Container" /> e assegnargli un nome.</summary>
      <param name="component">Componente da aggiungere.</param>
      <param name="name">Nome univoco, senza distinzione tra maiuscole e minuscole, da assegnare al componente.  
-oppure- 
 <see langword="null" />. In questo caso, non viene assegnato alcun nome al componente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> non è univoco.</exception>
    </member>
    <member name="P:System.ComponentModel.Container.Components">
      <summary>Ottiene tutti i componenti presenti in <see cref="T:System.ComponentModel.Container" />.</summary>
      <returns>Insieme che contiene i componenti presenti in <see cref="T:System.ComponentModel.Container" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Container.CreateSite(System.ComponentModel.IComponent,System.String)">
      <summary>Consente di creare un sito <see cref="T:System.ComponentModel.ISite" /> per un determinato oggetto <see cref="T:System.ComponentModel.IComponent" /> e assegnargli un nome.</summary>
      <param name="component">Oggetto <see cref="T:System.ComponentModel.IComponent" /> per il quale creare un sito.</param>
      <param name="name">Nome da assegnare al parametro <paramref name="component" /> oppure <see langword="null" /> per non assegnare alcun nome.</param>
      <returns>Sito appena creato.</returns>
    </member>
    <member name="M:System.ComponentModel.Container.Dispose">
      <summary>Rilascia tutte le risorse usate da <see cref="T:System.ComponentModel.Container" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Container.Dispose(System.Boolean)">
      <summary>Rilascia le risorse non gestite usate dall'oggetto <see cref="T:System.ComponentModel.Container" /> e, facoltativamente, le risorse gestite.</summary>
      <param name="disposing">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite, <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:System.ComponentModel.Container.Finalize">
      <summary>Rilascia risorse non gestite ed esegue altre operazioni di pulizia prima che la classe <see cref="T:System.ComponentModel.Container" /> venga recuperata tramite Garbage Collection.</summary>
    </member>
    <member name="M:System.ComponentModel.Container.GetService(System.Type)">
      <summary>Ottiene l'oggetto servizio del tipo specificato, se disponibile.</summary>
      <param name="service">L'oggetto <see cref="T:System.Type" /> del servizio da recuperare.</param>
      <returns>Oggetto <see cref="T:System.Object" /> che implementa il servizio richiesto, oppure <see langword="null" /> se non è possibile trovare il servizio.</returns>
    </member>
    <member name="M:System.ComponentModel.Container.Remove(System.ComponentModel.IComponent)">
      <summary>Rimuove un componente da <see cref="T:System.ComponentModel.Container" />.</summary>
      <param name="component">Componente da rimuovere.</param>
    </member>
    <member name="M:System.ComponentModel.Container.RemoveWithoutUnsiting(System.ComponentModel.IComponent)">
      <summary>Rimuove un componente da <see cref="T:System.ComponentModel.Container" /> senza impostare <see cref="P:System.ComponentModel.IComponent.Site" /> su <see langword="null" />.</summary>
      <param name="component">Componente da rimuovere.</param>
    </member>
    <member name="M:System.ComponentModel.Container.ValidateName(System.ComponentModel.IComponent,System.String)">
      <summary>Determina se il nome del componente è univoco per questo contenitore.</summary>
      <param name="component">Componente denominato.</param>
      <param name="name">Nome del componente da convalidare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> non è univoco.</exception>
    </member>
    <member name="T:System.ComponentModel.ContainerFilterService">
      <summary>Fornisce una classe base per il servizio filtro del contenitore.</summary>
    </member>
    <member name="M:System.ComponentModel.ContainerFilterService.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.ContainerFilterService" />.</summary>
    </member>
    <member name="M:System.ComponentModel.ContainerFilterService.FilterComponents(System.ComponentModel.ComponentCollection)">
      <summary>Filtra l'insieme di componenti.</summary>
      <param name="components">Insieme di componenti da filtrare.</param>
      <returns>Oggetto <see cref="T:System.ComponentModel.ComponentCollection" /> che rappresenta un insieme modificato.</returns>
    </member>
    <member name="T:System.ComponentModel.CultureInfoConverter">
      <summary>Fornisce un convertitore di tipi per convertire oggetti <see cref="T:System.Globalization.CultureInfo" /> in e da diverse altre rappresentazioni.</summary>
    </member>
    <member name="M:System.ComponentModel.CultureInfoConverter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.CultureInfoConverter" />.</summary>
    </member>
    <member name="M:System.ComponentModel.CultureInfoConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ottiene un valore che indica se il convertitore può convertire un oggetto dal tipo di origine specificato in un oggetto <see cref="T:System.Globalization.CultureInfo" /> utilizzando il contesto specificato.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="sourceType">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo dal quale si desidera effettuare la conversione.</param>
      <returns>
        <see langword="true" /> se il convertitore può eseguire la conversione. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.CultureInfoConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ottiene un valore che indica se questo convertitore può convertire un oggetto nel tipo di destinazione specificato usando il contesto.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="destinationType">Tipo <see cref="T:System.Type" /> che rappresenta il tipo di destinazione della conversione.</param>
      <returns>
        <see langword="true" /> se il convertitore può eseguire la conversione. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.CultureInfoConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converte l'oggetto valore specificato in un oggetto <see cref="T:System.Globalization.CultureInfo" />.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> che specifica le impostazioni cultura della conversione.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire.</param>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il valore convertito.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> specifica impostazioni cultura non valide.</exception>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione.</exception>
    </member>
    <member name="M:System.ComponentModel.CultureInfoConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converte l'oggetto valore specificato nel tipo di destinazione specificato.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> che specifica le impostazioni cultura della conversione.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire.</param>
      <param name="destinationType">Tipo <see cref="T:System.Type" /> in cui convertire il valore.</param>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta la conversione di <paramref name="value" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione.</exception>
    </member>
    <member name="M:System.ComponentModel.CultureInfoConverter.GetCultureName(System.Globalization.CultureInfo)">
      <summary>Recupera il nome delle impostazioni cultura specificate.</summary>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> che specifica le impostazioni cultura di cui ottenere il nome.</param>
      <returns>Nome delle impostazioni cultura specificate.</returns>
    </member>
    <member name="M:System.ComponentModel.CultureInfoConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Ottiene un insieme di valori standard per un oggetto <see cref="T:System.Globalization.CultureInfo" /> utilizzando il contesto specificato.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <returns>Insieme <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> con un gruppo standard di valori validi oppure <see langword="null" /> se il tipo di dati non supporta un gruppo standard di valori.</returns>
    </member>
    <member name="M:System.ComponentModel.CultureInfoConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Ottiene un valore che indica se l'elenco di valori standard restituito dal metodo <see cref="M:System.ComponentModel.CultureInfoConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> è un elenco completo.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <returns>
        <see langword="false" /> perché l'oggetto <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> restituito dal metodo <see cref="M:System.ComponentModel.CultureInfoConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> non è un elenco completo dei valori possibili (vale a dire che altri valori sono possibili). Questo metodo non restituisce mai <see langword="true" />.</returns>
    </member>
    <member name="M:System.ComponentModel.CultureInfoConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Ottiene un valore che indica se il convertitore supporta un insieme di valori standard che possono essere selezionati da un elenco utilizzando il contesto specificato.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <returns>
        <see langword="true" /> perché è necessario chiamare il metodo <see cref="M:System.ComponentModel.CultureInfoConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> per trovare un insieme comune di valori supportati dall'oggetto. Questo metodo non restituisce mai <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.CustomTypeDescriptor">
      <summary>Fornisce una semplice implementazione predefinita dell'interfaccia <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /></summary>
    </member>
    <member name="M:System.ComponentModel.CustomTypeDescriptor.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.CustomTypeDescriptor" />.</summary>
    </member>
    <member name="M:System.ComponentModel.CustomTypeDescriptor.#ctor(System.ComponentModel.ICustomTypeDescriptor)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.CustomTypeDescriptor" /> utilizzando un descrittore di tipi personalizzati padre.</summary>
      <param name="parent">Il descrittore di tipi personalizzati padre.</param>
    </member>
    <member name="M:System.ComponentModel.CustomTypeDescriptor.GetAttributes">
      <summary>Restituisce un insieme di attributi personalizzati per il tipo rappresentato da questo descrittore di tipi.</summary>
      <returns>Un oggetto <see cref="T:System.ComponentModel.AttributeCollection" /> contenente gli attributi per il tipo. Il valore predefinito è <see cref="F:System.ComponentModel.AttributeCollection.Empty" />.</returns>
    </member>
    <member name="M:System.ComponentModel.CustomTypeDescriptor.GetClassName">
      <summary>Restituisce il nome completo della classe rappresentata da questo descrittore di tipo.</summary>
      <returns>Oggetto <see cref="T:System.String" /> contenente il nome di classe completo del tipo che questo descrittore di tipo sta descrivendo. Il valore predefinito è <see langword="null" />.</returns>
    </member>
    <member name="M:System.ComponentModel.CustomTypeDescriptor.GetComponentName">
      <summary>Restituisce il nome della classe rappresentata da questo descrittore di tipi.</summary>
      <returns>Un oggetto <see cref="T:System.String" /> contenente il nome dell'istanza del componente descritto da questo descrittore di tipi. Il valore predefinito è <see langword="null" />.</returns>
    </member>
    <member name="M:System.ComponentModel.CustomTypeDescriptor.GetConverter">
      <summary>Restituisce un convertitore di tipi per il tipo rappresentato da questo descrittore di tipi.</summary>
      <returns>Un oggetto <see cref="T:System.ComponentModel.TypeConverter" /> per il tipo rappresentato da questo descrittore di tipi. Il valore predefinito è un oggetto <see cref="T:System.ComponentModel.TypeConverter" /> appena creato.</returns>
    </member>
    <member name="M:System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent">
      <summary>Restituisce il descrittore di eventi per l'evento predefinito dell'oggetto rappresentato da questo descrittore di tipi.</summary>
      <returns>L'oggetto <see cref="T:System.ComponentModel.EventDescriptor" /> per l'evento predefinito dell'oggetto rappresentato da questo descrittore di tipi. Il valore predefinito è <see langword="null" />.</returns>
    </member>
    <member name="M:System.ComponentModel.CustomTypeDescriptor.GetDefaultProperty">
      <summary>Restituisce il descrittore di proprietà per la proprietà predefinita dell'oggetto rappresentato da questo descrittore di tipi.</summary>
      <returns>Un oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> per la proprietà predefinita sull'oggetto rappresentato da questo descrittore di tipi. Il valore predefinito è <see langword="null" />.</returns>
    </member>
    <member name="M:System.ComponentModel.CustomTypeDescriptor.GetEditor(System.Type)">
      <summary>Restituisce un editor del tipo specificato, da associare alla classe rappresentata da questo descrittore di tipi.</summary>
      <param name="editorBaseType">Il tipo di base dell'editor da recuperare.</param>
      <returns>Un editor del tipo specificato, da associare alla classe rappresentata da questo descrittore di tipi. Il valore predefinito è <see langword="null" />.</returns>
    </member>
    <member name="M:System.ComponentModel.CustomTypeDescriptor.GetEvents">
      <summary>Restituisce un insieme di descrittori di eventi per l'oggetto rappresentato da questo descrittore di tipi.</summary>
      <returns>Un oggetto <see cref="T:System.ComponentModel.EventDescriptorCollection" /> contenente i descrittori di eventi per l'oggetto rappresentato da questo descrittore di tipi. Il valore predefinito è <see cref="F:System.ComponentModel.EventDescriptorCollection.Empty" />.</returns>
    </member>
    <member name="M:System.ComponentModel.CustomTypeDescriptor.GetEvents(System.Attribute[])">
      <summary>Restituisce un insieme filtrato di descrittori di eventi per l'oggetto rappresentato da questo descrittore di tipi.</summary>
      <param name="attributes">Matrice di attributi da utilizzare come filtro. Può essere <see langword="null" />.</param>
      <returns>Oggetto <see cref="T:System.ComponentModel.EventDescriptorCollection" /> contenente le descrizioni degli eventi per l'oggetto rappresentato da questo descrittore di tipi. Il valore predefinito è <see cref="F:System.ComponentModel.EventDescriptorCollection.Empty" />.</returns>
    </member>
    <member name="M:System.ComponentModel.CustomTypeDescriptor.GetProperties">
      <summary>Restituisce un insieme di descrittori di proprietà per l'oggetto rappresentato da questo descrittore di tipi.</summary>
      <returns>Oggetto <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> contenente le descrizioni delle proprietà per l'oggetto rappresentato da questo descrittore di tipi. Il valore predefinito è <see cref="F:System.ComponentModel.PropertyDescriptorCollection.Empty" />.</returns>
    </member>
    <member name="M:System.ComponentModel.CustomTypeDescriptor.GetProperties(System.Attribute[])">
      <summary>Restituisce un insieme filtrato di descrittori di proprietà per l'oggetto rappresentato da questo descrittore di tipi.</summary>
      <param name="attributes">Matrice di attributi da utilizzare come filtro. Può essere <see langword="null" />.</param>
      <returns>Oggetto <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> contenente le descrizioni delle proprietà per l'oggetto rappresentato da questo descrittore di tipi. Il valore predefinito è <see cref="F:System.ComponentModel.PropertyDescriptorCollection.Empty" />.</returns>
    </member>
    <member name="M:System.ComponentModel.CustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary>Restituisce un oggetto che contiene la proprietà descritta dal descrittore di proprietà specificato.</summary>
      <param name="pd">Il descrittore di proprietà per il quale recuperare l'oggetto proprietario.</param>
      <returns>Oggetto <see cref="T:System.Object" /> proprietario della proprietà specificata dal descrittore di tipi. Il valore predefinito è <see langword="null" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DataObjectAttribute">
      <summary>Identifica un tipo come un oggetto adatto per l'associazione a un oggetto <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.ComponentModel.DataObjectAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.DataObjectAttribute" />.</summary>
    </member>
    <member name="M:System.ComponentModel.DataObjectAttribute.#ctor(System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.DataObjectAttribute" /> e indica se un oggetto è adatto per l'associazione a un oggetto <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
      <param name="isDataObject">
        <see langword="true" /> se l'oggetto è adatto per l'associazione a un oggetto <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />; in caso contrario, <see langword="false" />.</param>
    </member>
    <member name="F:System.ComponentModel.DataObjectAttribute.DataObject">
      <summary>Indica che la classe è adatta per l'associazione a un oggetto <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> in fase di progettazione. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.DataObjectAttribute.Default">
      <summary>Rappresenta il valore predefinito della classe <see cref="T:System.ComponentModel.DataObjectAttribute" /> che indica che la classe è adatta per l'associazione a un oggetto <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> in fase di progettazione. Questo campo è di sola lettura.</summary>
    </member>
    <member name="M:System.ComponentModel.DataObjectAttribute.Equals(System.Object)">
      <summary>Determina se questa istanza dell'oggetto <see cref="T:System.ComponentModel.DataObjectAttribute" /> corrisponde allo schema di un altro oggetto.</summary>
      <param name="obj">Un oggetto da confrontare con questa istanza dell'oggetto <see cref="T:System.ComponentModel.DataObjectAttribute" />.</param>
      <returns>
        <see langword="true" /> se questa istanza corrisponde a quella specificata dal parametro <paramref name="obj" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DataObjectAttribute.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Codice hash di un intero con segno a 32 bit.</returns>
    </member>
    <member name="P:System.ComponentModel.DataObjectAttribute.IsDataObject">
      <summary>Ottiene un valore che indica se un oggetto dovrebbe essere considerato adatto per l'associazione a un oggetto <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> in fase di progettazione.</summary>
      <returns>
        <see langword="true" /> se l'oggetto è adatto per l'associazione a un oggetto <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DataObjectAttribute.IsDefaultAttribute">
      <summary>Ottiene un valore che indica se il valore corrente dell'attributo è il valore predefinito dell'attributo stesso.</summary>
      <returns>
        <see langword="true" /> se il valore corrente dell'attributo è quello predefinito, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="F:System.ComponentModel.DataObjectAttribute.NonDataObject">
      <summary>Indica che la classe non è adatta per l'associazione a un oggetto <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> in fase di progettazione. Questo campo è di sola lettura.</summary>
    </member>
    <member name="T:System.ComponentModel.DataObjectFieldAttribute">
      <summary>Fornisce metadati per una proprietà che rappresenta un campo dati. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.ComponentModel.DataObjectFieldAttribute.#ctor(System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.DataObjectFieldAttribute" /> e indica se il campo è la chiave primaria della riga di dati.</summary>
      <param name="primaryKey">
        <see langword="true" /> per indicare che il campo è la chiave primaria della riga di dati; in caso contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.ComponentModel.DataObjectFieldAttribute.#ctor(System.Boolean,System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.DataObjectFieldAttribute" /> e indica se il campo è la chiave primaria della riga di dati e se il campo è un campo di identità del database.</summary>
      <param name="primaryKey">
        <see langword="true" /> per indicare che il campo è la chiave primaria della riga di dati; in caso contrario, <see langword="false" />.</param>
      <param name="isIdentity">
        <see langword="true" /> per indicare che il campo è un campo di identità che identifica in modo univoco la riga di dati; in caso contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.ComponentModel.DataObjectFieldAttribute.#ctor(System.Boolean,System.Boolean,System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.DataObjectFieldAttribute" /> e indica se il campo è la chiave primaria della riga di dati e se il campo è un campo di identità del database e se il campo può essere null.</summary>
      <param name="primaryKey">
        <see langword="true" /> per indicare che il campo è la chiave primaria della riga di dati; in caso contrario, <see langword="false" />.</param>
      <param name="isIdentity">
        <see langword="true" /> per indicare che il campo è un campo di identità che identifica in modo univoco la riga di dati; in caso contrario, <see langword="false" />.</param>
      <param name="isNullable">
        <see langword="true" /> per indicare che il campo può essere null nell'archivio dati in caso contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.ComponentModel.DataObjectFieldAttribute.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Int32)">
      <summary>Inizializza un nuova istanza della classe <see cref="T:System.ComponentModel.DataObjectFieldAttribute" /> e indica se il campo è la chiave primaria della riga di dati, se si tratta di un campo di identità del database e se può essere null e se imposta la lunghezza del campo.</summary>
      <param name="primaryKey">
        <see langword="true" /> per indicare che il campo è la chiave primaria della riga di dati; in caso contrario, <see langword="false" />.</param>
      <param name="isIdentity">
        <see langword="true" /> per indicare che il campo è un campo di identità che identifica in modo univoco la riga di dati; in caso contrario, <see langword="false" />.</param>
      <param name="isNullable">
        <see langword="true" /> per indicare che il campo può essere null nell'archivio dati in caso contrario, <see langword="false" />.</param>
      <param name="length">Lunghezza del campo in byte.</param>
    </member>
    <member name="M:System.ComponentModel.DataObjectFieldAttribute.Equals(System.Object)">
      <summary>Restituisce un valore che indica se questa istanza è uguale a un oggetto specificato.</summary>
      <param name="obj">Un oggetto da confrontare con questa istanza dell'oggetto <see cref="T:System.ComponentModel.DataObjectFieldAttribute" />.</param>
      <returns>
        <see langword="true" /> se questa istanza corrisponde a quella specificata dal parametro <paramref name="obj" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DataObjectFieldAttribute.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Codice hash di un intero con segno a 32 bit.</returns>
    </member>
    <member name="P:System.ComponentModel.DataObjectFieldAttribute.IsIdentity">
      <summary>Ottiene un valore che indica se una proprietà rappresenta un campo di identità dei dati sottostanti.</summary>
      <returns>
        <see langword="true" /> se la proprietà rappresenta un campo di identità nei dati sottostanti; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataObjectFieldAttribute.IsNullable">
      <summary>Ottiene un valore che indica se una proprietà rappresenta un campo che può essere null nell'archivio dati sottostante.</summary>
      <returns>
        <see langword="true" /> se la proprietà rappresenta un campo che può essere null nell'archivio dati sottostante; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataObjectFieldAttribute.Length">
      <summary>Ottiene la lunghezza in byte della proprietà.</summary>
      <returns>La lunghezza della proprietà in byte o -1 se non impostata.</returns>
    </member>
    <member name="P:System.ComponentModel.DataObjectFieldAttribute.PrimaryKey">
      <summary>Ottiene un valore che indica se una proprietà è la chiave primaria nei dati sottostanti.</summary>
      <returns>
        <see langword="true" /> se la proprietà è la chiave primaria dell'archivio dati; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DataObjectMethodAttribute">
      <summary>Identifica un metodo di operazione dati esposto da un tipo, il tipo di operazione effettuata dal metodo e se il metodo è il metodo predefinito dei dati. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.ComponentModel.DataObjectMethodAttribute.#ctor(System.ComponentModel.DataObjectMethodType)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.DataObjectMethodAttribute" /> e identifica il tipo di operazione dati effettuata dal metodo.</summary>
      <param name="methodType">Uno dei valori dell'oggetto <see cref="T:System.ComponentModel.DataObjectMethodType" /> che descrive l'operazione dati effettuata dal metodo.</param>
    </member>
    <member name="M:System.ComponentModel.DataObjectMethodAttribute.#ctor(System.ComponentModel.DataObjectMethodType,System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.DataObjectMethodAttribute" />, identifica il tipo di operazione dati eseguita dal metodo e identifica se il metodo è il metodo dati predefinito esposto dall'oggetto dati.</summary>
      <param name="methodType">Uno dei valori dell'oggetto <see cref="T:System.ComponentModel.DataObjectMethodType" /> che descrive l'operazione dati effettuata dal metodo.</param>
      <param name="isDefault">
        <see langword="true" /> per indicare che il metodo al quale è applicato l'attributo è quello predefinito dell'oggetto dati per il <paramref name="methodType" /> specificato; in caso contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.ComponentModel.DataObjectMethodAttribute.Equals(System.Object)">
      <summary>Restituisce un valore che indica se questa istanza è uguale a un oggetto specificato.</summary>
      <param name="obj">Un oggetto da confrontare con questa istanza dell'oggetto <see cref="T:System.ComponentModel.DataObjectMethodAttribute" />.</param>
      <returns>
        <see langword="true" /> se questa istanza corrisponde a quella specificata dal parametro <paramref name="obj" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DataObjectMethodAttribute.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Codice hash di un intero con segno a 32 bit.</returns>
    </member>
    <member name="P:System.ComponentModel.DataObjectMethodAttribute.IsDefault">
      <summary>Ottiene un valore che indica se il metodo al quale è applicato <see cref="T:System.ComponentModel.DataObjectMethodAttribute" /> è il metodo dati predefinito esposto dall'oggetto dati per un tipo di metodo specifico.</summary>
      <returns>
        <see langword="true" /> se il metodo è quello predefinito esposto dall'oggetto per un tipo di metodo; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DataObjectMethodAttribute.Match(System.Object)">
      <summary>Ottiene un valore che indica se questa istanza condivide uno schema comune con un attributo specificato.</summary>
      <param name="obj">Un oggetto da confrontare con questa istanza dell'oggetto <see cref="T:System.ComponentModel.DataObjectMethodAttribute" />.</param>
      <returns>
        <see langword="true" /> se questa istanza corrisponde a quella specificata dal parametro <paramref name="obj" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataObjectMethodAttribute.MethodType">
      <summary>Ottiene un valore <see cref="T:System.ComponentModel.DataObjectMethodType" /> che indica il tipo di operazione dati effettuata dal metodo.</summary>
      <returns>Uno dei valori <see cref="T:System.ComponentModel.DataObjectMethodType" /> che identifica il tipo di operazione dati eseguita dal metodo al quale è applicato <see cref="T:System.ComponentModel.DataObjectMethodAttribute" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DataObjectMethodType">
      <summary>Identifica il tipo di operazione dati eseguito da un metodo, come specificato dall'oggetto <see cref="T:System.ComponentModel.DataObjectMethodAttribute" /> applicato al metodo.</summary>
    </member>
    <member name="F:System.ComponentModel.DataObjectMethodType.Delete">
      <summary>Indica che un metodo viene utilizzato per un'operazione dati che elimina i dati.</summary>
    </member>
    <member name="F:System.ComponentModel.DataObjectMethodType.Fill">
      <summary>Indica che un metodo viene utilizzato per un'operazione dati che riempie un oggetto <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.ComponentModel.DataObjectMethodType.Insert">
      <summary>Indica che un metodo viene utilizzato per un'operazione dati che inserisce i dati.</summary>
    </member>
    <member name="F:System.ComponentModel.DataObjectMethodType.Select">
      <summary>Indica che un metodo viene utilizzato per un'operazione dati che recupera i dati.</summary>
    </member>
    <member name="F:System.ComponentModel.DataObjectMethodType.Update">
      <summary>Indica che un metodo viene utilizzato per un'operazione dati che aggiorna i dati.</summary>
    </member>
    <member name="T:System.ComponentModel.DateTimeConverter">
      <summary>Fornisce un convertitore di tipi per convertire oggetti <see cref="T:System.DateTime" /> in e da diverse altre rappresentazioni.</summary>
    </member>
    <member name="M:System.ComponentModel.DateTimeConverter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.DateTimeConverter" />.</summary>
    </member>
    <member name="M:System.ComponentModel.DateTimeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ottiene un valore che indica se il convertitore può convertire un oggetto dal tipo di origine specificato in un oggetto <see cref="T:System.DateTime" /> utilizzando il contesto specificato.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="sourceType">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo dal quale si desidera effettuare la conversione.</param>
      <returns>
        <see langword="true" /> se l'oggetto può eseguire la conversione. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DateTimeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ottiene un valore che indica se questo convertitore può convertire un oggetto nel tipo di destinazione specificato usando il contesto.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="destinationType">Tipo <see cref="T:System.Type" /> che rappresenta il tipo di destinazione della conversione.</param>
      <returns>
        <see langword="true" /> se il convertitore può eseguire la conversione. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DateTimeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converte l'oggetto valore specificato in un oggetto <see cref="T:System.DateTime" />.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> facoltativo. Se non vengono specificate impostazioni cultura, vengono utilizzate quelle correnti.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire.</param>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta la conversione di <paramref name="value" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> non è un valore valido per il tipo di destinazione.</exception>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione.</exception>
    </member>
    <member name="M:System.ComponentModel.DateTimeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converte l'oggetto valore specificato in un oggetto <see cref="T:System.DateTime" /> utilizzando gli argomenti.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> facoltativo. Se non vengono specificate impostazioni cultura, vengono utilizzate quelle correnti.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire.</param>
      <param name="destinationType">Tipo <see cref="T:System.Type" /> in cui convertire il valore.</param>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta la conversione di <paramref name="value" />.</returns>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione.</exception>
    </member>
    <member name="T:System.ComponentModel.DateTimeOffsetConverter">
      <summary>Fornisce un convertitore di tipi per convertire le strutture <see cref="T:System.DateTimeOffset" /> in e da diverse altre rappresentazioni.</summary>
    </member>
    <member name="M:System.ComponentModel.DateTimeOffsetConverter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.DateTimeOffsetConverter" />.</summary>
    </member>
    <member name="M:System.ComponentModel.DateTimeOffsetConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Restituisce un valore che indica se un oggetto del tipo di origine specificato può essere convertito in oggetto <see cref="T:System.DateTimeOffset" />.</summary>
      <param name="context">Contesto del formato data.</param>
      <param name="sourceType">Tipo di origine da verificare.</param>
      <returns>
        <see langword="true" /> se il tipo specificato può essere convertito in <see cref="T:System.DateTimeOffset" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DateTimeOffsetConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Restituisce un valore che indica se <see cref="T:System.DateTimeOffset" /> può essere convertito in un oggetto del tipo specificato.</summary>
      <param name="context">Contesto del formato data.</param>
      <param name="destinationType">Tipo di destinazione da verificare.</param>
      <returns>
        <see langword="true" /> se <see cref="T:System.DateTimeOffset" /> può essere convertito nel tipo specificato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DateTimeOffsetConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converte l'oggetto specificato in un oggetto <see cref="T:System.DateTimeOffset" />.</summary>
      <param name="context">Contesto del formato data.</param>
      <param name="culture">Impostazioni cultura della data.</param>
      <param name="value">Oggetto da convertire.</param>
      <returns>Oggetto <see cref="T:System.DateTimeOffset" /> che rappresenta l'oggetto specificato.</returns>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione.</exception>
    </member>
    <member name="M:System.ComponentModel.DateTimeOffsetConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converte un oggetto <see cref="T:System.DateTimeOffset" /> in un oggetto del tipo specificato.</summary>
      <param name="context">Contesto del formato data.</param>
      <param name="culture">Impostazioni cultura della data.</param>
      <param name="value">Elemento <see cref="T:System.DateTimeOffset" /> da convertire.</param>
      <param name="destinationType">Tipo in cui eseguire la conversione.</param>
      <returns>Oggetto del tipo specificato che rappresenta <see cref="T:System.DateTimeOffset" />.</returns>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione.</exception>
    </member>
    <member name="T:System.ComponentModel.DecimalConverter">
      <summary>Fornisce un convertitore di tipi per convertire oggetti <see cref="T:System.Decimal" /> in e da diverse altre rappresentazioni.</summary>
    </member>
    <member name="M:System.ComponentModel.DecimalConverter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.DecimalConverter" />.</summary>
    </member>
    <member name="M:System.ComponentModel.DecimalConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ottiene un valore che indica se questo convertitore può convertire un oggetto nel tipo di destinazione specificato usando il contesto.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="destinationType">Tipo <see cref="T:System.Type" /> che rappresenta il tipo di destinazione della conversione.</param>
      <returns>
        <see langword="true" /> se il convertitore può eseguire la conversione. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DecimalConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converte l'oggetto valore specificato in un oggetto <see cref="T:System.Decimal" /> utilizzando gli argomenti.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> facoltativo. Se non vengono specificate impostazioni cultura, vengono utilizzate quelle correnti.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire.</param>
      <param name="destinationType">Tipo <see cref="T:System.Type" /> in cui convertire il valore.</param>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il valore convertito.</returns>
      <exception cref="T:System.ArgumentNullException">L'elemento <paramref name="destinationType" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione.</exception>
    </member>
    <member name="T:System.ComponentModel.DefaultBindingPropertyAttribute">
      <summary>Specifica la proprietà di associazione predefinita per un componente. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.ComponentModel.DefaultBindingPropertyAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.DefaultBindingPropertyAttribute" /> senza utilizzare parametri.</summary>
    </member>
    <member name="M:System.ComponentModel.DefaultBindingPropertyAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.DefaultBindingPropertyAttribute" /> con il nome della proprietà specificato.</summary>
      <param name="name">Nome della proprietà di associazione predefinita.</param>
    </member>
    <member name="F:System.ComponentModel.DefaultBindingPropertyAttribute.Default">
      <summary>Rappresenta il valore predefinito per la classe <see cref="T:System.ComponentModel.DefaultBindingPropertyAttribute" />.</summary>
    </member>
    <member name="M:System.ComponentModel.DefaultBindingPropertyAttribute.Equals(System.Object)">
      <summary>Determina se l'oggetto <see cref="T:System.Object" /> specificato è uguale all'istanza <see cref="T:System.ComponentModel.DefaultBindingPropertyAttribute" /> corrente.</summary>
      <param name="obj">Oggetto <see cref="T:System.Object" /> da confrontare con l'istanza <see cref="T:System.ComponentModel.DefaultBindingPropertyAttribute" /> corrente.</param>
      <returns>
        <see langword="true" /> se l'oggetto è uguale all'istanza corrente; in caso contrario, <see langword="false" />, indica che non sono uguali.</returns>
    </member>
    <member name="M:System.ComponentModel.DefaultBindingPropertyAttribute.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Codice hash di un intero con segno a 32 bit.</returns>
    </member>
    <member name="P:System.ComponentModel.DefaultBindingPropertyAttribute.Name">
      <summary>Ottiene il nome della proprietà di associazione predefinita per il componente al quale è associato l'oggetto <see cref="T:System.ComponentModel.DefaultBindingPropertyAttribute" />.</summary>
      <returns>Nome della proprietà di associazione predefinita per il componente al quale è associato l'oggetto <see cref="T:System.ComponentModel.DefaultBindingPropertyAttribute" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DefaultEventAttribute">
      <summary>Specifica l'evento predefinito per un componente.</summary>
    </member>
    <member name="M:System.ComponentModel.DefaultEventAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.DefaultEventAttribute" />.</summary>
      <param name="name">Nome dell'evento predefinito per il componente a cui è associato questo attributo.</param>
    </member>
    <member name="F:System.ComponentModel.DefaultEventAttribute.Default">
      <summary>Consente di specificare il valore predefinito per l'attributo <see cref="T:System.ComponentModel.DefaultEventAttribute" />, che è <see langword="null" />. Questo campo <see langword="static" /> è di sola lettura.</summary>
    </member>
    <member name="M:System.ComponentModel.DefaultEventAttribute.Equals(System.Object)">
      <summary>Specifica se il valore dell'oggetto specificato è uguale all'oggetto <see cref="T:System.ComponentModel.DefaultEventAttribute" /> corrente.</summary>
      <param name="obj">Oggetto di cui va verificata l'uguaglianza di valore.</param>
      <returns>
        <see langword="true" /> se il valore dell'oggetto specificato è uguale a quello dell'oggetto corrente. <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="M:System.ComponentModel.DefaultEventAttribute.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Codice hash di un intero con segno a 32 bit.</returns>
    </member>
    <member name="P:System.ComponentModel.DefaultEventAttribute.Name">
      <summary>Ottiene il nome dell'evento predefinito per il componente a cui è associato questo attributo.</summary>
      <returns>Nome dell'evento predefinito per il componente a cui è associato questo attributo. Il valore predefinito è <see langword="null" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DefaultPropertyAttribute">
      <summary>Specifica la proprietà predefinita per un componente.</summary>
    </member>
    <member name="M:System.ComponentModel.DefaultPropertyAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.DefaultPropertyAttribute" />.</summary>
      <param name="name">Nome della proprietà predefinita per il componente a cui è associato questo attributo.</param>
    </member>
    <member name="F:System.ComponentModel.DefaultPropertyAttribute.Default">
      <summary>Consente di specificare il valore predefinito per l'attributo <see cref="T:System.ComponentModel.DefaultPropertyAttribute" />, che è <see langword="null" />. Questo campo <see langword="static" /> è di sola lettura.</summary>
    </member>
    <member name="M:System.ComponentModel.DefaultPropertyAttribute.Equals(System.Object)">
      <summary>Specifica se il valore dell'oggetto specificato è uguale all'oggetto <see cref="T:System.ComponentModel.DefaultPropertyAttribute" /> corrente.</summary>
      <param name="obj">Oggetto di cui va verificata l'uguaglianza di valore.</param>
      <returns>
        <see langword="true" /> se il valore dell'oggetto specificato è uguale a quello dell'oggetto corrente. <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="M:System.ComponentModel.DefaultPropertyAttribute.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Codice hash di un intero con segno a 32 bit.</returns>
    </member>
    <member name="P:System.ComponentModel.DefaultPropertyAttribute.Name">
      <summary>Ottiene il nome della proprietà predefinita per il componente a cui è associato questo attributo.</summary>
      <returns>Nome della proprietà predefinita per il componente a cui è associato questo attributo. Il valore predefinito è <see langword="null" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ActiveDesignerEventArgs">
      <summary>Fornisce dati per l'evento <see cref="P:System.ComponentModel.Design.IDesignerEventService.ActiveDesigner" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ActiveDesignerEventArgs.#ctor(System.ComponentModel.Design.IDesignerHost,System.ComponentModel.Design.IDesignerHost)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.ActiveDesignerEventArgs" />.</summary>
      <param name="oldDesigner">Documento che sta per perdere l'attivazione.</param>
      <param name="newDesigner">Documento che sta per essere attivato.</param>
    </member>
    <member name="P:System.ComponentModel.Design.ActiveDesignerEventArgs.NewDesigner">
      <summary>Ottiene il documento che sta per essere attivato.</summary>
      <returns>Oggetto <see cref="T:System.ComponentModel.Design.IDesignerHost" /> che rappresenta il documento che sta per essere attivato.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ActiveDesignerEventArgs.OldDesigner">
      <summary>Ottiene il documento che sta per perdere l'attivazione.</summary>
      <returns>Oggetto <see cref="T:System.ComponentModel.Design.IDesignerHost" /> che rappresenta il documento che sta per perdere l'attivazione.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ActiveDesignerEventHandler">
      <summary>Rappresenta il metodo che gestirà l'evento <see cref="E:System.ComponentModel.Design.IDesignerEventService.ActiveDesignerChanged" />.</summary>
      <param name="sender">Origine dell'evento.</param>
      <param name="e">Oggetto <see cref="T:System.ComponentModel.Design.ActiveDesignerEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="T:System.ComponentModel.Design.CheckoutException">
      <summary>L'eccezione che viene generata quando viene annullato o non riesce un tentativo di estrazione di un file archiviato in un programma di gestione del codice sorgente.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CheckoutException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.CheckoutException" /> senza alcun messaggio o codice di errore associato.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CheckoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.CheckoutException" /> usando i dati di serializzazione e il contesto specificati.</summary>
      <param name="info">Classe <see cref="T:System.Runtime.Serialization.SerializationInfo" /> da utilizzare per la deserializzazione.</param>
      <param name="context">Destinazione da utilizzare per la deserializzazione.</param>
    </member>
    <member name="M:System.ComponentModel.Design.CheckoutException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.CheckoutException" /> con il messaggio specificato.</summary>
      <param name="message">Messaggio che descrive l'eccezione.</param>
    </member>
    <member name="M:System.ComponentModel.Design.CheckoutException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.CheckoutException" /> con la descrizione dettagliata e l'eccezione specificate.</summary>
      <param name="message">Descrizione dettagliata dell'errore.</param>
      <param name="innerException">Riferimento all'eccezione interna che è la causa di questa eccezione.</param>
    </member>
    <member name="M:System.ComponentModel.Design.CheckoutException.#ctor(System.String,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.CheckoutException" /> con il messaggio e il codice di errore specificati.</summary>
      <param name="message">Messaggio che descrive l'eccezione.</param>
      <param name="errorCode">Codice di errore da passare.</param>
    </member>
    <member name="F:System.ComponentModel.Design.CheckoutException.Canceled">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.CheckoutException" /> in cui si specifica che l'estrazione è stata annullata. Questo campo è di sola lettura.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.CommandID">
      <summary>Rappresenta un identificatore di comando univoco che è costituito da un ID di comando numerico e da un identificatore GUID di gruppo di menu.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CommandID.#ctor(System.Guid,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.CommandID" /> utilizzando il GUID del gruppo di menu specificato e il numero di ID di comando.</summary>
      <param name="menuGroup">GUID del gruppo a cui appartiene questo comando di menu.</param>
      <param name="commandID">Identificatore numerico di questo comando di menu.</param>
    </member>
    <member name="M:System.ComponentModel.Design.CommandID.Equals(System.Object)">
      <summary>Determina se due istanze di <see cref="T:System.ComponentModel.Design.CommandID" /> sono uguali.</summary>
      <param name="obj">Oggetto da confrontare.</param>
      <returns>
        <see langword="true" /> se l'oggetto specificato è equivalente a questo; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CommandID.GetHashCode">
      <summary>Viene usato come funzione hash per un tipo specifico.</summary>
      <returns>Codice hash per l'oggetto <see cref="T:System.Object" /> corrente.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CommandID.Guid">
      <summary>Ottiene il GUID del gruppo di menu a cui appartiene il comando di menu identificato da questo oggetto <see cref="T:System.ComponentModel.Design.CommandID" />.</summary>
      <returns>GUID del gruppo di comando per questo comando.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CommandID.ID">
      <summary>Ottiene il numero di ID del comando.</summary>
      <returns>Numero di ID del comando.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CommandID.ToString">
      <summary>Restituisce un oggetto <see cref="T:System.String" /> che rappresenta l'oggetto corrente.</summary>
      <returns>Stringa che contiene le informazioni sull'ID del comando, l'identificatore GUID e l'identificatore di interi.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ComponentChangedEventArgs">
      <summary>Fornisce dati per l'evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentChangedEventArgs.#ctor(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" />.</summary>
      <param name="component">Componente che è stato modificato.</param>
      <param name="member">Oggetto <see cref="T:System.ComponentModel.MemberDescriptor" /> che rappresenta il membro che è stato modificato.</param>
      <param name="oldValue">Valore precedente del membro modificato.</param>
      <param name="newValue">Nuovo valore del membro modificato.</param>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentChangedEventArgs.Component">
      <summary>Ottiene il componente che è stato modificato.</summary>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il componente che è stato modificato.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentChangedEventArgs.Member">
      <summary>Ottiene il membro che è stato modificato.</summary>
      <returns>Oggetto <see cref="T:System.ComponentModel.MemberDescriptor" /> che indica il membro che è stato modificato.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentChangedEventArgs.NewValue">
      <summary>Ottiene il nuovo valore del membro modificato.</summary>
      <returns>Nuovo valore del membro modificato. Questa proprietà può essere <see langword="null" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentChangedEventArgs.OldValue">
      <summary>Ottiene il valore precedente del membro modificato.</summary>
      <returns>Valore precedente del membro modificato. Questa proprietà può essere <see langword="null" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ComponentChangedEventHandler">
      <summary>Rappresenta il metodo che gestirà un evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />.</summary>
      <param name="sender">Origine dell'evento.</param>
      <param name="e">Oggetto <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="T:System.ComponentModel.Design.ComponentChangingEventArgs">
      <summary>Fornisce dati per l'evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" />. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentChangingEventArgs.#ctor(System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.ComponentChangingEventArgs" />.</summary>
      <param name="component">Componente che sta per essere modificato.</param>
      <param name="member">Oggetto <see cref="T:System.ComponentModel.MemberDescriptor" /> che indica il membro del componente che sta per essere modificato.</param>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentChangingEventArgs.Component">
      <summary>Ottiene il componente che sta per essere modificato o il componente che è il contenitore padre del membro che sta per essere modificato.</summary>
      <returns>Componente con un membro che sta per essere modificato.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentChangingEventArgs.Member">
      <summary>Ottiene il membro che sta per essere modificato.</summary>
      <returns>Oggetto <see cref="T:System.ComponentModel.MemberDescriptor" /> che indica il membro che sta per essere modificato, se noto. In caso contrario, <see langword="null" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ComponentChangingEventHandler">
      <summary>Rappresenta il metodo che gestirà un evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" />.</summary>
      <param name="sender">Origine dell'evento.</param>
      <param name="e">Evento <see cref="T:System.ComponentModel.Design.ComponentChangingEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="T:System.ComponentModel.Design.ComponentEventArgs">
      <summary>Fornisce dati per gli eventi <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded" />, <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding" />, <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved" /> e <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentEventArgs.#ctor(System.ComponentModel.IComponent)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />.</summary>
      <param name="component">Componente che è l'origine dell'evento.</param>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentEventArgs.Component">
      <summary>Ottiene il componente associato all'evento.</summary>
      <returns>Componente associato all'evento.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ComponentEventHandler">
      <summary>Rappresenta il metodo che gestirà gli eventi <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding" />, <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded" />, <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving" /> e <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved" /> generati per gli eventi a livello di componente.</summary>
      <param name="sender">Origine dell'evento.</param>
      <param name="e">Oggetto <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="T:System.ComponentModel.Design.ComponentRenameEventArgs">
      <summary>Fornisce dati per l'evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentRenameEventArgs.#ctor(System.Object,System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.ComponentRenameEventArgs" />.</summary>
      <param name="component">Componente da rinominare.</param>
      <param name="oldName">Nome precedente del componente.</param>
      <param name="newName">Nuovo nome del componente.</param>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentRenameEventArgs.Component">
      <summary>Ottiene il componente che viene rinominato.</summary>
      <returns>Componente che viene rinominato.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentRenameEventArgs.NewName">
      <summary>Ottiene il nome del componente dopo l'evento di ridenominazione.</summary>
      <returns>Nome del componente dopo l'evento di ridenominazione.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentRenameEventArgs.OldName">
      <summary>Ottiene il nome del componente prima dell'evento di ridenominazione.</summary>
      <returns>Nome precedente del componente.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ComponentRenameEventHandler">
      <summary>Rappresenta il metodo che gestirà un evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" />.</summary>
      <param name="sender">Origine dell'evento.</param>
      <param name="e">Oggetto <see cref="T:System.ComponentModel.Design.ComponentRenameEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerCollection">
      <summary>Rappresenta un insieme di finestre di progettazione.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerCollection.#ctor(System.Collections.IList)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.DesignerCollection" /> contenente il gruppo di finestre di progettazione specificato.</summary>
      <param name="designers">Elenco che contiene l'insieme di finestre di progettazione da aggiungere.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerCollection.#ctor(System.ComponentModel.Design.IDesignerHost[])">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.DesignerCollection" /> contenente le finestre di progettazione specificate.</summary>
      <param name="designers">Matrice di oggetti <see cref="T:System.ComponentModel.Design.IDesignerHost" /> da archiviare.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerCollection.Count">
      <summary>Ottiene il numero di finestre di progettazione dell'insieme.</summary>
      <returns>Numero di finestre di progettazione dell'insieme.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerCollection.GetEnumerator">
      <summary>Ottiene un nuovo enumeratore per questo insieme.</summary>
      <returns>Oggetto <see cref="T:System.Collections.IEnumerator" /> che enumera l'insieme.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerCollection.Item(System.Int32)">
      <summary>Ottiene la finestra di progettazione in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice della finestra di progettazione da restituire.</param>
      <returns>Finestra di progettazione in corrispondenza dell'indice specificato.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copia gli elementi dell'insieme in un oggetto <see cref="T:System.Array" />, a partire da uno specifico indice di <see cref="T:System.Array" />.</summary>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'insieme. L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="index">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerCollection.System#Collections#ICollection#Count">
      <summary>Ottiene il numero di elementi contenuti nella raccolta.</summary>
      <returns>Numero di elementi contenuti nella raccolta.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Ottiene un valore che indica se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe).</summary>
      <returns>
        <see langword="true" /> se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe); in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerCollection.System#Collections#ICollection#SyncRoot">
      <summary>Ottiene un oggetto che può essere usato per sincronizzare l'accesso alla raccolta.</summary>
      <returns>Oggetto che può essere usato per sincronizzare l'accesso alla raccolta.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Ottiene un nuovo enumeratore per questo insieme.</summary>
      <returns>Oggetto <see cref="T:System.Collections.IEnumerator" /> che enumera l'insieme.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerEventArgs">
      <summary>Fornisce i dati per gli eventi <see cref="E:System.ComponentModel.Design.IDesignerEventService.DesignerCreated" /> e <see cref="E:System.ComponentModel.Design.IDesignerEventService.DesignerDisposed" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerEventArgs.#ctor(System.ComponentModel.Design.IDesignerHost)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.DesignerEventArgs" />.</summary>
      <param name="host">Oggetto <see cref="T:System.ComponentModel.Design.IDesignerHost" /> del documento.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerEventArgs.Designer">
      <summary>Ottiene l'host del documento.</summary>
      <returns>Oggetto <see cref="T:System.ComponentModel.Design.IDesignerHost" /> del documento.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerEventHandler">
      <summary>Rappresenta il metodo che gestirà gli eventi <see cref="E:System.ComponentModel.Design.IDesignerEventService.DesignerCreated" /> e <see cref="E:System.ComponentModel.Design.IDesignerEventService.DesignerDisposed" /> che vengono generati quando un documento viene creato o eliminato.</summary>
      <param name="sender">Origine dell'evento.</param>
      <param name="e">Oggetto <see cref="T:System.ComponentModel.Design.DesignerEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerOptionService">
      <summary>Fornisce una classe di base per ottenere e impostare i valori delle opzioni per una finestra di progettazione.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerOptionService.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.DesignerOptionService" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerOptionService.CreateOptionCollection(System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection,System.String,System.Object)">
      <summary>Crea un nuovo oggetto <see cref="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" /> con il nome specificato e lo aggiunge all'elemento padre indicato.</summary>
      <param name="parent">Insieme di opzioni della finestra di progettazione padre. Tutti gli insiemi dispongono di un elemento padre eccetto l'insieme di oggetti radice.</param>
      <param name="name">Nome dell'insieme.</param>
      <param name="value">L'oggetto che fornisce le proprietà per l'insieme. Può essere <see langword="null" /> se l'insieme non deve fornire proprietà.</param>
      <returns>Nuovo oggetto <see cref="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" /> con il nome specificato.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="parent" /> o <paramref name="name" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Il parametro <paramref name="name" /> è una stringa vuota.</exception>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection">
      <summary>Contiene una raccolta di opzioni della finestra di progettazione. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copia l'intero insieme in un oggetto <see cref="T:System.Array" /> unidimensionale compatibile, a partire dall'indice specificato della matrice di destinazione.</summary>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'insieme. L'indicizzazione di <paramref name="array" /> deve essere in base zero.</param>
      <param name="index">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.Count">
      <summary>Ottiene il numero degli insiemi di opzioni figlio contenuti nell'oggetto <see cref="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" />.</summary>
      <returns>Numero degli insiemi di opzioni figlio contenuti nell'oggetto <see cref="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.GetEnumerator">
      <summary>Restituisce un'interfaccia <see cref="T:System.Collections.IEnumerator" /> che può essere utilizzata per scorrere l'insieme.</summary>
      <returns>Interfaccia <see cref="T:System.Collections.IEnumerator" /> che può essere utilizzata per scorrere l'insieme.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.IndexOf(System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection)">
      <summary>Restituisce l'indice della prima occorrenza di un determinato valore in un intervallo di questo insieme.</summary>
      <param name="value">Oggetto da individuare nella raccolta.</param>
      <returns>Indice della prima occorrenza del valore all'interno dell'intero insieme, se viene trovato; in caso contrario, il limite inferiore dell'insieme -1.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.Item(System.Int32)">
      <summary>Ottiene l'insieme figlio in corrispondenza dell'indice indicato.</summary>
      <param name="index">Indice in base zero dell'insieme figlio da ottenere.</param>
      <returns>Insieme figlio in corrispondenza dell'indice specificato.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.Item(System.String)">
      <summary>Ottiene l'insieme figlio in corrispondenza del nome indicato.</summary>
      <param name="name">Nome dell'insieme figlio.</param>
      <returns>Insieme figlio il cui nome è specificato nel parametro <paramref name="name" /> o valore <see langword="null" /> in mancanza del nome.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.Name">
      <summary>Ottiene il nome di <see cref="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" />.</summary>
      <returns>Nome di <see cref="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.Parent">
      <summary>Ottiene l'oggetto insieme padre.</summary>
      <returns>Oggetto insieme padre o valore <see langword="null" /> in mancanza di padre.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.Properties">
      <summary>Ottiene l'insieme delle proprietà offerte da questo oggetto <see cref="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" />, unitamente a tutti i relativi figli.</summary>
      <returns>Insieme delle proprietà offerte da questo oggetto <see cref="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" />, unitamente a tutti i relativi figli.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.ShowDialog">
      <summary>Visualizza un'interfaccia utente (UI) della finestra di dialogo mediante la quale l'utente può configurare le opzioni di questo oggetto <see cref="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" />.</summary>
      <returns>
        <see langword="true" /> se è possibile visualizzare la finestra di dialogo; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Ottiene un valore che indica se l'accesso all'insieme è sincronizzato e, di conseguenza, thread-safe.</summary>
      <returns>
        <see langword="true" /> se l'accesso all'insieme è sincronizzato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#ICollection#SyncRoot">
      <summary>Ottiene un oggetto che può essere usato per sincronizzare l'accesso alla raccolta.</summary>
      <returns>Oggetto che può essere usato per sincronizzare l'accesso alla raccolta.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#IList#Add(System.Object)">
      <summary>Aggiunge un elemento a <see cref="T:System.Collections.IList" />.</summary>
      <param name="value">Oggetto <see cref="T:System.Object" /> da aggiungere a <see cref="T:System.Collections.IList" />.</param>
      <returns>Posizione in cui è stato inserito il nuovo elemento.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#IList#Clear">
      <summary>Rimuove tutti gli elementi dalla raccolta.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#IList#Contains(System.Object)">
      <summary>Determina se la raccolta contiene un valore specifico.</summary>
      <param name="value">Oggetto <see cref="T:System.Object" /> da individuare nell'insieme.</param>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.Object" /> viene trovato nell'insieme; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>Determina l'indice di un elemento specifico dell'insieme.</summary>
      <param name="value">Oggetto <see cref="T:System.Object" /> da individuare nella raccolta.</param>
      <returns>Indice di <paramref name="value" />, se presente nell'elenco; in caso contrario, -1.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Inserisce un elemento nella raccolta in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero nel quale <paramref name="value" /> deve essere inserito.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da inserire nella raccolta.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#IList#IsFixedSize">
      <summary>Ottiene un valore che indica se la dimensione della raccolta è fissa.</summary>
      <returns>
        <see langword="true" /> se la raccolta è di dimensioni fisse; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#IList#IsReadOnly">
      <summary>Ottiene un valore che indica se la raccolta è di sola lettura.</summary>
      <returns>
        <see langword="true" /> se la raccolta è di sola lettura; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#IList#Item(System.Int32)">
      <summary>Ottiene o imposta l'elemento in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero dell'elemento da ottenere o impostare.</param>
      <returns>Elemento in corrispondenza dell'indice specificato.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#IList#Remove(System.Object)">
      <summary>Rimuove la prima occorrenza di un oggetto specifico dalla raccolta.</summary>
      <param name="value">Oggetto <see cref="T:System.Object" /> da rimuovere dalla raccolta.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>Rimuove l'elemento dell'insieme in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero dell'elemento da rimuovere.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerOptionService.Options">
      <summary>Ottiene l'insieme di opzioni per il servizio.</summary>
      <returns>Oggetto <see cref="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" /> popolato con le opzioni della finestra di progettazione disponibili.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerOptionService.PopulateOptionCollection(System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection)">
      <summary>Popola <see cref="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" />.</summary>
      <param name="options">Insieme da popolare.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerOptionService.ShowDialog(System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection,System.Object)">
      <summary>Mostra la finestra di dialogo delle opzioni per l'oggetto indicato.</summary>
      <param name="options">L'insieme di opzioni che include l'oggetto da richiamare.</param>
      <param name="optionObject">L'oggetto opzioni effettivo.</param>
      <returns>
        <see langword="true" /> se la finestra di dialogo viene visualizzata. In caso contrario, <see langword="false" /></returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerOptionService.System#ComponentModel#Design#IDesignerOptionService#GetOptionValue(System.String,System.String)">
      <summary>Ottiene il valore di un'opzione definita nel package.</summary>
      <param name="pageName">La pagina alla quale l'opzione è associata.</param>
      <param name="valueName">Nome della valore dell'opzione.</param>
      <returns>Valore dell'opzione denominato <paramref name="valueName" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pageName" /> o <paramref name="valueName" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerOptionService.System#ComponentModel#Design#IDesignerOptionService#SetOptionValue(System.String,System.String,System.Object)">
      <summary>Imposta il valore di un'opzione definita nel pacchetto.</summary>
      <param name="pageName">La pagina alla quale l'opzione è associata.</param>
      <param name="valueName">Nome della valore dell'opzione.</param>
      <param name="value">Valore dell'opzione.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pageName" /> o <paramref name="valueName" /> è <see langword="null" />.</exception>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerTransaction">
      <summary>Fornisce un metodo per raggruppare una serie di azioni della fase di progettazione per migliorare le prestazioni e consentire l'annullamento della maggior parte dei tipi di modifiche.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerTransaction.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> senza descrizione.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerTransaction.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> utilizzando la descrizione della transazione specificata.</summary>
      <param name="description">Descrizione relativa a questa transazione.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerTransaction.Cancel">
      <summary>Annulla la transazione e prova a ripristinare le modifiche apportate dagli eventi della transazione.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerTransaction.Canceled">
      <summary>Ottiene un valore che indica se la transazione è stata annullata.</summary>
      <returns>
        <see langword="true" /> se la transazione è stata annullata; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerTransaction.Commit">
      <summary>Esegue il commit di questa transazione.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerTransaction.Committed">
      <summary>Ottiene un valore che indica se è stato eseguito il commit della transazione.</summary>
      <returns>
        <see langword="true" /> se è stato eseguito il commit della transazione; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerTransaction.Description">
      <summary>Ottiene una descrizione relativa alla transazione.</summary>
      <returns>Descrizione relativa alla transazione.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerTransaction.Dispose(System.Boolean)">
      <summary>Rilascia le risorse non gestite usate da <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> e, facoltativamente, le risorse gestite.</summary>
      <param name="disposing">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite, <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerTransaction.Finalize">
      <summary>Libera le risorse associate all'oggetto. L'override consente di eseguire il commit della transazione se non è già stato eseguito.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerTransaction.OnCancel">
      <summary>Genera l'evento <see langword="Cancel" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerTransaction.OnCommit">
      <summary>Esegue l'operazione effettiva di commit di una transazione.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerTransaction.System#IDisposable#Dispose">
      <summary>Rilascia tutte le risorse usate da <see cref="T:System.ComponentModel.Design.DesignerTransaction" />.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerTransactionCloseEventArgs">
      <summary>Fornisce i dati per gli eventi <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" /> e <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerTransactionCloseEventArgs.#ctor(System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.DesignerTransactionCloseEventArgs" /> utilizzando il valore specificato che indica se la finestra di progettazione ha chiamato <see cref="M:System.ComponentModel.Design.DesignerTransaction.Commit" /> sulla transazione.</summary>
      <param name="commit">Valore che indica se è stato eseguito il commit della transazione.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerTransactionCloseEventArgs.#ctor(System.Boolean,System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.DesignerTransactionCloseEventArgs" />.</summary>
      <param name="commit">Valore che indica se è stato eseguito il commit della transazione.</param>
      <param name="lastTransaction">
        <see langword="true" /> se è l'ultima transazione da chiudere, altrimenti <see langword="false" />.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerTransactionCloseEventArgs.LastTransaction">
      <summary>Ottiene un valore che indica se si tratta dell'ultima transazione da chiudere.</summary>
      <returns>
        <see langword="true" /> se è l'ultima transazione da chiudere, altrimenti <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerTransactionCloseEventArgs.TransactionCommitted">
      <summary>Indica se la finestra di progettazione ha chiamato <see cref="M:System.ComponentModel.Design.DesignerTransaction.Commit" /> sulla transazione.</summary>
      <returns>
        <see langword="true" /> se la finestra di progettazione ha chiamato <see cref="M:System.ComponentModel.Design.DesignerTransaction.Commit" /> sulla transazione. <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerTransactionCloseEventHandler">
      <summary>Rappresenta il metodo che gestirà gli eventi <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" /> e <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" /> di una finestra di progettazione.</summary>
      <param name="sender">Origine dell'evento.</param>
      <param name="e">Oggetto <see cref="T:System.ComponentModel.Design.DesignerTransactionCloseEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerVerb">
      <summary>Rappresenta un verbo che può essere richiamato da una finestra di progettazione.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerVerb.#ctor(System.String,System.EventHandler)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.DesignerVerb" />.</summary>
      <param name="text">Testo del comando di menu visualizzato.</param>
      <param name="handler">Gestore eventi che esegue le operazioni del verbo.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerVerb.#ctor(System.String,System.EventHandler,System.ComponentModel.Design.CommandID)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.DesignerVerb" />.</summary>
      <param name="text">Testo del comando di menu visualizzato.</param>
      <param name="handler">Gestore eventi che esegue le operazioni del verbo.</param>
      <param name="startCommandID">ID del comando iniziale del verbo. Per impostazione predefinita, l'architettura della finestra di progettazione imposta una serie di ID di comando per i verbi, che è possibile sostituire con ID di comando personalizzati.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerVerb.Description">
      <summary>Ottiene o imposta la descrizione della voce di menu per il verbo.</summary>
      <returns>Stringa che descrive la voce di menu.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerVerb.Text">
      <summary>Ottiene il testo descrittivo del comando verbo nel menu.</summary>
      <returns>Descrizione del comando verbo.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerVerb.ToString">
      <summary>Esegue l'override di <see cref="M:System.Object.ToString" />.</summary>
      <returns>Testo del verbo o una stringa vuota ("") se il campo del testo è vuoto.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerVerbCollection">
      <summary>Rappresenta una raccolta di oggetti <see cref="T:System.ComponentModel.Design.DesignerVerb" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerVerbCollection.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerVerbCollection.#ctor(System.ComponentModel.Design.DesignerVerb[])">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> con la matrice specificata di oggetti <see cref="T:System.ComponentModel.Design.DesignerVerb" />.</summary>
      <param name="value">Matrice <see cref="T:System.ComponentModel.Design.DesignerVerb" /> che indica i verbi contenuti nell'insieme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerVerbCollection.Add(System.ComponentModel.Design.DesignerVerb)">
      <summary>Aggiunge l'oggetto <see cref="T:System.ComponentModel.Design.DesignerVerb" /> specificato alla raccolta.</summary>
      <param name="value">Oggetto <see cref="T:System.ComponentModel.Design.DesignerVerb" /> da aggiungere alla raccolta.</param>
      <returns>Indice dell'insieme in corrispondenza del quale è stato aggiunto il verbo.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerVerbCollection.AddRange(System.ComponentModel.Design.DesignerVerb[])">
      <summary>Aggiunge il gruppo specificato di verbi di progettazione all'insieme.</summary>
      <param name="value">Matrice di oggetti <see cref="T:System.ComponentModel.Design.DesignerVerb" /> da aggiungere alla raccolta.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerVerbCollection.AddRange(System.ComponentModel.Design.DesignerVerbCollection)">
      <summary>Aggiunge l'insieme specificato di verbi di progettazione all'insieme.</summary>
      <param name="value">Oggetto <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> da aggiungere all'insieme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerVerbCollection.Contains(System.ComponentModel.Design.DesignerVerb)">
      <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.ComponentModel.Design.DesignerVerb" /> specificato è presente nell'insieme.</summary>
      <param name="value">Oggetto <see cref="T:System.ComponentModel.Design.DesignerVerb" /> da cercare nell'insieme.</param>
      <returns>
        <see langword="true" /> se l'oggetto specificato è presente nell'insieme. <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerVerbCollection.CopyTo(System.ComponentModel.Design.DesignerVerb[],System.Int32)">
      <summary>Copia i membri dell'insieme nella matrice <see cref="T:System.ComponentModel.Design.DesignerVerb" /> specificata partendo dall'indice di destinazione specificato.</summary>
      <param name="array">Matrice in cui copiare i membri dell'insieme.</param>
      <param name="index">Indice di destinazione dal quale iniziare la copia.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerVerbCollection.IndexOf(System.ComponentModel.Design.DesignerVerb)">
      <summary>Ottiene l'indice della classe <see cref="T:System.ComponentModel.Design.DesignerVerb" /> specificata.</summary>
      <param name="value">Oggetto <see cref="T:System.ComponentModel.Design.DesignerVerb" /> di cui ottenere l'indice nell'insieme.</param>
      <returns>Indice dell'oggetto specificato, se presente nell'elenco. -1 in caso contrario.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerVerbCollection.Insert(System.Int32,System.ComponentModel.Design.DesignerVerb)">
      <summary>Inserisce l'oggetto <see cref="T:System.ComponentModel.Design.DesignerVerb" /> specificato in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice dell'insieme in corrispondenza del quale inserire il verbo.</param>
      <param name="value">Oggetto <see cref="T:System.ComponentModel.Design.DesignerVerb" /> da inserire nell'insieme.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerVerbCollection.Item(System.Int32)">
      <summary>Ottiene o imposta l'oggetto <see cref="T:System.ComponentModel.Design.DesignerVerb" /> in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in corrispondenza del quale ottenere o impostare l'oggetto <see cref="T:System.ComponentModel.Design.DesignerVerb" />.</param>
      <returns>Oggetto <see cref="T:System.ComponentModel.Design.DesignerVerb" /> in corrispondenza di ciascun indice valido dell'insieme.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerVerbCollection.OnClear">
      <summary>Genera l'evento <see langword="Clear" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerVerbCollection.OnInsert(System.Int32,System.Object)">
      <summary>Genera l'evento <see langword="Insert" />.</summary>
      <param name="index">Indice in corrispondenza del quale inserire un elemento.</param>
      <param name="value">Oggetto da inserire.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerVerbCollection.OnRemove(System.Int32,System.Object)">
      <summary>Genera l'evento <see langword="Remove" />.</summary>
      <param name="index">Indice in corrispondenza del quale rimuovere l'elemento.</param>
      <param name="value">Oggetto da rimuovere.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerVerbCollection.OnSet(System.Int32,System.Object,System.Object)">
      <summary>Genera l'evento <see langword="Set" />.</summary>
      <param name="index">Indice in corrispondenza del quale impostare l'elemento.</param>
      <param name="oldValue">Oggetto precedente.</param>
      <param name="newValue">Nuovo oggetto.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerVerbCollection.OnValidate(System.Object)">
      <summary>Genera l'evento <see langword="Validate" />.</summary>
      <param name="value">Oggetto da convalidare.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerVerbCollection.Remove(System.ComponentModel.Design.DesignerVerb)">
      <summary>Rimuove l'oggetto <see cref="T:System.ComponentModel.Design.DesignerVerb" /> specificato dalla raccolta.</summary>
      <param name="value">Oggetto <see cref="T:System.ComponentModel.Design.DesignerVerb" /> da rimuovere dalla raccolta.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesigntimeLicenseContext">
      <summary>Rappresenta un contesto di licenza Design-Time in grado di supportare un provider di licenze in fase di progettazione.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesigntimeLicenseContext.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.DesigntimeLicenseContext" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesigntimeLicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)">
      <summary>Ottiene un codice licenza salvato.</summary>
      <param name="type">Tipo del codice licenza.</param>
      <param name="resourceAssembly">Assembly da cui ottenere il codice.</param>
      <returns>Codice licenza salvato che corrisponde al tipo specificato.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesigntimeLicenseContext.SetSavedLicenseKey(System.Type,System.String)">
      <summary>Imposta un codice licenza salvato.</summary>
      <param name="type">Tipo del codice licenza.</param>
      <param name="key">Codice licenza.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesigntimeLicenseContext.UsageMode">
      <summary>Ottiene la modalità di utilizzo della licenza.</summary>
      <returns>Oggetto <see cref="T:System.ComponentModel.LicenseUsageMode" /> che indica la modalità di licenza per il contesto.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesigntimeLicenseContextSerializer">
      <summary>Fornisce il supporto per la serializzazione del contesto di licenza Design-Time.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesigntimeLicenseContextSerializer.Serialize(System.IO.Stream,System.String,System.ComponentModel.Design.DesigntimeLicenseContext)">
      <summary>Serializza le licenze all'interno del contesto di licenza Design-Time specificato utilizzando la chiave e il flusso di output specificati.</summary>
      <param name="o">Flusso da utilizzare per l'output.</param>
      <param name="cryptoKey">Chiave da utilizzare per la crittografia.</param>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.Design.DesigntimeLicenseContext" /> che indica il contesto di licenza.</param>
    </member>
    <member name="T:System.ComponentModel.Design.HelpContextType">
      <summary>Definisce gli identificatori che specificano informazioni sul contesto in cui ha avuto origine una richiesta di informazioni della Guida.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.HelpContextType.Ambient">
      <summary>Un contesto generale.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.HelpContextType.Selection">
      <summary>Una selezione.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.HelpContextType.ToolWindowSelection">
      <summary>Una selezione della finestra degli strumenti.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.HelpContextType.Window">
      <summary>Una finestra.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.HelpKeywordAttribute">
      <summary>Specifica la parola chiave di contesto per una classe o un membro. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.HelpKeywordAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.HelpKeywordAttribute" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.HelpKeywordAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.HelpKeywordAttribute" />.</summary>
      <param name="keyword">Valore della parola chiave della Guida.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.HelpKeywordAttribute.#ctor(System.Type)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.HelpKeywordAttribute" /> per il tipo indicato.</summary>
      <param name="t">Tipo dal quale viene tratta la parola chiave della Guida.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="t" /> è <see langword="null" />.</exception>
    </member>
    <member name="F:System.ComponentModel.Design.HelpKeywordAttribute.Default">
      <summary>Rappresenta il valore predefinito dell'attributo <see cref="T:System.ComponentModel.Design.HelpKeywordAttribute" />. Questo campo è di sola lettura.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.HelpKeywordAttribute.Equals(System.Object)">
      <summary>Determina se due istanze di <see cref="T:System.ComponentModel.Design.HelpKeywordAttribute" /> sono uguali.</summary>
      <param name="obj">Oggetto <see cref="T:System.ComponentModel.Design.HelpKeywordAttribute" /> da confrontare con l'oggetto <see cref="T:System.ComponentModel.Design.HelpKeywordAttribute" /> corrente.</param>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.ComponentModel.Design.HelpKeywordAttribute" /> specificato è uguale all'oggetto <see cref="T:System.ComponentModel.Design.HelpKeywordAttribute" /> corrente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.HelpKeywordAttribute.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Codice hash per l'oggetto <see cref="T:System.ComponentModel.Design.HelpKeywordAttribute" /> corrente.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.HelpKeywordAttribute.HelpKeyword">
      <summary>Ottiene la parola chiave della Guida fornita da questo attributo.</summary>
      <returns>Parola chiave della Guida fornita da questo attributo.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.HelpKeywordAttribute.IsDefaultAttribute">
      <summary>Determina se la parola chiave della Guida è <see langword="null" />.</summary>
      <returns>
        <see langword="true" /> se la parola chiave della Guida è <see langword="null" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.HelpKeywordType">
      <summary>Definisce gli identificatori che specificano il tipo di una parola chiave della Guida.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.HelpKeywordType.F1Keyword">
      <summary>Una parola chiave per la quale sono state richieste le informazioni della Guida premendo F1.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.HelpKeywordType.FilterKeyword">
      <summary>Una parola chiave del filtro.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.HelpKeywordType.GeneralKeyword">
      <summary>Una parola chiave generale.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.IComponentChangeService">
      <summary>Fornisce un'interfaccia per aggiungere e rimuovere i gestori eventi per eventi che aggiungono, modificano, rimuovono o rinominano componenti e fornisce metodi per generare un evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" /> o <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" />.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded">
      <summary>Viene generato quando è stato aggiunto un componente.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding">
      <summary>Viene generato quando è in corso l'aggiunta di un componente.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged">
      <summary>Viene generato quando è stato modificato un componente.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging">
      <summary>Viene generato quando un componente è in corso di modifica.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved">
      <summary>Viene generato quando è stato rimosso un componente.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving">
      <summary>Viene generato quando un componente è in corso di rimozione.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename">
      <summary>Viene generato quando al componente viene assegnato un nome diverso.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
      <summary>Notifica al servizio di modifica dei componenti che un particolare componente è stato modificato.</summary>
      <param name="component">Componente modificato.</param>
      <param name="member">Membro modificato. Ha valore <see langword="null" /> se la modifica non riguarda un solo membro.</param>
      <param name="oldValue">Valore precedente del membro. È valido soltanto se il membro non ha valore <see langword="null" />.</param>
      <param name="newValue">Nuovo valore del membro. È valido soltanto se il membro non ha valore <see langword="null" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging(System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>Notifica al servizio di modifica dei componenti che un particolare componente è in fase di modifica.</summary>
      <param name="component">Componente che sta per essere modificato.</param>
      <param name="member">Membro che sta per essere modificato. Ha valore <see langword="null" /> se la modifica non riguarda un solo membro.</param>
    </member>
    <member name="T:System.ComponentModel.Design.IComponentDiscoveryService">
      <summary>Attiva l'enumerazione di componenti in fase di progettazione.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IComponentDiscoveryService.GetComponentTypes(System.ComponentModel.Design.IDesignerHost,System.Type)">
      <summary>Ottiene l'elenco dei tipi di componenti disponibili.</summary>
      <param name="designerHost">Host di progettazione che fornisce servizi in fase di progettazione. Può essere <see langword="null" />.</param>
      <param name="baseType">Tipo base che specifica i componenti da recuperare. Può essere <see langword="null" />.</param>
      <returns>Elenco dei tipi di componenti disponibili.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.IComponentInitializer">
      <summary>Fornisce un gruppo di valori predefiniti consigliati durante la creazione dei componenti.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IComponentInitializer.InitializeExistingComponent(System.Collections.IDictionary)">
      <summary>Ripristina lo stato predefinito di un'istanza di un componente.</summary>
      <param name="defaultValues">Dizionario dei valori di proprietà predefiniti, ossia coppie nome/valore, con i quali reimpostare lo stato del componente.</param>
    </member>
    <member name="M:System.ComponentModel.Design.IComponentInitializer.InitializeNewComponent(System.Collections.IDictionary)">
      <summary>Inizializza un nuovo componente utilizzando un gruppo di valori consigliati.</summary>
      <param name="defaultValues">Dizionario dei valori di proprietà predefiniti, ossia coppie nome/valore, con i quali inizializzare lo stato del componente.</param>
    </member>
    <member name="T:System.ComponentModel.Design.IDesigner">
      <summary>Fornisce il framework di base per la compilazione di una finestra di progettazione personalizzata.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.IDesigner.Component">
      <summary>Ottiene il componente di base in fase di progettazione nella finestra di progettazione.</summary>
      <returns>Oggetto <see cref="T:System.ComponentModel.IComponent" /> che indica il componente di base in fase di progettazione nella finestra di progettazione.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.IDesigner.DoDefaultAction">
      <summary>Esegue l'azione predefinita per questa finestra di progettazione.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Inizializza la finestra di progettazione con il componente specificato.</summary>
      <param name="component">Componente da associare alla finestra di progettazione.</param>
    </member>
    <member name="P:System.ComponentModel.Design.IDesigner.Verbs">
      <summary>Ottiene un insieme di verbi della fase di progettazione supportati dalla finestra di progettazione.</summary>
      <returns>Oggetto <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> che contiene i verbi supportati dalla finestra di progettazione oppure <see langword="null" /> se il componente non contiene verbi.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.IDesignerEventService">
      <summary>Fornisce notifiche di eventi in caso di rimozione o aggiunta di finestre di progettazione di primo livello, di modifiche del componente selezionato e di modifiche della finestra di progettazione di primo livello.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.IDesignerEventService.ActiveDesigner">
      <summary>Ottiene la finestra di progettazione di primo livello per il documento correntemente attivo.</summary>
      <returns>Documento correntemente attivo oppure <see langword="null" /> se non è attivo alcun documento.</returns>
    </member>
    <member name="E:System.ComponentModel.Design.IDesignerEventService.ActiveDesignerChanged">
      <summary>Viene generato quando la finestra di progettazione di primo livello corrente viene modificata.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.IDesignerEventService.DesignerCreated">
      <summary>Viene generato quando viene creata una finestra di progettazione di primo livello.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.IDesignerEventService.DesignerDisposed">
      <summary>Viene generato quando viene eliminata una finestra di progettazione di primo livello relativa a un documento.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.IDesignerEventService.Designers">
      <summary>Ottiene un insieme di finestre di progettazione di primo livello per i documenti di progettazione correntemente attivi nell'ambiente di sviluppo.</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.DesignerCollection" /> che contiene le finestre di progettazione di primo livello create e non ancora eliminate.</returns>
    </member>
    <member name="E:System.ComponentModel.Design.IDesignerEventService.SelectionChanged">
      <summary>Si verifica quando cambia la selezione corrente della visualizzazione Progettazione.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.IDesignerFilter">
      <summary>Fornisce un'interfaccia che permette a una finestra di progettazione di accedere e filtrare i dizionari di un oggetto <see cref="T:System.ComponentModel.TypeDescriptor" /> che memorizza i descrittori delle proprietà, degli attributi e degli eventi che una finestra di progettazione dei componenti può esporre all'ambiente in fase di progettazione.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)">
      <summary>Quando viene sottoposto a override in una classe derivata, consente di modificare o rimuovere, mediante una finestra di progettazione, elementi dell'insieme di attributi esposti tramite un oggetto <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="attributes">Oggetti <see cref="T:System.Attribute" /> relativi alla classe del componente. Le chiavi presenti nel dizionario degli attributi sono i valori <see cref="P:System.Attribute.TypeId" /> degli attributi.</param>
    </member>
    <member name="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)">
      <summary>Quando viene sottoposto a override in una classe derivata, consente a una finestra di progettazione di modificare o rimuovere elementi dall'insieme degli eventi esposti tramite un oggetto <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="events">Oggetti <see cref="T:System.ComponentModel.EventDescriptor" /> che rappresentano gli eventi della classe del componente. Le chiavi presenti nel dizionario degli eventi sono i nomi degli eventi.</param>
    </member>
    <member name="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)">
      <summary>Quando viene sottoposto a override in una classe derivata, consente a una finestra di progettazione di modificare o rimuovere elementi nell'insieme delle proprietà esposte tramite un oggetto <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties">Oggetti <see cref="T:System.ComponentModel.PropertyDescriptor" /> che rappresentano le proprietà della classe del componente. Le chiavi presenti nel dizionario delle proprietà sono i nomi delle proprietà.</param>
    </member>
    <member name="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)">
      <summary>Quando viene sottoposto a override in una classe derivata, consente di aggiungere, mediante una finestra di progettazione, elementi all'insieme di attributi esposti tramite un oggetto <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="attributes">Oggetti <see cref="T:System.Attribute" /> relativi alla classe del componente. Le chiavi presenti nel dizionario degli attributi sono i valori <see cref="P:System.Attribute.TypeId" /> degli attributi.</param>
    </member>
    <member name="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)">
      <summary>Quando viene sottoposto a override in una classe derivata, consente di aggiungere elementi, mediante la finestra di progettazione, all'insieme di eventi esposti tramite un oggetto <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="events">Oggetti <see cref="T:System.ComponentModel.EventDescriptor" /> che rappresentano gli eventi della classe del componente. Le chiavi presenti nel dizionario degli eventi sono i nomi degli eventi.</param>
    </member>
    <member name="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Quando viene sottoposto a override in una classe derivata, consente di aggiungere elementi, mediante la finestra di progettazione, all'insieme di proprietà esposte tramite un oggetto <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties">Oggetti <see cref="T:System.ComponentModel.PropertyDescriptor" /> che rappresentano le proprietà della classe del componente. Le chiavi presenti nel dizionario delle proprietà sono i nomi delle proprietà.</param>
    </member>
    <member name="T:System.ComponentModel.Design.IDesignerHost">
      <summary>Fornisce un'interfaccia per la gestione delle transazioni e dei componenti della finestra di progettazione.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IDesignerHost.Activate">
      <summary>Attiva la finestra di progettazione ospitata dall'host.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.IDesignerHost.Activated">
      <summary>Viene generato quando viene attivata la finestra di progettazione.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.IDesignerHost.Container">
      <summary>Ottiene il contenitore di questo host di progettazione.</summary>
      <returns>Oggetto <see cref="T:System.ComponentModel.IContainer" /> per questo host.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)">
      <summary>Crea un componente del tipo specificato e lo aggiunge al documento di progettazione.</summary>
      <param name="componentClass">Tipo di componente da creare.</param>
      <returns>Componente appena creato.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type,System.String)">
      <summary>Crea un componente del tipo e del nome specificati e lo aggiunge al documento di progettazione.</summary>
      <param name="componentClass">Tipo di componente da creare.</param>
      <param name="name">Nome del componente.</param>
      <returns>Componente appena creato.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction">
      <summary>Crea un oggetto <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> in grado di incapsulare sequenze di eventi al fine di migliorare le prestazioni e consentire funzioni di annullamento e di ripristino.</summary>
      <returns>Nuova istanza di <see cref="T:System.ComponentModel.Design.DesignerTransaction" />. Al termine delle operazioni della transazione, si dovrebbe chiamare <see cref="M:System.ComponentModel.Design.DesignerTransaction.Commit" /> su questo oggetto.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction(System.String)">
      <summary>Crea un oggetto <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> in grado di incapsulare sequenze di eventi al fine di migliorare le prestazioni e consentire funzioni di annullamento e di ripristino, utilizzando la descrizione della transazione specificata.</summary>
      <param name="description">Titolo o descrizione per la transazione appena creata.</param>
      <returns>Nuovo oggetto <see cref="T:System.ComponentModel.Design.DesignerTransaction" />. Al termine delle operazioni della transazione, si dovrebbe chiamare <see cref="M:System.ComponentModel.Design.DesignerTransaction.Commit" /> su questo oggetto.</returns>
    </member>
    <member name="E:System.ComponentModel.Design.IDesignerHost.Deactivated">
      <summary>Viene generato quando viene disattivata la finestra di progettazione.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IDesignerHost.DestroyComponent(System.ComponentModel.IComponent)">
      <summary>Distrugge il componente specificato e lo rimuove dal contenitore di progettazione.</summary>
      <param name="component">Componente da distruggere.</param>
    </member>
    <member name="M:System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)">
      <summary>Ottiene l'istanza di progettazione contenente il componente specificato.</summary>
      <param name="component">Oggetto <see cref="T:System.ComponentModel.IComponent" /> per cui recuperare la finestra di progettazione.</param>
      <returns>Oggetto <see cref="T:System.ComponentModel.Design.IDesigner" /> oppure <see langword="null" /> se non esiste alcuna finestra di progettazione per il componente specificato.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.IDesignerHost.GetType(System.String)">
      <summary>Ottiene un'istanza del nome completo del tipo specificato.</summary>
      <param name="typeName">Nome del tipo da caricare.</param>
      <returns>Oggetto tipo per il nome del tipo specificato oppure <see langword="null" /> se è impossibile trovare il tipo.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.IDesignerHost.InTransaction">
      <summary>Ottiene un valore che indica se l'host di progettazione si trova attualmente in una transazione.</summary>
      <returns>
        <see langword="true" /> se è in corso una transazione. <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="E:System.ComponentModel.Design.IDesignerHost.LoadComplete">
      <summary>Viene generato quando la finestra di progettazione completa il caricamento del documento.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.IDesignerHost.Loading">
      <summary>Ottiene un valore che indica se al momento l'host di progettazione sta caricando il documento.</summary>
      <returns>
        <see langword="true" /> se l'host di progettazione sta attualmente caricando il documento. <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.IDesignerHost.RootComponent">
      <summary>Ottiene l'istanza della classe di base utilizzata come componente di primo livello per la progettazione corrente.</summary>
      <returns>Istanza della classe del componente di primo livello.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.IDesignerHost.RootComponentClassName">
      <summary>Ottiene il nome completo della classe che si sta progettando.</summary>
      <returns>Nome completo della classe del componente di base.</returns>
    </member>
    <member name="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed">
      <summary>Aggiunge un gestore eventi per l'evento <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" />.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing">
      <summary>Aggiunge un gestore eventi per l'evento <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" />.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.IDesignerHost.TransactionDescription">
      <summary>Ottiene la descrizione della transazione corrente.</summary>
      <returns>Descrizione della transazione corrente.</returns>
    </member>
    <member name="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened">
      <summary>Aggiunge un gestore eventi per l'evento <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" />.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening">
      <summary>Aggiunge un gestore eventi per l'evento <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" />.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.IDesignerHostTransactionState">
      <summary>Specifica i metodi per consentire all'host della finestra di progettazione di segnalare lo stato delle transazioni.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.IDesignerHostTransactionState.IsClosingTransaction">
      <summary>Ottiene un valore che indica se l'host della finestra di progettazione sta chiudendo una transazione.</summary>
      <returns>
        <see langword="true" /> se la finestra di progettazione sta chiudendo una transazione. <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.IDesignerOptionService">
      <summary>Offre l'accesso alle opzioni della finestra di progettazione presenti nel menu Strumenti al comando Opzioni dell'ambiente di sviluppo di Visual Studio.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IDesignerOptionService.GetOptionValue(System.String,System.String)">
      <summary>Ottiene il valore dell'opzione di Progettazione Windows Forms specificata.</summary>
      <param name="pageName">Nome della pagina che definisce l'opzione.</param>
      <param name="valueName">Nome della proprietà dell'opzione.</param>
      <returns>Valore dell'opzione specificata.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.IDesignerOptionService.SetOptionValue(System.String,System.String,System.Object)">
      <summary>Imposta il valore dell'opzione di Progettazione Windows Forms specificata.</summary>
      <param name="pageName">Nome della pagina che definisce l'opzione.</param>
      <param name="valueName">Nome della proprietà dell'opzione.</param>
      <param name="value">Nuovo valore.</param>
    </member>
    <member name="T:System.ComponentModel.Design.IDictionaryService">
      <summary>Fornisce un dizionario di base a coppia chiave-valore specifico del sito del componente mediante un servizio che può essere utilizzato in una finestra di progettazione per archiviare dati definiti dall'utente.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IDictionaryService.GetKey(System.Object)">
      <summary>Ottiene la chiave corrispondente al valore specificato.</summary>
      <param name="value">Valore da cercare nel dizionario.</param>
      <returns>Chiave associata oppure <see langword="null" /> se non esiste alcuna chiave.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.IDictionaryService.GetValue(System.Object)">
      <summary>Ottiene il valore corrispondente alla chiave specificata.</summary>
      <param name="key">Chiave di cui cercare il valore.</param>
      <returns>Valore associato oppure <see langword="null" /> se non esiste alcun valore.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.IDictionaryService.SetValue(System.Object,System.Object)">
      <summary>Imposta la coppia chiave-valore specificata.</summary>
      <param name="key">Oggetto da utilizzare come chiave da associare al valore.</param>
      <param name="value">Valore da memorizzare.</param>
    </member>
    <member name="T:System.ComponentModel.Design.IEventBindingService">
      <summary>Fornisce un servizio per la registrazione dei gestori eventi per gli eventi del componente.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IEventBindingService.CreateUniqueMethodName(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
      <summary>Crea un nome univoco per un metodo di gestione degli eventi per il componente e l'evento specificati.</summary>
      <param name="component">Istanza del componente alla quale è collegato l'evento.</param>
      <param name="e">Evento per il quale creare un nome.</param>
      <returns>Nome consigliato per il metodo di gestione di questo evento.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.IEventBindingService.GetCompatibleMethods(System.ComponentModel.EventDescriptor)">
      <summary>Ottiene un insieme di metodi di gestione degli eventi dotati di firme di metodo compatibili con l'evento specificato.</summary>
      <param name="e">Evento per il quale recuperare i metodi di gestione degli eventi compatibili.</param>
      <returns>Insieme di stringhe.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.IEventBindingService.GetEvent(System.ComponentModel.PropertyDescriptor)">
      <summary>Ottiene un oggetto <see cref="T:System.ComponentModel.EventDescriptor" /> per l'evento rappresentato dal descrittore di proprietà specificato, se la proprietà rappresenta un evento.</summary>
      <param name="property">Proprietà che rappresenta un evento.</param>
      <returns>Oggetto <see cref="T:System.ComponentModel.EventDescriptor" /> per l'evento rappresentato dalla proprietà oppure <see langword="null" /> se la proprietà non rappresenta un evento.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.IEventBindingService.GetEventProperties(System.ComponentModel.EventDescriptorCollection)">
      <summary>Converte un gruppo di descrittori di evento in un gruppo di descrittori di proprietà.</summary>
      <param name="events">Eventi da convertire in proprietà.</param>
      <returns>Matrice di oggetti <see cref="T:System.ComponentModel.PropertyDescriptor" /> che descrivono l'insieme di eventi.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.IEventBindingService.GetEventProperty(System.ComponentModel.EventDescriptor)">
      <summary>Converte un singolo descrittore di evento in un descrittore di proprietà.</summary>
      <param name="e">Evento da convertire.</param>
      <returns>Oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> che descrive l'evento.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.IEventBindingService.ShowCode">
      <summary>Visualizza il codice utente per la finestra di progettazione.</summary>
      <returns>
        <see langword="true" /> se il codice viene visualizzato. <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.IEventBindingService.ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
      <summary>Visualizza il codice utente per l'evento specificato.</summary>
      <param name="component">Componente al quale è collegato l'evento.</param>
      <param name="e">Evento da visualizzare.</param>
      <returns>
        <see langword="true" /> se il codice viene visualizzato. <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.IEventBindingService.ShowCode(System.Int32)">
      <summary>Visualizza il codice utente per la finestra di progettazione corrispondente alla riga specificata.</summary>
      <param name="lineNumber">Numero della riga su cui posizionare il carattere di accento circonflesso.</param>
      <returns>
        <see langword="true" /> se il codice viene visualizzato. <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.IExtenderListService">
      <summary>Fornisce un'interfaccia in grado di elencare i provider di estensione.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IExtenderListService.GetExtenderProviders">
      <summary>Ottiene il gruppo di provider di estensione per il componente.</summary>
      <returns>Matrice di tipo <see cref="T:System.ComponentModel.IExtenderProvider" /> che elenca i provider di estensione attivi. Se non esiste alcun provider, verrà restituita una matrice vuota.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.IExtenderProviderService">
      <summary>Fornisce un'interfaccia per l'aggiunta e la rimozione dei provider di estensione in fase di progettazione.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IExtenderProviderService.AddExtenderProvider(System.ComponentModel.IExtenderProvider)">
      <summary>Aggiunge il provider di estensione specificato.</summary>
      <param name="provider">Provider di estensione da aggiungere.</param>
    </member>
    <member name="M:System.ComponentModel.Design.IExtenderProviderService.RemoveExtenderProvider(System.ComponentModel.IExtenderProvider)">
      <summary>Rimuove il provider di estensione specificato.</summary>
      <param name="provider">Provider di estensione da rimuovere.</param>
    </member>
    <member name="T:System.ComponentModel.Design.IHelpService">
      <summary>Fornisce metodi per visualizzare la Guida e aggiungere e rimuovere parole chiave della Guida in fase di progettazione.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IHelpService.AddContextAttribute(System.String,System.String,System.ComponentModel.Design.HelpKeywordType)">
      <summary>Aggiunge un attributo di contesto al documento.</summary>
      <param name="name">Nome dell'attributo da aggiungere.</param>
      <param name="value">Valore dell'attributo.</param>
      <param name="keywordType">Tipo di parola chiave, dall'enumerazione <see cref="T:System.ComponentModel.Design.HelpKeywordType" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.IHelpService.ClearContextAttributes">
      <summary>Rimuove dal documento tutti gli attributi di contesto esistenti.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IHelpService.CreateLocalContext(System.ComponentModel.Design.HelpContextType)">
      <summary>Crea un oggetto <see cref="T:System.ComponentModel.Design.IHelpService" /> locale per gestire i sottocontesti.</summary>
      <param name="contextType">Tipo di priorità del sottocontesto da aggiungere.</param>
      <returns>Oggetto <see cref="T:System.ComponentModel.Design.IHelpService" /> appena creato.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.IHelpService.RemoveContextAttribute(System.String,System.String)">
      <summary>Rimuove un attributo di contesto aggiunto precedentemente.</summary>
      <param name="name">Nome dell'attributo da rimuovere.</param>
      <param name="value">Valore dell'attributo da rimuovere.</param>
    </member>
    <member name="M:System.ComponentModel.Design.IHelpService.RemoveLocalContext(System.ComponentModel.Design.IHelpService)">
      <summary>Rimuove un contesto creato con <see cref="M:System.ComponentModel.Design.IHelpService.CreateLocalContext(System.ComponentModel.Design.HelpContextType)" />.</summary>
      <param name="localContext">Oggetto <see cref="T:System.ComponentModel.Design.IHelpService" /> del contesto locale da rimuovere.</param>
    </member>
    <member name="M:System.ComponentModel.Design.IHelpService.ShowHelpFromKeyword(System.String)">
      <summary>Mostra l'argomento della Guida corrispondente alla parola chiave specificata.</summary>
      <param name="helpKeyword">Parola chiave dell'argomento della Guida da visualizzare.</param>
    </member>
    <member name="M:System.ComponentModel.Design.IHelpService.ShowHelpFromUrl(System.String)">
      <summary>Mostra l'argomento della Guida corrispondente all'URL specificato.</summary>
      <param name="helpUrl">URL dell'argomento della Guida da visualizzare.</param>
    </member>
    <member name="T:System.ComponentModel.Design.IInheritanceService">
      <summary>Fornisce metodi per l'identificazione dei componenti di un componente.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IInheritanceService.AddInheritedComponents(System.ComponentModel.IComponent,System.ComponentModel.IContainer)">
      <summary>Cerca nel componente specificato i campi che implementano l'interfaccia <see cref="T:System.ComponentModel.IComponent" /> e aggiunge ognuno di essi al contenitore specificato, archiviando il livello di ereditarietà relativo che può essere recuperato tramite il metodo <see cref="M:System.ComponentModel.Design.IInheritanceService.GetInheritanceAttribute(System.ComponentModel.IComponent)" />.</summary>
      <param name="component">Oggetto <see cref="T:System.ComponentModel.IComponent" /> da cercare. La ricerca inizia con questo componente.</param>
      <param name="container">Oggetto <see cref="T:System.ComponentModel.IContainer" /> a cui aggiungere componenti.</param>
    </member>
    <member name="M:System.ComponentModel.Design.IInheritanceService.GetInheritanceAttribute(System.ComponentModel.IComponent)">
      <summary>Ottiene l'attributo di ereditarietà per il componente specificato.</summary>
      <param name="component">Oggetto <see cref="T:System.ComponentModel.IComponent" /> per il quale recuperare l'attributo di ereditarietà.</param>
      <returns>Istanza di <see cref="T:System.ComponentModel.InheritanceAttribute" /> che descrive il livello di ereditarietà del componente specificato.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.IMenuCommandService">
      <summary>Fornisce metodi per gestire i verbi di progettazione globali e i comandi di menu disponibili in modalità progettazione e per visualizzare alcuni tipi di menu di scelta rapida.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IMenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)">
      <summary>Aggiunge al menu il comando di menu standard specificato.</summary>
      <param name="command">Oggetto <see cref="T:System.ComponentModel.Design.MenuCommand" /> da aggiungere.</param>
      <exception cref="T:System.InvalidOperationException">L'oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> dell'oggetto <see cref="T:System.ComponentModel.Design.MenuCommand" /> specificato è già presente in un menu.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.IMenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)">
      <summary>Aggiunge il verbo di progettazione specificato al gruppo di verbi di progettazione globali.</summary>
      <param name="verb">Oggetto <see cref="T:System.ComponentModel.Design.DesignerVerb" /> da aggiungere.</param>
    </member>
    <member name="M:System.ComponentModel.Design.IMenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)">
      <summary>Cerca l'ID del comando specificato e restituisce il comando di menu ad esso associato.</summary>
      <param name="commandID">Oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> da cercare.</param>
      <returns>
        <see cref="T:System.ComponentModel.Design.MenuCommand" /> associato all'ID di comando o <see langword="null" /> se non viene trovato alcun comando.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)">
      <summary>Richiama un menu o un comando di verbo di progettazione corrispondente all'ID di comando specificato.</summary>
      <param name="commandID">
        <see cref="T:System.ComponentModel.Design.CommandID" /> del comando da cercare ed eseguire.</param>
      <returns>
        <see langword="true" /> se il comando è stato trovato e richiamato correttamente. <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.IMenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)">
      <summary>Rimuove dal menu il comando di menu standard specificato.</summary>
      <param name="command">Oggetto <see cref="T:System.ComponentModel.Design.MenuCommand" /> da rimuovere.</param>
    </member>
    <member name="M:System.ComponentModel.Design.IMenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)">
      <summary>Rimuove il verbo di progettazione specificato dall'insieme dei verbi di progettazione globali.</summary>
      <param name="verb">Oggetto <see cref="T:System.ComponentModel.Design.DesignerVerb" /> da rimuovere.</param>
    </member>
    <member name="M:System.ComponentModel.Design.IMenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)">
      <summary>Visualizza il menu di scelta rapida specificato nella posizione indicata.</summary>
      <param name="menuID">
        <see cref="T:System.ComponentModel.Design.CommandID" /> per il menu di scelta rapida da visualizzare.</param>
      <param name="x">Coordinata x in corrispondenza della quale visualizzare il menu, secondo le coordinate dello schermo.</param>
      <param name="y">Coordinata y in corrispondenza della quale visualizzare il menu, secondo le coordinate dello schermo.</param>
    </member>
    <member name="P:System.ComponentModel.Design.IMenuCommandService.Verbs">
      <summary>Ottiene un insieme dei verbi di progettazione attualmente disponibili.</summary>
      <returns>Oggetto <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> che contiene i verbi di progettazione attualmente disponibili.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.IReferenceService">
      <summary>Fornisce un'interfaccia per ottenere riferimenti a oggetti di un progetto in base al nome o al tipo, ottenendo il nome di un oggetto specificato, e individuare l'elemento padre di un oggetto specificato in un progetto in modalità progettazione.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IReferenceService.GetComponent(System.Object)">
      <summary>Ottiene il componente che contiene il componente specificato.</summary>
      <param name="reference">Oggetto per il quale recuperare il componente padre.</param>
      <returns>Oggetto <see cref="T:System.ComponentModel.IComponent" /> di base che contiene l'oggetto specificato o <see langword="null" /> se non esiste nessun componente padre.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.IReferenceService.GetName(System.Object)">
      <summary>Ottiene il nome del componente specificato.</summary>
      <param name="reference">Oggetto di cui restituire il nome.</param>
      <returns>Nome dell'oggetto a cui si fa riferimento oppure <see langword="null" /> se il riferimento all'oggetto non è valido.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.IReferenceService.GetReference(System.String)">
      <summary>Ottiene un riferimento al componente il cui nome corrisponde al nome specificato.</summary>
      <param name="name">Nome del componente a cui restituire un riferimento.</param>
      <returns>Oggetto a cui fa riferimento il nome specificato oppure <see langword="null" /> se non è stato trovato alcun riferimento.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.IReferenceService.GetReferences">
      <summary>Ottiene tutti i riferimenti disponibili ai componenti del progetto.</summary>
      <returns>Matrice di tutti gli oggetti con riferimenti disponibili all'oggetto <see cref="T:System.ComponentModel.Design.IReferenceService" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.IReferenceService.GetReferences(System.Type)">
      <summary>Ottiene tutti i riferimenti disponibili ai componenti del tipo specificato.</summary>
      <param name="baseType">Tipo di oggetto di cui devono essere restituiti i riferimenti a istanze.</param>
      <returns>Matrice di tutti gli oggetti disponibili del tipo specificato.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.IResourceService">
      <summary>Fornisce un'interfaccia per le finestre di progettazione per accedere a visualizzatori e writer di risorse relativi a tipi di risorse <see cref="T:System.Globalization.CultureInfo" /> specifici.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IResourceService.GetResourceReader(System.Globalization.CultureInfo)">
      <summary>Individua e restituisce il lettore di risorse per le impostazioni cultura specificate.</summary>
      <param name="info">Oggetto <see cref="T:System.Globalization.CultureInfo" /> della risorsa per la quale recuperare un lettore di risorse.</param>
      <returns>Interfaccia <see cref="T:System.Resources.IResourceReader" /> che contiene le risorse per le impostazioni cultura oppure <see langword="null" /> se non esiste alcuna risorsa per le impostazioni cultura.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.IResourceService.GetResourceWriter(System.Globalization.CultureInfo)">
      <summary>Individua e restituisce il writer di risorse per le impostazioni cultura specificate.</summary>
      <param name="info">Oggetto <see cref="T:System.Globalization.CultureInfo" /> della risorsa per la quale creare un writer di risorse.</param>
      <returns>Interfaccia <see cref="T:System.Resources.IResourceWriter" /> per le impostazioni cultura specificate.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.IRootDesigner">
      <summary>Fornisce supporto per le tecnologie di visualizzazione della finestra di progettazione a livello radice.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IRootDesigner.GetView(System.ComponentModel.Design.ViewTechnology)">
      <summary>Ottiene un oggetto visualizzazione per la tecnologia di visualizzazione specificata.</summary>
      <param name="technology">Oggetto <see cref="T:System.ComponentModel.Design.ViewTechnology" /> che indica una determinata tecnologia di visualizzazione.</param>
      <returns>Oggetto che rappresenta la visualizzazione per la finestra di progettazione.</returns>
      <exception cref="T:System.ArgumentException">La tecnologia di visualizzazione specificata non è supportata o non esiste.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies">
      <summary>Ottiene il gruppo di tecnologie che questa finestra di progettazione è in grado di supportare per la visualizzazione.</summary>
      <returns>Matrice di valori <see cref="T:System.ComponentModel.Design.ViewTechnology" /> supportati.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ISelectionService">
      <summary>Fornisce a una finestra di progettazione un'interfaccia per la selezione di componenti.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ISelectionService.GetComponentSelected(System.Object)">
      <summary>Ottiene un valore che indica se il componente specificato è correntemente selezionato.</summary>
      <param name="component">Componente da verificare.</param>
      <returns>
        <see langword="true" /> se il componente fa parte della selezione dell'interfaccia utente. <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ISelectionService.GetSelectedComponents">
      <summary>Ottiene un insieme di componenti correntemente selezionati.</summary>
      <returns>Insieme che rappresenta i componenti correntemente selezionati.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ISelectionService.PrimarySelection">
      <summary>Ottiene l'oggetto principale correntemente selezionato.</summary>
      <returns>Oggetto principale correntemente selezionato.</returns>
    </member>
    <member name="E:System.ComponentModel.Design.ISelectionService.SelectionChanged">
      <summary>Si verifica quando cambia la selezione corrente.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.ISelectionService.SelectionChanging">
      <summary>Viene generato quando sta per cambiare la selezione corrente.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.ISelectionService.SelectionCount">
      <summary>Ottiene il numero di oggetti selezionati.</summary>
      <returns>Numero di oggetti selezionati.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ISelectionService.SetSelectedComponents(System.Collections.ICollection)">
      <summary>Seleziona l'insieme specificato di componenti.</summary>
      <param name="components">Insieme di componenti da selezionare.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ISelectionService.SetSelectedComponents(System.Collections.ICollection,System.ComponentModel.Design.SelectionTypes)">
      <summary>Seleziona i componenti all'interno dell'insieme specificato che corrispondono al tipo di selezione specificato.</summary>
      <param name="components">Insieme di componenti da selezionare.</param>
      <param name="selectionType">Valore ricavato dall'enumerazione <see cref="T:System.ComponentModel.Design.SelectionTypes" />. Il valore predefinito è <see cref="F:System.ComponentModel.Design.SelectionTypes.Normal" />.</param>
    </member>
    <member name="T:System.ComponentModel.Design.IServiceContainer">
      <summary>Fornisce un contenitore dei servizi.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)">
      <summary>Aggiunge il servizio specificato al contenitore dei servizi.</summary>
      <param name="serviceType">Tipo di servizio da aggiungere.</param>
      <param name="callback">Oggetto callback che viene utilizzato per creare il servizio. Consente di dichiarare un servizio come disponibile ma ritarda la creazione dell'oggetto fino a quando il servizio non verrà richiesto.</param>
    </member>
    <member name="M:System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)">
      <summary>Aggiunge il servizio specificato al contenitore dei servizi e facoltativamente promuove il servizio ai contenitori dei servizi padre.</summary>
      <param name="serviceType">Tipo di servizio da aggiungere.</param>
      <param name="callback">Oggetto callback che viene utilizzato per creare il servizio. Consente di dichiarare un servizio come disponibile ma ritarda la creazione dell'oggetto fino a quando il servizio non verrà richiesto.</param>
      <param name="promote">
        <see langword="true" /> per promuovere questa richiesta a eventuali contenitori dei servizi principali. <see langword="false" /> in caso contrario.</param>
    </member>
    <member name="M:System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.Object)">
      <summary>Aggiunge il servizio specificato al contenitore dei servizi.</summary>
      <param name="serviceType">Tipo di servizio da aggiungere.</param>
      <param name="serviceInstance">Istanza del tipo di servizio da aggiungere. L'oggetto deve implementare o ereditare dal tipo indicato dal parametro <paramref name="serviceType" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.Object,System.Boolean)">
      <summary>Aggiunge il servizio specificato al contenitore dei servizi e facoltativamente promuove il servizio a tutti i contenitori dei servizi padre.</summary>
      <param name="serviceType">Tipo di servizio da aggiungere.</param>
      <param name="serviceInstance">Istanza del tipo di servizio da aggiungere. L'oggetto deve implementare o ereditare dal tipo indicato dal parametro <paramref name="serviceType" />.</param>
      <param name="promote">
        <see langword="true" /> per promuovere questa richiesta a eventuali contenitori dei servizi principali. <see langword="false" /> in caso contrario.</param>
    </member>
    <member name="M:System.ComponentModel.Design.IServiceContainer.RemoveService(System.Type)">
      <summary>Rimuove il tipo di servizio specificato dal contenitore dei servizi.</summary>
      <param name="serviceType">Tipo di servizio da rimuovere.</param>
    </member>
    <member name="M:System.ComponentModel.Design.IServiceContainer.RemoveService(System.Type,System.Boolean)">
      <summary>Rimuove il servizio specificato dal contenitore dei servizi e facoltativamente promuove il servizio ai contenitori dei servizi padre.</summary>
      <param name="serviceType">Tipo di servizio da rimuovere.</param>
      <param name="promote">
        <see langword="true" /> per promuovere questa richiesta a eventuali contenitori dei servizi principali. <see langword="false" /> in caso contrario.</param>
    </member>
    <member name="T:System.ComponentModel.Design.ITreeDesigner">
      <summary>Fornisce supporto per la compilazione di un gruppo correlato di finestre di progettazione personalizzate.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.ITreeDesigner.Children">
      <summary>Ottiene un insieme di finestre di progettazione figlio.</summary>
      <returns>Oggetto <see cref="T:System.Collections.ICollection" />, contenente l'insieme degli oggetti <see cref="T:System.ComponentModel.Design.IDesigner" /> figlio della finestra di progettazione corrente.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ITreeDesigner.Parent">
      <summary>Ottiene la finestra di progettazione padre.</summary>
      <returns>Oggetto <see cref="T:System.ComponentModel.Design.IDesigner" /> che rappresenta la finestra di progettazione padre oppure <see langword="null" /> se non esiste alcuna finestra di progettazione padre.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ITypeDescriptorFilterService">
      <summary>Fornisce un'interfaccia per modificare l'insieme dei descrittori di membro per un componente in modalità progettazione.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary>Filtra gli attributi esposti da un componente tramite un oggetto <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="component">Componente di cui filtrare gli attributi.</param>
      <param name="attributes">Dizionario degli attributi che può essere modificato.</param>
      <returns>
        <see langword="true" /> se l'insieme di attributi filtrati può essere memorizzato nella cache; <see langword="false" /> se il servizio filtro deve eseguire di nuovo la query.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary>Filtra gli eventi esposti da un componente tramite un oggetto <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="component">Componente per il quale filtrare gli eventi.</param>
      <param name="events">Dizionario degli eventi che può essere modificato.</param>
      <returns>
        <see langword="true" /> se l'insieme di eventi filtrati può essere memorizzato nella cache; <see langword="false" /> se il servizio filtro deve eseguire di nuovo la query.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary>Filtra le proprietà esposte da un componente tramite un oggetto <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="component">Componente per il quale filtrare le proprietà.</param>
      <param name="properties">Dizionario delle proprietà che può essere modificato.</param>
      <returns>
        <see langword="true" /> se l'insieme di proprietà filtrate può essere memorizzato nella cache; <see langword="false" /> se il servizio filtro deve eseguire di nuovo la query.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ITypeDiscoveryService">
      <summary>Individua i tipi disponibili in fase di progettazione.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ITypeDiscoveryService.GetTypes(System.Type,System.Boolean)">
      <summary>Recupera l'elenco dei tipi disponibili.</summary>
      <param name="baseType">Tipo base di cui verificare la corrispondenza. Può essere <see langword="null" />.</param>
      <param name="excludeGlobalTypes">Indica se è necessario controllare i tipi di tutti gli assembly a cui si fa riferimento.</param>
      <returns>Insieme di tipi che corrisponde ai criteri specificati dagli oggetti <paramref name="baseType" /> e <paramref name="excludeGlobalTypes" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ITypeResolutionService">
      <summary>Fornisce un'interfaccia per recuperare un assembly o un tipo in base al nome.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ITypeResolutionService.GetAssembly(System.Reflection.AssemblyName)">
      <summary>Ottiene l'assembly richiesto.</summary>
      <param name="name">Nome dell'assembly da recuperare.</param>
      <returns>Istanza dell'assembly richiesto o <see langword="null" /> se non è possibile trovare alcun assembly.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ITypeResolutionService.GetAssembly(System.Reflection.AssemblyName,System.Boolean)">
      <summary>Ottiene l'assembly richiesto.</summary>
      <param name="name">Nome dell'assembly da recuperare.</param>
      <param name="throwOnError">
        <see langword="true" /> se questo metodo deve generare un'eccezione quando non è possibile trovare l'assembly. <see langword="false" /> in caso contrario. Se, il metodo restituirà <see langword="null" /> se non è possibile trovare l'assembly.</param>
      <returns>Istanza dell'assembly richiesto o <see langword="null" /> se non è possibile trovare alcun assembly.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ITypeResolutionService.GetPathOfAssembly(System.Reflection.AssemblyName)">
      <summary>Ottiene il percorso del file dal quale è stato caricato l'assembly.</summary>
      <param name="name">Nome dell'assembly.</param>
      <returns>Percorso del file dal quale è stato caricato l'assembly.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String)">
      <summary>Carica un tipo con il nome specificato.</summary>
      <param name="name">Nome del tipo. Se il nome del tipo non è un nome completo che indica un assembly, verrà effettuata la ricerca nel gruppo interno di assembly a cui si fa riferimento.</param>
      <returns>Istanza di <see cref="T:System.Type" /> che corrisponde al nome specificato o <see langword="null" /> se non è possibile trovare alcun tipo.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean)">
      <summary>Carica un tipo con il nome specificato.</summary>
      <param name="name">Nome del tipo. Se il nome del tipo non è un nome completo che indica un assembly, verrà effettuata la ricerca nel gruppo interno di assembly a cui si fa riferimento.</param>
      <param name="throwOnError">
        <see langword="true" /> se questo metodo deve generare un'eccezione quando non è possibile trovare l'assembly. <see langword="false" /> in caso contrario. Se, il metodo restituirà <see langword="null" /> se non è possibile trovare l'assembly.</param>
      <returns>Istanza di <see cref="T:System.Type" /> che corrisponde al nome specificato o <see langword="null" /> se non è possibile trovare alcun tipo.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean,System.Boolean)">
      <summary>Carica un tipo con il nome specificato.</summary>
      <param name="name">Nome del tipo. Se il nome del tipo non è un nome completo che indica un assembly, verrà effettuata la ricerca nel gruppo interno di assembly a cui si fa riferimento.</param>
      <param name="throwOnError">
        <see langword="true" /> se questo metodo deve generare un'eccezione quando non è possibile trovare l'assembly. <see langword="false" /> in caso contrario. Se, il metodo restituirà <see langword="null" /> se non è possibile trovare l'assembly.</param>
      <param name="ignoreCase">
        <see langword="true" /> per ignorare la distinzione tra maiuscole e minuscole nella ricerca dei tipi. <see langword="false" /> in caso contrario.</param>
      <returns>Istanza di <see cref="T:System.Type" /> che corrisponde al nome specificato o <see langword="null" /> se non è possibile trovare alcun tipo.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ITypeResolutionService.ReferenceAssembly(System.Reflection.AssemblyName)">
      <summary>Aggiunge un riferimento all'assembly specificato.</summary>
      <param name="name">Oggetto <see cref="T:System.Reflection.AssemblyName" /> che indica l'assembly a cui fare riferimento.</param>
    </member>
    <member name="T:System.ComponentModel.Design.MenuCommand">
      <summary>Rappresenta un comando di un menu di Windows o di una barra degli strumenti.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommand.#ctor(System.EventHandler,System.ComponentModel.Design.CommandID)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.MenuCommand" />.</summary>
      <param name="handler">Evento da generare quando l'utente sceglie la voce di menu o il pulsante della barra degli strumenti.</param>
      <param name="command">ID univoco del comando che collega questo comando di menu al menu dell'ambiente.</param>
    </member>
    <member name="P:System.ComponentModel.Design.MenuCommand.Checked">
      <summary>Ottiene o imposta un valore che indica se la voce di menu è selezionata.</summary>
      <returns>
        <see langword="true" /> se l'elemento è selezionato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="E:System.ComponentModel.Design.MenuCommand.CommandChanged">
      <summary>Viene generato quando viene modificato il comando di menu.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.MenuCommand.CommandID">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> associato a questo comando di menu.</summary>
      <returns>Oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> associato al comando di menu.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.MenuCommand.Enabled">
      <summary>Ottiene un valore che indica se questa voce di menu è disponibile.</summary>
      <returns>
        <see langword="true" /> se la voce è attivata. <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommand.Invoke">
      <summary>Richiama il comando.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommand.Invoke(System.Object)">
      <summary>Richiama il comando con il parametro dato.</summary>
      <param name="arg">Argomento facoltativo che può essere utilizzato dal comando.</param>
    </member>
    <member name="P:System.ComponentModel.Design.MenuCommand.OleStatus">
      <summary>Ottiene il codice di stato del comando OLE per questa voce di menu.</summary>
      <returns>Intero che contiene i flag di stato relativi allo stato della voce di menu.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)">
      <summary>Genera l'evento <see cref="E:System.ComponentModel.Design.MenuCommand.CommandChanged" />.</summary>
      <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="P:System.ComponentModel.Design.MenuCommand.Properties">
      <summary>Ottiene le proprietà pubbliche associate all'oggetto <see cref="T:System.ComponentModel.Design.MenuCommand" />.</summary>
      <returns>Oggetto <see cref="T:System.Collections.IDictionary" /> che contiene le proprietà pubbliche dell'oggetto <see cref="T:System.ComponentModel.Design.MenuCommand" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.MenuCommand.Supported">
      <summary>Ottiene o imposta un valore che indica se la voce di menu è supportata.</summary>
      <returns>
        <see langword="true" /> se la voce è supportata, ovvero l'impostazione predefinita. <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommand.ToString">
      <summary>Restituisce una rappresentazione in forma di stringa di questo comando di menu.</summary>
      <returns>Stringa che contiene il valore della proprietà <see cref="P:System.ComponentModel.Design.MenuCommand.CommandID" /> aggiunta ai nomi di tutti i flag impostati, separati dal carattere | Tali proprietà dei flag comprendono <see cref="P:System.ComponentModel.Design.MenuCommand.Checked" />, <see cref="P:System.ComponentModel.Design.MenuCommand.Enabled" />, <see cref="P:System.ComponentModel.Design.MenuCommand.Supported" /> e <see cref="P:System.ComponentModel.Design.MenuCommand.Visible" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.MenuCommand.Visible">
      <summary>Ottiene o imposta un valore che indica se la voce di menu è visibile.</summary>
      <returns>
        <see langword="true" /> se la voce è visibile. <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.SelectionTypes">
      <summary>Definisce gli identificatori che indicano il tipo di una selezione.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.SelectionTypes.Add">
      <summary>Rappresenta una selezione di aggiunta che consente di aggiungere i componenti selezionati alla selezione corrente, mantenendo l'insieme corrente di componenti selezionati.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.SelectionTypes.Auto">
      <summary>Rappresenta una selezione normale. Il servizio di selezione utilizza i tasti CTRL e MAIUSC per supportare l'aggiunta o la rimozione di componenti alla o dalla selezione.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.SelectionTypes.Click">
      <summary>Rappresenta una selezione che si verifica quando l'utente fa clic su un componente. Se si seleziona un componente già selezionato, non verrà annullato ma verrà promosso a componente principale selezionato.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.SelectionTypes.MouseDown">
      <summary>Rappresenta una selezione che si verifica quando l'utente preme il pulsante del mouse mentre il puntatore è posizionato su un componente. Se il componente in corrispondenza del puntatore è già selezionato, non verrà annullato ma verrà promosso a componente principale selezionato.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.SelectionTypes.MouseUp">
      <summary>Rappresenta una selezione che si verifica quando l'utente rilascia il pulsante del mouse immediatamente dopo avere selezionato un componente. Se si seleziona un componente già selezionato, non verrà annullato ma verrà promosso a componente principale selezionato.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.SelectionTypes.Normal">
      <summary>Rappresenta una selezione normale. Il servizio di selezione utilizza i tasti CTRL e MAIUSC per supportare l'aggiunta o la rimozione di componenti alla o dalla selezione.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.SelectionTypes.Primary">
      <summary>Rappresenta una selezione principale che si verifica quando l'utente fa clic su un componente. Se un componente dell'elenco di selezione è già selezionato, verrà promosso a selezione principale.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.SelectionTypes.Remove">
      <summary>Rappresenta una selezione di rimozione che consente di rimuovere i componenti selezionati dalla selezione corrente, mantenendo l'insieme corrente di componenti selezionati.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.SelectionTypes.Replace">
      <summary>Rappresenta una selezione che si verifica quando si sostituisce il contenuto di una selezione. Questo servizio di selezione sostituisce il contenuto della selezione corrente con altro contenuto.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.SelectionTypes.Toggle">
      <summary>Rappresenta una selezione di attivazione/disattivazione che consente di passare dalla selezione corrente alla selezione fornita e viceversa. Se un componente è già selezionato e viene passato in <see cref="Overload:System.ComponentModel.Design.ISelectionService.SetSelectedComponents" /> con un tipo di selezione <see cref="F:System.ComponentModel.Design.SelectionTypes.Toggle" />, la selezione del componente verrà annullata.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.SelectionTypes.Valid">
      <summary>Identifica i tipi di selezione validi come <see cref="F:System.ComponentModel.Design.SelectionTypes.Normal" />, <see cref="F:System.ComponentModel.Design.SelectionTypes.Replace" />, <see cref="F:System.ComponentModel.Design.SelectionTypes.MouseDown" />, <see cref="F:System.ComponentModel.Design.SelectionTypes.MouseUp" /> o <see cref="F:System.ComponentModel.Design.SelectionTypes.Click" />.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ComponentSerializationService">
      <summary>Fornisce la classe base per la serializzazione di un insieme di componenti od oggetti serializzabili in un archivio di serializzazione.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.Serialization.ComponentSerializationService" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.CreateStore">
      <summary>Crea un nuovo oggetto <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</summary>
      <returns>Nuovo archivio di serializzazione creato.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore)">
      <summary>Deserializza l'archivio dato per produrre un insieme di oggetti.</summary>
      <param name="store">
        <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> da deserializzare.</param>
      <returns>Insieme di oggetti creato in base allo stato memorizzato.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> non contiene dati in un formato che può essere elaborato dal contenitore di serializzazione.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)">
      <summary>Deserializza l'archivio dato e compila l'interfaccia <see cref="T:System.ComponentModel.IContainer" /> data con oggetti <see cref="T:System.ComponentModel.IComponent" /> deserializzati.</summary>
      <param name="store">
        <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> da deserializzare.</param>
      <param name="container">Interfaccia <see cref="T:System.ComponentModel.IContainer" /> a cui verranno aggiunti gli oggetti <see cref="T:System.ComponentModel.IComponent" />.</param>
      <returns>Insieme di oggetti creato in base allo stato memorizzato.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> o <paramref name="container" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> non contiene dati in un formato che può essere elaborato dal contenitore di serializzazione.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)">
      <summary>Deserializza la classe <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> data nel contenitore dato.</summary>
      <param name="store">
        <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> da deserializzare.</param>
      <param name="container">Contenitore a cui verranno aggiunti gli oggetti <see cref="T:System.ComponentModel.IComponent" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> o <paramref name="container" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> non contiene dati in un formato che può essere elaborato dal contenitore di serializzazione.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean)">
      <summary>Deserializza la classe <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> data nel contenitore dato, convalidando eventualmente i tipi riciclati.</summary>
      <param name="store">
        <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> da deserializzare.</param>
      <param name="container">Contenitore a cui verranno aggiunti gli oggetti <see cref="T:System.ComponentModel.IComponent" />.</param>
      <param name="validateRecycledTypes">
        <see langword="true" /> per garantire che la deserializzazione funzionerà solo se applicata a un oggetto dello stesso tipo.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> o <paramref name="container" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> non contiene dati in un formato che può essere elaborato dal contenitore di serializzazione.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean,System.Boolean)">
      <summary>Deserializza la classe <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> data nel contenitore dato, applicando eventualmente i valori di proprietà predefiniti.</summary>
      <param name="store">
        <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> da deserializzare.</param>
      <param name="container">Contenitore a cui verranno aggiunti gli oggetti <see cref="T:System.ComponentModel.IComponent" />.</param>
      <param name="validateRecycledTypes">
        <see langword="true" /> per garantire che la deserializzazione funzionerà solo se applicata a un oggetto dello stesso tipo.</param>
      <param name="applyDefaults">
        <see langword="true" /> per indicare che devono essere applicati i valori di proprietà predefiniti.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> o <paramref name="container" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> non contiene dati in un formato che può essere elaborato dal contenitore di serializzazione.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.LoadStore(System.IO.Stream)">
      <summary>Carica una classe <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> da un flusso.</summary>
      <param name="stream">Classe <see cref="T:System.IO.Stream" /> da cui verrà caricato l'archivio.</param>
      <returns>Nuova istanza di <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="stream" /> non contiene dati salvati da una precedente chiamata a <see cref="M:System.ComponentModel.Design.Serialization.SerializationStore.Save(System.IO.Stream)" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)">
      <summary>Serializza l'oggetto dato nella classe <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> data.</summary>
      <param name="store">Classe <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> in cui verrà scritto lo stato di <paramref name="value" />.</param>
      <param name="value">Oggetto da serializzare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> o <paramref name="value" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> è chiuso oppure <paramref name="store" /> non è un tipo supportato di archivio di serializzazione. Utilizzare un archivio restituito da <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)">
      <summary>Serializza l'oggetto dato, tenendo conto dei valori di proprietà predefiniti.</summary>
      <param name="store">Classe <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> in cui verrà serializzato lo stato di <paramref name="value" />.</param>
      <param name="value">Oggetto da serializzare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> o <paramref name="value" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> è chiuso oppure <paramref name="store" /> non è un tipo supportato di archivio di serializzazione. Utilizzare un archivio restituito da <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>Serializza il membro specificato sull'oggetto indicato.</summary>
      <param name="store">Classe <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> in cui verrà serializzato lo stato di <paramref name="member" />.</param>
      <param name="owningObject">Oggetto a cui è collegato <paramref name="member" />.</param>
      <param name="member">Classe <see cref="T:System.ComponentModel.MemberDescriptor" /> che specifica il membro da serializzare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> o <paramref name="value" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> è chiuso oppure <paramref name="store" /> non è un tipo supportato di archivio di serializzazione. Utilizzare un archivio restituito da <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>Serializza il membro dato sull'oggetto dato, tenendo conto del valore di proprietà predefinito.</summary>
      <param name="store">Classe <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> in cui verrà serializzato lo stato di <paramref name="member" />.</param>
      <param name="owningObject">Oggetto a cui è collegato <paramref name="member" />.</param>
      <param name="member">Membro da serializzare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> o <paramref name="value" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> è chiuso oppure <paramref name="store" /> non è un tipo supportato di archivio di serializzazione. Utilizzare un archivio restituito da <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ContextStack">
      <summary>Fornisce un oggetto stack che può essere utilizzato da un serializzatore per rendere disponibili delle informazioni a serializzatori annidati.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ContextStack.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ContextStack.Append(System.Object)">
      <summary>Accoda un oggetto alla fine dello stack anziché inserirlo all'inizio dello stack.</summary>
      <param name="context">Oggetto di contesto da accodare allo stack.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ContextStack.Current">
      <summary>Ottiene l'oggetto corrente nello stack.</summary>
      <returns>Oggetto corrente nello stack oppure <see langword="null" /> se non è stato inserito alcun oggetto.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ContextStack.Item(System.Int32)">
      <summary>Ottiene l'oggetto nello stack al livello specificato.</summary>
      <param name="level">Livello dell'oggetto da recuperare nello stack. Il livello 0 è il primo livello dello stack, il livello 1 è quello successivo e così via. Questo livello deve essere maggiore o uguale a 0. Se il livello è superiore al numero dei livelli presenti nello stack, verrà restituito <see langword="null" />.</param>
      <returns>Oggetto nello stack al livello specificato oppure <see langword="null" /> se non esiste alcun oggetto a tale livello.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="level" /> è minore di 0.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ContextStack.Item(System.Type)">
      <summary>Ottiene il primo oggetto nello stack che eredita o implementa il tipo specificato.</summary>
      <param name="type">Tipo da recuperare dallo stack di contesto.</param>
      <returns>Primo oggetto nello stack che eredita o implementa il tipo specificato oppure <see langword="null" /> se nessun oggetto nello stack implementa il tipo.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ContextStack.Pop">
      <summary>Rimuove l'oggetto corrente dallo stack restituendone il valore.</summary>
      <returns>Oggetto rimosso dallo stack; <see langword="null" /> se lo stack non contiene oggetti.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ContextStack.Push(System.Object)">
      <summary>Inserisce l'oggetto specificato nello stack.</summary>
      <param name="context">Oggetto di contesto da inserire nello stack.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> è <see langword="null" />.</exception>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.DefaultSerializationProviderAttribute">
      <summary>L'attributo <see cref="T:System.ComponentModel.Design.Serialization.DefaultSerializationProviderAttribute" /> viene inserito in un serializzatore per indicare la classe da utilizzare come provider predefinito di tale tipo di serializzatore.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DefaultSerializationProviderAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.Serialization.DefaultSerializationProviderAttribute" /> con il tipo di provider denominato.</summary>
      <param name="providerTypeName">Nome del tipo di provider di serializzazione.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="providerTypeName" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DefaultSerializationProviderAttribute.#ctor(System.Type)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.Serialization.DefaultSerializationProviderAttribute" /> con il tipo di provider dato.</summary>
      <param name="providerType">Classe <see cref="T:System.Type" /> del provider di serializzazione.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="providerType" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DefaultSerializationProviderAttribute.ProviderTypeName">
      <summary>Ottiene il nome del tipo di provider di serializzazione.</summary>
      <returns>Stringa contenente il nome del provider.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.DesignerLoader">
      <summary>Fornisce un'interfaccia di base del caricatore della finestra di progettazione che può essere utilizzata per implementare un caricatore della finestra di progettazione personalizzato.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerLoader.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)">
      <summary>Inizia a caricare una finestra di progettazione.</summary>
      <param name="host">Host tramite il quale questo caricatore carica i componenti.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerLoader.Dispose">
      <summary>Rilascia tutte le risorse usate da <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerLoader.Flush">
      <summary>Scrive le modifiche inserite nella cache nella posizione dalla quale era stata caricata la finestra di progettazione.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerLoader.Loading">
      <summary>Ottiene un valore che indica se il caricatore sta al momento caricando un documento.</summary>
      <returns>
        <see langword="true" /> se il caricatore sta al momento caricando un documento. <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute">
      <summary>Indica un serializzatore che deve essere utilizzato dal gestore della serializzazione per serializzare i valori del tipo a cui applicare questo attributo. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.#ctor(System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute" />.</summary>
      <param name="serializerTypeName">Nome completo del tipo di dati del serializzatore.</param>
      <param name="baseSerializerTypeName">Nome completo del tipo di dati di base del serializzatore. È possibile fornire più serializzatori per una classe purché questi abbiano tipi di base diversi.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.#ctor(System.String,System.Type)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute" />.</summary>
      <param name="serializerTypeName">Nome completo del tipo di dati del serializzatore.</param>
      <param name="baseSerializerType">Tipo di dati di base del serializzatore. È possibile fornire più serializzatori per una classe purché questi abbiano tipi di base diversi.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.#ctor(System.Type,System.Type)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute" />.</summary>
      <param name="serializerType">Tipo di dati del serializzatore.</param>
      <param name="baseSerializerType">Tipo di dati di base del serializzatore. È possibile fornire più serializzatori per una classe purché questi abbiano tipi di base diversi.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.SerializerBaseTypeName">
      <summary>Ottiene il nome tipo completo del tipo di base del serializzatore.</summary>
      <returns>Nome tipo completo del tipo di base del serializzatore.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.SerializerTypeName">
      <summary>Ottiene il nome tipo completo del serializzatore.</summary>
      <returns>Nome tipo completo del serializzatore.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.TypeId">
      <summary>Indica un ID univoco per questo tipo di attributo.</summary>
      <returns>ID univoco per questo tipo di attributo.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost">
      <summary>Fornisce un'interfaccia in grado di estendere un host di progettazione per supportare il caricamento da uno stato serializzato.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.EndLoad(System.String,System.Boolean,System.Collections.ICollection)">
      <summary>Termina l'operazione di caricamento della finestra di progettazione.</summary>
      <param name="baseClassName">Nome completo della classe base del documento in fase di progettazione nella finestra di progettazione.</param>
      <param name="successful">
        <see langword="true" /> se il caricamento della finestra di progettazione è riuscito. <see langword="false" /> in caso contrario.</param>
      <param name="errorCollection">Insieme contenente eventuali errori riscontrati durante il caricamento. Se non si riscontrano errori, passare un insieme vuoto o <see langword="null" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.Reload">
      <summary>Ricarica il documento di progettazione.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost2">
      <summary>Fornisce un'interfaccia che estende <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> per specificare se gli errori vengono tollerati durante il caricamento di un documento di progettazione.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.IDesignerLoaderHost2.CanReloadWithErrors">
      <summary>Ottiene o imposta un valore che indica se è possibile ricaricare in caso di errori.</summary>
      <returns>
        <see langword="true" /> se il caricatore della finestra di progettazione può ricaricare il documento di progettazione quando vengono rilevati errori; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.IDesignerLoaderHost2.IgnoreErrorsDuringReload">
      <summary>Ottiene o imposta un valore che indica se gli errori devono essere ignorati quando viene chiamato <see cref="M:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.Reload" />.</summary>
      <returns>
        <see langword="true" /> se il caricatore della finestra di progettazione ignorerà gli errori durante il nuovo caricamento; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService">
      <summary>Fornisce un'interfaccia in grado di estendere un caricatore della finestra di progettazione in modo da supportare il caricamento asincrono di componenti esterni.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency">
      <summary>Registra un componente esterno come parte del processo di caricamento gestito da questa interfaccia.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(System.Boolean,System.Collections.ICollection)">
      <summary>Segnala che un caricamento dipendente è terminato.</summary>
      <param name="successful">
        <see langword="true" /> se il caricamento della finestra di progettazione è riuscito; <see langword="false" /> se si sono verificati errori che hanno impedito il completamento del caricamento.</param>
      <param name="errorCollection">Insieme di errori riscontrati durante il caricamento, se ne esistono. Se non stati riscontrati errori, passare un insieme vuoto o <see langword="null" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload">
      <summary>Ricarica il documento di progettazione.</summary>
      <returns>
        <see langword="true" /> se la richiesta di caricamento viene accettata oppure <see langword="false" /> se il caricatore non consente il ricaricamento.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager">
      <summary>Fornisce un'interfaccia in grado di gestire la serializzazione in fase di progettazione.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
      <summary>Aggiunge il provider di serializzazione specificato al gestore della serializzazione.</summary>
      <param name="provider">Provider di serializzazione da aggiungere.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context">
      <summary>Ottiene un'area di memorizzazione definita dall'utente e basata su stack utile per la comunicazione tra i serializzatori.</summary>
      <returns>Oggetto <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> che memorizza dati.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
      <summary>Crea un'istanza del tipo specificato e la aggiunge a una raccolta di istanze denominate.</summary>
      <param name="type">Tipo di dati da creare.</param>
      <param name="arguments">Argomento da passare al costruttore per questo tipo.</param>
      <param name="name">Nome dell'oggetto. Questo nome può essere utilizzato per accedere all'oggetto in un momento successivo tramite il metodo <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" />. Se viene passato <see langword="null" />, l'oggetto verrà comunque creato ma non sarà possibile accedervi in base al nome.</param>
      <param name="addToContainer">Se viene passato <see langword="true" />, questo oggetto verrà aggiunto al contenitore di progettazione. È necessario che l'oggetto implementi <see cref="T:System.ComponentModel.IComponent" /> perché abbia effetto.</param>
      <returns>Istanza dell'oggetto appena creata.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)">
      <summary>Ottiene un'istanza di un oggetto creato con il nome specificato oppure <see langword="null" /> se tale oggetto non esiste.</summary>
      <param name="name">Nome dell'oggetto da recuperare.</param>
      <returns>Istanza dell'oggetto con il nome specificato oppure <see langword="null" /> se non viene trovato alcun oggetto con tale nome.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System.Object)">
      <summary>Ottiene il nome dell'oggetto specificato oppure <see langword="null" /> se l'oggetto non ha alcun nome.</summary>
      <param name="value">Oggetto per il quale recuperare il nome.</param>
      <returns>Nome dell'oggetto oppure <see langword="null" /> se l'oggetto non ha alcun nome.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(System.Type,System.Type)">
      <summary>Ottiene un serializzatore del tipo richiesto per il tipo di oggetto specificato.</summary>
      <param name="objectType">Tipo dell'oggetto per il quale ottenere il serializzatore.</param>
      <param name="serializerType">Tipo del serializzatore da recuperare.</param>
      <returns>Istanza del serializzatore richiesto oppure <see langword="null" /> se non viene trovato un serializzatore appropriato.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(System.String)">
      <summary>Ottiene un tipo del nome specificato.</summary>
      <param name="typeName">Nome completo del tipo da caricare.</param>
      <returns>Istanza del tipo oppure <see langword="null" /> se non è possibile caricare il tipo.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties">
      <summary>Indica proprietà personalizzate che possono essere serializzate con i serializzatori disponibili.</summary>
      <returns>Oggetto <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> contenente le proprietà da serializzare.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
      <summary>Rimuove un provider di serializzazione personalizzato dal gestore della serializzazione.</summary>
      <param name="provider">Provider da rimuovere. Questo oggetto deve essere stato aggiunto utilizzando il metodo <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(System.Object)">
      <summary>Riporta un errore di serializzazione.</summary>
      <param name="errorInformation">Errore da riportare. Questo oggetto di informazioni può essere qualsiasi tipo di oggetto. Se è un'eccezione, il messaggio dell'eccezione verrà estratto e riportato all'utente. Se si tratta di un altro tipo, verrà chiamato il metodo <see cref="M:System.Object.ToString" /> per visualizzare le informazioni all'utente.</param>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName">
      <summary>Viene generato quando il metodo <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System.Object)" /> non è in grado di individuare il nome specificato nella tabella dei nomi del gestore della serializzazione.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete">
      <summary>Viene generato al termine della serializzazione.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(System.Object,System.String)">
      <summary>Imposta il nome dell'oggetto esistente specificato.</summary>
      <param name="instance">Istanza dell'oggetto a cui assegnare un nome.</param>
      <param name="name">Nome da assegnare all'istanza.</param>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider">
      <summary>Fornisce un'interfaccia che consente di accedere a un serializzatore.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Type,System.Type)">
      <summary>Ottiene un serializzatore utilizzando gli attributi specificati.</summary>
      <param name="manager">Gestore della serializzazione che richiede il serializzatore.</param>
      <param name="currentSerializer">Istanza del serializzatore corrente del tipo specificato. Può essere <see langword="null" /> se non esiste alcun serializzatore del tipo specificato.</param>
      <param name="objectType">Tipo di dati dell'oggetto da serializzare.</param>
      <param name="serializerType">Tipo di dati del serializzatore da creare.</param>
      <returns>Istanza di un serializzatore del tipo richiesto oppure <see langword="null" /> se non è possibile soddisfare la richiesta.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.IDesignerSerializationService">
      <summary>Fornisce un'interfaccia in grado di richiamare la serializzazione e la deserializzazione.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.IDesignerSerializationService.Deserialize(System.Object)">
      <summary>Deserializza l'oggetto dati di serializzazione specificato e restituisce un insieme di oggetti rappresentato da tali dati.</summary>
      <param name="serializationData">Oggetto costituito da dati serializzati.</param>
      <returns>Insieme <see cref="T:System.Collections.ICollection" /> di oggetti rigenerato dall'oggetto dati di serializzazione specificato.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.IDesignerSerializationService.Serialize(System.Collections.ICollection)">
      <summary>Serializza l'insieme specificato di oggetti e li memorizza in un oggetto dati di serializzazione.</summary>
      <param name="objects">Insieme di oggetti da serializzare.</param>
      <returns>Oggetto che contiene lo stato serializzato dell'insieme specificato di oggetti.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.INameCreationService">
      <summary>Fornisce un servizio in grado di generare nomi univoci per gli oggetti.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.INameCreationService.CreateName(System.ComponentModel.IContainer,System.Type)">
      <summary>Crea un nuovo nome univoco per tutti i componenti nel contenitore specificato.</summary>
      <param name="container">Contenitore nel quale viene aggiunto il nuovo oggetto.</param>
      <param name="dataType">Tipo di dati dell'oggetto che riceve il nome.</param>
      <returns>Nome univoco per il tipo di dati.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName(System.String)">
      <summary>Ottiene un valore che indica se il nome specificato è valido.</summary>
      <param name="name">Nome da convalidare.</param>
      <returns>
        <see langword="true" /> se il nome è valido; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.INameCreationService.ValidateName(System.String)">
      <summary>Ottiene un valore che indica se il nome specificato è valido.</summary>
      <param name="name">Nome da convalidare.</param>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.InstanceDescriptor">
      <summary>Fornisce le informazioni necessarie per creare un'istanza di un oggetto. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.InstanceDescriptor.#ctor(System.Reflection.MemberInfo,System.Collections.ICollection)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.Serialization.InstanceDescriptor" /> con le informazioni sui membri e gli argomenti specificati.</summary>
      <param name="member">Informazioni sui membri per il descrittore. Può essere un oggetto <see cref="T:System.Reflection.MethodInfo" />, <see cref="T:System.Reflection.ConstructorInfo" />, <see cref="T:System.Reflection.FieldInfo" /> o <see cref="T:System.Reflection.PropertyInfo" />. Se è un <see cref="T:System.Reflection.MethodInfo" />, <see cref="T:System.Reflection.FieldInfo" /> o <see cref="T:System.Reflection.PropertyInfo" />, dovrà rappresentare un membro <see langword="static" />.</param>
      <param name="arguments">Insieme di argomenti da passare al membro. Questo parametro può essere <see langword="null" /> o un insieme vuoto se non è presente alcun argomento. L'insieme può anche essere composto da altre istanze di <see cref="T:System.ComponentModel.Design.Serialization.InstanceDescriptor" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="member" /> è di tipo <see cref="T:System.Reflection.MethodInfo" />, <see cref="T:System.Reflection.FieldInfo" /> o <see cref="T:System.Reflection.PropertyInfo" /> e non rappresenta un membro <see langword="static" />.  
-oppure- 
<paramref name="member" /> è di tipo <see cref="T:System.Reflection.PropertyInfo" /> e non è leggibile.  
-oppure- 
<paramref name="member" /> è di tipo <see cref="T:System.Reflection.MethodInfo" /> o <see cref="T:System.Reflection.ConstructorInfo" /> e il numero di argomenti in <paramref name="arguments" /> non corrisponde alla firma di <paramref name="member" />.
-oppure-
<paramref name="member" /> è di tipo <see cref="T:System.Reflection.ConstructorInfo" /> e rappresenta un membro <see langword="static" />.  
-oppure- 
<paramref name="member" /> è di tipo <see cref="T:System.Reflection.FieldInfo" /> e il numero di argomenti in <paramref name="arguments" /> non è zero.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.InstanceDescriptor.#ctor(System.Reflection.MemberInfo,System.Collections.ICollection,System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.Serialization.InstanceDescriptor" /> utilizzando le informazioni sui membri e gli argomenti specificati e il valore che indica se le informazioni specificate descrivono completamente l'istanza.</summary>
      <param name="member">Informazioni sui membri per il descrittore. Può essere un oggetto <see cref="T:System.Reflection.MethodInfo" />, <see cref="T:System.Reflection.ConstructorInfo" />, <see cref="T:System.Reflection.FieldInfo" /> o <see cref="T:System.Reflection.PropertyInfo" />. Se è un <see cref="T:System.Reflection.MethodInfo" />, <see cref="T:System.Reflection.FieldInfo" /> o <see cref="T:System.Reflection.PropertyInfo" />, dovrà rappresentare un membro <see langword="static" />.</param>
      <param name="arguments">Insieme di argomenti da passare al membro. Questo parametro può essere <see langword="null" /> o un insieme vuoto se non è presente alcun argomento. L'insieme può anche essere composto da altre istanze di <see cref="T:System.ComponentModel.Design.Serialization.InstanceDescriptor" />.</param>
      <param name="isComplete">
        <see langword="true" /> se le informazioni specificate descrivono completamente l'istanza. <see langword="false" /> in caso contrario.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="member" /> è di tipo <see cref="T:System.Reflection.MethodInfo" />, <see cref="T:System.Reflection.FieldInfo" /> o <see cref="T:System.Reflection.PropertyInfo" /> e non rappresenta un membro <see langword="static" /><paramref name="member" /> è di tipo <see cref="T:System.Reflection.PropertyInfo" /> e non è leggibile.  
 <paramref name="member" /> è di tipo <see cref="T:System.Reflection.MethodInfo" /> o <see cref="T:System.Reflection.ConstructorInfo" /> e il numero di argomenti in <paramref name="arguments" /> non corrisponde alla firma di <paramref name="member" />.  
 <paramref name="member" /> è di tipo <see cref="T:System.Reflection.ConstructorInfo" /> e rappresenta un membro <see langword="static" />. 
 <paramref name="member" /> è di tipo <see cref="T:System.Reflection.FieldInfo" /> e il numero di argomenti in <paramref name="arguments" /> non è zero.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.InstanceDescriptor.Arguments">
      <summary>Ottiene l'insieme di argomenti che è possibile utilizzare per ricostruire un'istanza dell'oggetto rappresentata da questo descrittore dell'istanza.</summary>
      <returns>Insieme <see cref="T:System.Collections.ICollection" /> di argomenti che può essere utilizzato per creare l'oggetto.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.InstanceDescriptor.Invoke">
      <summary>Chiama questo descrittore dell'istanza e restituisce l'oggetto descritto dal descrittore.</summary>
      <returns>Oggetto descritto da questo descrittore dell'istanza.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.InstanceDescriptor.IsComplete">
      <summary>Ottiene un valore che indica se il contenuto di questo oggetto <see cref="T:System.ComponentModel.Design.Serialization.InstanceDescriptor" /> identifica completamente l'istanza.</summary>
      <returns>
        <see langword="true" /> se l'istanza è descritta completamente. <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.InstanceDescriptor.MemberInfo">
      <summary>Ottiene le informazioni sui membri che descrivono l'istanza alla quale è associato questo descrittore.</summary>
      <returns>Oggetto <see cref="T:System.Reflection.MemberInfo" /> che descrive l'istanza alla quale è associato questo oggetto.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.MemberRelationship">
      <summary>Rappresenta una singola relazione tra un oggetto e un membro.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberRelationship.#ctor(System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.Serialization.MemberRelationship" />.</summary>
      <param name="owner">Oggetto proprietario di <paramref name="member" />.</param>
      <param name="member">Membro da correlare a <paramref name="owner" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owner" /> o <paramref name="member" /> è <see langword="null" />.</exception>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.MemberRelationship.Empty">
      <summary>Rappresenta la relazione di membri vuota. Questo campo è di sola lettura.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberRelationship.Equals(System.Object)">
      <summary>Determina se due istanze di <see cref="T:System.ComponentModel.Design.Serialization.MemberRelationship" /> sono uguali.</summary>
      <param name="obj">Oggetto <see cref="T:System.ComponentModel.Design.Serialization.MemberRelationship" /> da confrontare con l'oggetto <see cref="T:System.ComponentModel.Design.Serialization.MemberRelationship" /> corrente.</param>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.ComponentModel.Design.Serialization.MemberRelationship" /> specificato è uguale all'oggetto <see cref="T:System.ComponentModel.Design.Serialization.MemberRelationship" /> corrente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberRelationship.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Codice hash per l'oggetto <see cref="T:System.ComponentModel.Design.Serialization.MemberRelationship" /> corrente.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.MemberRelationship.IsEmpty">
      <summary>Ottiene un valore che indica se questa relazione è uguale alla relazione <see cref="F:System.ComponentModel.Design.Serialization.MemberRelationship.Empty" />.</summary>
      <returns>
        <see langword="true" /> se questa relazione è uguale alla relazione <see cref="F:System.ComponentModel.Design.Serialization.MemberRelationship.Empty" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.MemberRelationship.Member">
      <summary>Ottiene il membro correlato.</summary>
      <returns>Membro passato al metodo <see cref="M:System.ComponentModel.Design.Serialization.MemberRelationship.#ctor(System.Object,System.ComponentModel.MemberDescriptor)" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberRelationship.op_Equality(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)">
      <summary>Verifica se due strutture <see cref="T:System.ComponentModel.Design.Serialization.MemberRelationship" /> specificate sono equivalenti.</summary>
      <param name="left">Struttura <see cref="T:System.ComponentModel.Design.Serialization.MemberRelationship" /> a sinistra dell'operatore di uguaglianza.</param>
      <param name="right">Struttura <see cref="T:System.ComponentModel.Design.Serialization.MemberRelationship" /> a destra dell'operatore di uguaglianza.</param>
      <returns>Questo operatore restituisce <see langword="true" /> se le due strutture <see cref="T:System.ComponentModel.Design.Serialization.MemberRelationship" /> sono uguali, in caso contrario restituisce <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberRelationship.op_Inequality(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)">
      <summary>Verifica se due strutture <see cref="T:System.ComponentModel.Design.Serialization.MemberRelationship" /> specificate sono diverse.</summary>
      <param name="left">Struttura <see cref="T:System.ComponentModel.Design.Serialization.MemberRelationship" /> a sinistra dell'operatore di disuguaglianza.</param>
      <param name="right">Struttura <see cref="T:System.ComponentModel.Design.Serialization.MemberRelationship" /> a destra dell'operatore di disuguaglianza.</param>
      <returns>Questo operatore restituisce <see langword="true" /> se le due strutture <see cref="T:System.ComponentModel.Design.Serialization.MemberRelationship" /> sono diverse, in caso contrario restituisce <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.MemberRelationship.Owner">
      <summary>Ottiene l'oggetto proprietario.</summary>
      <returns>Oggetto proprietario passato al metodo <see cref="M:System.ComponentModel.Design.Serialization.MemberRelationship.#ctor(System.Object,System.ComponentModel.MemberDescriptor)" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.MemberRelationshipService">
      <summary>Fornisce la classe base per mettere in relazione un membro con un altro.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.Serialization.MemberRelationshipService" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.GetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship)">
      <summary>Ottiene una relazione con la relazione di origine data.</summary>
      <param name="source">Relazione di origine.</param>
      <returns>Relazione con <paramref name="source" /> o <see cref="F:System.ComponentModel.Design.Serialization.MemberRelationship.Empty" /> se non è presente alcuna relazione.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.ComponentModel.Design.Serialization.MemberRelationship)">
      <summary>Stabilisce una relazione tra un oggetto di origine e uno di destinazione.</summary>
      <param name="source">Relazione di origine. Si tratta della parte sinistra dell'assegnazione di una relazione.</param>
      <returns>Relazione corrente associata a <paramref name="source" /> o <see cref="F:System.ComponentModel.Design.Serialization.MemberRelationship.Empty" /> se non è presente alcuna relazione.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> è vuoto o la relazione non è supportata dal servizio.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>Stabilisce una relazione tra un oggetto di origine e uno di destinazione.</summary>
      <param name="sourceOwner">Proprietario di una relazione di origine.</param>
      <param name="sourceMember">Membro di una relazione di origine.</param>
      <returns>Struttura <see cref="T:System.ComponentModel.Design.Serialization.MemberRelationship" /> che incapsula la relazione tra un oggetto di origine e uno di destinazione o <see langword="null" /> se non è presente alcuna relazione.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceOwner" /> o <paramref name="sourceMember" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="sourceOwner" /> o <paramref name="sourceMember" /> è vuoto o la relazione non è supportata dal servizio.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)">
      <summary>Crea una relazione tra l'oggetto di origine e la relazione di destinazione.</summary>
      <param name="source">Relazione di origine.</param>
      <param name="relationship">Relazione da impostare nell'origine.</param>
      <exception cref="T:System.ArgumentException">La relazione non è supportata dal servizio.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.SupportsRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)">
      <summary>Ottiene un valore che indica se la relazione data è supportata.</summary>
      <param name="source">Relazione di origine.</param>
      <param name="relationship">Relazione da impostare nell'origine.</param>
      <returns>
        <see langword="true" /> se è supportata una relazione tra questi due oggetti; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ResolveNameEventArgs">
      <summary>Fornisce dati per l'evento <see cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ResolveNameEventArgs.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.Serialization.ResolveNameEventArgs" />.</summary>
      <param name="name">Nome da risolvere.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ResolveNameEventArgs.Name">
      <summary>Ottiene il nome dell'oggetto da risolvere.</summary>
      <returns>Nome dell'oggetto da risolvere.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ResolveNameEventArgs.Value">
      <summary>Ottiene o imposta l'oggetto che corrisponde al nome.</summary>
      <returns>Oggetto al quale è associato il nome.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ResolveNameEventHandler">
      <summary>Rappresenta il metodo che gestisce l'evento <see cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" /> di un gestore di serializzazione.</summary>
      <param name="sender">Origine dell'evento.</param>
      <param name="e">Oggetto <see cref="T:System.ComponentModel.Design.Serialization.ResolveNameEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute">
      <summary>Indica il serializzatore di base per un oggetto finestra di progettazione di primo livello. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.#ctor(System.String,System.String,System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" /> con gli attributi specificati.</summary>
      <param name="serializerTypeName">Nome completo del tipo di dati del serializzatore.</param>
      <param name="baseSerializerTypeName">Nome tipo di base del serializzatore. Una classe può comprendere più serializzatori poiché ciascuno di essi ha un tipo di base differente.</param>
      <param name="reloadable">
        <see langword="true" /> se questo serializzatore supporta il ricaricamento dinamico del documento. <see langword="false" /> in caso contrario.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.#ctor(System.String,System.Type,System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" /> con gli attributi specificati.</summary>
      <param name="serializerTypeName">Nome completo del tipo di dati del serializzatore.</param>
      <param name="baseSerializerType">Nome tipo di base del serializzatore. Una classe può comprendere più serializzatori poiché ciascuno di essi ha un tipo di base differente.</param>
      <param name="reloadable">
        <see langword="true" /> se questo serializzatore supporta il ricaricamento dinamico del documento. <see langword="false" /> in caso contrario.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.#ctor(System.Type,System.Type,System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" /> con gli attributi specificati.</summary>
      <param name="serializerType">Tipo di dati del serializzatore.</param>
      <param name="baseSerializerType">Tipo di base del serializzatore. Una classe può comprendere più serializzatori poiché ciascuno di essi ha un tipo di base differente.</param>
      <param name="reloadable">
        <see langword="true" /> se questo serializzatore supporta il ricaricamento dinamico del documento. <see langword="false" /> in caso contrario.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable">
      <summary>Ottiene un valore che indica se il serializzatore di primo livello supporta il ricaricamento del documento di progettazione senza che sia necessario dapprima eliminare l'host di progettazione.</summary>
      <returns>
        <see langword="true" /> se il serializzatore di primo livello supporta il ricaricamento. <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerBaseTypeName">
      <summary>Ottiene il nome tipo completo del tipo di base del serializzatore.</summary>
      <returns>Nome tipo di base del serializzatore.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerTypeName">
      <summary>Ottiene il nome tipo completo del serializzatore.</summary>
      <returns>Nome del tipo del serializzatore.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.TypeId">
      <summary>Ottiene un ID univoco per questo tipo di attributo.</summary>
      <returns>Oggetto contenente un ID univoco per questo tipo di attributo.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.SerializationStore">
      <summary>Fornisce la classe base per memorizzare i dati di serializzazione relativi alla classe <see cref="T:System.ComponentModel.Design.Serialization.ComponentSerializationService" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializationStore.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializationStore.Close">
      <summary>Chiude l'archivio di serializzazione.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializationStore.Dispose(System.Boolean)">
      <summary>Rilascia le risorse non gestite usate da <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> e, facoltativamente, le risorse gestite.</summary>
      <param name="disposing">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite, <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.SerializationStore.Errors">
      <summary>Ottiene un insieme di errori verificatisi durante la serializzazione o deserializzazione.</summary>
      <returns>Interfaccia <see cref="T:System.Collections.ICollection" /> contenente errori verificatisi durante la serializzazione o deserializzazione.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializationStore.Save(System.IO.Stream)">
      <summary>Salva l'archivio nel flusso dato.</summary>
      <param name="stream">Flusso in cui verrà serializzato l'archivio.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializationStore.System#IDisposable#Dispose">
      <summary>Rilascia tutte le risorse usate da <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.ServiceContainer">
      <summary>Fornisce una semplice implementazione dell'interfaccia <see cref="T:System.ComponentModel.Design.IServiceContainer" />. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ServiceContainer.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.ServiceContainer" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ServiceContainer.#ctor(System.IServiceProvider)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.ServiceContainer" /> con il provider di servizi padre specificato.</summary>
      <param name="parentProvider">Provider di servizi padre.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)">
      <summary>Aggiunge il servizio specificato al contenitore dei servizi.</summary>
      <param name="serviceType">Tipo di servizio da aggiungere.</param>
      <param name="callback">Oggetto callback in grado di creare il servizio. Consente di dichiarare un servizio come disponibile ma ritarda la creazione dell'oggetto fino a quando il servizio non verrà richiesto.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> o <paramref name="callback" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Un servizio del tipo <paramref name="serviceType" /> esiste già nel contenitore.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)">
      <summary>Aggiunge il servizio specificato al contenitore dei servizi.</summary>
      <param name="serviceType">Tipo di servizio da aggiungere.</param>
      <param name="callback">Oggetto callback in grado di creare il servizio. Consente di dichiarare un servizio come disponibile ma ritarda la creazione dell'oggetto fino a quando il servizio non verrà richiesto.</param>
      <param name="promote">
        <see langword="true" /> se il servizio deve essere aggiunto a tutti i contenitori dei servizi padre. <see langword="false" /> in caso contrario.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> o <paramref name="callback" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Un servizio del tipo <paramref name="serviceType" /> esiste già nel contenitore.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.Object)">
      <summary>Aggiunge il servizio specificato al contenitore dei servizi.</summary>
      <param name="serviceType">Tipo di servizio da aggiungere.</param>
      <param name="serviceInstance">Istanza del servizio da aggiungere. L'oggetto deve implementare o ereditare dal tipo indicato dal parametro <paramref name="serviceType" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> o <paramref name="serviceInstance" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Un servizio del tipo <paramref name="serviceType" /> esiste già nel contenitore.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.Object,System.Boolean)">
      <summary>Aggiunge il servizio specificato al contenitore dei servizi.</summary>
      <param name="serviceType">Tipo di servizio da aggiungere.</param>
      <param name="serviceInstance">Istanza del tipo di servizio da aggiungere. L'oggetto deve implementare o ereditare dal tipo indicato dal parametro <paramref name="serviceType" />.</param>
      <param name="promote">
        <see langword="true" /> se il servizio deve essere aggiunto a tutti i contenitori dei servizi padre. <see langword="false" /> in caso contrario.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> o <paramref name="serviceInstance" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Un servizio del tipo <paramref name="serviceType" /> esiste già nel contenitore.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.ServiceContainer.DefaultServices">
      <summary>Ottiene i servizi predefiniti implementati direttamente da <see cref="T:System.ComponentModel.Design.ServiceContainer" />.</summary>
      <returns>Servizi predefiniti.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ServiceContainer.Dispose">
      <summary>Elimina il contenitore di servizi corrente.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ServiceContainer.Dispose(System.Boolean)">
      <summary>Elimina il contenitore di servizi corrente.</summary>
      <param name="disposing">
        <see langword="true" /> se <see cref="T:System.ComponentModel.Design.ServiceContainer" /> sta per essere eliminato; in caso contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ServiceContainer.GetService(System.Type)">
      <summary>Ottiene il servizio richiesto.</summary>
      <param name="serviceType">Tipo di servizio da recuperare.</param>
      <returns>Istanza del servizio se individuato oppure <see langword="null" /> se non è possibile trovarlo.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ServiceContainer.RemoveService(System.Type)">
      <summary>Rimuove il tipo di servizio specificato dal contenitore dei servizi.</summary>
      <param name="serviceType">Tipo di servizio da rimuovere.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ServiceContainer.RemoveService(System.Type,System.Boolean)">
      <summary>Rimuove il tipo di servizio specificato dal contenitore dei servizi.</summary>
      <param name="serviceType">Tipo di servizio da rimuovere.</param>
      <param name="promote">
        <see langword="true" /> se il servizio deve essere rimosso da tutti i contenitori dei servizi padre. <see langword="false" /> in caso contrario.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> è <see langword="null" />.</exception>
    </member>
    <member name="T:System.ComponentModel.Design.ServiceCreatorCallback">
      <summary>Fornisce un meccanismo di callback che consente la creazione di un'istanza di un servizio su richiesta.</summary>
      <param name="container">Contenitore dei servizi che ha richiesto la creazione del servizio.</param>
      <param name="serviceType">Tipo di servizio da creare.</param>
      <returns>Il servizio specificato da <paramref name="serviceType" /> oppure <see langword="null" /> se non è stato possibile creare il servizio.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.StandardCommands">
      <summary>Definisce gli identificatori per l'insieme standard dei comandi disponibili per la maggior parte delle applicazioni.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.StandardCommands.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.StandardCommands" />.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.AlignBottom">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> per il comando AlignBottom. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.AlignHorizontalCenters">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> per il comando AlignHorizontalCenters. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.AlignLeft">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> per il comando AlignLeft. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.AlignRight">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> per il comando AlignRight. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.AlignToGrid">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> per il comando AlignToGrid. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.AlignTop">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> per il comando AlignTop. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.AlignVerticalCenters">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> per il comando AlignVerticalCenters. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.ArrangeBottom">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> per il comando ArrangeBottom. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.ArrangeIcons">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> per il comando ArrangeIcons. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.ArrangeRight">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> per il comando ArrangeRight. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.BringForward">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> per il comando BringForward. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.BringToFront">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> per il comando BringToFront. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.CenterHorizontally">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> per il comando CenterHorizontally. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.CenterVertically">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> per il comando CenterVertically. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.Copy">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> per il comando Copy. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.Cut">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> per il comando Cut. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.Delete">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> per il comando Delete. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.DocumentOutline">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> per il comando Document Outline. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.F1Help">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> per il comando F1Help. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.Group">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> per il comando Group. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.HorizSpaceConcatenate">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> per il comando HorizSpaceConcatenate. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.HorizSpaceDecrease">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> per il comando HorizSpaceDecrease. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.HorizSpaceIncrease">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> per il comando HorizSpaceIncrease. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.HorizSpaceMakeEqual">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> per il comando HorizSpaceMakeEqual. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.LineupIcons">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> per il comando LineupIcons. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.LockControls">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> per il comando LockControls. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.MultiLevelRedo">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> per il comando MultiLevelRedo. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.MultiLevelUndo">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> per il comando MultiLevelUndo. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.Paste">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> per il comando Paste. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.Properties">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> per il comando Properties. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.PropertiesWindow">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> per il comando PropertiesWindow. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.Redo">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> per il comando Redo. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.Replace">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> per il comando Replace. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.SelectAll">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> per il comando SelectAll. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.SendBackward">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> per il comando SendBackward. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.SendToBack">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> per il comando SendToBack. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.ShowGrid">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> per il comando ShowGrid. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.ShowLargeIcons">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> per il comando ShowLargeIcons. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.SizeToControl">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> per il comando SizeToControl. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.SizeToControlHeight">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> per il comando SizeToControlHeight. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.SizeToControlWidth">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> per il comando SizeToControlWidth. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.SizeToFit">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> per il comando SizeToFit. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.SizeToGrid">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> per il comando SizeToGrid. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.SnapToGrid">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> per il comando SnapToGrid. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.TabOrder">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> per il comando TabOrder. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.Undo">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> per il comando Undo. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.Ungroup">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> per il comando Ungroup. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.VerbFirst">
      <summary>Ottiene il primo di un insieme di verbi. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.VerbLast">
      <summary>Ottiene l'ultimo di un insieme di verbi. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.VertSpaceConcatenate">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> per il comando VertSpaceConcatenate. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.VertSpaceDecrease">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> per il comando VertSpaceDecrease. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.VertSpaceIncrease">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> per il comando VertSpaceIncrease. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.VertSpaceMakeEqual">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> per il comando VertSpaceMakeEqual. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.ViewCode">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> per il comando ViewCode. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.ViewGrid">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> per il comando ViewGrid. Questo campo è di sola lettura.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.StandardToolWindows">
      <summary>Definisce gli identificatori GUID che corrispondono all'insieme standard di finestre degli strumenti disponibili nell'ambiente di progettazione.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.StandardToolWindows.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.StandardToolWindows" />.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardToolWindows.ObjectBrowser">
      <summary>Ottiene il GUID del visualizzatore oggetti. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardToolWindows.OutputWindow">
      <summary>Ottiene il GUID della finestra di output. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardToolWindows.ProjectExplorer">
      <summary>Ottiene il GUID di Esplora soluzioni. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardToolWindows.PropertyBrowser">
      <summary>Ottiene il GUID della finestra Proprietà. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardToolWindows.RelatedLinks">
      <summary>Ottiene il GUID del frame dei collegamenti correlati. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardToolWindows.ServerExplorer">
      <summary>Ottiene il GUID di Esplora server. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardToolWindows.TaskList">
      <summary>Ottiene il GUID dell'Elenco attività. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardToolWindows.Toolbox">
      <summary>Ottiene il GUID per la Casella degli strumenti. Questo campo è di sola lettura.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.TypeDescriptionProviderService">
      <summary>Fornisce un provider di descrizioni dei tipi per un tipo specificato.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.TypeDescriptionProviderService.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.TypeDescriptionProviderService" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.TypeDescriptionProviderService.GetProvider(System.Object)">
      <summary>Ottiene un provider di descrizioni dei tipi per l'oggetto specificato.</summary>
      <param name="instance">Oggetto per cui ottenere un provider di descrizioni dei tipi.</param>
      <returns>Oggetto <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> che corrisponde a <paramref name="instance" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.TypeDescriptionProviderService.GetProvider(System.Type)">
      <summary>Ottiene un provider di descrizioni dei tipi per il tipo specificato.</summary>
      <param name="type">Tipo per cui ottenere un provider di descrizioni dei tipi.</param>
      <returns>Oggetto <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> che corrisponde a <paramref name="type" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ViewTechnology">
      <summary>Definisce gli identificatori per un insieme di tecnologie supportate dagli host di progettazione.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ViewTechnology.Default">
      <summary>Specifica il supporto di tecnologia di visualizzazione predefinito.
La finestra di progettazione radice può restituire qualsiasi tipo di oggetto, ma l'oggetto deve essere compatibile con un adapter per la tecnologia dell'host. Gli ambienti di hosting, ad esempio Visual Studio, consentono di inserire nuovi adapter di tecnologia di visualizzazione. L'oggetto di visualizzazione predefinito per la finestra di progettazione Windows Form è un'istanza <see cref="T:System.Windows.Forms.Control" />.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ViewTechnology.Passthrough">
      <summary>Rappresenta una modalità in cui l'oggetto visualizzazione viene passato direttamente all'ambiente di sviluppo.
L'oggetto visualizzazione deve implementare le interfacce richieste dall'ambiente di sviluppo. L'ambiente di sviluppo di Visual Studio supporta gli oggetti di visualizzazione che sono un controllo ActiveX, un documento attivo o un oggetto che implementa l'interfaccia IVsWindowPane disponibile attraverso il programma Integrazione con Visual Studio. L'ambiente di sviluppo di Visual Studio offre il supporto per questa tecnologia di visualizzazione, che non è necessariamente disponibile in tutti gli ambienti di sviluppo.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ViewTechnology.WindowsForms">
      <summary>Rappresenta una modalità in cui un oggetto controllo Windows Form fornisce la visualizzazione per la finestra di progettazione di primo livello. L'host di progettazione completa la finestra del documento dell'ambiente di sviluppo con il controllo Windows Form.</summary>
    </member>
    <member name="T:System.ComponentModel.DesignerAttribute">
      <summary>Specifica la classe usata per implementare i servizi in fase di progettazione per un componente.</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerAttribute.#ctor(System.String)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ComponentModel.DesignerAttribute" /> utilizzando il nome del tipo che fornisce i servizi in fase di progettazione.</summary>
      <param name="designerTypeName">Concatenazione del nome completo del tipo che fornisce i servizi della fase di progettazione per il componente a cui è associato questo attributo e del nome dell'assembly in cui il tipo è contenuto.</param>
    </member>
    <member name="M:System.ComponentModel.DesignerAttribute.#ctor(System.String,System.String)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ComponentModel.DesignerAttribute" /> utilizzando il tipo e la classe base della finestra di progettazione.</summary>
      <param name="designerTypeName">Concatenazione del nome completo del tipo che fornisce i servizi della fase di progettazione per il componente a cui è associato questo attributo e del nome dell'assembly in cui il tipo è contenuto.</param>
      <param name="designerBaseTypeName">Nome completo della classe base da associare alla classe della finestra di progettazione.</param>
    </member>
    <member name="M:System.ComponentModel.DesignerAttribute.#ctor(System.String,System.Type)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ComponentModel.DesignerAttribute" /> utilizzando il nome della classe e la classe base della finestra di progettazione.</summary>
      <param name="designerTypeName">Concatenazione del nome completo del tipo che fornisce i servizi della fase di progettazione per il componente a cui è associato questo attributo e del nome dell'assembly in cui il tipo è contenuto.</param>
      <param name="designerBaseType">
        <see cref="T:System.Type" /> che rappresenta la classe base da associare al <paramref name="designerTypeName" />.</param>
    </member>
    <member name="M:System.ComponentModel.DesignerAttribute.#ctor(System.Type)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ComponentModel.DesignerAttribute" /> utilizzando il tipo che fornisce i servizi in fase di progettazione.</summary>
      <param name="designerType">Oggetto <see cref="T:System.Type" /> che rappresenta la classe che fornisce i servizi della fase di progettazione per il componente a cui è associato questo attributo.</param>
    </member>
    <member name="M:System.ComponentModel.DesignerAttribute.#ctor(System.Type,System.Type)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ComponentModel.DesignerAttribute" /> utilizzando i tipi e la classe base della finestra di progettazione.</summary>
      <param name="designerType">Oggetto <see cref="T:System.Type" /> che rappresenta la classe che fornisce i servizi della fase di progettazione per il componente a cui è associato questo attributo.</param>
      <param name="designerBaseType">
        <see cref="T:System.Type" /> che rappresenta la classe base da associare al <paramref name="designerType" />.</param>
    </member>
    <member name="P:System.ComponentModel.DesignerAttribute.DesignerBaseTypeName">
      <summary>Ottiene il nome del tipo di base per questa finestra di progettazione.</summary>
      <returns>Nome del tipo di base per questa finestra di progettazione.</returns>
    </member>
    <member name="P:System.ComponentModel.DesignerAttribute.DesignerTypeName">
      <summary>Ottiene il nome del tipo di finestra di progettazione associato a questo attributo della finestra di progettazione.</summary>
      <returns>Nome del tipo di finestra di progettazione associato a questo attributo della finestra di progettazione.</returns>
    </member>
    <member name="M:System.ComponentModel.DesignerAttribute.Equals(System.Object)">
      <summary>Specifica se il valore dell'oggetto specificato è uguale all'oggetto <see cref="T:System.ComponentModel.DesignerAttribute" /> corrente.</summary>
      <param name="obj">Oggetto di cui va verificata l'uguaglianza di valore.</param>
      <returns>
        <see langword="true" /> se il valore dell'oggetto specificato è uguale a quello dell'oggetto corrente. <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="M:System.ComponentModel.DesignerAttribute.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Codice hash di un intero con segno a 32 bit.</returns>
    </member>
    <member name="P:System.ComponentModel.DesignerAttribute.TypeId">
      <summary>Ottiene un ID univoco per questo tipo di attributo.</summary>
      <returns>ID univoco per questo tipo di attributo.</returns>
    </member>
    <member name="T:System.ComponentModel.DesignTimeVisibleAttribute">
      <summary>
        <see cref="T:System.ComponentModel.DesignTimeVisibleAttribute" /> contrassegna la visibilità di un componente. Se è presente il campo <see cref="F:System.ComponentModel.DesignTimeVisibleAttribute.Yes" />, una finestra di progettazione visiva consentirà di mostrare il componente in una finestra di progettazione.</summary>
    </member>
    <member name="M:System.ComponentModel.DesignTimeVisibleAttribute.#ctor">
      <summary>Crea un nuovo oggetto <see cref="T:System.ComponentModel.DesignTimeVisibleAttribute" /> impostato sul valore predefinito <see langword="false" />.</summary>
    </member>
    <member name="M:System.ComponentModel.DesignTimeVisibleAttribute.#ctor(System.Boolean)">
      <summary>Crea un nuovo oggetto <see cref="T:System.ComponentModel.DesignTimeVisibleAttribute" /> con la proprietà<see cref="P:System.ComponentModel.DesignTimeVisibleAttribute.Visible" /> impostata sul valore specificato in <paramref name="visible" />.</summary>
      <param name="visible">Valore a fronte del quale sarà impostata la proprietà <see cref="P:System.ComponentModel.DesignTimeVisibleAttribute.Visible" />.</param>
    </member>
    <member name="F:System.ComponentModel.DesignTimeVisibleAttribute.Default">
      <summary>Visibilità predefinita uguale a <see langword="Yes" />.</summary>
    </member>
    <member name="M:System.ComponentModel.DesignTimeVisibleAttribute.Equals(System.Object)">
      <summary>Restituisce un valore che indica se questa istanza è uguale a un oggetto specificato.</summary>
      <param name="obj">Oggetto da confrontare con questa istanza o un riferimento null (<see langword="Nothing" /> in Visual Basic).</param>
      <returns>
        <see langword="true" /> se <paramref name="obj" /> è uguale al tipo e al valore di questa istanza; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DesignTimeVisibleAttribute.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Codice hash di un intero con segno a 32 bit.</returns>
    </member>
    <member name="M:System.ComponentModel.DesignTimeVisibleAttribute.IsDefaultAttribute">
      <summary>Ottiene un valore che indica se l'istanza è uguale al valore <see cref="F:System.ComponentModel.DesignTimeVisibleAttribute.Default" />.</summary>
      <returns>
        <see langword="true" /> se l'istanza è uguale al valore <see cref="F:System.ComponentModel.DesignTimeVisibleAttribute.Default" />, <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="F:System.ComponentModel.DesignTimeVisibleAttribute.No">
      <summary>Contrassegna un componente come non visibile in una finestra di progettazione visiva.</summary>
    </member>
    <member name="P:System.ComponentModel.DesignTimeVisibleAttribute.Visible">
      <summary>Ottiene o indica se il componente deve essere visualizzato in fase di progettazione.</summary>
      <returns>
        <see langword="true" /> se il componente deve essere visualizzato in fase di progettazione, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="F:System.ComponentModel.DesignTimeVisibleAttribute.Yes">
      <summary>Contrassegna un componente come visibile in una finestra di progettazione visiva.</summary>
    </member>
    <member name="T:System.ComponentModel.DoubleConverter">
      <summary>Fornisce un convertitore di tipi per convertire oggetti numero a virgola mobile e precisione doppia in e da diverse altre rappresentazioni.</summary>
    </member>
    <member name="M:System.ComponentModel.DoubleConverter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.DoubleConverter" />.</summary>
    </member>
    <member name="T:System.ComponentModel.EditorAttribute">
      <summary>Specifica l'editor da usare per modificare una proprietà. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.ComponentModel.EditorAttribute.#ctor">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ComponentModel.EditorAttribute" /> con l'editor predefinito, ovvero nessun editor.</summary>
    </member>
    <member name="M:System.ComponentModel.EditorAttribute.#ctor(System.String,System.String)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ComponentModel.EditorAttribute" /> con il nome del tipo e il nome del tipo base dell'editor.</summary>
      <param name="typeName">Nome completo del tipo dell'editor.</param>
      <param name="baseTypeName">Nome completo del tipo della classe base o dell'interfaccia da utilizzare come chiave di ricerca dell'editor. Questa classe deve derivare da o corrispondere a <see cref="T:System.Drawing.Design.UITypeEditor" />.</param>
    </member>
    <member name="M:System.ComponentModel.EditorAttribute.#ctor(System.String,System.Type)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ComponentModel.EditorAttribute" /> con il nome del tipo e il tipo base.</summary>
      <param name="typeName">Nome completo del tipo dell'editor.</param>
      <param name="baseType">
        <see cref="T:System.Type" /> della classe base o dell'interfaccia da utilizzare come chiave di ricerca dell'editor. Questa classe deve derivare da o corrispondere a <see cref="T:System.Drawing.Design.UITypeEditor" />.</param>
    </member>
    <member name="M:System.ComponentModel.EditorAttribute.#ctor(System.Type,System.Type)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ComponentModel.EditorAttribute" />con il tipo e il tipo base.</summary>
      <param name="type">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo dell'editor.</param>
      <param name="baseType">
        <see cref="T:System.Type" /> della classe base o dell'interfaccia da utilizzare come chiave di ricerca dell'editor. Questa classe deve derivare da o corrispondere a <see cref="T:System.Drawing.Design.UITypeEditor" />.</param>
    </member>
    <member name="P:System.ComponentModel.EditorAttribute.EditorBaseTypeName">
      <summary>Ottiene il nome della classe base o dell'interfaccia utilizzata come chiave di ricerca di questo editor.</summary>
      <returns>Il nome della classe base o dell'interfaccia utilizzata come chiave di ricerca di questo editor.</returns>
    </member>
    <member name="P:System.ComponentModel.EditorAttribute.EditorTypeName">
      <summary>Ottiene il nome della classe dell'editor nel formato <see cref="P:System.Type.AssemblyQualifiedName" />.</summary>
      <returns>Nome della classe dell'editor nel formato <see cref="P:System.Type.AssemblyQualifiedName" />.</returns>
    </member>
    <member name="M:System.ComponentModel.EditorAttribute.Equals(System.Object)">
      <summary>Specifica se il valore dell'oggetto specificato è uguale all'oggetto <see cref="T:System.ComponentModel.EditorAttribute" /> corrente.</summary>
      <param name="obj">Oggetto di cui va verificata l'uguaglianza di valore.</param>
      <returns>
        <see langword="true" /> se il valore dell'oggetto specificato è uguale a quello dell'oggetto corrente, <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="M:System.ComponentModel.EditorAttribute.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Codice hash di un intero con segno a 32 bit.</returns>
    </member>
    <member name="P:System.ComponentModel.EditorAttribute.TypeId">
      <summary>Ottiene un ID univoco per questo tipo di attributo.</summary>
      <returns>ID univoco per questo tipo di attributo.</returns>
    </member>
    <member name="T:System.ComponentModel.EnumConverter">
      <summary>Fornisce un convertitore di tipi per convertire oggetti <see cref="T:System.Enum" /> in e da diverse altre rappresentazioni.</summary>
    </member>
    <member name="M:System.ComponentModel.EnumConverter.#ctor(System.Type)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.EnumConverter" /> per il tipo specificato.</summary>
      <param name="type">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo di enumerazione da associare a questo convertitore di enumerazioni.</param>
    </member>
    <member name="M:System.ComponentModel.EnumConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ottiene un valore che indica se il convertitore può convertire un oggetto dal tipo di origine specificato in un oggetto enumerazione utilizzando il contesto specificato.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="sourceType">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo dal quale si desidera effettuare la conversione.</param>
      <returns>
        <see langword="true" /> se il convertitore può eseguire la conversione. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.EnumConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ottiene un valore che indica se questo convertitore può convertire un oggetto nel tipo di destinazione specificato usando il contesto.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="destinationType">Tipo <see cref="T:System.Type" /> che rappresenta il tipo di destinazione della conversione.</param>
      <returns>
        <see langword="true" /> se il convertitore può eseguire la conversione. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.EnumConverter.Comparer">
      <summary>Ottiene un'interfaccia <see cref="T:System.Collections.IComparer" /> che può essere utilizzata per ordinare i valori dell'enumerazione.</summary>
      <returns>Oggetto <see cref="T:System.Collections.IComparer" /> per l'ordinamento dei valori dell'enumerazione.</returns>
    </member>
    <member name="M:System.ComponentModel.EnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converte l'oggetto valore specificato in un oggetto enumerazione.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> facoltativo. Se non vengono specificate impostazioni cultura, vengono utilizzate quelle correnti.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire.</param>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta la conversione di <paramref name="value" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> non è un valore valido per il tipo di destinazione.</exception>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione.</exception>
    </member>
    <member name="M:System.ComponentModel.EnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converte l'oggetto valore specificato nel tipo di destinazione specificato.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> facoltativo. Se non vengono specificate impostazioni cultura, vengono utilizzate quelle correnti.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire.</param>
      <param name="destinationType">Tipo <see cref="T:System.Type" /> in cui convertire il valore.</param>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta la conversione di <paramref name="value" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> non è un valore valido per l'enumerazione.</exception>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione.</exception>
    </member>
    <member name="P:System.ComponentModel.EnumConverter.EnumType">
      <summary>Specifica il tipo di enumeratore a cui è associato il convertitore.</summary>
      <returns>Tipo di enumeratore a cui è associato il convertitore.</returns>
    </member>
    <member name="M:System.ComponentModel.EnumConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Ottiene un insieme di valori standard per il tipo di dati per cui è progettato questo validator.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <returns>Insieme <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> con un set standard di valori validi oppure <see langword="null" /> se il tipo di dati non supporta un set standard di valori.</returns>
    </member>
    <member name="M:System.ComponentModel.EnumConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Ottiene un valore che indica se l'elenco di valori standard restituito dal metodo <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> è un elenco esclusivo utilizzando il contesto specificato.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <returns>
        <see langword="true" /> se l'insieme <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> restituito dal metodo <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> rappresenta un elenco completo dei valori possibili. <see langword="false" /> se sono possibili altri valori.</returns>
    </member>
    <member name="M:System.ComponentModel.EnumConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Ottiene un valore che indica se il convertitore supporta un insieme di valori standard che possono essere selezionati da un elenco utilizzando il contesto specificato.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <returns>
        <see langword="true" /> perché è necessario chiamare il metodo <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> per trovare un insieme comune di valori supportati dall'oggetto. Questo metodo non restituisce mai <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.EnumConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
      <summary>Ottiene un valore che indica se il valore dell'oggetto specificato è valido per questo tipo.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da verificare.</param>
      <returns>
        <see langword="true" /> se il valore specificato è valido per questo oggetto. <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="P:System.ComponentModel.EnumConverter.Values">
      <summary>Ottiene o imposta un oggetto <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> che specifica i valori possibili per l'enumerazione.</summary>
      <returns>Oggetto <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> che specifica i valori possibili per l'enumerazione.</returns>
    </member>
    <member name="T:System.ComponentModel.EventDescriptor">
      <summary>Include informazioni su un evento.</summary>
    </member>
    <member name="M:System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.EventDescriptor" /> con il nome e gli attributi nell'oggetto <see cref="T:System.ComponentModel.MemberDescriptor" /> specificato.</summary>
      <param name="descr">Un oggetto <see cref="T:System.ComponentModel.MemberDescriptor" /> che contiene il nome dell'evento e i relativi attributi.</param>
    </member>
    <member name="M:System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.EventDescriptor" /> con il nome nell'oggetto <see cref="T:System.ComponentModel.MemberDescriptor" /> specificato e gli attributi nell'oggetto <see cref="T:System.ComponentModel.MemberDescriptor" /> e nella matrice <see cref="T:System.Attribute" />.</summary>
      <param name="descr">Oggetto <see cref="T:System.ComponentModel.MemberDescriptor" /> che ha il nome del membro e i relativi attributi.</param>
      <param name="attrs">Matrice <see cref="T:System.Attribute" /> con gli attributi che si desidera aggiungere alla descrizione dell'evento.</param>
    </member>
    <member name="M:System.ComponentModel.EventDescriptor.#ctor(System.String,System.Attribute[])">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ComponentModel.EventDescriptor" /> con il nome specificato e la matrice degli attributi.</summary>
      <param name="name">Nome dell'evento.</param>
      <param name="attrs">Matrice di tipo <see cref="T:System.Attribute" /> contenente gli attributi dell'evento.</param>
    </member>
    <member name="M:System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)">
      <summary>Quando è sottoposto a override in una classe derivata, consente di associare l'evento al componente.</summary>
      <param name="component">Componente che fornisce eventi al delegato.</param>
      <param name="value">Delegato che rappresenta il metodo con cui viene gestito l'evento.</param>
    </member>
    <member name="P:System.ComponentModel.EventDescriptor.ComponentType">
      <summary>Quando è sottoposto a override in una classe derivata, consente di ottenere il tipo di componente a cui l'evento è associato.</summary>
      <returns>Un oggetto <see cref="T:System.Type" /> che rappresenta il tipo di componente a cui l'evento è associato.</returns>
    </member>
    <member name="P:System.ComponentModel.EventDescriptor.EventType">
      <summary>Quando è sottoposto a override in una classe derivata, consente di ottenere il tipo di delegato dell'evento.</summary>
      <returns>Oggetto <see cref="T:System.Type" /> che rappresenta il tipo di delegato dell'evento.</returns>
    </member>
    <member name="P:System.ComponentModel.EventDescriptor.IsMulticast">
      <summary>Quando è sottoposto a override in una classe derivata, consente di ottenere un valore che indica se il delegato dell'evento è di tipo multicast.</summary>
      <returns>
        <see langword="true" /> se il delegato dell'evento è multicast; in caso contrario,<see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)">
      <summary>Quando è sottoposto a override in una classe derivata, consente di separare il delegato dal componente in modo che il delegato non riceva più eventi dal componente.</summary>
      <param name="component">Il componente al quale è associato il delegato.</param>
      <param name="value">Il delegato da separare dal componente.</param>
    </member>
    <member name="T:System.ComponentModel.EventDescriptorCollection">
      <summary>Rappresenta una raccolta di oggetti <see cref="T:System.ComponentModel.EventDescriptor" />.</summary>
    </member>
    <member name="M:System.ComponentModel.EventDescriptorCollection.#ctor(System.ComponentModel.EventDescriptor[])">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.EventDescriptorCollection" /> con la matrice di oggetti <see cref="T:System.ComponentModel.EventDescriptor" /> specificata.</summary>
      <param name="events">Matrice di tipo <see cref="T:System.ComponentModel.EventDescriptor" /> che fornisce gli eventi per questo insieme.</param>
    </member>
    <member name="M:System.ComponentModel.EventDescriptorCollection.#ctor(System.ComponentModel.EventDescriptor[],System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.EventDescriptorCollection" /> con la matrice di oggetti <see cref="T:System.ComponentModel.EventDescriptor" /> specificata. L'insieme è facoltativamente di sola lettura.</summary>
      <param name="events">Matrice di tipo <see cref="T:System.ComponentModel.EventDescriptor" /> che fornisce gli eventi per questo insieme.</param>
      <param name="readOnly">
        <see langword="true" /> per specificare un insieme di sola lettura; in caso contrario <see langword="false" />.</param>
    </member>
    <member name="M:System.ComponentModel.EventDescriptorCollection.Add(System.ComponentModel.EventDescriptor)">
      <summary>Consente di aggiungere un oggetto <see cref="T:System.ComponentModel.EventDescriptor" /> alla fine dell'insieme.</summary>
      <param name="value">Oggetto <see cref="T:System.ComponentModel.EventDescriptor" /> da aggiungere all'insieme.</param>
      <returns>Posizione dell'oggetto <see cref="T:System.ComponentModel.EventDescriptor" /> all'interno dell'insieme.</returns>
      <exception cref="T:System.NotSupportedException">Raccolta in sola lettura.</exception>
    </member>
    <member name="M:System.ComponentModel.EventDescriptorCollection.Clear">
      <summary>Rimuove tutti gli oggetti dalla raccolta.</summary>
      <exception cref="T:System.NotSupportedException">Raccolta in sola lettura.</exception>
    </member>
    <member name="M:System.ComponentModel.EventDescriptorCollection.Contains(System.ComponentModel.EventDescriptor)">
      <summary>Indica se l'insieme contiene il dato oggetto <see cref="T:System.ComponentModel.EventDescriptor" />.</summary>
      <param name="value">Oggetto <see cref="T:System.ComponentModel.EventDescriptor" /> da trovare all'interno dell'insieme.</param>
      <returns>
        <see langword="true" /> se l'insieme contiene il parametro <paramref name="value" /> specificato, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.EventDescriptorCollection.Count">
      <summary>Ottiene il numero di descrittori di evento dell'insieme.</summary>
      <returns>Numero di descrittori di evento dell'insieme.</returns>
    </member>
    <member name="F:System.ComponentModel.EventDescriptorCollection.Empty">
      <summary>Consente di specificare un insieme vuoto da utilizzare, invece di crearne uno nuovo senza elementi. Questo campo <see langword="static" /> è di sola lettura.</summary>
    </member>
    <member name="M:System.ComponentModel.EventDescriptorCollection.Find(System.String,System.Boolean)">
      <summary>Ottiene la descrizione dell'evento con il nome specificato nell'insieme.</summary>
      <param name="name">Nome dell'evento da ottenere dall'insieme.</param>
      <param name="ignoreCase">
        <see langword="true" /> se si desidera ignorare la distinzione fra maiuscole e minuscole dell'evento, in caso contrario <see langword="false" />.</param>
      <returns>L'oggetto <see cref="T:System.ComponentModel.EventDescriptor" /> con il nome specificato oppure <see langword="null" /> se l'evento non esiste.</returns>
    </member>
    <member name="M:System.ComponentModel.EventDescriptorCollection.GetEnumerator">
      <summary>Ottiene un enumeratore per questo oggetto <see cref="T:System.ComponentModel.EventDescriptorCollection" />.</summary>
      <returns>Enumeratore che implementa <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="M:System.ComponentModel.EventDescriptorCollection.IndexOf(System.ComponentModel.EventDescriptor)">
      <summary>Restituisce l'indice dell'oggetto <see cref="T:System.ComponentModel.EventDescriptor" /> specificato.</summary>
      <param name="value">Oggetto <see cref="T:System.ComponentModel.EventDescriptor" /> da trovare all'interno dell'insieme.</param>
      <returns>Indice dell'oggetto <see cref="T:System.ComponentModel.EventDescriptor" /> specificato all'interno dell'insieme.</returns>
    </member>
    <member name="M:System.ComponentModel.EventDescriptorCollection.Insert(System.Int32,System.ComponentModel.EventDescriptor)">
      <summary>Consente di inserire un oggetto <see cref="T:System.ComponentModel.EventDescriptor" /> nell'insieme in corrispondenza di un indice specificato.</summary>
      <param name="index">Indice all'interno dell'insieme in corrispondenza del quale inserire il parametro <paramref name="value" />.</param>
      <param name="value">Oggetto <see cref="T:System.ComponentModel.EventDescriptor" /> da inserire nell'insieme.</param>
      <exception cref="T:System.NotSupportedException">Raccolta in sola lettura.</exception>
    </member>
    <member name="M:System.ComponentModel.EventDescriptorCollection.InternalSort(System.Collections.IComparer)">
      <summary>Consente di ordinare i membri di <see cref="T:System.ComponentModel.EventDescriptorCollection" /> utilizzando l'oggetto <see cref="T:System.Collections.IComparer" /> specificato.</summary>
      <param name="sorter">Operatore di confronto da utilizzare per ordinare gli oggetti <see cref="T:System.ComponentModel.EventDescriptor" /> in questo insieme.</param>
    </member>
    <member name="M:System.ComponentModel.EventDescriptorCollection.InternalSort(System.String[])">
      <summary>Consente di ordinare i membri di <see cref="T:System.ComponentModel.EventDescriptorCollection" />. Viene applicato per primo l'ordinamento specificato, seguito dall'ordinamento predefinito di questo insieme, generalmente in ordine alfabetico.</summary>
      <param name="names">Matrice di stringhe che descrive la sequenza in cui ordinare gli oggetti <see cref="T:System.ComponentModel.EventDescriptor" /> nell'insieme.</param>
    </member>
    <member name="P:System.ComponentModel.EventDescriptorCollection.Item(System.Int32)">
      <summary>Ottiene o imposta l'evento con il numero di indice specificato.</summary>
      <param name="index">Numero dell'indice in base zero dell'oggetto <see cref="T:System.ComponentModel.EventDescriptor" /> da ottenere o impostare.</param>
      <returns>Oggetto <see cref="T:System.ComponentModel.EventDescriptor" /> con il numero di indice specificato.</returns>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="index" /> non è un indice valido per <see cref="P:System.ComponentModel.EventDescriptorCollection.Item(System.Int32)" />.</exception>
    </member>
    <member name="P:System.ComponentModel.EventDescriptorCollection.Item(System.String)">
      <summary>Ottiene o imposta l'evento con il nome specificato.</summary>
      <param name="name">Nome dell'oggetto <see cref="T:System.ComponentModel.EventDescriptor" /> da ottenere o impostare.</param>
      <returns>L'oggetto <see cref="T:System.ComponentModel.EventDescriptor" /> con il nome specificato oppure <see langword="null" /> se l'evento non esiste.</returns>
    </member>
    <member name="M:System.ComponentModel.EventDescriptorCollection.Remove(System.ComponentModel.EventDescriptor)">
      <summary>Rimuove l'oggetto <see cref="T:System.ComponentModel.EventDescriptor" /> specificato dalla raccolta.</summary>
      <param name="value">Oggetto <see cref="T:System.ComponentModel.EventDescriptor" /> da rimuovere dalla raccolta.</param>
      <exception cref="T:System.NotSupportedException">Raccolta in sola lettura.</exception>
    </member>
    <member name="M:System.ComponentModel.EventDescriptorCollection.RemoveAt(System.Int32)">
      <summary>Rimuove l'oggetto <see cref="T:System.ComponentModel.EventDescriptor" /> in corrispondenza dell'indice specificato dall'insieme.</summary>
      <param name="index">Indice dell'oggetto <see cref="T:System.ComponentModel.EventDescriptor" /> da rimuovere.</param>
      <exception cref="T:System.NotSupportedException">Raccolta in sola lettura.</exception>
    </member>
    <member name="M:System.ComponentModel.EventDescriptorCollection.Sort">
      <summary>Consente di ordinare i membri di <see cref="T:System.ComponentModel.EventDescriptorCollection" /> utilizzando la sequenza predefinita di questo insieme, generalmente in ordine alfabetico.</summary>
      <returns>Nuovo oggetto <see cref="T:System.ComponentModel.EventDescriptorCollection" />.</returns>
    </member>
    <member name="M:System.ComponentModel.EventDescriptorCollection.Sort(System.Collections.IComparer)">
      <summary>Consente di ordinare i membri di <see cref="T:System.ComponentModel.EventDescriptorCollection" /> utilizzando l'oggetto <see cref="T:System.Collections.IComparer" /> specificato.</summary>
      <param name="comparer">Oggetto <see cref="T:System.Collections.IComparer" /> da utilizzare per ordinare gli oggetti <see cref="T:System.ComponentModel.EventDescriptor" /> in questo insieme.</param>
      <returns>Nuovo oggetto <see cref="T:System.ComponentModel.EventDescriptorCollection" />.</returns>
    </member>
    <member name="M:System.ComponentModel.EventDescriptorCollection.Sort(System.String[])">
      <summary>Consente di ordinare i membri di <see cref="T:System.ComponentModel.EventDescriptorCollection" />, in base a una sequenza di ordinamento specificata.</summary>
      <param name="names">Matrice di stringhe che descrive la sequenza in cui ordinare gli oggetti <see cref="T:System.ComponentModel.EventDescriptor" /> nell'insieme.</param>
      <returns>Nuovo oggetto <see cref="T:System.ComponentModel.EventDescriptorCollection" />.</returns>
    </member>
    <member name="M:System.ComponentModel.EventDescriptorCollection.Sort(System.String[],System.Collections.IComparer)">
      <summary>Consente di ordinare i membri di <see cref="T:System.ComponentModel.EventDescriptorCollection" />, in base a una sequenza di ordinamento specificata e a un oggetto <see cref="T:System.Collections.IComparer" />.</summary>
      <param name="names">Matrice di stringhe che descrive la sequenza in cui ordinare gli oggetti <see cref="T:System.ComponentModel.EventDescriptor" /> nell'insieme.</param>
      <param name="comparer">Oggetto <see cref="T:System.Collections.IComparer" /> da utilizzare per ordinare gli oggetti <see cref="T:System.ComponentModel.EventDescriptor" /> in questo insieme.</param>
      <returns>Nuovo oggetto <see cref="T:System.ComponentModel.EventDescriptorCollection" />.</returns>
    </member>
    <member name="M:System.ComponentModel.EventDescriptorCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copia gli elementi dell'insieme in un oggetto <see cref="T:System.Array" />, a partire da uno specifico indice di <see cref="T:System.Array" />.</summary>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'insieme. L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="index">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
    </member>
    <member name="P:System.ComponentModel.EventDescriptorCollection.System#Collections#ICollection#Count">
      <summary>Ottiene il numero di elementi contenuti nella raccolta.</summary>
      <returns>Numero di elementi contenuti nella raccolta.</returns>
    </member>
    <member name="P:System.ComponentModel.EventDescriptorCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Ottiene un valore che indica se l'accesso all'insieme è sincronizzato.</summary>
      <returns>
        <see langword="true" /> se l'accesso all'insieme è sincronizzato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.EventDescriptorCollection.System#Collections#ICollection#SyncRoot">
      <summary>Ottiene un oggetto che può essere usato per sincronizzare l'accesso alla raccolta.</summary>
      <returns>Oggetto che può essere usato per sincronizzare l'accesso alla raccolta.</returns>
    </member>
    <member name="M:System.ComponentModel.EventDescriptorCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Restituisce un enumeratore che consente di eseguire l'iterazione di una raccolta.</summary>
      <returns>Oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere usato per eseguire l'iterazione della raccolta.</returns>
    </member>
    <member name="M:System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Add(System.Object)">
      <summary>Aggiunge un elemento alla raccolta.</summary>
      <param name="value">Oggetto <see cref="T:System.Object" /> da aggiungere alla raccolta.</param>
      <returns>Posizione in cui è stato inserito il nuovo elemento.</returns>
      <exception cref="T:System.NotSupportedException">Raccolta in sola lettura.</exception>
    </member>
    <member name="M:System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Clear">
      <summary>Rimuove tutti gli elementi dalla raccolta.</summary>
      <exception cref="T:System.NotSupportedException">Raccolta in sola lettura.</exception>
    </member>
    <member name="M:System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Contains(System.Object)">
      <summary>Determina se la raccolta contiene un valore specifico.</summary>
      <param name="value">Oggetto <see cref="T:System.Object" /> da individuare nella raccolta.</param>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.Object" /> viene trovato nell'insieme; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.EventDescriptorCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>Determina l'indice di un elemento specifico dell'insieme.</summary>
      <param name="value">Oggetto <see cref="T:System.Object" /> da individuare nella raccolta.</param>
      <returns>Indice di <paramref name="value" />, se presente nell'elenco; in caso contrario, -1.</returns>
    </member>
    <member name="M:System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Inserisce un elemento nell'insieme in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero nel quale <paramref name="value" /> deve essere inserito.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da inserire nella raccolta.</param>
      <exception cref="T:System.NotSupportedException">Raccolta in sola lettura.</exception>
    </member>
    <member name="P:System.ComponentModel.EventDescriptorCollection.System#Collections#IList#IsFixedSize">
      <summary>Ottiene un valore che indica se la dimensione della raccolta è fissa.</summary>
      <returns>
        <see langword="true" /> se la raccolta è di dimensioni fisse; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.EventDescriptorCollection.System#Collections#IList#IsReadOnly">
      <summary>Ottiene un valore che indica se la raccolta è di sola lettura.</summary>
      <returns>
        <see langword="true" /> se la raccolta è di sola lettura; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Item(System.Int32)">
      <summary>Ottiene o imposta l'elemento in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero dell'elemento da ottenere o impostare.</param>
      <returns>Elemento in corrispondenza dell'indice specificato.</returns>
      <exception cref="T:System.NotSupportedException">Raccolta in sola lettura.</exception>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="index" /> è minore di 0.  
-oppure- 
 <paramref name="index" /> è uguale a o maggiore di <see cref="P:System.ComponentModel.EventDescriptorCollection.Count" />.</exception>
    </member>
    <member name="M:System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Remove(System.Object)">
      <summary>Rimuove la prima occorrenza di un oggetto specifico dalla raccolta.</summary>
      <param name="value">Oggetto <see cref="T:System.Object" /> da rimuovere dalla raccolta.</param>
      <exception cref="T:System.NotSupportedException">Raccolta in sola lettura.</exception>
    </member>
    <member name="M:System.ComponentModel.EventDescriptorCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>Rimuove l'elemento in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero dell'elemento da rimuovere.</param>
      <exception cref="T:System.NotSupportedException">Raccolta in sola lettura.</exception>
    </member>
    <member name="T:System.ComponentModel.ExpandableObjectConverter">
      <summary>Fornisce un convertitore di tipi per convertire oggetti espandibili in e da numerose altre rappresentazioni.</summary>
    </member>
    <member name="M:System.ComponentModel.ExpandableObjectConverter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.ExpandableObjectConverter" />.</summary>
    </member>
    <member name="M:System.ComponentModel.ExpandableObjectConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>Ottiene un insieme di proprietà per il tipo di oggetto specificato dal parametro del valore.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> che specifica il tipo di oggetto di cui ottenere le proprietà.</param>
      <param name="attributes">Matrice di tipo <see cref="T:System.Attribute" /> che verrà utilizzata come filtro.</param>
      <returns>
        <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> con le proprietà esposte per il componente oppure <see langword="null" /> se non sono specificate proprietà.</returns>
    </member>
    <member name="M:System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Ottiene un valore che indica se l'oggetto supporta le proprietà utilizzando il contesto specificato.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <returns>
        <see langword="true" /> perché è necessario chiamare il metodo <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> per individuare le proprietà dell'oggetto. Questo metodo non restituisce mai <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.ExtenderProvidedPropertyAttribute">
      <summary>Specifica una proprietà offerta da un provider di estensione. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.ComponentModel.ExtenderProvidedPropertyAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.ExtenderProvidedPropertyAttribute" />.</summary>
    </member>
    <member name="M:System.ComponentModel.ExtenderProvidedPropertyAttribute.Equals(System.Object)">
      <summary>Restituisce un valore che indica se questa istanza è uguale a un oggetto specificato.</summary>
      <param name="obj">Oggetto <see cref="T:System.Object" /> da confrontare con questa istanza o un riferimento null (<see langword="Nothing" /> in Visual Basic).</param>
      <returns>
        <see langword="true" /> se <paramref name="obj" /> è uguale al tipo e al valore di questa istanza; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ExtenderProvidedPropertyAttribute.ExtenderProperty">
      <summary>Ottiene la proprietà fornita.</summary>
      <returns>Oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> che incapsula la proprietà fornita.</returns>
    </member>
    <member name="M:System.ComponentModel.ExtenderProvidedPropertyAttribute.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Codice hash di un intero con segno a 32 bit.</returns>
    </member>
    <member name="M:System.ComponentModel.ExtenderProvidedPropertyAttribute.IsDefaultAttribute">
      <summary>Indica se il valore dell'istanza è il valore predefinito della classe derivata.</summary>
      <returns>
        <see langword="true" /> se questa istanza è l'attributo predefinito per la classe. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ExtenderProvidedPropertyAttribute.Provider">
      <summary>Ottiene il provider di estensione che fornisce la proprietà.</summary>
      <returns>Oggetto <see cref="T:System.ComponentModel.IExtenderProvider" /> che fornisce la proprietà.</returns>
    </member>
    <member name="P:System.ComponentModel.ExtenderProvidedPropertyAttribute.ReceiverType">
      <summary>Ottiene il tipo di oggetto che può ricevere la proprietà.</summary>
      <returns>Tipo <see cref="T:System.Type" /> che descrive il tipo di oggetto che può ricevere la proprietà.</returns>
    </member>
    <member name="T:System.ComponentModel.GuidConverter">
      <summary>Fornisce un convertitore di tipi per convertire oggetti <see cref="T:System.Guid" /> in e da diverse altre rappresentazioni.</summary>
    </member>
    <member name="M:System.ComponentModel.GuidConverter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.GuidConverter" />.</summary>
    </member>
    <member name="M:System.ComponentModel.GuidConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ottiene un valore che indica se il convertitore può convertire un oggetto dal tipo di origine specificato in un oggetto GUID utilizzando il contesto.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="sourceType">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo dal quale si desidera effettuare la conversione.</param>
      <returns>
        <see langword="true" /> se il convertitore può eseguire la conversione. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.GuidConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ottiene un valore che indica se questo convertitore può convertire un oggetto nel tipo di destinazione specificato usando il contesto.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="destinationType">Tipo <see cref="T:System.Type" /> che rappresenta il tipo di destinazione della conversione.</param>
      <returns>
        <see langword="true" /> se il convertitore può eseguire la conversione. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.GuidConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converte l'oggetto specificato in un oggetto GUID.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> facoltativo. Se non vengono specificate impostazioni cultura, vengono utilizzate quelle correnti.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire.</param>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta la conversione di <paramref name="value" />.</returns>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione.</exception>
    </member>
    <member name="M:System.ComponentModel.GuidConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converte l'oggetto specificato in un altro tipo.</summary>
      <param name="context">Contesto di un formattatore.</param>
      <param name="culture">Le impostazioni cultura in cui <paramref name="value" /> verrà convertito.</param>
      <param name="value">Oggetto da convertire.</param>
      <param name="destinationType">Tipo in cui convertire l'oggetto.</param>
      <returns>Oggetto convertito.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione.</exception>
    </member>
    <member name="T:System.ComponentModel.HandledEventArgs">
      <summary>Fornisce i dati per gli eventi che possono essere interamente gestiti dal gestore eventi.</summary>
    </member>
    <member name="M:System.ComponentModel.HandledEventArgs.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.HandledEventArgs" /> con un valore predefinito della proprietà <see cref="P:System.ComponentModel.HandledEventArgs.Handled" /> di <see langword="false" />.</summary>
    </member>
    <member name="M:System.ComponentModel.HandledEventArgs.#ctor(System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.HandledEventArgs" /> con il valore predefinito specificato per la proprietà <see cref="P:System.ComponentModel.HandledEventArgs.Handled" />.</summary>
      <param name="defaultHandledValue">Valore predefinito per la proprietà <see cref="P:System.ComponentModel.HandledEventArgs.Handled" />.</param>
    </member>
    <member name="P:System.ComponentModel.HandledEventArgs.Handled">
      <summary>Ottiene o imposta un valore che indica se il gestore eventi ha gestito completamente l'evento o se il sistema deve proseguire la propria elaborazione.</summary>
      <returns>
        <see langword="true" /> se l'evento è stato gestito completamente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.HandledEventHandler">
      <summary>Rappresenta un metodo in grado di gestire gli eventi che richiedano o non richiedano ulteriore elaborazione dopo essere stati restituiti dal gestore eventi.</summary>
      <param name="sender">Origine dell'evento.</param>
      <param name="e">Oggetto <see cref="T:System.ComponentModel.HandledEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="T:System.ComponentModel.IBindingList">
      <summary>Fornisce le funzionalità necessarie per supportare scenari semplici e complessi quando si effettua un'associazione a un'origine dati.</summary>
    </member>
    <member name="M:System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)">
      <summary>Consente di aggiungere l'oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> agli indici utilizzati per la ricerca.</summary>
      <param name="property">Oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> da aggiungere agli indici utilizzati per la ricerca.</param>
    </member>
    <member name="M:System.ComponentModel.IBindingList.AddNew">
      <summary>Consente di aggiungere un nuovo elemento all'elenco.</summary>
      <returns>Elemento aggiunto all'elenco.</returns>
      <exception cref="T:System.NotSupportedException">
        <see cref="P:System.ComponentModel.IBindingList.AllowNew" /> è <see langword="false" />.</exception>
    </member>
    <member name="P:System.ComponentModel.IBindingList.AllowEdit">
      <summary>Indica se è possibile aggiornare gli elementi dell'elenco.</summary>
      <returns>
        <see langword="true" /> se è possibile aggiornare gli elementi dell'elenco, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.IBindingList.AllowNew">
      <summary>Indica se è possibile aggiungere elementi all'elenco utilizzando il metodo <see cref="M:System.ComponentModel.IBindingList.AddNew" />.</summary>
      <returns>
        <see langword="true" /> se è possibile aggiungere elementi all'elenco utilizzando il metodo <see cref="M:System.ComponentModel.IBindingList.AddNew" />, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.IBindingList.AllowRemove">
      <summary>Indica se è possibile rimuovere elementi dall'elenco utilizzando il metodo <see cref="M:System.Collections.IList.Remove(System.Object)" /> o il metodo <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />.</summary>
      <returns>
        <see langword="true" /> se è possibile rimuovere elementi dall'elenco, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
      <summary>Ordina l'elenco in base a un oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> e a un oggetto <see cref="T:System.ComponentModel.ListSortDirection" />.</summary>
      <param name="property">Oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> in base al quale effettuare l'ordinamento.</param>
      <param name="direction">Uno dei valori di <see cref="T:System.ComponentModel.ListSortDirection" />.</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" /> è <see langword="false" />.</exception>
    </member>
    <member name="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary>Consente di restituire l'indice della riga che presenta il dato oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" />.</summary>
      <param name="property">Oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> in base al quale effettuare la ricerca.</param>
      <param name="key">Valore del parametro <paramref name="property" /> da ricercare.</param>
      <returns>Indice della riga che presenta il dato oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" />.</returns>
      <exception cref="T:System.NotSupportedException">
        <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" /> è <see langword="false" />.</exception>
    </member>
    <member name="P:System.ComponentModel.IBindingList.IsSorted">
      <summary>Indica se gli elementi dell'elenco sono ordinati.</summary>
      <returns>
        <see langword="true" /> se è stato chiamato il metodo <see cref="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" /> e non il metodo <see cref="M:System.ComponentModel.IBindingList.RemoveSort" />, in caso contrario <see langword="false" />.</returns>
      <exception cref="T:System.NotSupportedException">
        <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" /> è <see langword="false" />.</exception>
    </member>
    <member name="E:System.ComponentModel.IBindingList.ListChanged">
      <summary>Si verifica quando viene modificato l'elenco o un elemento dell'elenco.</summary>
    </member>
    <member name="M:System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)">
      <summary>Consente di rimuovere l'oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> dagli indici utilizzati per la ricerca.</summary>
      <param name="property">Oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> da rimuovere dagli indici utilizzati per la ricerca.</param>
    </member>
    <member name="M:System.ComponentModel.IBindingList.RemoveSort">
      <summary>Consente di rimuovere qualsiasi ordinamento applicato utilizzando il metodo <see cref="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />.</summary>
      <exception cref="T:System.NotSupportedException">
        <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" /> è <see langword="false" />.</exception>
    </member>
    <member name="P:System.ComponentModel.IBindingList.SortDirection">
      <summary>Ottiene la direzione dell'ordinamento.</summary>
      <returns>Uno dei valori di <see cref="T:System.ComponentModel.ListSortDirection" />.</returns>
      <exception cref="T:System.NotSupportedException">
        <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" /> è <see langword="false" />.</exception>
    </member>
    <member name="P:System.ComponentModel.IBindingList.SortProperty">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> che viene utilizzato per l'ordinamento.</summary>
      <returns>Oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> che viene utilizzato per l'ordinamento.</returns>
      <exception cref="T:System.NotSupportedException">
        <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" /> è <see langword="false" />.</exception>
    </member>
    <member name="P:System.ComponentModel.IBindingList.SupportsChangeNotification">
      <summary>Indica se viene generato un evento <see cref="E:System.ComponentModel.IBindingList.ListChanged" /> quando viene modificato l'elenco o un elemento dell'elenco.</summary>
      <returns>
        <see langword="true" /> se viene generato un evento <see cref="E:System.ComponentModel.IBindingList.ListChanged" /> quando viene modificato l'elenco o un elemento dell'elenco, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.IBindingList.SupportsSearching">
      <summary>Indica se l'elenco supporta la ricerca con il metodo <see cref="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />.</summary>
      <returns>
        <see langword="true" /> se l'elenco supporta la ricerca con il metodo <see cref="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.IBindingList.SupportsSorting">
      <summary>Indica se l'elenco supporta l'ordinamento.</summary>
      <returns>
        <see langword="true" /> se l'elenco supporta l'ordinamento, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.IBindingListView">
      <summary>Estende l'interfaccia <see cref="T:System.ComponentModel.IBindingList" /> fornendo funzionalità di ordinamento e di filtraggio avanzate.</summary>
    </member>
    <member name="M:System.ComponentModel.IBindingListView.ApplySort(System.ComponentModel.ListSortDescriptionCollection)">
      <summary>Ordina l'origine dati in base a <see cref="T:System.ComponentModel.ListSortDescriptionCollection" />.</summary>
      <param name="sorts">Oggetto <see cref="T:System.ComponentModel.ListSortDescriptionCollection" /> che contiene gli ordinamenti da applicare all'origine dati.</param>
    </member>
    <member name="P:System.ComponentModel.IBindingListView.Filter">
      <summary>Ottiene o imposta il filtro da utilizzare per escludere degli elementi dall'insieme di elementi restituiti dall'origine dati.</summary>
      <returns>Stringa utilizzata per filtrare gli elementi compresi nell'insieme di elementi restituiti dall'origine dati.</returns>
    </member>
    <member name="M:System.ComponentModel.IBindingListView.RemoveFilter">
      <summary>Rimuove il filtro correntemente applicato all'origine dati.</summary>
    </member>
    <member name="P:System.ComponentModel.IBindingListView.SortDescriptions">
      <summary>Ottiene l'insieme delle descrizioni di ordinamento correntemente applicate all'origine dati.</summary>
      <returns>Oggetto <see cref="T:System.ComponentModel.ListSortDescriptionCollection" /> correntemente applicato all'origine dati.</returns>
    </member>
    <member name="P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting">
      <summary>Ottiene un valore che indica se l'origine dati supporta l'ordinamento avanzato.</summary>
      <returns>
        <see langword="true" /> se l'origine dati supporta l'ordinamento avanzato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.IBindingListView.SupportsFiltering">
      <summary>Ottiene un valore che indica se l'origine dati supporta il filtraggio.</summary>
      <returns>
        <see langword="true" /> se l'origine dati supporta il filtraggio; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.ICancelAddNew">
      <summary>Aggiunge funzionalità transazionali al momento dell'aggiunta di un nuovo elemento a un insieme.</summary>
    </member>
    <member name="M:System.ComponentModel.ICancelAddNew.CancelNew(System.Int32)">
      <summary>Elimina dall'insieme un nuovo elemento in sospeso.</summary>
      <param name="itemIndex">Indice dell'elemento precedentemente aggiunto all'insieme.</param>
    </member>
    <member name="M:System.ComponentModel.ICancelAddNew.EndNew(System.Int32)">
      <summary>Esegue il commit di un nuovo elemento in sospeso nell'insieme.</summary>
      <param name="itemIndex">Indice dell'elemento precedentemente aggiunto all'insieme.</param>
    </member>
    <member name="T:System.ComponentModel.IComNativeDescriptorHandler">
      <summary>Fornisce un livello di mapping di livello principale tra un oggetto COM e <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
    </member>
    <member name="M:System.ComponentModel.IComNativeDescriptorHandler.GetAttributes(System.Object)">
      <summary>Ottiene gli attributi per il componente specificato.</summary>
      <param name="component">Componente per il quale ottenere gli attributi.</param>
      <returns>Insieme di attributi per <paramref name="component" />.</returns>
    </member>
    <member name="M:System.ComponentModel.IComNativeDescriptorHandler.GetClassName(System.Object)">
      <summary>Ottiene il nome della classe per il componente specificato.</summary>
      <param name="component">Componente per il quale ottenere il nome della classe.</param>
      <returns>Nome della classe corrispondente a <paramref name="component" />.</returns>
    </member>
    <member name="M:System.ComponentModel.IComNativeDescriptorHandler.GetConverter(System.Object)">
      <summary>Ottiene il convertitore di tipi per il componente specificato.</summary>
      <param name="component">Componente per il quale ottenere <see cref="T:System.ComponentModel.TypeConverter" />.</param>
      <returns>Oggetto <see cref="T:System.ComponentModel.TypeConverter" /> per <paramref name="component" />.</returns>
    </member>
    <member name="M:System.ComponentModel.IComNativeDescriptorHandler.GetDefaultEvent(System.Object)">
      <summary>Ottiene l'evento predefinito per il componente specificato.</summary>
      <param name="component">Componente per il quale ottenere l'evento predefinito.</param>
      <returns>Oggetto <see cref="T:System.ComponentModel.EventDescriptor" /> che rappresenta l'evento predefinito di <paramref name="component" />.</returns>
    </member>
    <member name="M:System.ComponentModel.IComNativeDescriptorHandler.GetDefaultProperty(System.Object)">
      <summary>Ottiene la proprietà predefinita per il componente specificato.</summary>
      <param name="component">Componente per cui ottenere la proprietà predefinita.</param>
      <returns>Oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> che rappresenta la proprietà predefinita di <paramref name="component" />.</returns>
    </member>
    <member name="M:System.ComponentModel.IComNativeDescriptorHandler.GetEditor(System.Object,System.Type)">
      <summary>Ottiene l'editor per il componente specificato.</summary>
      <param name="component">Componente per il quale ottenere l'editor.</param>
      <param name="baseEditorType">Tipo base dell'editor per <paramref name="component" />.</param>
      <returns>Editor per <paramref name="component" />.</returns>
    </member>
    <member name="M:System.ComponentModel.IComNativeDescriptorHandler.GetEvents(System.Object)">
      <summary>Ottiene gli eventi per il componente specificato.</summary>
      <param name="component">Componente per il quale ottenere gli eventi.</param>
      <returns>Insieme di descrittori di evento per <paramref name="component" />.</returns>
    </member>
    <member name="M:System.ComponentModel.IComNativeDescriptorHandler.GetEvents(System.Object,System.Attribute[])">
      <summary>Ottiene gli eventi con gli attributi specificati per il componente specificato.</summary>
      <param name="component">Componente per il quale ottenere gli eventi.</param>
      <param name="attributes">Attributi utilizzati per filtrare gli eventi.</param>
      <returns>Insieme di descrittori di evento per <paramref name="component" />.</returns>
    </member>
    <member name="M:System.ComponentModel.IComNativeDescriptorHandler.GetName(System.Object)">
      <summary>Ottiene il nome del componente specificato.</summary>
      <param name="component">Componente di cui ottenere il nome.</param>
      <returns>Nome dell'oggetto <paramref name="component" />.</returns>
    </member>
    <member name="M:System.ComponentModel.IComNativeDescriptorHandler.GetProperties(System.Object,System.Attribute[])">
      <summary>Ottiene le proprietà con gli attributi specificati per il componente specificato.</summary>
      <param name="component">Componente per il quale ottenere gli eventi.</param>
      <param name="attributes">Attributi utilizzati per filtrare le proprietà.</param>
      <returns>Insieme di descrittori di proprietà per <paramref name="component" />.</returns>
    </member>
    <member name="M:System.ComponentModel.IComNativeDescriptorHandler.GetPropertyValue(System.Object,System.Int32,System.Boolean@)">
      <summary>Ottiene il valore della proprietà con l'ID dispatch specificato.</summary>
      <param name="component">Oggetto a cui appartiene la proprietà.</param>
      <param name="dispid">ID dispatch.</param>
      <param name="success">Oggetto <see cref="T:System.Boolean" />, passato per riferimento, che rappresenta un valore che indica se la proprietà è stata recuperata.</param>
      <returns>Valore della proprietà con l'ID dispatch specificato.</returns>
    </member>
    <member name="M:System.ComponentModel.IComNativeDescriptorHandler.GetPropertyValue(System.Object,System.String,System.Boolean@)">
      <summary>Ottiene il valore della proprietà con il nome specificato.</summary>
      <param name="component">Oggetto a cui appartiene la proprietà.</param>
      <param name="propertyName">Nome della proprietà.</param>
      <param name="success">Oggetto <see cref="T:System.Boolean" />, passato per riferimento, che rappresenta un valore che indica se la proprietà è stata recuperata.</param>
      <returns>Valore della proprietà con il nome specificato.</returns>
    </member>
    <member name="T:System.ComponentModel.ICustomTypeDescriptor">
      <summary>Fornisce un'interfaccia che riporta informazioni dinamiche di tipo personalizzato per un oggetto.</summary>
    </member>
    <member name="M:System.ComponentModel.ICustomTypeDescriptor.GetAttributes">
      <summary>Restituisce una raccolta di attributi personalizzati per questa istanza di un componente.</summary>
      <returns>Oggetto <see cref="T:System.ComponentModel.AttributeCollection" /> contenente gli attributi per l'oggetto.</returns>
    </member>
    <member name="M:System.ComponentModel.ICustomTypeDescriptor.GetClassName">
      <summary>Restituisce il nome della classe di questa istanza di un componente.</summary>
      <returns>Il nome della classe dell'oggetto, o <see langword="null" />, se la classe non ha un nome.</returns>
    </member>
    <member name="M:System.ComponentModel.ICustomTypeDescriptor.GetComponentName">
      <summary>Restituisce il nome di questa istanza di un componente.</summary>
      <returns>Il nome dell'oggetto, o <see langword="null" />, se l'oggetto non ha un nome.</returns>
    </member>
    <member name="M:System.ComponentModel.ICustomTypeDescriptor.GetConverter">
      <summary>Restituisce un convertitore di tipi per questa istanza di un componente.</summary>
      <returns>Oggetto <see cref="T:System.ComponentModel.TypeConverter" /> che costituisce il convertitore per l'oggetto oppure <see langword="null" /> se non esiste alcun <see cref="T:System.ComponentModel.TypeConverter" /> per l'oggetto.</returns>
    </member>
    <member name="M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent">
      <summary>Restituisce l'evento predefinito per questa istanza di un componente.</summary>
      <returns>Oggetto <see cref="T:System.ComponentModel.EventDescriptor" /> che rappresenta l'evento predefinito per questo oggetto oppure <see langword="null" /> se questo oggetto non ha eventi.</returns>
    </member>
    <member name="M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty">
      <summary>Restituisce la proprietà predefinita per questa istanza di un componente.</summary>
      <returns>Oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> che rappresenta la proprietà predefinita per questo oggetto oppure <see langword="null" /> se questo oggetto non ha proprietà.</returns>
    </member>
    <member name="M:System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)">
      <summary>Restituisce un editor del tipo specificato per questa istanza di un componente.</summary>
      <param name="editorBaseType">Oggetto <see cref="T:System.Type" /> che rappresenta l'editor per questo oggetto.</param>
      <returns>Oggetto <see cref="T:System.Object" /> del tipo specificato che costituisce l'editor per questo oggetto oppure <see langword="null" /> se l'editor non è stato trovato.</returns>
    </member>
    <member name="M:System.ComponentModel.ICustomTypeDescriptor.GetEvents">
      <summary>Restituisce gli eventi per questa istanza di un componente.</summary>
      <returns>Oggetto <see cref="T:System.ComponentModel.EventDescriptorCollection" /> che rappresenta gli eventi per questa istanza del componente.</returns>
    </member>
    <member name="M:System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])">
      <summary>Restituisce gli eventi per questa istanza di un componente usando come filtro la matrice di attributi specificata.</summary>
      <param name="attributes">Matrice di tipo <see cref="T:System.Attribute" /> usata come filtro.</param>
      <returns>Oggetto <see cref="T:System.ComponentModel.EventDescriptorCollection" /> che rappresenta gli eventi filtrati per questa istanza del componente.</returns>
    </member>
    <member name="M:System.ComponentModel.ICustomTypeDescriptor.GetProperties">
      <summary>Restituisce le proprietà per questa istanza di un componente.</summary>
      <returns>Oggetto <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> che rappresenta le proprietà per questa istanza del componente.</returns>
    </member>
    <member name="M:System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])">
      <summary>Restituisce le proprietà per questa istanza di un componente usando come filtro la matrice di attributi.</summary>
      <param name="attributes">Matrice di tipo <see cref="T:System.Attribute" /> usata come filtro.</param>
      <returns>Oggetto <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> che rappresenta le proprietà filtrate per questa istanza del componente.</returns>
    </member>
    <member name="M:System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary>Restituisce un oggetto che contiene la proprietà descritta dal descrittore di proprietà specificato.</summary>
      <param name="pd">Oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> che rappresenta la proprietà per cui deve essere trovato il proprietario.</param>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il proprietario della proprietà specificata.</returns>
    </member>
    <member name="T:System.ComponentModel.IDataErrorInfo">
      <summary>Fornisce le funzionalità che offrono informazioni personalizzate sugli errori alle quali può essere associata un'interfaccia utente.</summary>
    </member>
    <member name="P:System.ComponentModel.IDataErrorInfo.Error">
      <summary>Ottiene un messaggio di errore che indica l'errore relativo a questo oggetto.</summary>
      <returns>Messaggio di errore che indica l'errore relativo a questo oggetto. Il valore predefinito è una stringa vuota ("").</returns>
    </member>
    <member name="P:System.ComponentModel.IDataErrorInfo.Item(System.String)">
      <summary>Ottiene il messaggio di errore per la proprietà con il nome specificato.</summary>
      <param name="columnName">Nome della proprietà di cui ottenere il messaggio di errore.</param>
      <returns>Messaggio di errore per la proprietà. Il valore predefinito è una stringa vuota ("").</returns>
    </member>
    <member name="T:System.ComponentModel.IExtenderProvider">
      <summary>Viene definita l'interfaccia per l'estensione delle proprietà ad altri componenti in un contenitore.</summary>
    </member>
    <member name="M:System.ComponentModel.IExtenderProvider.CanExtend(System.Object)">
      <summary>Consente di specificare se questo oggetto può fornire le proprietà di estensione all'oggetto specificato.</summary>
      <param name="extendee">Oggetto <see cref="T:System.Object" /> che riceverà le proprietà di estensione.</param>
      <returns>
        <see langword="true" /> se questo oggetto è in grado di fornire proprietà di estensione all'oggetto specificato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.IIntellisenseBuilder">
      <summary>Fornisce un'interfaccia che agevola il recupero del nome del generatore e la sua visualizzazione.</summary>
    </member>
    <member name="P:System.ComponentModel.IIntellisenseBuilder.Name">
      <summary>Ottiene un nome localizzato.</summary>
      <returns>Nome localizzato.</returns>
    </member>
    <member name="M:System.ComponentModel.IIntellisenseBuilder.Show(System.String,System.String,System.String@)">
      <summary>Visualizza il generatore.</summary>
      <param name="language">Linguaggio del servizio che chiama il generatore.</param>
      <param name="value">Espressione da modificare.</param>
      <param name="newValue">Nuovo valore.</param>
      <returns>
        <see langword="true" /> se il valore deve essere sostituito con <paramref name="newValue" />; in caso contrario, <see langword="false" /> se, ad esempio, l'utente annulla l'operazione.</returns>
    </member>
    <member name="T:System.ComponentModel.IListSource">
      <summary>Consente di fornire a un oggetto le funzionalità per restituire un elenco che possa essere associato a un'origine dati.</summary>
    </member>
    <member name="P:System.ComponentModel.IListSource.ContainsListCollection">
      <summary>Ottiene un valore che indica se l'insieme è costituito da oggetti <see cref="T:System.Collections.IList" />.</summary>
      <returns>
        <see langword="true" /> se l'insieme è costituito da oggetti <see cref="T:System.Collections.IList" />, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.IListSource.GetList">
      <summary>Restituisce un oggetto <see cref="T:System.Collections.IList" /> che può essere associato a un'origine dati da un oggetto che non implementa un'interfaccia <see cref="T:System.Collections.IList" />.</summary>
      <returns>Un oggetto <see cref="T:System.Collections.IList" /> che può essere associato a un'origine dati dall'oggetto.</returns>
    </member>
    <member name="T:System.ComponentModel.INestedContainer">
      <summary>Fornisce funzionalità per i contenitori annidati, contenitori logici di zero o più componenti che appartengono a un componente padre.</summary>
    </member>
    <member name="P:System.ComponentModel.INestedContainer.Owner">
      <summary>Ottiene il componente proprietario per il contenitore annidato.</summary>
      <returns>Oggetto <see cref="T:System.ComponentModel.IComponent" /> che possiede il contenitore annidato.</returns>
    </member>
    <member name="T:System.ComponentModel.INestedSite">
      <summary>Consente di recuperare il nome completo annidato di un componente.</summary>
    </member>
    <member name="P:System.ComponentModel.INestedSite.FullName">
      <summary>Ottiene il nome completo del componente in questo sito.</summary>
      <returns>Nome completo del componente in questo sito.</returns>
    </member>
    <member name="T:System.ComponentModel.InheritanceAttribute">
      <summary>Indica se il componente associato a questo attributo è stato ereditato da una classe base. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.ComponentModel.InheritanceAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.InheritanceAttribute" />.</summary>
    </member>
    <member name="M:System.ComponentModel.InheritanceAttribute.#ctor(System.ComponentModel.InheritanceLevel)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ComponentModel.InheritanceAttribute" /> con il livello di ereditarietà specificato.</summary>
      <param name="inheritanceLevel">Un oggetto <see cref="T:System.ComponentModel.InheritanceLevel" /> che indica il livello di ereditarietà su cui impostare questo attributo.</param>
    </member>
    <member name="F:System.ComponentModel.InheritanceAttribute.Default">
      <summary>Consente di specificare che il valore predefinito di <see cref="T:System.ComponentModel.InheritanceAttribute" /> è <see cref="F:System.ComponentModel.InheritanceAttribute.NotInherited" />. Questo campo è di sola lettura.</summary>
    </member>
    <member name="M:System.ComponentModel.InheritanceAttribute.Equals(System.Object)">
      <summary>Esegue l'override per verificare l'uguaglianza.</summary>
      <param name="value">Oggetto da testare.</param>
      <returns>
        <see langword="true" /> se l'oggetto corrisponde; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.InheritanceAttribute.GetHashCode">
      <summary>Restituisce il codice hash di questo oggetto.</summary>
      <returns>Codice hash per l'oggetto <see cref="T:System.ComponentModel.InheritanceAttribute" /> corrente.</returns>
    </member>
    <member name="P:System.ComponentModel.InheritanceAttribute.InheritanceLevel">
      <summary>Ottiene e impostare il livello di ereditarietà corrente memorizzato nell'attributo.</summary>
      <returns>Oggetto <see cref="T:System.ComponentModel.InheritanceLevel" /> memorizzato in questo attributo.</returns>
    </member>
    <member name="F:System.ComponentModel.InheritanceAttribute.Inherited">
      <summary>Consente di specificare che il componente è ereditato. Questo campo è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.InheritanceAttribute.InheritedReadOnly">
      <summary>Specifica che il componente è ereditato ed è di sola lettura. Questo campo è di sola lettura.</summary>
    </member>
    <member name="M:System.ComponentModel.InheritanceAttribute.IsDefaultAttribute">
      <summary>Ottiene un valore che indica se il valore corrente dell'attributo è il valore predefinito dell'attributo stesso.</summary>
      <returns>
        <see langword="true" /> se il valore corrente dell'attributo è quello predefinito, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="F:System.ComponentModel.InheritanceAttribute.NotInherited">
      <summary>Specifica che il componente non è ereditato. Questo campo è di sola lettura.</summary>
    </member>
    <member name="M:System.ComponentModel.InheritanceAttribute.ToString">
      <summary>Converte questo attributo in una stringa.</summary>
      <returns>Stringa che rappresenta questo oggetto <see cref="T:System.ComponentModel.InheritanceAttribute" />.</returns>
    </member>
    <member name="T:System.ComponentModel.InheritanceLevel">
      <summary>Definisce gli identificatori per i tipi di livelli di ereditarietà.</summary>
    </member>
    <member name="F:System.ComponentModel.InheritanceLevel.Inherited">
      <summary>L'oggetto è ereditato.</summary>
    </member>
    <member name="F:System.ComponentModel.InheritanceLevel.InheritedReadOnly">
      <summary>L'oggetto è ereditato ma ha un accesso di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.InheritanceLevel.NotInherited">
      <summary>L'oggetto non è ereditato.</summary>
    </member>
    <member name="T:System.ComponentModel.InstallerTypeAttribute">
      <summary>Specifica il programma di installazione di un tipo dal quale viene eseguita l'installazione di componenti.</summary>
    </member>
    <member name="M:System.ComponentModel.InstallerTypeAttribute.#ctor(System.String)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ComponentModel.InstallerTypeAttribute" /> con il nome del tipo di programma di installazione del componente.</summary>
      <param name="typeName">Nome di un oggetto <see cref="T:System.Type" /> che rappresenta il programma di installazione del componente al quale è associato questo attributo. È necessario che questa classe implementi l'interfaccia <see cref="T:System.ComponentModel.Design.IDesigner" />.</param>
    </member>
    <member name="M:System.ComponentModel.InstallerTypeAttribute.#ctor(System.Type)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ComponentModel.InstallerTypeAttribute" />, quando viene fornito un oggetto <see cref="T:System.Type" /> che rappresenta il programma di installazione di un componente.</summary>
      <param name="installerType">Oggetto <see cref="T:System.Type" /> che rappresenta il programma di installazione del componente al quale è associato questo attributo. È necessario che questa classe implementi l'interfaccia <see cref="T:System.ComponentModel.Design.IDesigner" />.</param>
    </member>
    <member name="M:System.ComponentModel.InstallerTypeAttribute.Equals(System.Object)">
      <summary>Specifica se il valore dell'oggetto specificato è uguale all'oggetto <see cref="T:System.ComponentModel.InstallerTypeAttribute" /> corrente.</summary>
      <param name="obj">Oggetto di cui va verificata l'uguaglianza di valore.</param>
      <returns>
        <see langword="true" /> se il valore dell'oggetto specificato è uguale a quello dell'oggetto corrente. <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="M:System.ComponentModel.InstallerTypeAttribute.GetHashCode">
      <summary>Restituisce il codice hash di questo oggetto.</summary>
      <returns>Codice hash per l'oggetto <see cref="T:System.ComponentModel.InstallerTypeAttribute" /> corrente.</returns>
    </member>
    <member name="P:System.ComponentModel.InstallerTypeAttribute.InstallerType">
      <summary>Ottiene il tipo di programma di installazione associato a questo attributo.</summary>
      <returns>Oggetto <see cref="T:System.Type" /> che rappresenta il tipo di programma di installazione associato a questo attributo oppure <see langword="null" /> in assenza di un programma di installazione.</returns>
    </member>
    <member name="T:System.ComponentModel.InstanceCreationEditor">
      <summary>Crea un'istanza di un particolare tipo di proprietà da una casella a discesa nell'oggetto <see cref="T:System.Windows.Forms.PropertyGrid" />.</summary>
    </member>
    <member name="M:System.ComponentModel.InstanceCreationEditor.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.InstanceCreationEditor" />.</summary>
    </member>
    <member name="M:System.ComponentModel.InstanceCreationEditor.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Quando è sottoposto a override in una classe derivata, restituisce un'istanza del tipo specificato.</summary>
      <param name="context">Informazioni contestuali.</param>
      <param name="instanceType">Tipo specificato.</param>
      <returns>Istanza del tipo specificato o valore <see langword="null" />.</returns>
    </member>
    <member name="P:System.ComponentModel.InstanceCreationEditor.Text">
      <summary>Ottiene il testo specificato.</summary>
      <returns>Il testo specificato.</returns>
    </member>
    <member name="T:System.ComponentModel.Int16Converter">
      <summary>Offre un convertitore di tipi per la conversione di oggetti di tipo intero senza segno a 16 bit in e da altre rappresentazioni.</summary>
    </member>
    <member name="M:System.ComponentModel.Int16Converter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Int16Converter" />.</summary>
    </member>
    <member name="T:System.ComponentModel.Int32Converter">
      <summary>Fornisce un convertitore di tipi per convertire oggetti di tipo Integer con segno a 32 bit in e da diverse altre rappresentazioni.</summary>
    </member>
    <member name="M:System.ComponentModel.Int32Converter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Int32Converter" />.</summary>
    </member>
    <member name="T:System.ComponentModel.Int64Converter">
      <summary>Fornisce un convertitore di tipi per convertire oggetti di tipo Integer con segno a 64 bit in e da diverse altre rappresentazioni.</summary>
    </member>
    <member name="M:System.ComponentModel.Int64Converter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Int64Converter" />.</summary>
    </member>
    <member name="T:System.ComponentModel.InvalidAsynchronousStateException">
      <summary>Generato quando un thread su cui dovrebbe venire eseguita un'operazione non esiste più oppure è privo di un ciclo di messaggi.</summary>
    </member>
    <member name="M:System.ComponentModel.InvalidAsynchronousStateException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.InvalidAsynchronousStateException" />.</summary>
    </member>
    <member name="M:System.ComponentModel.InvalidAsynchronousStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.InvalidAsynchronousStateException" /> con gli oggetti <see cref="T:System.Runtime.Serialization.SerializationInfo" /> e <see cref="T:System.Runtime.Serialization.StreamingContext" /> specificati.</summary>
      <param name="info">Classe <see cref="T:System.Runtime.Serialization.SerializationInfo" /> da utilizzare per la deserializzazione.</param>
      <param name="context">Destinazione da utilizzare per la deserializzazione.</param>
    </member>
    <member name="M:System.ComponentModel.InvalidAsynchronousStateException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.InvalidAsynchronousStateException" /> con la descrizione dettagliata specificata.</summary>
      <param name="message">Descrizione dettagliata dell'errore.</param>
    </member>
    <member name="M:System.ComponentModel.InvalidAsynchronousStateException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.InvalidAsynchronousStateException" /> con la descrizione dettagliata e l'eccezione specificate.</summary>
      <param name="message">Descrizione dettagliata dell'errore.</param>
      <param name="innerException">Riferimento all'eccezione interna che è la causa di questa eccezione.</param>
    </member>
    <member name="T:System.ComponentModel.IRaiseItemChangedEvents">
      <summary>Specifica se una classe converte gli eventi di modifica delle proprietà in eventi <see cref="E:System.ComponentModel.IBindingList.ListChanged" />.</summary>
    </member>
    <member name="P:System.ComponentModel.IRaiseItemChangedEvents.RaisesItemChangedEvents">
      <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.ComponentModel.IRaiseItemChangedEvents" /> genera gli eventi <see cref="E:System.ComponentModel.IBindingList.ListChanged" />.</summary>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.ComponentModel.IRaiseItemChangedEvents" /> genera gli eventi <see cref="E:System.ComponentModel.IBindingList.ListChanged" /> quando uno dei valori delle proprietà di tale oggetto viene modificato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.ISupportInitializeNotification">
      <summary>Consente di coordinare l'inizializzazione di un componente e delle relative proprietà dipendenti.</summary>
    </member>
    <member name="E:System.ComponentModel.ISupportInitializeNotification.Initialized">
      <summary>Si verifica quando l'inizializzazione del componente è stata eseguita.</summary>
    </member>
    <member name="P:System.ComponentModel.ISupportInitializeNotification.IsInitialized">
      <summary>Ottiene un valore che indica se il componente è inizializzato.</summary>
      <returns>
        <see langword="true" /> per indicare che l'inizializzazione del componente è stata completata; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.ITypeDescriptorContext">
      <summary>Fornisce informazioni contestuali su un componente relative, ad esempio, al contenitore e al descrittore di proprietà.</summary>
    </member>
    <member name="P:System.ComponentModel.ITypeDescriptorContext.Container">
      <summary>Ottiene il contenitore che rappresenta questa richiesta <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <returns>Un oggetto <see cref="T:System.ComponentModel.IContainer" /> imposta gli oggetti per questo oggetto <see cref="T:System.ComponentModel.TypeDescriptor" />; in caso contrario, <see langword="null" /> in mancanza di contenitore o se l'oggetto <see cref="T:System.ComponentModel.TypeDescriptor" /> non utilizza oggetti esterni.</returns>
    </member>
    <member name="P:System.ComponentModel.ITypeDescriptorContext.Instance">
      <summary>Ottiene l'oggetto connesso a questa richiesta di descrittore di tipi.</summary>
      <returns>Oggetto che richiama il metodo nell'oggetto <see cref="T:System.ComponentModel.TypeDescriptor" />; in caso contrario, <see langword="null" /> in mancanza di un oggetto responsabile della chiamata.</returns>
    </member>
    <member name="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanged">
      <summary>Genera l'evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />.</summary>
    </member>
    <member name="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanging">
      <summary>Genera l'evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" />.</summary>
      <returns>
        <see langword="true" /> se questo oggetto può essere modificato. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> associato all'elemento di contesto indicato.</summary>
      <returns>Oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> che descrive l'elemento di contesto indicato; in caso contrario, <see langword="null" /> in mancanza di un oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> responsabile della chiamata.</returns>
    </member>
    <member name="T:System.ComponentModel.ITypedList">
      <summary>Fornisce le funzionalità per scoprire lo schema di un elenco associabile, in cui le proprietà disponibili per l'associazione differiscono dalle proprietà pubbliche dell'oggetto verso cui effettuare l'associazione.</summary>
    </member>
    <member name="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
      <summary>Restituisce l'oggetto <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> che rappresenta le proprietà di ogni elemento usato per associare i dati.</summary>
      <param name="listAccessors">Matrice di oggetti <see cref="T:System.ComponentModel.PropertyDescriptor" /> da individuare come associabili nella raccolta. Può essere <see langword="null" />.</param>
      <returns>L'oggetto <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> che rappresenta le proprietà di ogni elemento usato per associare i dati.</returns>
    </member>
    <member name="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])">
      <summary>Restituisce il nome dell'elenco.</summary>
      <param name="listAccessors">Matrice di oggetti <see cref="T:System.ComponentModel.PropertyDescriptor" />, di cui viene restituito il nome dell'elenco. Può essere <see langword="null" />.</param>
      <returns>Il nome dell'elenco.</returns>
    </member>
    <member name="T:System.ComponentModel.License">
      <summary>Fornisce la classe base <see langword="abstract" /> per tutte le licenze. La licenza viene concessa a un'istanza specifica di un componente.</summary>
    </member>
    <member name="M:System.ComponentModel.License.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.License" />.</summary>
    </member>
    <member name="M:System.ComponentModel.License.Dispose">
      <summary>Quando è sottoposto a override in una classe derivata, consente di eliminare le risorse utilizzate dalla licenza.</summary>
    </member>
    <member name="P:System.ComponentModel.License.LicenseKey">
      <summary>Quando è sottoposto a override in una classe derivata, consente di ottenere la chiave di licenza assegnata a questo componente.</summary>
      <returns>Una chiave di licenza concessa a questo componente.</returns>
    </member>
    <member name="T:System.ComponentModel.LicenseContext">
      <summary>Specifica quando è possibile utilizzare un oggetto concesso in licenza e consente di ottenere i servizi aggiuntivi necessari per supportare le licenze eseguite all'interno del rispettivo dominio.</summary>
    </member>
    <member name="M:System.ComponentModel.LicenseContext.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.LicenseContext" />.</summary>
    </member>
    <member name="M:System.ComponentModel.LicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)">
      <summary>Quando è sottoposto a override in una classe derivata, restituisce una chiave di licenza salvata per il tipo specificato, tratta dall'assembly di risorse specificato.</summary>
      <param name="type">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo di componente.</param>
      <param name="resourceAssembly">Oggetto <see cref="T:System.Reflection.Assembly" /> con la chiave di licenza.</param>
      <returns>La proprietà <see cref="P:System.ComponentModel.License.LicenseKey" /> per il tipo specificato. Questo metodo restituisce <see langword="null" /> a meno che non venga sottoposto a override.</returns>
    </member>
    <member name="M:System.ComponentModel.LicenseContext.GetService(System.Type)">
      <summary>Ottiene il servizio richiesto, se disponibile.</summary>
      <param name="type">Tipo di servizio da recuperare.</param>
      <returns>Istanza del servizio oppure <see langword="null" /> se non è possibile trovare il servizio.</returns>
    </member>
    <member name="M:System.ComponentModel.LicenseContext.SetSavedLicenseKey(System.Type,System.String)">
      <summary>Quando è sottoposto a override in una classe derivata, consente di impostare una chiave di licenza per il tipo specificato.</summary>
      <param name="type">Oggetto <see cref="T:System.Type" /> che rappresenta il componente associato alla chiave di licenza.</param>
      <param name="key">La proprietà <see cref="P:System.ComponentModel.License.LicenseKey" /> da salvare per il tipo di componente.</param>
    </member>
    <member name="P:System.ComponentModel.LicenseContext.UsageMode">
      <summary>Quando è sottoposto a override in una classe derivata, consente di ottenere un valore che specifica quando è possibile utilizzare una licenza.</summary>
      <returns>Uno dei valori di <see cref="T:System.ComponentModel.LicenseUsageMode" /> che specifica quando è possibile utilizzare una licenza. Il valore predefinito è <see cref="F:System.ComponentModel.LicenseUsageMode.Runtime" />.</returns>
    </member>
    <member name="T:System.ComponentModel.LicenseException">
      <summary>Rappresenta l'eccezione generata quando non può essere concessa un licenza a un componente.</summary>
    </member>
    <member name="M:System.ComponentModel.LicenseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.LicenseException" /> con gli oggetti <see cref="T:System.Runtime.Serialization.SerializationInfo" /> e <see cref="T:System.Runtime.Serialization.StreamingContext" /> specificati.</summary>
      <param name="info">Classe <see cref="T:System.Runtime.Serialization.SerializationInfo" /> da utilizzare per la deserializzazione.</param>
      <param name="context">Destinazione da utilizzare per la deserializzazione.</param>
    </member>
    <member name="M:System.ComponentModel.LicenseException.#ctor(System.Type)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ComponentModel.LicenseException" /> per il tipo di componente a cui è stata negata una licenza.</summary>
      <param name="type">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo di componente a cui non è stata concessa una licenza.</param>
    </member>
    <member name="M:System.ComponentModel.LicenseException.#ctor(System.Type,System.Object)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ComponentModel.LicenseException" /> per il tipo e l'istanza del componente a cui è stata negata una licenza.</summary>
      <param name="type">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo di componente a cui non è stata concessa una licenza.</param>
      <param name="instance">Istanza del componente a cui non è stata concessa la licenza.</param>
    </member>
    <member name="M:System.ComponentModel.LicenseException.#ctor(System.Type,System.Object,System.String)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ComponentModel.LicenseException" /> per il tipo e l'istanza del componente a cui è stata negata la licenza, insieme a un messaggio da visualizzare.</summary>
      <param name="type">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo di componente a cui non è stata concessa una licenza.</param>
      <param name="instance">Istanza del componente a cui non è stata concessa la licenza.</param>
      <param name="message">Il messaggio di eccezione da visualizzare.</param>
    </member>
    <member name="M:System.ComponentModel.LicenseException.#ctor(System.Type,System.Object,System.String,System.Exception)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ComponentModel.LicenseException" /> per il tipo e l'istanza del componente a cui è stata negata una licenza, insieme a un messaggio da visualizzare e all'eccezione originale generata.</summary>
      <param name="type">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo di componente a cui non è stata concessa una licenza.</param>
      <param name="instance">Istanza del componente a cui non è stata concessa la licenza.</param>
      <param name="message">Il messaggio di eccezione da visualizzare.</param>
      <param name="innerException">Oggetto <see cref="T:System.Exception" /> che rappresenta l'eccezione originale.</param>
    </member>
    <member name="M:System.ComponentModel.LicenseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Imposta l'oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con le informazioni sull'eccezione.</summary>
      <param name="info">Classe <see cref="T:System.Runtime.Serialization.SerializationInfo" /> da utilizzare per la deserializzazione.</param>
      <param name="context">Destinazione da utilizzare per la deserializzazione.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.LicenseException.LicensedType">
      <summary>Ottiene il tipo del componente a cui non è stata concessa una licenza.</summary>
      <returns>Oggetto <see cref="T:System.Type" /> che rappresenta il tipo di componente a cui non è stata concessa una licenza.</returns>
    </member>
    <member name="T:System.ComponentModel.LicenseManager">
      <summary>Offre proprietà e metodi per aggiungere una licenza a un componente e gestire <see cref="T:System.ComponentModel.LicenseProvider" />. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.ComponentModel.LicenseManager.CreateWithContext(System.Type,System.ComponentModel.LicenseContext)">
      <summary>Consente di creare un'istanza del tipo specificato, dato il contesto in cui è possibile utilizzare l'istanza concessa in licenza.</summary>
      <param name="type">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo da creare.</param>
      <param name="creationContext">Oggetto <see cref="T:System.ComponentModel.LicenseContext" /> che specifica quando è possibile utilizzare l'istanza concessa in licenza.</param>
      <returns>Istanza del tipo specificato.</returns>
    </member>
    <member name="M:System.ComponentModel.LicenseManager.CreateWithContext(System.Type,System.ComponentModel.LicenseContext,System.Object[])">
      <summary>Consente di creare un'istanza del tipo specificato con gli argomenti indicati, dato il contesto in cui è possibile utilizzare l'istanza concessa in licenza.</summary>
      <param name="type">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo da creare.</param>
      <param name="creationContext">Oggetto <see cref="T:System.ComponentModel.LicenseContext" /> che specifica quando è possibile utilizzare l'istanza concessa in licenza.</param>
      <param name="args">Matrice di tipo <see cref="T:System.Object" /> che rappresenta gli argomenti per il tipo.</param>
      <returns>Istanza del tipo specificato con la determinata matrice di argomenti.</returns>
    </member>
    <member name="P:System.ComponentModel.LicenseManager.CurrentContext">
      <summary>Viene poi ottenuto o impostato l'oggetto <see cref="T:System.ComponentModel.LicenseContext" /> corrente, che specifica quando è possibile utilizzare l'oggetto concesso in licenza.</summary>
      <returns>Oggetto <see cref="T:System.ComponentModel.LicenseContext" /> che specifica quando è possibile utilizzare l'oggetto concesso in licenza.</returns>
      <exception cref="T:System.InvalidOperationException">Attualmente la proprietà <see cref="P:System.ComponentModel.LicenseManager.CurrentContext" /> è bloccata e non può essere modificata.</exception>
    </member>
    <member name="M:System.ComponentModel.LicenseManager.IsLicensed(System.Type)">
      <summary>Indica se il tipo specificato dispone di una licenza valida.</summary>
      <param name="type">Oggetto <see cref="T:System.Type" /> per il quale trovare una licenza valida.</param>
      <returns>
        <see langword="true" /> se il tipo specificato dispone di licenza, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.LicenseManager.IsValid(System.Type)">
      <summary>Determina se può essere concessa una licenza valida per il tipo specificato.</summary>
      <param name="type">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo di oggetto che richiede <see cref="T:System.ComponentModel.License" />.</param>
      <returns>
        <see langword="true" /> se può essere concessa una licenza valida, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.LicenseManager.IsValid(System.Type,System.Object,System.ComponentModel.License@)">
      <summary>Consente di determinare se può essere concessa una licenza valida per l'istanza specificata del tipo. Questo metodo crea un oggetto <see cref="T:System.ComponentModel.License" /> valido.</summary>
      <param name="type">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo di oggetto che richiede la licenza.</param>
      <param name="instance">Oggetto del tipo specificato o un tipo derivato dal tipo specificato.</param>
      <param name="license">Oggetto <see cref="T:System.ComponentModel.License" /> che rappresenta una licenza valida oppure <see langword="null" /> se non è possibile concedere una licenza valida.</param>
      <returns>
        <see langword="true" /> se è possibile concedere un oggetto <see cref="T:System.ComponentModel.License" /> valido, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.LicenseManager.LockContext(System.Object)">
      <summary>Impedisce di apportare modifiche all'oggetto <see cref="T:System.ComponentModel.LicenseContext" /> corrente dell'oggetto specificato.</summary>
      <param name="contextUser">Oggetto il cui contesto corrente si desidera bloccare.</param>
      <exception cref="T:System.InvalidOperationException">Il contesto è già bloccato.</exception>
    </member>
    <member name="M:System.ComponentModel.LicenseManager.UnlockContext(System.Object)">
      <summary>Consente di apportare modifiche all'oggetto <see cref="T:System.ComponentModel.LicenseContext" /> corrente dell'oggetto specificato.</summary>
      <param name="contextUser">Oggetto il cui contesto corrente si desidera sbloccare.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="contextUser" /> rappresenta un utente diverso da quello specificato in una precedente chiamata a <see cref="M:System.ComponentModel.LicenseManager.LockContext(System.Object)" />.</exception>
    </member>
    <member name="P:System.ComponentModel.LicenseManager.UsageMode">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.LicenseUsageMode" /> che specifica quando è possibile utilizzare l'oggetto concesso in licenza per la proprietà <see cref="P:System.ComponentModel.LicenseManager.CurrentContext" />.</summary>
      <returns>Uno dei valori di <see cref="T:System.ComponentModel.LicenseUsageMode" />, come specificato nella proprietà <see cref="P:System.ComponentModel.LicenseManager.CurrentContext" />.</returns>
    </member>
    <member name="M:System.ComponentModel.LicenseManager.Validate(System.Type)">
      <summary>Determina se può essere concessa una licenza per il tipo specificato.</summary>
      <param name="type">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo di oggetto che richiede la licenza.</param>
      <exception cref="T:System.ComponentModel.LicenseException">Non è possibile concedere un oggetto <see cref="T:System.ComponentModel.License" />.</exception>
    </member>
    <member name="M:System.ComponentModel.LicenseManager.Validate(System.Type,System.Object)">
      <summary>Consente di determinare se è possibile concedere una licenza per l'istanza del tipo specificato.</summary>
      <param name="type">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo di oggetto che richiede la licenza.</param>
      <param name="instance">Oggetto <see cref="T:System.Object" /> del tipo specificato o un tipo derivato dal tipo specificato.</param>
      <returns>Oggetto <see cref="T:System.ComponentModel.License" /> valido.</returns>
      <exception cref="T:System.ComponentModel.LicenseException">Il tipo dispone di licenza, ma non è possibile concedere un oggetto <see cref="T:System.ComponentModel.License" />.</exception>
    </member>
    <member name="T:System.ComponentModel.LicenseProvider">
      <summary>Fornisce la classe base <see langword="abstract" /> per l'implementazione di un provider di licenze.</summary>
    </member>
    <member name="M:System.ComponentModel.LicenseProvider.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.LicenseProvider" />.</summary>
    </member>
    <member name="M:System.ComponentModel.LicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)">
      <summary>Se sottoposto a override in una classe derivata, consente di ottenere una licenza per un'istanza o un tipo di componente, quando viene specificato un contesto e se la negazione di una licenza genera un'eccezione.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.LicenseContext" /> che specifica dove è possibile utilizzare l'oggetto concesso in licenza.</param>
      <param name="type">Oggetto <see cref="T:System.Type" /> che rappresenta il componente che richiede la licenza.</param>
      <param name="instance">Oggetto che sta richiedendo la licenza.</param>
      <param name="allowExceptions">
        <see langword="true" /> se deve essere generata un'eccezione <see cref="T:System.ComponentModel.LicenseException" /> quando al componente non può essere concessa una licenza, in caso contrario <see langword="false" />.</param>
      <returns>Oggetto <see cref="T:System.ComponentModel.License" /> valido.</returns>
    </member>
    <member name="T:System.ComponentModel.LicenseProviderAttribute">
      <summary>Consente di specificare l'oggetto <see cref="T:System.ComponentModel.LicenseProvider" /> da utilizzare con una classe. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.ComponentModel.LicenseProviderAttribute.#ctor">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ComponentModel.LicenseProviderAttribute" /> senza un provider di licenza.</summary>
    </member>
    <member name="M:System.ComponentModel.LicenseProviderAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.LicenseProviderAttribute" /> con il tipo specificato.</summary>
      <param name="typeName">Nome completo della classe del provider di licenza.</param>
    </member>
    <member name="M:System.ComponentModel.LicenseProviderAttribute.#ctor(System.Type)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ComponentModel.LicenseProviderAttribute" /> con il tipo specificato di provider di licenza.</summary>
      <param name="type">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo della classe del provider di licenza.</param>
    </member>
    <member name="F:System.ComponentModel.LicenseProviderAttribute.Default">
      <summary>Consente di specificare il valore predefinito, ovvero nessun provider. Questo campo <see langword="static" /> è di sola lettura.</summary>
    </member>
    <member name="M:System.ComponentModel.LicenseProviderAttribute.Equals(System.Object)">
      <summary>Indica se questa istanza e un oggetto specificato sono uguali.</summary>
      <param name="value">Altro oggetto da confrontare.</param>
      <returns>
        <see langword="true" /> se <paramref name="value" /> è uguale all'istanza; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.LicenseProviderAttribute.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Codice hash per l'oggetto <see cref="T:System.ComponentModel.LicenseProviderAttribute" /> corrente.</returns>
    </member>
    <member name="P:System.ComponentModel.LicenseProviderAttribute.LicenseProvider">
      <summary>Ottiene il provider di licenza che deve essere utilizzato con la classe associata.</summary>
      <returns>Oggetto <see cref="T:System.Type" /> che rappresenta il tipo del provider di licenza. Il valore predefinito è <see langword="null" />.</returns>
    </member>
    <member name="P:System.ComponentModel.LicenseProviderAttribute.TypeId">
      <summary>Indica un ID univoco per questo tipo di attributo.</summary>
      <returns>ID univoco per questo tipo di attributo.</returns>
    </member>
    <member name="T:System.ComponentModel.LicenseUsageMode">
      <summary>Consente di specificare quando è possibile utilizzare <see cref="T:System.ComponentModel.License" />.</summary>
    </member>
    <member name="F:System.ComponentModel.LicenseUsageMode.Designtime">
      <summary>Utilizzato in fase di progettazione da una finestra di progettazione visiva o dal compilatore.</summary>
    </member>
    <member name="F:System.ComponentModel.LicenseUsageMode.Runtime">
      <summary>Utilizzato in fase di esecuzione.</summary>
    </member>
    <member name="T:System.ComponentModel.LicFileLicenseProvider">
      <summary>Fornisce un'implementazione di un oggetto <see cref="T:System.ComponentModel.LicenseProvider" />. Il provider funziona in modo analogo al modello di gestione delle licenze standard di Microsoft .NET Framework.</summary>
    </member>
    <member name="M:System.ComponentModel.LicFileLicenseProvider.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.LicFileLicenseProvider" />.</summary>
    </member>
    <member name="M:System.ComponentModel.LicFileLicenseProvider.GetKey(System.Type)">
      <summary>Restituisce una chiave per il tipo specificato.</summary>
      <param name="type">Tipo di oggetto per restituire la chiave.</param>
      <returns>Conferma del fatto che il parametro <paramref name="type" /> dispone di licenza.</returns>
    </member>
    <member name="M:System.ComponentModel.LicFileLicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)">
      <summary>Restituisce una licenza per l'istanza del componente, se disponibile.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.LicenseContext" /> che specifica dove è possibile utilizzare l'oggetto concesso in licenza.</param>
      <param name="type">Oggetto <see cref="T:System.Type" /> che rappresenta il componente che richiede l'oggetto <see cref="T:System.ComponentModel.License" />.</param>
      <param name="instance">Oggetto che richiede l'oggetto <see cref="T:System.ComponentModel.License" />.</param>
      <param name="allowExceptions">
        <see langword="true" /> se deve essere generata un'eccezione <see cref="T:System.ComponentModel.LicenseException" /> quando non può essere concessa una licenza a un componente, in caso contrario <see langword="false" />.</param>
      <returns>Oggetto <see cref="T:System.ComponentModel.License" /> valido. Se tramite questo metodo non viene trovato un oggetto <see cref="T:System.ComponentModel.License" /> valido o un parametro <paramref name="context" /> valido, viene restituito <see langword="null" />.</returns>
    </member>
    <member name="M:System.ComponentModel.LicFileLicenseProvider.IsKeyValid(System.String,System.Type)">
      <summary>Consente di determinare se la chiave recuperata dal metodo <see cref="M:System.ComponentModel.LicFileLicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)" /> è valida per il tipo specificato.</summary>
      <param name="key">Oggetto <see cref="P:System.ComponentModel.License.LicenseKey" /> da verificare.</param>
      <param name="type">Oggetto <see cref="T:System.Type" /> che rappresenta il componente che richiede l'oggetto <see cref="T:System.ComponentModel.License" />.</param>
      <returns>
        <see langword="true" /> se la chiave è una proprietà <see cref="P:System.ComponentModel.License.LicenseKey" /> valida per il tipo specificato, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.ListBindableAttribute">
      <summary>Consente di specificare che un elenco può essere utilizzato come origine dati. Questo attributo dovrebbe essere utilizzato in una finestra di progettazione visiva per determinare se visualizzare uno specifico elenco in una selezione di associazione dati. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.ComponentModel.ListBindableAttribute.#ctor(System.Boolean)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ComponentModel.ListBindableAttribute" /> utilizzando un valore per indicare se l'elenco è associabile.</summary>
      <param name="listBindable">
        <see langword="true" /> se l'elenco è associabile, in caso contrario <see langword="false" />.</param>
    </member>
    <member name="M:System.ComponentModel.ListBindableAttribute.#ctor(System.ComponentModel.BindableSupport)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ComponentModel.ListBindableAttribute" /> utilizzando <see cref="T:System.ComponentModel.BindableSupport" /> per indicare se l'elenco è associabile.</summary>
      <param name="flags">Attributo <see cref="T:System.ComponentModel.BindableSupport" /> che indica se l'elenco è associabile.</param>
    </member>
    <member name="F:System.ComponentModel.ListBindableAttribute.Default">
      <summary>Rappresenta il valore predefinito dell'attributo <see cref="T:System.ComponentModel.ListBindableAttribute" />.</summary>
    </member>
    <member name="M:System.ComponentModel.ListBindableAttribute.Equals(System.Object)">
      <summary>Restituisce l'oggetto passato se è uguale all'oggetto <see cref="T:System.ComponentModel.ListBindableAttribute" />.</summary>
      <param name="obj">Oggetto rispetto al quale verificare l'uguaglianza.</param>
      <returns>
        <see langword="true" /> se l'oggetto passato è uguale all'oggetto <see cref="T:System.ComponentModel.ListBindableAttribute" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ListBindableAttribute.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Codice hash per l'oggetto <see cref="T:System.ComponentModel.ListBindableAttribute" /> corrente.</returns>
    </member>
    <member name="M:System.ComponentModel.ListBindableAttribute.IsDefaultAttribute">
      <summary>Indica se la proprietà <see cref="P:System.ComponentModel.ListBindableAttribute.ListBindable" /> è impostata sul valore predefinito.</summary>
      <returns>
        <see langword="true" /> se <see cref="P:System.ComponentModel.ListBindableAttribute.ListBindable" /> è impostata sul valore predefinito, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ListBindableAttribute.ListBindable">
      <summary>Indica se l'elenco è associabile.</summary>
      <returns>
        <see langword="true" /> se l'elenco è associabile, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="F:System.ComponentModel.ListBindableAttribute.No">
      <summary>Consente di specificare che l'elenco non è associabile. Questo campo <see langword="static" /> è di sola lettura.</summary>
    </member>
    <member name="F:System.ComponentModel.ListBindableAttribute.Yes">
      <summary>Consente di specificare che l'elenco è associabile. Questo campo <see langword="static" /> è di sola lettura.</summary>
    </member>
    <member name="T:System.ComponentModel.ListChangedEventArgs">
      <summary>Fornisce dati per l'evento <see cref="E:System.ComponentModel.IBindingList.ListChanged" />.</summary>
    </member>
    <member name="M:System.ComponentModel.ListChangedEventArgs.#ctor(System.ComponentModel.ListChangedType,System.ComponentModel.PropertyDescriptor)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.ListChangedEventArgs" /> dato il tipo di modifica e l'oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> interessato.</summary>
      <param name="listChangedType">Valore <see cref="T:System.ComponentModel.ListChangedType" /> che indica il tipo di modifica.</param>
      <param name="propDesc">Oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> aggiunto, rimosso o modificato.</param>
    </member>
    <member name="M:System.ComponentModel.ListChangedEventArgs.#ctor(System.ComponentModel.ListChangedType,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.ListChangedEventArgs" /> fornendo il tipo di modifica e l'indice dell'elemento interessato.</summary>
      <param name="listChangedType">Valore <see cref="T:System.ComponentModel.ListChangedType" /> che indica il tipo di modifica.</param>
      <param name="newIndex">Indice dell'elemento che è stato aggiunto, modificato o rimosso.</param>
    </member>
    <member name="M:System.ComponentModel.ListChangedEventArgs.#ctor(System.ComponentModel.ListChangedType,System.Int32,System.ComponentModel.PropertyDescriptor)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.ListChangedEventArgs" /> fornendo il tipo di modifica, l'indice dell'elemento interessato e un oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> che descrive l'elemento interessato.</summary>
      <param name="listChangedType">Valore <see cref="T:System.ComponentModel.ListChangedType" /> che indica il tipo di modifica.</param>
      <param name="newIndex">Indice dell'elemento che è stato aggiunto o modificato.</param>
      <param name="propDesc">Oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> che descrive l'elemento.</param>
    </member>
    <member name="M:System.ComponentModel.ListChangedEventArgs.#ctor(System.ComponentModel.ListChangedType,System.Int32,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.ListChangedEventArgs" /> dato il tipo della modifica, nonché il nuovo e il precedente indice dell'elemento spostato.</summary>
      <param name="listChangedType">Valore <see cref="T:System.ComponentModel.ListChangedType" /> che indica il tipo di modifica.</param>
      <param name="newIndex">Nuovo indice dell'elemento spostato.</param>
      <param name="oldIndex">Precedente indice dell'elemento spostato.</param>
    </member>
    <member name="P:System.ComponentModel.ListChangedEventArgs.ListChangedType">
      <summary>Ottiene il tipo di modifica.</summary>
      <returns>Valore <see cref="T:System.ComponentModel.ListChangedType" /> che indica il tipo di modifica.</returns>
    </member>
    <member name="P:System.ComponentModel.ListChangedEventArgs.NewIndex">
      <summary>Ottiene l'indice dell'elemento interessato dalla modifica.</summary>
      <returns>Indice dell'elemento interessato dalla modifica.</returns>
    </member>
    <member name="P:System.ComponentModel.ListChangedEventArgs.OldIndex">
      <summary>Ottiene il precedente indice di un elemento spostato.</summary>
      <returns>Precedente indice dell'elemento spostato.</returns>
    </member>
    <member name="P:System.ComponentModel.ListChangedEventArgs.PropertyDescriptor">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> aggiunto, modificato o eliminato.</summary>
      <returns>L'oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> interessato dalla modifica.</returns>
    </member>
    <member name="T:System.ComponentModel.ListChangedEventHandler">
      <summary>Rappresenta il metodo che gestirà l'evento <see cref="E:System.ComponentModel.IBindingList.ListChanged" /> della classe <see cref="T:System.ComponentModel.IBindingList" />.</summary>
      <param name="sender">Origine dell'evento.</param>
      <param name="e">Oggetto <see cref="T:System.ComponentModel.ListChangedEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="T:System.ComponentModel.ListChangedType">
      <summary>Specifica il modo in cui l'elenco è cambiato.</summary>
    </member>
    <member name="F:System.ComponentModel.ListChangedType.ItemAdded">
      <summary>Elemento aggiunto all'elenco. <see cref="P:System.ComponentModel.ListChangedEventArgs.NewIndex" /> contiene l'indice dell'elemento aggiunto.</summary>
    </member>
    <member name="F:System.ComponentModel.ListChangedType.ItemChanged">
      <summary>Elemento modificato nell'elenco. <see cref="P:System.ComponentModel.ListChangedEventArgs.NewIndex" /> contiene l'indice dell'elemento modificato.</summary>
    </member>
    <member name="F:System.ComponentModel.ListChangedType.ItemDeleted">
      <summary>Elemento eliminato dall'elenco. <see cref="P:System.ComponentModel.ListChangedEventArgs.NewIndex" /> contiene l'indice dell'elemento eliminato.</summary>
    </member>
    <member name="F:System.ComponentModel.ListChangedType.ItemMoved">
      <summary>Elemento spostato all'interno dell'elenco. <see cref="P:System.ComponentModel.ListChangedEventArgs.OldIndex" /> contiene l'indice precedente per l'elemento, mentre il campo <see cref="P:System.ComponentModel.ListChangedEventArgs.NewIndex" /> contiene il nuovo indice per l'elemento.</summary>
    </member>
    <member name="F:System.ComponentModel.ListChangedType.PropertyDescriptorAdded">
      <summary>È stato aggiunto un oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> e in questo modo è stato modificato lo schema.</summary>
    </member>
    <member name="F:System.ComponentModel.ListChangedType.PropertyDescriptorChanged">
      <summary>È stato modificato un oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> e in questo modo è stato modificato lo schema.</summary>
    </member>
    <member name="F:System.ComponentModel.ListChangedType.PropertyDescriptorDeleted">
      <summary>È stato eliminato un oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> e in questo modo è stato modificato lo schema.</summary>
    </member>
    <member name="F:System.ComponentModel.ListChangedType.Reset">
      <summary>Gran parte dell'elenco è stata modificata. Nei controlli in attesa dovrebbero essere aggiornati tutti i dati dall'elenco.</summary>
    </member>
    <member name="T:System.ComponentModel.ListSortDescription">
      <summary>Fornisce una descrizione dell'operazione di ordinamento applicata a un'origine dati.</summary>
    </member>
    <member name="M:System.ComponentModel.ListSortDescription.#ctor(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.ListSortDescription" /> con la descrizione e la direzione della proprietà specificate.</summary>
      <param name="property">Oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> che descrive la proprietà che determina l'ordinamento dell'origine dati.</param>
      <param name="direction">Uno dei valori di <see cref="T:System.ComponentModel.ListSortDescription" />.</param>
    </member>
    <member name="P:System.ComponentModel.ListSortDescription.PropertyDescriptor">
      <summary>Ottiene o imposta la descrizione astratta della proprietà della classe associata a questo oggetto <see cref="T:System.ComponentModel.ListSortDescription" /></summary>
      <returns>Oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> associato a questo oggetto <see cref="T:System.ComponentModel.ListSortDescription" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ListSortDescription.SortDirection">
      <summary>Ottiene o imposta la direzione dell'operazione di ordinamento associata a questo oggetto <see cref="T:System.ComponentModel.ListSortDescription" />.</summary>
      <returns>Uno dei valori di <see cref="T:System.ComponentModel.ListSortDirection" />.</returns>
    </member>
    <member name="T:System.ComponentModel.ListSortDescriptionCollection">
      <summary>Rappresenta una raccolta di oggetti <see cref="T:System.ComponentModel.ListSortDescription" />.</summary>
    </member>
    <member name="M:System.ComponentModel.ListSortDescriptionCollection.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.ListSortDescriptionCollection" />.</summary>
    </member>
    <member name="M:System.ComponentModel.ListSortDescriptionCollection.#ctor(System.ComponentModel.ListSortDescription[])">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.ListSortDescriptionCollection" /> con la matrice specificata di oggetti <see cref="T:System.ComponentModel.ListSortDescription" />.</summary>
      <param name="sorts">Matrice di oggetti <see cref="T:System.ComponentModel.ListSortDescription" /> che devono essere contenuti nell'insieme.</param>
    </member>
    <member name="M:System.ComponentModel.ListSortDescriptionCollection.Contains(System.Object)">
      <summary>Determina se <see cref="T:System.ComponentModel.ListSortDescriptionCollection" /> contiene un valore specifico.</summary>
      <param name="value">Oggetto <see cref="T:System.Object" /> da individuare nella raccolta.</param>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.Object" /> viene trovato nell'insieme; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ListSortDescriptionCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copia il contenuto dell’insieme nella matrice specificata, a partire dall'indice della matrice di destinazione specificato.</summary>
      <param name="array">Matrice di destinazione degli elementi copiati dall'insieme.</param>
      <param name="index">Indice della matrice di destinazione in corrispondenza del quale iniziare la copia.</param>
    </member>
    <member name="P:System.ComponentModel.ListSortDescriptionCollection.Count">
      <summary>Ottiene il numero di elementi nella raccolta.</summary>
      <returns>Numero di elementi nella raccolta.</returns>
    </member>
    <member name="M:System.ComponentModel.ListSortDescriptionCollection.IndexOf(System.Object)">
      <summary>Restituisce l'indice dell'elemento specificato nell'insieme.</summary>
      <param name="value">Oggetto <see cref="T:System.Object" /> da individuare nella raccolta.</param>
      <returns>Indice di <paramref name="value" />, se presente nell'elenco; in caso contrario, -1.</returns>
    </member>
    <member name="P:System.ComponentModel.ListSortDescriptionCollection.Item(System.Int32)">
      <summary>Ottiene o imposta l'oggetto <see cref="T:System.ComponentModel.ListSortDescription" /> specificato.</summary>
      <param name="index">Indice a base zero dell'oggetto <see cref="T:System.ComponentModel.ListSortDescription" /> da ottenere o impostare nell'insieme.</param>
      <returns>Oggetto <see cref="T:System.ComponentModel.ListSortDescription" /> con l'indice specificato.</returns>
      <exception cref="T:System.InvalidOperationException">Viene impostato un elemento nella classe <see cref="T:System.ComponentModel.ListSortDescriptionCollection" />, che è in sola lettura.</exception>
    </member>
    <member name="P:System.ComponentModel.ListSortDescriptionCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Ottiene un valore che indica se l'accesso all'insieme è thread-safe.</summary>
      <returns>
        <see langword="true" /> in tutti i casi.</returns>
    </member>
    <member name="P:System.ComponentModel.ListSortDescriptionCollection.System#Collections#ICollection#SyncRoot">
      <summary>Ottiene l'istanza corrente che può essere utilizzata per sincronizzare l'accesso all'insieme.</summary>
      <returns>Istanza corrente della classe <see cref="T:System.ComponentModel.ListSortDescriptionCollection" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ListSortDescriptionCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Ottiene un oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere utilizzato per scorrere l'insieme.</summary>
      <returns>Oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere usato per eseguire l'iterazione della raccolta.</returns>
    </member>
    <member name="M:System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#Add(System.Object)">
      <summary>Aggiunge un elemento alla raccolta.</summary>
      <param name="value">Elemento da aggiungere alla raccolta.</param>
      <returns>Posizione in cui è stato inserito il nuovo elemento.</returns>
      <exception cref="T:System.InvalidOperationException">In tutti i casi.</exception>
    </member>
    <member name="M:System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#Clear">
      <summary>Rimuove tutti gli elementi dalla raccolta.</summary>
      <exception cref="T:System.InvalidOperationException">In tutti i casi.</exception>
    </member>
    <member name="M:System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Inserisce un elemento nella raccolta in corrispondenza di un indice specificato.</summary>
      <param name="index">L'indice in base zero dell'oggetto <see cref="T:System.ComponentModel.ListSortDescription" /> da ottenere o impostare nella raccolta.</param>
      <param name="value">Elemento da inserire nell'insieme.</param>
      <exception cref="T:System.InvalidOperationException">In tutti i casi.</exception>
    </member>
    <member name="P:System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#IsFixedSize">
      <summary>Ottiene un valore che indica se la dimensione della raccolta è fissa.</summary>
      <returns>
        <see langword="true" /> in tutti i casi.</returns>
    </member>
    <member name="P:System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#IsReadOnly">
      <summary>Ottiene un valore che indica se la raccolta è di sola lettura.</summary>
      <returns>
        <see langword="true" /> in tutti i casi.</returns>
    </member>
    <member name="P:System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#Item(System.Int32)">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.ListSortDescription" /> specificato.</summary>
      <param name="index">Indice in base zero dell'oggetto <see cref="T:System.ComponentModel.ListSortDescription" /> da ottenere nella raccolta.</param>
      <returns>Oggetto <see cref="T:System.ComponentModel.ListSortDescription" /> con l'indice specificato.</returns>
    </member>
    <member name="M:System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#Remove(System.Object)">
      <summary>Consente di rimuovere la prima occorrenza di un elemento dall'insieme.</summary>
      <param name="value">Elemento da rimuovere dall'insieme.</param>
      <exception cref="T:System.InvalidOperationException">In tutti i casi.</exception>
    </member>
    <member name="M:System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>Rimuove un elemento dall'insieme in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero dell'oggetto <see cref="T:System.ComponentModel.ListSortDescription" /> da rimuovere dalla raccolta</param>
      <exception cref="T:System.InvalidOperationException">In tutti i casi.</exception>
    </member>
    <member name="T:System.ComponentModel.ListSortDirection">
      <summary>Specifica la direzione di un'operazione di ordinamento.</summary>
    </member>
    <member name="F:System.ComponentModel.ListSortDirection.Ascending">
      <summary>Ordinamento in senso crescente.</summary>
    </member>
    <member name="F:System.ComponentModel.ListSortDirection.Descending">
      <summary>Ordinamento in senso decrescente.</summary>
    </member>
    <member name="T:System.ComponentModel.LookupBindingPropertiesAttribute">
      <summary>Specifica le proprietà che supportano l'associazione basata sulla ricerca. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.ComponentModel.LookupBindingPropertiesAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.LookupBindingPropertiesAttribute" /> senza utilizzare parametri.</summary>
    </member>
    <member name="M:System.ComponentModel.LookupBindingPropertiesAttribute.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.LookupBindingPropertiesAttribute" />.</summary>
      <param name="dataSource">Nome della proprietà da utilizzare come origine dati.</param>
      <param name="displayMember">Nome della proprietà da utilizzare per il nome di visualizzazione.</param>
      <param name="valueMember">Nome della proprietà da utilizzare come origine dei valori.</param>
      <param name="lookupMember">Nome della proprietà da utilizzare per le ricerche.</param>
    </member>
    <member name="P:System.ComponentModel.LookupBindingPropertiesAttribute.DataSource">
      <summary>Ottiene il nome della proprietà dell'origine dati per il componente al quale è associato l'oggetto <see cref="T:System.ComponentModel.LookupBindingPropertiesAttribute" />.</summary>
      <returns>Proprietà dell'origine dati per il componente al quale è associato l'oggetto <see cref="T:System.ComponentModel.LookupBindingPropertiesAttribute" />.</returns>
    </member>
    <member name="F:System.ComponentModel.LookupBindingPropertiesAttribute.Default">
      <summary>Rappresenta il valore predefinito per la classe <see cref="T:System.ComponentModel.LookupBindingPropertiesAttribute" />.</summary>
    </member>
    <member name="P:System.ComponentModel.LookupBindingPropertiesAttribute.DisplayMember">
      <summary>Ottiene il nome della proprietà del membro di visualizzazione per il componente al quale è associato l'oggetto <see cref="T:System.ComponentModel.LookupBindingPropertiesAttribute" />.</summary>
      <returns>Nome della proprietà del membro di visualizzazione per il componente al quale è associato l'oggetto <see cref="T:System.ComponentModel.LookupBindingPropertiesAttribute" />.</returns>
    </member>
    <member name="M:System.ComponentModel.LookupBindingPropertiesAttribute.Equals(System.Object)">
      <summary>Determina se l'oggetto <see cref="T:System.Object" /> specificato è uguale all'istanza <see cref="T:System.ComponentModel.LookupBindingPropertiesAttribute" /> corrente.</summary>
      <param name="obj">Oggetto <see cref="T:System.Object" /> da confrontare con l'istanza <see cref="T:System.ComponentModel.LookupBindingPropertiesAttribute" /> corrente.</param>
      <returns>
        <see langword="true" /> se l'oggetto è uguale all'istanza corrente; in caso contrario, <see langword="false" />, indica che non sono uguali.</returns>
    </member>
    <member name="M:System.ComponentModel.LookupBindingPropertiesAttribute.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Codice hash per l'oggetto <see cref="T:System.ComponentModel.LookupBindingPropertiesAttribute" /> corrente.</returns>
    </member>
    <member name="P:System.ComponentModel.LookupBindingPropertiesAttribute.LookupMember">
      <summary>Ottiene il nome del membro della ricerca per il componente a cui è associato questo attributo.</summary>
      <returns>Nome del membro di ricerca per il componente al quale è associato l'oggetto <see cref="T:System.ComponentModel.LookupBindingPropertiesAttribute" />.</returns>
    </member>
    <member name="P:System.ComponentModel.LookupBindingPropertiesAttribute.ValueMember">
      <summary>Ottiene il nome della proprietà del membro del valore per il componente al quale è associato l'oggetto <see cref="T:System.ComponentModel.LookupBindingPropertiesAttribute" />.</summary>
      <returns>Ottiene il nome della proprietà del membro del valore per il componente al quale è associato l'oggetto <see cref="T:System.ComponentModel.LookupBindingPropertiesAttribute" />.</returns>
    </member>
    <member name="T:System.ComponentModel.MarshalByValueComponent">
      <summary>Implementa l'interfaccia <see cref="T:System.ComponentModel.IComponent" /> e fornisce l'implementazione base per i componenti definibili in modalità remota di cui viene effettuato il marshalling in base al valore (viene passata una copia dell'oggetto serializzato).</summary>
    </member>
    <member name="M:System.ComponentModel.MarshalByValueComponent.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.MarshalByValueComponent" />.</summary>
    </member>
    <member name="P:System.ComponentModel.MarshalByValueComponent.Container">
      <summary>Ottiene il contenitore del componente.</summary>
      <returns>Oggetto che implementa l'interfaccia <see cref="T:System.ComponentModel.IContainer" /> che rappresenta il contenitore del componente oppure <see langword="null" /> se il componente non dispone di un sito.</returns>
    </member>
    <member name="P:System.ComponentModel.MarshalByValueComponent.DesignMode">
      <summary>Ottiene un valore che indica se il componente è in modalità progettazione.</summary>
      <returns>
        <see langword="true" /> se il componente è in modalità progettazione, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MarshalByValueComponent.Dispose">
      <summary>Rilascia tutte le risorse usate da <see cref="T:System.ComponentModel.MarshalByValueComponent" />.</summary>
    </member>
    <member name="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)">
      <summary>Rilascia le risorse non gestite usate da <see cref="T:System.ComponentModel.MarshalByValueComponent" /> e, facoltativamente, le risorse gestite.</summary>
      <param name="disposing">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite, <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="E:System.ComponentModel.MarshalByValueComponent.Disposed">
      <summary>Aggiunge un gestore eventi per restare in attesa dell'evento <see cref="E:System.ComponentModel.MarshalByValueComponent.Disposed" /> sul componente.</summary>
    </member>
    <member name="P:System.ComponentModel.MarshalByValueComponent.Events">
      <summary>Ottiene l'elenco dei gestori eventi allegati a questo componente.</summary>
      <returns>Oggetto <see cref="T:System.ComponentModel.EventHandlerList" /> che fornisce i delegati per questo componente.</returns>
    </member>
    <member name="M:System.ComponentModel.MarshalByValueComponent.Finalize">
      <summary>Consente a un oggetto di effettuare un tentativo di liberare risorse ed eseguire altre operazioni di pulizia prima che venga recuperato da Garbage Collection.</summary>
    </member>
    <member name="M:System.ComponentModel.MarshalByValueComponent.GetService(System.Type)">
      <summary>Ottiene l'implementatore dell'interfaccia <see cref="T:System.IServiceProvider" />.</summary>
      <param name="service">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo di servizio desiderato.</param>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta l'implementatore di <see cref="T:System.IServiceProvider" />.</returns>
    </member>
    <member name="P:System.ComponentModel.MarshalByValueComponent.Site">
      <summary>Ottiene o imposta il sito del componente.</summary>
      <returns>Oggetto che implementa l'interfaccia <see cref="T:System.ComponentModel.ISite" /> che rappresenta il sito del componente.</returns>
    </member>
    <member name="M:System.ComponentModel.MarshalByValueComponent.ToString">
      <summary>Restituisce un oggetto <see cref="T:System.String" /> che contiene il nome dell'eventuale oggetto <see cref="T:System.ComponentModel.Component" />. Questo metodo non deve essere sottoposto a override.</summary>
      <returns>Un oggetto <see cref="T:System.String" /> contenente il nome dell'oggetto <see cref="T:System.ComponentModel.Component" />, se presente.  
 <see langword="null" /> se l'oggetto <see cref="T:System.ComponentModel.Component" /> è senza nome.</returns>
    </member>
    <member name="T:System.ComponentModel.MaskedTextProvider">
      <summary>Rappresenta un servizio di analisi mediante maschera utilizzabile da tutti i controlli che supportano l'utilizzo delle maschere, come il controllo <see cref="T:System.Windows.Forms.MaskedTextBox" />.</summary>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.MaskedTextProvider" /> mediante la maschera specificata.</summary>
      <param name="mask">Oggetto <see cref="T:System.String" /> che rappresenta la maschera di input.</param>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.MaskedTextProvider" /> utilizzando la maschera e il valore di restrizione ASCII specificati.</summary>
      <param name="mask">Oggetto <see cref="T:System.String" /> che rappresenta la maschera di input.</param>
      <param name="restrictToAscii">
        <see langword="true" /> per limitare l'input ai caratteri compatibili con il set ASCII; in caso contrario <see langword="false" /> per consentire l'intero set di caratteri Unicode.</param>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Char,System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.MaskedTextProvider" /> utilizzando la maschera, il carattere della password e il valore di utilizzo della richiesta specificati.</summary>
      <param name="mask">Oggetto <see cref="T:System.String" /> che rappresenta la maschera di input.</param>
      <param name="passwordChar">Oggetto <see cref="T:System.Char" /> visualizzato per i caratteri inseriti nella stringa della password.</param>
      <param name="allowPromptAsInput">
        <see langword="true" /> per consentire come input il carattere di richiesta; in caso contrario <see langword="false" />.</param>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.MaskedTextProvider" /> mediante la maschera e le impostazioni cultura specificate.</summary>
      <param name="mask">Oggetto <see cref="T:System.String" /> che rappresenta la maschera di input.</param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> utilizzato per impostare i caratteri separatori che dipendono dalle impostazioni internazionali.</param>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.MaskedTextProvider" /> utilizzando la maschera, le impostazioni cultura e il valore di restrizione ASCII specificati.</summary>
      <param name="mask">Oggetto <see cref="T:System.String" /> che rappresenta la maschera di input.</param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> utilizzato per impostare i caratteri separatori che dipendono dalle impostazioni internazionali.</param>
      <param name="restrictToAscii">
        <see langword="true" /> per limitare l'input ai caratteri compatibili con il set ASCII; in caso contrario <see langword="false" /> per consentire l'intero set di caratteri Unicode.</param>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean,System.Char,System.Char,System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.MaskedTextProvider" /> utilizzando la maschera, le impostazioni cultura, il valore di utilizzo della richiesta, il carattere di richiesta, il carattere della password e il valore di restrizione ASCII specificati.</summary>
      <param name="mask">Oggetto <see cref="T:System.String" /> che rappresenta la maschera di input.</param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> utilizzato per impostare i caratteri separatori che dipendono dalle impostazioni internazionali.</param>
      <param name="allowPromptAsInput">Valore <see cref="T:System.Boolean" /> che specifica se il carattere di richiesta può essere utilizzato come carattere di input.</param>
      <param name="promptChar">Oggetto <see cref="T:System.Char" /> visualizzato come segnaposto per l'input dell'utente.</param>
      <param name="passwordChar">Oggetto <see cref="T:System.Char" /> visualizzato per i caratteri inseriti nella stringa della password.</param>
      <param name="restrictToAscii">
        <see langword="true" /> per limitare l'input ai caratteri compatibili con il set ASCII; in caso contrario <see langword="false" /> per consentire l'intero set di caratteri Unicode.</param>
      <exception cref="T:System.ArgumentException">Il parametro della maschera è <see langword="null" /> o <see cref="F:System.String.Empty" />.  
In alternativa 
La maschera contiene uno o più caratteri non stampabili.</exception>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Char,System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.MaskedTextProvider" /> utilizzando la maschera, le impostazioni cultura, il carattere della password e il valore di utilizzo della richiesta specificati.</summary>
      <param name="mask">Oggetto <see cref="T:System.String" /> che rappresenta la maschera di input.</param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> utilizzato per impostare i caratteri separatori che dipendono dalle impostazioni internazionali.</param>
      <param name="passwordChar">Oggetto <see cref="T:System.Char" /> visualizzato per i caratteri inseriti nella stringa della password.</param>
      <param name="allowPromptAsInput">
        <see langword="true" /> per consentire come input il carattere di richiesta; in caso contrario <see langword="false" />.</param>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.Add(System.Char)">
      <summary>Aggiunge il carattere di input specificato alla fine della stringa formattata.</summary>
      <param name="input">Valore <see cref="T:System.Char" /> da aggiungere alla stringa formattata.</param>
      <returns>
        <see langword="true" /> se il carattere di input è stato aggiunto; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.Add(System.Char,System.Int32@,System.ComponentModel.MaskedTextResultHint@)">
      <summary>Aggiunge il carattere di input specificato alla fine della stringa formattata, quindi genera informazioni sulla posizione e sulla descrizione.</summary>
      <param name="input">Valore <see cref="T:System.Char" /> da aggiungere alla stringa formattata.</param>
      <param name="testPosition">Posizione in base zero della stringa formattata nella quale si è tentato di aggiungere il carattere. Parametro di output.</param>
      <param name="resultHint">Oggetto <see cref="T:System.ComponentModel.MaskedTextResultHint" /> che descrive sinteticamente il risultato dell'operazione. Parametro di output.</param>
      <returns>
        <see langword="true" /> se il carattere di input è stato aggiunto; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.Add(System.String)">
      <summary>Aggiunge i caratteri nella stringa di input specificata alla fine della stringa formattata.</summary>
      <param name="input">Oggetto <see cref="T:System.String" /> contenente i valori dei caratteri da aggiungere alla stringa formattata.</param>
      <returns>
        <see langword="true" /> se sono stati aggiunti tutti i caratteri della stringa di input; in caso contrario <see langword="false" /> per indicare che non sono stati aggiunti caratteri.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="input" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.Add(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)">
      <summary>Aggiunge i caratteri nella stringa di input specificata alla fine della stringa formattata, quindi genera informazioni sulla posizione e sulla descrizione.</summary>
      <param name="input">Oggetto <see cref="T:System.String" /> contenente i valori dei caratteri da aggiungere alla stringa formattata.</param>
      <param name="testPosition">Posizione in base zero della stringa formattata nella quale si è tentato di aggiungere il carattere. Parametro di output.</param>
      <param name="resultHint">Oggetto <see cref="T:System.ComponentModel.MaskedTextResultHint" /> che descrive sinteticamente il risultato dell'operazione. Parametro di output.</param>
      <returns>
        <see langword="true" /> se sono stati aggiunti tutti i caratteri della stringa di input; in caso contrario <see langword="false" /> per indicare che non sono stati aggiunti caratteri.</returns>
    </member>
    <member name="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput">
      <summary>Ottiene un valore che indica se il carattere di richiesta può essere utilizzato come carattere di input.</summary>
      <returns>
        <see langword="true" /> se l'utente può immettere la proprietà <see cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" /> nel controllo; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</returns>
    </member>
    <member name="P:System.ComponentModel.MaskedTextProvider.AsciiOnly">
      <summary>Ottiene un valore che indica se la maschera accetta caratteri non appartenenti al set di caratteri ASCII.</summary>
      <returns>
        <see langword="true" /> se vengono accettati solo i caratteri ASCII; <see langword="false" /> se l'oggetto <see cref="T:System.ComponentModel.MaskedTextProvider" /> può accettare qualsiasi carattere arbitrario Unicode. Il valore predefinito è <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount">
      <summary>Ottiene il numero delle posizioni dei caratteri modificabili a cui è già stato assegnato un valore di input.</summary>
      <returns>Oggetto <see cref="T:System.Int32" /> contenente il numero delle posizioni dei caratteri modificabili della maschera di input a cui è già stato assegnato il valore del carattere nella stringa formattata.</returns>
    </member>
    <member name="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount">
      <summary>Ottiene il numero delle posizioni dei caratteri modificabili nella maschera di input a cui non è ancora stato assegnato un valore di input.</summary>
      <returns>Oggetto <see cref="T:System.Int32" /> contenente il numero delle posizioni dei caratteri modificabili a cui non è ancora stato assegnato un valore del carattere.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.Clear">
      <summary>Cancella dalla stringa formattata tutti i caratteri di input modificabili e li sostituisce con i caratteri di richiesta.</summary>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.Clear(System.ComponentModel.MaskedTextResultHint@)">
      <summary>Cancella dalla stringa formattata tutti i caratteri di input modificabili e li sostituisce con i caratteri di richiesta, quindi genera informazioni descrittive.</summary>
      <param name="resultHint">Oggetto <see cref="T:System.ComponentModel.MaskedTextResultHint" /> che descrive sinteticamente il risultato dell'operazione. Parametro di output.</param>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.Clone">
      <summary>Crea una copia dell'oggetto <see cref="T:System.ComponentModel.MaskedTextProvider" /> corrente.</summary>
      <returns>Oggetto <see cref="T:System.ComponentModel.MaskedTextProvider" /> creato da questo metodo, di cui viene eseguito il cast come oggetto.</returns>
    </member>
    <member name="P:System.ComponentModel.MaskedTextProvider.Culture">
      <summary>Ottiene le impostazioni cultura che determinano il valore dei segnaposti e dei separatori localizzabili nella maschera di input.</summary>
      <returns>Oggetto <see cref="T:System.Globalization.CultureInfo" /> contenente le informazioni sulle impostazioni cultura associate alla maschera di input.</returns>
    </member>
    <member name="P:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar">
      <summary>Ottiene il carattere della password predefinito utilizzato per nascondere l'input dell'utente.</summary>
      <returns>Oggetto <see cref="T:System.Char" /> che rappresenta il carattere della password predefinito.</returns>
    </member>
    <member name="P:System.ComponentModel.MaskedTextProvider.EditPositionCount">
      <summary>Ottiene il numero di posizioni modificabili nella stringa formattata.</summary>
      <returns>Oggetto <see cref="T:System.Int32" /> contenente il numero di posizioni modificabili nella stringa formattata.</returns>
    </member>
    <member name="P:System.ComponentModel.MaskedTextProvider.EditPositions">
      <summary>Ottiene l'enumeratore appena creato per le posizioni modificabili della stringa formattata.</summary>
      <returns>Oggetto <see cref="T:System.Collections.IEnumerator" /> che supporta l'enumerazione delle posizioni modificabili nella stringa formattata.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)">
      <summary>Restituisce la prima posizione modificabile assegnata successiva a quella specificata utilizzando la direzione di ricerca indicata.</summary>
      <param name="position">Posizione in base zero della stringa formattata dalla quale ha inizio la ricerca.</param>
      <param name="direction">Valore <see cref="T:System.Boolean" /> che indica la direzione di ricerca; <see langword="true" /> per la ricerca in avanti o <see langword="false" /> per la ricerca all'indietro.</param>
      <returns>In caso di esito positivo, valore <see cref="T:System.Int32" /> che rappresenta il valore in base zero della prima posizione modificabile assegnata individuata; in caso contrario <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)">
      <summary>Restituisce la prima posizione modificabile assegnata compresa tra quelle specificate utilizzando la direzione di ricerca indicata.</summary>
      <param name="startPosition">Posizione in base zero della stringa formattata dalla quale ha inizio la ricerca.</param>
      <param name="endPosition">Posizione in base zero della stringa formattata nella quale si conclude la ricerca.</param>
      <param name="direction">Valore <see cref="T:System.Boolean" /> che indica la direzione di ricerca; <see langword="true" /> per la ricerca in avanti o <see langword="false" /> per la ricerca all'indietro.</param>
      <returns>In caso di esito positivo, valore <see cref="T:System.Int32" /> che rappresenta il valore in base zero della prima posizione modificabile assegnata individuata; in caso contrario <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)">
      <summary>Restituisce la posizione della prima posizione modificabile successiva a quella specificata utilizzando la direzione di ricerca indicata.</summary>
      <param name="position">Posizione in base zero della stringa formattata dalla quale ha inizio la ricerca.</param>
      <param name="direction">Valore <see cref="T:System.Boolean" /> che indica la direzione di ricerca; <see langword="true" /> per la ricerca in avanti o <see langword="false" /> per la ricerca all'indietro.</param>
      <returns>In caso di esito positivo, valore <see cref="T:System.Int32" /> in base zero della prima posizione modificabile incontrata; in caso contrario <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)">
      <summary>Restituisce la prima posizione modificabile compresa tra quelle specificate utilizzando la direzione di ricerca indicata.</summary>
      <param name="startPosition">Posizione in base zero della stringa formattata dalla quale ha inizio la ricerca.</param>
      <param name="endPosition">Posizione in base zero della stringa formattata nella quale si conclude la ricerca.</param>
      <param name="direction">Valore <see cref="T:System.Boolean" /> che indica la direzione di ricerca; <see langword="true" /> per la ricerca in avanti o <see langword="false" /> per la ricerca all'indietro.</param>
      <returns>In caso di esito positivo, valore <see cref="T:System.Int32" /> in base zero della prima posizione modificabile incontrata; in caso contrario <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)">
      <summary>Restituisce la prima posizione non modificabile successiva a quella specificata utilizzando la direzione di ricerca indicata.</summary>
      <param name="position">Posizione in base zero della stringa formattata dalla quale ha inizio la ricerca.</param>
      <param name="direction">Valore <see cref="T:System.Boolean" /> che indica la direzione di ricerca; <see langword="true" /> per la ricerca in avanti o <see langword="false" /> per la ricerca all'indietro.</param>
      <returns>In caso di esito positivo, valore <see cref="T:System.Int32" /> in base zero della prima posizione letterale incontrata; in caso contrario <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)">
      <summary>Restituisce la prima posizione non modificabile compresa tra quelle specificate utilizzando la direzione di ricerca indicata.</summary>
      <param name="startPosition">Posizione in base zero della stringa formattata dalla quale ha inizio la ricerca.</param>
      <param name="endPosition">Posizione in base zero della stringa formattata nella quale si conclude la ricerca.</param>
      <param name="direction">Valore <see cref="T:System.Boolean" /> che indica la direzione di ricerca; <see langword="true" /> per la ricerca in avanti o <see langword="false" /> per la ricerca all'indietro.</param>
      <returns>In caso di esito positivo, valore <see cref="T:System.Int32" /> in base zero della prima posizione letterale incontrata; in caso contrario <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)">
      <summary>Restituisce la prima posizione modificabile non assegnata successiva a quella specificata utilizzando la direzione di ricerca indicata.</summary>
      <param name="position">Posizione in base zero della stringa formattata dalla quale ha inizio la ricerca.</param>
      <param name="direction">Valore <see cref="T:System.Boolean" /> che indica la direzione di ricerca; <see langword="true" /> per la ricerca in avanti o <see langword="false" /> per la ricerca all'indietro.</param>
      <returns>In caso di esito positivo, valore <see cref="T:System.Int32" /> in base zero della prima posizione modificabile non assegnata incontrata; in caso contrario <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)">
      <summary>Restituisce la prima posizione modificabile non assegnata compresa tra quelle specificate utilizzando la direzione di ricerca indicata.</summary>
      <param name="startPosition">Posizione in base zero della stringa formattata dalla quale ha inizio la ricerca.</param>
      <param name="endPosition">Posizione in base zero della stringa formattata nella quale si conclude la ricerca.</param>
      <param name="direction">Valore <see cref="T:System.Boolean" /> che indica la direzione di ricerca; <see langword="true" /> per la ricerca in avanti o <see langword="false" /> per la ricerca all'indietro.</param>
      <returns>In caso di esito positivo, valore <see cref="T:System.Int32" /> in base zero della prima posizione modificabile non assegnata incontrata; in caso contrario <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint(System.ComponentModel.MaskedTextResultHint)">
      <summary>Determina se l'oggetto <see cref="T:System.ComponentModel.MaskedTextResultHint" /> specificato indica esito positivo o negativo.</summary>
      <param name="hint">Valore dell'oggetto <see cref="T:System.ComponentModel.MaskedTextResultHint" /> che generalmente si ottiene come parametro di output da un'operazione precedente.</param>
      <returns>
        <see langword="true" /> se il valore <see cref="T:System.ComponentModel.MaskedTextResultHint" /> specificato indica esito positivo; <see langword="false" /> se indica esito negativo.</returns>
    </member>
    <member name="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals">
      <summary>Ottiene o imposta un valore che indica se è possibile includere nella stringa formattata i caratteri letterali della maschera di input.</summary>
      <returns>
        <see langword="true" /> se sono inclusi i caratteri letterali; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</returns>
    </member>
    <member name="P:System.ComponentModel.MaskedTextProvider.IncludePrompt">
      <summary>Ottiene o imposta un valore che indica se viene utilizzata la proprietà <see cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" /> per rappresentare l'assenza dell'input dell'utente nella visualizzazione della stringa formattata.</summary>
      <returns>
        <see langword="true" /> se viene utilizzato il carattere di richiesta per rappresentare le posizioni nelle quali non è presente l'input dell'utente; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32)">
      <summary>Inserisce il carattere specificato nella posizione indicata della stringa formattata.</summary>
      <param name="input">Oggetto <see cref="T:System.Char" /> da inserire.</param>
      <param name="position">Posizione in base zero della stringa formattata nella quale inserire il carattere.</param>
      <returns>
        <see langword="true" /> se l'inserimento è stato effettuato correttamente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)">
      <summary>Inserisce il carattere specificato nella posizione indicata della stringa formattata, restituendo l'ultima posizione di inserimento e lo stato dell'operazione.</summary>
      <param name="input">Oggetto <see cref="T:System.Char" /> da inserire.</param>
      <param name="position">Posizione in base zero della stringa formattata nella quale inserire il carattere.</param>
      <param name="testPosition">Se il metodo ha esito positivo, ultima posizione nella quale è stato inserito un carattere; in caso contrario, prima posizione nella quale l'inserimento ha avuto esito negativo. Parametro di output.</param>
      <param name="resultHint">Oggetto <see cref="T:System.ComponentModel.MaskedTextResultHint" /> che descrive sinteticamente il risultato dell'operazione di inserimento. Parametro di output.</param>
      <returns>
        <see langword="true" /> se l'inserimento è stato effettuato correttamente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32)">
      <summary>Inserisce la stringa specificata nella posizione indicata della stringa formattata.</summary>
      <param name="input">Oggetto <see cref="T:System.String" /> da inserire.</param>
      <param name="position">Posizione in base zero della stringa formattata nella quale inserire la stringa di input.</param>
      <returns>
        <see langword="true" /> se l'inserimento è stato effettuato correttamente; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="input" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)">
      <summary>Inserisce la stringa specificata nella posizione indicata della stringa formattata, restituendo l'ultima posizione di inserimento e lo stato dell'operazione.</summary>
      <param name="input">Oggetto <see cref="T:System.String" /> da inserire.</param>
      <param name="position">Posizione in base zero della stringa formattata nella quale inserire la stringa di input.</param>
      <param name="testPosition">Se il metodo ha esito positivo, ultima posizione nella quale è stato inserito un carattere; in caso contrario, prima posizione nella quale l'inserimento ha avuto esito negativo. Parametro di output.</param>
      <param name="resultHint">Oggetto <see cref="T:System.ComponentModel.MaskedTextResultHint" /> che descrive sinteticamente il risultato dell'operazione di inserimento. Parametro di output.</param>
      <returns>
        <see langword="true" /> se l'inserimento è stato effettuato correttamente; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="input" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.MaskedTextProvider.InvalidIndex">
      <summary>Ottiene il limite superiore dell'intervallo degli indici non validi.</summary>
      <returns>Valore che rappresenta l'indice non valido superiore, come determinato dall'implementazione del provider. Se ad esempio l'indice valido inferiore è 0, questa proprietà restituisce -1.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)">
      <summary>Determina se la posizione specificata è disponibile per l'assegnazione.</summary>
      <param name="position">Posizione in base zero da verificare nella maschera.</param>
      <returns>
        <see langword="true" /> se la posizione specificata nella stringa formattata è modificabile e non è ancora stata assegnata; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)">
      <summary>Determina se la posizione specificata è modificabile.</summary>
      <param name="position">Posizione in base zero da verificare nella maschera.</param>
      <returns>
        <see langword="true" /> se la posizione specificata nella stringa formattata è modificabile; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.MaskedTextProvider.IsPassword">
      <summary>Ottiene o imposta un valore che determina se applicare la protezione tramite password alla stringa formattata.</summary>
      <returns>
        <see langword="true" /> se la stringa di input deve essere considerata come stringa della password; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)">
      <summary>Determina se il carattere specificato è un carattere di input valido.</summary>
      <param name="c">Valore <see cref="T:System.Char" /> su cui eseguire il test.</param>
      <returns>
        <see langword="true" /> se il carattere specificato contiene un valore di input valido; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.IsValidMaskChar(System.Char)">
      <summary>Determina se il carattere specificato è un carattere della maschera valido.</summary>
      <param name="c">Valore <see cref="T:System.Char" /> su cui eseguire il test.</param>
      <returns>
        <see langword="true" /> se il carattere specificato contiene un valore della maschera valido; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)">
      <summary>Determina se il carattere specificato è un carattere della password valido.</summary>
      <param name="c">Valore <see cref="T:System.Char" /> su cui eseguire il test.</param>
      <returns>
        <see langword="true" /> se il carattere specificato contiene un valore della password valido; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)">
      <summary>Ottiene l'elemento situato nella posizione specificata della stringa formattata.</summary>
      <param name="index">Indice in base zero dell'elemento da recuperare.</param>
      <returns>Oggetto <see cref="T:System.Char" /> situato nella posizione specificata della stringa formattata.</returns>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="index" /> è minore di zero oppure maggiore o uguale alla proprietà <see cref="P:System.ComponentModel.MaskedTextProvider.Length" /> della maschera.</exception>
    </member>
    <member name="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition">
      <summary>Ottiene l'indice nella maschera del carattere di input all'estrema destra assegnato alla maschera.</summary>
      <returns>Se alla maschera è stato assegnato almeno un carattere di input, un oggetto <see cref="T:System.Int32" /> contenente l'indice della posizione assegnata all'estrema destra; in caso contrario, se non è stata assegnata alcuna posizione, <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</returns>
    </member>
    <member name="P:System.ComponentModel.MaskedTextProvider.Length">
      <summary>Ottiene la lunghezza della maschera, senza i caratteri modificatori della maschera.</summary>
      <returns>Oggetto <see cref="T:System.Int32" /> contenente il numero di posizioni della maschera, esclusi i caratteri che modificano l'input della maschera.</returns>
    </member>
    <member name="P:System.ComponentModel.MaskedTextProvider.Mask">
      <summary>Ottiene la maschera di input.</summary>
      <returns>Oggetto <see cref="T:System.String" /> contenente l'intera maschera.</returns>
    </member>
    <member name="P:System.ComponentModel.MaskedTextProvider.MaskCompleted">
      <summary>Ottiene un valore che indica se nella stringa formattata sono stati inseriti tutti gli input obbligatori.</summary>
      <returns>
        <see langword="true" /> se nella maschera sono stati inseriti tutti gli input obbligatori; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.MaskedTextProvider.MaskFull">
      <summary>Ottiene un valore che indica se nella stringa formattata sono stati inseriti tutti gli input obbligatori e facoltativi.</summary>
      <returns>
        <see langword="true" /> se sono stati inseriti tutti gli input obbligatori e facoltativi; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.MaskedTextProvider.PasswordChar">
      <summary>Ottiene o imposta il carattere da sostituire ai caratteri di input effettivi.</summary>
      <returns>Valore <see cref="T:System.Char" /> utilizzato come carattere della password.</returns>
      <exception cref="T:System.InvalidOperationException">Il carattere della password specificato quando si imposta questa proprietà è uguale al carattere di richiesta corrente, ossia <see cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" />. I due caratteri devono essere differenti.</exception>
      <exception cref="T:System.ArgumentException">Il carattere specificato quando si imposta questa proprietà non è un carattere della password valido, in base a quanto determinato dal metodo <see cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" />.</exception>
    </member>
    <member name="P:System.ComponentModel.MaskedTextProvider.PromptChar">
      <summary>Ottiene o imposta il carattere utilizzato per rappresentare l'assenza di input dell'utente per tutte le posizioni di modifica disponibili.</summary>
      <returns>Carattere utilizzato per richiedere l'input all'utente. L'impostazione predefinita è un carattere di sottolineatura (_).</returns>
      <exception cref="T:System.InvalidOperationException">Il carattere di richiesta specificato quando si imposta questa proprietà è uguale al carattere della password corrente, <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />. I due caratteri devono essere differenti.</exception>
      <exception cref="T:System.ArgumentException">Il carattere specificato quando si imposta questa proprietà non è un carattere della password valido, in base a quanto determinato dal metodo <see cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" />.</exception>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.Remove">
      <summary>Rimuove dalla stringa formattata l'ultimo carattere assegnato.</summary>
      <returns>
        <see langword="true" /> se il carattere è stato rimosso; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.Remove(System.Int32@,System.ComponentModel.MaskedTextResultHint@)">
      <summary>Rimuove dalla stringa formattata l'ultimo carattere assegnato, quindi genera informazioni sulla posizione di rimozione e sulla descrizione.</summary>
      <param name="testPosition">Posizione in base zero della stringa formattata dalla quale è stato effettivamente rimosso il carattere. Parametro di output.</param>
      <param name="resultHint">Oggetto <see cref="T:System.ComponentModel.MaskedTextResultHint" /> che descrive sinteticamente il risultato dell'operazione. Parametro di output.</param>
      <returns>
        <see langword="true" /> se il carattere è stato rimosso; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32)">
      <summary>Rimuove il carattere assegnato dalla posizione indicata della stringa formattata.</summary>
      <param name="position">Posizione in base zero del carattere assegnato da rimuovere.</param>
      <returns>
        <see langword="true" /> se il carattere è stato rimosso; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32)">
      <summary>Rimuove dalla stringa formattata tutti i caratteri assegnati compresi tra le posizioni specificate.</summary>
      <param name="startPosition">Posizione in base zero del primo carattere assegnato da rimuovere.</param>
      <param name="endPosition">Posizione in base zero dell'ultimo carattere assegnato da rimuovere.</param>
      <returns>
        <see langword="true" /> se il carattere è stato rimosso; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)">
      <summary>Rimuove dalla stringa formattata i caratteri assegnati compresi tra le posizioni specificate, quindi genera informazioni sulla posizione di rimozione e sulla descrizione.</summary>
      <param name="startPosition">Posizione in base zero del primo carattere assegnato da rimuovere.</param>
      <param name="endPosition">Posizione in base zero dell'ultimo carattere assegnato da rimuovere.</param>
      <param name="testPosition">In caso di esito positivo, posizione in base zero della stringa formattata dalla quale sono stati effettivamente rimossi i caratteri; in caso contrario, prima posizione nella quale l'operazione ha avuto esito negativo. Parametro di output.</param>
      <param name="resultHint">Oggetto <see cref="T:System.ComponentModel.MaskedTextResultHint" /> che descrive sinteticamente il risultato dell'operazione. Parametro di output.</param>
      <returns>
        <see langword="true" /> se il carattere è stato rimosso; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32)">
      <summary>Sostituisce un singolo carattere nella posizione corrispondente o in quelle successive a quella specificata con il valore del carattere fornito.</summary>
      <param name="input">Valore <see cref="T:System.Char" /> che sostituisce il valore esistente.</param>
      <param name="position">Posizione in base zero da ricercare per la sostituzione del primo carattere modificabile.</param>
      <returns>
        <see langword="true" /> se il carattere è stato sostituito; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)">
      <summary>Sostituisce un singolo carattere compreso tra le posizioni iniziale e finale specificate con il valore del carattere fornito, quindi genera informazioni sulla posizione di rimozione e sulla descrizione.</summary>
      <param name="input">Valore <see cref="T:System.Char" /> che sostituisce il valore esistente.</param>
      <param name="startPosition">Posizione in base zero della stringa formattata dalla quale ha inizio la sostituzione.</param>
      <param name="endPosition">Posizione in base zero della stringa formattata nella quale si conclude la sostituzione.</param>
      <param name="testPosition">In caso di esito positivo, posizione in base zero della stringa formattata nella quale è stato effettivamente sostituito l'ultimo carattere; in caso contrario, prima posizione nella quale l'operazione ha avuto esito negativo. Parametro di output.</param>
      <param name="resultHint">Oggetto <see cref="T:System.ComponentModel.MaskedTextResultHint" /> che descrive sinteticamente il risultato dell'operazione di sostituzione. Parametro di output.</param>
      <returns>
        <see langword="true" /> se il carattere è stato sostituito; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)">
      <summary>Sostituisce un singolo carattere nella posizione corrispondente o in quelle successive a quella specificata con il valore del carattere fornito, quindi genera informazioni sulla posizione di rimozione e sulla descrizione.</summary>
      <param name="input">Valore <see cref="T:System.Char" /> che sostituisce il valore esistente.</param>
      <param name="position">Posizione in base zero da ricercare per la sostituzione del primo carattere modificabile.</param>
      <param name="testPosition">In caso di esito positivo, posizione in base zero della stringa formattata nella quale è stato effettivamente sostituito l'ultimo carattere; in caso contrario, prima posizione nella quale l'operazione ha avuto esito negativo. Parametro di output.</param>
      <param name="resultHint">Oggetto <see cref="T:System.ComponentModel.MaskedTextResultHint" /> che descrive sinteticamente il risultato dell'operazione di sostituzione. Parametro di output.</param>
      <returns>
        <see langword="true" /> se il carattere è stato sostituito; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32)">
      <summary>Sostituisce un intervallo di caratteri modificabili a partire dalla posizione indicata con la stringa specificata.</summary>
      <param name="input">Valore dell'oggetto <see cref="T:System.String" /> utilizzato per sostituire i caratteri modificabili esistenti.</param>
      <param name="position">Posizione in base zero da ricercare per la sostituzione del primo carattere modificabile.</param>
      <returns>
        <see langword="true" /> se sono stati sostituiti tutti i caratteri; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="input" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)">
      <summary>Sostituisce un intervallo di caratteri modificabili compresi tra le posizioni iniziale finale specificate, quindi genera informazioni sulla posizione di rimozione e sulla descrizione.</summary>
      <param name="input">Valore dell'oggetto <see cref="T:System.String" /> utilizzato per sostituire i caratteri modificabili esistenti.</param>
      <param name="startPosition">Posizione in base zero della stringa formattata dalla quale ha inizio la sostituzione.</param>
      <param name="endPosition">Posizione in base zero della stringa formattata nella quale si conclude la sostituzione.</param>
      <param name="testPosition">In caso di esito positivo, posizione in base zero della stringa formattata nella quale è stato effettivamente sostituito l'ultimo carattere; in caso contrario, prima posizione nella quale l'operazione ha avuto esito negativo. Parametro di output.</param>
      <param name="resultHint">Oggetto <see cref="T:System.ComponentModel.MaskedTextResultHint" /> che descrive sinteticamente il risultato dell'operazione di sostituzione. Parametro di output.</param>
      <returns>
        <see langword="true" /> se sono stati sostituiti tutti i caratteri; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)">
      <summary>Sostituisce un intervallo di caratteri modificabili a partire dalla posizione indicata con la stringa specificata, quindi genera informazioni sulla posizione di rimozione e sulla descrizione.</summary>
      <param name="input">Valore dell'oggetto <see cref="T:System.String" /> utilizzato per sostituire i caratteri modificabili esistenti.</param>
      <param name="position">Posizione in base zero da ricercare per la sostituzione del primo carattere modificabile.</param>
      <param name="testPosition">In caso di esito positivo, posizione in base zero della stringa formattata nella quale è stato effettivamente sostituito l'ultimo carattere; in caso contrario, prima posizione nella quale l'operazione ha avuto esito negativo. Parametro di output.</param>
      <param name="resultHint">Oggetto <see cref="T:System.ComponentModel.MaskedTextResultHint" /> che descrive sinteticamente il risultato dell'operazione di sostituzione. Parametro di output.</param>
      <returns>
        <see langword="true" /> se sono stati sostituiti tutti i caratteri; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.MaskedTextProvider.ResetOnPrompt">
      <summary>Ottiene o imposta un valore che determina la modalità di gestione di un carattere di input che corrisponda al carattere di richiesta.</summary>
      <returns>
        <see langword="true" /> se il carattere di richiesta inserito come input determina la reimpostazione della posizione modificabile corrente della maschera; in caso contrario, <see langword="false" /> per indicare che il carattere di richiesta deve essere elaborato come carattere di input normale. Il valore predefinito è <see langword="true" />.</returns>
    </member>
    <member name="P:System.ComponentModel.MaskedTextProvider.ResetOnSpace">
      <summary>Ottiene o imposta un valore che determina la modalità di gestione di un carattere di input di spaziatura.</summary>
      <returns>
        <see langword="true" /> se il carattere di input di spaziatura determina la reimpostazione della posizione modificabile corrente della maschera; in caso contrario, <see langword="false" /> per indicarne l'elaborazione come carattere di input normale. Il valore predefinito è <see langword="true" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.Set(System.String)">
      <summary>Imposta la stringa formattata sulla stringa di input specificata.</summary>
      <param name="input">Valore <see cref="T:System.String" /> utilizzato per impostare la stringa formattata.</param>
      <returns>
        <see langword="true" /> se sono stati impostati tutti i caratteri; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="input" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.Set(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)">
      <summary>Imposta la stringa formattata sulla stringa di input specificata, quindi genera informazioni sulla posizione di rimozione e sulla descrizione.</summary>
      <param name="input">Valore <see cref="T:System.String" /> utilizzato per impostare la stringa formattata.</param>
      <param name="testPosition">In caso di esito positivo, posizione in base zero della stringa formattata nella quale è stato effettivamente impostato l'ultimo carattere; in caso contrario, prima posizione nella quale l'operazione ha avuto esito negativo. Parametro di output.</param>
      <param name="resultHint">Oggetto <see cref="T:System.ComponentModel.MaskedTextResultHint" /> che descrive sinteticamente il risultato dell'operazione di impostazione. Parametro di output.</param>
      <returns>
        <see langword="true" /> se sono stati impostati tutti i caratteri; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="input" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.MaskedTextProvider.SkipLiterals">
      <summary>Ottiene o imposta un valore che indica se è possibile sovrascrivere le posizioni dei caratteri letterali nella maschera con gli stessi valori.</summary>
      <returns>
        <see langword="true" /> per consentire nuovamente l'aggiunta dei caratteri letterali; in caso contrario, <see langword="false" /> per non consentire la sovrascrittura dei caratteri letterali. Il valore predefinito è <see langword="true" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.ToDisplayString">
      <summary>Restituisce la stringa formattata in formato visualizzabile.</summary>
      <returns>Oggetto <see cref="T:System.String" /> formattato che include le richieste e i caratteri letterali della maschera.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.ToString">
      <summary>Restituisce la stringa formattata che include tutti i valori dei caratteri assegnati.</summary>
      <returns>Oggetto <see cref="T:System.String" /> formattato che include tutti i valori dei caratteri assegnati.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean)">
      <summary>Restituisce la stringa formattata e include, facoltativamente, i caratteri della password.</summary>
      <param name="ignorePasswordChar">
        <see langword="true" /> per restituire i caratteri modificabili effettivi; in caso contrario, <see langword="false" /> per indicare che è necessario applicare la proprietà <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />.</param>
      <returns>Oggetto <see cref="T:System.String" /> formattato che include i caratteri letterali, di richiesta e, facoltativamente, della password.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean)">
      <summary>Restituisce la stringa formattata e include, facoltativamente, i caratteri di richiesta e letterali.</summary>
      <param name="includePrompt">
        <see langword="true" /> per includere i caratteri di richiesta nella stringa restituita; in caso contrario, <see langword="false" />.</param>
      <param name="includeLiterals">
        <see langword="true" /> per includere i caratteri letterali nella stringa restituita; in caso contrario, <see langword="false" />.</param>
      <returns>Oggetto <see cref="T:System.String" /> formattato che include tutti i valori dei caratteri assegnati e, facoltativamente, i caratteri letterali e di richiesta.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)">
      <summary>Restituisce una sottostringa della stringa formattata e include, facoltativamente, i caratteri di richiesta, letterali e della password.</summary>
      <param name="ignorePasswordChar">
        <see langword="true" /> per restituire i caratteri modificabili effettivi; in caso contrario, <see langword="false" /> per indicare che è necessario applicare la proprietà <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />.</param>
      <param name="includePrompt">
        <see langword="true" /> per includere i caratteri di richiesta nella stringa restituita; in caso contrario, <see langword="false" />.</param>
      <param name="includeLiterals">
        <see langword="true" /> per includere i caratteri letterali nella stringa restituita; in caso contrario, <see langword="false" />.</param>
      <param name="startPosition">Posizione in base zero della stringa formattata dalla quale ha inizio l'output.</param>
      <param name="length">Numero dei caratteri da restituire.</param>
      <returns>In caso di esito positivo, sottostringa dell'oggetto <see cref="T:System.String" /> formattato, che include tutti i valori dei caratteri assegnati e, facoltativamente, i caratteri letterali, di richiesta e della password; in caso contrario, stringa <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Int32,System.Int32)">
      <summary>Restituisce una sottostringa della stringa formattata e include, facoltativamente, i caratteri di richiesta e letterali.</summary>
      <param name="includePrompt">
        <see langword="true" /> per includere i caratteri di richiesta nella stringa restituita; in caso contrario, <see langword="false" />.</param>
      <param name="includeLiterals">
        <see langword="true" /> per includere i caratteri letterali nella stringa restituita; in caso contrario, <see langword="false" />.</param>
      <param name="startPosition">Posizione in base zero della stringa formattata dalla quale ha inizio l'output.</param>
      <param name="length">Numero dei caratteri da restituire.</param>
      <returns>In caso di esito positivo, sottostringa dell'oggetto <see cref="T:System.String" /> formattato che include tutti i valori dei caratteri assegnati e, facoltativamente, i caratteri letterali e di richiesta; in caso contrario, stringa <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Int32,System.Int32)">
      <summary>Restituisce una sottostringa della stringa formattata e, facoltativamente, i caratteri della password.</summary>
      <param name="ignorePasswordChar">
        <see langword="true" /> per restituire i caratteri modificabili effettivi; in caso contrario, <see langword="false" /> per indicare che è necessario applicare la proprietà <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />.</param>
      <param name="startPosition">Posizione in base zero della stringa formattata dalla quale ha inizio l'output.</param>
      <param name="length">Numero dei caratteri da restituire.</param>
      <returns>In caso di esito positivo, sottostringa dell'oggetto <see cref="T:System.String" /> formattato, che include i caratteri letterali, di richiesta e, facoltativamente, i caratteri della password; in caso contrario, stringa <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.ToString(System.Int32,System.Int32)">
      <summary>Restituisce una sottostringa della stringa formattata.</summary>
      <param name="startPosition">Posizione in base zero della stringa formattata dalla quale ha inizio l'output.</param>
      <param name="length">Numero dei caratteri da restituire.</param>
      <returns>In caso di esito positivo, sottostringa dell'oggetto <see cref="T:System.String" /> formattato che include tutti i valori dei caratteri assegnati; in caso contrario, stringa <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)">
      <summary>Verifica se è possibile impostare il carattere specificato nella posizione indicata.</summary>
      <param name="input">Valore <see cref="T:System.Char" /> su cui eseguire il test.</param>
      <param name="position">Posizione della maschera in base alla quale verificare il carattere di input.</param>
      <param name="hint">Oggetto <see cref="T:System.ComponentModel.MaskedTextResultHint" /> che descrive sinteticamente il risultato dell'operazione. Parametro di output.</param>
      <returns>
        <see langword="true" /> se il carattere specificato è valido per la posizione indicata; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.VerifyEscapeChar(System.Char,System.Int32)">
      <summary>Verifica se il carattere specificato nella posizione indicata viene sottoposto a escape.</summary>
      <param name="input">Valore <see cref="T:System.Char" /> su cui eseguire il test.</param>
      <param name="position">Posizione della maschera in base alla quale verificare il carattere di input.</param>
      <returns>
        <see langword="true" /> se il carattere specificato viene sottoposto a escape; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.VerifyString(System.String)">
      <summary>Verifica se è possibile impostare la stringa formattata.</summary>
      <param name="input">Valore <see cref="T:System.String" /> su cui eseguire il test.</param>
      <returns>
        <see langword="true" /> se la stringa specificata rappresenta un input valido; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.VerifyString(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)">
      <summary>Verifica se è possibile impostare la stringa specificata, quindi genera informazioni sulla posizione e sulla descrizione.</summary>
      <param name="input">Valore <see cref="T:System.String" /> su cui eseguire il test.</param>
      <param name="testPosition">In caso di esito positivo, posizione in base zero dell'ultimo carattere effettivamente verificato; in caso contrario, prima posizione nella quale la verifica ha avuto esito negativo. Parametro di output.</param>
      <param name="resultHint">Oggetto <see cref="T:System.ComponentModel.MaskedTextResultHint" /> che descrive sinteticamente il risultato dell'operazione di verifica. Parametro di output.</param>
      <returns>
        <see langword="true" /> se la stringa specificata rappresenta un input valido; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.MaskedTextResultHint">
      <summary>Specifica i valori che descrivono sinteticamente i risultati di un'operazione di analisi di testo mascherato.</summary>
    </member>
    <member name="F:System.ComponentModel.MaskedTextResultHint.AlphanumericCharacterExpected">
      <summary>L'operazione ha avuto esito negativo. È presente un carattere di input non alfanumerico. .</summary>
    </member>
    <member name="F:System.ComponentModel.MaskedTextResultHint.AsciiCharacterExpected">
      <summary>L'operazione ha avuto esito negativo. È presente un carattere di input non appartenente al set di caratteri ASCII.</summary>
    </member>
    <member name="F:System.ComponentModel.MaskedTextResultHint.CharacterEscaped">
      <summary>Operazione completata. L'operazione ha avuto esito positivo perché un carattere letterale, di richiesta o di spaziatura è un carattere di escape. Per ulteriori informazioni sui caratteri di escape, vedere il metodo <see cref="M:System.ComponentModel.MaskedTextProvider.VerifyEscapeChar(System.Char,System.Int32)" />.</summary>
    </member>
    <member name="F:System.ComponentModel.MaskedTextResultHint.DigitExpected">
      <summary>L'operazione ha avuto esito negativo. È presente un carattere di input che non è una cifra.</summary>
    </member>
    <member name="F:System.ComponentModel.MaskedTextResultHint.InvalidInput">
      <summary>L'operazione ha avuto esito negativo. Il programma ha individuato un carattere di input non valido. Per ulteriori informazioni sui caratteri non validi, vedere il metodo <see cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />.</summary>
    </member>
    <member name="F:System.ComponentModel.MaskedTextResultHint.LetterExpected">
      <summary>L'operazione ha avuto esito negativo. È presente un carattere di input che non è una lettera.</summary>
    </member>
    <member name="F:System.ComponentModel.MaskedTextResultHint.NoEffect">
      <summary>Operazione completata. L'operazione principale non è stata eseguita perché non necessaria, pertanto non sono stati prodotti effetti collaterali.</summary>
    </member>
    <member name="F:System.ComponentModel.MaskedTextResultHint.NonEditPosition">
      <summary>L'operazione ha avuto esito negativo. La posizione corrente della stringa formattata è rappresentata da un carattere letterale.</summary>
    </member>
    <member name="F:System.ComponentModel.MaskedTextResultHint.PositionOutOfRange">
      <summary>L'operazione ha avuto esito negativo. La posizione specificata non rientra nell'intervallo della stringa di destinazione. In genere, questo indica che è minore di zero o maggiore della lunghezza della stringa di destinazione.</summary>
    </member>
    <member name="F:System.ComponentModel.MaskedTextResultHint.PromptCharNotAllowed">
      <summary>L'operazione ha avuto esito negativo. Il carattere di richiesta non è valido come input. Questo può essere determinato dall'impostazione della proprietà <see cref="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" /> su <see langword="false" />.</summary>
    </member>
    <member name="F:System.ComponentModel.MaskedTextResultHint.SideEffect">
      <summary>Operazione completata. L'operazione principale non è stata eseguita perché non necessaria, ma il metodo ha prodotto un effetto collaterale. Il metodo <see cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />, ad esempio, può eliminare una posizione di modifica non assegnata, determinando lo spostamento a sinistra dei caratteri successivi della stringa formattata.</summary>
    </member>
    <member name="F:System.ComponentModel.MaskedTextResultHint.SignedDigitExpected">
      <summary>L'operazione ha avuto esito negativo. È presente un carattere di input che non è una cifra con segno.</summary>
    </member>
    <member name="F:System.ComponentModel.MaskedTextResultHint.Success">
      <summary>Operazione completata. L'operazione principale ha avuto esito positivo.</summary>
    </member>
    <member name="F:System.ComponentModel.MaskedTextResultHint.UnavailableEditPosition">
      <summary>L'operazione ha avuto esito negativo. Le posizioni di modifica disponibili non sono sufficienti per soddisfare la richiesta.</summary>
    </member>
    <member name="F:System.ComponentModel.MaskedTextResultHint.Unknown">
      <summary>Sconosciuto. Impossibile determinare il risultato dell'operazione.</summary>
    </member>
    <member name="T:System.ComponentModel.MemberDescriptor">
      <summary>Rappresenta il membro di una classe, ad esempio una proprietà o un evento. Si tratta di una classe base astratta</summary>
    </member>
    <member name="M:System.ComponentModel.MemberDescriptor.#ctor(System.ComponentModel.MemberDescriptor)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.MemberDescriptor" /> con l'oggetto <see cref="T:System.ComponentModel.MemberDescriptor" /> specificato.</summary>
      <param name="descr">Oggetto <see cref="T:System.ComponentModel.MemberDescriptor" /> che contiene il nome del membro e i relativi attributi.</param>
    </member>
    <member name="M:System.ComponentModel.MemberDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ComponentModel.MemberDescriptor" /> con il nome nell'oggetto <see cref="T:System.ComponentModel.MemberDescriptor" /> specificato e gli attributi nella precedente classe <see cref="T:System.ComponentModel.MemberDescriptor" /> e nella matrice <see cref="T:System.Attribute" />.</summary>
      <param name="oldMemberDescriptor">Oggetto <see cref="T:System.ComponentModel.MemberDescriptor" /> che ha il nome del membro e i relativi attributi.</param>
      <param name="newAttributes">Matrice di oggetti <see cref="T:System.Attribute" /> con gli attributi che si desidera aggiungere al membro.</param>
    </member>
    <member name="M:System.ComponentModel.MemberDescriptor.#ctor(System.String)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ComponentModel.MemberDescriptor" /> con il nome specificato del membro.</summary>
      <param name="name">Nome del membro.</param>
      <exception cref="T:System.ArgumentException">Il nome è una stringa vuota ("") oppure <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.MemberDescriptor.#ctor(System.String,System.Attribute[])">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ComponentModel.MemberDescriptor" /> con il nome specificato del membro e una matrice di attributi.</summary>
      <param name="name">Nome del membro.</param>
      <param name="attributes">Matrice di tipo <see cref="T:System.Attribute" /> che contiene gli attributi del membro.</param>
      <exception cref="T:System.ArgumentException">Il nome è una stringa vuota ("") oppure <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.MemberDescriptor.AttributeArray">
      <summary>Ottiene o imposta una matrice di attributi.</summary>
      <returns>Matrice di tipo <see cref="T:System.Attribute" /> che contiene gli attributi di questo membro.</returns>
    </member>
    <member name="P:System.ComponentModel.MemberDescriptor.Attributes">
      <summary>Ottiene l'insieme di attributi per questo membro.</summary>
      <returns>Oggetto <see cref="T:System.ComponentModel.AttributeCollection" /> che fornisce gli attributi per questo membro oppure un insieme vuoto se la proprietà <see cref="P:System.ComponentModel.MemberDescriptor.AttributeArray" /> non contiene attributi.</returns>
    </member>
    <member name="P:System.ComponentModel.MemberDescriptor.Category">
      <summary>Ottiene il nome della categoria alla quale appartiene il membro, come specificato in <see cref="T:System.ComponentModel.CategoryAttribute" />.</summary>
      <returns>Nome della categoria alla quale appartiene il membro. Se non esiste alcun attributo <see cref="T:System.ComponentModel.CategoryAttribute" />, il nome della categoria verrà impostato sulla categoria predefinita <see langword="Misc" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MemberDescriptor.CreateAttributeCollection">
      <summary>Consente di creare un insieme di attributi utilizzando la matrice di attributi passati al costruttore.</summary>
      <returns>Nuovo insieme <see cref="T:System.ComponentModel.AttributeCollection" /> che contiene gli attributi della proprietà <see cref="P:System.ComponentModel.MemberDescriptor.AttributeArray" />.</returns>
    </member>
    <member name="P:System.ComponentModel.MemberDescriptor.Description">
      <summary>Ottiene la descrizione del membro, come specificato in <see cref="T:System.ComponentModel.DescriptionAttribute" />.</summary>
      <returns>Descrizione del membro. Se non esiste alcun attributo <see cref="T:System.ComponentModel.DescriptionAttribute" />, il valore della proprietà viene impostato su quello predefinito, ovvero una stringa vuota ("").</returns>
    </member>
    <member name="P:System.ComponentModel.MemberDescriptor.DesignTimeOnly">
      <summary>Indica se questo membro deve essere impostato soltanto in fase di progettazione, come specificato in <see cref="T:System.ComponentModel.DesignOnlyAttribute" />.</summary>
      <returns>
        <see langword="true" /> se il membro deve essere impostato soltanto in fase di progettazione, <see langword="false" /> se il membro può essere impostato in fase di esecuzione.</returns>
    </member>
    <member name="P:System.ComponentModel.MemberDescriptor.DisplayName">
      <summary>Ottiene il nome che può essere visualizzato in una finestra, quale una finestra delle proprietà.</summary>
      <returns>Nome da visualizzare per il membro.</returns>
    </member>
    <member name="M:System.ComponentModel.MemberDescriptor.Equals(System.Object)">
      <summary>Consente di confrontare questa istanza con l'oggetto specificato per verificare se sono equivalenti.</summary>
      <param name="obj">Oggetto da confrontare con l'istanza corrente della classe.</param>
      <returns>
        <see langword="true" /> se sono equivalenti, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MemberDescriptor.FillAttributes(System.Collections.IList)">
      <summary>Quando è sottoposto a override in una classe derivata, consente di aggiungere gli attributi della classe che eredita all'elenco specificato di attributi nella classe padre.</summary>
      <param name="attributeList">Oggetto <see cref="T:System.Collections.IList" /> che elenca gli attributi nella classe padre. Inizialmente, questo oggetto è vuoto.</param>
    </member>
    <member name="M:System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type)">
      <summary>Consente di trovare il metodo specificato mediante reflection, cercando soltanto i metodi pubblici.</summary>
      <param name="componentClass">Componente che contiene il metodo.</param>
      <param name="name">Nome del metodo da ricercare.</param>
      <param name="args">Matrice di parametri per il metodo, utilizzata per scegliere fra i metodi di overload.</param>
      <param name="returnType">Tipo da restituire per il metodo.</param>
      <returns>Oggetto <see cref="T:System.Reflection.MethodInfo" /> che rappresenta il metodo oppure <see langword="null" /> se il metodo non viene trovato.</returns>
    </member>
    <member name="M:System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)">
      <summary>Consente di trovare il metodo specificato mediante reflection, con la possibilità di ricercare soltanto i metodi pubblici.</summary>
      <param name="componentClass">Componente che contiene il metodo.</param>
      <param name="name">Nome del metodo da ricercare.</param>
      <param name="args">Matrice di parametri per il metodo, utilizzata per scegliere fra i metodi di overload.</param>
      <param name="returnType">Tipo da restituire per il metodo.</param>
      <param name="publicOnly">Per limitare la ricerca ai metodi pubblici.</param>
      <returns>Oggetto <see cref="T:System.Reflection.MethodInfo" /> che rappresenta il metodo oppure <see langword="null" /> se il metodo non viene trovato.</returns>
    </member>
    <member name="M:System.ComponentModel.MemberDescriptor.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Codice hash per l'oggetto <see cref="T:System.ComponentModel.MemberDescriptor" /> corrente.</returns>
    </member>
    <member name="M:System.ComponentModel.MemberDescriptor.GetInvocationTarget(System.Type,System.Object)">
      <summary>Recupera l'oggetto da utilizzare durante la chiamata dei membri.</summary>
      <param name="type">Tipo <see cref="T:System.Type" /> della destinazione della chiamata.</param>
      <param name="instance">Destinazione potenziale della chiamata.</param>
      <returns>Oggetto da utilizzare durante le chiamate dei membri.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> o <paramref name="instance" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.MemberDescriptor.GetInvokee(System.Type,System.Object)">
      <summary>Ottiene il componente sul quale richiamare un metodo.</summary>
      <param name="componentClass">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo di componente al quale è associato questo oggetto <see cref="T:System.ComponentModel.MemberDescriptor" />. Se ad esempio la classe <see cref="T:System.ComponentModel.MemberDescriptor" /> descrive una proprietà, questo parametro deve rappresentare la classe sulla quale è dichiarata la proprietà.</param>
      <param name="component">Istanza dell'oggetto da chiamare.</param>
      <returns>Istanza del componente da richiamare. Questo metodo restituisce una finestra di progettazione visiva quando la proprietà è associata a una finestra del genere.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="componentClass" /> o <paramref name="component" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.MemberDescriptor.GetSite(System.Object)">
      <summary>Ottiene un sito del componente per il componente specificato.</summary>
      <param name="component">Componente per il quale si desidera trovare un sito.</param>
      <returns>Sito del componente oppure <see langword="null" /> se non esiste alcun sito.</returns>
    </member>
    <member name="P:System.ComponentModel.MemberDescriptor.IsBrowsable">
      <summary>Ottiene un valore che indica se il membro è esplorabile, come specificato in <see cref="T:System.ComponentModel.BrowsableAttribute" />.</summary>
      <returns>
        <see langword="true" /> se il membro è esplorabile, in caso contrario <see langword="false" />. Se non esiste alcun attributo <see cref="T:System.ComponentModel.BrowsableAttribute" />, il valore della proprietà verrà impostato su quello predefinito, ovvero <see langword="true" />.</returns>
    </member>
    <member name="P:System.ComponentModel.MemberDescriptor.Name">
      <summary>Ottiene il nome del membro.</summary>
      <returns>Nome del membro.</returns>
    </member>
    <member name="P:System.ComponentModel.MemberDescriptor.NameHashCode">
      <summary>Ottiene il codice hash per il nome del membro, come specificato nel metodo <see cref="M:System.String.GetHashCode" />.</summary>
      <returns>Codice hash per il nome del membro.</returns>
    </member>
    <member name="T:System.ComponentModel.MultilineStringConverter">
      <summary>Fornisce un convertitore di tipi per la conversione di stringhe su più righe in una stringa semplice.</summary>
    </member>
    <member name="M:System.ComponentModel.MultilineStringConverter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.MultilineStringConverter" />.</summary>
    </member>
    <member name="M:System.ComponentModel.MultilineStringConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converte l'oggetto valore indicato nel tipo specificato, usando il contesto e le informazioni sulle impostazioni cultura specificati.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" />. Se viene passato <see langword="null" /> , verranno usate le impostazioni cultura correnti.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire.</param>
      <param name="destinationType">Oggetto <see cref="T:System.Type" /> in cui convertire il parametro del valore.</param>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il valore convertito.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione.</exception>
    </member>
    <member name="M:System.ComponentModel.MultilineStringConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>Restituisce un insieme di proprietà per il tipo di matrice specificato dal parametro <paramref name="value" /> utilizzando il contesto e gli attributi specificati.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> che specifica il tipo di matrice di cui ottenere le proprietà.</param>
      <param name="attributes">Matrice di tipo <see cref="T:System.Attribute" /> usata come filtro.</param>
      <returns>Insieme <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> con le proprietà esposte per questo tipo di dati oppure <see langword="null" /> se non vi sono proprietà.</returns>
    </member>
    <member name="M:System.ComponentModel.MultilineStringConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Indica se questo oggetto supporta le proprietà, utilizzando il contesto specificato.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <returns>
        <see langword="true" /> se occorre chiamare <see cref="Overload:System.ComponentModel.MultilineStringConverter.GetProperties" /> per trovare le proprietà di questo oggetto. <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="T:System.ComponentModel.NestedContainer">
      <summary>Fornisce l'implementazione di base per l'interfaccia <see cref="T:System.ComponentModel.INestedContainer" /> che consente ai contenitori di disporre di un componente proprietario.</summary>
    </member>
    <member name="M:System.ComponentModel.NestedContainer.#ctor(System.ComponentModel.IComponent)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.NestedContainer" />.</summary>
      <param name="owner">L'oggetto <see cref="T:System.ComponentModel.IComponent" /> che possiede questo contenitore annidato.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owner" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.NestedContainer.CreateSite(System.ComponentModel.IComponent,System.String)">
      <summary>Crea un sito per il componente all'interno del contenitore.</summary>
      <param name="component">Oggetto <see cref="T:System.ComponentModel.IComponent" /> per il quale creare un sito.</param>
      <param name="name">Nome da assegnare al parametro <paramref name="component" /> oppure <see langword="null" /> per non assegnare alcun nome.</param>
      <returns>Oggetto <see cref="T:System.ComponentModel.ISite" /> appena creato.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.NestedContainer.Dispose(System.Boolean)">
      <summary>Rilascia le risorse utilizzate dal contenitore annidato.</summary>
      <param name="disposing">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite, <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:System.ComponentModel.NestedContainer.GetService(System.Type)">
      <summary>Ottiene l'oggetto servizio del tipo specificato, se disponibile.</summary>
      <param name="service">L'oggetto <see cref="T:System.Type" /> del servizio da recuperare.</param>
      <returns>Oggetto <see cref="T:System.Object" /> che implementa il servizio richiesto, oppure <see langword="null" /> se non è possibile risolvere il servizio.</returns>
    </member>
    <member name="P:System.ComponentModel.NestedContainer.Owner">
      <summary>Ottiene il componente proprietario per questo contenitore annidato.</summary>
      <returns>L'oggetto <see cref="T:System.ComponentModel.IComponent" /> che possiede questo contenitore annidato.</returns>
    </member>
    <member name="P:System.ComponentModel.NestedContainer.OwnerName">
      <summary>Ottiene il nome del componente proprietario.</summary>
      <returns>Nome del componente proprietario.</returns>
    </member>
    <member name="T:System.ComponentModel.NullableConverter">
      <summary>Fornisce la conversione automatica tra un tipo nullable e il relativo tipo primitivo sottostante.</summary>
    </member>
    <member name="M:System.ComponentModel.NullableConverter.#ctor(System.Type)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.NullableConverter" />.</summary>
      <param name="type">Tipo nullable specificato.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="type" /> non è un tipo nullable.</exception>
    </member>
    <member name="M:System.ComponentModel.NullableConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Restituisce un valore che indica se il convertitore può convertire un oggetto del tipo specificato nel tipo di questo convertitore, usando il contesto specificato.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="sourceType">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo da cui eseguire la conversione.</param>
      <returns>
        <see langword="true" /> se il convertitore può eseguire la conversione. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.NullableConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Restituisce un valore che indica se il convertitore può convertire l'oggetto nel tipo specificato usando il contesto specificato.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="destinationType">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo in cui eseguire la conversione.</param>
      <returns>
        <see langword="true" /> se il convertitore può eseguire la conversione. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.NullableConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converte l'oggetto indicato nel tipo di questo convertitore usando il contesto e le informazioni sulle impostazioni cultura specificati.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> da usare come impostazioni cultura correnti.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire.</param>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il valore convertito.</returns>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione.</exception>
    </member>
    <member name="M:System.ComponentModel.NullableConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converte l'oggetto valore indicato nel tipo specificato, usando il contesto e le informazioni sulle impostazioni cultura specificati.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> da usare come impostazioni cultura correnti.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire.</param>
      <param name="destinationType">Oggetto <see cref="T:System.Type" /> in cui convertire il parametro del valore.</param>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il valore convertito.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione.</exception>
    </member>
    <member name="M:System.ComponentModel.NullableConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>Crea un'istanza del tipo a cui questo oggetto <see cref="T:System.ComponentModel.TypeConverter" /> è associato, usando il contesto specificato, dato un set di valori di proprietà per l'oggetto.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="propertyValues">
        <see cref="T:System.Collections.IDictionary" /> dei nuovi valori di proprietà.</param>
      <returns>
        <see cref="T:System.Object" /> che rappresenta l'oggetto <see cref="T:System.Collections.IDictionary" /> specificato oppure <see langword="null" /> se non è possibile creare l'oggetto. Questo metodo restituisce sempre <see langword="null" />.</returns>
    </member>
    <member name="M:System.ComponentModel.NullableConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Indica se la modifica di un valore di questo oggetto richiede la chiamata del metodo <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> per creare un nuovo valore utilizzando il contesto specificato.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <returns>
        <see langword="true" /> se la modifica di una proprietà dell'oggetto richiede una chiamata a <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> per creare un nuovo valore. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.NullableConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>Restituisce un insieme di proprietà per il tipo di matrice specificato dal parametro del valore utilizzando il contesto e gli attributi specificati.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> che specifica il tipo di matrice di cui ottenere le proprietà.</param>
      <param name="attributes">Matrice di tipo <see cref="T:System.Attribute" /> utilizzata come filtro.</param>
      <returns>Insieme <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> con le proprietà esposte per questo tipo di dati oppure <see langword="null" /> se non vi sono proprietà.</returns>
    </member>
    <member name="M:System.ComponentModel.NullableConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Indica se questo oggetto supporta le proprietà, utilizzando il contesto specificato.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <returns>
        <see langword="true" /> se occorre chiamare <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> per trovare le proprietà di questo oggetto. <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="M:System.ComponentModel.NullableConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Restituisce un insieme di valori standard del tipo di dati per il quale è stato progettato questo convertitore di tipi, quando viene fornito un contesto di formato.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato, utilizzabile per estrarre informazioni aggiuntive sull'ambiente da cui viene richiamato il convertitore. Questo parametro o le proprietà di questo parametro possono essere <see langword="null" />.</param>
      <returns>Insieme <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> con un set standard di valori validi oppure <see langword="null" /> se il tipo di dati non supporta un set standard di valori.</returns>
    </member>
    <member name="M:System.ComponentModel.NullableConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Indica se l'insieme di valori standard restituiti dal metodo <see cref="Overload:System.ComponentModel.TypeConverter.GetStandardValues" /> rappresenta un elenco esclusivo di valori possibili, utilizzando il contesto specificato.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <returns>
        <see langword="true" /> se l'insieme <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> restituito dal metodo <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> rappresenta un elenco completo dei valori possibili. <see langword="false" /> se sono possibili altri valori.</returns>
    </member>
    <member name="M:System.ComponentModel.NullableConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Indica se questo oggetto supporta un insieme standard di valori selezionabili da un elenco, utilizzando il contesto specificato.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <returns>
        <see langword="true" /> se è necessario chiamare il metodo <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> per individuare un insieme comune di valori supportati dall’oggetto; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.NullableConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
      <summary>Indica se l'oggetto valore specificato è valido per questo tipo e per il contesto specificato.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> di cui eseguire il test di validità.</param>
      <returns>
        <see langword="true" /> se il valore specificato è valido per questo oggetto. <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="P:System.ComponentModel.NullableConverter.NullableType">
      <summary>Ottiene il tipo nullable.</summary>
      <returns>Oggetto <see cref="T:System.Type" /> che rappresenta il tipo nullable.</returns>
    </member>
    <member name="P:System.ComponentModel.NullableConverter.UnderlyingType">
      <summary>Ottiene il tipo sottostante.</summary>
      <returns>Oggetto <see cref="T:System.Type" /> che rappresenta il tipo sottostante.</returns>
    </member>
    <member name="P:System.ComponentModel.NullableConverter.UnderlyingTypeConverter">
      <summary>Ottiene il convertitore del tipo sottostante.</summary>
      <returns>Oggetto <see cref="T:System.ComponentModel.TypeConverter" /> che rappresenta il convertitore del tipo sottostante.</returns>
    </member>
    <member name="T:System.ComponentModel.PasswordPropertyTextAttribute">
      <summary>Indica che la rappresentazione di testo di un oggetto è nascosta da caratteri quali gli asterischi. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.ComponentModel.PasswordPropertyTextAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.PasswordPropertyTextAttribute" />.</summary>
    </member>
    <member name="M:System.ComponentModel.PasswordPropertyTextAttribute.#ctor(System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.PasswordPropertyTextAttribute" /> visualizzando, facoltativamente, il testo della password.</summary>
      <param name="password">
        <see langword="true" /> per indicare la visualizzazione della proprietà come testo della password; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</param>
    </member>
    <member name="F:System.ComponentModel.PasswordPropertyTextAttribute.Default">
      <summary>Specifica il valore predefinito dell'oggetto <see cref="T:System.ComponentModel.PasswordPropertyTextAttribute" />.</summary>
    </member>
    <member name="M:System.ComponentModel.PasswordPropertyTextAttribute.Equals(System.Object)">
      <summary>Determina se due istanze di <see cref="T:System.ComponentModel.PasswordPropertyTextAttribute" /> sono uguali.</summary>
      <param name="o">Oggetto <see cref="T:System.ComponentModel.PasswordPropertyTextAttribute" /> da confrontare con l'oggetto <see cref="T:System.ComponentModel.PasswordPropertyTextAttribute" /> corrente.</param>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.ComponentModel.PasswordPropertyTextAttribute" /> specificato è uguale all'oggetto <see cref="T:System.ComponentModel.PasswordPropertyTextAttribute" /> corrente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.PasswordPropertyTextAttribute.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Codice hash per l'oggetto <see cref="T:System.ComponentModel.PasswordPropertyTextAttribute" /> corrente.</returns>
    </member>
    <member name="M:System.ComponentModel.PasswordPropertyTextAttribute.IsDefaultAttribute">
      <summary>Indica se il valore dell'istanza è quello predefinito.</summary>
      <returns>
        <see langword="true" /> se questa istanza è l'attributo predefinito per la classe. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="F:System.ComponentModel.PasswordPropertyTextAttribute.No">
      <summary>Indica che una proprietà del testo non viene utilizzata come password. Questo campo <see langword="static" /> (<see langword="Shared" /> in Visual Basic) è in sola lettura.</summary>
    </member>
    <member name="P:System.ComponentModel.PasswordPropertyTextAttribute.Password">
      <summary>Ottiene un valore che indica se la proprietà per la quale è stato definito l'oggetto <see cref="T:System.ComponentModel.PasswordPropertyTextAttribute" /> debba essere visualizzata come testo della password.</summary>
      <returns>
        <see langword="true" /> se la proprietà deve essere visualizzata come testo della password; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="F:System.ComponentModel.PasswordPropertyTextAttribute.Yes">
      <summary>Indica che una proprietà del testo viene utilizzata come password. Questo campo <see langword="static" /> (<see langword="Shared" /> in Visual Basic) è in sola lettura.</summary>
    </member>
    <member name="T:System.ComponentModel.PropertyDescriptor">
      <summary>Fornisce un'astrazione di una proprietà su una classe.</summary>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.PropertyDescriptor" /> con il nome e gli attributi nell'oggetto <see cref="T:System.ComponentModel.MemberDescriptor" /> specificato.</summary>
      <param name="descr">Oggetto <see cref="T:System.ComponentModel.MemberDescriptor" /> che contiene il nome della proprietà e i relativi attributi.</param>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.PropertyDescriptor" /> con il nome nell'oggetto <see cref="T:System.ComponentModel.MemberDescriptor" /> specificato e gli attributi nell'oggetto <see cref="T:System.ComponentModel.MemberDescriptor" /> e nella matrice <see cref="T:System.Attribute" />.</summary>
      <param name="descr">Oggetto <see cref="T:System.ComponentModel.MemberDescriptor" /> che contiene il nome del membro e i relativi attributi.</param>
      <param name="attrs">Matrice <see cref="T:System.Attribute" /> contenente gli attributi che si desidera associare alla proprietà.</param>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptor.#ctor(System.String,System.Attribute[])">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ComponentModel.PropertyDescriptor" /> con il nome e gli attributi specificati.</summary>
      <param name="name">Nome della proprietà.</param>
      <param name="attrs">Matrice di tipo <see cref="T:System.Attribute" /> che contiene gli attributi della proprietà.</param>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)">
      <summary>Consente ad altri oggetti di ricevere una notifica quando la proprietà viene modificata.</summary>
      <param name="component">Componente per il quale aggiungere il gestore.</param>
      <param name="handler">Delegato da aggiungere come listener.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> o <paramref name="handler" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)">
      <summary>Quando è sottoposto a override in una classe derivata, indica se la reimpostazione di un oggetto ne cambia il valore.</summary>
      <param name="component">Componente di cui eseguire il test di reimpostazione.</param>
      <returns>
        <see langword="true" /> se reimpostando il componente varia il relativo valore, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.PropertyDescriptor.ComponentType">
      <summary>Quando è sottoposto a override in una classe derivata, consente di ottenere il tipo di componente a cui questa proprietà è associata.</summary>
      <returns>Oggetto <see cref="T:System.Type" /> che rappresenta il tipo di componente a cui questa proprietà è associata. Quando viene richiamato il metodo <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /> o <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" />, l'oggetto specificato potrebbe essere un'istanza di questo tipo.</returns>
    </member>
    <member name="P:System.ComponentModel.PropertyDescriptor.Converter">
      <summary>Ottiene il convertitore di tipi di questa proprietà.</summary>
      <returns>Oggetto <see cref="T:System.ComponentModel.TypeConverter" /> che viene utilizzato per convertire l'oggetto <see cref="T:System.Type" /> della proprietà.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)">
      <summary>Crea un'istanza del tipo specificato.</summary>
      <param name="type">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo da creare.</param>
      <returns>Nuova istanza del tipo.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptor.Equals(System.Object)">
      <summary>Consente di confrontare questo oggetto con un altro oggetto per verificare se sono equivalenti.</summary>
      <param name="obj">Oggetto da confrontare con la classe <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
      <returns>
        <see langword="true" /> se i valori sono equivalenti, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)">
      <summary>Aggiunge gli attributi dell'oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> all'elenco di attributi specificato della classe padre.</summary>
      <param name="attributeList">Oggetto <see cref="T:System.Collections.IList" /> che elenca gli attributi nella classe padre. Inizialmente, questo oggetto è vuoto.</param>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptor.GetChildProperties">
      <summary>Restituisce l'oggetto <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> predefinito.</summary>
      <returns>Raccolta di descrittori della proprietà.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])">
      <summary>Restituisce un insieme <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> utilizzando una specifica matrice di attributi come filtro.</summary>
      <param name="filter">Matrice di tipo <see cref="T:System.Attribute" /> da utilizzare come filtro.</param>
      <returns>Insieme <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> con le proprietà che corrispondono agli attributi specificati.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)">
      <summary>Restituisce un insieme <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> per un dato oggetto.</summary>
      <param name="instance">Componente per il quale ottenere le proprietà.</param>
      <returns>Insieme <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> con le proprietà per il componente specificato.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
      <summary>Restituisce un insieme <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> per un determinato oggetto utilizzando una specifica matrice di attributi come filtro.</summary>
      <param name="instance">Componente per il quale ottenere le proprietà.</param>
      <param name="filter">Matrice di tipo <see cref="T:System.Attribute" /> da utilizzare come filtro.</param>
      <returns>Insieme <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> con le proprietà che corrispondono agli attributi specificati per lo specifico componente.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptor.GetEditor(System.Type)">
      <summary>Ottiene un editor del tipo specificato.</summary>
      <param name="editorBaseType">Il tipo base di editor, utilizzato per distinguere i numerosi editor supportati da una proprietà.</param>
      <returns>Istanza del tipo di editor richiesto oppure <see langword="null" /> se non viene trovato un editor.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptor.GetHashCode">
      <summary>Restituisce il codice hash per questo oggetto.</summary>
      <returns>Codice hash per l'oggetto.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)">
      <summary>Questo metodo restituisce l'oggetto da utilizzare durante la chiamata dei membri.</summary>
      <param name="type">Tipo <see cref="T:System.Type" /> della destinazione della chiamata.</param>
      <param name="instance">Destinazione potenziale della chiamata.</param>
      <returns>Oggetto <see cref="T:System.Object" /> da utilizzare durante la chiamata dei membri.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)">
      <summary>Consente di restituire un tipo utilizzandone il nome.</summary>
      <param name="typeName">Il nome qualificato dall'assembly del tipo da recuperare.</param>
      <returns>Oggetto <see cref="T:System.Type" /> che corrisponde al nome del tipo specificato oppure <see langword="null" /> se non viene trovata alcuna corrispondenza.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)">
      <summary>Quando è sottoposto a override in una classe derivata, consente di ottenere il valore corrente della proprietà su un componente.</summary>
      <param name="component">Componente con la proprietà per la quale recuperare il valore.</param>
      <returns>Valore di una proprietà per un dato componente.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(System.Object)">
      <summary>Recupera l'insieme corrente di gestori di eventi <c>ValueChanged</c> per un componente specifico.</summary>
      <param name="component">Componente per cui recuperare i gestori di eventi.</param>
      <returns>Gestore di eventi multicast combinati o <see langword="null" /> se nessun gestore di eventi è attualmente assegnato a <paramref name="component" />.</returns>
    </member>
    <member name="P:System.ComponentModel.PropertyDescriptor.IsLocalizable">
      <summary>Ottiene un valore che indica se la proprietà deve essere localizzata, come specificato in <see cref="T:System.ComponentModel.LocalizableAttribute" />.</summary>
      <returns>
        <see langword="true" /> se il membro è contrassegnato con la classe <see cref="T:System.ComponentModel.LocalizableAttribute" /> impostata su <see langword="true" />; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.PropertyDescriptor.IsReadOnly">
      <summary>Quando è sottoposto a override in una classe derivata, consente di ottenere un valore che indica se questa proprietà è di sola lettura.</summary>
      <returns>
        <see langword="true" /> se la proprietà è di sola lettura, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)">
      <summary>Genera l'evento <c>ValueChanged</c> implementato.</summary>
      <param name="component">Oggetto che genera l'evento.</param>
      <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="P:System.ComponentModel.PropertyDescriptor.PropertyType">
      <summary>Quando è sottoposto a override in una classe derivata, consente di ottenere il tipo della proprietà.</summary>
      <returns>Oggetto <see cref="T:System.Type" /> che rappresenta il tipo della proprietà.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)">
      <summary>Consente ad altri oggetti di ricevere una notifica quando la proprietà viene modificata.</summary>
      <param name="component">Componente per il quale rimuovere il gestore.</param>
      <param name="handler">Delegato da rimuovere come listener.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> o <paramref name="handler" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
      <summary>Quando è sottoposto a override in una classe derivata, consente di reimpostare il valore predefinito di questa proprietà del componente.</summary>
      <param name="component">Componente con il valore di proprietà da reimpostare sul valore predefinito.</param>
    </member>
    <member name="P:System.ComponentModel.PropertyDescriptor.SerializationVisibility">
      <summary>Ottiene un valore che indica se la proprietà deve essere serializzata, come specificato in <see cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" />.</summary>
      <returns>Uno dei valori di enumerazione di <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> che specifica se la proprietà deve essere serializzata.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
      <summary>Quando è sottoposto a override in una classe derivata, consente di impostare il valore del componente su un valore differente.</summary>
      <param name="component">Componente con il valore di proprietà da impostare.</param>
      <param name="value">Nuovo valore.</param>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)">
      <summary>Quando è sottoposto a override in una classe derivata, consente di determinare un valore che indica se il valore di questa proprietà deve essere conservato.</summary>
      <param name="component">Componente con la proprietà di cui verificare la persistenza.</param>
      <returns>
        <see langword="true" /> se la proprietà deve essere conservata, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents">
      <summary>Ottiene un valore che indica se le notifiche delle modifiche dei valori di questa proprietà possono avere origine all'esterno del descrittore della proprietà.</summary>
      <returns>
        <see langword="true" /> se le notifiche delle modifiche dei valori possono avere origine all'esterno del descrittore della proprietà; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.PropertyDescriptorCollection">
      <summary>Rappresenta una raccolta di oggetti <see cref="T:System.ComponentModel.PropertyDescriptor" />.</summary>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.#ctor(System.ComponentModel.PropertyDescriptor[])">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />.</summary>
      <param name="properties">Matrice di tipo <see cref="T:System.ComponentModel.PropertyDescriptor" /> che fornisce le proprietà per questo insieme.</param>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.#ctor(System.ComponentModel.PropertyDescriptor[],System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, che è facoltativamente di sola lettura.</summary>
      <param name="properties">Matrice di tipo <see cref="T:System.ComponentModel.PropertyDescriptor" /> che fornisce le proprietà per questo insieme.</param>
      <param name="readOnly">Se <see langword="true" />, specifica che non è possibile modificare l'insieme.</param>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.Add(System.ComponentModel.PropertyDescriptor)">
      <summary>Aggiunge l'oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> specificato alla raccolta.</summary>
      <param name="value">Oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> da aggiungere alla raccolta.</param>
      <returns>Indice dell'oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> che è stato aggiunto all'insieme.</returns>
      <exception cref="T:System.NotSupportedException">Raccolta in sola lettura.</exception>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.Clear">
      <summary>Rimuove tutti gli oggetti <see cref="T:System.ComponentModel.PropertyDescriptor" /> dalla raccolta.</summary>
      <exception cref="T:System.NotSupportedException">Raccolta in sola lettura.</exception>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.Contains(System.ComponentModel.PropertyDescriptor)">
      <summary>Indica se l'insieme contiene il dato oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" />.</summary>
      <param name="value">Oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> da trovare nell'insieme.</param>
      <returns>
        <see langword="true" /> se l'insieme contiene l'oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> specificato, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.CopyTo(System.Array,System.Int32)">
      <summary>Consente di copiare l'intero insieme in una matrice, iniziando dal numero di indice specificato.</summary>
      <param name="array">Matrice di oggetti <see cref="T:System.ComponentModel.PropertyDescriptor" /> in cui copiare elementi dell'insieme.</param>
      <param name="index">Indice del parametro <paramref name="array" /> in corrispondenza del quale ha inizio la copia.</param>
    </member>
    <member name="P:System.ComponentModel.PropertyDescriptorCollection.Count">
      <summary>Ottiene il numero di descrittori di proprietà nell'insieme.</summary>
      <returns>Numero di descrittori di proprietà nell'insieme.</returns>
    </member>
    <member name="F:System.ComponentModel.PropertyDescriptorCollection.Empty">
      <summary>Consente di specificare un insieme vuoto che può essere utilizzato invece di crearne uno nuovo senza elementi. Questo campo <see langword="static" /> è di sola lettura.</summary>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.Find(System.String,System.Boolean)">
      <summary>Restituisce l'oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> con il nome specificato, utilizzando un valore Boolean per indicare se ignorare la distinzione fra maiuscole e minuscole.</summary>
      <param name="name">Nome dell'oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> da restituire dall'insieme.</param>
      <param name="ignoreCase">
        <see langword="true" /> se si desidera ignorare la distinzione fra maiuscole e minuscole del nome della proprietà, in caso contrario <see langword="false" />.</param>
      <returns>Oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> con il nome specificato oppure <see langword="null" /> se la proprietà non esiste.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.GetEnumerator">
      <summary>Restituisce un enumeratore per questa classe.</summary>
      <returns>Enumeratore di tipo <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.IndexOf(System.ComponentModel.PropertyDescriptor)">
      <summary>Restituisce l'indice dell'oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> specificato.</summary>
      <param name="value">Oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> di cui restituire l'indice.</param>
      <returns>Indice dell'oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> specificato.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.Insert(System.Int32,System.ComponentModel.PropertyDescriptor)">
      <summary>Consente di aggiungere all'insieme l'oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> in corrispondenza del numero di indice specificato.</summary>
      <param name="index">Indice in corrispondenza del quale aggiungere il parametro <paramref name="value" /> all'insieme.</param>
      <param name="value">Oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> da aggiungere alla raccolta.</param>
      <exception cref="T:System.NotSupportedException">Raccolta in sola lettura.</exception>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.InternalSort(System.Collections.IComparer)">
      <summary>Consente di ordinare i membri dell'insieme utilizzando l'oggetto <see cref="T:System.Collections.IComparer" /> specificato.</summary>
      <param name="sorter">Operatore di confronto da utilizzare per ordinare gli oggetti <see cref="T:System.ComponentModel.PropertyDescriptor" /> in questo insieme.</param>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.InternalSort(System.String[])">
      <summary>Consente di ordinare i membri dell'insieme. Viene applicato per primo l'ordinamento specificato, seguito dall'ordinamento predefinito di questo insieme, generalmente in ordine alfabetico.</summary>
      <param name="names">Matrice di stringhe che descrive la sequenza in cui ordinare gli oggetti <see cref="T:System.ComponentModel.PropertyDescriptor" /> nell'insieme.</param>
    </member>
    <member name="P:System.ComponentModel.PropertyDescriptorCollection.Item(System.Int32)">
      <summary>Ottiene o imposta l'oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> in corrispondenza del numero di indice specificato.</summary>
      <param name="index">Indice in base zero dell'oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> da ottenere o impostare.</param>
      <returns>Oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> con il numero di indice specificato.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Il parametro <paramref name="index" /> non è un indice valido per la proprietà <see cref="P:System.ComponentModel.PropertyDescriptorCollection.Item(System.Int32)" />.</exception>
    </member>
    <member name="P:System.ComponentModel.PropertyDescriptorCollection.Item(System.String)">
      <summary>Ottiene o imposta la classe <see cref="T:System.ComponentModel.PropertyDescriptor" /> con il nome specificato.</summary>
      <param name="name">Nome dell'oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> da ottenere dalla raccolta.</param>
      <returns>Oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> con il nome specificato oppure <see langword="null" /> se la proprietà non esiste.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.Remove(System.ComponentModel.PropertyDescriptor)">
      <summary>Rimuove l'oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> specificato dalla raccolta.</summary>
      <param name="value">Oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> da rimuovere dalla raccolta.</param>
      <exception cref="T:System.NotSupportedException">Raccolta in sola lettura.</exception>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.RemoveAt(System.Int32)">
      <summary>Rimuove l'oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> in corrispondenza dell'indice specificato dall'insieme.</summary>
      <param name="index">Indice dell'oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> da rimuovere dall'insieme.</param>
      <exception cref="T:System.NotSupportedException">Raccolta in sola lettura.</exception>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.Sort">
      <summary>Consente di ordinare i membri dell'insieme utilizzando l'ordine predefinito, che è generalmente quello alfabetico.</summary>
      <returns>Nuovo insieme <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> che contiene gli oggetti <see cref="T:System.ComponentModel.PropertyDescriptor" /> ordinati.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.Sort(System.Collections.IComparer)">
      <summary>Consente di ordinare i membri dell'insieme utilizzando l'oggetto <see cref="T:System.Collections.IComparer" /> specificato.</summary>
      <param name="comparer">Operatore di confronto da utilizzare per ordinare gli oggetti <see cref="T:System.ComponentModel.PropertyDescriptor" /> in questo insieme.</param>
      <returns>Nuovo insieme <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> che contiene gli oggetti <see cref="T:System.ComponentModel.PropertyDescriptor" /> ordinati.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.Sort(System.String[])">
      <summary>Consente di ordinare i membri dell'insieme. Viene applicato per primo l'ordinamento specificato, seguito dall'ordinamento predefinito di questo insieme, generalmente in ordine alfabetico.</summary>
      <param name="names">Matrice di stringhe che descrive la sequenza in cui ordinare gli oggetti <see cref="T:System.ComponentModel.PropertyDescriptor" /> nell'insieme.</param>
      <returns>Nuovo insieme <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> che contiene gli oggetti <see cref="T:System.ComponentModel.PropertyDescriptor" /> ordinati.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.Sort(System.String[],System.Collections.IComparer)">
      <summary>Consente di ordinare i membri dell'insieme. Viene applicato per primo l'ordinamento specificato, seguito dall'ordinamento che utilizza l'oggetto <see cref="T:System.Collections.IComparer" /> specificato.</summary>
      <param name="names">Matrice di stringhe che descrive la sequenza in cui ordinare gli oggetti <see cref="T:System.ComponentModel.PropertyDescriptor" /> nell'insieme.</param>
      <param name="comparer">Operatore di confronto da utilizzare per ordinare gli oggetti <see cref="T:System.ComponentModel.PropertyDescriptor" /> in questo insieme.</param>
      <returns>Nuovo insieme <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> che contiene gli oggetti <see cref="T:System.ComponentModel.PropertyDescriptor" /> ordinati.</returns>
    </member>
    <member name="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#Count">
      <summary>Ottiene il numero di elementi contenuti nella raccolta.</summary>
      <returns>Numero di elementi contenuti nella raccolta.</returns>
    </member>
    <member name="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Ottiene un valore che indica se l'accesso alla raccolta è sincronizzato (thread-safe).</summary>
      <returns>
        <see langword="true" /> se l'accesso alla raccolta è sincronizzato (thread-safe), altrimenti <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#SyncRoot">
      <summary>Ottiene un oggetto che può essere usato per sincronizzare l'accesso alla raccolta.</summary>
      <returns>Oggetto che può essere usato per sincronizzare l'accesso alla raccolta.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <summary>Aggiunge un elemento con la chiave e il valore forniti all'interfaccia <see cref="T:System.Collections.IDictionary" />.</summary>
      <param name="key">Oggetto <see cref="T:System.Object" /> da usare come chiave dell'elemento da aggiungere.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da usare come valore dell'elemento da aggiungere.</param>
      <exception cref="T:System.NotSupportedException">Raccolta in sola lettura.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Clear">
      <summary>Rimuove tutti gli elementi da <see cref="T:System.Collections.IDictionary" />.</summary>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Contains(System.Object)">
      <summary>Determina se <see cref="T:System.Collections.IDictionary" /> contiene un elemento con la chiave specificata.</summary>
      <param name="key">Chiave da individuare in <see cref="T:System.Collections.IDictionary" />.</param>
      <returns>
        <see langword="true" /> se <see cref="T:System.Collections.IDictionary" /> contiene un elemento con la chiave; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#GetEnumerator">
      <summary>Restituisce un enumeratore per questa classe.</summary>
      <returns>Enumeratore di tipo <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#IsFixedSize">
      <summary>Ottiene un valore che indica se <see cref="T:System.Collections.IDictionary" /> ha dimensioni fisse.</summary>
      <returns>
        <see langword="true" /> se <see cref="T:System.Collections.IDictionary" /> è di dimensioni fisse; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#IsReadOnly">
      <summary>Ottiene un valore che indica se <see cref="T:System.Collections.IDictionary" /> è di sola lettura.</summary>
      <returns>
        <see langword="true" /> se <see cref="T:System.Collections.IDictionary" /> è di sola lettura; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Item(System.Object)">
      <summary>Ottiene o imposta l'elemento con la chiave specificata.</summary>
      <param name="key">Chiave dell'elemento da ottenere o impostare.</param>
      <returns>Elemento con la chiave specificata.</returns>
    </member>
    <member name="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Keys">
      <summary>Ottiene <see cref="T:System.Collections.ICollection" /> contenente le chiavi di <see cref="T:System.Collections.IDictionary" />.</summary>
      <returns>Interfaccia <see cref="T:System.Collections.ICollection" /> contenente le chiavi dell'interfaccia <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Remove(System.Object)">
      <summary>Rimuove l'elemento con la chiave specificata da <see cref="T:System.Collections.IDictionary" />.</summary>
      <param name="key">Chiave dell'elemento da rimuovere.</param>
    </member>
    <member name="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Values">
      <summary>Ottiene <see cref="T:System.Collections.ICollection" /> contenente i valori in <see cref="T:System.Collections.IDictionary" />.</summary>
      <returns>Interfaccia <see cref="T:System.Collections.ICollection" /> contenente i valori dell'interfaccia <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Viene restituito un <see cref="T:System.Collections.IEnumerator" /> per l'oggetto <see cref="T:System.Collections.IDictionary" />.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> per l'oggetto <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Add(System.Object)">
      <summary>Aggiunge un elemento a <see cref="T:System.Collections.IList" />.</summary>
      <param name="value">Elemento da aggiungere alla raccolta.</param>
      <returns>Posizione in cui è stato inserito il nuovo elemento.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Clear">
      <summary>Rimuove tutti gli elementi dalla raccolta.</summary>
      <exception cref="T:System.NotSupportedException">Raccolta in sola lettura.</exception>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Contains(System.Object)">
      <summary>Determina se la raccolta contiene un valore specifico.</summary>
      <param name="value">Elemento da individuare nell'insieme.</param>
      <returns>
        <see langword="true" /> se l'elemento viene individuato nell'insieme; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>Determina l'indice di un elemento specifico dell'insieme.</summary>
      <param name="value">Elemento da individuare nell'insieme.</param>
      <returns>Indice di <paramref name="value" /> se si trova nell'elenco; in caso contrario -1.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Inserisce un elemento nella raccolta in corrispondenza di un indice specificato.</summary>
      <param name="index">Indice in base zero nel quale <paramref name="value" /> deve essere inserito.</param>
      <param name="value">Elemento da inserire nell'insieme.</param>
      <exception cref="T:System.NotSupportedException">Raccolta in sola lettura.</exception>
    </member>
    <member name="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IsFixedSize">
      <summary>Ottiene un valore che indica se la dimensione della raccolta è fissa.</summary>
      <returns>
        <see langword="true" /> se la raccolta è di dimensioni fisse; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IsReadOnly">
      <summary>Ottiene un valore che indica se la raccolta è di sola lettura.</summary>
      <returns>
        <see langword="true" /> se la raccolta è di sola lettura; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Item(System.Int32)">
      <summary>Ottiene o imposta un elemento dall'insieme in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero dell'elemento da ottenere o impostare.</param>
      <returns>Elemento in corrispondenza dell'indice specificato.</returns>
      <exception cref="T:System.NotSupportedException">Raccolta in sola lettura.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> non è un oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="index" /> è minore di 0.  
In alternativa 
 <paramref name="index" /> è uguale a o maggiore di <see cref="P:System.ComponentModel.EventDescriptorCollection.Count" />.</exception>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Remove(System.Object)">
      <summary>Rimuove dall'insieme la prima occorrenza del valore specificato.</summary>
      <param name="value">Elemento da rimuovere dall'insieme.</param>
      <exception cref="T:System.NotSupportedException">Raccolta in sola lettura.</exception>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>Rimuove l'elemento in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero dell'elemento da rimuovere.</param>
      <exception cref="T:System.NotSupportedException">Raccolta in sola lettura.</exception>
    </member>
    <member name="T:System.ComponentModel.PropertyTabAttribute">
      <summary>Consente di identificare la scheda o le schede delle proprietà da visualizzare per la classe o le classi specificate.</summary>
    </member>
    <member name="M:System.ComponentModel.PropertyTabAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.PropertyTabAttribute" />.</summary>
    </member>
    <member name="M:System.ComponentModel.PropertyTabAttribute.#ctor(System.String)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ComponentModel.PropertyTabAttribute" /> con il nome della classe della scheda specificato.</summary>
      <param name="tabClassName">Nome completo dall'assembly del tipo di scheda da creare. Per un esempio di questa convenzione dei formati,vedere la proprietà <see cref="P:System.Type.AssemblyQualifiedName" />.</param>
    </member>
    <member name="M:System.ComponentModel.PropertyTabAttribute.#ctor(System.String,System.ComponentModel.PropertyTabScope)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ComponentModel.PropertyTabAttribute" /> con il nome della classe della scheda e l'ambito della scheda specificati.</summary>
      <param name="tabClassName">Nome completo dall'assembly del tipo di scheda da creare. Per un esempio di questa convenzione dei formati,vedere la proprietà <see cref="P:System.Type.AssemblyQualifiedName" />.</param>
      <param name="tabScope">Oggetto <see cref="T:System.ComponentModel.PropertyTabScope" /> che indica l'ambito di questa scheda. Se l'ambito è <see cref="F:System.ComponentModel.PropertyTabScope.Component" />, verrà visualizzata soltanto per i componenti con l'attributo <see cref="T:System.ComponentModel.PropertyTabAttribute" /> corrispondente. Se è <see cref="F:System.ComponentModel.PropertyTabScope.Document" />, verrà visualizzata per tutti i componenti del documento.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tabScope" /> non è <see cref="F:System.ComponentModel.PropertyTabScope.Document" /> o <see cref="F:System.ComponentModel.PropertyTabScope.Component" />.</exception>
    </member>
    <member name="M:System.ComponentModel.PropertyTabAttribute.#ctor(System.Type)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ComponentModel.PropertyTabAttribute" /> utilizzando il tipo di scheda specificato.</summary>
      <param name="tabClass">Tipo di scheda da creare.</param>
    </member>
    <member name="M:System.ComponentModel.PropertyTabAttribute.#ctor(System.Type,System.ComponentModel.PropertyTabScope)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ComponentModel.PropertyTabAttribute" /> con il tipo di scheda e l'ambito della scheda specificati.</summary>
      <param name="tabClass">Tipo di scheda da creare.</param>
      <param name="tabScope">Oggetto <see cref="T:System.ComponentModel.PropertyTabScope" /> che indica l'ambito di questa scheda. Se l'ambito è <see cref="F:System.ComponentModel.PropertyTabScope.Component" />, verrà visualizzata soltanto per i componenti con l'attributo <see cref="T:System.ComponentModel.PropertyTabAttribute" /> corrispondente. Se è <see cref="F:System.ComponentModel.PropertyTabScope.Document" />, verrà visualizzata per tutti i componenti del documento.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tabScope" /> non è <see cref="F:System.ComponentModel.PropertyTabScope.Document" /> o <see cref="F:System.ComponentModel.PropertyTabScope.Component" />.</exception>
    </member>
    <member name="M:System.ComponentModel.PropertyTabAttribute.Equals(System.ComponentModel.PropertyTabAttribute)">
      <summary>Restituisce un valore che indica se l'istanza è uguale a un attributo specificato.</summary>
      <param name="other">Oggetto <see cref="T:System.ComponentModel.PropertyTabAttribute" /> da confrontare con questa istanza oppure <see langword="null" />.</param>
      <returns>
        <see langword="true" /> se le istanze di <see cref="T:System.ComponentModel.PropertyTabAttribute" /> sono uguali; in caso contrario <see langword="false" />.</returns>
      <exception cref="T:System.TypeLoadException">Non è stato possibile trovare i tipi specificati dalla proprietà <see cref="P:System.ComponentModel.PropertyTabAttribute.TabClassNames" /> del parametro <paramref name="other" />.</exception>
    </member>
    <member name="M:System.ComponentModel.PropertyTabAttribute.Equals(System.Object)">
      <summary>Restituisce un valore che indica se questa istanza è uguale a un oggetto specificato.</summary>
      <param name="other">Oggetto da confrontare con questa istanza o <see langword="null" />.</param>
      <returns>
        <see langword="true" /> se <paramref name="other" /> fa riferimento alla stessa istanza di <see cref="T:System.ComponentModel.PropertyTabAttribute" />; in caso contrario <see langword="false" />.</returns>
      <exception cref="T:System.TypeLoadException">Non è stato possibile trovare i tipi specificati dalla proprietà <see cref="P:System.ComponentModel.PropertyTabAttribute.TabClassNames" /> del parametro <paramref name="other" />.</exception>
    </member>
    <member name="M:System.ComponentModel.PropertyTabAttribute.GetHashCode">
      <summary>Ottiene il codice hash di questo oggetto.</summary>
      <returns>Il codice hash per l'oggetto a cui appartiene l'attributo.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyTabAttribute.InitializeArrays(System.String[],System.ComponentModel.PropertyTabScope[])">
      <summary>Consente di inizializzare l'attributo utilizzando i nomi specificati delle classi delle schede e la matrice degli ambiti delle schede.</summary>
      <param name="tabClassNames">Matrice di nomi completi dei tipi da creare per le schede della finestra Proprietà.</param>
      <param name="tabScopes">Ambito di ciascuna scheda. Se l'ambito è <see cref="F:System.ComponentModel.PropertyTabScope.Component" />, verrà visualizzata soltanto per i componenti con l'attributo <see cref="T:System.ComponentModel.PropertyTabAttribute" /> corrispondente. Se è <see cref="F:System.ComponentModel.PropertyTabScope.Document" />, verrà visualizzata per tutti i componenti del documento.</param>
      <exception cref="T:System.ArgumentException">Uno o più dei valori di <paramref name="tabScopes" /> non sono <see cref="F:System.ComponentModel.PropertyTabScope.Document" /> o <see cref="F:System.ComponentModel.PropertyTabScope.Component" />.  
-oppure- 
Le matrici <paramref name="tabClassNames" /> e <paramref name="tabScopes" /> hanno lunghezze diverse.  
-oppure- 
 <paramref name="tabClassNames" /> o <paramref name="tabScopes" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.PropertyTabAttribute.InitializeArrays(System.Type[],System.ComponentModel.PropertyTabScope[])">
      <summary>Consente di inizializzare l'attributo utilizzando i nomi specificati delle classi delle schede e la matrice degli ambiti delle schede.</summary>
      <param name="tabClasses">Tipi di schede da creare.</param>
      <param name="tabScopes">Ambito di ciascuna scheda. Se l'ambito è <see cref="F:System.ComponentModel.PropertyTabScope.Component" />, verrà visualizzata soltanto per i componenti con l'attributo <see cref="T:System.ComponentModel.PropertyTabAttribute" /> corrispondente. Se è <see cref="F:System.ComponentModel.PropertyTabScope.Document" />, verrà visualizzata per tutti i componenti del documento.</param>
      <exception cref="T:System.ArgumentException">Uno o più dei valori di <paramref name="tabScopes" /> non sono <see cref="F:System.ComponentModel.PropertyTabScope.Document" /> o <see cref="F:System.ComponentModel.PropertyTabScope.Component" />.  
-oppure- 
Le matrici <paramref name="tabClassNames" /> e <paramref name="tabScopes" /> hanno lunghezze diverse.  
-oppure- 
 <paramref name="tabClassNames" /> o <paramref name="tabScopes" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.PropertyTabAttribute.TabClasses">
      <summary>Ottiene i tipi di scheda utilizzati da questo attributo.</summary>
      <returns>Matrice di tipi che indicano i tipi di scheda utilizzati da questo attributo.</returns>
      <exception cref="T:System.TypeLoadException">Non è stato possibile trovare i tipi specificati dalla proprietà <see cref="P:System.ComponentModel.PropertyTabAttribute.TabClassNames" />.</exception>
    </member>
    <member name="P:System.ComponentModel.PropertyTabAttribute.TabClassNames">
      <summary>Ottiene i nomi delle classi delle schede utilizzate da questo attributo.</summary>
      <returns>Nomi delle classi delle schede utilizzate da questo attributo.</returns>
    </member>
    <member name="P:System.ComponentModel.PropertyTabAttribute.TabScopes">
      <summary>Ottiene una matrice di ambiti di ogni scheda di questo attributo <see cref="T:System.ComponentModel.PropertyTabAttribute" />.</summary>
      <returns>Matrice di oggetti <see cref="T:System.ComponentModel.PropertyTabScope" /> che indicano gli ambiti delle schede.</returns>
    </member>
    <member name="T:System.ComponentModel.PropertyTabScope">
      <summary>Consente di definire gli identificatori che indicano l'ambito di persistenza di una scheda nella finestra Proprietà.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyTabScope.Component">
      <summary>Questa scheda è specifica del componente corrente. Questa scheda viene aggiunta alla finestra Proprietà soltanto per il componente corrente e viene rimossa quando il componente non è più selezionato.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyTabScope.Document">
      <summary>Questa scheda è specifica del documento corrente. Questa scheda viene aggiunta alla finestra Proprietà e viene rimossa quando cambia il documento attualmente selezionato.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyTabScope.Global">
      <summary>Questa scheda viene aggiunta alla finestra Proprietà e può essere rimossa esplicitamente soltanto da un componente padre.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyTabScope.Static">
      <summary>Questa scheda viene aggiunta alla finestra Proprietà e non può essere rimossa.</summary>
    </member>
    <member name="T:System.ComponentModel.ProvidePropertyAttribute">
      <summary>Viene specificato il nome della proprietà fornita da un implementatore di <see cref="T:System.ComponentModel.IExtenderProvider" /> ad altri componenti. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.ComponentModel.ProvidePropertyAttribute.#ctor(System.String,System.String)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ComponentModel.ProvidePropertyAttribute" /> con il nome della proprietà e il tipo del ricevente.</summary>
      <param name="propertyName">Nome della proprietà che si estende a un oggetto del tipo specificato.</param>
      <param name="receiverTypeName">Nome del tipo di dati che la proprietà può estendere.</param>
    </member>
    <member name="M:System.ComponentModel.ProvidePropertyAttribute.#ctor(System.String,System.Type)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ComponentModel.ProvidePropertyAttribute" /> con il nome della proprietà e il <see cref="T:System.Type" />.</summary>
      <param name="propertyName">Nome della proprietà che si estende a un oggetto del tipo specificato.</param>
      <param name="receiverType">Oggetto <see cref="T:System.Type" /> del tipo di dati dell'oggetto che può ricevere la proprietà.</param>
    </member>
    <member name="M:System.ComponentModel.ProvidePropertyAttribute.Equals(System.Object)">
      <summary>Specifica se il valore dell'oggetto specificato è uguale all'oggetto <see cref="T:System.ComponentModel.ProvidePropertyAttribute" /> corrente.</summary>
      <param name="obj">Oggetto di cui va verificata l'uguaglianza di valore.</param>
      <returns>
        <see langword="true" /> se il valore dell'oggetto specificato è uguale a quello dell'oggetto corrente. <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="M:System.ComponentModel.ProvidePropertyAttribute.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Codice hash per l'oggetto <see cref="T:System.ComponentModel.ProvidePropertyAttribute" /> corrente.</returns>
    </member>
    <member name="P:System.ComponentModel.ProvidePropertyAttribute.PropertyName">
      <summary>Ottiene il nome di una proprietà fornita da questa classe.</summary>
      <returns>Nome di una proprietà fornita da questa classe.</returns>
    </member>
    <member name="P:System.ComponentModel.ProvidePropertyAttribute.ReceiverTypeName">
      <summary>Ottiene il nome del tipo di dati che la proprietà può estendere.</summary>
      <returns>Nome del tipo di dati che la proprietà può estendere.</returns>
    </member>
    <member name="P:System.ComponentModel.ProvidePropertyAttribute.TypeId">
      <summary>Ottiene un identificatore univoco per questo attributo.</summary>
      <returns>Un oggetto <see cref="T:System.Object" /> che rappresenta l'identificatore univoco dell'attributo.</returns>
    </member>
    <member name="T:System.ComponentModel.RecommendedAsConfigurableAttribute">
      <summary>Consente di specificare che la proprietà può essere utilizzata come un'impostazione dell'applicazione.</summary>
    </member>
    <member name="M:System.ComponentModel.RecommendedAsConfigurableAttribute.#ctor(System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.RecommendedAsConfigurableAttribute" />.</summary>
      <param name="recommendedAsConfigurable">
        <see langword="true" /> se la proprietà a cui è associato questo attributo può essere utilizzata come impostazione dell'applicazione, <see langword="false" /> in caso contrario.</param>
    </member>
    <member name="F:System.ComponentModel.RecommendedAsConfigurableAttribute.Default">
      <summary>Consente di specificare il valore predefinito per l'attributo <see cref="T:System.ComponentModel.RecommendedAsConfigurableAttribute" />, che è <see cref="F:System.ComponentModel.RecommendedAsConfigurableAttribute.No" />. Questo campo <see langword="static" /> è di sola lettura.</summary>
    </member>
    <member name="M:System.ComponentModel.RecommendedAsConfigurableAttribute.Equals(System.Object)">
      <summary>Indica se questa istanza e un oggetto specificato sono uguali.</summary>
      <param name="obj">Altro oggetto da confrontare.</param>
      <returns>
        <see langword="true" /> se <paramref name="obj" /> è uguale all'istanza; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.RecommendedAsConfigurableAttribute.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Codice hash per l'oggetto <see cref="T:System.ComponentModel.RecommendedAsConfigurableAttribute" /> corrente.</returns>
    </member>
    <member name="M:System.ComponentModel.RecommendedAsConfigurableAttribute.IsDefaultAttribute">
      <summary>Indica se il valore dell'istanza è quello predefinito per la classe.</summary>
      <returns>
        <see langword="true" /> se questa istanza è l'attributo predefinito per la classe. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="F:System.ComponentModel.RecommendedAsConfigurableAttribute.No">
      <summary>Consente di specificare che una proprietà non può essere utilizzata come impostazione dell'applicazione. Questo campo <see langword="static" /> è di sola lettura.</summary>
    </member>
    <member name="P:System.ComponentModel.RecommendedAsConfigurableAttribute.RecommendedAsConfigurable">
      <summary>Ottiene un valore che indica se la proprietà alla quale è associato questo attributo può essere utilizzata come impostazione dell'applicazione.</summary>
      <returns>
        <see langword="true" /> se la proprietà a cui è associato questo attributo può essere utilizzata come impostazione dell'applicazione, <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="F:System.ComponentModel.RecommendedAsConfigurableAttribute.Yes">
      <summary>Consente di specificare che una proprietà può essere utilizzata come impostazione dell'applicazione. Questo campo <see langword="static" /> è di sola lettura.</summary>
    </member>
    <member name="T:System.ComponentModel.ReferenceConverter">
      <summary>Fornisce un convertitore di tipi per convertire riferimenti a oggetti in e da altre rappresentazioni.</summary>
    </member>
    <member name="M:System.ComponentModel.ReferenceConverter.#ctor(System.Type)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.ReferenceConverter" />.</summary>
      <param name="type">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo da associare a questo convertitore di riferimenti.</param>
    </member>
    <member name="M:System.ComponentModel.ReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ottiene un valore che indica se il convertitore può convertire un oggetto dal tipo di origine specificato in un oggetto riferimento utilizzando il contesto specificato.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="sourceType">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo dal quale si desidera effettuare la conversione.</param>
      <returns>
        <see langword="true" /> se l'oggetto può eseguire la conversione. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converte l'oggetto specificato in un oggetto di tipo riferimento.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> che specifica le impostazioni cultura utilizzate per rappresentare il tipo di carattere.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire.</param>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta la conversione di <paramref name="value" />.</returns>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione.</exception>
    </member>
    <member name="M:System.ComponentModel.ReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converte l'oggetto valore specificato nel tipo riferimento utilizzando il contesto e gli argomenti specificati.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> che specifica le impostazioni cultura utilizzate per rappresentare il tipo di carattere.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire.</param>
      <param name="destinationType">Tipo in cui convertire l'oggetto.</param>
      <returns>Oggetto convertito.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione.</exception>
    </member>
    <member name="M:System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Ottiene un insieme di valori standard per il tipo di dati riferimento.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <returns>Insieme <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> con un set standard di valori validi oppure <see langword="null" /> se il tipo di dati non supporta un set standard di valori.</returns>
    </member>
    <member name="M:System.ComponentModel.ReferenceConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Ottiene un valore che indica se l'elenco di valori standard restituito dal metodo <see cref="M:System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> è un elenco esclusivo.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <returns>
        <see langword="true" /> perché l'oggetto <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> restituito da <see cref="M:System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> è un elenco completo dei valori possibili. Questo metodo non restituisce mai <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ReferenceConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Ottiene un valore che indica se il convertitore supporta un insieme di valori standard che possono essere selezionati da un elenco.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <returns>
        <see langword="true" /> perché è possibile chiamare il metodo <see cref="M:System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> per trovare un insieme comune di valori supportati dall'oggetto. Questo metodo non restituisce mai <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ReferenceConverter.IsValueAllowed(System.ComponentModel.ITypeDescriptorContext,System.Object)">
      <summary>Restituisce un valore che indica se è possibile aggiungere un determinato valore all'insieme dei valori standard.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto aggiuntivo.</param>
      <param name="value">Valore da controllare.</param>
      <returns>
        <see langword="true" /> se il valore è consentito e può essere aggiunto all'insieme dei valori standard, <see langword="false" /> se il valore non può essere aggiunto all'insieme dei valori standard.</returns>
    </member>
    <member name="T:System.ComponentModel.RefreshEventArgs">
      <summary>Fornisce dati per l'evento <see cref="E:System.ComponentModel.TypeDescriptor.Refreshed" />.</summary>
    </member>
    <member name="M:System.ComponentModel.RefreshEventArgs.#ctor(System.Object)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ComponentModel.RefreshEventArgs" /> con il componente modificato.</summary>
      <param name="componentChanged">Componente modificato.</param>
    </member>
    <member name="M:System.ComponentModel.RefreshEventArgs.#ctor(System.Type)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.ComponentModel.RefreshEventArgs" /> con il tipo di componente modificato.</summary>
      <param name="typeChanged">Oggetto <see cref="T:System.Type" /> modificato.</param>
    </member>
    <member name="P:System.ComponentModel.RefreshEventArgs.ComponentChanged">
      <summary>Ottiene il componente di cui cono stati modificati eventi, proprietà o estensioni.</summary>
      <returns>Componente di cui sono stati modificati eventi, proprietà o estensioni oppure <see langword="null" /> se sono stati modificati tutti i componenti dello stesso tipo.</returns>
    </member>
    <member name="P:System.ComponentModel.RefreshEventArgs.TypeChanged">
      <summary>Ottiene l'oggetto <see cref="T:System.Type" /> di cui sono stati modificati eventi o proprietà.</summary>
      <returns>Oggetto <see cref="T:System.Type" /> di cui sono stati modificati eventi o proprietà.</returns>
    </member>
    <member name="T:System.ComponentModel.RefreshEventHandler">
      <summary>Rappresenta il metodo che gestisce l'evento <see cref="E:System.ComponentModel.TypeDescriptor.Refreshed" /> generato quando viene modificato un oggetto <see cref="T:System.Type" /> o un componente in fase di progettazione.</summary>
      <param name="e">Oggetto <see cref="T:System.ComponentModel.RefreshEventArgs" /> che contiene il componente o l'oggetto <see cref="T:System.Type" /> modificato.</param>
    </member>
    <member name="T:System.ComponentModel.RunInstallerAttribute">
      <summary>Specifica se all'installazione dell'assembly verrà chiamato Installutil.exe (strumento Installer) o il programma di installazione delle azioni personalizzate di Visual Studio.</summary>
    </member>
    <member name="M:System.ComponentModel.RunInstallerAttribute.#ctor(System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.RunInstallerAttribute" />.</summary>
      <param name="runInstaller">
        <see langword="true" /> se durante l'installazione di un assembly deve essere richiamato un programma di installazione. <see langword="false" /> in caso contrario.</param>
    </member>
    <member name="F:System.ComponentModel.RunInstallerAttribute.Default">
      <summary>Specifica la visibilità predefinita, uguale a <see cref="F:System.ComponentModel.RunInstallerAttribute.No" />. Questo campo <see langword="static" /> è di sola lettura.</summary>
    </member>
    <member name="M:System.ComponentModel.RunInstallerAttribute.Equals(System.Object)">
      <summary>Determina se il valore dell'attributo <see cref="T:System.ComponentModel.RunInstallerAttribute" /> specificato è equivalente all'attributo <see cref="T:System.ComponentModel.RunInstallerAttribute" /> corrente.</summary>
      <param name="obj">Oggetto da confrontare.</param>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.ComponentModel.RunInstallerAttribute" /> specificato è uguale all'oggetto <see cref="T:System.ComponentModel.RunInstallerAttribute" /> corrente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.RunInstallerAttribute.GetHashCode">
      <summary>Genera un codice hash per l'oggetto <see cref="T:System.ComponentModel.RunInstallerAttribute" /> corrente.</summary>
      <returns>Codice hash per l'oggetto <see cref="T:System.ComponentModel.RunInstallerAttribute" /> corrente.</returns>
    </member>
    <member name="M:System.ComponentModel.RunInstallerAttribute.IsDefaultAttribute">
      <summary>Determina se questo attributo è predefinito.</summary>
      <returns>
        <see langword="true" /> se l'attributo è il valore predefinito per questa classe di attributi; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="F:System.ComponentModel.RunInstallerAttribute.No">
      <summary>Specifica che all'installazione dell'assembly non verrà chiamato Installutil.exe (strumento Installer) o il programma di installazione delle azioni personalizzate di Visual Studio. Questo campo <see langword="static" /> è di sola lettura.</summary>
    </member>
    <member name="P:System.ComponentModel.RunInstallerAttribute.RunInstaller">
      <summary>Ottiene un valore che indica se è necessario richiamare un programma di installazione durante l'installazione di un assembly.</summary>
      <returns>
        <see langword="true" /> se durante l'installazione di un assembly deve essere richiamato un programma di installazione. <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="F:System.ComponentModel.RunInstallerAttribute.Yes">
      <summary>Specifica che all'installazione dell'assembly verrà chiamato Installutil.exe (strumento Installer) o il programma di installazione delle azioni personalizzate di Visual Studio. Questo campo <see langword="static" /> è di sola lettura.</summary>
    </member>
    <member name="T:System.ComponentModel.SByteConverter">
      <summary>Fornisce un convertitore di tipi per convertire oggetti integer a 8 bit senza segno in e da una stringa.</summary>
    </member>
    <member name="M:System.ComponentModel.SByteConverter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.SByteConverter" />.</summary>
    </member>
    <member name="T:System.ComponentModel.SettingsBindableAttribute">
      <summary>Specifica quando è possibile associare una proprietà di componente a un'impostazione dell'applicazione.</summary>
    </member>
    <member name="M:System.ComponentModel.SettingsBindableAttribute.#ctor(System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.SettingsBindableAttribute" />.</summary>
      <param name="bindable">
        <see langword="true" /> per specificare che una proprietà è appropriata per l'associazione delle impostazioni; in caso contrario, <see langword="false" />.</param>
    </member>
    <member name="P:System.ComponentModel.SettingsBindableAttribute.Bindable">
      <summary>Ottiene un valore che indica se una proprietà è appropriata per l'associazione delle impostazioni.</summary>
      <returns>
        <see langword="true" /> se una proprietà è appropriata per l'associazione delle impostazioni; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.SettingsBindableAttribute.Equals(System.Object)">
      <summary>Restituisce un valore che indica se questa istanza è uguale a un oggetto specificato.</summary>
      <param name="obj">Oggetto <see cref="T:System.Object" /> da confrontare con questa istanza o un riferimento null (<see langword="Nothing" /> in Visual Basic).</param>
      <returns>
        <see langword="true" /> se <paramref name="obj" /> è uguale al tipo e al valore di questa istanza; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.SettingsBindableAttribute.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Codice hash di un intero con segno a 32 bit.</returns>
    </member>
    <member name="F:System.ComponentModel.SettingsBindableAttribute.No">
      <summary>Specifica che una proprietà non è appropriata per l'associazione delle impostazioni.</summary>
    </member>
    <member name="F:System.ComponentModel.SettingsBindableAttribute.Yes">
      <summary>Specifica che una proprietà è appropriata per l'associazione delle impostazioni.</summary>
    </member>
    <member name="T:System.ComponentModel.SingleConverter">
      <summary>Fornisce un convertitore di tipi per convertire oggetti numero in virgola mobile a precisione singola in e da diverse altre rappresentazioni.</summary>
    </member>
    <member name="M:System.ComponentModel.SingleConverter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.SingleConverter" />.</summary>
    </member>
    <member name="T:System.ComponentModel.StringConverter">
      <summary>Fornisce un convertitore di tipi per convertire oggetti stringa in e da altre rappresentazioni.</summary>
    </member>
    <member name="M:System.ComponentModel.StringConverter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.StringConverter" />.</summary>
    </member>
    <member name="M:System.ComponentModel.StringConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ottiene un valore che indica se il convertitore è in grado di convertire un oggetto dal tipo di origine specificato in una stringa tramite il contesto specificato.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="sourceType">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo dal quale si desidera effettuare la conversione.</param>
      <returns>
        <see langword="true" /> se il convertitore può eseguire la conversione. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.StringConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converte l'oggetto valore specificato in un oggetto <see cref="T:System.String" />.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> da usare.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire.</param>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il valore convertito.</returns>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione.</exception>
    </member>
    <member name="T:System.ComponentModel.SyntaxCheck">
      <summary>Fornisce metodi per verificare che il nome e il percorso del computer siano conformi a una sintassi specifica. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.ComponentModel.SyntaxCheck.CheckMachineName(System.String)">
      <summary>Controlla la sintassi del nome del computer per verificare che non contenga "\".</summary>
      <param name="value">Stringa contenente il nome del computer da controllare.</param>
      <returns>
        <see langword="true" /> se <paramref name="value" /> corrisponde al formato di nome del computer adeguato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.SyntaxCheck.CheckPath(System.String)">
      <summary>Controlla la sintassi del percorso per verificare se inizia con "\\".</summary>
      <param name="value">Stringa contenente il percorso da controllare.</param>
      <returns>
        <see langword="true" /> se <paramref name="value" /> corrisponde al formato di percorso adeguato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.SyntaxCheck.CheckRootedPath(System.String)">
      <summary>Controlla la sintassi del percorso per verificare se inizia con "\" o con la lettera di unità "C".</summary>
      <param name="value">Stringa contenente il percorso da controllare.</param>
      <returns>
        <see langword="true" /> se <paramref name="value" /> corrisponde al formato di percorso adeguato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.TimeSpanConverter">
      <summary>Fornisce un convertitore di tipi per convertire oggetti <see cref="T:System.TimeSpan" /> in e da altre rappresentazioni.</summary>
    </member>
    <member name="M:System.ComponentModel.TimeSpanConverter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.TimeSpanConverter" />.</summary>
    </member>
    <member name="M:System.ComponentModel.TimeSpanConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ottiene un valore che indica se il convertitore può convertire un oggetto dal tipo di origine specificato in un oggetto <see cref="T:System.TimeSpan" /> utilizzando il contesto specificato.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="sourceType">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo dal quale si desidera effettuare la conversione.</param>
      <returns>
        <see langword="true" /> se il convertitore può eseguire la conversione. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.TimeSpanConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ottiene un valore che indica se questo convertitore può convertire un oggetto nel tipo di destinazione specificato usando il contesto.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="destinationType">Tipo <see cref="T:System.Type" /> che rappresenta il tipo di destinazione della conversione.</param>
      <returns>
        <see langword="true" /> se il convertitore può eseguire la conversione. In caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> è <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> non è un valore valido per il tipo di destinazione.</exception>
    </member>
    <member name="M:System.ComponentModel.TimeSpanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converte l'oggetto specificato in un oggetto <see cref="T:System.TimeSpan" />.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> facoltativo. Se non vengono specificate impostazioni cultura, vengono utilizzate quelle correnti.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire.</param>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il valore convertito.</returns>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> non è un valore valido per il tipo di destinazione.</exception>
    </member>
    <member name="M:System.ComponentModel.TimeSpanConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converte l'oggetto specificato in un altro tipo.</summary>
      <param name="context">Contesto di un formattatore.</param>
      <param name="culture">Le impostazioni cultura in cui <paramref name="value" /> verrà convertito.</param>
      <param name="value">Oggetto da convertire.</param>
      <param name="destinationType">Tipo in cui convertire l'oggetto.</param>
      <returns>Oggetto convertito.</returns>
    </member>
    <member name="T:System.ComponentModel.ToolboxItemAttribute">
      <summary>Rappresenta un attributo di un elemento della casella degli strumenti.</summary>
    </member>
    <member name="M:System.ComponentModel.ToolboxItemAttribute.#ctor(System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.ToolboxItemAttribute" /> e specifica se utilizzare i valori di inizializzazione predefiniti.</summary>
      <param name="defaultType">
        <see langword="true" /> per creare l'attributo di un elemento della Casella degli strumenti per un tipo predefinito. <see langword="false" /> per non associare alcun supporto predefinito dell'elemento della Casella degli strumenti per questo attributo.</param>
    </member>
    <member name="M:System.ComponentModel.ToolboxItemAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.ToolboxItemAttribute" /> utilizzando il nome specificato del tipo.</summary>
      <param name="toolboxItemTypeName">Nomi del tipo dell'elemento della casella degli strumenti e dell'assembly che contiene il tipo.</param>
    </member>
    <member name="M:System.ComponentModel.ToolboxItemAttribute.#ctor(System.Type)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.ToolboxItemAttribute" /> utilizzando il tipo specificato dell'elemento della Casella degli strumenti.</summary>
      <param name="toolboxItemType">Tipo dell'elemento della Casella degli strumenti.</param>
    </member>
    <member name="F:System.ComponentModel.ToolboxItemAttribute.Default">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.ToolboxItemAttribute" /> e imposta il tipo sul valore predefinito, <see cref="T:System.Drawing.Design.ToolboxItem" />. Questo campo è di sola lettura.</summary>
    </member>
    <member name="M:System.ComponentModel.ToolboxItemAttribute.Equals(System.Object)">
      <summary>Restituisce un valore che indica se questa istanza è uguale a un oggetto specificato.</summary>
      <param name="obj">Oggetto <see cref="T:System.Object" /> da confrontare con questa istanza o un riferimento null (<see langword="Nothing" /> in Visual Basic).</param>
      <returns>
        <see langword="true" /> se <paramref name="obj" /> è uguale al tipo e al valore di questa istanza; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ToolboxItemAttribute.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Codice hash di un intero con segno a 32 bit.</returns>
    </member>
    <member name="M:System.ComponentModel.ToolboxItemAttribute.IsDefaultAttribute">
      <summary>Ottiene un valore che indica se il valore corrente dell'attributo è il valore predefinito dell'attributo stesso.</summary>
      <returns>
        <see langword="true" /> se il valore corrente dell'attributo è quello predefinito, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="F:System.ComponentModel.ToolboxItemAttribute.None">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.ToolboxItemAttribute" /> e imposta il tipo su <see langword="null" />. Questo campo è di sola lettura.</summary>
    </member>
    <member name="P:System.ComponentModel.ToolboxItemAttribute.ToolboxItemType">
      <summary>Ottiene o imposta il tipo dell'elemento della Casella degli strumenti.</summary>
      <returns>Tipo dell'elemento della Casella degli strumenti.</returns>
      <exception cref="T:System.ArgumentException">Impossibile trovare il tipo.</exception>
    </member>
    <member name="P:System.ComponentModel.ToolboxItemAttribute.ToolboxItemTypeName">
      <summary>Ottiene o imposta il nome del tipo dell'oggetto <see cref="T:System.Drawing.Design.ToolboxItem" /> corrente.</summary>
      <returns>Nome completo del tipo dell'elemento corrente della Casella degli strumenti.</returns>
    </member>
    <member name="T:System.ComponentModel.ToolboxItemFilterAttribute">
      <summary>Specifica la stringa e il tipo del filtro da utilizzare per un elemento della Casella degli strumenti.</summary>
    </member>
    <member name="M:System.ComponentModel.ToolboxItemFilterAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.ToolboxItemFilterAttribute" /> con la stringa del filtro specificata.</summary>
      <param name="filterString">Stringa del filtro per l'elemento della Casella degli strumenti.</param>
    </member>
    <member name="M:System.ComponentModel.ToolboxItemFilterAttribute.#ctor(System.String,System.ComponentModel.ToolboxItemFilterType)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.ToolboxItemFilterAttribute" /> con il tipo e la stringa del filtro specificati.</summary>
      <param name="filterString">Stringa del filtro per l'elemento della Casella degli strumenti.</param>
      <param name="filterType">Oggetto <see cref="T:System.ComponentModel.ToolboxItemFilterType" /> che indica il tipo del filtro.</param>
    </member>
    <member name="M:System.ComponentModel.ToolboxItemFilterAttribute.Equals(System.Object)">
      <summary>Restituisce un valore che indica se questa istanza è uguale a un oggetto specificato.</summary>
      <param name="obj">Oggetto <see cref="T:System.Object" /> da confrontare con questa istanza o un riferimento null (<see langword="Nothing" /> in Visual Basic).</param>
      <returns>
        <see langword="true" /> se <paramref name="obj" /> è uguale al tipo e al valore di questa istanza; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ToolboxItemFilterAttribute.FilterString">
      <summary>Ottiene la stringa del filtro per l'elemento della Casella degli strumenti.</summary>
      <returns>Stringa del filtro per l'elemento della Casella degli strumenti.</returns>
    </member>
    <member name="P:System.ComponentModel.ToolboxItemFilterAttribute.FilterType">
      <summary>Ottiene il tipo del filtro.</summary>
      <returns>Oggetto <see cref="T:System.ComponentModel.ToolboxItemFilterType" /> che indica il tipo del filtro.</returns>
    </member>
    <member name="M:System.ComponentModel.ToolboxItemFilterAttribute.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Codice hash di un intero con segno a 32 bit.</returns>
    </member>
    <member name="M:System.ComponentModel.ToolboxItemFilterAttribute.Match(System.Object)">
      <summary>Indica se l'oggetto specificato dispone di una stringa del filtro corrispondente.</summary>
      <param name="obj">Oggetto di cui verificare la stringa del filtro corrispondente.</param>
      <returns>
        <see langword="true" /> se l'oggetto specificato dispone di una stringa del filtro corrispondente. <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="M:System.ComponentModel.ToolboxItemFilterAttribute.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="P:System.ComponentModel.ToolboxItemFilterAttribute.TypeId">
      <summary>Ottiene l'ID del tipo per l'attributo.</summary>
      <returns>ID del tipo per questo attributo. Tutti gli oggetti <see cref="T:System.ComponentModel.ToolboxItemFilterAttribute" /> con la stessa stringa del filtro restituiscono il medesimo ID del tipo.</returns>
    </member>
    <member name="T:System.ComponentModel.ToolboxItemFilterType">
      <summary>Definisce gli identificatori utilizzati per indicare il tipo di filtro impiegato da una classe <see cref="T:System.ComponentModel.ToolboxItemFilterAttribute" />.</summary>
    </member>
    <member name="F:System.ComponentModel.ToolboxItemFilterType.Allow">
      <summary>Indica che è consentita, ma non richiesta, una stringa del filtro per un elemento della Casella degli strumenti.</summary>
    </member>
    <member name="F:System.ComponentModel.ToolboxItemFilterType.Custom">
      <summary>Indica che è richiesta un'elaborazione personalizzata per stabilire se utilizzare una stringa del filtro per un elemento della Casella degli strumenti. In genere viene specificato in una classe della finestra di progettazione radice per indicare se la finestra di progettazione accetta o rifiuta un elemento della casella degli strumenti attraverso il codice. La finestra di progettazione deve implementare il metodo <see cref="M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)" /> dell'interfaccia <see cref="T:System.Drawing.Design.IToolboxUser" />.</summary>
    </member>
    <member name="F:System.ComponentModel.ToolboxItemFilterType.Prevent">
      <summary>Indica che non è consentita una stringa del filtro per un elemento della Casella degli strumenti. Se una finestra di progettazione e una classe del componente hanno entrambe una stringa di filtro e il valore di una è <c>ToolboxItemFilterType.Prevent</c>, l'elemento della casella degli strumenti non sarà disponibile.</summary>
    </member>
    <member name="F:System.ComponentModel.ToolboxItemFilterType.Require">
      <summary>Indica che per l'attivazione di un elemento della Casella degli strumenti è necessaria una stringa del filtro.  Per abilitare un elemento della casella degli strumenti con tipo di filtro <c>Require</c>, è necessario che la finestra di progettazione e la classe del componente abbiano una stringa di filtro corrispondente. Inoltre, né la finestra di progettazione, né la classe del componente devono avere un tipo di filtro <c>Prevent</c> perché sia possibile abilitare l'elemento della casella degli strumenti.</summary>
    </member>
    <member name="T:System.ComponentModel.TypeConverter">
      <summary>Rappresenta una soluzione unica per la conversione di tipi di valori in altri tipi, oltre che per l'accesso a sottoproprietà e valori standard.</summary>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.TypeConverter" />.</summary>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Restituisce un valore che indica se il convertitore può convertire un oggetto del tipo specificato nel tipo di questo convertitore, usando il contesto specificato.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="sourceType">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo da cui eseguire la conversione.</param>
      <returns>
        <see langword="true" /> se il convertitore può eseguire la conversione. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)">
      <summary>Indica se questo convertitore può convertire un oggetto del tipo specificato nel tipo di questo convertitore.</summary>
      <param name="sourceType">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo da cui eseguire la conversione.</param>
      <returns>
        <see langword="true" /> se il convertitore può eseguire la conversione. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Restituisce un valore che indica se il convertitore può convertire l'oggetto nel tipo specificato usando il contesto specificato.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="destinationType">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo in cui eseguire la conversione.</param>
      <returns>
        <see langword="true" /> se il convertitore può eseguire la conversione. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)">
      <summary>Indica se questo convertitore può convertire l'oggetto nel tipo specificato.</summary>
      <param name="destinationType">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo in cui eseguire la conversione.</param>
      <returns>
        <see langword="true" /> se il convertitore può eseguire la conversione. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converte l'oggetto indicato nel tipo di questo convertitore usando il contesto e le informazioni sulle impostazioni cultura specificati.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> da usare come impostazioni cultura correnti.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire.</param>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il valore convertito.</returns>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)">
      <summary>Converte il valore specificato nel tipo di questo convertitore.</summary>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire.</param>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il valore convertito.</returns>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)">
      <summary>Converte la stringa specificata nel tipo di questo convertitore, utilizzando le impostazioni cultura inglesi e il contesto specificato.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="text">Oggetto <see cref="T:System.String" /> da convertire.</param>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il testo convertito.</returns>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)">
      <summary>Converte la stringa specificata nel tipo di questo convertitore, utilizzando le impostazioni cultura invarianti.</summary>
      <param name="text">Oggetto <see cref="T:System.String" /> da convertire.</param>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il testo convertito.</returns>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)">
      <summary>Converte il testo specificato in un oggetto, utilizzando il contesto specificato e le informazioni sulle impostazioni cultura.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" />. Se viene passato <see langword="null" /> , verranno usate le impostazioni cultura correnti.</param>
      <param name="text">Oggetto <see cref="T:System.String" /> da convertire.</param>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il testo convertito.</returns>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)">
      <summary>Converte il testo specificato in un oggetto, utilizzando il contesto specificato.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="text">Oggetto <see cref="T:System.String" /> da convertire.</param>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il testo convertito.</returns>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)">
      <summary>Converte il testo specificato in un oggetto.</summary>
      <param name="text">Rappresentazione di testo dell'oggetto da convertire.</param>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il testo convertito.</returns>
      <exception cref="T:System.NotSupportedException">Impossibile convertire la stringa nell'oggetto appropriato.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converte l'oggetto valore indicato nel tipo specificato, usando il contesto e le informazioni sulle impostazioni cultura specificati.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" />. Se viene passato <see langword="null" /> , verranno usate le impostazioni cultura correnti.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire.</param>
      <param name="destinationType">
        <see cref="T:System.Type" /> in cui convertire il parametro <paramref name="value" />.</param>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il valore convertito.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="destinationType" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)">
      <summary>Converte l'oggetto valore specificato nel tipo specificato, utilizzando gli argomenti.</summary>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire.</param>
      <param name="destinationType">
        <see cref="T:System.Type" /> in cui convertire il parametro <paramref name="value" />.</param>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il valore convertito.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="destinationType" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)">
      <summary>Converte il valore specificato in una rappresentazione in formato stringa indipendente dalle impostazioni cultura, utilizzando il contesto specificato.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire.</param>
      <returns>
        <see cref="T:System.String" /> che rappresenta il valore convertito.</returns>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)">
      <summary>Converte il valore specificato in una rappresentazione in formato stringa indipendente dalle impostazioni cultura.</summary>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire.</param>
      <returns>
        <see cref="T:System.String" /> che rappresenta il valore convertito.</returns>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converte il valore specificato in una rappresentazione in formato stringa, utilizzando il contesto specificato e le informazioni sulle impostazioni cultura.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" />. Se viene passato <see langword="null" /> , verranno usate le impostazioni cultura correnti.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire.</param>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il valore convertito.</returns>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)">
      <summary>Converte il valore specificato in una rappresentazione in formato stringa, utilizzando il contesto specificato.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire.</param>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il valore convertito.</returns>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)">
      <summary>Converte il valore specificato in una rappresentazione in formato stringa.</summary>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire.</param>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il valore convertito.</returns>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)">
      <summary>Ricrea un oggetto <see cref="T:System.Object" /> in base a un set di valori di proprietà dell'oggetto.</summary>
      <param name="propertyValues">Oggetto <see cref="T:System.Collections.IDictionary" /> che rappresenta un dizionario di nuovi valori di proprietà.</param>
      <returns>
        <see cref="T:System.Object" /> che rappresenta l'oggetto <see cref="T:System.Collections.IDictionary" /> specificato oppure <see langword="null" /> se non è possibile creare l'oggetto. Questo metodo restituisce sempre <see langword="null" />.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>Crea un'istanza del tipo a cui questo oggetto <see cref="T:System.ComponentModel.TypeConverter" /> è associato, usando il contesto specificato, dato un set di valori di proprietà per l'oggetto.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="propertyValues">
        <see cref="T:System.Collections.IDictionary" /> dei nuovi valori di proprietà.</param>
      <returns>
        <see cref="T:System.Object" /> che rappresenta l'oggetto <see cref="T:System.Collections.IDictionary" /> specificato oppure <see langword="null" /> se non è possibile creare l'oggetto. Questo metodo restituisce sempre <see langword="null" />.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)">
      <summary>Restituisce un'eccezione da generare quando non è possibile eseguire una conversione.</summary>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire oppure <see langword="null" /> se l'oggetto non è disponibile.</param>
      <returns>Oggetto <see cref="T:System.Exception" /> che rappresenta l'eccezione da generare quando non è possibile eseguire una conversione.</returns>
      <exception cref="T:System.NotSupportedException">Generata automaticamente da questo metodo.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)">
      <summary>Restituisce un'eccezione da generare quando non è possibile eseguire una conversione.</summary>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire oppure <see langword="null" /> se l'oggetto non è disponibile.</param>
      <param name="destinationType">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo nel quale si cerca di eseguire la conversione.</param>
      <returns>Oggetto <see cref="T:System.Exception" /> che rappresenta l'eccezione da generare quando non è possibile eseguire una conversione.</returns>
      <exception cref="T:System.NotSupportedException">Generata automaticamente da questo metodo.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported">
      <summary>Restituisce se la modifica di un valore su questo oggetto richiede una chiamata al metodo <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> per creare un nuovo valore.</summary>
      <returns>
        <see langword="true" /> se la modifica di una proprietà di questo oggetto richiede la chiamata al metodo <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> per creare un nuovo valore; <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Indica se la modifica di un valore di questo oggetto richiede la chiamata del metodo <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> per creare un nuovo valore utilizzando il contesto specificato.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <returns>
        <see langword="true" /> se la modifica di una proprietà di questo oggetto richiede la chiamata al metodo <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> per creare un nuovo valore; <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)">
      <summary>Restituisce un insieme di proprietà per il tipo di matrice specificato dal parametro del valore utilizzando il contesto specificato.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> che specifica il tipo di matrice di cui ottenere le proprietà.</param>
      <returns>Insieme <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> con le proprietà esposte per questo tipo di dati oppure <see langword="null" /> se non vi sono proprietà.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>Restituisce un insieme di proprietà per il tipo di matrice specificato dal parametro del valore utilizzando il contesto e gli attributi specificati.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> che specifica il tipo di matrice di cui ottenere le proprietà.</param>
      <param name="attributes">Matrice di tipo <see cref="T:System.Attribute" /> utilizzata come filtro.</param>
      <returns>Insieme <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> con le proprietà esposte per questo tipo di dati oppure <see langword="null" /> se non vi sono proprietà.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)">
      <summary>Restituisce un insieme di proprietà per il tipo di matrice specificato dal parametro del valore.</summary>
      <param name="value">Oggetto <see cref="T:System.Object" /> che specifica il tipo di matrice di cui ottenere le proprietà.</param>
      <returns>Insieme <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> con le proprietà esposte per questo tipo di dati oppure <see langword="null" /> se non vi sono proprietà.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.GetPropertiesSupported">
      <summary>Indica se questo oggetto supporta le proprietà.</summary>
      <returns>
        <see langword="true" /> se occorre chiamare <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> per trovare le proprietà di questo oggetto. <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Indica se questo oggetto supporta le proprietà, utilizzando il contesto specificato.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <returns>
        <see langword="true" /> se occorre chiamare <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> per trovare le proprietà di questo oggetto. <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.GetStandardValues">
      <summary>Restituisce un insieme di valori standard dal contesto predefinito del tipo di dati per il quale è stato progettato questo convertitore di tipi.</summary>
      <returns>Insieme <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> con un gruppo standard di valori validi oppure <see langword="null" /> se il tipo di dati non supporta un gruppo standard di valori.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Restituisce un insieme di valori standard del tipo di dati per il quale è stato progettato questo convertitore di tipi, quando viene fornito un contesto di formato.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato, utilizzabile per estrarre informazioni aggiuntive sull'ambiente da cui viene richiamato il convertitore. Questo parametro o le proprietà di questo parametro possono essere <see langword="null" />.</param>
      <returns>Insieme <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> con un set standard di valori validi oppure <see langword="null" /> se il tipo di dati non supporta un set standard di valori.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive">
      <summary>Indica se l'insieme di valori standard restituiti dal metodo <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> rappresenta un elenco esclusivo.</summary>
      <returns>
        <see langword="true" /> se l'insieme <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> restituito dal metodo <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> rappresenta un elenco completo dei valori possibili. <see langword="false" /> se sono possibili altri valori.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Indica se l'insieme di valori standard restituiti dal metodo <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> rappresenta un elenco esclusivo di valori possibili, utilizzando il contesto specificato.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <returns>
        <see langword="true" /> se l'insieme <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> restituito dal metodo <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> rappresenta un elenco completo dei valori possibili. <see langword="false" /> se sono possibili altri valori.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported">
      <summary>Indica se questo oggetto supporta un gruppo standard di valori selezionabili da un elenco.</summary>
      <returns>
        <see langword="true" /> se è necessario chiamare il metodo <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> per individuare un insieme comune di valori supportati dall’oggetto; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Indica se questo oggetto supporta un insieme standard di valori selezionabili da un elenco, utilizzando il contesto specificato.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <returns>
        <see langword="true" /> se è necessario chiamare il metodo <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> per individuare un insieme comune di valori supportati dall’oggetto; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
      <summary>Indica se l'oggetto valore specificato è valido per questo tipo e per il contesto specificato.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> di cui eseguire il test di validità.</param>
      <returns>
        <see langword="true" /> se il valore specificato è valido per questo oggetto. <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.IsValid(System.Object)">
      <summary>Indica se l'oggetto valore specificato è valido per questo tipo.</summary>
      <param name="value">Oggetto di cui eseguire il test di validità.</param>
      <returns>
        <see langword="true" /> se il valore specificato è valido per questo oggetto. <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor">
      <summary>Rappresenta una classe <see langword="abstract" /> che fornisce proprietà per oggetti che non presentano proprietà.</summary>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.#ctor(System.Type,System.String,System.Type)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />.</summary>
      <param name="componentType">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo di componente al quale è associato questo descrittore di proprietà.</param>
      <param name="name">Nome della proprietà.</param>
      <param name="propertyType">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo di dati per questa proprietà.</param>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.#ctor(System.Type,System.String,System.Type,System.Attribute[])">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />.</summary>
      <param name="componentType">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo di componente al quale è associato questo descrittore di proprietà.</param>
      <param name="name">Nome della proprietà.</param>
      <param name="propertyType">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo di dati per questa proprietà.</param>
      <param name="attributes">Matrice di <see cref="T:System.Attribute" /> contenente gli attributi da associare alla proprietà.</param>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.CanResetValue(System.Object)">
      <summary>Indica se reimpostando il componente cambia il valore del componente stesso.</summary>
      <param name="component">Componente di cui eseguire il test di reimpostazione.</param>
      <returns>
        <see langword="true" /> se reimpostando il componente cambia il relativo valore. <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="P:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ComponentType">
      <summary>Ottiene il tipo di componente a cui è associato questo descrittore di proprietà.</summary>
      <returns>Oggetto <see cref="T:System.Type" /> che rappresenta il tipo di componente al quale è associata questa proprietà.</returns>
    </member>
    <member name="P:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.IsReadOnly">
      <summary>Ottiene un valore che indica se questa proprietà è di sola lettura.</summary>
      <returns>
        <see langword="true" /> se la proprietà è di sola lettura. <see langword="false" /> se la proprietà è di lettura/scrittura.</returns>
    </member>
    <member name="P:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.PropertyType">
      <summary>Ottiene il tipo della proprietà.</summary>
      <returns>Oggetto <see cref="T:System.Type" /> che rappresenta il tipo della proprietà.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ResetValue(System.Object)">
      <summary>Reimposta il valore per questa proprietà del componente.</summary>
      <param name="component">Componente con valore di proprietà da reimpostare.</param>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ShouldSerializeValue(System.Object)">
      <summary>Indica se il valore di questa proprietà può essere conservato.</summary>
      <param name="component">Componente con proprietà di cui verificare la persistenza.</param>
      <returns>
        <see langword="true" /> se il valore della proprietà può essere conservato. <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])">
      <summary>Ordina un insieme di proprietà.</summary>
      <param name="props">Insieme <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> contenente le proprietà da ordinare.</param>
      <param name="names">Matrice di nomi nell'ordine in cui si desidera visualizzare le proprietà dell'insieme.</param>
      <returns>Insieme <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> che contiene le proprietà ordinate.</returns>
    </member>
    <member name="T:System.ComponentModel.TypeConverter.StandardValuesCollection">
      <summary>Rappresenta un insieme di valori.</summary>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.StandardValuesCollection.#ctor(System.Collections.ICollection)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />.</summary>
      <param name="values">Oggetto <see cref="T:System.Collections.ICollection" /> che rappresenta gli oggetti da inserire nell'insieme.</param>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.StandardValuesCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copia il contenuto di questo insieme in una matrice.</summary>
      <param name="array">Oggetto <see cref="T:System.Array" /> che rappresenta la matrice in cui effettuare la copia.</param>
      <param name="index">Indice da cui iniziare.</param>
    </member>
    <member name="P:System.ComponentModel.TypeConverter.StandardValuesCollection.Count">
      <summary>Ottiene il numero degli oggetti nella raccolta.</summary>
      <returns>Numero di oggetti della raccolta.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.StandardValuesCollection.GetEnumerator">
      <summary>Restituisce un enumeratore per questo insieme.</summary>
      <returns>Enumeratore di tipo <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="P:System.ComponentModel.TypeConverter.StandardValuesCollection.Item(System.Int32)">
      <summary>Ottiene l'oggetto in corrispondenza del numero di indice specificato.</summary>
      <param name="index">Indice a base zero dell'oggetto <see cref="T:System.Object" /> da ottenere dall'insieme.</param>
      <returns>Oggetto <see cref="T:System.Object" /> con l'indice specificato.</returns>
    </member>
    <member name="P:System.ComponentModel.TypeConverter.StandardValuesCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Per una descrizione di questo membro, vedere <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>
        <see langword="false" /> in tutti i casi.</returns>
    </member>
    <member name="P:System.ComponentModel.TypeConverter.StandardValuesCollection.System#Collections#ICollection#SyncRoot">
      <summary>Per una descrizione di questo membro, vedere <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>
        <see langword="null" /> in tutti i casi.</returns>
    </member>
    <member name="T:System.ComponentModel.TypeConverterAttribute">
      <summary>Specifica il tipo da utilizzare come convertitore per l'oggetto a cui l'attributo è associato.</summary>
    </member>
    <member name="M:System.ComponentModel.TypeConverterAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.TypeConverterAttribute" /> con il convertitore di tipi predefinito, ovvero una stringa vuota ("").</summary>
    </member>
    <member name="M:System.ComponentModel.TypeConverterAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.TypeConverterAttribute" />, utilizzando il nome del tipo specificato come convertitore di dati per l'oggetto a cui è associato questo attributo.</summary>
      <param name="typeName">Nome completo della classe da utilizzare per la conversione dei dati per l'oggetto a cui è associato questo attributo.</param>
    </member>
    <member name="M:System.ComponentModel.TypeConverterAttribute.#ctor(System.Type)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.TypeConverterAttribute" />, utilizzando il nome del tipo specificato come convertitore di dati per l'oggetto a cui è associato questo attributo.</summary>
      <param name="type">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo della classe del convertitore da utilizzare per la conversione dei dati per l'oggetto a cui è associato questo attributo.</param>
    </member>
    <member name="P:System.ComponentModel.TypeConverterAttribute.ConverterTypeName">
      <summary>Ottiene il nome di tipo completo dell'oggetto <see cref="T:System.Type" /> da utilizzare come convertitore per l'oggetto a cui è associato questo attributo.</summary>
      <returns>Nome di tipo completo dell'oggetto <see cref="T:System.Type" /> da utilizzare come convertitore per l'oggetto a cui è associato questo attributo o, in mancanza, una stringa vuota (""). Il valore predefinito è una stringa vuota ("").</returns>
    </member>
    <member name="F:System.ComponentModel.TypeConverterAttribute.Default">
      <summary>Specifica il tipo da utilizzare come convertitore per l'oggetto a cui è associato questo attributo.</summary>
    </member>
    <member name="M:System.ComponentModel.TypeConverterAttribute.Equals(System.Object)">
      <summary>Specifica se il valore dell'oggetto specificato è uguale all'oggetto <see cref="T:System.ComponentModel.TypeConverterAttribute" /> corrente.</summary>
      <param name="obj">Oggetto di cui va verificata l'uguaglianza di valore.</param>
      <returns>
        <see langword="true" /> se il valore dell'oggetto specificato è uguale a quello dell'oggetto corrente <see cref="T:System.ComponentModel.TypeConverterAttribute" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverterAttribute.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Codice hash per l'oggetto <see cref="T:System.ComponentModel.TypeConverterAttribute" /> corrente.</returns>
    </member>
    <member name="T:System.ComponentModel.TypeDescriptionProvider">
      <summary>Fornisce metadati aggiuntivi all'oggetto <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptionProvider.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.TypeDescriptionProvider" />.</summary>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> utilizzando un provider della descrizione dei tipi padre.</summary>
      <param name="parent">Provider della descrizione dei tipi padre.</param>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
      <summary>Crea un oggetto che può sostituire un altro tipo di dati.</summary>
      <param name="provider">Provider di servizi facoltativo.</param>
      <param name="objectType">Tipo di oggetto da creare. Il parametro non è mai <see langword="null" />.</param>
      <param name="argTypes">Matrice facoltativa dei tipi che rappresentano i tipi di parametro da passare al costruttore dell'oggetto. Questa matrice può essere <see langword="null" /> o di lunghezza zero.</param>
      <param name="args">Matrice facoltativa dei valori di parametro da passare al costruttore dell'oggetto.</param>
      <returns>Oggetto <see cref="T:System.Object" /> sostitutivo.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
      <summary>Ottiene una cache per oggetto, accessibile come interfaccia <see cref="T:System.Collections.IDictionary" /> di coppie chiave/valore.</summary>
      <param name="instance">Oggetto per cui ottenere la cache.</param>
      <returns>Un oggetto <see cref="T:System.Collections.IDictionary" /> se l'oggetto fornito supporta l'inserimento nella cache, altrimenti <see langword="null" />.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)">
      <summary>Ottiene un descrittore di tipi personalizzato esteso per l'oggetto specificato.</summary>
      <param name="instance">Oggetto per cui ottenere il descrittore di tipi esteso.</param>
      <returns>Oggetto <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> che può fornire metadati estesi per l'oggetto.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(System.Object)">
      <summary>Ottiene i provider di estensione per l'oggetto specificato.</summary>
      <param name="instance">Oggetto per cui ottenere i provider di estensione.</param>
      <returns>Matrice di provider di estensione per <paramref name="instance" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)">
      <summary>Ottiene il nome del componente specificato oppure <see langword="null" /> se il componente non ha alcun nome.</summary>
      <param name="component">Il componente specificato.</param>
      <returns>Nome del componente specificato.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)">
      <summary>Effettua la reflection normale per l'oggetto specificato.</summary>
      <param name="instance">Istanza del tipo specificato (deve essere diverso da <see langword="null" />).</param>
      <returns>Tipo di reflection per questo oggetto <paramref name="instance" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)">
      <summary>Effettua la reflection normale per un tipo.</summary>
      <param name="objectType">Tipo di oggetto per cui recuperare l'interfaccia <see cref="T:System.Reflection.IReflect" />.</param>
      <returns>Tipo di reflection per questo oggetto <paramref name="objectType" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="objectType" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)">
      <summary>Effettua la reflection normale per l'oggetto specificato con il tipo indicato.</summary>
      <param name="objectType">Tipo di oggetto per cui recuperare l'interfaccia <see cref="T:System.Reflection.IReflect" />.</param>
      <param name="instance">Istanza del tipo. Può essere <see langword="null" />.</param>
      <returns>Tipo di reflection per questo oggetto <paramref name="objectType" />.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)">
      <summary>Converte un tipo di reflection in un tipo in fase di esecuzione.</summary>
      <param name="reflectionType">Tipo da convertire nell'equivalente in fase di esecuzione.</param>
      <returns>Oggetto <see cref="T:System.Type" /> che rappresenta l'equivalente in fase di esecuzione di <paramref name="reflectionType" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reflectionType" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)">
      <summary>Ottiene un descrittore di tipi personalizzato per l'oggetto.</summary>
      <param name="instance">Istanza del tipo. Può essere <see langword="null" /> se nessuna istanza è stata passata all'oggetto <see cref="T:System.ComponentModel.TypeDescriptor" />.</param>
      <returns>Oggetto <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> che può fornire metadati per il tipo.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type)">
      <summary>Ottiene un descrittore di tipi personalizzato per il tipo specificato.</summary>
      <param name="objectType">Tipo di oggetto per cui recuperare il descrittore di tipi.</param>
      <returns>Oggetto <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> che può fornire metadati per il tipo.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)">
      <summary>Imposta un descrittore di tipi personalizzato per il tipo e l'oggetto specificati.</summary>
      <param name="objectType">Tipo di oggetto per cui recuperare il descrittore di tipi.</param>
      <param name="instance">Istanza del tipo. Può essere <see langword="null" /> se nessuna istanza è stata passata all'oggetto <see cref="T:System.ComponentModel.TypeDescriptor" />.</param>
      <returns>Oggetto <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> che può fornire metadati per il tipo.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptionProvider.IsSupportedType(System.Type)">
      <summary>Ottiene un valore che indica se il tipo specificato è compatibile con la descrizione del tipo e la catena di provider di descrizione del tipo.</summary>
      <param name="type">Tipo di cui testare la compatibilità.</param>
      <returns>
        <see langword="true" /> se <paramref name="type" /> è compatibile con la descrizione del tipo e la catena di provider di descrizione del tipo. In caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> è <see langword="null" />.</exception>
    </member>
    <member name="T:System.ComponentModel.TypeDescriptionProviderAttribute">
      <summary>Specifica il provider della descrizione dei tipi personalizzato per una classe. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptionProviderAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.TypeDescriptionProviderAttribute" /> utilizzando il nome del tipo specificato.</summary>
      <param name="typeName">Nome completo del tipo.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeName" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptionProviderAttribute.#ctor(System.Type)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.TypeDescriptionProviderAttribute" /> utilizzando il tipo specificato.</summary>
      <param name="type">Tipo da archiviare nell'attributo.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.TypeDescriptionProviderAttribute.TypeName">
      <summary>Ottiene il nome del tipo per il provider della descrizione dei tipi.</summary>
      <returns>Oggetto <see cref="T:System.String" /> contenente il nome completo del tipo per l'oggetto <see cref="T:System.ComponentModel.TypeDescriptionProvider" />.</returns>
    </member>
    <member name="T:System.ComponentModel.TypeDescriptor">
      <summary>Offre informazioni sulle caratteristiche di un componente, ad esempio gli attributi, le proprietà e gli eventi. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])">
      <summary>Aggiunge attributi a livello di classe all'istanza del componente di destinazione.</summary>
      <param name="instance">Istanza del componente di destinazione.</param>
      <param name="attributes">Matrice di oggetti <see cref="T:System.Attribute" /> da aggiungere alla classe del componente.</param>
      <returns>L'oggetto <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> appena creato, utilizzato per aggiungere gli attributi specificati.</returns>
      <exception cref="T:System.ArgumentNullException">Uno o entrambi i parametri sono <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])">
      <summary>Aggiunge attributi a livello di classe al tipo del componente di destinazione.</summary>
      <param name="type">Oggetto <see cref="T:System.Type" /> del componente di destinazione.</param>
      <param name="attributes">Matrice di oggetti <see cref="T:System.Attribute" /> da aggiungere alla classe del componente.</param>
      <returns>L'oggetto <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> appena creato, utilizzato per aggiungere gli attributi specificati.</returns>
      <exception cref="T:System.ArgumentNullException">Uno o entrambi i parametri sono <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
      <summary>Aggiunge una tabella editor per il tipo base dell'editor indicato.</summary>
      <param name="editorBaseType">Tipo base dell'editor per il quale aggiungere la tabella editor. Se per questo tipo già esiste una tabella, il metodo non eseguirà alcuna operazione.</param>
      <param name="table">Oggetto <see cref="T:System.Collections.Hashtable" /> da aggiungere.</param>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
      <summary>Aggiunge un provider della descrizione del tipo per una singola istanza di un componente.</summary>
      <param name="provider">Oggetto <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> da aggiungere.</param>
      <param name="instance">Istanza del componente di destinazione.</param>
      <exception cref="T:System.ArgumentNullException">Uno o entrambi i parametri sono <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
      <summary>Aggiunge un provider della descrizione del tipo per una classe del componente.</summary>
      <param name="provider">Oggetto <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> da aggiungere.</param>
      <param name="type">Oggetto <see cref="T:System.Type" /> del componente di destinazione.</param>
      <exception cref="T:System.ArgumentNullException">Uno o entrambi i parametri sono <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
      <summary>Aggiunge un provider della descrizione del tipo per una singola istanza di un componente.</summary>
      <param name="provider">Oggetto <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> da aggiungere.</param>
      <param name="instance">Istanza del componente di destinazione.</param>
      <exception cref="T:System.ArgumentNullException">Uno o entrambi i parametri sono <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
      <summary>Aggiunge un provider della descrizione del tipo per una classe del componente.</summary>
      <param name="provider">Oggetto <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> da aggiungere.</param>
      <param name="type">Oggetto <see cref="T:System.Type" /> del componente di destinazione.</param>
      <exception cref="T:System.ArgumentNullException">Uno o entrambi i parametri sono <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler">
      <summary>Ottiene o imposta il provider di informazioni sul tipo COM (Component Object Model) per il componente di destinazione.</summary>
      <returns>Istanza di <see cref="T:System.ComponentModel.IComNativeDescriptorHandler" /> che rappresenta il provider di informazioni sul tipo COM.</returns>
    </member>
    <member name="P:System.ComponentModel.TypeDescriptor.ComObjectType">
      <summary>Ottiene il tipo di oggetto COM (Component Object Model) rappresentato dal componente di destinazione.</summary>
      <returns>Oggetto <see cref="T:System.Type" /> dell'oggetto COM rappresentato da questo componente oppure <see langword="null" /> per oggetti non COM.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)">
      <summary>Crea un'associazione primaria/secondaria tra due oggetti.</summary>
      <param name="primary">Oggetto <see cref="T:System.Object" /> primario.</param>
      <param name="secondary">Oggetto <see cref="T:System.Object" /> secondario.</param>
      <exception cref="T:System.ArgumentNullException">Uno o entrambi i parametri sono <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="primary" /> è uguale a <paramref name="secondary" />.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)">
      <summary>Crea un'istanza della finestra di progettazione associata al componente specificato e del tipo di finestra di progettazione specificato.</summary>
      <param name="component">Oggetto <see cref="T:System.ComponentModel.IComponent" /> che specifica il componente da associare alla finestra di progettazione.</param>
      <param name="designerBaseType">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo di finestra di progettazione da creare.</param>
      <returns>Oggetto <see cref="T:System.ComponentModel.Design.IDesigner" /> che rappresenta un'istanza della finestra di progettazione per il componente oppure <see langword="null" /> se non viene trovata alcuna finestra di progettazione.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])">
      <summary>Crea un nuovo descrittore di eventi che è identico a un descrittore esistente, quando viene passato l'oggetto esistente <see cref="T:System.ComponentModel.EventDescriptor" />.</summary>
      <param name="componentType">Tipo di componente per cui creare il nuovo evento.</param>
      <param name="oldEventDescriptor">Informazioni sull'evento esistente.</param>
      <param name="attributes">Nuovi attributi.</param>
      <returns>Un nuovo oggetto <see cref="T:System.ComponentModel.EventDescriptor" /> i cui attributi di metadati specificati sono uniti agli attributi di metadati esistenti.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])">
      <summary>Crea un nuovo descrittore di eventi identico a un descrittore di eventi esistente generando dinamicamente le informazioni sul descrittore da un evento specificato su un tipo.</summary>
      <param name="componentType">Tipo di componente su cui si basa l'evento.</param>
      <param name="name">Nome dell'evento.</param>
      <param name="type">Tipo del delegato che gestisce l'evento.</param>
      <param name="attributes">Attributi per l'evento.</param>
      <returns>
        <see cref="T:System.ComponentModel.EventDescriptor" /> associato a un tipo.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
      <summary>Crea un oggetto che può sostituire un altro tipo di dati.</summary>
      <param name="provider">Provider di servizi che fornisce un servizio <see cref="T:System.ComponentModel.TypeDescriptionProvider" />. Questo parametro può essere <see langword="null" />.</param>
      <param name="objectType">Tipo di oggetto <see cref="T:System.Type" /> da creare.</param>
      <param name="argTypes">Matrice facoltativa dei tipi di parametro da passare al costruttore dell'oggetto. Questo parametro può essere <see langword="null" /> o una matrice di lunghezza zero.</param>
      <param name="args">Matrice facoltativa dei valori di parametro da passare al costruttore dell'oggetto. Se non è <see langword="null" />, il numero di elementi deve essere uguale a <paramref name="argTypes" />.</param>
      <returns>Istanza del tipo di dati sostituito se viene individuato un oggetto <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> associato; in caso contrario, <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="objectType" /> è <see langword="null" /> o <paramref name="args" /> è <see langword="null" /> quando <paramref name="argTypes" /> non è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="argTypes" /> e <paramref name="args" /> hanno un numero diverso di elementi.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])">
      <summary>Crea un nuovo descrittore di proprietà da un descrittore di proprietà esistente, usando l'oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> e la matrice di attributi specificati.</summary>
      <param name="componentType">L'oggetto <see cref="T:System.Type" /> del componente di cui la proprietà è un membro.</param>
      <param name="oldPropertyDescriptor">Descrittore della proprietà esistente.</param>
      <param name="attributes">Nuovi attributi per questa proprietà.</param>
      <returns>Un nuovo oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> i cui attributi di metadati specificati sono uniti agli attributi di metadati esistenti.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])">
      <summary>Crea e associa dinamicamente un descrittore di proprietà a un tipo, usando il nome della proprietà, il tipo e la matrice di attributi specificati.</summary>
      <param name="componentType">L'oggetto <see cref="T:System.Type" /> del componente di cui la proprietà è un membro.</param>
      <param name="name">Nome della proprietà.</param>
      <param name="type">
        <see cref="T:System.Type" /> della proprietà.</param>
      <param name="attributes">Nuovi attributi per questa proprietà.</param>
      <returns>Un oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> associato al tipo specificato e i cui attributi di metadati specificati sono uniti agli attributi di metadati esistenti.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)">
      <summary>Restituisce un'istanza del tipo associato all'oggetto primario specificato.</summary>
      <param name="type">Oggetto <see cref="T:System.Type" /> del componente di destinazione.</param>
      <param name="primary">Oggetto primario dell'associazione.</param>
      <returns>Istanza del tipo secondario associata all'oggetto primario se esiste un'associazione. In caso contrario, <paramref name="primary" /> se non esiste alcuna associazione specifica.</returns>
      <exception cref="T:System.ArgumentNullException">Uno o entrambi i parametri sono <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)">
      <summary>Restituisce l'insieme di attributi per il componente specificato.</summary>
      <param name="component">Componente per il quale si desidera ottenere attributi.</param>
      <returns>Oggetto <see cref="T:System.ComponentModel.AttributeCollection" /> contenente gli attributi per il componente. Se <paramref name="component" /> è <see langword="null" />, questo metodo restituisce un insieme vuoto.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)">
      <summary>Restituisce un insieme di attributi per il componente specificato e un valore booleano che indica che è stato creato un descrittore di tipi personalizzato.</summary>
      <param name="component">Componente per il quale si desidera ottenere attributi.</param>
      <param name="noCustomTypeDesc">
        <see langword="true" /> per utilizzare un set di attributi di base dal descrittore di tipi personalizzato se l'oggetto <paramref name="component" /> è di tipo <see cref="T:System.ComponentModel.ICustomTypeDescriptor" />. In caso contrario, <see langword="false" />.</param>
      <returns>Insieme <see cref="T:System.ComponentModel.AttributeCollection" /> con gli attributi per il componente. Se il componente è <see langword="null" />, questo metodo restituisce un insieme vuoto.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
      <summary>Restituisce un insieme di attributi per il tipo di componente specificato.</summary>
      <param name="componentType">Oggetto <see cref="T:System.Type" /> del componente di destinazione.</param>
      <returns>Insieme <see cref="T:System.ComponentModel.AttributeCollection" /> con gli attributi per il tipo di componente. Se il componente è <see langword="null" />, questo metodo restituisce un insieme vuoto.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)">
      <summary>Restituisce il nome della classe per il componente specificato utilizzando il descrittore di tipi predefinito.</summary>
      <param name="component">Oggetto <see cref="T:System.Object" /> per il quale si desidera il nome della classe.</param>
      <returns>Oggetto <see cref="T:System.String" /> contenente il nome della classe per il componente specificato.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)">
      <summary>Restituisce il nome della classe per il componente specificato utilizzando un descrittore di tipi personalizzato.</summary>
      <param name="component">Oggetto <see cref="T:System.Object" /> per il quale si desidera il nome della classe.</param>
      <param name="noCustomTypeDesc">
        <see langword="true" /> per considerare le informazioni di descrizione dei tipi personalizzati. In caso contrario, <see langword="false" />.</param>
      <returns>Oggetto <see cref="T:System.String" /> contenente il nome della classe per il componente specificato.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="component" /> è un oggetto cross-process remoto.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Type)">
      <summary>Restituisce il nome della classe per il tipo specificato.</summary>
      <param name="componentType">Oggetto <see cref="T:System.Type" /> del componente di destinazione.</param>
      <returns>Oggetto <see cref="T:System.String" /> contenente il nome della classe per il tipo di componente specificato.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="componentType" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)">
      <summary>Restituisce il nome del componente specificato utilizzando il descrittore di tipi predefinito.</summary>
      <param name="component">Oggetto <see cref="T:System.Object" /> per il quale si desidera il nome della classe.</param>
      <returns>Oggetto <see cref="T:System.String" /> contenente il nome del componente specificato o <see langword="null" /> in mancanza di un nome di componente.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="component" /> è un oggetto cross-process remoto.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)">
      <summary>Restituisce il nome del componente specificato utilizzando un descrittore di tipi personalizzato.</summary>
      <param name="component">Oggetto <see cref="T:System.Object" /> per il quale si desidera il nome della classe.</param>
      <param name="noCustomTypeDesc">
        <see langword="true" /> per considerare le informazioni di descrizione dei tipi personalizzati. In caso contrario, <see langword="false" />.</param>
      <returns>Nome della classe del componente specificato o <see langword="null" /> in mancanza di un nome di componente.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="component" /> è un oggetto cross-process remoto.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)">
      <summary>Restituisce un convertitore di tipi per il tipo del componente specificato.</summary>
      <param name="component">Componente per il quale ottenere il convertitore.</param>
      <returns>Oggetto <see cref="T:System.ComponentModel.TypeConverter" /> per il componente specificato.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="component" /> è un oggetto cross-process remoto.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)">
      <summary>Restituisce un convertitore di tipi per il tipo del componente specificato con un descrittore di tipi personalizzato.</summary>
      <param name="component">Componente per il quale ottenere il convertitore.</param>
      <param name="noCustomTypeDesc">
        <see langword="true" /> per considerare le informazioni di descrizione dei tipi personalizzati. In caso contrario, <see langword="false" />.</param>
      <returns>Oggetto <see cref="T:System.ComponentModel.TypeConverter" /> per il componente specificato.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="component" /> è un oggetto cross-process remoto.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Type)">
      <summary>Restituisce un convertitore di tipi per il tipo specificato.</summary>
      <param name="type">Oggetto <see cref="T:System.Type" /> del componente di destinazione.</param>
      <returns>Oggetto <see cref="T:System.ComponentModel.TypeConverter" /> per il tipo specificato.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)">
      <summary>Restituisce l'evento predefinito per il componente specificato.</summary>
      <param name="component">Componente per il quale ottenere l'evento.</param>
      <returns>Oggetto <see cref="T:System.ComponentModel.EventDescriptor" /> con l'evento predefinito oppure <see langword="null" /> se non esistono eventi.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="component" /> è un oggetto cross-process remoto.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)">
      <summary>Restituisce l'evento predefinito per un componente con un descrittore di tipi personalizzato.</summary>
      <param name="component">Componente per il quale ottenere l'evento.</param>
      <param name="noCustomTypeDesc">
        <see langword="true" /> per considerare le informazioni di descrizione dei tipi personalizzati. In caso contrario, <see langword="false" />.</param>
      <returns>Oggetto <see cref="T:System.ComponentModel.EventDescriptor" /> con l'evento predefinito oppure <see langword="null" /> se non esistono eventi.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="component" /> è un oggetto cross-process remoto.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)">
      <summary>Restituisce l'evento predefinito per il tipo specificato di componente.</summary>
      <param name="componentType">Oggetto <see cref="T:System.Type" /> del componente di destinazione.</param>
      <returns>Oggetto <see cref="T:System.ComponentModel.EventDescriptor" /> con l'evento predefinito oppure <see langword="null" /> se non esistono eventi.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="componentType" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)">
      <summary>Restituisce la proprietà predefinita per il componente specificato.</summary>
      <param name="component">Componente per cui ottenere la proprietà predefinita.</param>
      <returns>Oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> con la proprietà predefinita oppure <see langword="null" /> se non esistono proprietà.</returns>
      <exception cref="T:System.NotSupportedException">
        <paramref name="component" /> è un oggetto cross-process remoto.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)">
      <summary>Restituisce la proprietà predefinita per il componente specificato con un descrittore di tipi personalizzato.</summary>
      <param name="component">Componente per cui ottenere la proprietà predefinita.</param>
      <param name="noCustomTypeDesc">
        <see langword="true" /> per considerare le informazioni di descrizione dei tipi personalizzati. In caso contrario, <see langword="false" />.</param>
      <returns>Oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> con la proprietà predefinita oppure <see langword="null" /> se non esistono proprietà.</returns>
      <exception cref="T:System.NotSupportedException">
        <paramref name="component" /> è un oggetto cross-process remoto.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)">
      <summary>Restituisce la proprietà predefinita per il tipo specificato di componente.</summary>
      <param name="componentType">Oggetto <see cref="T:System.Type" /> che rappresenta la classe per la quale ottenere la proprietà.</param>
      <returns>Oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> con la proprietà predefinita oppure <see langword="null" /> se non esistono proprietà.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)">
      <summary>Ottiene un editor con il tipo base specificato per il componente specificato.</summary>
      <param name="component">Componente per il quale ottenere l'editor.</param>
      <param name="editorBaseType">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo base dell'editor che si desidera trovare.</param>
      <returns>Istanza dell'editor della quale è possibile eseguire il cast nel tipo di editor specificato o <see langword="null" /> se non viene individuato alcun editor del tipo richiesto.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> o <paramref name="editorBaseType" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="component" /> è un oggetto cross-process remoto.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)">
      <summary>Restituisce un editor con il tipo base specificato e con un descrittore di tipi personalizzato per il componente specificato.</summary>
      <param name="component">Componente per il quale ottenere l'editor.</param>
      <param name="editorBaseType">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo base dell'editor che si desidera trovare.</param>
      <param name="noCustomTypeDesc">Flag che indica se prendere in considerazione le informazioni sulla descrizione dei tipi personalizzati.</param>
      <returns>Istanza dell'editor della quale è possibile eseguire il cast nel tipo di editor specificato o <see langword="null" /> se non viene individuato alcun editor del tipo richiesto.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> o <paramref name="editorBaseType" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="component" /> è un oggetto cross-process remoto.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)">
      <summary>Restituisce un editor con il tipo base specificato per il tipo specificato.</summary>
      <param name="type">Oggetto <see cref="T:System.Type" /> del componente di destinazione.</param>
      <param name="editorBaseType">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo base dell'editor che si sta cercando.</param>
      <returns>Istanza dell'oggetto editor della quale è possibile eseguire il cast nel tipo di base indicato o <see langword="null" /> se non viene individuato alcun editor del tipo richiesto.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> o <paramref name="editorBaseType" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)">
      <summary>Restituisce l'insieme degli eventi per il componente specificato.</summary>
      <param name="component">Componente per il quale ottenere gli eventi.</param>
      <returns>Insieme <see cref="T:System.ComponentModel.EventDescriptorCollection" /> con gli eventi per questo componente.</returns>
      <exception cref="T:System.NotSupportedException">
        <paramref name="component" /> è un oggetto cross-process remoto.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
      <summary>Restituisce l'insieme di eventi per un componente specificato utilizzando come filtro una matrice di attributi specificata.</summary>
      <param name="component">Componente per il quale ottenere gli eventi.</param>
      <param name="attributes">Matrice di tipo <see cref="T:System.Attribute" /> che può essere utilizzata come filtro.</param>
      <returns>Insieme <see cref="T:System.ComponentModel.EventDescriptorCollection" /> con gli eventi che corrispondono agli attributi specificati per questo componente.</returns>
      <exception cref="T:System.NotSupportedException">
        <paramref name="component" /> è un oggetto cross-process remoto.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
      <summary>Restituisce l'insieme di eventi per un componente specificato utilizzando come filtro una matrice di attributi specificata e un descrittore di tipi personalizzato.</summary>
      <param name="component">Componente per il quale ottenere gli eventi.</param>
      <param name="attributes">Matrice di tipo <see cref="T:System.Attribute" /> da utilizzare come filtro.</param>
      <param name="noCustomTypeDesc">
        <see langword="true" /> per considerare le informazioni di descrizione dei tipi personalizzati. In caso contrario, <see langword="false" />.</param>
      <returns>Insieme <see cref="T:System.ComponentModel.EventDescriptorCollection" /> con gli eventi che corrispondono agli attributi specificati per questo componente.</returns>
      <exception cref="T:System.NotSupportedException">
        <paramref name="component" /> è un oggetto cross-process remoto.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)">
      <summary>Restituisce l'insieme di eventi per un componente specificato con un descrittore di tipi personalizzato.</summary>
      <param name="component">Componente per il quale ottenere gli eventi.</param>
      <param name="noCustomTypeDesc">
        <see langword="true" /> per considerare le informazioni di descrizione dei tipi personalizzati. In caso contrario, <see langword="false" />.</param>
      <returns>Insieme <see cref="T:System.ComponentModel.EventDescriptorCollection" /> con gli eventi per questo componente.</returns>
      <exception cref="T:System.NotSupportedException">
        <paramref name="component" /> è un oggetto cross-process remoto.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type)">
      <summary>Restituisce l'insieme di eventi per un tipo specificato di componente.</summary>
      <param name="componentType">Oggetto <see cref="T:System.Type" /> del componente di destinazione.</param>
      <returns>Insieme <see cref="T:System.ComponentModel.EventDescriptorCollection" /> con gli eventi per questo componente.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])">
      <summary>Restituisce l'insieme di eventi per un tipo specificato di componente utilizzando come filtro una matrice di attributi specificata.</summary>
      <param name="componentType">Oggetto <see cref="T:System.Type" /> del componente di destinazione.</param>
      <param name="attributes">Matrice di tipo <see cref="T:System.Attribute" /> che può essere utilizzata come filtro.</param>
      <returns>Insieme <see cref="T:System.ComponentModel.EventDescriptorCollection" /> con gli eventi che corrispondono agli attributi specificati per questo componente.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)">
      <summary>Restituisce il nome completo del componente.</summary>
      <param name="component">Oggetto <see cref="T:System.ComponentModel.Component" /> del quale trovare il nome.</param>
      <returns>Nome completo del componente specificato o <see langword="null" /> se il componente non ha nome.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)">
      <summary>Restituisce l'insieme di proprietà per un componente specificato.</summary>
      <param name="component">Componente per il quale ottenere le proprietà.</param>
      <returns>Insieme <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> con le proprietà per il componente specificato.</returns>
      <exception cref="T:System.NotSupportedException">
        <paramref name="component" /> è un oggetto cross-process remoto.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
      <summary>Restituisce l'insieme di proprietà per un componente specificato utilizzando come filtro una matrice di attributi specificata.</summary>
      <param name="component">Componente per il quale ottenere le proprietà.</param>
      <param name="attributes">Matrice di tipo <see cref="T:System.Attribute" /> da utilizzare come filtro.</param>
      <returns>Insieme <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> con le proprietà che corrispondono agli attributi specificati per lo specifico componente.</returns>
      <exception cref="T:System.NotSupportedException">
        <paramref name="component" /> è un oggetto cross-process remoto.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
      <summary>Restituisce l'insieme di proprietà per un componente specificato utilizzando come filtro una matrice di attributi specificata e un descrittore di tipi personalizzato.</summary>
      <param name="component">Componente per il quale ottenere le proprietà.</param>
      <param name="attributes">Matrice di tipo <see cref="T:System.Attribute" /> da usare come filtro.</param>
      <param name="noCustomTypeDesc">
        <see langword="true" /> per considerare le informazioni di descrizione dei tipi personalizzati. In caso contrario, <see langword="false" />.</param>
      <returns>Insieme <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> con gli eventi che corrispondono agli attributi specificati per lo specifico componente.</returns>
      <exception cref="T:System.NotSupportedException">
        <paramref name="component" /> è un oggetto cross-process remoto.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)">
      <summary>Restituisce l'insieme di proprietà per un componente specificato utilizzando il descrittore di tipi personalizzato.</summary>
      <param name="component">Componente per il quale ottenere le proprietà.</param>
      <param name="noCustomTypeDesc">
        <see langword="true" /> per non considerare le informazioni di descrizione dei tipi personalizzati; in caso contrario, <see langword="false" />.</param>
      <returns>Insieme <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> con le proprietà per un componente specificato.</returns>
      <exception cref="T:System.NotSupportedException">
        <paramref name="component" /> è un oggetto cross-process remoto.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)">
      <summary>Restituisce l'insieme di proprietà per un tipo specificato di componente.</summary>
      <param name="componentType">Oggetto <see cref="T:System.Type" /> che rappresenta il componente per il quale ottenere proprietà.</param>
      <returns>Insieme <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> con le proprietà per un tipo di componente specificato.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
      <summary>Restituisce l'insieme di proprietà per un tipo specificato di componente utilizzando come filtro una matrice di attributi specificata.</summary>
      <param name="componentType">Oggetto <see cref="T:System.Type" /> del componente di destinazione.</param>
      <param name="attributes">Matrice di tipo <see cref="T:System.Attribute" /> da utilizzare come filtro.</param>
      <returns>Insieme <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> con le proprietà che corrispondono agli attributi specificati per questo tipo di componente.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)">
      <summary>Restituisce il provider della descrizione del tipo per il componente specificato.</summary>
      <param name="instance">Istanza del componente di destinazione.</param>
      <returns>Oggetto <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> associato al componente specificato.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Type)">
      <summary>Restituisce il provider della descrizione del tipo per il tipo specificato.</summary>
      <param name="type">Oggetto <see cref="T:System.Type" /> del componente di destinazione.</param>
      <returns>
        <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> associato al tipo specificato.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)">
      <summary>Restituisce un oggetto <see cref="T:System.Type" /> che può essere utilizzato per effettuare la reflection, dato un oggetto.</summary>
      <param name="instance">Istanza del componente di destinazione.</param>
      <returns>Oggetto <see cref="T:System.Type" /> per l'oggetto specificato.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)">
      <summary>Restituisce un oggetto <see cref="T:System.Type" /> che può essere utilizzato per effettuare la reflection, dato un tipo di classe.</summary>
      <param name="type">Oggetto <see cref="T:System.Type" /> del componente di destinazione.</param>
      <returns>Un oggetto <see cref="T:System.Type" /> della classe specificata.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.TypeDescriptor.InterfaceType">
      <summary>Ottiene un tipo che rappresenta un provider di descrizione del tipo per tutti i tipi di interfaccia.</summary>
      <returns>
        <see cref="T:System.Type" /> che rappresenta un provider di descrizione del tipo personalizzato per tutti i tipi di interfaccia.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)">
      <summary>Elimina dalla cache le proprietà e gli eventi per il componente specificato.</summary>
      <param name="component">Componente le cui proprietà o eventi sono cambiati.</param>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)">
      <summary>Elimina dalla cache le proprietà e gli eventi per l'assembly specificato.</summary>
      <param name="assembly">Oggetto <see cref="T:System.Reflection.Assembly" /> che rappresenta l'assembly da aggiornare. Verrà aggiornato ogni oggetto <see cref="T:System.Type" /> di questo assembly.</param>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)">
      <summary>Elimina dalla cache le proprietà e gli eventi per il modulo specificato.</summary>
      <param name="module">Oggetto <see cref="T:System.Reflection.Module" /> che rappresenta il modulo da aggiornare. Verrà aggiornato ogni oggetto <see cref="T:System.Type" /> di questo modulo.</param>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)">
      <summary>Elimina dalla cache le proprietà e gli eventi per il tipo specificato di componente.</summary>
      <param name="type">Oggetto <see cref="T:System.Type" /> del componente di destinazione.</param>
    </member>
    <member name="E:System.ComponentModel.TypeDescriptor.Refreshed">
      <summary>Viene generato quando viene svuotata la cache di un componente.</summary>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)">
      <summary>Rimuove un'associazione tra due oggetti.</summary>
      <param name="primary">Oggetto <see cref="T:System.Object" /> primario.</param>
      <param name="secondary">Oggetto <see cref="T:System.Object" /> secondario.</param>
      <exception cref="T:System.ArgumentNullException">Uno o entrambi i parametri sono <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)">
      <summary>Rimuove tutte le associazioni di un oggetto primario.</summary>
      <param name="primary">Oggetto <see cref="T:System.Object" /> primario di un'associazione.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="primary" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
      <summary>Rimuove un provider della descrizione del tipo aggiunto in precedenza e associato all'oggetto specificato.</summary>
      <param name="provider">Oggetto <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> da rimuovere.</param>
      <param name="instance">Istanza del componente di destinazione.</param>
      <exception cref="T:System.ArgumentNullException">Uno o entrambi i parametri sono <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
      <summary>Rimuove un provider della descrizione del tipo aggiunto in precedenza e associato al tipo specificato.</summary>
      <param name="provider">Oggetto <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> da rimuovere.</param>
      <param name="type">Oggetto <see cref="T:System.Type" /> del componente di destinazione.</param>
      <exception cref="T:System.ArgumentNullException">Uno o entrambi i parametri sono <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
      <summary>Rimuove un provider della descrizione del tipo aggiunto in precedenza e associato all'oggetto specificato.</summary>
      <param name="provider">Oggetto <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> da rimuovere.</param>
      <param name="instance">Istanza del componente di destinazione.</param>
      <exception cref="T:System.ArgumentNullException">Uno o entrambi i parametri sono <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
      <summary>Rimuove un provider della descrizione del tipo aggiunto in precedenza e associato al tipo specificato.</summary>
      <param name="provider">Oggetto <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> da rimuovere.</param>
      <param name="type">Oggetto <see cref="T:System.Type" /> del componente di destinazione.</param>
      <exception cref="T:System.ArgumentNullException">Uno o entrambi i parametri sono <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.SortDescriptorArray(System.Collections.IList)">
      <summary>Ordina i descrittori utilizzando il nome del descrittore.</summary>
      <param name="infos">Oggetto <see cref="T:System.Collections.IList" /> che contiene i descrittori da ordinare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="infos" /> è <see langword="null" />.</exception>
    </member>
    <member name="T:System.ComponentModel.TypeListConverter">
      <summary>Fornisce un convertitore di tipi che può essere utilizzato per inserire i tipi disponibili in una casella di riepilogo.</summary>
    </member>
    <member name="M:System.ComponentModel.TypeListConverter.#ctor(System.Type[])">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.TypeListConverter" /> utilizzando la matrice dei tipi per i tipi disponibili.</summary>
      <param name="types">Matrice di tipo <see cref="T:System.Type" /> da utilizzare per i tipi disponibili.</param>
    </member>
    <member name="M:System.ComponentModel.TypeListConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ottiene un valore che indica se questo convertitore può convertire il tipo <see cref="T:System.Type" /> specificato dell'oggetto di origine utilizzando il contesto specificato.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="sourceType">Tipo <see cref="T:System.Type" /> dell'oggetto di origine.</param>
      <returns>
        <see langword="true" /> se il convertitore può eseguire la conversione. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeListConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ottiene un valore che indica se questo convertitore può convertire un oggetto nel tipo di destinazione specificato usando il contesto.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="destinationType">Tipo <see cref="T:System.Type" /> che rappresenta il tipo di destinazione della conversione.</param>
      <returns>
        <see langword="true" /> se il convertitore può eseguire la conversione. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeListConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converte l'oggetto specificato nel tipo nativo del convertitore.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> che specifica le impostazioni cultura utilizzate per rappresentare il tipo di carattere.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire.</param>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il valore convertito.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeListConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converte l'oggetto valore specificato nel tipo di destinazione specificato.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> facoltativo. Se non vengono specificate impostazioni cultura, vengono utilizzate quelle correnti.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire.</param>
      <param name="destinationType">Tipo <see cref="T:System.Type" /> in cui convertire il valore.</param>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta la conversione di <paramref name="value" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Ottiene un insieme di valori standard per il tipo di dati per cui è progettato questo validator.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <returns>Insieme <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> con un set standard di valori validi oppure <see langword="null" /> se il tipo di dati non supporta un set standard di valori.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeListConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Ottiene un valore che indica se l'elenco di valori standard restituito dal metodo <see cref="M:System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> è un elenco esclusivo.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <returns>
        <see langword="true" /> perché l'oggetto <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> restituito da <see cref="M:System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> è un elenco completo dei valori possibili. Questo metodo non restituisce mai <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeListConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Ottiene un valore che indica se il convertitore supporta un insieme di valori standard che possono essere selezionati da un elenco utilizzando il contesto specificato.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <returns>
        <see langword="true" /> perché è necessario chiamare il metodo <see cref="M:System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> per trovare un insieme comune di valori supportati dall'oggetto. Questo metodo non restituisce mai <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.UInt16Converter">
      <summary>Fornisce un convertitore di tipi per la conversione di oggetti di tipo Integer senza segno a 16 bit in e da altre rappresentazioni.</summary>
    </member>
    <member name="M:System.ComponentModel.UInt16Converter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.UInt16Converter" />.</summary>
    </member>
    <member name="T:System.ComponentModel.UInt32Converter">
      <summary>Fornisce un convertitore di tipi per la conversione di oggetti di tipo Integer senza segno a 32 bit in e da diverse altre rappresentazioni.</summary>
    </member>
    <member name="M:System.ComponentModel.UInt32Converter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.UInt32Converter" />.</summary>
    </member>
    <member name="T:System.ComponentModel.UInt64Converter">
      <summary>Offre un convertitore di tipi per la conversione di oggetti di tipo intero senza segno a 64 bit in e da altre rappresentazioni.</summary>
    </member>
    <member name="M:System.ComponentModel.UInt64Converter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.UInt64Converter" />.</summary>
    </member>
    <member name="T:System.ComponentModel.VersionConverter">
      <summary>Fornisce un convertitore di tipi per convertire oggetti <see cref="T:System.Version" /> in e da diverse altre rappresentazioni.</summary>
    </member>
    <member name="M:System.ComponentModel.VersionConverter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.VersionConverter" />.</summary>
    </member>
    <member name="M:System.ComponentModel.VersionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ottiene un valore che indica se il convertitore può convertire un oggetto dal tipo di origine specificato in un oggetto <see cref="T:System.Version" />.</summary>
      <param name="context">Oggetto che fornisce informazioni contestuali.</param>
      <param name="sourceType">Tipo di oggetto da convertire.</param>
      <returns>
        <see langword="true" /> se il convertitore può convertire sourceType in <see cref="T:System.Version" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.VersionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ottiene un valore che indica se questo convertitore può convertire un oggetto nel tipo di destinazione specificato usando il contesto.</summary>
      <param name="context">Oggetto che fornisce informazioni contestuali.</param>
      <param name="destinationType">Tipo di destinazione per la conversione.</param>
      <returns>
        <see langword="true" /> se il convertitore può convertire un oggetto nel tipo di destinazione dato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.VersionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converte l'oggetto specificato in un oggetto <see cref="T:System.Version" />.</summary>
      <param name="context">Oggetto che fornisce informazioni contestuali.</param>
      <param name="culture">Impostazioni cultura da utilizzare per la conversione.</param>
      <param name="value">Valore da convertire in un <see cref="T:System.Version" />.</param>
      <returns>
        <paramref name="value" /> convertito in un valore <see cref="T:System.Version" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> non è una stringa <see cref="T:System.Version" /> valida.</exception>
    </member>
    <member name="M:System.ComponentModel.VersionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converte il valore specificato nel tipo di destinazione indicato usando il contesto e gli argomenti specificati.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="culture">Impostazioni cultura che specificano informazioni di formattazione per la conversione.</param>
      <param name="value">Valore da convertire.</param>
      <param name="destinationType">Tipo in cui convertire il parametro value.</param>
      <returns>Oggetto che rappresenta il valore convertito.</returns>
    </member>
    <member name="M:System.ComponentModel.VersionConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
      <summary>Restituisce un valore che indica se l'oggetto valore specificato è valido per questo tipo e per il contesto specificato.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="value">Oggetto di cui eseguire il test di validità.</param>
      <returns>
        <see langword="true" /> se il valore specificato è valido per questo oggetto. <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="T:System.ComponentModel.WarningException">
      <summary>Specifica un'eccezione che viene gestita come avviso e non come errore.</summary>
    </member>
    <member name="M:System.ComponentModel.WarningException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.WarningException" />.</summary>
    </member>
    <member name="M:System.ComponentModel.WarningException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.WarningException" /> usando i dati di serializzazione e il contesto specificati.</summary>
      <param name="info">Classe <see cref="T:System.Runtime.Serialization.SerializationInfo" /> da utilizzare per la deserializzazione.</param>
      <param name="context">Destinazione da utilizzare per la deserializzazione.</param>
    </member>
    <member name="M:System.ComponentModel.WarningException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.WarningException" /> con il messaggio specificato e nessun file della Guida.</summary>
      <param name="message">Messaggio che apparirà all'utente finale.</param>
    </member>
    <member name="M:System.ComponentModel.WarningException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.WarningException" /> con la descrizione dettagliata e l'eccezione specificate.</summary>
      <param name="message">Descrizione dettagliata dell'errore.</param>
      <param name="innerException">Riferimento all'eccezione interna che è la causa di questa eccezione.</param>
    </member>
    <member name="M:System.ComponentModel.WarningException.#ctor(System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.WarningException" /> con il messaggio specificato e l'accesso al file della Guida specificato.</summary>
      <param name="message">Messaggio che apparirà all'utente finale.</param>
      <param name="helpUrl">File della Guida da visualizzare se l'utente richiede ulteriori informazioni.</param>
    </member>
    <member name="M:System.ComponentModel.WarningException.#ctor(System.String,System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.WarningException" /> con il messaggio specificato e accesso al file e all'argomento della Guida specificati.</summary>
      <param name="message">Messaggio che apparirà all'utente finale.</param>
      <param name="helpUrl">File della Guida da visualizzare se l'utente richiede ulteriori informazioni.</param>
      <param name="helpTopic">Argomento della Guida da visualizzare se l'utente richiede ulteriori informazioni.</param>
    </member>
    <member name="M:System.ComponentModel.WarningException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Imposta l'oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con il nome del parametro e le informazioni aggiuntive sull'eccezione.</summary>
      <param name="info">Memorizza i dati utilizzati per serializzare o deserializzare l'oggetto a sua volta serializzato o deserializzato dall'oggetto <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />.</param>
      <param name="context">Descrive l'origine e la destinazione del flusso che ha generato l'eccezione e rappresenta un mezzo per mantenere tale contesto e un ulteriore contesto definito dal chiamante nell'ambito della serializzazione.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.WarningException.HelpTopic">
      <summary>Ottiene l'argomento della Guida associato all'avviso.</summary>
      <returns>Argomento della Guida associato all'avviso.</returns>
    </member>
    <member name="P:System.ComponentModel.WarningException.HelpUrl">
      <summary>Ottiene il file della Guida associato all'avviso.</summary>
      <returns>File della Guida associato all'avviso.</returns>
    </member>
    <member name="T:System.Drawing.ColorConverter">
      <summary>Converte i colori da un tipo di dati all'altro. È possibile accedere a questa classe mediante l'oggetto <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
    </member>
    <member name="M:System.Drawing.ColorConverter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Drawing.ColorConverter" />.</summary>
    </member>
    <member name="M:System.Drawing.ColorConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determina se questo convertitore può convertire un oggetto del tipo di origine specificato nel tipo nativo del convertitore.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato. È possibile utilizzare questo oggetto per ottenere ulteriori informazioni sull'ambiente da cui è richiamato questo convertitore.</param>
      <param name="sourceType">Tipo da cui si desidera eseguire la conversione.</param>
      <returns>
        <see langword="true" /> se l'oggetto può eseguire la conversione. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.ColorConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Restituisce un valore che indica se questo convertitore può convertire un oggetto nel tipo di destinazione specificato, utilizzando il contesto.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="destinationType">
        <see cref="T:System.Type" /> che rappresenta il tipo nel quale si desidera effettuare la conversione.</param>
      <returns>
        <see langword="true" /> se questo convertitore può eseguire l'operazione; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.ColorConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converte l'oggetto specificato nel tipo nativo del convertitore.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.TypeDescriptor" /> che fornisce un contesto di formato. È possibile utilizzare questo oggetto per ottenere ulteriori informazioni sull'ambiente da cui è richiamato questo convertitore.</param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> che specifica le impostazioni cultura per la rappresentazione del colore.</param>
      <param name="value">Oggetto da convertire.</param>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il valore convertito.</returns>
      <exception cref="T:System.ArgumentException">Impossibile eseguire la conversione.</exception>
    </member>
    <member name="M:System.Drawing.ColorConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converte l'oggetto specificato in un altro tipo.</summary>
      <param name="context">Contesto di un formattatore. Utilizzare questo oggetto per ottenere ulteriori informazioni sull'ambiente da cui è richiamato questo convertitore. Controllare sempre se questo valore corrisponde a <see langword="null" />. Anche le proprietà dell'oggetto di contesto possono restituire <see langword="null" />.</param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> che specifica le impostazioni cultura per la rappresentazione del colore.</param>
      <param name="value">Oggetto da convertire.</param>
      <param name="destinationType">Tipo in cui convertire l'oggetto.</param>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il valore convertito.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationtype" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione.</exception>
    </member>
    <member name="M:System.Drawing.ColorConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Recupera un insieme contenente un gruppo di valori standard per il tipo di dati per cui è stato progettato questo validator. Viene restituito un valore <see langword="null" />, se il tipo di dati non supporta un gruppo standard di valori.</summary>
      <param name="context">Contesto di un formattatore. Utilizzare questo oggetto per ottenere ulteriori informazioni sull'ambiente da cui è richiamato questo convertitore. Controllare sempre se questo valore corrisponde a <see langword="null" />. Anche le proprietà dell'oggetto di contesto possono restituire <see langword="null" />.</param>
      <returns>Insieme che contiene valori <see langword="null" /> o un set standard di valori validi. L'implementazione predefinita restituisce sempre <see langword="null" />.</returns>
    </member>
    <member name="M:System.Drawing.ColorConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Determina se questo oggetto supporta un gruppo standard di valori selezionabili da un elenco.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.TypeDescriptor" /> tramite il quale è possibile fornire un contesto aggiuntivo.</param>
      <returns>
        <see langword="true" /> se è necessario chiamare il metodo <see cref="Overload:System.Drawing.ColorConverter.GetStandardValues" /> per individuare un set comune di valori supportati dall'oggetto; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Drawing.PointConverter">
      <summary>Converte un oggetto <see cref="T:System.Drawing.Point" /> da un tipo di dati all'altro.</summary>
    </member>
    <member name="M:System.Drawing.PointConverter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Drawing.PointConverter" />.</summary>
    </member>
    <member name="M:System.Drawing.PointConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determina se questo convertitore può convertire un oggetto del tipo di origine specificato nel tipo nativo del convertitore.</summary>
      <param name="context">Contesto di un formattatore. Questo oggetto può essere usato per ottenere informazioni aggiuntive sull'ambiente da cui viene chiamato il convertitore. Poiché può essere <see langword="null" />, è sempre consigliabile eseguire un controllo. Anche le proprietà dell'oggetto contesto possono restituire <see langword="null" />.</param>
      <param name="sourceType">Tipo da cui si vuole eseguire la conversione.</param>
      <returns>
        <see langword="true" /> se l'oggetto può eseguire la conversione. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.PointConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ottiene un valore che indica se questo convertitore può convertire un oggetto nel tipo di destinazione specificato usando il contesto.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto del formato.</param>
      <param name="destinationType">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo nel quale si vuole effettuare la conversione.</param>
      <returns>
        <see langword="true" /> se il convertitore può eseguire la conversione. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.PointConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converte l'oggetto specificato in un oggetto <see cref="T:System.Drawing.Point" />.</summary>
      <param name="context">Contesto di un formattatore. Questo oggetto può essere usato per ottenere informazioni aggiuntive sull'ambiente da cui viene chiamato il convertitore. Poiché può essere <see langword="null" />, è sempre consigliabile eseguire un controllo. Anche le proprietà dell'oggetto contesto possono restituire <see langword="null" />.</param>
      <param name="culture">Oggetto che contiene informazioni specifiche delle impostazioni cultura, ad esempio le convenzioni linguistiche, di calendario e culturali associate a determinate impostazioni cultura. Si basa sullo standard RFC 1766.</param>
      <param name="value">Oggetto da convertire.</param>
      <returns>Oggetto convertito.</returns>
      <exception cref="T:System.NotSupportedException">Non è possibile completare la conversione.</exception>
    </member>
    <member name="M:System.Drawing.PointConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converte l'oggetto specificato nel tipo indicato.</summary>
      <param name="context">Contesto di un formattatore. Questo oggetto può essere usato per ottenere informazioni aggiuntive sull'ambiente da cui viene chiamato il convertitore. Poiché può essere <see langword="null" />, è sempre consigliabile eseguire un controllo. Anche le proprietà dell'oggetto contesto possono restituire <see langword="null" />.</param>
      <param name="culture">Oggetto che contiene informazioni specifiche delle impostazioni cultura, ad esempio le convenzioni linguistiche, di calendario e culturali associate a determinate impostazioni cultura. Si basa sullo standard RFC 1766.</param>
      <param name="value">Oggetto da convertire.</param>
      <param name="destinationType">Tipo in cui convertire l'oggetto.</param>
      <returns>Oggetto convertito.</returns>
      <exception cref="T:System.NotSupportedException">Non è possibile completare la conversione.</exception>
    </member>
    <member name="M:System.Drawing.PointConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>Dopo che è stato specificato un set di valori di proprietà per l'oggetto, crea un'istanza di questo tipo.</summary>
      <param name="context">Descrittore del tipo tramite il quale è possibile fornire un contesto aggiuntivo.</param>
      <param name="propertyValues">Dizionario dei nuovi valori delle proprietà. Il dizionario contiene una serie di coppie nome-valore, una per ogni proprietà restituita da <see cref="M:System.Drawing.PointConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />.</param>
      <returns>Nuovo oggetto creato oppure <see langword="null" />, se non è stato possibile creare l'oggetto. L'implementazione predefinita restituisce <see langword="null" />.</returns>
    </member>
    <member name="M:System.Drawing.PointConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Determina se la modifica di un valore in questo oggetto richiede una chiamata a <see cref="M:System.Drawing.PointConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> per creare un nuovo valore.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.TypeDescriptor" /> tramite il quale è possibile fornire un contesto aggiuntivo.</param>
      <returns>
        <see langword="true" /> se il metodo <see cref="M:System.Drawing.PointConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> deve essere chiamato quando viene apportata una modifica a una o più proprietà di questo oggetto. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.PointConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>Recupera il gruppo di proprietà per questo tipo. Per impostazione predefinita, un tipo non restituisce alcuna proprietà.</summary>
      <param name="context">Descrittore del tipo tramite il quale è possibile fornire un contesto aggiuntivo.</param>
      <param name="value">Valore dell'oggetto per il quale ottenere le proprietà.</param>
      <param name="attributes">Matrice di oggetti <see cref="T:System.Attribute" /> che descrivono le proprietà.</param>
      <returns>Set di proprietà esposte per questo tipo di dati. Se non è esposta alcuna proprietà, il metodo può restituire <see langword="null" />. L'implementazione predefinita restituisce sempre <see langword="null" />.</returns>
    </member>
    <member name="M:System.Drawing.PointConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Determina se questo oggetto supporta proprietà. Per impostazione predefinita, tale valore è <see langword="false" />.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.TypeDescriptor" /> tramite il quale è possibile fornire un contesto aggiuntivo.</param>
      <returns>
        <see langword="true" /> se occorre chiamare <see cref="M:System.Drawing.PointConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" /> per trovare le proprietà di questo oggetto. <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="T:System.Drawing.RectangleConverter">
      <summary>Converte i rettangoli da un tipo di dati all'altro. È possibile accedere a questa classe mediante l'oggetto <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
    </member>
    <member name="M:System.Drawing.RectangleConverter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Drawing.RectangleConverter" />.</summary>
    </member>
    <member name="M:System.Drawing.RectangleConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determina se questo convertitore può convertire un oggetto del tipo di origine specificato nel tipo nativo del convertitore.</summary>
      <param name="context">Contesto di un formattatore. Questo oggetto può essere usato per ottenere informazioni aggiuntive sull'ambiente da cui viene chiamato il convertitore. Poiché può essere <see langword="null" />, è sempre consigliabile eseguire un controllo. Anche le proprietà dell'oggetto contesto possono restituire <see langword="null" />.</param>
      <param name="sourceType">Tipo da cui si vuole eseguire la conversione.</param>
      <returns>Questo metodo restituisce <see langword="true" /> se l'oggetto è in grado di eseguire la conversione, in caso contrario restituisce <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.RectangleConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ottiene un valore che indica se questo convertitore può convertire un oggetto nel tipo di destinazione specificato usando il contesto.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto del formato. È opportuno eseguire un controllo poiché potrebbe essere <see langword="null" />. Inoltre, anche le proprietà dell'oggetto di contesto possono restituire <see langword="null" />.</param>
      <param name="destinationType">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo nel quale si vuole effettuare la conversione.</param>
      <returns>Questo metodo restituisce <see langword="true" /> se il convertitore è in grado di eseguire la conversione, in caso contrario restituisce <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.RectangleConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converte l'oggetto specificato in un oggetto <see cref="T:System.Drawing.Rectangle" />.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che può essere utilizzato per ottenere informazioni aggiuntive sull'ambiente da cui viene chiamato il convertitore. Poiché può essere <see langword="null" />, è sempre consigliabile eseguire un controllo. Anche le proprietà dell'oggetto contesto possono restituire <see langword="null" />.</param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> che contiene informazioni specifiche delle impostazioni cultura, ad esempio le convenzioni linguistiche, di calendario e culturali associate a determinate impostazioni cultura. Si basa sullo standard RFC 1766.</param>
      <param name="value">Oggetto da convertire.</param>
      <returns>Oggetto convertito.</returns>
      <exception cref="T:System.NotSupportedException">Non è possibile completare la conversione.</exception>
    </member>
    <member name="M:System.Drawing.RectangleConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converte l'oggetto specificato nel tipo indicato.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che può essere utilizzato per ottenere informazioni aggiuntive sull'ambiente da cui viene chiamato il convertitore. Poiché può essere <see langword="null" />, è sempre consigliabile eseguire un controllo. Anche le proprietà dell'oggetto contesto possono restituire <see langword="null" />.</param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> che contiene informazioni specifiche delle impostazioni cultura, ad esempio le convenzioni linguistiche, di calendario e culturali associate a determinate impostazioni cultura. Si basa sullo standard RFC 1766.</param>
      <param name="value">Oggetto da convertire.</param>
      <param name="destinationType">Tipo in cui convertire l'oggetto.</param>
      <returns>Oggetto convertito.</returns>
      <exception cref="T:System.NotSupportedException">Non è possibile completare la conversione.</exception>
    </member>
    <member name="M:System.Drawing.RectangleConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>Dopo che è stato specificato un set di valori di proprietà per l'oggetto, crea un'istanza di questo tipo. Risulta utile per oggetti non modificabili cui, tuttavia, si desidera assegnare proprietà modificabili.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> tramite il quale è possibile fornire un contesto aggiuntivo.</param>
      <param name="propertyValues">Dizionario dei nuovi valori delle proprietà. Il dizionario contiene una serie di coppie nome-valore, una per ciascuna proprietà restituita da una chiamata al metodo <see cref="M:System.Drawing.RectangleConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />.</param>
      <returns>Nuovo oggetto creato oppure <see langword="null" />, se non è stato possibile creare l'oggetto. L'implementazione predefinita restituisce <see langword="null" />.</returns>
    </member>
    <member name="M:System.Drawing.RectangleConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Determina se la modifica di un valore in questo oggetto richiede una chiamata a <see cref="M:System.Drawing.RectangleConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> per creare un nuovo valore.</summary>
      <param name="context">Descrittore del tipo tramite il quale è possibile fornire un contesto aggiuntivo.</param>
      <returns>Questo metodo restituisce <see langword="true" /> se è necessario chiamare <see cref="M:System.Drawing.RectangleConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> quando una o più proprietà di questo oggetto vengono modificate; in caso contrario, restituisce <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.RectangleConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>Recupera il gruppo di proprietà per questo tipo. Per impostazione predefinita, un tipo non restituisce alcuna proprietà.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> tramite il quale è possibile fornire un contesto aggiuntivo.</param>
      <param name="value">Valore dell'oggetto per il quale ottenere le proprietà.</param>
      <param name="attributes">Matrice di oggetti <see cref="T:System.Attribute" /> che descrivono le proprietà.</param>
      <returns>Insieme di proprietà che deve essere esposto per questo tipo di dati. Se non è necessario esporre alcuna proprietà, è possibile che venga restituito il valore <see langword="null" />. L'implementazione predefinita restituisce sempre <see langword="null" />.</returns>
    </member>
    <member name="M:System.Drawing.RectangleConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Determina se questo oggetto supporta proprietà. Per impostazione predefinita, tale valore è <see langword="false" />.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> tramite il quale è possibile fornire un contesto aggiuntivo.</param>
      <returns>Questo metodo restituisce <see langword="true" /> se è necessario chiamare <see cref="M:System.Drawing.RectangleConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" /> per trovare le proprietà di questo oggetto; in caso contrario, restituisce <see langword="false" />.</returns>
    </member>
    <member name="T:System.Drawing.SizeConverter">
      <summary>La classe <see cref="T:System.Drawing.SizeConverter" /> viene utilizzata per eseguire conversioni da un tipo di dati all'altro. È possibile accedere a questa classe mediante l'oggetto <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
    </member>
    <member name="M:System.Drawing.SizeConverter.#ctor">
      <summary>Inizializza un nuovo oggetto <see cref="T:System.Drawing.SizeConverter" />.</summary>
    </member>
    <member name="M:System.Drawing.SizeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determina se questo convertitore può convertire un oggetto del tipo di origine specificato nel tipo nativo del convertitore.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che può essere utilizzato per ottenere informazioni aggiuntive sull'ambiente da cui viene chiamato il convertitore. Poiché può essere <see langword="null" />, è sempre consigliabile eseguire un controllo. Anche le proprietà dell'oggetto contesto possono restituire <see langword="null" />.</param>
      <param name="sourceType">Tipo da cui si vuole eseguire la conversione.</param>
      <returns>Questo metodo restituisce <see langword="true" /> se l'oggetto è in grado di eseguire tale conversione.</returns>
    </member>
    <member name="M:System.Drawing.SizeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ottiene un valore che indica se questo convertitore può convertire un oggetto nel tipo di destinazione specificato usando il contesto.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che può essere utilizzato per ottenere informazioni aggiuntive sull'ambiente da cui viene chiamato il convertitore. Dal momento che può essere <see langword="null" />, è preferibile eseguire sempre un controllo. Anche le proprietà dell'oggetto di contesto possono restituire <see langword="null" />.</param>
      <param name="destinationType">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo in cui eseguire la conversione.</param>
      <returns>Questo metodo restituisce <see langword="true" /> se il convertitore è in grado di eseguire la conversione, in caso contrario restituisce <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.SizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converte l'oggetto specificato nel tipo nativo del convertitore.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che può essere utilizzato per ottenere informazioni aggiuntive sull'ambiente da cui viene chiamato il convertitore. Poiché può essere <see langword="null" />, è sempre consigliabile eseguire un controllo. Anche le proprietà dell'oggetto contesto possono restituire <see langword="null" />.</param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> che contiene informazioni specifiche delle impostazioni cultura, ad esempio le convenzioni linguistiche, di calendario e culturali associate a determinate impostazioni cultura. Si basa sullo standard RFC 1766.</param>
      <param name="value">Oggetto da convertire.</param>
      <returns>Oggetto convertito.</returns>
      <exception cref="T:System.NotSupportedException">Non è possibile completare la conversione.</exception>
    </member>
    <member name="M:System.Drawing.SizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converte l'oggetto specificato nel tipo indicato.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che può essere utilizzato per ottenere informazioni aggiuntive sull'ambiente da cui viene chiamato il convertitore. Poiché può essere <see langword="null" />, è sempre consigliabile eseguire un controllo. Anche le proprietà dell'oggetto contesto possono restituire <see langword="null" />.</param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> che contiene informazioni specifiche delle impostazioni cultura, ad esempio le convenzioni linguistiche, di calendario e culturali associate a determinate impostazioni cultura. Si basa sullo standard RFC 1766.</param>
      <param name="value">Oggetto da convertire.</param>
      <param name="destinationType">Tipo in cui convertire l'oggetto.</param>
      <returns>Oggetto convertito.</returns>
      <exception cref="T:System.NotSupportedException">Non è possibile completare la conversione.</exception>
    </member>
    <member name="M:System.Drawing.SizeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>Crea un oggetto di questo tipo, utilizzando un insieme specificato di valori di proprietà per l'oggetto. Questa operazione risulta utile per la creazione di oggetti non modificabili con proprietà modificabili.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.TypeDescriptor" /> tramite il quale è possibile fornire un contesto aggiuntivo.</param>
      <param name="propertyValues">Dizionario dei nuovi valori delle proprietà. Il dizionario contiene una serie di coppie nome-valore, una per ciascuna proprietà restituita dal metodo <see cref="M:System.Drawing.SizeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />.</param>
      <returns>Nuovo oggetto creato oppure <see langword="null" />, se non è stato possibile creare l'oggetto. L'implementazione predefinita restituisce <see langword="null" />.</returns>
    </member>
    <member name="M:System.Drawing.SizeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Determina se la modifica di un valore su questo oggetto richiede una chiamata al metodo <see cref="M:System.Drawing.SizeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> per creare un nuovo valore.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.TypeDescriptor" /> tramite il quale è possibile fornire un contesto aggiuntivo.</param>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="M:System.Drawing.SizeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> deve essere chiamato quando viene apportata una modifica a una o più proprietà di questo oggetto.</returns>
    </member>
    <member name="M:System.Drawing.SizeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>Recupera il gruppo di proprietà per questo tipo. Per impostazione predefinita, un tipo non dispone di proprietà da restituire.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.TypeDescriptor" /> tramite il quale è possibile fornire un contesto aggiuntivo.</param>
      <param name="value">Valore dell'oggetto per il quale ottenere le proprietà.</param>
      <param name="attributes">Matrice di oggetti <see cref="T:System.Attribute" /> che descrivono le proprietà.</param>
      <returns>Insieme di proprietà che deve essere esposto per questo tipo di dati. Se non è necessario esporre alcuna proprietà, è possibile che venga restituito il valore <see langword="null" />. L'implementazione predefinita restituisce sempre <see langword="null" />.</returns>
    </member>
    <member name="M:System.Drawing.SizeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Determina se questo oggetto supporta proprietà. Per impostazione predefinita, tale valore è <see langword="false" />.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.TypeDescriptor" /> tramite il quale è possibile fornire un contesto aggiuntivo.</param>
      <returns>
        <see langword="true" /> se il metodo <see cref="M:System.Drawing.SizeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" /> deve essere chiamato per trovare le proprietà di questo oggetto.</returns>
    </member>
    <member name="T:System.Drawing.SizeFConverter">
      <summary>Converte gli oggetti <see cref="T:System.Drawing.SizeF" /> da un tipo all'altro.</summary>
    </member>
    <member name="M:System.Drawing.SizeFConverter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Drawing.SizeFConverter" />.</summary>
    </member>
    <member name="M:System.Drawing.SizeFConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Restituisce un valore che indica se il convertitore può convertire il tipo specificato nel tipo <see cref="T:System.Drawing.SizeF" /> utilizzando il contesto specificato.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> mediante il quale è possibile fornire un contesto aggiuntivo.</param>
      <param name="sourceType">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo dal quale si desidera effettuare la conversione.</param>
      <returns>
        <see langword="true" /> per indicare che la conversione può essere eseguita; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.SizeFConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Restituisce un valore che indica se la classe <see cref="T:System.Drawing.SizeFConverter" /> può convertire il tipo <see cref="T:System.Drawing.SizeF" /> nel tipo specificato.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> mediante il quale è possibile fornire un contesto aggiuntivo.</param>
      <param name="destinationType">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo da cui eseguire la conversione.</param>
      <returns>
        <see langword="true" /> se questo convertitore può eseguire la conversione; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.SizeFConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converte l'oggetto indicato nel tipo di questo convertitore usando il contesto e le informazioni sulle impostazioni cultura specificati.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> da usare come impostazioni cultura correnti.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire.</param>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il valore convertito.</returns>
    </member>
    <member name="M:System.Drawing.SizeFConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converte l'oggetto valore indicato nel tipo specificato, usando il contesto e le informazioni sulle impostazioni cultura specificati.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" />. Se viene passato null, verranno usate le impostazioni cultura correnti.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire.</param>
      <param name="destinationType">Oggetto <see cref="T:System.Type" /> in cui convertire il parametro del valore.</param>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il valore convertito.</returns>
    </member>
    <member name="M:System.Drawing.SizeFConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>Crea un'istanza di un tipo <see cref="T:System.Drawing.SizeF" /> con i valori di proprietà specificati utilizzando il contesto specificato.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> mediante il quale è possibile fornire un contesto aggiuntivo.</param>
      <param name="propertyValues">Oggetto <see cref="T:System.Collections.IDictionary" /> contenente nomi e valori di proprietà.</param>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il nuovo tipo <see cref="T:System.Drawing.SizeF" /> oppure <see langword="null" /> se non è possibile creare l'oggetto.</returns>
    </member>
    <member name="M:System.Drawing.SizeFConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Restituisce un valore che indica se la modifica di un valore di questo oggetto richiede la chiamata al metodo <see cref="Overload:System.Drawing.SizeFConverter.CreateInstance" /> per creare un nuovo valore.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato. Può assumere il valore <see langword="null" />.</param>
      <returns>Restituisce sempre <see langword="true" />.</returns>
    </member>
    <member name="M:System.Drawing.SizeFConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>Recupera un set di proprietà per il tipo <see cref="T:System.Drawing.SizeF" /> utilizzando il contesto e gli attributi specificati.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> mediante il quale è possibile fornire un contesto aggiuntivo.</param>
      <param name="value">Classe <see cref="T:System.Object" /> per la quale restituire le proprietà.</param>
      <param name="attributes">Matrice di oggetti <see cref="T:System.Attribute" /> che descrivono le proprietà.</param>
      <returns>Oggetto <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> che contiene le proprietà.</returns>
    </member>
    <member name="M:System.Drawing.SizeFConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Restituisce un valore che indica se il tipo <see cref="T:System.Drawing.SizeF" /> supporta delle proprietà.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> mediante il quale è possibile fornire un contesto aggiuntivo.</param>
      <returns>Restituisce sempre <see langword="true" />.</returns>
    </member>
    <member name="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicyTypeConverter">
      <summary>La classe <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicyTypeConverter" /> rappresenta il convertitore di tipi per i criteri di protezione estesa utilizzati dal server per convalidare le connessioni client in ingresso.</summary>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicyTypeConverter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicyTypeConverter" />.</summary>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicyTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Indica se questo convertitore può convertire l'oggetto nel tipo specificato.</summary>
      <param name="context">Oggetto da convertire.</param>
      <param name="destinationType">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo in cui eseguire la conversione.</param>
      <returns>
        <see langword="true" /> se questo convertitore può eseguire la conversione. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicyTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Conversione dell'oggetto nel tipo specificato</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" />. Se viene passato <see langword="null" />, verranno usate le impostazioni cultura correnti.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire. Deve essere un oggetto <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />.</param>
      <param name="destinationType">Oggetto <see cref="T:System.Type" /> in cui convertire il parametro del valore.</param>
      <returns>Istanza di <see cref="T:System.Object" /> che rappresenta il parametro <paramref name="value" /> convertito.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="destinationType" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione.</exception>
    </member>
    <member name="T:System.Timers.ElapsedEventArgs">
      <summary>Fornisce dati per l'evento <see cref="E:System.Timers.Timer.Elapsed" />.</summary>
    </member>
    <member name="P:System.Timers.ElapsedEventArgs.SignalTime">
      <summary>Ottiene la data e l'ora in cui è stato generato l'evento <see cref="E:System.Timers.Timer.Elapsed" />.</summary>
      <returns>Ora in cui è stato generato l'evento <see cref="E:System.Timers.Timer.Elapsed" />.</returns>
    </member>
    <member name="T:System.Timers.ElapsedEventHandler">
      <summary>Rappresenta il metodo che gestirà l'evento <see cref="E:System.Timers.Timer.Elapsed" /> di un oggetto <see cref="T:System.Timers.Timer" />.</summary>
      <param name="sender">Origine dell'evento.</param>
      <param name="e">Oggetto <see cref="T:System.Timers.ElapsedEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="T:System.Timers.Timer">
      <summary>Genera un evento dopo un intervallo specificato, con un'opzione per generare eventi ricorrenti.</summary>
    </member>
    <member name="M:System.Timers.Timer.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Timers.Timer" /> e imposta tutte le proprietà sui rispettivi valori iniziali.</summary>
    </member>
    <member name="M:System.Timers.Timer.#ctor(System.Double)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Timers.Timer" /> e imposta la proprietà <see cref="P:System.Timers.Timer.Interval" /> sul numero di millisecondi specificato.</summary>
      <param name="interval">Tempo che intercorre tra gli eventi, in millisecondi. Il valore deve essere maggiore di zero e minore o uguale a <see cref="F:System.Int32.MaxValue" />.</param>
      <exception cref="T:System.ArgumentException">Il valore del parametro <paramref name="interval" /> è maggiore o uguale a zero oppure maggiore di <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="P:System.Timers.Timer.AutoReset">
      <summary>Ottiene o imposta un valore booleano che indica se <see cref="T:System.Timers.Timer" /> deve generare l'evento <see cref="E:System.Timers.Timer.Elapsed" /> una sola volta (<see langword="false" />) o più volte (<see langword="true" />).</summary>
      <returns>
        <see langword="true" /> se <see cref="T:System.Timers.Timer" /> deve generare l'evento <see cref="E:System.Timers.Timer.Elapsed" /> allo scadere di ogni intervallo; <see langword="false" /> se deve generare l'evento <see cref="E:System.Timers.Timer.Elapsed" /> solo una volta, in corrispondenza della prima scadenza dell'intervallo. Il valore predefinito è <see langword="true" />.</returns>
    </member>
    <member name="M:System.Timers.Timer.BeginInit">
      <summary>Avvia l'inizializzazione in fase di esecuzione di un oggetto <see cref="T:System.Timers.Timer" /> usato in un form o da un altro componente.</summary>
    </member>
    <member name="M:System.Timers.Timer.Close">
      <summary>Rilascia le risorse usate da <see cref="T:System.Timers.Timer" />.</summary>
    </member>
    <member name="M:System.Timers.Timer.Dispose(System.Boolean)">
      <summary>Rilascia tutte le risorse usate dall'oggetto <see cref="T:System.Timers.Timer" /> corrente.</summary>
      <param name="disposing">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite, <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="E:System.Timers.Timer.Elapsed">
      <summary>Si verifica quando l'intervallo scade.</summary>
    </member>
    <member name="P:System.Timers.Timer.Enabled">
      <summary>Ottiene o imposta un valore che indica se <see cref="T:System.Timers.Timer" /> deve generare l'evento <see cref="E:System.Timers.Timer.Elapsed" />.</summary>
      <returns>
        <see langword="true" /> se <see cref="T:System.Timers.Timer" /> deve generare l'evento <see cref="E:System.Timers.Timer.Elapsed" />; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</returns>
      <exception cref="T:System.ObjectDisposedException">Non è possibile impostare questa proprietà perché il timer è stato eliminato.</exception>
      <exception cref="T:System.ArgumentException">La proprietà <see cref="P:System.Timers.Timer.Interval" /> era impostata su un valore maggiore di <see cref="F:System.Int32.MaxValue" /> prima che sia stato abilitato il timer.</exception>
    </member>
    <member name="M:System.Timers.Timer.EndInit">
      <summary>Termina l'inizializzazione in fase di esecuzione di un oggetto <see cref="T:System.Timers.Timer" /> usato in un form o da un altro componente.</summary>
    </member>
    <member name="P:System.Timers.Timer.Interval">
      <summary>Ottiene o imposta l'intervallo, espresso in millisecondi, in cui generare l'evento <see cref="E:System.Timers.Timer.Elapsed" />.</summary>
      <returns>Tempo tra gli eventi <see cref="E:System.Timers.Timer.Elapsed" />, in millisecondi. Il valore deve essere maggiore di zero e minore o uguale a <see cref="F:System.Int32.MaxValue" />. Il valore predefinito è 100 millisecondi.</returns>
      <exception cref="T:System.ArgumentException">L'intervallo è minore o uguale a zero.  
-oppure- 
L'intervallo è più grande di <see cref="F:System.Int32.MaxValue" />e il timer è attualmente attivato. Non viene generata alcuna eccezione finché il timer non viene abilitato.</exception>
    </member>
    <member name="P:System.Timers.Timer.Site">
      <summary>Ottiene o imposta il sito che associa l'oggetto <see cref="T:System.Timers.Timer" /> al contenitore in modalità progettazione.</summary>
      <returns>Interfaccia <see cref="T:System.ComponentModel.ISite" /> che rappresenta il sito che associa l'oggetto <see cref="T:System.Timers.Timer" /> al contenitore.</returns>
    </member>
    <member name="M:System.Timers.Timer.Start">
      <summary>Avvia la generazione dell'evento <see cref="E:System.Timers.Timer.Elapsed" /> impostando <see cref="P:System.Timers.Timer.Enabled" /> su <see langword="true" />.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">L'oggetto <see cref="T:System.Timers.Timer" /> viene creato con intervallo uguale o maggiore di <see cref="F:System.Int32.MaxValue" /> + 1 oppure viene impostato su un intervallo minore di zero.</exception>
    </member>
    <member name="M:System.Timers.Timer.Stop">
      <summary>Arresta la generazione dell'evento <see cref="E:System.Timers.Timer.Elapsed" /> impostando <see cref="P:System.Timers.Timer.Enabled" /> su <see langword="false" />.</summary>
    </member>
    <member name="P:System.Timers.Timer.SynchronizingObject">
      <summary>Ottiene o imposta l'oggetto usato per effettuare il marshalling delle chiamate del gestore eventi generate alla scadenza di un intervallo.</summary>
      <returns>
        <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> che rappresenta l'oggetto usato per effettuare il marshalling delle chiamate del gestore eventi generate alla scadenza di un intervallo. Il valore predefinito è <see langword="null" />.</returns>
    </member>
    <member name="T:System.Timers.TimersDescriptionAttribute">
      <summary>Imposta la descrizione visualizzata dalle finestre di progettazione visiva quando si fa riferimento a un evento, a un'estensione o a una proprietà.</summary>
    </member>
    <member name="M:System.Timers.TimersDescriptionAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Timers.TimersDescriptionAttribute" />.</summary>
      <param name="description">Descrizione da utilizzare.</param>
    </member>
    <member name="P:System.Timers.TimersDescriptionAttribute.Description">
      <summary>Ottiene la descrizione visualizzata dalle finestre di progettazione visiva quando si fa riferimento a un evento, a un'estensione o a una proprietà.</summary>
      <returns>Descrizione dell'evento, dell'estensione o della proprietà.</returns>
    </member>
    <member name="T:System.UriTypeConverter">
      <summary>Converte un tipo <see cref="T:System.String" /> in un tipo <see cref="T:System.Uri" /> e viceversa.</summary>
    </member>
    <member name="M:System.UriTypeConverter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.UriTypeConverter" />.</summary>
    </member>
    <member name="M:System.UriTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Indica se questo convertitore può convertire un oggetto del tipo specificato nel tipo di questo convertitore.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="sourceType">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo dal quale si desidera eseguire la conversione.</param>
      <returns>
        <see langword="true" /> se <paramref name="sourceType" /> è di tipo <see cref="T:System.String" />, oppure se un tipo <see cref="T:System.Uri" /> può essere assegnato a partire dal tipo <paramref name="sourceType" />; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="sourceType" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.UriTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Restituisce un valore che indica se il convertitore può convertire l'oggetto nel tipo specificato usando il contesto specificato.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="destinationType">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo verso il quale si desidera effettuare la conversione.</param>
      <returns>
        <see langword="true" /> se <paramref name="destinationType" /> è di tipo <see cref="T:System.ComponentModel.Design.Serialization.InstanceDescriptor" />, <see cref="T:System.String" /> oppure <see cref="T:System.Uri" />. In caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.UriTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converte l'oggetto indicato nel tipo di questo convertitore usando il contesto e le informazioni sulle impostazioni cultura specificati.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> da usare come impostazioni cultura correnti.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire.</param>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il valore convertito.</returns>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione.</exception>
    </member>
    <member name="M:System.UriTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converte l'oggetto specificato nel tipo di questo convertitore, utilizzando le informazioni sulle impostazioni cultura e il contesto specificati.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" />. Se viene passato <see langword="null" /> , verranno usate le impostazioni cultura correnti.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire.</param>
      <param name="destinationType">
        <see cref="T:System.Type" /> in cui convertire il parametro <paramref name="value" />.</param>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il valore convertito.</returns>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="destinationType" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione.</exception>
    </member>
    <member name="M:System.UriTypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
      <summary>Indica se l'oggetto valore specificato è una classe <see cref="T:System.Uri" /> oppure se è possibile creare una classe <see cref="T:System.Uri" /> a partire dal medesimo.</summary>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> di cui eseguire il test di validità.</param>
      <returns>
        <see langword="true" /> se il parametro <paramref name="value" /> è di tipo <see cref="T:System.Uri" />, oppure se è un oggetto <see cref="T:System.String" /> da cui è possibile creare un oggetto <see cref="T:System.Uri" />; in caso contrario, <see langword="false" />.</returns>
    </member>
  </members>
</doc>