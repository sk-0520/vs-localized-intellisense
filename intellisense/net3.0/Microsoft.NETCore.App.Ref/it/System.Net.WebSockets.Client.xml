<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net.WebSockets.Client</name>
  </assembly>
  <members>
    <member name="T:System.Net.WebSockets.ClientWebSocket">
      <summary>Fornisce un client per la connessione ai servizi WebSocket.</summary>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.#ctor">
      <summary>Crea un'istanza della classe <see cref="T:System.Net.WebSockets.ClientWebSocket" />.</summary>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.Abort">
      <summary>Interrompe la connessione e annulla tutte le operazioni di I/O in sospeso.</summary>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
      <summary>Chiude l'istanza <see cref="T:System.Net.WebSockets.ClientWebSocket" /> come operazione asincrona.</summary>
      <param name="closeStatus">Stato di chiusura di WebSocket.</param>
      <param name="statusDescription">Descrizione dello stato di chiusura.</param>
      <param name="cancellationToken">Token di annullamento usato per propagare la notifica che indica che l'operazione deve essere annullata.</param>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
      <summary>Chiude l'output per l'istanza di <see cref="T:System.Net.WebSockets.ClientWebSocket" /> come operazione asincrona.</summary>
      <param name="closeStatus">Stato di chiusura di WebSocket.</param>
      <param name="statusDescription">Descrizione dello stato di chiusura.</param>
      <param name="cancellationToken">Token di annullamento usato per propagare la notifica che indica che l'operazione deve essere annullata.</param>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocket.CloseStatus">
      <summary>Ottiene il motivo per cui è stato iniziato l'handshake di chiusura nell'istanza <see cref="T:System.Net.WebSockets.ClientWebSocket" />.</summary>
      <returns>Motivo per cui è stato iniziato l'handshake di chiusura.</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocket.CloseStatusDescription">
      <summary>Ottiene una descrizione del motivo per cui l'istanza <see cref="T:System.Net.WebSockets.ClientWebSocket" /> è stata chiusa.</summary>
      <returns>La descrizione del motivo per cui l'istanza <see cref="T:System.Net.WebSockets.ClientWebSocket" /> è stata chiusa.</returns>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.ConnectAsync(System.Uri,System.Threading.CancellationToken)">
      <summary>Connettersi a un server WebSocket come operazione asincrona.</summary>
      <param name="uri">URI del server di WebSocket a cui connettersi.</param>
      <param name="cancellationToken">Token di annullamento utilizzato per propagare la notifica che l'operazione deve essere annullata.</param>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.Dispose">
      <summary>Consente di liberare le risorse non gestite utilizzate dall'istanza <see cref="T:System.Net.WebSockets.ClientWebSocket" />.</summary>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocket.Options">
      <summary>Ottiene le opzioni WebSocket per l'istanza di <see cref="T:System.Net.WebSockets.ClientWebSocket" />.</summary>
      <returns>Opzioni WebSocket per l'istanza di <see cref="T:System.Net.WebSockets.ClientWebSocket" />.</returns>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
      <summary>Ricevere i dati su <see cref="T:System.Net.WebSockets.ClientWebSocket" /> come operazione asincrona.</summary>
      <param name="buffer">Il buffer in cui ricevere la risposta.</param>
      <param name="cancellationToken">Token di annullamento usato per propagare la notifica che indica che l'operazione deve essere annullata.</param>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.WebSockets.ClientWebSocket" /> non connesso.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.WebSockets.ClientWebSocket" /> è stato chiuso.</exception>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.ReceiveAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <summary>Riceve i dati in <see cref="T:System.Net.WebSockets.ClientWebSocket" /> in un intervallo di memoria di byte come operazione asincrona.</summary>
      <param name="buffer">Area di memoria per la ricezione della risposta.</param>
      <param name="cancellationToken">Token di annullamento usato per propagare la notifica che indica che l'operazione deve essere annullata.</param>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.WebSockets.ClientWebSocket" /> non connesso.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.WebSockets.ClientWebSocket" /> è stato chiuso.</exception>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
      <summary>Invia i dati in <see cref="T:System.Net.WebSockets.ClientWebSocket" /> come operazione asincrona.</summary>
      <param name="buffer">Buffer contenente il messaggio da inviare.</param>
      <param name="messageType">Uno dei valori di enumerazione che specifica se il buffer è in testo non crittografato o in un formato binario.</param>
      <param name="endOfMessage">
        <see langword="true" /> per indicare che si tratta dell'invio asincrono finale. In caso contrario, <see langword="false" />.</param>
      <param name="cancellationToken">Token di annullamento usato per propagare la notifica che indica che l'operazione deve essere annullata.</param>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.WebSockets.ClientWebSocket" /> non connesso.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.WebSockets.ClientWebSocket" /> è stato chiuso.</exception>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.SendAsync(System.ReadOnlyMemory{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
      <summary>Invia dati in <see cref="T:System.Net.WebSockets.ClientWebSocket" /> da un intervallo di memoria di byte di sola lettura come operazione asincrona.</summary>
      <param name="buffer">Area della memoria contenente il messaggio da inviare.</param>
      <param name="messageType">Uno dei valori di enumerazione che specifica se il buffer è in testo non crittografato o in un formato binario.</param>
      <param name="endOfMessage">
        <see langword="true" /> per indicare che si tratta dell'invio asincrono finale. In caso contrario, <see langword="false" />.</param>
      <param name="cancellationToken">Token di annullamento usato per propagare la notifica che indica che l'operazione deve essere annullata.</param>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.WebSockets.ClientWebSocket" /> non connesso.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.WebSockets.ClientWebSocket" /> è stato chiuso.</exception>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocket.State">
      <summary>Ottiene lo stato WebSocket dell'istanza di <see cref="T:System.Net.WebSockets.ClientWebSocket" />.</summary>
      <returns>Stato di WebSocket dell'istanza <see cref="T:System.Net.WebSockets.ClientWebSocket" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocket.SubProtocol">
      <summary>Ottiene il sottoprotocollo WebSocket supportato per l'istanza di <see cref="T:System.Net.WebSockets.ClientWebSocket" />.</summary>
      <returns>Sottoprotocollo WebSocket supportato.</returns>
    </member>
    <member name="T:System.Net.WebSockets.ClientWebSocketOptions">
      <summary>Opzioni da utilizzare con un oggetto <see cref="T:System.Net.WebSockets.ClientWebSocket" />.</summary>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocketOptions.AddSubProtocol(System.String)">
      <summary>Aggiunge un sottoprotocollo da negoziare durante l'handshake di connessione WebSocket.</summary>
      <param name="subProtocol">Sottoprotocollo WebSocket da aggiungere.</param>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocketOptions.ClientCertificates">
      <summary>Ottiene o imposta una raccolta di certificati client.</summary>
      <returns>Raccolta di certificati client.</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocketOptions.Cookies">
      <summary>Ottiene o imposta i cookie associati alla richiesta.</summary>
      <returns>I cookie associati alla richiesta.</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocketOptions.Credentials">
      <summary>Ottiene o imposta le informazioni sulle credenziali per il client.</summary>
      <returns>Informazioni sulle credenziali per il client.</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocketOptions.KeepAliveInterval">
      <summary>Ottiene o imposta l'intervallo keep-alive del protocollo WebSocket.</summary>
      <returns>Intervallo keep-alive del protocollo WebSocket.</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocketOptions.Proxy">
      <summary>Ottiene o imposta il proxy per le richieste WebSocket.</summary>
      <returns>Proxy per le richieste WebSocket.</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocketOptions.RemoteCertificateValidationCallback" />
    <member name="M:System.Net.WebSockets.ClientWebSocketOptions.SetBuffer(System.Int32,System.Int32)">
      <summary>Imposta i parametri del buffer del client.</summary>
      <param name="receiveBufferSize">Dimensione, in byte, del buffer di ricezione del client.</param>
      <param name="sendBufferSize">Dimensione, in byte, del buffer di invio del client.</param>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocketOptions.SetBuffer(System.Int32,System.Int32,System.ArraySegment{System.Byte})">
      <summary>Imposta i parametri del buffer del client.</summary>
      <param name="receiveBufferSize">Dimensione, in byte, del buffer di ricezione del client.</param>
      <param name="sendBufferSize">Dimensione, in byte, del buffer di invio del client.</param>
      <param name="buffer">Buffer di ricezione da utilizzare.</param>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocketOptions.SetRequestHeader(System.String,System.String)">
      <summary>Crea un'intestazione di richiesta HTTP e il relativo valore.</summary>
      <param name="headerName">Nome dell'intestazione HTTP.</param>
      <param name="headerValue">Valore dell'intestazione HTTP.</param>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocketOptions.UseDefaultCredentials">
      <summary>Ottiene o imposta un valore <see cref="T:System.Boolean" /> che indica se utilizzare le credenziali predefinite durante l'handshake di WebSocket.</summary>
      <returns>
        <see langword="true" />Se è necessario usare le credenziali predefinite durante l'handshake di WebSocket; in caso <see langword="false" />contrario,. Il valore predefinito è <see langword="true" />.</returns>
    </member>
  </members>
</doc>