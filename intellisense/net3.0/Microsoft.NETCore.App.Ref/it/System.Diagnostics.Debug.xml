<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Diagnostics.Debug</name>
  </assembly>
  <members>
    <member name="T:System.Diagnostics.Debug">
      <summary>Fornisce un set di metodi e proprietà che consentono di eseguire il debug del codice.</summary>
    </member>
    <member name="M:System.Diagnostics.Debug.Assert(System.Boolean)">
      <summary>Controlla una condizione. Se la condizione è <see langword="false" />, viene visualizzata una finestra di messaggio contenente lo stack di chiamate.</summary>
      <param name="condition">Espressione condizionale da valutare. Se la condizione è <see langword="true" />, non viene inviato un messaggio di errore e la finestra di messaggio non viene visualizzata.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
      <summary>Controlla una condizione. Se la condizione è <see langword="false" />, genera un messaggio specificato e visualizza una finestra di messaggio contenente lo stack di chiamate.</summary>
      <param name="condition">Espressione condizionale da valutare. Se la condizione è <see langword="true" />, il messaggio specificato non viene inviato e la finestra di messaggio non viene visualizzata.</param>
      <param name="message">Messaggio da inviare alla raccolta di <see cref="P:System.Diagnostics.Trace.Listeners" />.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
      <summary>Controlla una condizione. Se la condizione è <see langword="false" />, vengono generati due messaggi specificati e viene visualizzata una finestra di messaggio contenente lo stack di chiamate.</summary>
      <param name="condition">Espressione condizionale da valutare. Se la condizione è <see langword="true" />, i messaggi specificati non vengono inviati e la finestra di messaggio non viene visualizzata.</param>
      <param name="message">Messaggio da inviare alla raccolta di <see cref="P:System.Diagnostics.Trace.Listeners" />.</param>
      <param name="detailMessage">Messaggio dettagliato da inviare all'insieme <see cref="P:System.Diagnostics.Trace.Listeners" />.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
      <summary>Controlla una condizione. Se la condizione è <see langword="false" />, vengono generati due messaggi (semplice e formattato) e viene visualizzata una finestra di messaggio contenente lo stack di chiamate.</summary>
      <param name="condition">Espressione condizionale da valutare. Se la condizione è <see langword="true" />, i messaggi specificati non vengono inviati e la finestra di messaggio non viene visualizzata.</param>
      <param name="message">Messaggio da inviare alla raccolta di <see cref="P:System.Diagnostics.Trace.Listeners" />.</param>
      <param name="detailMessageFormat">Stringa di formato composito da inviare alla raccolta <see cref="P:System.Diagnostics.Trace.Listeners" />. Questo messaggio contiene testo combinato con zero o più elementi di formato, che corrispondono a oggetti nella matrice <paramref name="args" />.</param>
      <param name="args">Matrice di oggetti che contiene zero o più oggetti da formattare.</param>
    </member>
    <member name="P:System.Diagnostics.Debug.AutoFlush">
      <summary>Ottiene o imposta un valore che indica se chiamare il metodo <see cref="M:System.Diagnostics.Debug.Flush" /> sulla proprietà <see cref="P:System.Diagnostics.Debug.Listeners" /> dopo ogni operazione di scrittura.</summary>
      <returns>
        <see langword="true" /> se il metodo <see cref="M:System.Diagnostics.Debug.Flush" /> viene chiamato sulla proprietà <see cref="P:System.Diagnostics.Debug.Listeners" /> dopo ogni operazione di scrittura; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Debug.Close">
      <summary>Svuota il buffer dell'output e quindi chiama il metodo <see langword="Close" /> per ogni <see cref="P:System.Diagnostics.Debug.Listeners" />.</summary>
    </member>
    <member name="M:System.Diagnostics.Debug.Fail(System.String)">
      <summary>Genera il messaggio di errore specificato.</summary>
      <param name="message">Messaggio da generare.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.Fail(System.String,System.String)">
      <summary>Genera un messaggio di errore e un messaggio di errore dettagliato.</summary>
      <param name="message">Messaggio da generare.</param>
      <param name="detailMessage">Messaggio dettagliato da generare.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.Flush">
      <summary>Svuota il buffer di output e determina la scrittura dei dati del buffer nell'insieme <see cref="P:System.Diagnostics.Debug.Listeners" />.</summary>
    </member>
    <member name="M:System.Diagnostics.Debug.Indent">
      <summary>Incrementa la proprietà <see cref="P:System.Diagnostics.Debug.IndentLevel" /> corrente di uno.</summary>
    </member>
    <member name="P:System.Diagnostics.Debug.IndentLevel">
      <summary>Ottiene o imposta il livello di rientro.</summary>
      <returns>Livello di rientro. Il valore predefinito è 0.</returns>
    </member>
    <member name="P:System.Diagnostics.Debug.IndentSize">
      <summary>Ottiene o imposta il numero di spazi in un rientro.</summary>
      <returns>Numero di spazi in un rientro. Il valore predefinito è quattro.</returns>
    </member>
    <member name="M:System.Diagnostics.Debug.Print(System.String)">
      <summary>Scrive un messaggio seguito da un terminatore di riga nei listener di traccia nell'insieme <see cref="P:System.Diagnostics.Debug.Listeners" />.</summary>
      <param name="message">Messaggio da inserire.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.Print(System.String,System.Object[])">
      <summary>Scrive una stringa formattata seguita da un terminatore di riga nei listener di traccia dell'insieme <see cref="P:System.Diagnostics.Debug.Listeners" />.</summary>
      <param name="format">Stringa di formato composta che contiene testo combinato con zero o più elementi di formato, che corrispondono agli oggetti nella matrice <paramref name="args" />.</param>
      <param name="args">Matrice di oggetti che contiene zero o più oggetti da formattare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> costruito in modo predefinito è <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> non è valido.  
In alternativa 
Il numero che indica un argomento da formattare è minore di zero oppure maggiore o uguale al numero di oggetti specificati da formattare.</exception>
    </member>
    <member name="M:System.Diagnostics.Debug.Unindent">
      <summary>Riduce la proprietà <see cref="P:System.Diagnostics.Debug.IndentLevel" /> corrente di uno.</summary>
    </member>
    <member name="M:System.Diagnostics.Debug.Write(System.Object)">
      <summary>Scrive il valore del metodo <see cref="M:System.Object.ToString" /> dell'oggetto nei listener di traccia dell'insieme <see cref="P:System.Diagnostics.Debug.Listeners" />.</summary>
      <param name="value">Oggetto il cui nome viene inviato ai <see cref="P:System.Diagnostics.Debug.Listeners" />.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
      <summary>Scrive il nome di una categoria e il valore del metodo <see cref="M:System.Object.ToString" /> dell'oggetto nei listener di traccia dell'insieme <see cref="P:System.Diagnostics.Debug.Listeners" />.</summary>
      <param name="value">Oggetto il cui nome viene inviato ai <see cref="P:System.Diagnostics.Debug.Listeners" />.</param>
      <param name="category">Nome di categoria utilizzato per organizzare l'output.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.Write(System.String)">
      <summary>Scrive un messaggio nei listener di traccia dell'insieme <see cref="P:System.Diagnostics.Debug.Listeners" />.</summary>
      <param name="message">Messaggio da scrivere.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.Write(System.String,System.String)">
      <summary>Scrive un nome di categoria e un messaggio nei listener di traccia dell'insieme <see cref="P:System.Diagnostics.Debug.Listeners" />.</summary>
      <param name="message">Messaggio da scrivere.</param>
      <param name="category">Nome di categoria utilizzato per organizzare l'output.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
      <summary>Scrive il valore del metodo <see cref="M:System.Object.ToString" /> dell'oggetto nei listener di traccia dell'insieme <see cref="P:System.Diagnostics.Debug.Listeners" />, se una condizione è <see langword="true" />.</summary>
      <param name="condition">Espressione condizionale da valutare. Se la condizione è <see langword="true" />, il valore viene scritto nei listener di traccia nell'insieme.</param>
      <param name="value">Oggetto il cui nome viene inviato ai <see cref="P:System.Diagnostics.Debug.Listeners" />.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
      <summary>Scrive il nome di una categoria e il valore del metodo <see cref="M:System.Object.ToString" /> dell'oggetto nei listener di traccia dell'insieme <see cref="P:System.Diagnostics.Debug.Listeners" /> se una condizione è <see langword="true" />.</summary>
      <param name="condition">Espressione condizionale da valutare. Se la condizione è <see langword="true" />, il nome della categoria e il valore vengono scritti nei listener di traccia nell'insieme.</param>
      <param name="value">Oggetto il cui nome viene inviato ai <see cref="P:System.Diagnostics.Debug.Listeners" />.</param>
      <param name="category">Nome di categoria utilizzato per organizzare l'output.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
      <summary>Scrive un messaggio nei listener di traccia dell'insieme <see cref="P:System.Diagnostics.Debug.Listeners" /> se una condizione è <see langword="true" />.</summary>
      <param name="condition">Espressione condizionale da valutare. Se la condizione è <see langword="true" />, il messaggio viene scritto nei listener di traccia nell'insieme.</param>
      <param name="message">Messaggio da scrivere.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
      <summary>Scrive un nome di categoria e un messaggio nei listener di traccia dell'insieme <see cref="P:System.Diagnostics.Debug.Listeners" /> se una condizione è <see langword="true" />.</summary>
      <param name="condition">Espressione condizionale da valutare. Se la condizione è <see langword="true" />, il nome della categoria e il messaggio vengono scritti nei listener di traccia nell'insieme.</param>
      <param name="message">Messaggio da scrivere.</param>
      <param name="category">Nome di categoria utilizzato per organizzare l'output.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLine(System.Object)">
      <summary>Scrive il valore del metodo <see cref="M:System.Object.ToString" /> dell'oggetto nei listener di traccia dell'insieme <see cref="P:System.Diagnostics.Debug.Listeners" />.</summary>
      <param name="value">Oggetto il cui nome viene inviato ai <see cref="P:System.Diagnostics.Debug.Listeners" />.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
      <summary>Scrive il nome di una categoria e il valore del metodo <see cref="M:System.Object.ToString" /> dell'oggetto nei listener di traccia dell'insieme <see cref="P:System.Diagnostics.Debug.Listeners" />.</summary>
      <param name="value">Oggetto il cui nome viene inviato ai <see cref="P:System.Diagnostics.Debug.Listeners" />.</param>
      <param name="category">Nome di categoria utilizzato per organizzare l'output.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLine(System.String)">
      <summary>Scrive un messaggio seguito da un terminatore di riga nei listener di traccia nell'insieme <see cref="P:System.Diagnostics.Debug.Listeners" />.</summary>
      <param name="message">Messaggio da scrivere.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])">
      <summary>Scrive un messaggio formattato seguito da un terminatore di riga nei listener di traccia nell'insieme <see cref="P:System.Diagnostics.Debug.Listeners" />.</summary>
      <param name="format">Stringa di formato composta che contiene testo combinato con zero o più elementi di formato, che corrispondono agli oggetti nella matrice <paramref name="args" />.</param>
      <param name="args">Matrice di oggetti che contiene zero o più oggetti da formattare.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
      <summary>Scrive un nome di categoria e un messaggio nei listener di traccia dell'insieme <see cref="P:System.Diagnostics.Debug.Listeners" />.</summary>
      <param name="message">Messaggio da scrivere.</param>
      <param name="category">Nome di categoria utilizzato per organizzare l'output.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
      <summary>Scrive il valore del metodo <see cref="M:System.Object.ToString" /> dell'oggetto nei listener di traccia dell'insieme <see cref="P:System.Diagnostics.Debug.Listeners" />, se una condizione è <see langword="true" />.</summary>
      <param name="condition">Espressione condizionale da valutare. Se la condizione è <see langword="true" />, il valore viene scritto nei listener di traccia nell'insieme.</param>
      <param name="value">Oggetto il cui nome viene inviato ai <see cref="P:System.Diagnostics.Debug.Listeners" />.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
      <summary>Scrive il nome di una categoria e il valore del metodo <see cref="M:System.Object.ToString" /> dell'oggetto nei listener di traccia dell'insieme <see cref="P:System.Diagnostics.Debug.Listeners" /> se una condizione è <see langword="true" />.</summary>
      <param name="condition">Espressione condizionale da valutare. Se la condizione è <see langword="true" />, il nome della categoria e il valore vengono scritti nei listener di traccia nell'insieme.</param>
      <param name="value">Oggetto il cui nome viene inviato ai <see cref="P:System.Diagnostics.Debug.Listeners" />.</param>
      <param name="category">Nome di categoria utilizzato per organizzare l'output.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
      <summary>Scrive un messaggio nei listener di traccia dell'insieme <see cref="P:System.Diagnostics.Debug.Listeners" /> se una condizione è <see langword="true" />.</summary>
      <param name="condition">Espressione condizionale da valutare. Se la condizione è <see langword="true" />, il messaggio viene scritto nei listener di traccia nell'insieme.</param>
      <param name="message">Messaggio da scrivere.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
      <summary>Scrive un nome di categoria e un messaggio nei listener di traccia dell'insieme <see cref="P:System.Diagnostics.Debug.Listeners" /> se una condizione è <see langword="true" />.</summary>
      <param name="condition">
        <see langword="true" /> per produrre la scrittura di un messaggio; in caso contrario, <see langword="false" />.</param>
      <param name="message">Messaggio da scrivere.</param>
      <param name="category">Nome di categoria utilizzato per organizzare l'output.</param>
    </member>
    <member name="T:System.Diagnostics.Debugger">
      <summary>Abilita la comunicazione con un debugger. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Diagnostics.Debugger.Break">
      <summary>Segnala un punto di interruzione a un debugger collegato.</summary>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Security.Permissions.UIPermission" /> non è impostato per interrompere il debugger.</exception>
    </member>
    <member name="F:System.Diagnostics.Debugger.DefaultCategory">
      <summary>Rappresenta la categoria predefinita di messaggio con una costante.</summary>
    </member>
    <member name="P:System.Diagnostics.Debugger.IsAttached">
      <summary>Ottiene un valore che indica se un debugger è collegato al processo.</summary>
      <returns>
        <see langword="true" /> se un debugger è collegato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Debugger.IsLogging">
      <summary>Verifica se è attivata la registrazione da parte di un debugger collegato.</summary>
      <returns>
        <see langword="true" /> se un debugger è collegato ed è abilitata la registrazione; in caso contrario, <see langword="false" />. Il debugger collegato è il debugger gestito registrato nella chiave <see langword="DbgManagedDebugger" /> del Registro di sistema. Per altre informazioni su questa chiave, vedere Enabling JIT-Attach Debugging (Abilitazione del debug ad associazione JIT).</returns>
    </member>
    <member name="M:System.Diagnostics.Debugger.Launch">
      <summary>Avvia e collega un debugger al processo.</summary>
      <returns>
        <see langword="true" /> se l'avvio viene eseguito con esito positivo oppure se il debugger è già collegato; in caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Security.Permissions.UIPermission" /> non è impostato per l'avvio del debugger.</exception>
    </member>
    <member name="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)">
      <summary>Invia un messaggio per il debugger collegato.</summary>
      <param name="level">Descrizione dell'importanza del messaggio.</param>
      <param name="category">Categoria del messaggio.</param>
      <param name="message">Messaggio da visualizzare.</param>
    </member>
    <member name="M:System.Diagnostics.Debugger.NotifyOfCrossThreadDependency">
      <summary>Notifica a un debugger che l'esecuzione sta per immettere un percorso che comporta una dipendenza cross-thread.</summary>
    </member>
    <member name="T:System.Diagnostics.DebuggerBrowsableAttribute">
      <summary>Determina se e come viene visualizzato un membro nelle finestre delle variabili del debugger. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Diagnostics.DebuggerBrowsableAttribute.#ctor(System.Diagnostics.DebuggerBrowsableState)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.DebuggerBrowsableAttribute" />.</summary>
      <param name="state">Uno dei valori di <see cref="T:System.Diagnostics.DebuggerBrowsableState" /> che specifica la modalità di visualizzazione del membro.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="state" /> non è uno dei valori di <see cref="T:System.Diagnostics.DebuggerBrowsableState" />.</exception>
    </member>
    <member name="P:System.Diagnostics.DebuggerBrowsableAttribute.State">
      <summary>Ottiene lo stato di visualizzazione per l'attributo.</summary>
      <returns>Uno dei valori di <see cref="T:System.Diagnostics.DebuggerBrowsableState" />.</returns>
    </member>
    <member name="T:System.Diagnostics.DebuggerBrowsableState">
      <summary>Fornisce istruzioni di visualizzazione per il debugger.</summary>
    </member>
    <member name="F:System.Diagnostics.DebuggerBrowsableState.Collapsed">
      <summary>Consente di visualizzare gli elementi in forma compressa.</summary>
    </member>
    <member name="F:System.Diagnostics.DebuggerBrowsableState.Never">
      <summary>Consente di non visualizzare mai l'elemento.</summary>
    </member>
    <member name="F:System.Diagnostics.DebuggerBrowsableState.RootHidden">
      <summary>Consente di non visualizzare l'elemento di primo livello e di visualizzare gli elementi figlio se l'elemento è un insieme o una matrice di elementi.</summary>
    </member>
    <member name="T:System.Diagnostics.DebuggerDisplayAttribute">
      <summary>Determina la modalità di visualizzazione di una classe o di un campo nelle finestre delle variabili del debugger.</summary>
    </member>
    <member name="M:System.Diagnostics.DebuggerDisplayAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.DebuggerDisplayAttribute" />.</summary>
      <param name="value">Stringa da visualizzare nella colonna del valore per le istanze del tipo. Se si specifica una stringa vuota (""), la colonna del valore verrà nascosta.</param>
    </member>
    <member name="P:System.Diagnostics.DebuggerDisplayAttribute.Name">
      <summary>Ottiene o imposta il nome da visualizzare nelle finestre delle variabili del debugger.</summary>
      <returns>Nome da visualizzare nelle finestre delle variabili del debugger.</returns>
    </member>
    <member name="P:System.Diagnostics.DebuggerDisplayAttribute.Target">
      <summary>Ottiene o imposta il tipo della destinazione dell'attributo.</summary>
      <returns>Tipo di destinazione dell'attributo.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Diagnostics.DebuggerDisplayAttribute.Target" /> è impostato su <see langword="null" />.</exception>
    </member>
    <member name="P:System.Diagnostics.DebuggerDisplayAttribute.TargetTypeName">
      <summary>Ottiene o imposta il nome del tipo della destinazione dell'attributo.</summary>
      <returns>Nome del tipo della destinazione dell'attributo.</returns>
    </member>
    <member name="P:System.Diagnostics.DebuggerDisplayAttribute.Type">
      <summary>Ottiene o imposta la stringa da visualizzare nella colonna del tipo delle finestre delle variabili del debugger.</summary>
      <returns>Stringa da visualizzare nella colonna del tipo delle finestre delle variabili del debugger.</returns>
    </member>
    <member name="P:System.Diagnostics.DebuggerDisplayAttribute.Value">
      <summary>Ottiene la stringa da visualizzare nella colonna del valore delle finestre delle variabili del debugger.</summary>
      <returns>Stringa da visualizzare nella colonna del valore delle finestre delle variabili del debugger.</returns>
    </member>
    <member name="T:System.Diagnostics.DebuggerHiddenAttribute">
      <summary>Specifica <see cref="T:System.Diagnostics.DebuggerHiddenAttribute" />. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Diagnostics.DebuggerHiddenAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.DebuggerHiddenAttribute" />.</summary>
    </member>
    <member name="T:System.Diagnostics.DebuggerNonUserCodeAttribute">
      <summary>Identifica un tipo o membro che non fa parte del codice utente di un'applicazione.</summary>
    </member>
    <member name="M:System.Diagnostics.DebuggerNonUserCodeAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.DebuggerNonUserCodeAttribute" />.</summary>
    </member>
    <member name="T:System.Diagnostics.DebuggerStepperBoundaryAttribute">
      <summary>Indica che il codice che segue l'attributo deve essere eseguito in modalità di esecuzione e non un'istruzione alla volta.</summary>
    </member>
    <member name="M:System.Diagnostics.DebuggerStepperBoundaryAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.DebuggerStepperBoundaryAttribute" />.</summary>
    </member>
    <member name="T:System.Diagnostics.DebuggerStepThroughAttribute">
      <summary>Indica al debugger di eseguire il codice un'istruzione alla volta anziché eseguire un'istruzione nel codice. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Diagnostics.DebuggerStepThroughAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.DebuggerStepThroughAttribute" />.</summary>
    </member>
    <member name="T:System.Diagnostics.DebuggerTypeProxyAttribute">
      <summary>Specifica il proxy di visualizzazione per un tipo.</summary>
    </member>
    <member name="M:System.Diagnostics.DebuggerTypeProxyAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.DebuggerTypeProxyAttribute" /> utilizzando il nome del tipo del proxy.</summary>
      <param name="typeName">Nome del tipo del proxy.</param>
    </member>
    <member name="M:System.Diagnostics.DebuggerTypeProxyAttribute.#ctor(System.Type)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.DebuggerTypeProxyAttribute" /> utilizzando il tipo del proxy.</summary>
      <param name="type">Tipo del proxy.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Diagnostics.DebuggerTypeProxyAttribute.ProxyTypeName">
      <summary>Ottiene il nome del tipo del proxy.</summary>
      <returns>Nome del tipo del proxy.</returns>
    </member>
    <member name="P:System.Diagnostics.DebuggerTypeProxyAttribute.Target">
      <summary>Ottiene o imposta il tipo di destinazione per l'attributo.</summary>
      <returns>Tipo di destinazione per l'attributo.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Diagnostics.DebuggerTypeProxyAttribute.Target" /> è impostato su <see langword="null" />.</exception>
    </member>
    <member name="P:System.Diagnostics.DebuggerTypeProxyAttribute.TargetTypeName">
      <summary>Ottiene o imposta il nome del tipo di destinazione.</summary>
      <returns>Nome del tipo di destinazione.</returns>
    </member>
    <member name="T:System.Diagnostics.DebuggerVisualizerAttribute">
      <summary>Specifica che il tipo dispone di un visualizzatore. Questa classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.DebuggerVisualizerAttribute" />, specificando il nome del tipo del visualizzatore.</summary>
      <param name="visualizerTypeName">Il nome completo del tipo del visualizzatore.</param>
    </member>
    <member name="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.DebuggerVisualizerAttribute" />, specificando il nome del tipo del visualizzatore e dell'origine dell'oggetto visualizzatore.</summary>
      <param name="visualizerTypeName">Il nome completo del tipo del visualizzatore.</param>
      <param name="visualizerObjectSourceTypeName">Nome di tipo completo di origine dell'oggetto visualizzatore.</param>
    </member>
    <member name="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.String,System.Type)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.DebuggerVisualizerAttribute" />, specificando il nome del tipo del visualizzatore e il tipo dell'origine dell'oggetto visualizzatore.</summary>
      <param name="visualizerTypeName">Il nome completo del tipo del visualizzatore.</param>
      <param name="visualizerObjectSource">Tipo di origine dell'oggetto visualizzatore.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visualizerObjectSource" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.Type)">
      <summary>Inizializza un'istanza nuova della classe <see cref="T:System.Diagnostics.DebuggerVisualizerAttribute" />, specificando il tipo del visualizzatore.</summary>
      <param name="visualizer">Tipo del visualizzatore.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visualizer" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.Type,System.String)">
      <summary>Inizializza un'istanza nuova della classe <see cref="T:System.Diagnostics.DebuggerVisualizerAttribute" />, specificando il tipo del visualizzatore e il nome di tipo di origine dell'oggetto visualizzatore.</summary>
      <param name="visualizer">Tipo del visualizzatore.</param>
      <param name="visualizerObjectSourceTypeName">Nome di tipo completo di origine dell'oggetto visualizzatore.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visualizer" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.Type,System.Type)">
      <summary>Inizializza un'istanza nuova della classe <see cref="T:System.Diagnostics.DebuggerVisualizerAttribute" />, specificando il tipo del visualizzatore e il tipo di origine dell'oggetto visualizzatore.</summary>
      <param name="visualizer">Tipo del visualizzatore.</param>
      <param name="visualizerObjectSource">Tipo di origine dell'oggetto visualizzatore.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visualizerObjectSource" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Diagnostics.DebuggerVisualizerAttribute.Description">
      <summary>Ottiene o imposta la descrizione del visualizzatore.</summary>
      <returns>La descrizione del visualizzatore.</returns>
    </member>
    <member name="P:System.Diagnostics.DebuggerVisualizerAttribute.Target">
      <summary>Ottiene o imposta il tipo di destinazione quando l'attributo viene applicato a livello di assembly.</summary>
      <returns>Tipo che rappresenta la destinazione del visualizzatore.</returns>
      <exception cref="T:System.ArgumentNullException">Non è possibile impostare il valore perché è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Diagnostics.DebuggerVisualizerAttribute.TargetTypeName">
      <summary>Ottiene o imposta il nome completo del tipo quando l'attributo viene applicato a livello di assembly.</summary>
      <returns>Il nome completo del tipo di destinazione.</returns>
    </member>
    <member name="P:System.Diagnostics.DebuggerVisualizerAttribute.VisualizerObjectSourceTypeName">
      <summary>Ottiene il nome completo del tipo dell'origine dell'oggetto visualizzatore.</summary>
      <returns>Nome di tipo completo di origine dell'oggetto visualizzatore.</returns>
    </member>
    <member name="P:System.Diagnostics.DebuggerVisualizerAttribute.VisualizerTypeName">
      <summary>Ottiene il nome completo del tipo del visualizzatore.</summary>
      <returns>Il nome completo del tipo del visualizzatore.</returns>
    </member>
  </members>
</doc>