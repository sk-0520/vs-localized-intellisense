<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net.Http</name>
  </assembly>
  <members>
    <member name="T:System.Net.Http.ByteArrayContent">
      <summary>Stellt HTTP-Inhalt auf Grundlage von einem Bytearray bereit.</summary>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[])">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.ByteArrayContent" />-Klasse.</summary>
      <param name="content">Der Inhalt, der zum Initialisieren der <see cref="T:System.Net.Http.ByteArrayContent" /> verwendet wird.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="content" />-Parameter ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.ByteArrayContent" />-Klasse.</summary>
      <param name="content">Der Inhalt, der zum Initialisieren der <see cref="T:System.Net.Http.ByteArrayContent" /> verwendet wird.</param>
      <param name="offset">Der Offset in Bytes im <paramref name="content" />-Parameter, der verwendet wird, um den <see cref="T:System.Net.Http.ByteArrayContent" /> zu initialisieren.</param>
      <param name="count">Die Anzahl der Bytes in <paramref name="content" /> ab dem <paramref name="offset" />-Parameter, die zum Initialisieren von <see cref="T:System.Net.Http.ByteArrayContent" /> benutzt werden.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="content" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Die <paramref name="offset" />-Parameter ist kleiner als 0 (null).  

oder - 
Der <paramref name="offset" />-Parameter größer als die Länge des Inhalts, der durch den <paramref name="content" />-Parameters angegeben wird.  

oder - 
Die <paramref name="count" />-Parameter ist kleiner als 0 (null).  

oder - 
Der <paramref name="count" />-Parameter größer als die Länge des Inhalts, der durch den <paramref name="content" />-Parameters - minus dem <paramref name="offset" />-Parameter angegeben wird.</exception>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync">
      <summary>Erstellt einen HTTP-Inhaltsdatenstrom als asynchronen Vorgang zum Lesen, dessen Sicherungsspeicher Arbeitsspeicher von <see cref="T:System.Net.Http.ByteArrayContent" /> ist.</summary>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary>Das Bytearray, das im Konstruktor bereitgestellt wird, als asynchronen Vorgang in einen HTTP-Inhaltsstream serialisieren und schreiben.</summary>
      <param name="stream">Der Zieldatenstrom.</param>
      <param name="context">Informationen über den Transport, z.B. Kanalbindungstoken. Dieser Parameter kann <see langword="null" /> sein.</param>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.TryComputeLength(System.Int64@)">
      <summary>Bestimmt, ob ein Bytearray eine gültige Länge in Bytes enthält.</summary>
      <param name="length">Die Länge des Bytearrays in Bytes.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="length" /> eine gültige Länge ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.ClientCertificateOption">
      <summary>Gibt an, wie die Clientzertifikate bereitgestellt werden.</summary>
    </member>
    <member name="F:System.Net.Http.ClientCertificateOption.Automatic">
      <summary>Der <see cref="T:System.Net.Http.HttpClientHandler" /> versucht, alle verfügbaren Clientzertifikate automatisch bereitzustellen.</summary>
    </member>
    <member name="F:System.Net.Http.ClientCertificateOption.Manual">
      <summary>Die Anwendung stellt manuell die Clientzertifikate für den <see cref="T:System.Net.Http.WebRequestHandler" /> bereit. Dies ist der Standardwert.</summary>
    </member>
    <member name="T:System.Net.Http.DelegatingHandler">
      <summary>Ein Typ für HTTP-Handler, die die Verarbeitung von HTTP-Antwortnachrichten in einen anderen Handler (den internen Handler) delegieren.</summary>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.#ctor">
      <summary>Erstellt eine neue Instanz der <see cref="T:System.Net.Http.DelegatingHandler" />-Klasse.</summary>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary>Erstellt eine neue Instanz der <see cref="T:System.Net.Http.DelegatingHandler" />-Klasse mit einem bestimmten inneren Handler.</summary>
      <param name="innerHandler">Der innere Handler, der für die Verarbeitung der HTTP-Antwortnachrichten zuständig ist.</param>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.Dispose(System.Boolean)">
      <summary>Gibt die vom <see cref="T:System.Net.Http.DelegatingHandler" /> verwendeten, nicht verwalteten Ressourcen frei und verwirft optional auch die verwalteten Ressourcen.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben. <see langword="false" />, wenn ausschließlich nicht verwaltete Ressourcen freigegeben werden sollen.</param>
    </member>
    <member name="P:System.Net.Http.DelegatingHandler.InnerHandler">
      <summary>Ruft den inneren Handler ab, der die HTTP-Antwortnachrichten verarbeitet, oder legt ihn fest.</summary>
      <returns>Der innere Handler für HTTP-Antwortnachrichten.</returns>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Sendet eine HTTP-Anforderung an den inneren Handler, der als asynchroner Vorgang an den Server gesendet werden soll.</summary>
      <param name="request">Die an den Server zu sendende HTTP-Anforderungsmeldung.</param>
      <param name="cancellationToken">Ein Abbruchtoken, um den Vorgang abzubrechen.</param>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="request" /> war <see langword="null" />.</exception>
    </member>
    <member name="T:System.Net.Http.FormUrlEncodedContent">
      <summary>Ein Container für die Name/Wert-Tupel, codiert mit dem "application/x-www-form-urlencoded" MIME-Typ.</summary>
    </member>
    <member name="M:System.Net.Http.FormUrlEncodedContent.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.FormUrlEncodedContent" />-Klasse mit einer bestimmten Auflistung von Namen/Wert-Paaren.</summary>
      <param name="nameValueCollection">Eine Sammlung von Name-Wert-Paaren.</param>
    </member>
    <member name="T:System.Net.Http.Headers.AuthenticationHeaderValue">
      <summary>Stellt Authentifizierungsinformationen in Authorization-, ProxyAuthorization-, WWW-Authenticate- und Proxy-Authenticate-Headerwerten dar.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />-Klasse.</summary>
      <param name="scheme">Das für die Autorisierung zu verwendende Schema.</param>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />-Klasse.</summary>
      <param name="scheme">Das für die Autorisierung zu verwendende Schema.</param>
      <param name="parameter">Die Anmeldeinformationen, die die Authentifizierungsinformationen des Benutzer-Agents für die angeforderte Ressource enthalten.</param>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.Equals(System.Object)">
      <summary>Bestimmt, ob das angegebene <see cref="T:System.Object" /> und das aktuelle <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />-Objekt gleich sind.</summary>
      <param name="obj">Das Objekt, das mit dem aktuellen Objekt verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn das angegebene <see cref="T:System.Object" /> gleich dem aktuellen Objekt ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.GetHashCode">
      <summary>Dient als Hashfunktion für ein <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />-Objekt.</summary>
      <returns>Ein Hashcode für das aktuelle Objekt.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.AuthenticationHeaderValue.Parameter">
      <summary>Ruft die Anmeldeinformationen ab, die die Authentifizierungsinformationen des Benutzer-Agents für die angeforderte Ressource enthalten.</summary>
      <returns>Die Anmeldeinformationen, die die Authentifizierungsinformationen enthalten.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.Parse(System.String)">
      <summary>Konvertiert eine Zeichenfolge in eine <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />-Instanz.</summary>
      <param name="input">Eine Zeichenfolge, die Headerwertinformationen für die Authentifizierung darstellt.</param>
      <returns>Eine <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />-Instanz.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ist ein <see langword="null" />-Verweis.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> ist keine gültige Headerwertinformation für die Authentifizierung.</exception>
    </member>
    <member name="P:System.Net.Http.Headers.AuthenticationHeaderValue.Scheme">
      <summary>Ruft das Schema ab, das für die Autorisierung verwendet werden soll.</summary>
      <returns>Das für die Autorisierung zu verwendende Schema.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.System#ICloneable#Clone">
      <summary>Erstellt ein neues Objekt, das eine Kopie der aktuellen <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />-Instanz ist.</summary>
      <returns>Eine Kopie der aktuellen Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.ToString">
      <summary>Gibt eine Zeichenfolge zurück, die das aktuelle <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />-Objekt darstellt.</summary>
      <returns>Eine Zeichenfolge, die das aktuelle Objekt darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.TryParse(System.String,System.Net.Http.Headers.AuthenticationHeaderValue@)">
      <summary>Bestimmt, ob eine Zeichenfolge eine gültige <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />-Information ist.</summary>
      <param name="input">Die zu überprüfende Zeichenfolge.</param>
      <param name="parsedValue">Die <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />-Version der Zeichenfolge.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="input" /> eine gültige <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />-Information ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.CacheControlHeaderValue">
      <summary>Stellt den Wert des Cachesteuerungsheaders dar.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" />-Klasse.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.Equals(System.Object)">
      <summary>Bestimmt, ob das angegebene <see cref="T:System.Object" /> und das aktuelle <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" />-Objekt gleich sind.</summary>
      <param name="obj">Das Objekt, das mit dem aktuellen Objekt verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn das angegebene <see cref="T:System.Object" /> gleich dem aktuellen Objekt ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.Extensions">
      <summary>CACHE-EXTENSION-Tokens, jeweils mit einem optionalen zugeordneten Wert.</summary>
      <returns>Eine Sammlung von Cacheerweiterungstoken, jeweils mit einem optionalen zugewiesenen Wert.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode">
      <summary>Dient als Hashfunktion für ein <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" />-Objekt.</summary>
      <returns>Ein Hashcode für das aktuelle Objekt.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxAge">
      <summary>Das maximale Alter in Sekunden, das der HTTP-Client für den Empfang einer Antwort akzeptiert.</summary>
      <returns>Die Zeit in Sekunden.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxStale">
      <summary>Gibt an, ob ein HTTP-Client bereit ist, eine Antwort zu akzeptieren, die den Ablaufzeitpunkt überschritten hat.</summary>
      <returns>
        <see langword="true" />, wenn der ein HTTP-Client bereit ist, eine Antwort zu akzeptieren, die den Ablaufzeitpunkt überschritten hat; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit">
      <summary>Die maximale Zeit in Sekunden, für die ein HTTP-Client eine Antwort akzeptiert, die den Ablaufzeitpunkt überschritten hat.</summary>
      <returns>Die Zeit in Sekunden.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MinFresh">
      <summary>Die Lebensdauer der Aktualität in Sekunden, die ein HTTP-Client für den Empfang einer Antwort akzeptiert.</summary>
      <returns>Die Zeit in Sekunden.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate">
      <summary>Gibt an, ob der Ausgangsserver die erneute Überprüfung eines Cacheeintrags für jede nachfolgende Verwendung erfordert, wenn der Cacheeintrag veraltet ist.</summary>
      <returns>
        <see langword="true" />, wenn der Ausgangsserver die erneute Überprüfung eines Cacheeintrags für jede nachfolgende Verwendung erfordert, wenn der Cacheeintrag veraltet ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.NoCache">
      <summary>Gibt an, ob ein HTTP-Client bereit ist, eine zwischengespeicherte Antwort zu akzeptieren.</summary>
      <returns>
        <see langword="true" />, wenn der HTTP-Client nicht bereit ist, eine zwischengespeicherte Antwort zu akzeptieren. <see langword="false" />andernfalls.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders">
      <summary>Eine Sammlung von Feldnamen in der „No-Cache“-Richtlinie in einem Cache-Control-Header-Feld auf einer HTTP-Antwort.</summary>
      <returns>Eine Sammlung von Feldnamen.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.NoStore">
      <summary>Gibt an, ob ein Cache weder einen beliebigen Teil der HTTP-Anforderungsnachricht noch eine beliebige Antwort speichern darf.</summary>
      <returns>
        <see langword="true" />, wenn ein Cache weder einen beliebigen Teil der HTTP-Anforderungsnachricht noch eine beliebige Antwort speichern darf; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.NoTransform">
      <summary>Gibt an, ob ein Cache oder Proxy einen Aspekt des Entitätstexts ändern darf.</summary>
      <returns>
        <see langword="true" />, wenn ein Cache oder Proxy keinen Aspekt des Entitätstexts ändern darf, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached">
      <summary>Gibt an, ob ein Cache mit einem zwischengespeicherten Eintrag antworten soll, der mit den anderen Einschränkungen der HTTP-Anforderung konsistent ist, oder mit dem Status „504“ (Gatewaytimeout).</summary>
      <returns>
        <see langword="true" />, wenn ein Cache mit einem zwischengespeicherten Eintrag, der mit den anderen Einschränkungen der HTTP-Anforderung konsistent ist, oder mit dem Status „504“ (Gatewaytimeout) antworten soll. Andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.Parse(System.String)">
      <summary>Konvertiert eine Zeichenfolge in eine <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" />-Instanz.</summary>
      <param name="input">Eine Zeichenfolge, die Headerwertinformationen für Cachesteuerelemente darstellt.</param>
      <returns>Eine <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" />-Instanz.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ist ein <see langword="null" />-Verweis.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> ist keine gültige Wertinformation für einen Cachesteuerungsheader.</exception>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.Private">
      <summary>Gibt an, ob alles oder nur ein Teil der HTTP-Antwortnachricht für einen einzelnen Benutzer bestimmt ist und nicht durch das Ausführen eines freigegebenen Caches zwischengespeichert werden darf.</summary>
      <returns>
        <see langword="true" />, wenn die HTTP-Antwortnachricht für einen einzelnen Benutzer vorgesehen ist und nicht von einem gemeinsam genutzten Cache zwischengespeichert werden darf; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders">
      <summary>Eine Sammlung von Feldnamen in der „Private“-Richtlinie in einem Cache-Control-Header-Feld auf einer HTTP-Antwort.</summary>
      <returns>Eine Sammlung von Feldnamen.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate">
      <summary>Gibt an, ob der Ausgangsserver für gemeinsam genutzte Benutzeragentcaches die erneute Überprüfung eines Cacheeintrags für jede nachfolgende Verwendung erfordert, wenn der Cacheeintrag veraltet ist.</summary>
      <returns>
        <see langword="true" />, wenn der Ausgangsserver für gemeinsam genutzte Benutzeragentcaches die erneute Überprüfung eines Cacheeintrags für jede nachfolgende Verwendung erfordert, wenn der Cacheeintrag veraltet ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.Public">
      <summary>Ob eine HTTP-Antwort auch dann in einem beliebigen Cache zwischengespeichert werden darf, wenn sie normalerweise nicht bzw. nur in einem nicht freigegebenen Cache zwischengespeichert werden darf.</summary>
      <returns>
        <see langword="true" />, wenn die HTTP-Antwort auch dann in einem beliebigen Cache zwischengespeichert werden darf, wenn sie normalerweise nicht bzw. nur in einem nicht freigegebenen Cache zwischengespeichert werden darf; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge">
      <summary>Das in Sekunden angegebene, Höchstalter für freigegebene Caches in einer HTTP-Antwort, das die max-age-Direktive in einem cache-control-Header oder einem Expires-Header für einen freigegebenen Cache überschreibt.</summary>
      <returns>Die Zeit in Sekunden.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.System#ICloneable#Clone">
      <summary>Erstellt ein neues Objekt, das eine Kopie der aktuellen <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" />-Instanz ist.</summary>
      <returns>Eine Kopie der aktuellen Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.ToString">
      <summary>Gibt eine Zeichenfolge zurück, die das aktuelle <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" />-Objekt darstellt.</summary>
      <returns>Eine Zeichenfolge, die das aktuelle Objekt darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.TryParse(System.String,System.Net.Http.Headers.CacheControlHeaderValue@)">
      <summary>Bestimmt, ob eine Zeichenfolge eine gültige <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" />-Information ist.</summary>
      <param name="input">Die zu überprüfende Zeichenfolge.</param>
      <param name="parsedValue">Die <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" />-Version der Zeichenfolge.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="input" /> eine gültige <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" />-Information ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ContentDispositionHeaderValue">
      <summary>Stellt den Wert des Content-Disposition-Headers dar.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.#ctor(System.Net.Http.Headers.ContentDispositionHeaderValue)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />-Klasse.</summary>
      <param name="source">Ein <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />-Klasse.</summary>
      <param name="dispositionType">Eine Zeichenfolge, die eine <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> enthält.</param>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.CreationDate">
      <summary>Das Datum der Dateierstellung.</summary>
      <returns>Das Dateierstellungsdatum.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.DispositionType">
      <summary>Der Dispositionstyp für einen Inhaltsteil.</summary>
      <returns>Der Dispositionstyp.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.Equals(System.Object)">
      <summary>Bestimmt, ob das angegebene <see cref="T:System.Object" /> und das aktuelle <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />-Objekt gleich sind.</summary>
      <param name="obj">Das Objekt, das mit dem aktuellen Objekt verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn das angegebene <see cref="T:System.Object" /> gleich dem aktuellen Objekt ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.FileName">
      <summary>Eine Empfehlung zum Erstellen eines Dateinamens zum Speichern der Nachrichtennutzlast, der verwendet werden soll, wenn die Entität getrennt und in einer separaten Datei gespeichert wird.</summary>
      <returns>Ein vorgeschlagener Name.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.FileNameStar">
      <summary>Eine Empfehlung zum Erstellen der Dateinamen zum Speichern von Nachrichtennutzlasten, die verwendet werden sollen, wenn die Entitäten getrennt und in separaten Dateien gespeichert werden.</summary>
      <returns>Ein vorgeschlagener Dateiname des Formulars „filename*“.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.GetHashCode">
      <summary>Dient als Hashfunktion für ein <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />-Objekt.</summary>
      <returns>Ein Hashcode für das aktuelle Objekt.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.ModificationDate">
      <summary>Das Datum der letzten Dateiänderung.</summary>
      <returns>Das Datum der Dateiänderung.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.Name">
      <summary>Der Name für einen Inhaltsteil.</summary>
      <returns>Der Name für den Inhaltsteil.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.Parameters">
      <summary>Ein Satz Parameter enthielt den Content-Disposition-Header.</summary>
      <returns>Eine Auflistung von Parametern.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.Parse(System.String)">
      <summary>Konvertiert eine Zeichenfolge in eine <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />-Instanz.</summary>
      <param name="input">Eine Zeichenfolge, die Headerwertinformationen für die Inhaltsanordnung darstellt.</param>
      <returns>Eine <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />-Instanz.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ist ein <see langword="null" />-Verweis.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> ist keine gültige Headerwertinformation für die Inhaltsanordnung.</exception>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.ReadDate">
      <summary>Letztes Lesedatum der Datei.</summary>
      <returns>Das letzte Lesedatum.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.Size">
      <summary>Die ungefähre Größe der Datei in Bytes.</summary>
      <returns>Die ungefähre Größe in Bytes.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.System#ICloneable#Clone">
      <summary>Erstellt ein neues Objekt, das eine Kopie der aktuellen <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />-Instanz ist.</summary>
      <returns>Eine Kopie der aktuellen Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.ToString">
      <summary>Gibt eine Zeichenfolge zurück, die das aktuelle <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />-Objekt darstellt.</summary>
      <returns>Eine Zeichenfolge, die das aktuelle Objekt darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.TryParse(System.String,System.Net.Http.Headers.ContentDispositionHeaderValue@)">
      <summary>Bestimmt, ob eine Zeichenfolge eine gültige <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />-Information ist.</summary>
      <param name="input">Die zu überprüfende Zeichenfolge.</param>
      <param name="parsedValue">Die <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />-Version der Zeichenfolge.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="input" /> eine gültige <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />-Information ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ContentRangeHeaderValue">
      <summary>Stellt den Wert des Content-Range-Headers dar.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />-Klasse.</summary>
      <param name="length">Der Start- oder Endpunkt des Bereichs in Bytes.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64,System.Int64)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />-Klasse.</summary>
      <param name="from">Die Position in Bytes, an der mit dem Senden von Daten begonnen werden soll.</param>
      <param name="to">Die Position in Bytes, an der das Senden von Daten beendet werden soll.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64,System.Int64,System.Int64)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />-Klasse.</summary>
      <param name="from">Die Position in Bytes, an der mit dem Senden von Daten begonnen werden soll.</param>
      <param name="to">Die Position in Bytes, an der das Senden von Daten beendet werden soll.</param>
      <param name="length">Der Start- oder Endpunkt des Bereichs in Bytes.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.Equals(System.Object)">
      <summary>Bestimmt, ob das angegebene Objekt und das aktuelle <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />-Objekt gleich sind.</summary>
      <param name="obj">Das Objekt, das mit dem aktuellen Objekt verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn das angegebene <see cref="T:System.Object" /> und das aktuelle Objekt gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.From">
      <summary>Ruft die Position ab, an der mit dem Senden von Daten begonnen werden soll.</summary>
      <returns>Die Position in Bytes, an der mit dem Senden von Daten begonnen werden soll.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.GetHashCode">
      <summary>Fungiert als Hashfunktion für ein <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />-Objekt.</summary>
      <returns>Ein Hashcode für das aktuelle Objekt.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.HasLength">
      <summary>Ruft ab, ob für den Inhaltsbereichsheader eine Länge angegeben ist.</summary>
      <returns>
        <see langword="true" />, wenn der Content-Range eine Länge angegeben hat; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.HasRange">
      <summary>Ruft ab, ob für den Inhaltsbereich ein Bereich bestimmt wurde.</summary>
      <returns>
        <see langword="true" />, wenn der Content-Range einen Bereich angegeben hat; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.Length">
      <summary>Ruft die Länge des vollständigen Entitätstexts ab.</summary>
      <returns>Die Länge des vollständigen Entitätstexts.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.Parse(System.String)">
      <summary>Konvertiert eine Zeichenfolge in eine <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />-Instanz.</summary>
      <param name="input">Eine Zeichenfolge, die die Informationen des Inhaltsbereichs-Headerwerts darstellt.</param>
      <returns>Eine <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />-Instanz.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ist ein <see langword="null" />-Verweis.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> ist keine gültige Information für einen Inhaltsbereich-Headerwert.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.System#ICloneable#Clone">
      <summary>Erstellt ein neues Objekt, das eine Kopie der aktuellen <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />-Instanz ist.</summary>
      <returns>Eine Kopie der aktuellen Instanz.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.To">
      <summary>Ruft die Position ab, an der das Senden von Daten beendet werden soll.</summary>
      <returns>Die Position, an der das Senden von Daten beendet werden soll.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.ToString">
      <summary>Gibt eine Zeichenfolge zurück, die das aktuelle <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />-Objekt darstellt.</summary>
      <returns>Eine Zeichenfolge, die das aktuelle Objekt darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.TryParse(System.String,System.Net.Http.Headers.ContentRangeHeaderValue@)">
      <summary>Bestimmt, ob eine Zeichenfolge eine gültige <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />-Information ist.</summary>
      <param name="input">Die zu überprüfende Zeichenfolge.</param>
      <param name="parsedValue">Die <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />-Version der Zeichenfolge.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="input" /> gültige <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />-Informationen sind; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.Unit">
      <summary>Die verwendeten Bereichseinheiten.</summary>
      <returns>Eine <see cref="T:System.String" />, die Bereichseinheiten enthält.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.EntityTagHeaderValue">
      <summary>Stellt einen Entitätstag-Headerwert dar.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />-Klasse.</summary>
      <param name="tag">Eine Zeichenfolge, die <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> enthält.</param>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.#ctor(System.String,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />-Klasse.</summary>
      <param name="tag">Eine Zeichenfolge, die eine <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />-Klasse enthält.</param>
      <param name="isWeak">Ein Wert, der angibt, ob dieser Entitätstagheader ein schwaches Validierungssteuerelement ist. Wenn der Entitätstagheader ein schwaches Validierungssteuerelement ist, sollte <paramref name="isWeak" /> auf <see langword="true" /> festgelegt werden. Wenn der Entitätstagheader ein starkes Validierungssteuerelement ist, sollte <paramref name="isWeak" /> auf <see langword="false" /> festgelegt werden.</param>
    </member>
    <member name="P:System.Net.Http.Headers.EntityTagHeaderValue.Any">
      <summary>Ruft den Entitätstagheaderwert ab.</summary>
      <returns>Gibt <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> zurück.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.Equals(System.Object)">
      <summary>Bestimmt, ob das angegebene <see cref="T:System.Object" /> und das aktuelle <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />-Objekt gleich sind.</summary>
      <param name="obj">Das Objekt, das mit dem aktuellen Objekt verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn das angegebene <see cref="T:System.Object" /> gleich dem aktuellen Objekt ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.GetHashCode">
      <summary>Dient als Hashfunktion für ein <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />-Objekt.</summary>
      <returns>Ein Hashcode für das aktuelle Objekt.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.EntityTagHeaderValue.IsWeak">
      <summary>Ruft ab, ob dem Entitätstag ein Schwächenindikator vorangestellt ist.</summary>
      <returns>
        <see langword="true" />, wenn dem Entitätstag ein Schwächenindikator vorangestellt ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.Parse(System.String)">
      <summary>Konvertiert eine Zeichenfolge in eine <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />-Instanz.</summary>
      <param name="input">Eine Zeichenfolge, die Entitätstag-Headerwertinformationen darstellt.</param>
      <returns>Eine <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />-Instanz.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ist ein <see langword="null" />-Verweis.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> ist keine gültige Entitätstag-Headerwertinformation.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.System#ICloneable#Clone">
      <summary>Erstellt ein neues Objekt, das eine Kopie der aktuellen <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />-Instanz ist.</summary>
      <returns>Eine Kopie der aktuellen Instanz.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.EntityTagHeaderValue.Tag">
      <summary>Ruft die undurchsichtige Zeichenfolge in Anführungszeichen ab.</summary>
      <returns>Eine undurchsichtige Zeichenfolge in Anführungszeichen.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.ToString">
      <summary>Gibt eine Zeichenfolge zurück, die das aktuelle <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> -Objekt darstellt.</summary>
      <returns>Eine Zeichenfolge, die das aktuelle Objekt darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.TryParse(System.String,System.Net.Http.Headers.EntityTagHeaderValue@)">
      <summary>Bestimmt, ob eine Zeichenfolge eine gültige <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />-Information ist.</summary>
      <param name="input">Die zu überprüfende Zeichenfolge.</param>
      <param name="parsedValue">Die <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />-Version der Zeichenfolge.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="input" /> eine gültige <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />-Information ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpContentHeaders">
      <summary>Stellt die Auflistung der Inhaltsheader (gemäß Definition in RFC 2616) dar.</summary>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.Allow">
      <summary>Ruft den Wert des <see langword="Allow" />-Inhaltsheaders in einer HTTP-Antwort ab.</summary>
      <returns>Der Wert des <see langword="Allow" />-Headers in einer HTTP-Antwort.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentDisposition">
      <summary>Ruft den Wert des <see langword="Content-Disposition" />-Inhaltsheaders in einer HTTP-Antwort ab.</summary>
      <returns>Der Wert des <see langword="Content-Disposition" />-Inhaltsheaders in einer HTTP-Antwort.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentEncoding">
      <summary>Ruft den Wert des <see langword="Content-Encoding" />-Inhaltsheaders in einer HTTP-Antwort ab.</summary>
      <returns>Der Wert des <see langword="Content-Encoding" />-Inhaltsheaders in einer HTTP-Antwort.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentLanguage">
      <summary>Ruft den Wert des <see langword="Content-Language" />-Inhaltsheaders in einer HTTP-Antwort ab.</summary>
      <returns>Der Wert des <see langword="Content-Language" />-Inhaltsheaders in einer HTTP-Antwort.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentLength">
      <summary>Ruft den Wert des <see langword="Content-Length" />-Inhaltsheaders in einer HTTP-Antwort ab oder legt ihn fest.</summary>
      <returns>Der Wert des <see langword="Content-Length" />-Inhaltsheaders in einer HTTP-Antwort.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentLocation">
      <summary>Ruft den Wert des <see langword="Content-Location" />-Inhaltsheaders in einer HTTP-Antwort ab oder legt ihn fest.</summary>
      <returns>Der Wert des <see langword="Content-Location" />-Inhaltsheaders in einer HTTP-Antwort.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentMD5">
      <summary>Ruft den Wert des <see langword="Content-MD5" />-Inhaltsheaders in einer HTTP-Antwort ab oder legt ihn fest.</summary>
      <returns>Der Wert des <see langword="Content-MD5" />-Inhaltsheaders in einer HTTP-Antwort.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentRange">
      <summary>Ruft den Wert des <see langword="Content-Range" />-Inhaltsheaders in einer HTTP-Antwort ab oder legt ihn fest.</summary>
      <returns>Der Wert des <see langword="Content-Range" />-Inhaltsheaders in einer HTTP-Antwort.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentType">
      <summary>Ruft den Wert des <see langword="Content-Type" />-Inhaltsheaders in einer HTTP-Antwort ab oder legt ihn fest.</summary>
      <returns>Der Wert des <see langword="Content-Type" />-Inhaltsheaders in einer HTTP-Antwort.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.Expires">
      <summary>Ruft den Wert des <see langword="Expires" />-Inhaltsheaders in einer HTTP-Antwort ab oder legt ihn fest.</summary>
      <returns>Der Wert des <see langword="Expires" />-Inhaltsheaders in einer HTTP-Antwort.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.LastModified">
      <summary>Ruft den Wert des <see langword="Last-Modified" />-Inhaltsheaders in einer HTTP-Antwort ab oder legt ihn fest.</summary>
      <returns>Der Wert des <see langword="Last-Modified" />-Inhaltsheaders in einer HTTP-Antwort.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpHeaders">
      <summary>Eine Sammlung von Headern und deren Werten, wie in RFC 2616 definiert.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.HttpHeaders" />-Klasse.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Add(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Fügt den angegebenen Header und seine Werte in die <see cref="T:System.Net.Http.Headers.HttpHeaders" />-Sammlung hinzu.</summary>
      <param name="name">Der Header, der der Auflistung hinzugefügt werden soll.</param>
      <param name="values">Eine Liste von Headerwerten, die der Sammlung hinzugefügt werden sollen.</param>
      <exception cref="T:System.ArgumentException">Der Name darf nicht NULL oder leer sein.</exception>
      <exception cref="T:System.ArgumentNullException">Die Werte dürfen nicht NULL oder leer sein.</exception>
      <exception cref="T:System.InvalidOperationException">Falsch verwendeter Headername. Stellen Sie sicher, dass Anforderungsheader mit HttpRequestMessage-, Antwortheader mit HttpResponseMessage- und Inhaltsheader mit HttpContent-Objekten verwendet werden.</exception>
      <exception cref="T:System.FormatException">Das Namensformat des Headers ist ungültig.

oder -

Auf ein Neue-Zeile-Zeichen in Headerwerten muss ein Leerzeichen folgen.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Add(System.String,System.String)">
      <summary>Fügt den angegebenen Header und den Wert in die <see cref="T:System.Net.Http.Headers.HttpHeaders" />-Sammlung hinzu.</summary>
      <param name="name">Der Header, der der Auflistung hinzugefügt werden soll.</param>
      <param name="value">Der Inhalt des Headers.</param>
      <exception cref="T:System.ArgumentException">Der Name darf nicht NULL oder leer sein.</exception>
      <exception cref="T:System.InvalidOperationException">Falsch verwendeter Headername. Stellen Sie sicher, dass Anforderungsheader mit HttpRequestMessage-, Antwortheader mit HttpResponseMessage- und Inhaltsheader mit HttpContent-Objekten verwendet werden.</exception>
      <exception cref="T:System.FormatException">Das Namensformat des Headers ist ungültig.

oder -

Auf ein Neue-Zeile-Zeichen in Headerwerten muss ein Leerzeichen folgen.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Clear">
      <summary>Entfernt alle Header aus der <see cref="T:System.Net.Http.Headers.HttpHeaders" />-Auflistung.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Contains(System.String)">
      <summary>Gibt Informationen dazu zurück, ob ein bestimmter Header in der <see cref="T:System.Net.Http.Headers.HttpHeaders" />-Sammlung vorhanden ist.</summary>
      <param name="name">Der angegebene Header.</param>
      <returns>
        <see langword="true" />, wenn der angegebene Header in der Sammlung vorhanden ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der die <see cref="T:System.Net.Http.Headers.HttpHeaders" /> -Instanz durchlaufen kann.</summary>
      <returns>Ein Enumerator für <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.GetValues(System.String)">
      <summary>Gibt alle Headerwerte für einen angegebenen Header zurück, der in der <see cref="T:System.Net.Http.Headers.HttpHeaders" />-Sammlung gespeichert ist.</summary>
      <param name="name">Der angegebene Header, für den Werte zurückgegeben werden sollen.</param>
      <returns>Ein Array von Headerzeichenfolgen.</returns>
      <exception cref="T:System.InvalidOperationException">Der Header wurde nicht gefunden.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Remove(System.String)">
      <summary>Entfernt den angegebenen Header aus der <see cref="T:System.Net.Http.Headers.HttpHeaders" />-Auflistung.</summary>
      <param name="name">Der Name des Headers, der aus der Auflistung entfernt werden soll.</param>
      <returns>Gibt <see cref="T:System.Boolean" /> zurück.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.System#Collections#IEnumerable#GetEnumerator">
      <summary>Ruft einen Enumerator ab, der eine <see cref="T:System.Net.Http.Headers.HttpHeaders" /> durchlaufen kann.</summary>
      <returns>Eine Instanz einer Implementierung einer <see cref="T:System.Collections.IEnumerator" />, die eine <see cref="T:System.Net.Http.Headers.HttpHeaders" /> durchlaufen kann.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.ToString">
      <summary>Gibt eine Zeichenfolge zurück, die das aktuelle <see cref="T:System.Net.Http.Headers.HttpHeaders" />-Objekt darstellt.</summary>
      <returns>Eine Zeichenfolge, die das aktuelle Objekt darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Gibt einen Wert zurück, der anzeigt, ob der angegebene Header und seine Werte der <see cref="T:System.Net.Http.Headers.HttpHeaders" />-Sammlung ohne Überprüfung der bereitgestellten Informationen hinzugefügt wurden.</summary>
      <param name="name">Der Header, der der Auflistung hinzugefügt werden soll.</param>
      <param name="values">Die Werte des Headers.</param>
      <returns>
        <see langword="true" />, wenn der angegebene Header <paramref name="name" /> und <paramref name="values" /> der Sammlung hinzugefügt werden konnten; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.String)">
      <summary>Gibt einen Wert zurück, der anzeigt, ob der angegebene Header und sein Wert der <see cref="T:System.Net.Http.Headers.HttpHeaders" />-Sammlung ohne Überprüfung der bereitgestellten Informationen hinzugefügt wurden.</summary>
      <param name="name">Der Header, der der Auflistung hinzugefügt werden soll.</param>
      <param name="value">Der Inhalt des Headers.</param>
      <returns>
        <see langword="true" />, wenn der angegebene Header <paramref name="name" /> und <paramref name="value" /> der Sammlung hinzugefügt werden konnten; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.TryGetValues(System.String,System.Collections.Generic.IEnumerable{System.String}@)">
      <summary>Zurückgeben, wenn ein angegebener Header und angegebene Werte in der <see cref="T:System.Net.Http.Headers.HttpHeaders" />-Sammlung gespeichert sind.</summary>
      <param name="name">Der angegebene Header.</param>
      <param name="values">Die angegebenen Headerwerte.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="name" /> und <see langword="values" /> des angegebenen Headers in der Sammlung gespeichert sind; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpHeaderValueCollection`1">
      <summary>Stellt eine Auflistung von Headerwerten dar.</summary>
      <typeparam name="T">Der Headerauflistungs-Typ.</typeparam>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Add(`0)">
      <summary>Fügt der <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> einen Eintrag hinzu.</summary>
      <param name="item">Das Element, das der Headerauflistung hinzugefügt werden soll.</param>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Clear">
      <summary>Entfernt alle Einträge aus dem <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Contains(`0)">
      <summary>Bestimmt, ob die <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> ein Element enthält.</summary>
      <param name="item">Das Element, das in der Sammlung gesucht werden soll.</param>
      <returns>
        <see langword="true" />, wenn der Eintrag in der <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />-Instanz enthalten ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.CopyTo(`0[],System.Int32)">
      <summary>Kopiert die gesamte <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />-Instanz in ein kompatibles eindimensionales <see cref="T:System.Array" />, beginnend am angegebenen Index des Zielarrays.</summary>
      <param name="array">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus der <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> kopierten Elemente ist. Für das <see cref="T:System.Array" /> muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="arrayIndex">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</param>
    </member>
    <member name="P:System.Net.Http.Headers.HttpHeaderValueCollection`1.Count">
      <summary>Ruft die Anzahl der Header in der <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> ab.</summary>
      <returns>Die Anzahl der Header in einer Sammlung.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der die <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> durchläuft.</summary>
      <returns>Ein Enumerator für die <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />-Instanz.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpHeaderValueCollection`1.IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob die <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />-Instanz schreibgeschützt ist.</summary>
      <returns>
        <see langword="true" />, wenn die <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />-Instanz schreibgeschützt ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.ParseAdd(System.String)">
      <summary>Analysiert und fügt einen Eintrag <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> hinzu.</summary>
      <param name="input">Der hinzuzufügende Eintrag</param>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Remove(`0)">
      <summary>Entfernt das angegebene Element aus der <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</summary>
      <param name="item">Das zu entfernende Element.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="item" /> aus der <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />-Instanz entfernt wurde; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der die <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> durchläuft.</summary>
      <returns>Ein Enumerator für die <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />-Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.ToString">
      <summary>Gibt eine Zeichenfolge zurück, die das aktuelle <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />-Objekt darstellt. -Objekts.</summary>
      <returns>Eine Zeichenfolge, die das aktuelle Objekt darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.TryParseAdd(System.String)">
      <summary>Bestimmt, ob die Eingabe analysiert und der <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> hinzugefügt werden kann.</summary>
      <param name="input">Der zu überprüfende Eintrag.</param>
      <returns>
        <see langword="true" />, wenn die <paramref name="input" /> analysiert und der <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />-Instanz hinzugefügt werden kann; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpRequestHeaders">
      <summary>Stellt die Auflistung von Anforderungsheadern dar, wie in RFC 2616 definiert.</summary>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Accept">
      <summary>Ruft den Wert des <see langword="Accept" />-Headers für eine HTTP-Anforderung ab.</summary>
      <returns>Der Wert des <see langword="Accept" />-Headers für eine HTTP-Anforderung.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.AcceptCharset">
      <summary>Ruft den Wert des <see langword="Accept-Charset" /> -Headers für eine HTTP-Anforderung ab.</summary>
      <returns>Der Wert des <see langword="Accept-Charset" />-Headers für eine HTTP-Anforderung.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.AcceptEncoding">
      <summary>Ruft den Wert des <see langword="Accept-Encoding" /> -Headers für eine HTTP-Anforderung ab.</summary>
      <returns>Der Wert des <see langword="Accept-Encoding" />-Headers für eine HTTP-Anforderung.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.AcceptLanguage">
      <summary>Ruft den Wert des <see langword="Accept-Language" /> -Headers für eine HTTP-Anforderung ab.</summary>
      <returns>Der Wert des <see langword="Accept-Language" />-Headers für eine HTTP-Anforderung.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Authorization">
      <summary>Ruft den Wert des <see langword="Authorization" /> -Headers für eine HTTP-Anforderung ab oder legt ihn fest.</summary>
      <returns>Der Wert des <see langword="Authorization" />-Headers für eine HTTP-Anforderung.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.CacheControl">
      <summary>Ruft den Wert des <see langword="Cache-Control" /> -Headers für eine HTTP-Anforderung ab oder legt ihn fest.</summary>
      <returns>Der Wert des <see langword="Cache-Control" /> -Headers für eine HTTP-Anforderung.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Connection">
      <summary>Ruft den Wert des <see langword="Connection" /> -Headers für eine HTTP-Anforderung ab.</summary>
      <returns>Der Wert des <see langword="Connection" />-Headers für eine HTTP-Anforderung.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.ConnectionClose">
      <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob der <see langword="Connection" />-Header für eine HTTP-Anforderung "Close" enthält.</summary>
      <returns>
        <see langword="true" />, wenn der <see langword="Connection" />-Header "Schließen" enthält; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Date">
      <summary>Übernimmt oder bestimmt den Wert des <see langword="Date" />-Headers für eine HTTP-Anfrage.</summary>
      <returns>Der Wert des <see langword="Date" /> -Headers für eine HTTP-Anforderung.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Expect">
      <summary>Ruft den Wert des <see langword="Expect" /> -Headers für eine HTTP-Anforderung ab.</summary>
      <returns>Der Wert des <see langword="Expect" /> -Headers für eine HTTP-Anforderung.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.ExpectContinue">
      <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob der <see langword="Expect" />-Header für eine HTTP-Anforderung "Continue" enthält.</summary>
      <returns>
        <see langword="true" />, wenn der <see langword="Expect" />-Header "Fortfahren" enthält; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.From">
      <summary>Ruft den Wert des <see langword="From" /> -Headers für eine HTTP-Anforderung ab oder legt ihn fest.</summary>
      <returns>Der Wert des <see langword="From" />-Headers für eine HTTP-Anforderung.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Host">
      <summary>Ruft den Wert des <see langword="Host" /> -Headers für eine HTTP-Anforderung ab oder legt ihn fest.</summary>
      <returns>Der Wert des <see langword="Host" /> -Headers für eine HTTP-Anforderung.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfMatch">
      <summary>Ruft den Wert des <see langword="If-Match" />-Headers für eine HTTP-Anforderung ab.</summary>
      <returns>Gibt <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> zurück.  
Der Wert des <see langword="If-Match" />-Headers für eine HTTP-Anforderung.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfModifiedSince">
      <summary>Ruft den Wert des <see langword="If-Modified-Since" /> -Headers für eine HTTP-Anforderung ab oder legt ihn fest.</summary>
      <returns>Der Wert des <see langword="If-Modified-Since" /> -Headers für eine HTTP-Anforderung.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfNoneMatch">
      <summary>Ruft den Wert des <see langword="If-None-Match" />-Headers für eine HTTP-Anforderung ab.</summary>
      <returns>Ruft den Wert des <see langword="If-None-Match" />-Headers für eine HTTP-Anforderung ab.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfRange">
      <summary>Ruft den Wert des <see langword="If-Range" /> -Headers für eine HTTP-Anforderung ab oder legt ihn fest.</summary>
      <returns>Der Wert des <see langword="If-Range" />-Headers für eine HTTP-Anforderung.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfUnmodifiedSince">
      <summary>Ruft den Wert des <see langword="If-Unmodified-Since" /> -Headers für eine HTTP-Anforderung ab oder legt ihn fest.</summary>
      <returns>Der Wert des <see langword="If-Unmodified-Since" />-Headers für eine HTTP-Anforderung.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.MaxForwards">
      <summary>Ruft den Wert des <see langword="Max-Forwards" /> -Headers für eine HTTP-Anforderung ab oder legt ihn fest.</summary>
      <returns>Der Wert des <see langword="Max-Forwards" /> -Headers für eine HTTP-Anforderung.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Pragma">
      <summary>Ruft den Wert des <see langword="Pragma" /> -Headers für eine HTTP-Anforderung ab.</summary>
      <returns>Der Wert des <see langword="Pragma" />-Headers für eine HTTP-Anforderung.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.ProxyAuthorization">
      <summary>Ruft den Wert des <see langword="Proxy-Authorization" /> -Headers für eine HTTP-Anforderung ab oder legt ihn fest.</summary>
      <returns>Der Wert des <see langword="Proxy-Authorization" />-Headers für eine HTTP-Anforderung.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Range">
      <summary>Ruft den Wert des <see langword="Range" /> -Headers für eine HTTP-Anforderung ab oder legt ihn fest.</summary>
      <returns>Der Wert des <see langword="Range" />-Headers für eine HTTP-Anforderung.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Referrer">
      <summary>Ruft den Wert des <see langword="Referer" /> -Headers für eine HTTP-Anforderung ab oder legt ihn fest.</summary>
      <returns>Der Wert des <see langword="Referer" /> -Headers für eine HTTP-Anforderung.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.TE">
      <summary>Ruft den Wert des <see langword="TE" /> -Headers für eine HTTP-Anforderung ab.</summary>
      <returns>Der Wert des <see langword="TE" />-Headers für eine HTTP-Anforderung.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Trailer">
      <summary>Ruft den Wert des <see langword="Trailer" /> -Headers für eine HTTP-Anforderung ab.</summary>
      <returns>Der Wert des <see langword="Trailer" />-Headers für eine HTTP-Anforderung.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.TransferEncoding">
      <summary>Ruft den Wert des <see langword="Transfer-Encoding" /> -Headers für eine HTTP-Anforderung ab.</summary>
      <returns>Der Wert des <see langword="Transfer-Encoding" />-Headers für eine HTTP-Anforderung.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.TransferEncodingChunked">
      <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob der <see langword="Transfer-Encoding" />-Header für eine HTTP-Anforderung "Chunked" enthält.</summary>
      <returns>
        <see langword="true" /> , wenn der <see langword="Transfer-Encoding" /> -Header Datensegmente enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Upgrade">
      <summary>Ruft den Wert des <see langword="Upgrade" />-Headers für eine HTTP-Anforderung ab.</summary>
      <returns>Der Wert des <see langword="Upgrade" />-Headers für eine HTTP-Anforderung.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.UserAgent">
      <summary>Ruft den Wert des <see langword="User-Agent" /> -Headers für eine HTTP-Anforderung ab.</summary>
      <returns>Der Wert des <see langword="User-Agent" />-Headers für eine HTTP-Anforderung.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Via">
      <summary>Ruft den Wert des <see langword="Via" /> -Headers für eine HTTP-Anforderung ab.</summary>
      <returns>Der Wert des <see langword="Via" />-Headers für eine HTTP-Anforderung.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Warning">
      <summary>Ruft den Wert des <see langword="Warning" /> -Headers für eine HTTP-Anforderung ab.</summary>
      <returns>Der Wert des <see langword="Warning" />-Headers für eine HTTP-Anforderung.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpResponseHeaders">
      <summary>Stellt die Auflistung von Antwortheadern dar, wie in RFC 2616 definiert.</summary>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.AcceptRanges">
      <summary>Ruft den Wert des <see langword="Accept-Ranges" />-Headers für eine HTTP-Antwort ab.</summary>
      <returns>Der Wert des <see langword="Accept-Ranges" />-Headers für eine HTTP-Antwort.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Age">
      <summary>Übernimmt oder bestimmt den Wert des <see langword="Age" />-Headers für eine HTTP-Antwort.</summary>
      <returns>Der Wert des <see langword="Age" />-Headers für eine HTTP-Antwort.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.CacheControl">
      <summary>Übernimmt oder bestimmt den Wert des <see langword="Cache-Control" />-Headers für eine HTTP-Antwort.</summary>
      <returns>Der Wert des <see langword="Cache-Control" />-Headers für eine HTTP-Antwort.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Connection">
      <summary>Ruft den Wert des <see langword="Connection" />-Headers für eine HTTP-Antwort ab.</summary>
      <returns>Der Wert des <see langword="Connection" /> -Headers für eine HTTP-Antwort.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.ConnectionClose">
      <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob der <see langword="Connection" />-Header für eine HTTP-Antwort "Close" enthält.</summary>
      <returns>
        <see langword="true" /> , wenn der <see langword="Connection" /> -Header „Close“ enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Date">
      <summary>Ruft den Wert des <see langword="Date" /> -Headers für eine HTTP-Antwort ab oder legt ihn fest.</summary>
      <returns>Der Wert des <see langword="Date" />-Headers für eine HTTP-Antwort.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.ETag">
      <summary>Übernimmt oder bestimmt den Wert des <see langword="ETag" />-Headers für eine HTTP-Antwort.</summary>
      <returns>Der Wert des <see langword="ETag" />-Headers für eine HTTP-Antwort.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Location">
      <summary>Übernimmt oder bestimmt den Wert des <see langword="Location" />-Headers für eine HTTP-Antwort.</summary>
      <returns>Der Wert des <see langword="Location" />-Headers für eine HTTP-Antwort.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Pragma">
      <summary>Ruft den Wert des <see langword="Pragma" />-Headers für eine HTTP-Antwort ab.</summary>
      <returns>Gibt <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> zurück.  
Der Wert des <see langword="Pragma" />-Headers für eine HTTP-Antwort.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.ProxyAuthenticate">
      <summary>Ruft den Wert des <see langword="Proxy-Authenticate" />-Headers für eine HTTP-Antwort ab.</summary>
      <returns>Der Wert des <see langword="Proxy-Authenticate" />-Headers für eine HTTP-Antwort.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.RetryAfter">
      <summary>Übernimmt oder bestimmt den Wert des <see langword="Retry-After" />-Headers für eine HTTP-Antwort.</summary>
      <returns>Der Wert des <see langword="Retry-After" />-Headers für eine HTTP-Antwort.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Server">
      <summary>Ruft den Wert des <see langword="Server" />-Headers für eine HTTP-Antwort ab.</summary>
      <returns>Der Wert des <see langword="Server" /> -Headers für eine HTTP-Antwort.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Trailer">
      <summary>Ruft den Wert des <see langword="Trailer" />-Headers für eine HTTP-Antwort ab.</summary>
      <returns>Der Wert des <see langword="Trailer" /> -Headers für eine HTTP-Antwort.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.TransferEncoding">
      <summary>Ruft den Wert des <see langword="Transfer-Encoding" />-Headers für eine HTTP-Antwort ab.</summary>
      <returns>Der Wert des <see langword="Transfer-Encoding" />-Headers für eine HTTP-Antwort.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.TransferEncodingChunked">
      <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob der <see langword="Transfer-Encoding" />-Header für eine HTTP-Antwort "Chunked" enthält.</summary>
      <returns>
        <see langword="true" />, wenn der <see langword="Transfer-Encoding" />-Header segmentierte Elemente enthält; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Upgrade">
      <summary>Ruft den Wert des <see langword="Upgrade" />-Headers für eine HTTP-Antwort ab.</summary>
      <returns>Der Wert des <see langword="Upgrade" /> -Headers für eine HTTP-Antwort.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Vary">
      <summary>Ruft den Wert des <see langword="Vary" />-Headers für eine HTTP-Antwort ab.</summary>
      <returns>Der Wert des <see langword="Vary" /> -Headers für eine HTTP-Antwort.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Via">
      <summary>Ruft den Wert des <see langword="Via" />-Headers für eine HTTP-Antwort ab.</summary>
      <returns>Der Wert des <see langword="Via" /> -Headers für eine HTTP-Antwort.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Warning">
      <summary>Ruft den Wert des <see langword="Warning" />-Headers für eine HTTP-Antwort ab.</summary>
      <returns>Der Wert des <see langword="Warning" /> -Headers für eine HTTP-Antwort.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.WwwAuthenticate">
      <summary>Ruft den Wert des <see langword="WWW-Authenticate" />-Headers für eine HTTP-Antwort ab.</summary>
      <returns>Der Wert des <see langword="WWW-Authenticate" />-Headers für eine HTTP-Antwort.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.MediaTypeHeaderValue">
      <summary>Stellt einen Medientyp dar, der in einem Inhaltstypheader verwendet wird, wie im RFC 2616 definiert.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />-Klasse.</summary>
      <param name="source">Ein <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> Objekt, das zur Initialisierung der neuen Instanz verwendet wird.</param>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />-Klasse.</summary>
      <param name="mediaType">Die Quelle, die als Zeichenfolge dargestellt wird, um die neue Instanz zu initialisieren.</param>
    </member>
    <member name="P:System.Net.Http.Headers.MediaTypeHeaderValue.CharSet">
      <summary>Ruft den Zeichensatz ab oder legt diesen fest.</summary>
      <returns>Der Zeichensatz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.Equals(System.Object)">
      <summary>Bestimmt, ob das angegebene <see cref="T:System.Object" /> und das aktuelle <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />-Objekt gleich sind.</summary>
      <param name="obj">Das Objekt, das mit dem aktuellen Objekt verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn das angegebene <see cref="T:System.Object" /> gleich dem aktuellen Objekt ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.GetHashCode">
      <summary>Dient als Hashfunktion für ein <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />-Objekt.</summary>
      <returns>Ein Hashcode für das aktuelle Objekt.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.MediaTypeHeaderValue.MediaType">
      <summary>Ruft den Medientyp-Headerwert ab oder legt ihn fest.</summary>
      <returns>Der Medientyp-Headerwert.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.MediaTypeHeaderValue.Parameters">
      <summary>Ruft die Medientyp-Headerwert-Parameter ab bzw. legt sie fest.</summary>
      <returns>Die Medientyp-Headerwert-Parameter.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.Parse(System.String)">
      <summary>Konvertiert eine Zeichenfolge in eine <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />-Instanz.</summary>
      <param name="input">Eine Zeichenfolge, die Medientyp-Headerwertinformationen darstellt.</param>
      <returns>Eine <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />-Instanz.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ist ein <see langword="null" /> -Verweis.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> ist keine gültige Medientyp-Headerwertinformation.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.System#ICloneable#Clone">
      <summary>Erstellt ein neues Objekt, das eine Kopie der aktuellen <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />-Instanz ist.</summary>
      <returns>Eine Kopie der aktuellen Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.ToString">
      <summary>Gibt eine Zeichenfolge zurück, die das aktuelle <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />-Objekt darstellt.</summary>
      <returns>Eine Zeichenfolge, die das aktuelle Objekt darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.TryParse(System.String,System.Net.Http.Headers.MediaTypeHeaderValue@)">
      <summary>Bestimmt, ob eine Zeichenfolge eine gültige <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />-Information ist.</summary>
      <param name="input">Die zu überprüfende Zeichenfolge.</param>
      <param name="parsedValue">Die <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />-Version der Zeichenfolge.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="input" /> eine gültige <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />-Information ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue">
      <summary>Stellt einen Medientyp mit einem zusätzlichen Qualitätsfaktor dar, der in einem Inhaltstypheader verwendet wird.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />-Klasse.</summary>
      <param name="mediaType">
        <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> dargestellt als Zeichenfolge, um die neue Instanz zu initialisieren.</param>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor(System.String,System.Double)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />-Klasse.</summary>
      <param name="mediaType">
        <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> dargestellt als Zeichenfolge, um die neue Instanz zu initialisieren.</param>
      <param name="quality">Die Qualität dieses zugeordneten Headerwert.</param>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse(System.String)">
      <summary>Konvertiert eine Zeichenfolge in eine <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />-Instanz.</summary>
      <param name="input">Eine Zeichenfolge, die den Medientyp mit Qualitätsheaderwert-Informationen darstellt.</param>
      <returns>Eine <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />-Instanz.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ist ein <see langword="null" /> -Verweis.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> ist kein gültiger Medientyp mit Qualitätsheaderwert-Informationen.</exception>
    </member>
    <member name="P:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Quality">
      <summary>Ruft den Qualitätswert für den <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> ab oder legt ihn fest.</summary>
      <returns>Der Qualitätswert für das <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />-Objekt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.System#ICloneable#Clone">
      <summary>Erstellt ein neues Objekt, das eine Kopie der aktuellen <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />-Instanz ist.</summary>
      <returns>Eine Kopie der aktuellen Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.MediaTypeWithQualityHeaderValue@)">
      <summary>Bestimmt, ob eine Zeichenfolge eine gültige <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />-Information ist.</summary>
      <param name="input">Die zu überprüfende Zeichenfolge.</param>
      <param name="parsedValue">Die <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />-Version der Zeichenfolge.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="input" /> eine gültige <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />-Information ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.NameValueHeaderValue">
      <summary>Stellt ein Name-Wert-Paar dar, das in verschiedenen Headern verwendet wird, die in RFC 2616 definiert sind.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.Net.Http.Headers.NameValueHeaderValue)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />-Klasse.</summary>
      <param name="source">Ein <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> Objekt, das zur Initialisierung der neuen Instanz verwendet wird.</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />-Klasse.</summary>
      <param name="name">Der Headername.</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />-Klasse.</summary>
      <param name="name">Der Headername.</param>
      <param name="value">Der Headerwert.</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.Equals(System.Object)">
      <summary>Bestimmt, ob das angegebene <see cref="T:System.Object" /> und das aktuelle <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />-Objekt gleich sind.</summary>
      <param name="obj">Das Objekt, das mit dem aktuellen Objekt verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn das angegebene <see cref="T:System.Object" /> gleich dem aktuellen Objekt ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.GetHashCode">
      <summary>Dient als Hashfunktion für ein <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />-Objekt.</summary>
      <returns>Ein Hashcode für das aktuelle Objekt.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.NameValueHeaderValue.Name">
      <summary>Ruft den Headernamen ab.</summary>
      <returns>Der Headername.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.Parse(System.String)">
      <summary>Konvertiert eine Zeichenfolge in eine <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />-Instanz.</summary>
      <param name="input">Eine Zeichenfolge, die Namenswert-Headerwertinformationen darstellt.</param>
      <returns>Eine <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />-Instanz.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ist ein <see langword="null" />-Verweis.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> ist keine gültige Namenswert-Headerwertinformation.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.System#ICloneable#Clone">
      <summary>Erstellt ein neues Objekt, das eine Kopie der aktuellen <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />-Instanz ist.</summary>
      <returns>Eine Kopie der aktuellen Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.ToString">
      <summary>Gibt eine Zeichenfolge zurück, die das aktuelle <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />-Objekt darstellt.</summary>
      <returns>Eine Zeichenfolge, die das aktuelle Objekt darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.TryParse(System.String,System.Net.Http.Headers.NameValueHeaderValue@)">
      <summary>Bestimmt, ob eine Zeichenfolge eine gültige <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />-Information ist.</summary>
      <param name="input">Die zu überprüfende Zeichenfolge.</param>
      <param name="parsedValue">Die <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />-Version der Zeichenfolge.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="input" /> eine gültige <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />-Information ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.NameValueHeaderValue.Value">
      <summary>Ruft den Headerwert ab.</summary>
      <returns>Der Headerwert.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue">
      <summary>Stellt ein Name-Wert-Paar mit Parametern dar, das in verschiedenen Headern verwendet wird, wie in RFC 2616 definiert.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.Net.Http.Headers.NameValueWithParametersHeaderValue)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />-Klasse.</summary>
      <param name="source">Ein <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> Objekt, das zur Initialisierung der neuen Instanz verwendet wird.</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />-Klasse.</summary>
      <param name="name">Der Headername.</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />-Klasse.</summary>
      <param name="name">Der Headername.</param>
      <param name="value">Der Headerwert.</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Equals(System.Object)">
      <summary>Bestimmt, ob das angegebene <see cref="T:System.Object" /> und das aktuelle <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />-Objekt gleich sind.</summary>
      <param name="obj">Das Objekt, das mit dem aktuellen Objekt verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn das angegebene <see cref="T:System.Object" /> gleich dem aktuellen Objekt ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.GetHashCode">
      <summary>Dient als Hashfunktion für ein <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />-Objekt.</summary>
      <returns>Ein Hashcode für das aktuelle Objekt.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Parameters">
      <summary>Ruft die Parameter aus dem <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />-Objekt ab.</summary>
      <returns>Eine Sammlung, die die Parameter enthält.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Parse(System.String)">
      <summary>Konvertiert eine Zeichenfolge in eine <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />-Instanz.</summary>
      <param name="input">Eine Zeichenfolge, die den Namenswert mit Parameterheaderwert-Informationen darstellt.</param>
      <returns>Eine <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />-Instanz.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ist ein <see langword="null" />-Verweis.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> ist kein gültiger Namenswert mit Parameterheaderwert-Informationen.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.System#ICloneable#Clone">
      <summary>Erstellt ein neues Objekt, das eine Kopie der aktuellen <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />-Instanz ist.</summary>
      <returns>Eine Kopie der aktuellen Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.ToString">
      <summary>Gibt eine Zeichenfolge zurück, die das aktuelle <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />-Objekt darstellt.</summary>
      <returns>Eine Zeichenfolge, die das aktuelle Objekt darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.TryParse(System.String,System.Net.Http.Headers.NameValueWithParametersHeaderValue@)">
      <summary>Bestimmt, ob eine Zeichenfolge eine gültige <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />-Information ist.</summary>
      <param name="input">Die zu überprüfende Zeichenfolge.</param>
      <param name="parsedValue">Die <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />-Version der Zeichenfolge.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="input" /> eine gültige <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />-Information ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ProductHeaderValue">
      <summary>Stellt einen Produkttokenwert in einem User-Agent-Header dar.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />-Klasse.</summary>
      <param name="name">Der Produktname.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />-Klasse.</summary>
      <param name="name">Der Produktnamenswert.</param>
      <param name="version">Die Produktversionswert.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.Equals(System.Object)">
      <summary>Bestimmt, ob das angegebene <see cref="T:System.Object" /> und das aktuelle <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />-Objekt gleich sind.</summary>
      <param name="obj">Das Objekt, das mit dem aktuellen Objekt verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn das angegebene <see cref="T:System.Object" /> gleich dem aktuellen Objekt ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.GetHashCode">
      <summary>Dient als Hashfunktion für ein <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />-Objekt.</summary>
      <returns>Ein Hashcode für das aktuelle Objekt.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ProductHeaderValue.Name">
      <summary>Ruft den Namen des Produkttokens ab.</summary>
      <returns>Den Name des Produkttokens.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.Parse(System.String)">
      <summary>Konvertiert eine Zeichenfolge in eine <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />-Instanz.</summary>
      <param name="input">Eine Zeichenfolge, die Produkt-Headerwertinformationen darstellt.</param>
      <returns>Eine <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />-Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.System#ICloneable#Clone">
      <summary>Erstellt ein neues Objekt, das eine Kopie der aktuellen <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />-Instanz ist.</summary>
      <returns>Eine Kopie der aktuellen Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.ToString">
      <summary>Gibt eine Zeichenfolge zurück, die das aktuelle <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />-Objekt darstellt.</summary>
      <returns>Eine Zeichenfolge, die das aktuelle Objekt darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.TryParse(System.String,System.Net.Http.Headers.ProductHeaderValue@)">
      <summary>Bestimmt, ob eine Zeichenfolge eine gültige <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />-Information ist.</summary>
      <param name="input">Die zu überprüfende Zeichenfolge.</param>
      <param name="parsedValue">Die <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />-Version der Zeichenfolge.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="input" /> eine gültige <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />-Information ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ProductHeaderValue.Version">
      <summary>Ruft die Version des Produkttokens ab.</summary>
      <returns>Die Version des Produkttokens.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ProductInfoHeaderValue">
      <summary>Stellt einen Wert dar, der entweder ein Produkt oder ein Kommentar in einem Benutzer-Agent-Header sein kann.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.Net.Http.Headers.ProductHeaderValue)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />-Klasse.</summary>
      <param name="product">Ein <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> Objekt, das zur Initialisierung der neuen Instanz verwendet wird.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />-Klasse.</summary>
      <param name="comment">Ein Kommentarwert.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />-Klasse.</summary>
      <param name="productName">Der Produktnamenswert.</param>
      <param name="productVersion">Die Produktversionswert.</param>
    </member>
    <member name="P:System.Net.Http.Headers.ProductInfoHeaderValue.Comment">
      <summary>Ruft den Kommentar aus dem <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />-Objekt ab.</summary>
      <returns>Der Kommentarwert ist <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.Equals(System.Object)">
      <summary>Bestimmt, ob das angegebene <see cref="T:System.Object" /> und das aktuelle <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />-Objekt gleich sind.</summary>
      <param name="obj">Das Objekt, das mit dem aktuellen Objekt verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn das angegebene <see cref="T:System.Object" /> gleich dem aktuellen Objekt ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.GetHashCode">
      <summary>Dient als Hashfunktion für ein <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />-Objekt.</summary>
      <returns>Ein Hashcode für das aktuelle Objekt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.Parse(System.String)">
      <summary>Konvertiert eine Zeichenfolge in eine <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />-Instanz.</summary>
      <param name="input">Eine Zeichenfolge, die Produktinfo- Headerwertinformationen darstellt.</param>
      <returns>Eine <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />-Instanz.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ist ein <see langword="null" />-Verweis.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> ist keine gültige Produktinfo- Headerwertinformation.</exception>
    </member>
    <member name="P:System.Net.Http.Headers.ProductInfoHeaderValue.Product">
      <summary>Ruft das Produkt aus dem <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />-Objekt ab.</summary>
      <returns>Der Produktwert aus diesem <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.System#ICloneable#Clone">
      <summary>Erstellt ein neues Objekt, das eine Kopie der aktuellen <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />-Instanz ist.</summary>
      <returns>Eine Kopie der aktuellen Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.ToString">
      <summary>Gibt eine Zeichenfolge zurück, die das aktuelle <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />-Objekt darstellt.</summary>
      <returns>Eine Zeichenfolge, die das aktuelle Objekt darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.TryParse(System.String,System.Net.Http.Headers.ProductInfoHeaderValue@)">
      <summary>Bestimmt, ob eine Zeichenfolge eine gültige <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />-Information ist.</summary>
      <param name="input">Die zu überprüfende Zeichenfolge.</param>
      <param name="parsedValue">Die <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />-Version der Zeichenfolge.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="input" /> eine gültige <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />-Information ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.RangeConditionHeaderValue">
      <summary>Stellt einen If-Range-Headerwert dar, der entweder ein Datum/Uhrzeit- oder ein Entitätstag-Wert sein kann.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.DateTimeOffset)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />-Klasse.</summary>
      <param name="date">Ein Datumswert für die Initialisierung der neuen -Instanz.</param>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.Net.Http.Headers.EntityTagHeaderValue)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />-Klasse.</summary>
      <param name="entityTag">Ein <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> Objekt, das zur Initialisierung der neuen Instanz verwendet wird.</param>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />-Klasse.</summary>
      <param name="entityTag">Ein Entitätstag, dargestellt als Zeichenfolge, der verwendet wird, um die neue Instanz zu initialisieren.</param>
    </member>
    <member name="P:System.Net.Http.Headers.RangeConditionHeaderValue.Date">
      <summary>Ruft das Datum aus dem <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />-Objekt ab.</summary>
      <returns>Das Datum aus dem <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />-Objekt.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeConditionHeaderValue.EntityTag">
      <summary>Ruft das Entitätstag vom <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />-Objekt ab.</summary>
      <returns>Das Entitätstag vom <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />-Objekt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.Equals(System.Object)">
      <summary>Bestimmt, ob das angegebene <see cref="T:System.Object" /> und das aktuelle <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />-Objekt gleich sind.</summary>
      <param name="obj">Das Objekt, das mit dem aktuellen Objekt verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn das angegebene <see cref="T:System.Object" /> gleich dem aktuellen Objekt ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.GetHashCode">
      <summary>Dient als Hashfunktion für ein <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />-Objekt.</summary>
      <returns>Ein Hashcode für das aktuelle Objekt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.Parse(System.String)">
      <summary>Konvertiert eine Zeichenfolge in eine <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />-Instanz.</summary>
      <param name="input">Eine Zeichenfolge, die Bereichsbedingungs-Headerwertinformationen darstellt.</param>
      <returns>Eine <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />-Instanz.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ist ein <see langword="null" /> -Verweis.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> ist keine gültige Bereichsbedingungs-Headerwertinformation.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.System#ICloneable#Clone">
      <summary>Erstellt ein neues Objekt, das eine Kopie der aktuellen <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />-Instanz ist.</summary>
      <returns>Eine Kopie der aktuellen Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.ToString">
      <summary>Gibt eine Zeichenfolge zurück, die das aktuelle <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />-Objekt darstellt.</summary>
      <returns>Eine Zeichenfolge, die das aktuelle Objekt darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.TryParse(System.String,System.Net.Http.Headers.RangeConditionHeaderValue@)">
      <summary>Bestimmt, ob eine Zeichenfolge eine gültige <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />-Information ist.</summary>
      <param name="input">Die zu überprüfende Zeichenfolge.</param>
      <param name="parsedValue">Die <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />-Version der Zeichenfolge.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="input" /> eine gültige <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />-Information ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.RangeHeaderValue">
      <summary>Stellt einen Bereichsheaderwert des Bytebereichs dar.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />-Klasse.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />-Klasse mit einem Bytebereich.</summary>
      <param name="from">Die Position, an der mit dem Senden von Daten begonnen werden soll.</param>
      <param name="to">Die Position, an der das Senden von Daten beendet werden soll.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="from" /> ist größer als <paramref name="to" />  

oder - 
<paramref name="from" /> oder <paramref name="to" /> ist kleiner als 0 (null).</exception>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.Equals(System.Object)">
      <summary>Bestimmt, ob das angegebene <see cref="T:System.Object" /> und das aktuelle <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />-Objekt gleich sind.</summary>
      <param name="obj">Das Objekt, das mit dem aktuellen Objekt verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn das angegebene <see cref="T:System.Object" /> gleich dem aktuellen Objekt ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.GetHashCode">
      <summary>Dient als Hashfunktion für ein <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />-Objekt.</summary>
      <returns>Ein Hashcode für das aktuelle Objekt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.Parse(System.String)">
      <summary>Konvertiert eine Zeichenfolge in eine <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />-Instanz.</summary>
      <param name="input">Eine Zeichenfolge, die Bereichsheaderwert-Informationen darstellt.</param>
      <returns>Eine <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />-Instanz.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ist ein <see langword="null" />-Verweis.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> ist keine gültige Bereichsheaderwert-Information.</exception>
    </member>
    <member name="P:System.Net.Http.Headers.RangeHeaderValue.Ranges">
      <summary>Ruft die vom <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />-Objekt angegebenen Bereiche ab.</summary>
      <returns>Die Bereiche vom <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />-Objekt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.System#ICloneable#Clone">
      <summary>Erstellt ein neues Objekt, das eine Kopie der aktuellen <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />-Instanz ist.</summary>
      <returns>Eine Kopie der aktuellen Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.ToString">
      <summary>Gibt eine Zeichenfolge zurück, die das aktuelle <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />-Objekt darstellt.</summary>
      <returns>Eine Zeichenfolge, die das aktuelle Objekt darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.TryParse(System.String,System.Net.Http.Headers.RangeHeaderValue@)">
      <summary>Bestimmt, ob eine Zeichenfolge eine gültige <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />-Information ist.</summary>
      <param name="input">Die zu überprüfende Zeichenfolge.</param>
      <param name="parsedValue">Die <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />-Version der Zeichenfolge.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="input" /> eine gültige <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />-Information ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeHeaderValue.Unit">
      <summary>Ruft die Einheit aus dem <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />-Objekt ab.</summary>
      <returns>Die Einheit aus dem <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />-Objekt.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.RangeItemHeaderValue">
      <summary>Stellt einen Bereichsheaderwert des Bytebereichs dar.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" />-Klasse.</summary>
      <param name="from">Die Position, an der mit dem Senden von Daten begonnen werden soll.</param>
      <param name="to">Die Position, an der das Senden von Daten beendet werden soll.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="from" /> ist größer als <paramref name="to" />  

oder - 
<paramref name="from" /> oder <paramref name="to" /> ist kleiner als 0 (null).</exception>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.Equals(System.Object)">
      <summary>Bestimmt, ob das angegebene <see cref="T:System.Object" /> und das aktuelle <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" />-Objekt gleich sind.</summary>
      <param name="obj">Das Objekt, das mit dem aktuellen Objekt verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn das angegebene <see cref="T:System.Object" /> gleich dem aktuellen Objekt ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeItemHeaderValue.From">
      <summary>Ruft die Position ab, an der mit dem Senden von Daten begonnen werden soll.</summary>
      <returns>Die Position, an der mit dem Senden von Daten begonnen werden soll.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.GetHashCode">
      <summary>Dient als Hashfunktion für ein <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" />-Objekt.</summary>
      <returns>Ein Hashcode für das aktuelle Objekt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.System#ICloneable#Clone">
      <summary>Erstellt ein neues Objekt, das eine Kopie der aktuellen <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" />-Instanz ist.</summary>
      <returns>Eine Kopie der aktuellen Instanz.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeItemHeaderValue.To">
      <summary>Ruft die Position ab, an der das Senden von Daten beendet werden soll.</summary>
      <returns>Die Position, an der das Senden von Daten beendet werden soll.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.ToString">
      <summary>Gibt eine Zeichenfolge zurück, die das aktuelle <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" />-Objekt darstellt.</summary>
      <returns>Eine Zeichenfolge, die das aktuelle Objekt darstellt.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.RetryConditionHeaderValue">
      <summary>Stellt einen Retry-After-Headerwert dar, der entweder ein Datum/Uhrzeit- oder ein Zeitspannen-Wert sein kann.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.#ctor(System.DateTimeOffset)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />-Klasse.</summary>
      <param name="date">Der Datum und Zeit Offset, der zum Initialisieren der neuen Instanz verwendet wird.</param>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.#ctor(System.TimeSpan)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />-Klasse.</summary>
      <param name="delta">Das Delta, in Sekunden, das verwendet wird, um die neue Instanz zu initialisieren.</param>
    </member>
    <member name="P:System.Net.Http.Headers.RetryConditionHeaderValue.Date">
      <summary>Ruft das Datum und Uhrzeit-Offset vom aktuellen <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />-Objekt ab.</summary>
      <returns>Das Datum und Uhrzeit-Offset vom aktuellen <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />-Objekt.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RetryConditionHeaderValue.Delta">
      <summary>Ruft das Delta in Sekunden vom <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />-Objekt ab.</summary>
      <returns>Das Delta in Sekunden vom <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />-Objekt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.Equals(System.Object)">
      <summary>Bestimmt, ob das angegebene <see cref="T:System.Object" /> und das aktuelle <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />-Objekt gleich sind.</summary>
      <param name="obj">Das Objekt, das mit dem aktuellen Objekt verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn das angegebene <see cref="T:System.Object" /> gleich dem aktuellen Objekt ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.GetHashCode">
      <summary>Dient als Hashfunktion für ein <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />-Objekt.</summary>
      <returns>Ein Hashcode für das aktuelle Objekt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.Parse(System.String)">
      <summary>Konvertiert eine Zeichenfolge in eine <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />-Instanz.</summary>
      <param name="input">Eine Zeichenfolge, die Wiederholungsbedingungs-Headerwertinformationen darstellt.</param>
      <returns>Eine <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />-Instanz.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ist ein <see langword="null" />-Verweis.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> ist keine gültige Information für den Headerwert für die Wiederholungsbedingung.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.System#ICloneable#Clone">
      <summary>Erstellt ein neues Objekt, das eine Kopie der aktuellen <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />-Instanz ist.</summary>
      <returns>Eine Kopie der aktuellen Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.ToString">
      <summary>Gibt eine Zeichenfolge zurück, die das aktuelle <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />-Objekt darstellt.</summary>
      <returns>Eine Zeichenfolge, die das aktuelle Objekt darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.TryParse(System.String,System.Net.Http.Headers.RetryConditionHeaderValue@)">
      <summary>Bestimmt, ob eine Zeichenfolge eine gültige <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />-Information ist.</summary>
      <param name="input">Die zu überprüfende Zeichenfolge.</param>
      <param name="parsedValue">Die <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />-Version der Zeichenfolge.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="input" /> eine gültige <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />-Information ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.StringWithQualityHeaderValue">
      <summary>Stellt einen Zeichenfolgenheaderwert mit einer optionalen Qualität dar.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />-Klasse.</summary>
      <param name="value">Eine Zeichenfolge, die zur Initialisierung der neuen Instanz verwendet wird.</param>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String,System.Double)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />-Klasse.</summary>
      <param name="value">Eine Zeichenfolge, die zur Initialisierung der neuen Instanz verwendet wird.</param>
      <param name="quality">Ein Qualitätsfaktor für die Initialisierung der neuen -Instanz.</param>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.Equals(System.Object)">
      <summary>Bestimmt, ob das angegebene Objekt und das aktuelle <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />-Objekt gleich sind.</summary>
      <param name="obj">Das Objekt, das mit dem aktuellen Objekt verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn das angegebene <see cref="T:System.Object" /> gleich dem aktuellen Objekt ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.GetHashCode">
      <summary>Dient als Hashfunktion für ein <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />-Objekt.</summary>
      <returns>Ein Hashcode für das aktuelle Objekt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.Parse(System.String)">
      <summary>Konvertiert eine Zeichenfolge in eine <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />-Instanz.</summary>
      <param name="input">Eine Zeichenfolge, die Qualitätsheaderwert-Informationen darstellt.</param>
      <returns>Eine <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />-Instanz.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ist ein <see langword="null" /> -Verweis.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> ist keine gültige Zeichenfolge mit Qualitätsheaderwert-Informationen.</exception>
    </member>
    <member name="P:System.Net.Http.Headers.StringWithQualityHeaderValue.Quality">
      <summary>Ruft den Qualitätsfaktor aus dem <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />-Objekt ab.</summary>
      <returns>Der Qualitätsfaktor aus dem <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />-Objekt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.System#ICloneable#Clone">
      <summary>Erstellt ein neues Objekt, das eine Kopie der aktuellen <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />-Instanz ist.</summary>
      <returns>Eine Kopie der aktuellen Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.ToString">
      <summary>Gibt eine Zeichenfolge zurück, die das aktuelle <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />-Objekt darstellt.</summary>
      <returns>Eine Zeichenfolge, die das aktuelle Objekt darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.StringWithQualityHeaderValue@)">
      <summary>Bestimmt, ob eine Zeichenfolge eine gültige <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />-Information ist.</summary>
      <param name="input">Die zu überprüfende Zeichenfolge.</param>
      <param name="parsedValue">Die <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />-Version der Zeichenfolge.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="input" /> eine gültige <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />-Information ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.StringWithQualityHeaderValue.Value">
      <summary>Ruft den Zeichenfolgenwert aus dem <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />-Objekt ab.</summary>
      <returns>Der Zeichenfolgenwert aus dem <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />-Objekt.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.TransferCodingHeaderValue">
      <summary>Stellt einen Headerwert zum Akzeptieren von Codierung dar.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.#ctor(System.Net.Http.Headers.TransferCodingHeaderValue)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />-Klasse.</summary>
      <param name="source">Ein <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> Objekt, das zur Initialisierung der neuen Instanz verwendet wird.</param>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />-Klasse.</summary>
      <param name="value">Eine Zeichenfolge, die zur Initialisierung der neuen Instanz verwendet wird.</param>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.Equals(System.Object)">
      <summary>Bestimmt, ob das angegebene Objekt und das aktuelle <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />-Objekt gleich sind.</summary>
      <param name="obj">Das Objekt, das mit dem aktuellen Objekt verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn das angegebene <see cref="T:System.Object" /> gleich dem aktuellen Objekt ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.GetHashCode">
      <summary>Dient als Hashfunktion für ein <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />-Objekt.</summary>
      <returns>Ein Hashcode für das aktuelle Objekt.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.TransferCodingHeaderValue.Parameters">
      <summary>Ruft die Übertragungscodierungsparameter ab.</summary>
      <returns>Die Übertragungscodierungsparameter.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.Parse(System.String)">
      <summary>Konvertiert eine Zeichenfolge in eine <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />-Instanz.</summary>
      <param name="input">Eine Zeichenfolge, die Headerwertinformationen für die Übertragungscodierung darstellt.</param>
      <returns>Eine <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />-Instanz.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ist ein <see langword="null" />-Verweis.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> ist keine gültige Headerwertinformation für die Übertragungscodierung.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.System#ICloneable#Clone">
      <summary>Erstellt ein neues Objekt, das eine Kopie der aktuellen <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />-Instanz ist.</summary>
      <returns>Eine Kopie der aktuellen Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.ToString">
      <summary>Gibt eine Zeichenfolge zurück, die das aktuelle <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />-Objekt darstellt.</summary>
      <returns>Eine Zeichenfolge, die das aktuelle Objekt darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.TryParse(System.String,System.Net.Http.Headers.TransferCodingHeaderValue@)">
      <summary>Bestimmt, ob eine Zeichenfolge eine gültige <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />-Information ist.</summary>
      <param name="input">Die zu überprüfende Zeichenfolge.</param>
      <param name="parsedValue">Die <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />-Version der Zeichenfolge.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="input" /> eine gültige <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />-Information ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.TransferCodingHeaderValue.Value">
      <summary>Ruft den Übertragungscodierungswert ab.</summary>
      <returns>Der Wert der Übertragungscodierung.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue">
      <summary>Stellt einen Accept-Encoding-Headerwert mit optionalem Qualitätsfaktor dar.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />-Klasse.</summary>
      <param name="value">Eine Zeichenfolge, die zur Initialisierung der neuen Instanz verwendet wird.</param>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.#ctor(System.String,System.Double)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />-Klasse.</summary>
      <param name="value">Eine Zeichenfolge, die zur Initialisierung der neuen Instanz verwendet wird.</param>
      <param name="quality">Ein Wert für den Qualitätsfaktor.</param>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Parse(System.String)">
      <summary>Konvertiert eine Zeichenfolge in eine <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />-Instanz.</summary>
      <param name="input">Eine Zeichenfolge, die Informationen für die Übertragungscodierung darstellt.</param>
      <returns>Eine <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />-Instanz.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ist ein <see langword="null" />-Verweis.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> ist keine gültige Headerwertinformation für die Übertragungscodierung mit hoher Qualität.</exception>
    </member>
    <member name="P:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Quality">
      <summary>Ruft den Qualitätsfaktor aus dem <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> ab.</summary>
      <returns>Der Qualitätsfaktor aus dem <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.System#ICloneable#Clone">
      <summary>Erstellt ein neues Objekt, das eine Kopie der aktuellen <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />-Instanz ist.</summary>
      <returns>Eine Kopie der aktuellen Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.TransferCodingWithQualityHeaderValue@)">
      <summary>Bestimmt, ob eine Zeichenfolge eine gültige <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />-Information ist.</summary>
      <param name="input">Die zu überprüfende Zeichenfolge.</param>
      <param name="parsedValue">Die <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />-Version der Zeichenfolge.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="input" /> eine gültige <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />-Information ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ViaHeaderValue">
      <summary>Stellt den Wert des Via-Headers dar.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />-Klasse.</summary>
      <param name="protocolVersion">Die Protokollversion des empfangenen Protokolls.</param>
      <param name="receivedBy">Der Host und der Port, von dem die Anforderung oder Antwort empfangen wurde.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />-Klasse.</summary>
      <param name="protocolVersion">Die Protokollversion des empfangenen Protokolls.</param>
      <param name="receivedBy">Der Host und der Port, von dem die Anforderung oder Antwort empfangen wurde.</param>
      <param name="protocolName">Der Protokollname des empfangenen Protokolls.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />-Klasse.</summary>
      <param name="protocolVersion">Die Protokollversion des empfangenen Protokolls.</param>
      <param name="receivedBy">Der Host und der Port, von dem die Anforderung oder Antwort empfangen wurde.</param>
      <param name="protocolName">Der Protokollname des empfangenen Protokolls.</param>
      <param name="comment">Das Kommentarfeld, das zum Identifizieren der Software des Empfängerproxys oder -gateway verwendet wird.</param>
    </member>
    <member name="P:System.Net.Http.Headers.ViaHeaderValue.Comment">
      <summary>Ruft das Kommentarfeld ab, das zum Identifizieren der Software des Empfängerproxys oder -gateway verwendet wird.</summary>
      <returns>Das Kommentarfeld, das zum Identifizieren der Software des Empfängerproxys oder -gateway verwendet wird.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.Equals(System.Object)">
      <summary>Bestimmt, ob das angegebene <see cref="T:System.Object" /> und das aktuelle <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />-Objekt gleich sind.</summary>
      <param name="obj">Das Objekt, das mit dem aktuellen Objekt verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn das angegebene <see cref="T:System.Object" /> gleich dem aktuellen Objekt ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.GetHashCode">
      <summary>Dient als Hashfunktion für ein <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />-Objekt.</summary>
      <returns>Ein Hashcode für das aktuelle Objekt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.Parse(System.String)">
      <summary>Konvertiert eine Zeichenfolge in eine <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />-Instanz.</summary>
      <param name="input">Eine Zeichenfolge, die ViaHeaderValue-Informationen darstellt.</param>
      <returns>Eine <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />-Instanz.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ist ein <see langword="null" />-Verweis.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> ist keine gültige ViaHeaderValue-Information.</exception>
    </member>
    <member name="P:System.Net.Http.Headers.ViaHeaderValue.ProtocolName">
      <summary>Ruft den Protokollnamen des empfangenen Protokolls ab.</summary>
      <returns>Der Protokollname.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ViaHeaderValue.ProtocolVersion">
      <summary>Ruft die Protokollversion des empfangenen Protokolls ab.</summary>
      <returns>Die Protokollversion.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ViaHeaderValue.ReceivedBy">
      <summary>Ruft den Host und den Port ab, von dem die Anforderung oder Antwort empfangen wurde.</summary>
      <returns>Der Host und der Port, von dem die Anforderung oder Antwort empfangen wurde.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.System#ICloneable#Clone">
      <summary>Erstellt ein neues Objekt, das eine Kopie der aktuellen <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />-Instanz ist.</summary>
      <returns>Eine Kopie der aktuellen Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.ToString">
      <summary>Gibt eine Zeichenfolge zurück, die das aktuelle <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />-Objekt darstellt.</summary>
      <returns>Eine Zeichenfolge, die das aktuelle Objekt darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.TryParse(System.String,System.Net.Http.Headers.ViaHeaderValue@)">
      <summary>Bestimmt, ob eine Zeichenfolge eine gültige <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />-Information ist.</summary>
      <param name="input">Die zu überprüfende Zeichenfolge.</param>
      <param name="parsedValue">Die <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />-Version der Zeichenfolge.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="input" /> eine gültige <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />-Information ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.WarningHeaderValue">
      <summary>Stellt einen Warnwert dar, der vom Warn-Header verwendet wird.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.#ctor(System.Int32,System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />-Klasse.</summary>
      <param name="code">Der spezielle Warnungscode.</param>
      <param name="agent">Der Host, der die Warnung angefügt hat.</param>
      <param name="text">Eine in Anführungszeichen eingeschlossene Zeichenfolge mit dem Warnungstext.</param>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.#ctor(System.Int32,System.String,System.String,System.DateTimeOffset)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />-Klasse.</summary>
      <param name="code">Der spezielle Warnungscode.</param>
      <param name="agent">Der Host, der die Warnung angefügt hat.</param>
      <param name="text">Eine in Anführungszeichen eingeschlossene Zeichenfolge mit dem Warnungstext.</param>
      <param name="date">Der Datums-/Zeitstempel der Warnung .</param>
    </member>
    <member name="P:System.Net.Http.Headers.WarningHeaderValue.Agent">
      <summary>Ruft den Host ab, der die Warnung angefügt hat.</summary>
      <returns>Der Host, der die Warnung angefügt hat.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.WarningHeaderValue.Code">
      <summary>Ruft den speziellen Warnungscode ab.</summary>
      <returns>Der spezielle Warnungscode.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.WarningHeaderValue.Date">
      <summary>Ruft den Datums-/Zeitstempel der Warnung ab.</summary>
      <returns>Der Datums-/Zeitstempel der Warnung .</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.Equals(System.Object)">
      <summary>Bestimmt, ob das angegebene <see cref="T:System.Object" /> und das aktuelle <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />-Objekt gleich sind.</summary>
      <param name="obj">Das Objekt, das mit dem aktuellen Objekt verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn das angegebene <see cref="T:System.Object" /> gleich dem aktuellen Objekt ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.GetHashCode">
      <summary>Dient als Hashfunktion für ein <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />-Objekt.</summary>
      <returns>Ein Hashcode für das aktuelle Objekt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.Parse(System.String)">
      <summary>Konvertiert eine Zeichenfolge in eine <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />-Instanz.</summary>
      <param name="input">Eine Zeichenfolge, die Headerwertinformationen für die Authentifizierung darstellt.</param>
      <returns>Gibt eine <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />-Instanz zurück.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ist ein <see langword="null" /> -Verweis.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> ist keine gültige Headerwertinformation für die Authentifizierung.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.System#ICloneable#Clone">
      <summary>Erstellt ein neues Objekt, das eine Kopie der aktuellen <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />-Instanz ist.</summary>
      <returns>Gibt eine Kopie der aktuellen Instanz zurück.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.WarningHeaderValue.Text">
      <summary>Ruft eine in Anführungszeichen eingeschlossene Zeichenfolge mit dem Warnungstext ab.</summary>
      <returns>Eine in Anführungszeichen eingeschlossene Zeichenfolge mit dem Warnungstext.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.ToString">
      <summary>Gibt eine Zeichenfolge zurück, die das aktuelle <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> -Objekt darstellt.</summary>
      <returns>Eine Zeichenfolge, die das aktuelle Objekt darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.TryParse(System.String,System.Net.Http.Headers.WarningHeaderValue@)">
      <summary>Bestimmt, ob eine Zeichenfolge eine gültige <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />-Information ist.</summary>
      <param name="input">Die zu überprüfende Zeichenfolge.</param>
      <param name="parsedValue">Die <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />-Version der Zeichenfolge.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="input" /> eine gültige <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />-Information ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.HttpClient">
      <summary>Stellt eine Basisklasse zum Senden von HTTP-Anforderungen und Empfangen von HTTP-Antworten aus einer Ressource bereit, die von einem URI identifiziert wird.</summary>
    </member>
    <member name="M:System.Net.Http.HttpClient.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.HttpClient" />-Klasse mithilfe eines <see cref="T:System.Net.Http.HttpClientHandler" />-Objekts, das bei Freigabe dieser Instanz freigegeben wird.</summary>
    </member>
    <member name="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.HttpClient" />-Klasse mit dem angegebenen Handler. Der Handler wird freigegeben, wenn diese Instanz freigegeben wird.</summary>
      <param name="handler">Der HTTP-Handlerstapel, der zum Senden von Anforderungen zu verwenden ist.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handler" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.HttpClient" />-Klasse mit dem bereitgestellten Handler und gibt an, ob dieser Handler freigegeben werden soll, wenn diese Instanz freigegeben wird.</summary>
      <param name="handler">Der <see cref="T:System.Net.Http.HttpMessageHandler" />, der für die Verarbeitung der HTTP-Antwortnachrichten verantwortlich ist.</param>
      <param name="disposeHandler">
        <see langword="true" />, wenn der innere Handler durch HttpClient.Dispose freigegeben werden soll; <see langword="false" />, wenn Sie beabsichtigen, den inneren Handler wiederzuverwenden.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handler" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Net.Http.HttpClient.BaseAddress">
      <summary>Ruft die Basisadresse des URI (Uniform Resource Identifier) der Internetressource ab, die verwendet wird, wenn Anforderungen gesendet werden, oder legt diese fest.</summary>
      <returns>Die Basisadresse des URI (Uniform Resource Identifier) der Internetressource, die verwendet wird, wenn Anforderungen gesendet werden.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.CancelPendingRequests">
      <summary>Alle ausstehenden Anforderungen für diese Instanz abbrechen.</summary>
    </member>
    <member name="P:System.Net.Http.HttpClient.DefaultProxy">
      <summary>Ruft den globalen HTTP-Proxy ab oder legt diesen fest.</summary>
      <returns>Ein Proxy, der von jedem-Rückruf verwendet wird, <see cref="T:System.Net.HttpWebRequest" />der einen instanziiert.</returns>
      <exception cref="T:System.ArgumentNullException">Der übergebene Wert kann nicht <see langword="null" /> sein.</exception>
    </member>
    <member name="P:System.Net.Http.HttpClient.DefaultRequestHeaders">
      <summary>Ruft die Header ab, die mit jeder Anforderung gesendet werden sollen.</summary>
      <returns>Die Header, die mit jeder Anforderung gesendet werden sollen.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClient.DefaultRequestVersion">
      <summary>Ruft die HTTP-Standardversion ab, die für nachfolgende Anforderungen dieser <see cref="T:System.Net.Http.HttpClient" />-Klasse verwendet wird, oder legt diese fest.</summary>
      <returns>Die Standardversion, die für alle Anforderungen verwendet werden soll <see cref="T:System.Net.Http.HttpClient" /> , die mit dieser Instanz vorgenommen wurden.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see langword="DefaultRequestVersion" /> ist in einem Mengenvorgang <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.Net.Http.HttpClient" />-Klasse hat bereits eine oder mehrere Anforderungen gestartet.</exception>
      <exception cref="T:System.ObjectDisposedException">Die <see cref="T:System.Net.Http.HttpClient" />-Klasse wurde bereits verworfen.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.DeleteAsync(System.String)">
      <summary>Eine DELETE-Anforderung an den angegebenen URI als asynchronen Vorgang senden.</summary>
      <param name="requestUri">Der URI, an den die Anforderung gesendet wird.</param>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Die Anforderungsnachricht wurde bereits von der <see cref="T:System.Net.Http.HttpClient" />-Instanz gesendet.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats oder Timeout nicht durchgeführt werden.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
      <summary>Eine DELETE-Anforderung für den angegebenen URI mit einem Abbruchtoken als asynchronen Vorgang senden.</summary>
      <param name="requestUri">Der URI, an den die Anforderung gesendet wird.</param>
      <param name="cancellationToken">Ein Abbruchtoken, das von anderen Objekten oder Threads verwendet werden kann, um Nachricht vom Abbruch zu empfangen.</param>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Die Anforderungsnachricht wurde bereits von der <see cref="T:System.Net.Http.HttpClient" />-Instanz gesendet.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats oder Timeout nicht durchgeführt werden.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri)">
      <summary>Eine DELETE-Anforderung an den angegebenen URI als asynchronen Vorgang senden.</summary>
      <param name="requestUri">Der URI, an den die Anforderung gesendet wird.</param>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Die Anforderungsnachricht wurde bereits von der <see cref="T:System.Net.Http.HttpClient" />-Instanz gesendet.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats oder Timeout nicht durchgeführt werden.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)">
      <summary>Eine DELETE-Anforderung für den angegebenen URI mit einem Abbruchtoken als asynchronen Vorgang senden.</summary>
      <param name="requestUri">Der URI, an den die Anforderung gesendet wird.</param>
      <param name="cancellationToken">Ein Abbruchtoken, das von anderen Objekten oder Threads verwendet werden kann, um Nachricht vom Abbruch zu empfangen.</param>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Die Anforderungsnachricht wurde bereits von der <see cref="T:System.Net.Http.HttpClient" />-Instanz gesendet.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats oder Timeout nicht durchgeführt werden.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.Dispose(System.Boolean)">
      <summary>Gibt die vom <see cref="T:System.Net.Http.HttpClient" /> verwendeten, nicht verwalteten Ressourcen frei und verwirft optional auch die verwalteten Ressourcen.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben. <see langword="false" />, wenn ausschließlich nicht verwaltete Ressourcen freigegeben werden sollen.</param>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.String)">
      <summary>Eine GET-Anforderung an den angegebenen URI als asynchronen Vorgang senden.</summary>
      <param name="requestUri">Der URI, an den die Anforderung gesendet wird.</param>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats oder Timeout nicht durchgeführt werden.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)">
      <summary>Eine GET-Anforderung an den angegebenen URI mit einer HTTP-Abschlussoption als asynchronen Vorgang senden.</summary>
      <param name="requestUri">Der URI, an den die Anforderung gesendet wird.</param>
      <param name="completionOption">Ein HTTP-Abschlussoptions-Wert, der angibt, wann die Operation als abgeschlossen betrachtet werden soll.</param>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats oder Timeout nicht durchgeführt werden.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
      <summary>Eine GET-Anforderung an den angegebenen URI mit einer HTTP-Abschlussoption und einem Abbruchtoken als asynchronen Vorgang senden.</summary>
      <param name="requestUri">Der URI, an den die Anforderung gesendet wird.</param>
      <param name="completionOption">Ein HTTP-Abschlussoptions-Wert, der angibt, wann die Operation als abgeschlossen betrachtet werden soll.</param>
      <param name="cancellationToken">Ein Abbruchtoken, das von anderen Objekten oder Threads verwendet werden kann, um Nachricht vom Abbruch zu empfangen.</param>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats oder Timeout nicht durchgeführt werden.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)">
      <summary>Eine GET-Anforderung für den angegebenen URI mit einem Abbruchtoken als asynchronen Vorgang senden.</summary>
      <param name="requestUri">Der URI, an den die Anforderung gesendet wird.</param>
      <param name="cancellationToken">Ein Abbruchtoken, das von anderen Objekten oder Threads verwendet werden kann, um Nachricht vom Abbruch zu empfangen.</param>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats oder Timeout nicht durchgeführt werden.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.Uri)">
      <summary>Eine GET-Anforderung an den angegebenen URI als asynchronen Vorgang senden.</summary>
      <param name="requestUri">Der URI, an den die Anforderung gesendet wird.</param>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats oder Timeout nicht durchgeführt werden.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)">
      <summary>Eine GET-Anforderung an den angegebenen URI mit einer HTTP-Abschlussoption als asynchronen Vorgang senden.</summary>
      <param name="requestUri">Der URI, an den die Anforderung gesendet wird.</param>
      <param name="completionOption">Ein HTTP-Abschlussoptions-Wert, der angibt, wann die Operation als abgeschlossen betrachtet werden soll.</param>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats oder Timeout nicht durchgeführt werden.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
      <summary>Eine GET-Anforderung an den angegebenen URI mit einer HTTP-Abschlussoption und einem Abbruchtoken als asynchronen Vorgang senden.</summary>
      <param name="requestUri">Der URI, an den die Anforderung gesendet wird.</param>
      <param name="completionOption">Ein HTTP-Abschlussoptions-Wert, der angibt, wann die Operation als abgeschlossen betrachtet werden soll.</param>
      <param name="cancellationToken">Ein Abbruchtoken, das von anderen Objekten oder Threads verwendet werden kann, um Nachricht vom Abbruch zu empfangen.</param>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats oder Timeout nicht durchgeführt werden.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)">
      <summary>Eine GET-Anforderung für den angegebenen URI mit einem Abbruchtoken als asynchronen Vorgang senden.</summary>
      <param name="requestUri">Der URI, an den die Anforderung gesendet wird.</param>
      <param name="cancellationToken">Ein Abbruchtoken, das von anderen Objekten oder Threads verwendet werden kann, um Nachricht vom Abbruch zu empfangen.</param>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats oder Timeout nicht durchgeführt werden.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.String)">
      <summary>Sendet eine GET-Anforderung an den angegebenen URI und gibt den Antworttext in einem asynchronen Vorgang als Bytearray zurück.</summary>
      <param name="requestUri">Der URI, an den die Anforderung gesendet wird.</param>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats oder Timeout nicht durchgeführt werden.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri)">
      <summary>Senden Sie eine GET-Anforderung an den angegebenen URI und geben Sie den Antworttext als Bytearray in einem asynchronen Vorgang zurück.</summary>
      <param name="requestUri">Der URI, an den die Anforderung gesendet wird.</param>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats oder Timeout nicht durchgeführt werden.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStreamAsync(System.String)">
      <summary>Senden Sie eine GET-Anforderung an den angegebenen URI und geben Sie den Antworttext als Datenstrom in einem asynchronen Vorgang zurück.</summary>
      <param name="requestUri">Der URI, an den die Anforderung gesendet wird.</param>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats oder Timeout nicht durchgeführt werden.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStreamAsync(System.Uri)">
      <summary>Senden Sie eine GET-Anforderung an den angegebenen URI und geben Sie den Antworttext als Datenstrom in einem asynchronen Vorgang zurück.</summary>
      <param name="requestUri">Der URI, an den die Anforderung gesendet wird.</param>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats oder Timeout nicht durchgeführt werden.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStringAsync(System.String)">
      <summary>Senden Sie eine GET-Anforderung an den angegebenen URI und geben Sie den Antworttext als Zeichenfolge in einem asynchronen Vorgang zurück.</summary>
      <param name="requestUri">Der URI, an den die Anforderung gesendet wird.</param>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats oder Timeout nicht durchgeführt werden.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStringAsync(System.Uri)">
      <summary>Senden Sie eine GET-Anforderung an den angegebenen URI und geben Sie den Antworttext als Zeichenfolge in einem asynchronen Vorgang zurück.</summary>
      <param name="requestUri">Der URI, an den die Anforderung gesendet wird.</param>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats oder Timeout nicht durchgeführt werden.</exception>
    </member>
    <member name="P:System.Net.Http.HttpClient.MaxResponseContentBufferSize">
      <summary>Ruft beim Lesen des Antwortinhalts die maximale Anzahl zwischenzuspeichernder Bytes ab oder legt diese fest.</summary>
      <returns>Die maximale Anzahl zu puffernder Bytes, wenn der Antwortinhalt gelesen wird. Der Standardwert für diese Eigenschaft ist 2 GB.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Die angegebene Größe ist kleiner oder gleich 0 (null).</exception>
      <exception cref="T:System.InvalidOperationException">Es wurde bereits ein Vorgang für die aktuelle Instanz gestartet.</exception>
      <exception cref="T:System.ObjectDisposedException">Die aktuelle Instanz wurde verworfen.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.PatchAsync(System.String,System.Net.Http.HttpContent)">
      <summary>Sendet eine PATCH-Anforderung an einen Uri, der als eine Zeichenfolge als asynchroner Vorgang festgelegt ist.</summary>
      <param name="requestUri">Der URI, an den die Anforderung gesendet wird.</param>
      <param name="content">Der Inhalt der HTTP-Anforderung, die an den Server gesendet wird.</param>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PatchAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary>Sendet eine PATCH-Anforderung mit einem Abbruchtoken an einen URI, dargestellt als Zeichenfolge als asynchroner Vorgang.</summary>
      <param name="requestUri">Der URI, an den die Anforderung gesendet wird.</param>
      <param name="content">Der Inhalt der HTTP-Anforderung, die an den Server gesendet wird.</param>
      <param name="cancellationToken">Ein Abbruchtoken, das von anderen Objekten oder Threads verwendet werden kann, um Nachricht vom Abbruch zu empfangen.</param>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PatchAsync(System.Uri,System.Net.Http.HttpContent)">
      <summary>Sendet eine PATCH-Anforderung als asynchronen Vorgang.</summary>
      <param name="requestUri">Der URI, an den die Anforderung gesendet wird.</param>
      <param name="content">Der Inhalt der HTTP-Anforderung, die an den Server gesendet wird.</param>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PatchAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary>Sendet eine PATCH-Anforderung mit einem Abbruchtoken als einen asynchronen Vorgang.</summary>
      <param name="requestUri">Der URI, an den die Anforderung gesendet wird.</param>
      <param name="content">Der Inhalt der HTTP-Anforderung, die an den Server gesendet wird.</param>
      <param name="cancellationToken">Ein Abbruchtoken, das von anderen Objekten oder Threads verwendet werden kann, um Nachricht vom Abbruch zu empfangen.</param>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)">
      <summary>Eine POST-Anforderung an den angegebenen URI als asynchronen Vorgang senden.</summary>
      <param name="requestUri">Der URI, an den die Anforderung gesendet wird.</param>
      <param name="content">Der Inhalt der HTTP-Anforderung, die an den Server gesendet wird.</param>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats oder Timeout nicht durchgeführt werden.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary>Eine POST-Anforderung mit einem Abbruchtoken als asynchronen Vorgang senden.</summary>
      <param name="requestUri">Der URI, an den die Anforderung gesendet wird.</param>
      <param name="content">Der Inhalt der HTTP-Anforderung, die an den Server gesendet wird.</param>
      <param name="cancellationToken">Ein Abbruchtoken, das von anderen Objekten oder Threads verwendet werden kann, um Nachricht vom Abbruch zu empfangen.</param>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats oder Timeout nicht durchgeführt werden.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)">
      <summary>Eine POST-Anforderung an den angegebenen URI als asynchronen Vorgang senden.</summary>
      <param name="requestUri">Der URI, an den die Anforderung gesendet wird.</param>
      <param name="content">Der Inhalt der HTTP-Anforderung, die an den Server gesendet wird.</param>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats oder Timeout nicht durchgeführt werden.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary>Eine POST-Anforderung mit einem Abbruchtoken als asynchronen Vorgang senden.</summary>
      <param name="requestUri">Der URI, an den die Anforderung gesendet wird.</param>
      <param name="content">Der Inhalt der HTTP-Anforderung, die an den Server gesendet wird.</param>
      <param name="cancellationToken">Ein Abbruchtoken, das von anderen Objekten oder Threads verwendet werden kann, um Nachricht vom Abbruch zu empfangen.</param>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats oder Timeout nicht durchgeführt werden.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)">
      <summary>Eine PUT-Anforderung an den angegebenen URI als asynchronen Vorgang senden.</summary>
      <param name="requestUri">Der URI, an den die Anforderung gesendet wird.</param>
      <param name="content">Der Inhalt der HTTP-Anforderung, die an den Server gesendet wird.</param>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats oder Timeout nicht durchgeführt werden.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary>Eine PUT-Anforderung mit einem Abbruchtoken als asynchronen Vorgang senden.</summary>
      <param name="requestUri">Der URI, an den die Anforderung gesendet wird.</param>
      <param name="content">Der Inhalt der HTTP-Anforderung, die an den Server gesendet wird.</param>
      <param name="cancellationToken">Ein Abbruchtoken, das von anderen Objekten oder Threads verwendet werden kann, um Nachricht vom Abbruch zu empfangen.</param>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats oder Timeout nicht durchgeführt werden.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)">
      <summary>Eine PUT-Anforderung an den angegebenen URI als asynchronen Vorgang senden.</summary>
      <param name="requestUri">Der URI, an den die Anforderung gesendet wird.</param>
      <param name="content">Der Inhalt der HTTP-Anforderung, die an den Server gesendet wird.</param>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats oder Timeout nicht durchgeführt werden.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary>Eine PUT-Anforderung mit einem Abbruchtoken als asynchronen Vorgang senden.</summary>
      <param name="requestUri">Der URI, an den die Anforderung gesendet wird.</param>
      <param name="content">Der Inhalt der HTTP-Anforderung, die an den Server gesendet wird.</param>
      <param name="cancellationToken">Ein Abbruchtoken, das von anderen Objekten oder Threads verwendet werden kann, um Nachricht vom Abbruch zu empfangen.</param>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats oder Timeout nicht durchgeführt werden.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)">
      <summary>Senden Sie eine HTTP-Anforderung als asynchronen Vorgang.</summary>
      <param name="request">Die zu sendende HTTP-Anforderungsmeldung.</param>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="request" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Die Anforderungsnachricht wurde bereits von der <see cref="T:System.Net.Http.HttpClient" />-Instanz gesendet.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats oder Timeout nicht durchgeführt werden.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)">
      <summary>Senden Sie eine HTTP-Anforderung als asynchronen Vorgang.</summary>
      <param name="request">Die zu sendende HTTP-Anforderungsmeldung.</param>
      <param name="completionOption">Wann der Vorgang abgeschlossen werden sollte (sobald eine Antwort verfügbar ist, oder nach dem Lesen des gesamten Inhalts der Antwort).</param>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="request" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Die Anforderungsnachricht wurde bereits von der <see cref="T:System.Net.Http.HttpClient" />-Instanz gesendet.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats oder Timeout nicht durchgeführt werden.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
      <summary>Senden Sie eine HTTP-Anforderung als asynchronen Vorgang.</summary>
      <param name="request">Die zu sendende HTTP-Anforderungsmeldung.</param>
      <param name="completionOption">Wann der Vorgang abgeschlossen werden sollte (sobald eine Antwort verfügbar ist, oder nach dem Lesen des gesamten Inhalts der Antwort).</param>
      <param name="cancellationToken">Das Abbruchtoken, um den Vorgang abzubrechen.</param>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="request" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Die Anforderungsnachricht wurde bereits von der <see cref="T:System.Net.Http.HttpClient" />-Instanz gesendet.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats oder Timeout nicht durchgeführt werden.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Senden Sie eine HTTP-Anforderung als asynchronen Vorgang.</summary>
      <param name="request">Die zu sendende HTTP-Anforderungsmeldung.</param>
      <param name="cancellationToken">Das Abbruchtoken, um den Vorgang abzubrechen.</param>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="request" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Die Anforderungsnachricht wurde bereits von der <see cref="T:System.Net.Http.HttpClient" />-Instanz gesendet.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats oder Timeout nicht durchgeführt werden.</exception>
    </member>
    <member name="P:System.Net.Http.HttpClient.Timeout">
      <summary>Ruft die Zeitspanne ab, nach der das Zeitlimit der Anforderung überschritten ist, oder legt diese fest.</summary>
      <returns>Die Zeitspanne, nach der das Zeitlimit der Anforderung überschritten ist.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Der angegebene Timeoutwert ist kleiner oder gleich 0 (null) und nicht <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />.</exception>
      <exception cref="T:System.InvalidOperationException">Es wurde bereits ein Vorgang für die aktuelle Instanz gestartet.</exception>
      <exception cref="T:System.ObjectDisposedException">Die aktuelle Instanz wurde verworfen.</exception>
    </member>
    <member name="T:System.Net.Http.HttpClientHandler">
      <summary>Den Standardnachrichtenhandler, der von <see cref="T:System.Net.Http.HttpClient" /> in .NET Framework und .NET Core 2.0 und früheren Versionen verwendet wird.</summary>
    </member>
    <member name="M:System.Net.Http.HttpClientHandler.#ctor">
      <summary>Erstellt eine Instanz einer <see cref="T:System.Net.Http.HttpClientHandler" />-Klasse.</summary>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect">
      <summary>Ruft einen Wert ab, der angibt, ob der Handler Umleitungsantworten folgen soll, oder legt diesen Wert fest.</summary>
      <returns>
        <see langword="true" />, wenn der Handler Umleitungs Antworten folgen soll. andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />sein.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.AutomaticDecompression">
      <summary>Ruft den Typ der Dekomprimierungsmethode ab, die vom Handler für die automatische Dekomprimierung von Antworten mit HTTP-Inhalt verwendet wird, oder legt den Typ fest.</summary>
      <returns>Die automatische Dekomprimierungsmethode, die der Handler verwendet.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.CheckCertificateRevocationList">
      <summary>Ruft einen Wert ab, der angibt, ob das Zertifikat anhand der Sperrliste der Zertifizierungsstelle überprüft wird, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn die Zertifikatsperrliste überprüft wird, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.PlatformNotSupportedException">Nur .NET Framework 4.7.1: Diese Eigenschaft ist nicht implementiert.</exception>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.ClientCertificateOptions">
      <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob das Zertifikat automatisch aus dem Zertifikatspeicher ausgewählt wird oder ob der Aufrufer ein bestimmtes Clientzertifikat übergeben darf.</summary>
      <returns>Die diesem Handler zugeordnete Auflistung von Sicherheitszertifikaten.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.ClientCertificates">
      <summary>Ruft die dieser Anforderungen an den Server zugeordnete Auflistung von Sicherheitszertifikaten ab.</summary>
      <returns>Der X509CertificateCollection, der dem Server beim Ausführen der Zertifikat basierten Client Authentifizierung angezeigt wird.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.CookieContainer">
      <summary>Ruft den zum Speichern von Servercookies vom Handler verwendeten Cookiecontainer ab oder legt diesen fest.</summary>
      <returns>Der zum Speichern von Servercookies vom Handler verwendete Cookiecontainer.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.Credentials">
      <summary>Ruft von diesem Handler verwendete Authentifizierungsinformationen ab oder legt diese fest.</summary>
      <returns>Die dem Handler zugeordneten Authentifizierungsanmeldeinformationen. Die Standardeinstellung ist <see langword="null" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator">
      <summary>Ruft einen zwischengespeicherten Delegaten ab, der immer <see langword="true" /> zurückgibt.</summary>
      <returns>Ein zwischengespeicherter Delegat, der immer <see langword="true" /> zurückgibt.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.DefaultProxyCredentials">
      <summary>Wenn der Standardproxy (Systemproxy) verwendet wird, werden die Anmeldeinformationen abgerufen oder festgelegt, die an den Standardproxyserver für die Authentifizierung übermittelt werden. Der Standardproxy wird nur verwendet, wenn <see cref="P:System.Net.Http.HttpClientHandler.UseProxy" /> auf <see langword="true" /> und <see cref="P:System.Net.Http.HttpClientHandler.Proxy" /> auf <see langword="null" /> festgelegt ist.</summary>
      <returns>Die Anmelde Informationen, die erforderlich sind, um eine Anforderung an den Standard Proxy Server zu authentifizieren.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClientHandler.Dispose(System.Boolean)">
      <summary>Gibt die vom <see cref="T:System.Net.Http.HttpClientHandler" /> verwendeten, nicht verwalteten Ressourcen frei und verwirft optional auch die verwalteten Ressourcen.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben. <see langword="false" />, wenn ausschließlich nicht verwaltete Ressourcen freigegeben werden sollen.</param>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections">
      <summary>Ruft die maximale Anzahl von Umleitungen ab, denen der Handler folgt, oder legt diese fest.</summary>
      <returns>Die maximale Anzahl von Umleitungsantworten, denen der Handler folgt. Der Standardwert ist 50.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.MaxConnectionsPerServer">
      <summary>Ruft die maximal zulässige Anzahl gleichzeitiger Verbindungen (pro Serverendpunkt), wenn eine Anforderung mithilfe eines <see cref="T:System.Net.Http.HttpClient" />-Objekts durchgeführt wird, oder legt diese fest. Beachten Sie, dass der Grenzwert pro Serverendpunkt gilt. Ein Wert von 256 würde beispielsweise 256 gleichzeitige Verbindungen zu „http://www.adatum.com/“ und weitere 256 zu „http://www.adventure-works.com/“ ermöglichen.</summary>
      <returns>Die maximale Anzahl gleichzeitiger Verbindungen (pro Server Endpunkt), die für <see cref="T:System.Net.Http.HttpClient" /> ein-Objekt zulässig sind.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize">
      <summary>Dient zum Abrufen oder Festlegen der maximalen Größe des Anforderungsinhaltspuffers, die vom Handler verwendet wird.</summary>
      <returns>Der maximale Größe des Anforderungsinhaltspuffers in Bytes. Der Standardwert ist 2 GB.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.MaxResponseHeadersLength">
      <summary>Ruft die maximale Länge des Antwortheaders in Kilobyte (1024 Byte) ab oder legt diese fest. Wenn der Wert beispielsweise 64 ist, sind 65536 Byte für die maximale Länge des Antwortheaders zulässig.</summary>
      <returns>Die maximale Länge der Antwortheader in Kilobyte (1024 Bytes).</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.PreAuthenticate">
      <summary>Ruft einen Wert ab, der angibt, ob vom Handler mit der Anforderung ein Autorisierungsheader gesendet wird, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, um nach der Authentifizierung einen HTTP-Authorization-Header mit Anforderungen vom Handler zu senden, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.Properties">
      <summary>Ruft ein beschreibares Wörterbuch (d.h. eine Zuordnung) von benutzerdefinierten Eigenschaften für die <see cref="T:System.Net.Http.HttpClient" />-Anforderungen ab. Das Wörterbuch ist zunächst leer. Sie können Schlüssel-Wert-Paare für benutzerdefinierte Handler und die spezielle Verarbeitung einfügen und abfragen.</summary>
      <returns>ein beschreibbares Wörterbuch mit benutzerdefinierten Eigenschaften.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.Proxy">
      <summary>Ruft vom Handler verwendete Proxyinformationen ab oder legt diese fest.</summary>
      <returns>Die vom Handler verwendeten Proxyinformationen. Der Standardwert ist <see langword="null" />sein.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClientHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Erstellt eine Instanz von <see cref="T:System.Net.Http.HttpResponseMessage" /> auf Basis der in <see cref="T:System.Net.Http.HttpRequestMessage" /> bereitgestellten Informationen als nicht blockierender Vorgang.</summary>
      <param name="request">Die HTTP-Anforderungsnachricht.</param>
      <param name="cancellationToken">Ein Abbruchtoken, um den Vorgang abzubrechen.</param>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="request" /> war <see langword="null" />.</exception>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback">
      <summary>Ruft eine Rückrufmethode zur Überprüfung des Serverzertifikats ab oder legt diese fest.</summary>
      <returns>Eine Rückrufmethode zur Überprüfung des Serverzertifikats.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.SslProtocols">
      <summary>Ruft das TSL-/SSL-Protokoll ab, das von den <see cref="T:System.Net.Http.HttpClient" />-Objekten verwendet wird, die vom HttpClientHandler-Objekt verwaltet werden, oder legt dieses fest.</summary>
      <returns>Einer der in der <see cref="T:System.Security.Authentication.SslProtocols" />-Enumeration definierten Werte.</returns>
      <exception cref="T:System.PlatformNotSupportedException">Nur .NET Framework 4.7.1: Diese Eigenschaft ist nicht implementiert.</exception>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression">
      <summary>Ruft einen Wert ab, der angibt, ob der Handler die automatische Dekomprimierung von Antwortinhalten unterstützt.</summary>
      <returns>
        <see langword="true" />, wenn der Handler die automatische Dekomprimierung von Antwortinhalten unterstützt, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />sein.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.SupportsProxy">
      <summary>Ruft einen Wert ab, der angibt, ob der Handler Proxyeinstellungen unterstützt.</summary>
      <returns>
        <see langword="true" />, wenn der Handler Proxyeinstellungen unterstützt, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />sein.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration">
      <summary>Ruft einen Wert ab, der angibt, ob der Handler Konfigurationseinstellungen für die Eigenschaften <see cref="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" /> und <see cref="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" /> unterstützt.</summary>
      <returns>
        <see langword="true" />, wenn der Handler Konfigurationseinstellungen für die Eigenschaften <see cref="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" /> und <see cref="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" /> unterstützt, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />sein.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.UseCookies">
      <summary>Ruft einen Wert ab oder legt diesen fest, der angibt, ob der Handler die <see cref="P:System.Net.Http.HttpClientHandler.CookieContainer" />-Eigenschaft zum Speichern von Servercookies und diese Cookies zum Senden von Anforderungen verwendet.</summary>
      <returns>
        <see langword="true" />, wenn der Handler die <see cref="P:System.Net.Http.HttpClientHandler.CookieContainer" />-Eigenschaft zum Speichern von Servercookies und diese Cookies zum Senden von Anforderungen verwendet, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />sein.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.UseDefaultCredentials">
      <summary>Ruft einen Wert ab, der steuert, ob vom Handler mit den Anforderungen Standardanmeldeinformationen gesendet werden, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn die Standardanmeldeinformationen verwendet werden, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />sein.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.UseProxy">
      <summary>Ruft einen Wert ab, der angibt, ob der Handler einen Proxy für Anforderungen verwendet, oder legt diesen Wert fest.</summary>
      <returns>
        <see langword="true" />, wenn der Handler einen Proxy für Anforderungen verwenden soll, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />sein.</returns>
    </member>
    <member name="T:System.Net.Http.HttpCompletionOption">
      <summary>Gibt an, ob <see cref="T:System.Net.Http.HttpClient" />-Vorgänge als abgeschlossen betrachtet werden, sobald eine Antwort verfügbar ist, oder nachdem die gesamte Antwortnachricht einschließlich Inhalt gelesen wurde.</summary>
    </member>
    <member name="F:System.Net.Http.HttpCompletionOption.ResponseContentRead">
      <summary>Der Vorgang sollte beendet werden, nachdem er die gesamte Antwort einschließlich des Inhalts gelesen hat.</summary>
    </member>
    <member name="F:System.Net.Http.HttpCompletionOption.ResponseHeadersRead">
      <summary>Der Vorgang sollte beendet werden, sobald eine Antwort vorliegt und die Header gelesen wurden. Der Inhalts noch ist nicht bereit.</summary>
    </member>
    <member name="T:System.Net.Http.HttpContent">
      <summary>Eine Basisklasse, die einen HTTP-Entitätstext und Inhaltsheader darstellt.</summary>
    </member>
    <member name="M:System.Net.Http.HttpContent.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.HttpContent" />-Klasse.</summary>
    </member>
    <member name="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)">
      <summary>Serialisiert den HTTP-Inhalt in einen Bytedatenstrom und kopiert ihn in das als <paramref name="stream" />-Parameter bereitgestellte Datenstromobjekt.</summary>
      <param name="stream">Der Zieldatenstrom.</param>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary>Serialisiert den HTTP-Inhalt in einen Bytedatenstrom und kopiert ihn in das als <paramref name="stream" />-Parameter bereitgestellte Datenstromobjekt.</summary>
      <param name="stream">Der Zieldatenstrom.</param>
      <param name="context">Informationen über den Transport (z.B. Kanalbindungstoken). Dieser Parameter kann <see langword="null" /> sein.</param>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.CreateContentReadStreamAsync">
      <summary>Serialisiert den HTTP-Inhalt in einen Speicherdatenstrom als asynchroner Vorgang.</summary>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.Dispose">
      <summary>Gibt die vom <see cref="T:System.Net.Http.HttpContent" /> verwendeten, nicht verwalteten Ressourcen frei und verwirft die verwalteten Ressourcen.</summary>
    </member>
    <member name="M:System.Net.Http.HttpContent.Dispose(System.Boolean)">
      <summary>Gibt die vom <see cref="T:System.Net.Http.HttpContent" /> verwendeten, nicht verwalteten Ressourcen frei und verwirft optional auch die verwalteten Ressourcen.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben. <see langword="false" />, wenn ausschließlich nicht verwaltete Ressourcen freigegeben werden sollen.</param>
    </member>
    <member name="P:System.Net.Http.HttpContent.Headers">
      <summary>Ruft die HTTP-Inhaltsheader gemäß Definition in RFC 2616 ab.</summary>
      <returns>Die Inhaltsheader gemäß Definition in RFC 2616.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.LoadIntoBufferAsync">
      <summary>Serialisiert den HTTP-Inhalt in einen Arbeitsspeicherpuffer als asynchroner Vorgang.</summary>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)">
      <summary>Serialisiert den HTTP-Inhalt in einen Arbeitsspeicherpuffer als asynchroner Vorgang.</summary>
      <param name="maxBufferSize">Die maximale Größe des zu verwendenden Puffers in Bytes.</param>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsByteArrayAsync">
      <summary>Serialisiert den HTTP-Inhalt in ein Bytearray als asynchroner Vorgang.</summary>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsStreamAsync">
      <summary>Serialisieren des HTTP-Inhalts und Zurückgeben eines Datenstroms, der den Inhalt darstellt, als asynchroner Vorgang.</summary>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsStringAsync">
      <summary>Serialisiert den HTTP-Inhalt in eine Zeichenfolge als asynchroner Vorgang.</summary>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary>Serialisiert den HTTP-Inhalt in einen Datenstrom als asynchroner Vorgang.</summary>
      <param name="stream">Der Zieldatenstrom.</param>
      <param name="context">Informationen über den Transport (z.B. Kanalbindungstoken). Dieser Parameter kann <see langword="null" /> sein.</param>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.TryComputeLength(System.Int64@)">
      <summary>Bestimmt, ob der HTTP-Inhalt eine gültige Länge in Bytes hat.</summary>
      <param name="length">Die Länge des HTTP-Inhalts in Bytes.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="length" /> eine gültige Länge ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.HttpMessageHandler">
      <summary>Ein Basistyp für HTTP-Meldungshandler.</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.HttpMessageHandler" />-Klasse.</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.Dispose">
      <summary>Gibt die vom <see cref="T:System.Net.Http.HttpMessageHandler" /> verwendeten, nicht verwalteten Ressourcen frei und verwirft die verwalteten Ressourcen.</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)">
      <summary>Gibt die vom <see cref="T:System.Net.Http.HttpMessageHandler" /> verwendeten, nicht verwalteten Ressourcen frei und verwirft optional auch die verwalteten Ressourcen.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben. <see langword="false" />, wenn ausschließlich nicht verwaltete Ressourcen freigegeben werden sollen.</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Senden Sie eine HTTP-Anforderung als asynchronen Vorgang.</summary>
      <param name="request">Die zu sendende HTTP-Anforderungsmeldung.</param>
      <param name="cancellationToken">Das Abbruchtoken, um den Vorgang abzubrechen.</param>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="request" /> war <see langword="null" />.</exception>
    </member>
    <member name="T:System.Net.Http.HttpMessageInvoker">
      <summary>Eine spezielle Klasse, die es Anwendungen ermöglicht, die <see cref="M:System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />-Methode auf einer HTTP-Handlerkette aufzurufen.</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary>Initialisiert eine neue Instanz einer <see cref="T:System.Net.Http.HttpMessageInvoker" />-Klasse mit einem bestimmten <see cref="T:System.Net.Http.HttpMessageHandler" />.</summary>
      <param name="handler">Der <see cref="T:System.Net.Http.HttpMessageHandler" />, der für die Verarbeitung der HTTP-Antwortnachrichten verantwortlich ist.</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)">
      <summary>Initialisiert eine neue Instanz einer <see cref="T:System.Net.Http.HttpMessageInvoker" />-Klasse mit einem bestimmten <see cref="T:System.Net.Http.HttpMessageHandler" />.</summary>
      <param name="handler">Der <see cref="T:System.Net.Http.HttpMessageHandler" />, der für die Verarbeitung der HTTP-Antwortnachrichten verantwortlich ist.</param>
      <param name="disposeHandler">
        <see langword="true" />, wenn der innere Handler von Dispose() verworfen werden soll, <see langword="false" />, wenn Sie beabsichtigen, den inneren Handler wiederzuverwenden.</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.Dispose">
      <summary>Gibt die vom <see cref="T:System.Net.Http.HttpMessageInvoker" /> verwendeten, nicht verwalteten Ressourcen frei und verwirft die verwalteten Ressourcen.</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.Dispose(System.Boolean)">
      <summary>Gibt die vom <see cref="T:System.Net.Http.HttpMessageInvoker" /> verwendeten, nicht verwalteten Ressourcen frei und verwirft optional auch die verwalteten Ressourcen.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben. <see langword="false" />, wenn ausschließlich nicht verwaltete Ressourcen freigegeben werden sollen.</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Senden Sie eine HTTP-Anforderung als asynchronen Vorgang.</summary>
      <param name="request">Die zu sendende HTTP-Anforderungsmeldung.</param>
      <param name="cancellationToken">Das Abbruchtoken, um den Vorgang abzubrechen.</param>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="request" /> war <see langword="null" />.</exception>
    </member>
    <member name="T:System.Net.Http.HttpMethod">
      <summary>Eine Hilfsprogrammklasse für das Abrufen und das Vergleichen von Standard-HTTP-Methoden und zum Erstellen von neuen HTTP-Methoden.</summary>
    </member>
    <member name="M:System.Net.Http.HttpMethod.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.HttpMethod" />-Klasse mit einem bestimmten HTTP-Methode.</summary>
      <param name="method">Die HTTP-Methode</param>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Delete">
      <summary>Stellt eine HTTP DELTE-Protokollmethode dar.</summary>
      <returns>Gibt <see cref="T:System.Net.Http.HttpMethod" /> zurück.</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.Equals(System.Net.Http.HttpMethod)">
      <summary>Bestimmt, ob die angegebene <see cref="T:System.Net.Http.HttpMethod" /> und die aktuelle <see cref="T:System.Object" /> gleich sind.</summary>
      <param name="other">Die HTTP-Methode, die mit dem aktuellen Objekt verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn das angegebene Objekt und das aktuelle Objekt gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.Equals(System.Object)">
      <summary>Bestimmt, ob das angegebene <see cref="T:System.Object" /> und das aktuelle <see cref="T:System.Object" /> gleich sind.</summary>
      <param name="obj">Das Objekt, das mit dem aktuellen Objekt verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn das angegebene Objekt und das aktuelle Objekt gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Get">
      <summary>Stellt eine HTTP GET-Protokollmethode dar.</summary>
      <returns>Gibt <see cref="T:System.Net.Http.HttpMethod" /> zurück.</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.GetHashCode">
      <summary>Fungiert als Hashfunktion für diesen Typ.</summary>
      <returns>Ein Hashcode für die aktuelle <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Head">
      <summary>Stellt eine HTTP HEAD-Protokollmethode dar. Die HEAD-Methode ist mit der GET-Methode identisch, bis auf den Unterschied, dass der Server in der Antwort nur Meldungsheader und keinen Meldungstext zurückgibt.</summary>
      <returns>Gibt <see cref="T:System.Net.Http.HttpMethod" /> zurück.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Method">
      <summary>Eine HTTP-Methode.</summary>
      <returns>Die HTTP-Methode dargestellt als <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.op_Equality(System.Net.Http.HttpMethod,System.Net.Http.HttpMethod)">
      <summary>Der Gleichheitsoperator (=) zum Vergleichen von zwei <see cref="T:System.Net.Http.HttpMethod" />-Objekten.</summary>
      <param name="left">Die linke <see cref="T:System.Net.Http.HttpMethod" /> für einen Gleichheitsoperator.</param>
      <param name="right">Die rechte <see cref="T:System.Net.Http.HttpMethod" /> zu einem Gleichheitsoperator.</param>
      <returns>
        <see langword="true" />, wenn der angegebene <paramref name="left" />-Parameter und der angegebene <paramref name="right" />-Parameter gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.op_Inequality(System.Net.Http.HttpMethod,System.Net.Http.HttpMethod)">
      <summary>Der Ungleichheitsoperator (=) zum Vergleichen von zwei <see cref="T:System.Net.Http.HttpMethod" />-Objekten.</summary>
      <param name="left">Die linke <see cref="T:System.Net.Http.HttpMethod" /> für einen Ungleichheitsoperator.</param>
      <param name="right">Die rechte <see cref="T:System.Net.Http.HttpMethod" /> zu einem Ungleichheitsoperator.</param>
      <returns>
        <see langword="true" />, wenn der angegebene <paramref name="left" />-Parameter und der angegebene <paramref name="right" />-Parameter ungleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Options">
      <summary>Stellt eine HTTP OPTIONS-Protokollmethode dar.</summary>
      <returns>Gibt <see cref="T:System.Net.Http.HttpMethod" /> zurück.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Patch" />
    <member name="P:System.Net.Http.HttpMethod.Post">
      <summary>Stellt eine HTTP POST-Protokollmethode dar, die verwendet wird, um eine neue Entität als Zusatz zu einem URI zu senden.</summary>
      <returns>Gibt <see cref="T:System.Net.Http.HttpMethod" /> zurück.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Put">
      <summary>Stellt eine HTTP PUT-Protokollmethode dar, die verwendet wird, um eine durch einen URI bezeichnete Entität zu ersetzen.</summary>
      <returns>Gibt <see cref="T:System.Net.Http.HttpMethod" /> zurück.</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.ToString">
      <summary>Gibt eine Zeichenfolge zurück, die das aktuelle Objekt darstellt.</summary>
      <returns>Eine Zeichenfolge, die das aktuelle Objekt darstellt.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Trace">
      <summary>Stellt eine HTTP TRACE-Protokollmethode dar.</summary>
      <returns>Gibt <see cref="T:System.Net.Http.HttpMethod" /> zurück.</returns>
    </member>
    <member name="T:System.Net.Http.HttpRequestException">
      <summary>Eine Basisklasse für Ausnahmen, die von den Klassen <see cref="T:System.Net.Http.HttpClient" /> und <see cref="T:System.Net.Http.HttpMessageHandler" /> ausgelöst werden.</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.HttpRequestException" />-Klasse.</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.HttpRequestException" />-Klasse mit einer bestimmten Meldung, die die aktuelle Ausnahme beschreibt.</summary>
      <param name="message">Eine Meldung, die die aktuelle Ausnahme beschreibt.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.HttpRequestException" />-Klasse mit einer bestimmten Meldung, die die aktuelle Ausnahme beschreibt, und einer inneren Ausnahme.</summary>
      <param name="message">Eine Meldung, die die aktuelle Ausnahme beschreibt.</param>
      <param name="inner">Die innere Ausnahme.</param>
    </member>
    <member name="T:System.Net.Http.HttpRequestMessage">
      <summary>Stellt eine HTTP-Anforderungsnachricht dar.</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.HttpRequestMessage" />-Klasse.</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.#ctor(System.Net.Http.HttpMethod,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.HttpRequestMessage" />-Klasse mit einer HTTP-Methode und einer Anforderungs-<see cref="T:System.Uri" />.</summary>
      <param name="method">Die HTTP-Methode</param>
      <param name="requestUri">Eine Zeichenfolge, die die Anforderung <see cref="T:System.Uri" /> darstellt.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.#ctor(System.Net.Http.HttpMethod,System.Uri)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.HttpRequestMessage" />-Klasse mit einer HTTP-Methode und einer Anforderungs-<see cref="T:System.Uri" />.</summary>
      <param name="method">Die HTTP-Methode</param>
      <param name="requestUri">Das anzufordernde <see cref="T:System.Uri" />.</param>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Content">
      <summary>Ruft den Inhalt der HTTP-Meldung ab oder legt diesen fest.</summary>
      <returns>Der Inhalt einer Nachricht</returns>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.Dispose">
      <summary>Gibt die vom <see cref="T:System.Net.Http.HttpRequestMessage" /> verwendeten, nicht verwalteten Ressourcen frei und verwirft die verwalteten Ressourcen.</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.Dispose(System.Boolean)">
      <summary>Gibt die vom <see cref="T:System.Net.Http.HttpRequestMessage" /> verwendeten, nicht verwalteten Ressourcen frei und verwirft optional auch die verwalteten Ressourcen.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben. <see langword="false" />, wenn ausschließlich nicht verwaltete Ressourcen freigegeben werden sollen.</param>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Headers">
      <summary>Ruft die Auflistung von HTTP-Anforderungsheadern ab.</summary>
      <returns>Eine Auflistung von HTTP-Anforderungsheadern.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Method">
      <summary>Ruft die von dieser HTTP-Anforderungsnachricht verwendete HTTP-Methode ab oder legt sie fest.</summary>
      <returns>Die von der Anforderungsnachricht verwendete HTTP-Methode. Standard ist die GET-Methode.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Properties">
      <summary>Ruft eine Gruppe von Eigenschaften für die HTTP-Anforderung ab.</summary>
      <returns>Gibt <see cref="T:System.Collections.Generic.IDictionary`2" /> zurück.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.RequestUri">
      <summary>Übernimmt oder bestimmt den <see cref="T:System.Uri" />, der für die HTTP-Anforderung verwendet wird.</summary>
      <returns>Der für die HTTP-Anforderung verwendete <see cref="T:System.Uri" />.</returns>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.ToString">
      <summary>Gibt eine Zeichenfolge zurück, die das aktuelle Objekt darstellt.</summary>
      <returns>Eine Zeichenfolgendarstellung des aktuellen Objekts.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Version">
      <summary>Ruft die HTTP-Nachrichtenversion ab oder legt sie fest.</summary>
      <returns>Die HTTP-Nachrichtenversion. Der Standardwert in den .NET Framework und früheren Versionen von .net Core ist 1,1. In .net Core 2,1 und höher ist es 2,0.</returns>
    </member>
    <member name="T:System.Net.Http.HttpResponseMessage">
      <summary>Stellt eine HTTP-Antwortnachricht einschließlich den Statuscodes und der Daten dar.</summary>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.HttpResponseMessage" />-Klasse.</summary>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.#ctor(System.Net.HttpStatusCode)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.HttpResponseMessage" />-Klasse mit einem bestimmten <see cref="P:System.Net.Http.HttpResponseMessage.StatusCode" />.</summary>
      <param name="statusCode">Der Statuscode der HTTP-Antwort.</param>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.Content">
      <summary>Ruft den Inhalt einer HTTP-Antwortnachricht ab oder legt diesen fest.</summary>
      <returns>Der Inhalt der HTTP-Antwortnachricht.</returns>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.Dispose">
      <summary>Gibt die vom <see cref="T:System.Net.Http.HttpResponseMessage" /> verwendeten, nicht verwalteten Ressourcen frei und verwirft die nicht verwalteten Ressourcen.</summary>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.Dispose(System.Boolean)">
      <summary>Gibt die vom <see cref="T:System.Net.Http.HttpResponseMessage" /> verwendeten, nicht verwalteten Ressourcen frei und verwirft optional auch die verwalteten Ressourcen.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben. <see langword="false" />, wenn ausschließlich nicht verwaltete Ressourcen freigegeben werden sollen.</param>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode">
      <summary>Löst eine Ausnahme aus, wenn die <see cref="P:System.Net.Http.HttpResponseMessage.IsSuccessStatusCode" />-Eigenschaft für die HTTP-Antwort <see langword="false" /> ist.</summary>
      <returns>Die HTTP-Antwortnachricht, wenn der Aufruf erfolgreich ist.</returns>
      <exception cref="T:System.Net.Http.HttpRequestException">Die HTTP-Antwort ist nicht erfolgreich.</exception>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.Headers">
      <summary>Ruft die Sammlung von HTTP-Antwortheadern ab.</summary>
      <returns>Die Sammlung der HTTP-Antwortheader.</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.IsSuccessStatusCode">
      <summary>Ruft einen Wert ab, der anzeigt, ob die HTTP-Antwort erfolgreich war.</summary>
      <returns>
        <see langword="true" />
        <see cref="P:System.Net.Http.HttpResponseMessage.StatusCode" /> ,<see langword="false" />wenn im Bereich 200-299 war, andernfalls.</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.ReasonPhrase">
      <summary>Ruft den Ursachenausdruck ab, der in der Regel von Servern zusammen mit dem Statuscode übertragen wird, oder legt ihn fest.</summary>
      <returns>Der vom Server gesendete Ursachenausdruck.</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.RequestMessage">
      <summary>Ruft die Anforderungsnachricht ab, die zu dieser Antwortnachricht geführt hat, oder legt sie fest.</summary>
      <returns>Die Anforderungsnachricht, die zu dieser Antwortnachricht geführt hat.</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.StatusCode">
      <summary>Ruft den Statuscode der HTTP-Antwort ab oder legt ihn fest.</summary>
      <returns>Der Statuscode der HTTP-Antwort.</returns>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.ToString">
      <summary>Gibt eine Zeichenfolge zurück, die das aktuelle Objekt darstellt.</summary>
      <returns>Eine Zeichenfolgendarstellung des aktuellen Objekts.</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.TrailingHeaders">
      <summary>Ruft die Auflistung von nachfolgenden Headern in einer HTTP-Antwort ab.</summary>
      <returns>Die Auflistung der nachfolgenden Header in der HTTP-Antwort.</returns>
      <exception cref="T:System.Net.Http.HttpRequestException">PROTOCOL_ERROR: Die HTTP/2-Antwort enthält Pseudoheader im Trailing Headers-Frame.</exception>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.Version">
      <summary>Ruft die HTTP-Nachrichtenversion ab oder legt sie fest.</summary>
      <returns>Die HTTP-Nachrichtenversion. Der Standardwert ist 1.1.</returns>
    </member>
    <member name="T:System.Net.Http.MessageProcessingHandler">
      <summary>Ein Basistyp für Handler, die nur einige kleine Verarbeitung der Anforderungs- und/oder der Antwortnachrichten ausführen.</summary>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.#ctor">
      <summary>Erstellt eine Instanz einer <see cref="T:System.Net.Http.MessageProcessingHandler" />-Klasse.</summary>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary>Erstellt eine Instanz einer <see cref="T:System.Net.Http.MessageProcessingHandler" />-Klasse mit einem bestimmten inneren Handler.</summary>
      <param name="innerHandler">Der innere Handler, der für die Verarbeitung der HTTP-Antwortnachrichten zuständig ist.</param>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.ProcessRequest(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Führt die Verarbeitung bei jeder an den Server gesendeten Anforderung aus.</summary>
      <param name="request">Die zu verarbeitende HTTP-Anforderungsnachricht.</param>
      <param name="cancellationToken">Ein Abbruchtoken, das von anderen Objekten oder Threads verwendet werden kann, um Nachricht vom Abbruch zu empfangen.</param>
      <returns>Die HTTP-Anforderungsnachricht, die verarbeitet wurde.</returns>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.ProcessResponse(System.Net.Http.HttpResponseMessage,System.Threading.CancellationToken)">
      <summary>Jede Antwort vom Server wird verarbeitet.</summary>
      <param name="response">Die zu verarbeitende HTTP-Antwortnachricht.</param>
      <param name="cancellationToken">Ein Abbruchtoken, das von anderen Objekten oder Threads verwendet werden kann, um Nachricht vom Abbruch zu empfangen.</param>
      <returns>Die verarbeitete HTTP-Antwortnachricht.</returns>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Sendet eine HTTP-Anforderung an den inneren Handler, der als asynchroner Vorgang an den Server gesendet werden soll.</summary>
      <param name="request">Die an den Server zu sendende HTTP-Anforderungsmeldung.</param>
      <param name="cancellationToken">Ein Abbruchtoken, das von anderen Objekten oder Threads verwendet werden kann, um Nachricht vom Abbruch zu empfangen.</param>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="request" /> war <see langword="null" />.</exception>
    </member>
    <member name="T:System.Net.Http.MultipartContent">
      <summary>Stellt eine Auflistung von <see cref="T:System.Net.Http.HttpContent" />-Objekten bereit, die mithilfe der multipart/*-Inhaltstypspezifikation serialisiert werden.</summary>
    </member>
    <member name="M:System.Net.Http.MultipartContent.#ctor">
      <summary>Erstellt eine neue Instanz der <see cref="T:System.Net.Http.MultipartContent" />-Klasse.</summary>
    </member>
    <member name="M:System.Net.Http.MultipartContent.#ctor(System.String)">
      <summary>Erstellt eine neue Instanz der <see cref="T:System.Net.Http.MultipartContent" />-Klasse.</summary>
      <param name="subtype">Der Untertyp des Multipart-Inhalts.</param>
      <exception cref="T:System.ArgumentException">Die <paramref name="subtype" /> war <see langword="null" /> enthält nur Leerzeichen.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartContent.#ctor(System.String,System.String)">
      <summary>Erstellt eine neue Instanz der <see cref="T:System.Net.Http.MultipartContent" />-Klasse.</summary>
      <param name="subtype">Der Untertyp des Multipart-Inhalts.</param>
      <param name="boundary">Die Begrenzungszeichenfolge für den Multipart-Inhalt.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="subtype" /> war <see langword="null" /> oder eine leere Zeichenfolge ().  
Die <paramref name="boundary" /> war <see langword="null" /> enthält nur Leerzeichen.  

oder - 
Die <paramref name="boundary" /> endet mit einem Leerzeichen.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Die Länge des <paramref name="boundary" /> war größer als 70.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartContent.Add(System.Net.Http.HttpContent)">
      <summary>Fügen Sie Mehrfach-HTTP-Inhalt einer Sammlung von <see cref="T:System.Net.Http.HttpContent" />-Objekten hinzu, die unter Verwendung der multipart/*-Inhaltstypspezifikation serialisiert werden.</summary>
      <param name="content">Der zur Auflistung hinzuzufügende HTTP-Inhalt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="content" /> war <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartContent.CreateContentReadStreamAsync">
      <summary>Serialisiert den HTTP-Inhalt als asynchroner Vorgang in einen Datenstrom und verwendet dazu die multipart/*-Codierung.</summary>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.Dispose(System.Boolean)">
      <summary>Gibt die vom <see cref="T:System.Net.Http.MultipartContent" /> verwendeten, nicht verwalteten Ressourcen frei und verwirft optional auch die verwalteten Ressourcen.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben. <see langword="false" />, wenn ausschließlich nicht verwaltete Ressourcen freigegeben werden sollen.</param>
    </member>
    <member name="M:System.Net.Http.MultipartContent.GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der die Collection von <see cref="T:System.Net.Http.HttpContent" />-Objekten durchläuft, die mithilfe der Multipart/*-Inhaltstypspezifikation serialisiert werden.</summary>
      <returns>Ein Objekt, das zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary>Serialisiert den mehrteiligen HTTP-Inhalt in einen Datenstrom als asynchroner Vorgang.</summary>
      <param name="stream">Der Zieldatenstrom.</param>
      <param name="context">Informationen über den Transport (z.B. Kanalbindungstoken). Dieser Parameter kann <see langword="null" /> sein.</param>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.System#Collections#IEnumerable#GetEnumerator">
      <summary>Die explizite Implementierung der <see cref="M:System.Net.Http.MultipartContent.GetEnumerator" />-Methode.</summary>
      <returns>Ein Objekt, das zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)">
      <summary>Bestimmt, ob der mehrteilige HTTP-Inhalt eine gültige Länge in Bytes hat.</summary>
      <param name="length">Die Länge des HTTP-Inhalts in Bytes.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="length" /> eine gültige Länge ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.MultipartFormDataContent">
      <summary>Stellt einen Container für den Inhalt bereit, der mithilfe des multipart/form-data-MIME-Typs codiert wird.</summary>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.#ctor">
      <summary>Erstellt eine neue Instanz der <see cref="T:System.Net.Http.MultipartFormDataContent" />-Klasse.</summary>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.#ctor(System.String)">
      <summary>Erstellt eine neue Instanz der <see cref="T:System.Net.Http.MultipartFormDataContent" />-Klasse.</summary>
      <param name="boundary">Die Begrenzungszeichenfolge für den Multipart-Form-Dateninhalt.</param>
      <exception cref="T:System.ArgumentException">Die <paramref name="boundary" /> war <see langword="null" /> enthält nur Leerzeichen.  

oder - 
Die <paramref name="boundary" /> endet mit einem Leerzeichen.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Die Länge des <paramref name="boundary" /> war größer als 70.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent)">
      <summary>Fügen Sie HTTP-Inhalt einer Auflistung von <see cref="T:System.Net.Http.HttpContent" />-Objekten hinzu, die in multipart/form-data-MIME-Typ serialisiert werden.</summary>
      <param name="content">Der zur Auflistung hinzuzufügende HTTP-Inhalt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="content" /> war <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent,System.String)">
      <summary>Fügen Sie HTTP-Inhalt einer Auflistung von <see cref="T:System.Net.Http.HttpContent" />-Objekten hinzu, die in multipart/form-data-MIME-Typ serialisiert werden.</summary>
      <param name="content">Der zur Auflistung hinzuzufügende HTTP-Inhalt.</param>
      <param name="name">Der Name für den HTTP-Inhalt, der hinzugefügt wird.</param>
      <exception cref="T:System.ArgumentException">Die <paramref name="name" /> war <see langword="null" /> enthält nur Leerzeichen.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="content" /> war <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent,System.String,System.String)">
      <summary>Fügen Sie HTTP-Inhalt einer Auflistung von <see cref="T:System.Net.Http.HttpContent" />-Objekten hinzu, die in multipart/form-data-MIME-Typ serialisiert werden.</summary>
      <param name="content">Der zur Auflistung hinzuzufügende HTTP-Inhalt.</param>
      <param name="name">Der Name für den HTTP-Inhalt, der hinzugefügt wird.</param>
      <param name="fileName">Der Name der Datei, für den zur Auflistung hinzuzufügenden HTTP-Inhalt.</param>
      <exception cref="T:System.ArgumentException">Die <paramref name="name" /> war <see langword="null" /> enthält nur Leerzeichen.  

oder - 
Die <paramref name="fileName" /> war <see langword="null" /> enthält nur Leerzeichen.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="content" /> war <see langword="null" />.</exception>
    </member>
    <member name="T:System.Net.Http.ReadOnlyMemoryContent" />
    <member name="M:System.Net.Http.ReadOnlyMemoryContent.#ctor(System.ReadOnlyMemory{System.Byte})">
      <param name="content" />
    </member>
    <member name="T:System.Net.Http.SocketsHttpHandler">
      <summary>Stellt den Standardnachrichtenhandler bereit, der von <see cref="T:System.Net.Http.HttpClient" /> in .NET Core 2.1 und höher verwendet wird.</summary>
    </member>
    <member name="M:System.Net.Http.SocketsHttpHandler.#ctor" />
    <member name="P:System.Net.Http.SocketsHttpHandler.AllowAutoRedirect" />
    <member name="P:System.Net.Http.SocketsHttpHandler.AutomaticDecompression">
      <summary>Ruft den Typ der Dekomprimierungsmethode ab, die vom Handler für die automatische Dekomprimierung von Antworten mit HTTP-Inhalt verwendet wird, oder legt den Typ fest.</summary>
      <returns>Der Typ der dekomprimierungsmethode, die vom Handler für die automatische Dekomprimierung der http-Inhalts Antwort verwendet wird.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.ConnectTimeout" />
    <member name="P:System.Net.Http.SocketsHttpHandler.CookieContainer">
      <summary>Ruft das Containerobjekt für verwaltete Cookies ab oder legt dieses fest.</summary>
      <returns>Das verwaltete cookiecontainerobjekt.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.Credentials" />
    <member name="P:System.Net.Http.SocketsHttpHandler.DefaultProxyCredentials">
      <summary>Wenn der Standardproxy (Systemproxy) verwendet wird, werden die Anmeldeinformationen abgerufen oder festgelegt, die verwendet werden, um den Standardproxyserver für die Authentifizierung zu übermitteln.</summary>
      <returns>Die Anmelde Informationen, die zum Authentifizieren des Benutzers bei einem authentifizier enden Proxy verwendet werden.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.Expect100ContinueTimeout" />
    <member name="P:System.Net.Http.SocketsHttpHandler.MaxAutomaticRedirections">
      <summary>Ruft die maximale Anzahl von zulässigen HTTP-Umleitungen ab oder legt diese fest.</summary>
      <returns>Die maximal zulässige Anzahl von HTTP-Umleitungen.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.MaxConnectionsPerServer">
      <summary>Ruft die maximale Anzahl gleichzeitiger TCP-Verbindungen ab, die für einen einzelnen Server zulässig sind, oder legt diese fest.</summary>
      <returns>Die maximale Anzahl gleichzeitiger TCP-Verbindungen, die für einen einzelnen Server zulässig sind.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.MaxResponseDrainSize">
      <summary>Ruft die maximale Datenmenge aus Antworten in Byte ab oder legt diese fest.</summary>
      <returns>Die maximale Datenmenge, die von Antworten in Bytes abgezogen werden kann.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.MaxResponseHeadersLength">
      <summary>Ruft die maximale Länge des Antwortheaders in Kilobyte (1024 Byte) ab oder legt diese fest.</summary>
      <returns>Die maximale Größe des Header Teils aus der Serverantwort in Kilobyte.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.PooledConnectionIdleTimeout">
      <summary>Ruft ab oder legt fest, wie lange sich eine Verbindung im Leerlauf im Pool befinden kann, damit sie als wiederverwendbar eingestuft wird.</summary>
      <returns>Die maximale Leerlaufzeit für eine Verbindung im Pool. Der Standardwert für diese Eigenschaft ist 2 Minuten.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Der angegebene Wert ist kleiner als <see cref="F:System.TimeSpan.Zero" /> oder gleich <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />.</exception>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.PooledConnectionLifetime" />
    <member name="P:System.Net.Http.SocketsHttpHandler.PreAuthenticate">
      <summary>Ruft einen Wert ab, der angibt, ob vom Handler mit der Anforderung ein Autorisierungsheader gesendet wird, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn der Handler einen Autorisierungs Header mit der Anforderung sendet. <see langword="false" />andernfalls.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.Properties" />
    <member name="P:System.Net.Http.SocketsHttpHandler.Proxy">
      <summary>Ruft den benutzerdefinierten Proxy ab, wenn die  <see cref="P:System.Net.Http.SocketsHttpHandler.UseProxy" />-Eigenschaft <see langword="true" /> ist, oder legt diesen fest.</summary>
      <returns>Der benutzerdefinierte Proxy.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.ResponseDrainTimeout" />
    <member name="P:System.Net.Http.SocketsHttpHandler.SslOptions">
      <summary>Ruft die Optionen ab, die für die TLS-Clientauthentifizierung verwendet werden, oder legt diese fest.</summary>
      <returns>Der Satz von Optionen, die für die TLS-Client Authentifizierung verwendet werden.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.UseCookies" />
    <member name="P:System.Net.Http.SocketsHttpHandler.UseProxy" />
    <member name="T:System.Net.Http.StreamContent">
      <summary>Stellt HTTP-Inhalt auf Grundlage eines Streams bereit.</summary>
    </member>
    <member name="M:System.Net.Http.StreamContent.#ctor(System.IO.Stream)">
      <summary>Erstellt eine neue Instanz der <see cref="T:System.Net.Http.StreamContent" />-Klasse.</summary>
      <param name="content">Der zum Initialisieren von <see cref="T:System.Net.Http.StreamContent" />verwendete Inhalt.</param>
    </member>
    <member name="M:System.Net.Http.StreamContent.#ctor(System.IO.Stream,System.Int32)">
      <summary>Erstellt eine neue Instanz der <see cref="T:System.Net.Http.StreamContent" />-Klasse.</summary>
      <param name="content">Der zum Initialisieren von <see cref="T:System.Net.Http.StreamContent" />verwendete Inhalt.</param>
      <param name="bufferSize">Die verfügbare Größe des Puffers in Byte für die <see cref="T:System.Net.Http.StreamContent" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="content" /> war <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Die <paramref name="bufferSize" /> war kleiner oder gleich 0 (null).</exception>
    </member>
    <member name="M:System.Net.Http.StreamContent.CreateContentReadStreamAsync">
      <summary>Schreibt den Inhalt des HTTP-Datenstroms als asynchroner Vorgang in einen Speicherdatenstrom.</summary>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.StreamContent.Dispose(System.Boolean)">
      <summary>Gibt die vom <see cref="T:System.Net.Http.StreamContent" /> verwendeten, nicht verwalteten Ressourcen frei und verwirft optional auch die verwalteten Ressourcen.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben. <see langword="false" />, wenn ausschließlich nicht verwaltete Ressourcen freigegeben werden sollen.</param>
    </member>
    <member name="M:System.Net.Http.StreamContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary>Serialisiert den HTTP-Inhalt in einen Datenstrom als asynchroner Vorgang.</summary>
      <param name="stream">Der Zieldatenstrom.</param>
      <param name="context">Informationen über den Transport (z.B. Kanalbindungstoken). Dieser Parameter kann <see langword="null" /> sein.</param>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.StreamContent.TryComputeLength(System.Int64@)">
      <summary>Bestimmt, ob der Datenstrominhalt eine gültige Länge in Bytes hat.</summary>
      <param name="length">Die Länge des Datenstrominhalts in Bytes.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="length" /> eine gültige Länge ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.StringContent">
      <summary>Stellt HTTP-Inhalt auf Grundlage einer Zeichenfolge bereit.</summary>
    </member>
    <member name="M:System.Net.Http.StringContent.#ctor(System.String)">
      <summary>Erstellt eine neue Instanz der <see cref="T:System.Net.Http.StringContent" />-Klasse.</summary>
      <param name="content">Der zum Initialisieren von <see cref="T:System.Net.Http.StringContent" />verwendete Inhalt.</param>
    </member>
    <member name="M:System.Net.Http.StringContent.#ctor(System.String,System.Text.Encoding)">
      <summary>Erstellt eine neue Instanz der <see cref="T:System.Net.Http.StringContent" />-Klasse.</summary>
      <param name="content">Der Inhalt, der zum Initialisieren der <see cref="T:System.Net.Http.StringContent" /> verwendet wird.</param>
      <param name="encoding">Die für den Inhalt zu verwendende Codierung.</param>
    </member>
    <member name="M:System.Net.Http.StringContent.#ctor(System.String,System.Text.Encoding,System.String)">
      <summary>Erstellt eine neue Instanz der <see cref="T:System.Net.Http.StringContent" />-Klasse.</summary>
      <param name="content">Der Inhalt, der zum Initialisieren der <see cref="T:System.Net.Http.StringContent" /> verwendet wird.</param>
      <param name="encoding">Die für den Inhalt zu verwendende Codierung.</param>
      <param name="mediaType">Der Medientyp, der für den Inhalt verwendet werden soll.</param>
    </member>
  </members>
</doc>