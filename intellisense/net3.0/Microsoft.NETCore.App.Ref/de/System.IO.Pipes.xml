<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.IO.Pipes</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Win32.SafeHandles.SafePipeHandle">
      <summary>Stellt eine Wrapperklasse für ein Pipehandle dar.</summary>
    </member>
    <member name="M:Microsoft.Win32.SafeHandles.SafePipeHandle.#ctor(System.IntPtr,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.Win32.SafeHandles.SafePipeHandle" />-Klasse.</summary>
      <param name="preexistingHandle">Ein <see cref="T:System.IntPtr" />-Objekt, das das zu verwendende, bereits vorhandene Handle darstellt.</param>
      <param name="ownsHandle">
        <see langword="true" />, um das Handle während der Abschlussphase zuverlässig freizugeben. <see langword="false" />, um eine zuverlässige Freigabe zu verhindern (dies wird nicht empfohlen).</param>
    </member>
    <member name="P:Microsoft.Win32.SafeHandles.SafePipeHandle.IsInvalid" />
    <member name="T:System.IO.Pipes.AnonymousPipeClientStream">
      <summary>Macht die Clientseite eines anonymen Pipestreams verfügbar, der synchrone und asynchrone Lese- und Schreibvorgänge unterstützt.</summary>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" />-Klasse aus dem angegebenen Handle.</summary>
      <param name="direction">Einer der Enumerationswerte, der die Richtung der Pipe bestimmt.  
Anonyme Pipes dürfen nur eine Richtung aufweisen, daher kann <paramref name="direction" /> nicht auf <see cref="F:System.IO.Pipes.PipeDirection.InOut" /> festgelegt werden.</param>
      <param name="safePipeHandle">Ein sicheres Handle für die Pipe, die von diesem <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" />-Objekt gekapselt wird.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="safePipeHandle" /> ist kein gültiges Handle.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="safePipeHandle" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="direction" /> ist auf <see cref="F:System.IO.Pipes.PipeDirection.InOut" /> festgelegt.</exception>
      <exception cref="T:System.IO.IOException">Es ist ein E/A-Fehler aufgetreten, beispielsweise ein Datenträgerfehler.  

oder -  

 Der Stream wurde geschlossen.</exception>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" />-Klasse mit der angegebenen Piperichtung und einer Zeichenfolgendarstellung des Pipehandles.</summary>
      <param name="direction">Einer der Enumerationswerte, der die Richtung der Pipe bestimmt.  
Anonyme Pipes dürfen nur eine Richtung aufweisen, daher kann <paramref name="direction" /> nicht auf <see cref="F:System.IO.Pipes.PipeDirection.InOut" /> festgelegt werden.</param>
      <param name="pipeHandleAsString">Eine Zeichenfolge, die das Pipehandle darstellt.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="pipeHandleAsString" /> ist ein ungültiges Handle.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pipeHandleAsString" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Für <paramref name="direction" /> ist <see cref="F:System.IO.Pipes.PipeDirection.InOut" /> festgelegt.</exception>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" />-Klasse mit der angegebenen Zeichenfolgendarstellung des Pipehandles.</summary>
      <param name="pipeHandleAsString">Eine Zeichenfolge, die das Pipehandle darstellt.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="pipeHandleAsString" /> ist kein gültiges Pipehandle.</exception>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeClientStream.Finalize">
      <summary>Gibt nicht verwaltete Ressourcen frei, und führt andere Bereinigungsvorgänge durch, bevor die <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" />-Instanz von der Garbage Collection freigegeben wird.</summary>
    </member>
    <member name="P:System.IO.Pipes.AnonymousPipeClientStream.ReadMode">
      <summary>Legt den Lesemodus für das <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" />-Objekt fest.</summary>
      <returns>Der <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> für das <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" />-Objekt.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Übertragungsmodus ist nicht gültig. Bei anonymen Pipes wird nur <see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" /> unterstützt.</exception>
      <exception cref="T:System.NotSupportedException">Der Übertragungsmodus lautet <see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" />.</exception>
      <exception cref="T:System.IO.IOException">Die Verbindung wurde unterbrochen, oder es ist ein anderer E/A-Fehler aufgetreten.</exception>
      <exception cref="T:System.ObjectDisposedException">Die Pipe ist geschlossen.</exception>
    </member>
    <member name="P:System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode">
      <summary>Ruft den von der aktuellen Pipe unterstützten Pipeübertragungsmodus ab.</summary>
      <returns>
        <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> unterstützt durch die aktuelle Pipe.</returns>
    </member>
    <member name="T:System.IO.Pipes.AnonymousPipeServerStream">
      <summary>Macht einen Stream um eine anonyme Pipe verfügbar, der synchrone und asynchrone Lese- und Schreibvorgänge unterstützt.</summary>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" />-Klasse.</summary>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" />-Klasse mit der angegebenen Piperichtung.</summary>
      <param name="direction">Einer der Enumerationswerte, der die Richtung der Pipe bestimmt.  
Anonyme Pipes dürfen nur eine Richtung aufweisen, daher kann <paramref name="direction" /> nicht auf <see cref="F:System.IO.Pipes.PipeDirection.InOut" /> festgelegt werden.</param>
      <exception cref="T:System.NotSupportedException">Für <paramref name="direction" /> ist <see cref="F:System.IO.Pipes.PipeDirection.InOut" /> festgelegt.</exception>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" />-Klasse aus den angegebenen Pipehandles.</summary>
      <param name="direction">Einer der Enumerationswerte, der die Richtung der Pipe bestimmt.  
Anonyme Pipes dürfen nur eine Richtung aufweisen, daher kann <paramref name="direction" /> nicht auf <see cref="F:System.IO.Pipes.PipeDirection.InOut" /> festgelegt werden.</param>
      <param name="serverSafePipeHandle">Ein sicheres Handle für die Pipe, die von diesem <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" />-Objekt gekapselt wird.</param>
      <param name="clientSafePipeHandle">Ein sicheres Handle für das <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" />-Objekt.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="serverSafePipeHandle" /> oder <paramref name="clientSafePipeHandle" /> ist ein ungültiges Handle.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serverSafePipeHandle" /> oder <paramref name="clientSafePipeHandle" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Für <paramref name="direction" /> ist <see cref="F:System.IO.Pipes.PipeDirection.InOut" /> festgelegt.</exception>
      <exception cref="T:System.IO.IOException">Es ist ein E/A-Fehler aufgetreten, beispielsweise ein Datenträgerfehler.  

oder -  

 Der Stream wurde geschlossen.</exception>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" />-Klasse mit der angegebenen Piperichtung und dem angegebenen Vererbbarkeitsmodus.</summary>
      <param name="direction">Einer der Enumerationswerte, der die Richtung der Pipe bestimmt.  
Anonyme Pipes dürfen nur eine Richtung aufweisen, daher kann <paramref name="direction" /> nicht auf <see cref="F:System.IO.Pipes.PipeDirection.InOut" /> festgelegt werden.</param>
      <param name="inheritability">Einer der Enumerationswerte, der bestimmt, ob das zugrunde liegende Handle von untergeordneten Prozessen geerbt werden kann. Muss entweder auf <see cref="F:System.IO.HandleInheritability.None" /> oder auf <see cref="F:System.IO.HandleInheritability.Inheritable" /> festgelegt sein.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="inheritability" /> ist nicht auf <see cref="F:System.IO.HandleInheritability.None" /> oder <see cref="F:System.IO.HandleInheritability.Inheritable" /> festgelegt.</exception>
      <exception cref="T:System.NotSupportedException">Für <paramref name="direction" /> ist <see cref="F:System.IO.Pipes.PipeDirection.InOut" /> festgelegt.</exception>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" />-Klasse mit der angegebenen Piperichtung, dem angegebenen Vererbbarkeitsmodus und der angegebenen Puffergröße.</summary>
      <param name="direction">Einer der Enumerationswerte, der die Richtung der Pipe bestimmt.  
Anonyme Pipes dürfen nur eine Richtung aufweisen, daher kann <paramref name="direction" /> nicht auf <see cref="F:System.IO.Pipes.PipeDirection.InOut" /> festgelegt werden.</param>
      <param name="inheritability">Einer der Enumerationswerte, der bestimmt, ob das zugrunde liegende Handle von untergeordneten Prozessen geerbt werden kann. Muss entweder auf <see cref="F:System.IO.HandleInheritability.None" /> oder auf <see cref="F:System.IO.HandleInheritability.Inheritable" /> festgelegt sein.</param>
      <param name="bufferSize">Die Größe des Puffers. Dieser Wert muss größer oder gleich 0 sein.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="inheritability" /> ist nicht auf <see cref="F:System.IO.HandleInheritability.None" /> oder <see cref="F:System.IO.HandleInheritability.Inheritable" /> festgelegt.  

oder - 
<paramref name="bufferSize" /> ist kleiner als 0.</exception>
      <exception cref="T:System.NotSupportedException">Für <paramref name="direction" /> ist <see cref="F:System.IO.Pipes.PipeDirection.InOut" /> festgelegt.</exception>
    </member>
    <member name="P:System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle">
      <summary>Ruft das sichere Handle für das <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" />-Objekt ab, das gegenwärtig mit dem <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" />-Objekt verbunden ist.</summary>
      <returns>Ein Handle für das <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" />-Objekt, das derzeit mit dem <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" />-Objekt verbunden ist.</returns>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle">
      <summary>Schließt die lokale Kopie des Handles für das <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" />-Objekt.</summary>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.Finalize">
      <summary>Gibt nicht verwaltete Ressourcen frei, und führt andere Bereinigungsvorgänge durch, bevor die <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" />-Instanz von der Garbage Collection freigegeben wird.</summary>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString">
      <summary>Ruft das Handle des verbundenen <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" />-Objekts als Zeichenfolge ab.</summary>
      <returns>Eine Zeichenfolge, die das Handle des verbundenen <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" />-Objekts darstellt.</returns>
    </member>
    <member name="P:System.IO.Pipes.AnonymousPipeServerStream.ReadMode">
      <summary>Legt den Lesemodus für das <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" />-Objekt fest. Für anonyme Pipes muss der Übertragungsmodus <see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" /> sein.</summary>
      <returns>Der Lesemodus für das <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" />-Objekt.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Übertragungsmodus ist nicht gültig. Bei anonymen Pipes wird nur <see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" /> unterstützt.</exception>
      <exception cref="T:System.NotSupportedException">Die Eigenschaft ist auf <see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" /> festgelegt. Dies wird für anonyme Pipes nicht unterstützt.</exception>
      <exception cref="T:System.IO.IOException">Die Verbindung wurde unterbrochen, oder es ist ein anderer E/A-Fehler aufgetreten.</exception>
      <exception cref="T:System.ObjectDisposedException">Die Pipe ist geschlossen.</exception>
    </member>
    <member name="P:System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode">
      <summary>Ruft den von der aktuellen Pipe unterstützten Pipeübertragungsmodus ab.</summary>
      <returns>Die <see cref="T:System.IO.Pipes.PipeTransmissionMode" />, die von der aktuellen Pipe unterstützt wird.</returns>
    </member>
    <member name="T:System.IO.Pipes.NamedPipeClientStream">
      <summary>Macht einen <see cref="T:System.IO.Stream" /> um eine benannte Pipe verfügbar, der synchrone und asynchrone Lese- und Schreibvorgänge unterstützt.</summary>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Pipes.NamedPipeClientStream" />-Klasse für das angegebene Pipehandle mit der angegebenen Piperichtung.</summary>
      <param name="direction">Einer der Enumerationswerte, der die Richtung der Pipe bestimmt.</param>
      <param name="isAsync">
        <see langword="true" />, um anzugeben, dass das Handle asynchron geöffnet wurde, andernfalls <see langword="false" />.</param>
      <param name="isConnected">
        <see langword="true" />, um anzugeben, dass die Pipe verbunden ist, andernfalls <see langword="false" />.</param>
      <param name="safePipeHandle">Ein sicheres Handle für die Pipe, die von diesem <see cref="T:System.IO.Pipes.NamedPipeClientStream" />-Objekt gekapselt wird.</param>
      <exception cref="T:System.IO.IOException">Der Stream wurde geschlossen.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="safePipeHandle" /> ist kein gültiges Handle.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="safePipeHandle" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="direction" /> ist kein gültiger <see cref="T:System.IO.Pipes.PipeDirection" />-Wert.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Pipes.NamedPipeClientStream" />-Klasse mit dem angegebenen Pipenamen.</summary>
      <param name="pipeName">Der Name der Pipe.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pipeName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="pipeName" /> ist eine Zeichenfolge mit der Länge 0 (null).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="pipeName" /> ist auf „anonym“ festgelegt.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Pipes.NamedPipeClientStream" />-Klasse mit dem angegebenen Pipe- und Servernamen.</summary>
      <param name="serverName">Der Name des Remotecomputers, mit dem eine Verbindung hergestellt werden soll, oder ".", um den lokalen Computer anzugeben.</param>
      <param name="pipeName">Der Name der Pipe.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pipeName" /> oder <paramref name="serverName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="pipeName" /> oder <paramref name="serverName" /> ist eine Zeichenfolge der Länge 0 (null).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="pipeName" /> ist auf „anonym“ festgelegt.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Pipes.NamedPipeClientStream" />-Klasse mit dem angegebenen Pipe- und Servernamen und der angegebenen Piperichtung.</summary>
      <param name="serverName">Der Name des Remotecomputers, mit dem eine Verbindung hergestellt werden soll, oder ".", um den lokalen Computer anzugeben.</param>
      <param name="pipeName">Der Name der Pipe.</param>
      <param name="direction">Einer der Enumerationswerte, der die Richtung der Pipe bestimmt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pipeName" /> oder <paramref name="serverName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="pipeName" /> oder <paramref name="serverName" /> ist eine Zeichenfolge der Länge 0 (null).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="pipeName" /> ist auf „anonym“ festgelegt.  

oder - 
<paramref name="direction" /> ist kein gültiger <see cref="T:System.IO.Pipes.PipeDirection" />-Wert.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Pipes.NamedPipeClientStream" />-Klasse mit dem angegebenen Pipe- und Servernamen, der angegebenen Piperichtung und den angegebenen Pipeoptionen.</summary>
      <param name="serverName">Der Name des Remotecomputers, mit dem eine Verbindung hergestellt werden soll, oder ".", um den lokalen Computer anzugeben.</param>
      <param name="pipeName">Der Name der Pipe.</param>
      <param name="direction">Einer der Enumerationswerte, der die Richtung der Pipe bestimmt.</param>
      <param name="options">Einer der Enumerationswerte, der bestimmt, wie die Pipe geöffnet oder erstellt wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pipeName" /> oder <paramref name="serverName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="pipeName" /> oder <paramref name="serverName" /> ist eine Zeichenfolge der Länge 0 (null).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="pipeName" /> ist auf „anonym“ festgelegt.  

oder - 
<paramref name="direction" /> ist kein gültiger <see cref="T:System.IO.Pipes.PipeDirection" /> -Wert.  

oder - 
<paramref name="options" /> ist kein gültiger <see cref="T:System.IO.Pipes.PipeOptions" />-Wert.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Pipes.NamedPipeClientStream" />-Klasse mit dem angegebenen Pipe- und Servernamen, der angegebenen Piperichtung, den angegebenen Pipeoptionen und der angegebenen Ebene des Sicherheitsidentitätswechsels.</summary>
      <param name="serverName">Der Name des Remotecomputers, mit dem eine Verbindung hergestellt werden soll, oder ".", um den lokalen Computer anzugeben.</param>
      <param name="pipeName">Der Name der Pipe.</param>
      <param name="direction">Einer der Enumerationswerte, der die Richtung der Pipe bestimmt.</param>
      <param name="options">Einer der Enumerationswerte, der bestimmt, wie die Pipe geöffnet oder erstellt wird.</param>
      <param name="impersonationLevel">Einer der Enumerationswerte, der die Ebene des Sicherheitsidentitätswechsels bestimmt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pipeName" /> oder <paramref name="serverName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="pipeName" /> oder <paramref name="serverName" /> ist eine Zeichenfolge der Länge 0 (null).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="pipeName" /> ist auf „anonym“ festgelegt.  

oder - 
<paramref name="direction" /> ist kein gültiger <see cref="T:System.IO.Pipes.PipeDirection" /> -Wert.  

oder - 
<paramref name="options" /> ist kein gültiger <see cref="T:System.IO.Pipes.PipeOptions" /> -Wert.  

oder - 
<paramref name="impersonationLevel" /> ist kein gültiger <see cref="T:System.Security.Principal.TokenImpersonationLevel" />-Wert.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Pipes.NamedPipeClientStream" />-Klasse mit dem angegebenen Pipe- und Servernamen, der angegebenen Piperichtung, den angegebenen Pipeoptionen, der angegebenen Ebene des Sicherheitsidentitätswechsels und dem angegebenen Vererbbarkeitsmodus.</summary>
      <param name="serverName">Der Name des Remotecomputers, mit dem eine Verbindung hergestellt werden soll, oder ".", um den lokalen Computer anzugeben.</param>
      <param name="pipeName">Der Name der Pipe.</param>
      <param name="direction">Einer der Enumerationswerte, der die Richtung der Pipe bestimmt.</param>
      <param name="options">Einer der Enumerationswerte, der bestimmt, wie die Pipe geöffnet oder erstellt wird.</param>
      <param name="impersonationLevel">Einer der Enumerationswerte, der die Ebene des Sicherheitsidentitätswechsels bestimmt.</param>
      <param name="inheritability">Einer der Enumerationswerte, der bestimmt, ob das zugrunde liegende Handle von untergeordneten Prozessen geerbt werden kann.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pipeName" /> oder <paramref name="serverName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="pipeName" /> oder <paramref name="serverName" /> ist eine Zeichenfolge der Länge 0 (null).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="pipeName" /> ist auf „anonym“ festgelegt.  

oder - 
<paramref name="direction" /> ist kein gültiger <see cref="T:System.IO.Pipes.PipeDirection" /> -Wert.  

oder - 
<paramref name="options" /> ist kein gültiger <see cref="T:System.IO.Pipes.PipeOptions" /> -Wert.  

oder - 
<paramref name="impersonationLevel" /> ist kein gültiger <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> -Wert.  

oder - 
<paramref name="inheritability" /> ist kein gültiger <see cref="T:System.IO.HandleInheritability" />-Wert.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.Connect">
      <summary>Stellt eine Verbindung mit einem wartenden Server mit einem unendlichen Timeoutwert her.</summary>
      <exception cref="T:System.InvalidOperationException">Es ist bereits eine Verbindung mit dem Client vorhanden.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.Connect(System.Int32)">
      <summary>Stellt innerhalb des angegebenen Timeouts eine Verbindung mit einem wartenden Server her.</summary>
      <param name="timeout">Die Anzahl von Millisekunden, für die auf eine Antwort des Servers gewartet werden soll, bevor das Timeout der Verbindung erreicht ist.</param>
      <exception cref="T:System.TimeoutException">Mit dem Server konnte innerhalb des angegebenen <paramref name="timeout" />-Zeitraums keine Verbindung hergestellt werden.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> ist kleiner als 0 und nicht auf <see cref="F:System.Threading.Timeout.Infinite" /> festgelegt.</exception>
      <exception cref="T:System.InvalidOperationException">Es ist bereits eine Verbindung mit dem Client vorhanden.</exception>
      <exception cref="T:System.IO.IOException">Der Server wird mit einem anderen Client verbunden, und das Timeout ist abgelaufen.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync">
      <summary>Stellt eine asynchrone Verbindung mit einem wartenden Server mit einem unendlichen Timeoutwert her.</summary>
      <returns>Eine Aufgabe, die den asynchronen Verbindungsvorgang darstellt.</returns>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32)">
      <summary>Stellt innerhalb des angegebenen Timeouts eine asynchrone Verbindung mit einem wartenden Server her.</summary>
      <param name="timeout">Die Anzahl von Millisekunden, für die auf eine Antwort des Servers gewartet werden soll, bevor das Timeout der Verbindung erreicht ist.</param>
      <returns>Eine Aufgabe, die den asynchronen Verbindungsvorgang darstellt.</returns>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32,System.Threading.CancellationToken)">
      <summary>Stellt innerhalb des angegebenen Timeouts eine asynchrone Verbindung mit einem wartenden Server her und überwacht Abbruchanforderungen.</summary>
      <param name="timeout">Die Anzahl von Millisekunden, für die auf eine Antwort des Servers gewartet werden soll, bevor das Timeout der Verbindung erreicht ist.</param>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />sein.</param>
      <returns>Eine Aufgabe, die den asynchronen Verbindungsvorgang darstellt.</returns>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Threading.CancellationToken)">
      <summary>Stellt eine asynchrone Verbindung mit einem wartenden Server her und überwacht Abbruchanforderungen.</summary>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />sein.</param>
      <returns>Eine Aufgabe, die den asynchronen Verbindungsvorgang darstellt.</returns>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.Finalize">
      <summary>Gibt nicht verwaltete Ressourcen frei, und führt andere Bereinigungsvorgänge durch, bevor die <see cref="T:System.IO.Pipes.NamedPipeClientStream" />-Instanz von der Garbage Collection freigegeben wird.</summary>
    </member>
    <member name="P:System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances">
      <summary>Ruft die Anzahl von Serverinstanzen mit dem gleichen Pipenamen ab.</summary>
      <returns>Die Anzahl von Serverinstanzen mit dem gleichen Pipenamen.</returns>
      <exception cref="T:System.InvalidOperationException">Es wurde kein Pipehandle festgelegt.  

oder - 
Das aktuelle <see cref="T:System.IO.Pipes.NamedPipeClientStream" />-Objekt hat noch keine Verbindung mit einem <see cref="T:System.IO.Pipes.NamedPipeServerStream" />-Objekt hergestellt.</exception>
      <exception cref="T:System.IO.IOException">Die Pipe wurde unterbrochen, oder es ist ein E/A-Fehler aufgetreten.</exception>
      <exception cref="T:System.ObjectDisposedException">Das zugrunde liegende Pipehandle wird geschlossen.</exception>
    </member>
    <member name="T:System.IO.Pipes.NamedPipeServerStream">
      <summary>Macht einen <see cref="T:System.IO.Stream" /> um eine benannte Pipe verfügbar, der synchrone und asynchrone Lese- und Schreibvorgänge unterstützt.</summary>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Pipes.NamedPipeServerStream" />-Klasse aus dem angegebenen Pipehandle.</summary>
      <param name="direction">Einer der Enumerationswerte, der die Richtung der Pipe bestimmt.</param>
      <param name="isAsync">
        <see langword="true" />, um anzugeben, dass das Handle asynchron geöffnet wurde, andernfalls <see langword="false" />.</param>
      <param name="isConnected">
        <see langword="true" />, um anzugeben, dass die Pipe verbunden ist, andernfalls <see langword="false" />.</param>
      <param name="safePipeHandle">Ein sicheres Handle für die Pipe, die von diesem <see cref="T:System.IO.Pipes.NamedPipeServerStream" />-Objekt gekapselt wird.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="direction" /> ist kein gültiger <see cref="T:System.IO.Pipes.PipeDirection" />-Wert.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="safePipeHandle" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="safePipeHandle" /> ist ein ungültiges Handle.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="safePipeHandle" /> ist kein gültiges Pipehandle.  

oder - 
Die maximale Anzahl von Serverinstanzen wurde überschritten.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Pipes.NamedPipeServerStream" />-Klasse mit dem angegebenen Pipenamen.</summary>
      <param name="pipeName">Der Name der Pipe.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pipeName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="pipeName" /> ist eine Zeichenfolge mit der Länge 0 (null).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="pipeName" /> ist auf „anonym“ festgelegt.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="pipeName" /> enthält einen Doppelpunkt (:).</exception>
      <exception cref="T:System.PlatformNotSupportedException">Das Betriebssystem ist Windows Millennium Edition, Windows 98 oder Windows 95. Diese werden nicht unterstützt.</exception>
      <exception cref="T:System.IO.IOException">Die maximale Anzahl von Serverinstanzen wurde überschritten.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Pipes.NamedPipeServerStream" />-Klasse mit den angegebenen Werten für Pipename und Piperichtung.</summary>
      <param name="pipeName">Der Name der Pipe.</param>
      <param name="direction">Einer der Enumerationswerte, der die Richtung der Pipe bestimmt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pipeName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="pipeName" /> ist eine Zeichenfolge mit der Länge 0 (null).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="pipeName" /> ist auf „anonym“ festgelegt.  

oder - 
<paramref name="direction" /> ist kein gültiger <see cref="T:System.IO.Pipes.PipeDirection" /> -Wert.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="pipeName" /> enthält einen Doppelpunkt (:).</exception>
      <exception cref="T:System.PlatformNotSupportedException">Das Betriebssystem ist Windows Millennium Edition, Windows 98 oder Windows 95. Diese werden nicht unterstützt.</exception>
      <exception cref="T:System.IO.IOException">Die maximale Anzahl von Serverinstanzen wurde überschritten.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Pipes.NamedPipeServerStream" />-Klasse mit dem angegebenen Pipenamen, der angegebenen Piperichtung und der angegebenen maximalen Anzahl von Serverinstanzen.</summary>
      <param name="pipeName">Der Name der Pipe.</param>
      <param name="direction">Einer der Enumerationswerte, der die Richtung der Pipe bestimmt.</param>
      <param name="maxNumberOfServerInstances">Die maximale Anzahl von Serverinstanzen mit dem gleichen Namen. Für diesen Wert kann <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" /> übergeben werden.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pipeName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="pipeName" /> ist eine Zeichenfolge mit der Länge 0 (null).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="pipeName" /> ist auf „anonym“ festgelegt.  

oder - 
<paramref name="direction" /> ist kein gültiger <see cref="T:System.IO.Pipes.PipeDirection" /> -Wert.  

oder - 
Es ist eine nicht negative Zahl erforderlich.  

oder - 
<paramref name="maxNumberofServerInstances" /> ist kleiner als -1 oder größer als 254 (-1 gibt <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" /> an). 

oder - 
<see cref="F:System.IO.HandleInheritability.None" /> oder <see cref="F:System.IO.HandleInheritability.Inheritable" /> ist erforderlich.  

oder - 
Zugriffsrechte sind auf die Flags <see cref="F:System.IO.Pipes.PipeAccessRights.ChangePermissions" />, <see cref="F:System.IO.Pipes.PipeAccessRights.TakeOwnership" /> und <see cref="F:System.IO.Pipes.PipeAccessRights.AccessSystemSecurity" /> beschränkt.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="pipeName" /> enthält einen Doppelpunkt (:).</exception>
      <exception cref="T:System.PlatformNotSupportedException">Das Betriebssystem ist Windows Millennium Edition, Windows 98 oder Windows 95. Diese werden nicht unterstützt.</exception>
      <exception cref="T:System.IO.IOException">Die maximale Anzahl von Serverinstanzen wurde überschritten.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Pipes.NamedPipeServerStream" />-Klasse mit dem angegebenen Pipenamen, der angegebenen Piperichtung, der angegebenen maximalen Anzahl von Serverinstanzen und dem angegebenen Übertragungsmodus.</summary>
      <param name="pipeName">Der Name der Pipe.</param>
      <param name="direction">Einer der Enumerationswerte, der die Richtung der Pipe bestimmt.</param>
      <param name="maxNumberOfServerInstances">Die maximale Anzahl von Serverinstanzen mit dem gleichen Namen. Für diesen Wert kann <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" /> übergeben werden.</param>
      <param name="transmissionMode">Einer der Enumerationswerte, der den Übertragungsmodus der Pipe bestimmt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pipeName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="pipeName" /> ist eine Zeichenfolge mit der Länge 0 (null).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="pipeName" /> ist auf „anonym“ festgelegt.  

oder - 
<paramref name="direction" /> ist kein gültiger <see cref="T:System.IO.Pipes.PipeDirection" /> -Wert.  

oder - 
<paramref name="maxNumberofServerInstances" /> ist kleiner als -1 oder größer als 254 (-1 gibt <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />an).</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="pipeName" /> enthält einen Doppelpunkt (:).</exception>
      <exception cref="T:System.PlatformNotSupportedException">Das Betriebssystem ist Windows Millennium Edition, Windows 98 oder Windows 95. Diese werden nicht unterstützt.</exception>
      <exception cref="T:System.IO.IOException">Die maximale Anzahl von Serverinstanzen wurde überschritten.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Pipes.NamedPipeServerStream" />-Klasse mit dem angegebenen Pipenamen, der angegebenen Piperichtung, der angegebenen maximalen Anzahl von Serverinstanzen, dem angegebenen Übertragungsmodus und den angegebenen Pipeoptionen.</summary>
      <param name="pipeName">Der Name der Pipe.</param>
      <param name="direction">Einer der Enumerationswerte, der die Richtung der Pipe bestimmt.</param>
      <param name="maxNumberOfServerInstances">Die maximale Anzahl von Serverinstanzen mit dem gleichen Namen. Für diesen Wert kann <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" /> übergeben werden.</param>
      <param name="transmissionMode">Einer der Enumerationswerte, der den Übertragungsmodus der Pipe bestimmt.</param>
      <param name="options">Einer der Enumerationswerte, der bestimmt, wie die Pipe geöffnet oder erstellt wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pipeName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="pipeName" /> ist eine Zeichenfolge mit der Länge 0 (null).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="pipeName" /> ist auf „anonym“ festgelegt.  

oder - 
<paramref name="direction" /> ist kein gültiger <see cref="T:System.IO.Pipes.PipeDirection" /> -Wert.  

oder - 
<paramref name="maxNumberofServerInstances" /> ist kleiner als -1 oder größer als 254 (-1 gibt <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" /> an). 

oder - 
<paramref name="options" /> ist kein gültiger <see cref="T:System.IO.Pipes.PipeOptions" /> -Wert.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="pipeName" /> enthält einen Doppelpunkt (:).</exception>
      <exception cref="T:System.PlatformNotSupportedException">Das Betriebssystem ist Windows Millennium Edition, Windows 98 oder Windows 95. Diese werden nicht unterstützt.</exception>
      <exception cref="T:System.IO.IOException">Die maximale Anzahl von Serverinstanzen wurde überschritten.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Pipes.NamedPipeServerStream" />-Klasse mit dem angegebenen Pipenamen, der angegebenen Piperichtung, der angegebenen maximalen Anzahl von Serverinstanzen, dem angegebenen Übertragungsmodus, den angegebenen Pipeoptionen und der empfohlenen Größe für Eingabe- und Ausgabepuffer.</summary>
      <param name="pipeName">Der Name der Pipe.</param>
      <param name="direction">Einer der Enumerationswerte, der die Richtung der Pipe bestimmt.</param>
      <param name="maxNumberOfServerInstances">Die maximale Anzahl von Serverinstanzen mit dem gleichen Namen. Für diesen Wert kann <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" /> übergeben werden.</param>
      <param name="transmissionMode">Einer der Enumerationswerte, der den Übertragungsmodus der Pipe bestimmt.</param>
      <param name="options">Einer der Enumerationswerte, der bestimmt, wie die Pipe geöffnet oder erstellt wird.</param>
      <param name="inBufferSize">Ein positiver Wert größer als 0, der die Eingabepuffergröße angibt.</param>
      <param name="outBufferSize">Ein positiver Wert größer als 0, der die Ausgabepuffergröße angibt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pipeName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="pipeName" /> ist eine Zeichenfolge mit der Länge 0 (null).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="pipeName" /> ist auf „anonym“ festgelegt.  

oder - 
<paramref name="direction" /> ist kein gültiger <see cref="T:System.IO.Pipes.PipeDirection" /> -Wert.  

oder - 
<paramref name="maxNumberofServerInstances" /> ist kleiner als -1 oder größer als 254 (-1 gibt <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" /> an). 

oder - 
<paramref name="options" /> ist kein gültiger <see cref="T:System.IO.Pipes.PipeOptions" /> -Wert.  

oder - 
<paramref name="inBufferSize" /> ist ein negativer Wert.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="pipeName" /> enthält einen Doppelpunkt (:).</exception>
      <exception cref="T:System.PlatformNotSupportedException">Das Betriebssystem ist Windows Millennium Edition, Windows 98 oder Windows 95. Diese werden nicht unterstützt.</exception>
      <exception cref="T:System.IO.IOException">Die maximale Anzahl von Serverinstanzen wurde überschritten.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.BeginWaitForConnection(System.AsyncCallback,System.Object)">
      <summary>Startet das Warten eines asynchronen Vorgangs auf das Herstellen einer Verbindung durch einen Client.</summary>
      <param name="callback">Die Methode, die aufgerufen wird, wenn ein Client eine Verbindung mit dem <see cref="T:System.IO.Pipes.NamedPipeServerStream" />-Objekt herstellt.</param>
      <param name="state">Ein vom Benutzer bereitgestelltes Objekt, mit dem diese asynchrone Anforderung von anderen Anforderungen unterschieden wird.</param>
      <returns>Ein Objekt, das auf die asynchrone Anforderung verweist.</returns>
      <exception cref="T:System.InvalidOperationException">Die Pipe wurde nicht asynchron geöffnet.  

oder -  

 Eine Pipeverbindung wurde bereits hergestellt.  

oder -  

 Es wurde kein Pipehandle festgelegt.</exception>
      <exception cref="T:System.IO.IOException">Die Pipeverbindung wurde unterbrochen.</exception>
      <exception cref="T:System.ObjectDisposedException">Die Pipe ist geschlossen.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.Disconnect">
      <summary>Trennt die aktuelle Verbindung.</summary>
      <exception cref="T:System.InvalidOperationException">Es wurden noch keine Pipeverbindungen hergestellt.  

oder -  

 Die verbundene Pipe wurde bereits getrennt.  

oder -  

 Es wurde kein Pipehandle festgelegt.</exception>
      <exception cref="T:System.ObjectDisposedException">Die Pipe ist geschlossen.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.EndWaitForConnection(System.IAsyncResult)">
      <summary>Beendet das Warten eines asynchronen Vorgangs auf das Herstellen einer Verbindung durch einen Client.</summary>
      <param name="asyncResult">Die ausstehende asynchrone Anforderung.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Die Pipe wurde nicht asynchron geöffnet.  

oder -  

 Es wurde kein Pipehandle festgelegt.</exception>
      <exception cref="T:System.IO.IOException">Die Pipeverbindung wurde unterbrochen.</exception>
      <exception cref="T:System.ObjectDisposedException">Die Pipe ist geschlossen.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.Finalize">
      <summary>Gibt nicht verwaltete Ressourcen frei, und führt andere Bereinigungsvorgänge durch, bevor die <see cref="T:System.IO.Pipes.NamedPipeServerStream" />-Instanz von der Garbage Collection freigegeben wird.</summary>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.GetImpersonationUserName">
      <summary>Ruft den Benutzernamen des Clients am anderen Ende der Pipe ab.</summary>
      <returns>Der Benutzername des Clients am anderen Ende der Pipe.</returns>
      <exception cref="T:System.InvalidOperationException">Es wurden noch keine Pipeverbindungen hergestellt.  

oder -  

 Die verbundene Pipe wurde bereits getrennt.  

oder -  

 Es wurde kein Pipehandle festgelegt.</exception>
      <exception cref="T:System.ObjectDisposedException">Die Pipe ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Die Pipeverbindung wurde unterbrochen.  

oder -  

 Der Benutzername des Clients ist länger als 19 Zeichen.</exception>
    </member>
    <member name="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances">
      <summary>Stellt die maximale Anzahl von Serverinstanzen dar, die die Systemressourcen zulassen.</summary>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.RunAsClient(System.IO.Pipes.PipeStreamImpersonationWorker)">
      <summary>Ruft einen Delegaten auf, während die Identität des Clients imitiert wird.</summary>
      <param name="impersonationWorker">Der Delegat, der eine aufzurufende Methode angibt.</param>
      <exception cref="T:System.InvalidOperationException">Es wurden noch keine Pipeverbindungen hergestellt.  

oder -  

 Die verbundene Pipe wurde bereits getrennt.  

oder -  

 Es wurde kein Pipehandle festgelegt.</exception>
      <exception cref="T:System.ObjectDisposedException">Die Pipe ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Die Pipeverbindung wurde unterbrochen.  

oder -  

 E/A-Fehler</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.WaitForConnection">
      <summary>Wartet auf das Herstellen einer Verbindung mit diesem <see cref="T:System.IO.Pipes.NamedPipeServerStream" />-Objekt durch einen Client.</summary>
      <exception cref="T:System.InvalidOperationException">Eine Pipeverbindung wurde bereits hergestellt.  

oder -  

 Es wurde kein Pipehandle festgelegt.</exception>
      <exception cref="T:System.ObjectDisposedException">Die Pipe ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Die Pipeverbindung wurde unterbrochen.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync">
      <summary>Wartet asynchron darauf, dass sich ein Client mit diesem <see cref="T:System.IO.Pipes.NamedPipeServerStream" />-Objekt verbindet.</summary>
      <returns>Eine Aufgabe, die den asynchronen Wartevorgang darstellt.</returns>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync(System.Threading.CancellationToken)">
      <summary>Wartet asynchron darauf, dass sich ein Client mit diesem <see cref="T:System.IO.Pipes.NamedPipeServerStream" />-Objekt verbindet und überwacht Abbruchanforderungen.</summary>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen.</param>
      <returns>Eine Aufgabe, die den asynchronen Wartevorgang darstellt.</returns>
    </member>
    <member name="T:System.IO.Pipes.PipeDirection">
      <summary>Gibt die Richtung der Pipe an.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeDirection.In">
      <summary>Gibt an, dass die Piperichtung die Eingangsrichtung ist.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeDirection.InOut">
      <summary>Gibt an, dass die Pipe bidirektional ist.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeDirection.Out">
      <summary>Gibt an, dass die Piperichtung die Ausgangsrichtung ist.</summary>
    </member>
    <member name="T:System.IO.Pipes.PipeOptions">
      <summary>Stellt Optionen zum Erstellen eines <see cref="T:System.IO.Pipes.PipeStream" />-Objekts bereit. Diese Enumeration verfügt über ein <see cref="T:System.FlagsAttribute" />-Attribut, das die bitweise Kombination der Memberwerte zulässt.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeOptions.Asynchronous">
      <summary>Gibt an, dass die Pipe für asynchrone Lese- und Schreibvorgänge verwendet werden kann.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeOptions.CurrentUserOnly" />
    <member name="F:System.IO.Pipes.PipeOptions.None">
      <summary>Gibt an, dass keine zusätzlichen Parameter vorhanden sind.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeOptions.WriteThrough">
      <summary>Gibt an, dass das System durch jeden Zwischencache schreiben und direkt zur Pipe wechseln soll.</summary>
    </member>
    <member name="T:System.IO.Pipes.PipeStream">
      <summary>Macht ein <see cref="T:System.IO.Stream" />-Objekt um eine Pipe verfügbar, das sowohl anonyme als auch benannte Pipes unterstützt.</summary>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Pipes.PipeStream" />-Klasse unter Verwendung des angegebenen <see cref="T:System.IO.Pipes.PipeDirection" />-Werts und der angegebenen Puffergröße.</summary>
      <param name="direction">Einer der <see cref="T:System.IO.Pipes.PipeDirection" />-Werte, die die Richtung des Pipeobjekts angeben.</param>
      <param name="bufferSize">Ein positiver <see cref="T:System.Int32" />-Wert größer oder gleich 0, der die Puffergröße angibt.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="direction" /> ist kein gültiger <see cref="T:System.IO.Pipes.PipeDirection" />-Wert.  

oder - 
<paramref name="bufferSize" /> ist kleiner als 0.</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Pipes.PipeStream" />-Klasse mit der angegebenen <see cref="T:System.IO.Pipes.PipeDirection" />, dem angegebenen <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> und der angegebenen Puffergröße.</summary>
      <param name="direction">Einer der <see cref="T:System.IO.Pipes.PipeDirection" />-Werte, die die Richtung des Pipeobjekts angeben.</param>
      <param name="transmissionMode">Einer der <see cref="T:System.IO.Pipes.PipeTransmissionMode" />-Werte, die den Übertragungsmodus des Pipeobjekts angeben.</param>
      <param name="outBufferSize">Ein positiver <see cref="T:System.Int32" />-Wert größer oder gleich 0, der die Puffergröße angibt.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="direction" /> ist kein gültiger <see cref="T:System.IO.Pipes.PipeDirection" />-Wert.  

oder - 
<paramref name="transmissionMode" /> ist kein gültiger <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> -Wert.  

oder - 
<paramref name="bufferSize" /> ist kleiner als 0.</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Beginnt einen asynchronen Lesevorgang.</summary>
      <param name="buffer">Der Puffer, in den Daten gelesen werden sollen.</param>
      <param name="offset">Der Byteoffset im <paramref name="buffer" />, ab dem gelesen werden soll.</param>
      <param name="count">Die maximale Anzahl der zu lesenden Bytes.</param>
      <param name="callback">Die Methode, die aufgerufen wird, wenn der asynchrone Lesevorgang abgeschlossen ist.</param>
      <param name="state">Ein vom Benutzer bereitgestelltes Objekt, das diese asynchrone Leseanforderung von anderen Anforderungen unterscheidet.</param>
      <returns>Ein <see cref="T:System.IAsyncResult" />-Objekt, das auf den asynchronen Lesevorgang verweist.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> ist kleiner als 0.  

oder - 
<paramref name="count" /> ist kleiner als 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="count" /> ist größer als die im <paramref name="buffer" /> verfügbare Anzahl von Bytes.</exception>
      <exception cref="T:System.ObjectDisposedException">Die Pipe ist geschlossen.</exception>
      <exception cref="T:System.NotSupportedException">Die Pipe unterstützt keine Lesevorgänge.</exception>
      <exception cref="T:System.InvalidOperationException">Die Verbindung der Pipe ist getrennt, die Pipe wartet auf eine Verbindung, oder das Handle wurde nicht festgelegt.</exception>
      <exception cref="T:System.IO.IOException">Die Pipe wurde unterbrochen, oder es ist ein anderer E/A-Fehler aufgetreten.</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Beginnt einen asynchronen Schreibvorgang.</summary>
      <param name="buffer">Der Puffer mit den Daten, die in den aktuellen Stream geschrieben werden sollen.</param>
      <param name="offset">Der nullbasierte Byteoffset im <paramref name="buffer" />, ab dem Bytes in den aktuellen Stream kopiert werden.</param>
      <param name="count">Die maximale Anzahl der zu schreibenden Bytes.</param>
      <param name="callback">Die Methode, die aufgerufen wird, wenn die asynchrone Schreiboperation abgeschlossen ist.</param>
      <param name="state">Ein vom Benutzer bereitgestelltes Objekt, das diese asynchrone Schreibanforderung von anderen Anforderungen unterscheidet.</param>
      <returns>Ein <see cref="T:System.IAsyncResult" />-Objekt, das auf den asynchronen Schreibvorgang verweist.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> ist kleiner als 0.  

oder - 
<paramref name="count" /> ist kleiner als 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="count" /> ist größer als die im <paramref name="buffer" /> verfügbare Anzahl von Bytes.</exception>
      <exception cref="T:System.ObjectDisposedException">Die Pipe ist geschlossen.</exception>
      <exception cref="T:System.NotSupportedException">Die Pipe unterstützt keine Schreibvorgänge.</exception>
      <exception cref="T:System.InvalidOperationException">Die Verbindung der Pipe ist getrennt, die Pipe wartet auf eine Verbindung, oder das Handle wurde nicht festgelegt.</exception>
      <exception cref="T:System.IO.IOException">Die Pipe wurde unterbrochen, oder es ist ein anderer E/A-Fehler aufgetreten.</exception>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.CanRead">
      <summary>Ruft einen Wert ab, der angibt, ob der aktuelle Stream Lesevorgänge unterstützt.</summary>
      <returns>
        <see langword="true" />, wenn der Stream Lesevorgänge unterstützt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.CanSeek">
      <summary>Ruft einen Wert ab, der angibt, ob der aktuelle Stream Suchvorgänge unterstützt.</summary>
      <returns>
        <see langword="false" /> in allen Fällen.</returns>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.CanWrite">
      <summary>Ruft einen Wert ab, der angibt, ob der aktuelle Stream Schreibvorgänge unterstützt.</summary>
      <returns>
        <see langword="true" />, wenn der Stream Schreibvorgänge unterstützt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.CheckPipePropertyOperations">
      <summary>Überprüft, ob sich die Pipe in einem ordnungsgemäßen Zustand zum Abrufen oder Festlegen von Eigenschaften befindet.</summary>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.CheckReadOperations">
      <summary>Überprüft, ob die Pipe verbunden ist, um Lesevorgänge auszuführen.</summary>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.CheckWriteOperations">
      <summary>Überprüft, ob die Pipe verbunden ist, um Schreibvorgänge auszuführen.</summary>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)">
      <summary>Gibt die von der <see cref="T:System.IO.Pipes.PipeStream" />-Klasse verwendeten nicht verwalteten Ressourcen frei und gibt (optional) auch die verwalteten Ressourcen frei.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)">
      <summary>Beendet eine ausstehende asynchrone Leseanforderung.</summary>
      <param name="asyncResult">Der Verweis auf die ausstehende asynchrone Anforderung.</param>
      <returns>Die Anzahl von Bytes, die gelesen wurden. Der Rückgabewert 0 (null) gibt das Ende des Streams an (d. h., die Pipe wurde geschlossen).</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> basiert nicht auf einer <see cref="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> -Methode im aktuellen Stream.</exception>
      <exception cref="T:System.IO.IOException">Der Stream ist geschlossen, oder ein interner Fehler ist aufgetreten.</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)">
      <summary>Beendet eine ausstehende asynchrone Schreibanforderung.</summary>
      <param name="asyncResult">Der Verweis auf die ausstehende asynchrone Anforderung.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> basiert nicht auf einer <see cref="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> -Methode im aktuellen Stream.</exception>
      <exception cref="T:System.IO.IOException">Der Stream ist geschlossen, oder ein interner Fehler ist aufgetreten.</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.Flush">
      <summary>Löscht den Puffer für den aktuellen Stream und veranlasst die Ausgabe aller gepufferten Daten an das zugrunde liegende Gerät.</summary>
      <exception cref="T:System.ObjectDisposedException">Die Pipe ist geschlossen.</exception>
      <exception cref="T:System.NotSupportedException">Die Pipe unterstützt keine Schreibvorgänge.</exception>
      <exception cref="T:System.IO.IOException">Die Pipe wurde unterbrochen, oder es ist ein anderer E/A-Fehler aufgetreten.</exception>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.InBufferSize">
      <summary>Ruft die Größe des Eingangspuffers für eine Pipe in Bytes ab.</summary>
      <returns>Ein Ganzzahlwert, der die Größe des Eingangspuffers in Bytes darstellt.</returns>
      <exception cref="T:System.NotSupportedException">Der Stream ist nicht lesbar.</exception>
      <exception cref="T:System.InvalidOperationException">Die Pipe wartet auf das Herstellen einer Verbindung.</exception>
      <exception cref="T:System.IO.IOException">Die Pipe wurde unterbrochen, oder es ist ein anderer E/A-Fehler aufgetreten.</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)">
      <summary>Initialisiert ein <see cref="T:System.IO.Pipes.PipeStream" />-Objekt aus dem angegebenen <see cref="T:Microsoft.Win32.SafeHandles.SafePipeHandle" />-Objekt.</summary>
      <param name="handle">Das <see cref="T:Microsoft.Win32.SafeHandles.SafePipeHandle" />-Objekt der zu initialisierenden Pipe.</param>
      <param name="isExposed">
        <see langword="true" /> , um das Handle verfügbar zu machen, andernfalls <see langword="false" />.</param>
      <param name="isAsync">
        <see langword="true" />, um anzugeben, dass das Handle asynchron geöffnet wurde, andernfalls <see langword="false" />.</param>
      <exception cref="T:System.IO.IOException">Ein Handle kann nicht an die Pipe gebunden werden.</exception>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.IsAsync">
      <summary>Ruft einen Wert ab, der angibt, ob ein <see cref="T:System.IO.Pipes.PipeStream" /> -Objekt asynchron oder synchron geöffnet wurde.</summary>
      <returns>
        <see langword="true" />, wenn das <see cref="T:System.IO.Pipes.PipeStream" />-Objekt asynchron geöffnet wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.IsConnected">
      <summary>Ruft einen Wert ab, der angibt, ob ein <see cref="T:System.IO.Pipes.PipeStream" />-Objekt verbunden ist, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" /> wenn das <see cref="T:System.IO.Pipes.PipeStream" />-Objekt verbunden ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.IsHandleExposed">
      <summary>Ruft einen Wert ab, der angibt, ob ein Handle für ein <see cref="T:System.IO.Pipes.PipeStream" />-Objekt verfügbar gemacht wurde.</summary>
      <returns>
        <see langword="true" />, wenn ein Handle für das <see cref="T:System.IO.Pipes.PipeStream" />-Objekt verfügbar gemacht wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.IsMessageComplete">
      <summary>Ruft einen Wert ab, der angibt, ob in der vom letzten Lesevorgang zurückgegebenen Meldung weitere Daten vorhanden sind.</summary>
      <returns>
        <see langword="true" />, wenn in der Meldung keine weiteren zu lesenden Zeichen vorhanden sind, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Die Pipe ist nicht verbunden.  

oder - 
Es wurde kein Pipehandle festgelegt.  

oder - 
Der <see cref="P:System.IO.Pipes.PipeStream.ReadMode" />-Eigenschaftswert der Pipe ist nicht <see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Die Pipe ist geschlossen.</exception>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.Length">
      <summary>Ruft die Länge eines Streams in Bytes ab.</summary>
      <returns>0 in allen Fällen.</returns>
      <exception cref="T:System.NotSupportedException">Wird immer ausgelöst.</exception>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.OutBufferSize">
      <summary>Ruft die Größe des Ausgangspuffers für eine Pipe in Bytes ab.</summary>
      <returns>Die Größe des Ausgangspuffers in Bytes.</returns>
      <exception cref="T:System.NotSupportedException">Der Stream ist unschreibbar.</exception>
      <exception cref="T:System.InvalidOperationException">Die Pipe wartet auf das Herstellen einer Verbindung.</exception>
      <exception cref="T:System.IO.IOException">Die Pipe wurde unterbrochen, oder es ist ein anderer E/A-Fehler aufgetreten.</exception>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.Position">
      <summary>Ruft die aktuelle Position des aktuellen Streams ab oder legt diese fest.</summary>
      <returns>0 in allen Fällen.</returns>
      <exception cref="T:System.NotSupportedException">Wird immer ausgelöst.</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>Liest einen Block von Bytes aus einem Stream und schreibt die Daten ab einer angegebenen Position für eine angegebene Länge in einen angegebenen Puffer.</summary>
      <param name="buffer">Enthält nach dem Beenden dieser Methode das angegebene Bytearray mit den Werten zwischen <paramref name="offset" /> und (<paramref name="offset" /> + <paramref name="count" /> - 1) die durch die aus der aktuellen Quelle gelesenen Bytes ersetzt wurden.</param>
      <param name="offset">Das Byteoffset im <paramref name="buffer" />-Array, an dem die gelesenen Bytes platziert werden.</param>
      <param name="count">Die maximale Anzahl der zu lesenden Bytes.</param>
      <returns>Die Gesamtanzahl der in den <paramref name="buffer" /> gelesenen Bytes. Dies kann weniger als die Anzahl der angeforderten Bytes sein, wenn diese Anzahl an Bytes derzeit nicht verfügbar ist, oder 0, wenn das Streamende erreicht ist.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> ist kleiner als 0.  

oder - 
<paramref name="count" /> ist kleiner als 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="count" /> ist größer als die im <paramref name="buffer" /> verfügbare Anzahl von Bytes.</exception>
      <exception cref="T:System.ObjectDisposedException">Die Pipe ist geschlossen.</exception>
      <exception cref="T:System.NotSupportedException">Die Pipe unterstützt keine Lesevorgänge.</exception>
      <exception cref="T:System.InvalidOperationException">Die Verbindung der Pipe ist getrennt, die Pipe wartet auf eine Verbindung, oder das Handle wurde nicht festgelegt.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler ist aufgetreten.</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.Read(System.Span{System.Byte})">
      <summary>Liest eine Folge von Bytes aus dem aktuellen Stream, schreibt sie in ein Bytearray und erhöht die Position innerhalb des Streams um die Anzahl der gelesenen Bytes.</summary>
      <param name="buffer">Ein Bereich im Arbeitsspeicher. Bei der Rückgabe dieser Methode werden die Inhalte dieses Bereichs durch die aus der aktuellen Quelle gelesenen Bytes ersetzt.</param>
      <returns>Die Anzahl der insgesamt in den <paramref name="buffer" /> gelesenen Bytes. Dies kann weniger als die Anzahl der in <paramref name="buffer" /> zugeordneten Bytes sein, wenn diese Anzahl an Bytes derzeit nicht verfügbar ist, oder 0 (null), wenn das Ende des Streams erreicht ist.</returns>
      <exception cref="T:System.ArgumentNullException">Die Anzahl der gelesenen Bytes war länger als die Pufferlänge.</exception>
      <exception cref="T:System.NotSupportedException">Lesevorgänge werden vom Stream nicht unterstützt.</exception>
      <exception cref="T:System.ObjectDisposedException">Auf eine geschlossene Pipe kann nicht zugegriffen werden.</exception>
      <exception cref="T:System.InvalidOperationException">Die Pipe ist noch nicht verbunden.

oder -

Die Pipe befindet sich in einem nicht verbundenen Zustand.

oder -

Es wurde kein Pipehandle festgelegt.  (Hat Ihre <see cref="T:System.IO.Pipes.PipeStream" />-Implementierung <see cref="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" /> aufgerufen?</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>Liest eine Folge von Bytes asynchron aus dem aktuellen Stream in ein Bytearray an die angegebene Position für eine angegebene Anzahl von Bytes, erhöht die Position im Stream um die Anzahl der gelesenen Bytes und überwacht Abbruchanfragen.</summary>
      <param name="buffer">Der Puffer, in den die Daten geschrieben werden sollen.</param>
      <param name="offset">Der Byteoffset im <paramref name="buffer" />, ab dem Daten aus dem Stream geschrieben werden.</param>
      <param name="count">Die maximale Anzahl der zu lesenden Bytes.</param>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />sein.</param>
      <returns>Eine Aufgabe, die den asynchronen Lesevorgang darstellt. Der Wert seiner <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft enthält die Gesamtzahl der Bytes, die in den Puffer gelesen werden. Der Ergebniswert kann niedriger als die Anzahl der angeforderten Bytes sein, wenn die Anzahl an derzeit verfügbaren Bytes kleiner ist als die angeforderte Anzahl, oder sie kann 0 (null) sein, wenn das Datenstromende erreicht ist.</returns>
      <exception cref="T:System.NotSupportedException">Lesevorgänge werden vom Stream nicht unterstützt.</exception>
      <exception cref="T:System.ObjectDisposedException">Auf eine geschlossene Pipe kann nicht zugegriffen werden.</exception>
      <exception cref="T:System.InvalidOperationException">Die Pipe ist noch nicht verbunden.

oder -

Die Pipe befindet sich in einem nicht verbundenen Zustand.

oder -

Es wurde kein Pipehandle festgelegt.  (Hat Ihre <see cref="T:System.IO.Pipes.PipeStream" />-Implementierung <see cref="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" /> aufgerufen?</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <summary>Liest eine Folge von Bytes asynchron aus dem aktuellen Stream, schreibt diese in einen Bytespeicherbereich, erhöht die Position im Stream um die Anzahl der gelesenen Bytes und überwacht Abbruchanfragen.</summary>
      <param name="buffer">Der Bereich im Arbeitsspeicher, in den die Daten geschrieben werden sollen.</param>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />sein.</param>
      <returns>Eine Aufgabe, die den asynchronen Lesevorgang darstellt. Der Wert seiner <see cref="P:System.Threading.Tasks.ValueTask`1.Result" />-Eigenschaft enthält die Gesamtzahl der Bytes, die in den Puffer gelesen werden. Der Ergebniswert kann weniger als die Anzahl der im Puffer zugeordneten Bytes sein, wenn diese Anzahl an Bytes derzeit nicht verfügbar ist, oder er kann 0 (null) sein, wenn das Ende des Streams erreicht ist.</returns>
      <exception cref="T:System.NotSupportedException">Lesevorgänge werden vom Stream nicht unterstützt.</exception>
      <exception cref="T:System.ObjectDisposedException">Auf eine geschlossene Pipe kann nicht zugegriffen werden.</exception>
      <exception cref="T:System.InvalidOperationException">Die Pipe ist noch nicht verbunden.

oder -

Die Pipe befindet sich in einem nicht verbundenen Zustand.

oder -

Es wurde kein Pipehandle festgelegt.  (Hat Ihre <see cref="T:System.IO.Pipes.PipeStream" />-Implementierung <see cref="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" /> aufgerufen?</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.ReadByte">
      <summary>Liest ein Byte aus einer Pipe.</summary>
      <returns>Das in <see cref="T:System.Int32" /> umgewandelte Byte oder -1, wenn das Ende des Streams erreicht wurde (die Pipe wurde geschlossen).</returns>
      <exception cref="T:System.ObjectDisposedException">Die Pipe ist geschlossen.</exception>
      <exception cref="T:System.NotSupportedException">Die Pipe unterstützt keine Lesevorgänge.</exception>
      <exception cref="T:System.InvalidOperationException">Die Verbindung der Pipe ist getrennt, die Pipe wartet auf eine Verbindung, oder das Handle wurde nicht festgelegt.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler ist aufgetreten.</exception>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.ReadMode">
      <summary>Ruft den Lesemodus für ein <see cref="T:System.IO.Pipes.PipeStream" />-Objekt ab oder legt diesen fest.</summary>
      <returns>Einer der <see cref="T:System.IO.Pipes.PipeTransmissionMode" />-Werte, die angeben, wie das <see cref="T:System.IO.Pipes.PipeStream" />-Objekt aus der Pipe liest.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Der angegebene Wert ist kein gültiger <see cref="T:System.IO.Pipes.PipeTransmissionMode" />-Wert.</exception>
      <exception cref="T:System.NotSupportedException">Der angegebene Wert ist kein unterstützter <see cref="T:System.IO.Pipes.PipeTransmissionMode" />-Wert für diesen Pipestream.</exception>
      <exception cref="T:System.InvalidOperationException">Das Handle wurde nicht festgelegt.  

oder -  

 Die Pipe wartet auf das Herstellen einer Verbindung mit einem benannten Client.</exception>
      <exception cref="T:System.IO.IOException">Die Pipe wurde unterbrochen, oder es ist ein E/A-Fehler mit einem benannten Client aufgetreten.</exception>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.SafePipeHandle">
      <summary>Ruft das sichere Handle für das lokale Ende der Pipe ab, die vom aktuellen <see cref="T:System.IO.Pipes.PipeStream" />-Objekt gekapselt wird.</summary>
      <returns>Ein <see cref="T:Microsoft.Win32.SafeHandles.SafePipeHandle" />-Objekt für die Pipe, die vom aktuellen <see cref="T:System.IO.Pipes.PipeStream" />-Objekt gekapselt wird.</returns>
      <exception cref="T:System.InvalidOperationException">Es wurde kein Pipehandle festgelegt.</exception>
      <exception cref="T:System.ObjectDisposedException">Die Pipe ist geschlossen.</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>Legt die aktuelle Position des aktuellen Streams auf den angegebenen Wert fest.</summary>
      <param name="offset">Der Punkt relativ zu <paramref name="origin" />, ab dem gesucht werden soll.</param>
      <param name="origin">Bestimmt den Anfang, das Ende oder die aktuelle Position als Bezugspunkt für <paramref name="offset" /> unter Verwendung eines Werts vom Typ <see cref="T:System.IO.SeekOrigin" />.</param>
      <returns>Die neue Position im Stream.</returns>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.SetLength(System.Int64)">
      <summary>Legt die Länge des aktuellen Streams auf den angegebenen Wert fest.</summary>
      <param name="value">Die neue Länge des Streams.</param>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.TransmissionMode">
      <summary>Ruft den von der aktuellen Pipe unterstützten Pipeübertragungsmodus ab.</summary>
      <returns>Einer der <see cref="T:System.IO.Pipes.PipeTransmissionMode" />-Werte, die den von der aktuellen Pipe unterstützten Übertragungsmodus angeben.</returns>
      <exception cref="T:System.ObjectDisposedException">Die Pipe ist geschlossen.</exception>
      <exception cref="T:System.InvalidOperationException">Das Handle wurde nicht festgelegt.  

oder -  

 Die Pipe wartet auf das Herstellen einer Verbindung in einem anonymen Client/Server-Vorgang oder einer Verbindung mit einem benannten Client.</exception>
      <exception cref="T:System.IO.IOException">Die Pipe wurde unterbrochen, oder es ist ein anderer E/A-Fehler aufgetreten.</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.WaitForPipeDrain">
      <summary>Wartet, bis das andere Ende der Pipe alle gesendeten Bytes gelesen hat.</summary>
      <exception cref="T:System.ObjectDisposedException">Die Pipe ist geschlossen.</exception>
      <exception cref="T:System.NotSupportedException">Die Pipe unterstützt keine Schreibvorgänge.</exception>
      <exception cref="T:System.IO.IOException">Die Pipe wurde unterbrochen, oder es ist ein anderer E/A-Fehler aufgetreten.</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>Schreibt einen Byteblock mit den Daten aus einem Puffer in den aktuellen Stream.</summary>
      <param name="buffer">Der Puffer, der Daten enthält, die in die Pipe geschrieben werden sollen.</param>
      <param name="offset">Der nullbasierte Byteoffset im <paramref name="buffer" />, ab dem Bytes in den aktuellen Stream kopiert werden.</param>
      <param name="count">Die maximale Anzahl an Bytes, die in den aktuellen Stream geschrieben werden sollen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> ist kleiner als 0.  

oder - 
<paramref name="count" /> ist kleiner als 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="count" /> ist größer als die im <paramref name="buffer" /> verfügbare Anzahl von Bytes.</exception>
      <exception cref="T:System.ObjectDisposedException">Die Pipe ist geschlossen.</exception>
      <exception cref="T:System.NotSupportedException">Die Pipe unterstützt keine Schreibvorgänge.</exception>
      <exception cref="T:System.IO.IOException">Die Pipe wurde unterbrochen, oder es ist ein anderer E/A-Fehler aufgetreten.</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.Write(System.ReadOnlySpan{System.Byte})">
      <summary>Schreibt eine Bytesequenz in den aktuellen Stream und setzt die aktuelle Position in diesem Stream um die Anzahl der geschriebenen Bytes nach vorn.</summary>
      <param name="buffer">Ein Bereich im Arbeitsspeicher. Diese Methode kopiert den Inhalt dieses Bereichs in den aktuellen Datenstrom.</param>
      <exception cref="T:System.NotSupportedException">Der Stream unterstützt das Schreiben nicht.</exception>
      <exception cref="T:System.ObjectDisposedException">Auf eine geschlossene Pipe kann nicht zugegriffen werden.</exception>
      <exception cref="">Die Pipe ist unterbrochen.</exception>
      <exception cref="T:System.InvalidOperationException">Die Pipe ist noch nicht verbunden.

oder -

Die Pipe befindet sich in einem nicht verbundenen Zustand.

oder -

Es wurde kein Pipehandle festgelegt.  (Hat Ihre <see cref="T:System.IO.Pipes.PipeStream" />-Implementierung <see cref="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" /> aufgerufen?</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>Schreibt eine angegebene Anzahl von Bytes aus einem Bytearray ab einer angegebenen Position, erhöht die aktuelle Position in diesem Stream um die Anzahl der geschriebenen Bytes und überwacht Abbruchanforderungen.</summary>
      <param name="buffer">Der Puffer, aus dem Daten geschrieben werden sollen.</param>
      <param name="offset">Der nullbasierte Byteoffset im <paramref name="buffer" />, ab dem Bytes in den Stream kopiert werden.</param>
      <param name="count">Die maximale Anzahl der zu schreibenden Bytes.</param>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />sein.</param>
      <returns>Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> ist negativ.

oder -

<paramref name="count" /> ist negativ.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffer" />. Länge - <paramref name="offset" /> ist kleiner als <paramref name="count" />.</exception>
      <exception cref="T:System.NotSupportedException">Der Stream unterstützt keine Schreibvorgänge.</exception>
      <exception cref="T:System.ObjectDisposedException">Auf eine geschlossene Pipe kann nicht zugegriffen werden.</exception>
      <exception cref="">Die Pipe ist unterbrochen.</exception>
      <exception cref="T:System.InvalidOperationException">Die Pipe ist noch nicht verbunden.

oder -

Die Pipe befindet sich in einem nicht verbundenen Zustand.

oder -

Es wurde kein Pipehandle festgelegt.  (Hat Ihre <see cref="T:System.IO.Pipes.PipeStream" />-Implementierung <see cref="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" /> aufgerufen?</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
      <summary>Schreibt beim Überschreiben in einer abgeleiteten Klasse eine Folge von Bytes asynchron in den aktuellen Stream und erhöht die aktuelle Position im Stream um die Anzahl der geschriebenen Bytes und überwacht Abbruchanforderungen.</summary>
      <param name="buffer">Die Region im Arbeitsspeicher, aus der die Daten für das Schreiben gelesen werden sollen.</param>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />sein.</param>
      <returns>Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</returns>
      <exception cref="T:System.NotSupportedException">Der Stream unterstützt keine Schreibvorgänge.</exception>
      <exception cref="T:System.ObjectDisposedException">Auf eine geschlossene Pipe kann nicht zugegriffen werden.</exception>
      <exception cref="">Die Pipe ist unterbrochen.</exception>
      <exception cref="T:System.InvalidOperationException">Die Pipe ist noch nicht verbunden.

oder -

Die Pipe befindet sich in einem nicht verbundenen Zustand.

oder -

Es wurde kein Pipehandle festgelegt.  (Hat Ihre <see cref="T:System.IO.Pipes.PipeStream" />-Implementierung <see cref="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" /> aufgerufen?</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.WriteByte(System.Byte)">
      <summary>Schreibt ein Byte in den aktuellen Stream.</summary>
      <param name="value">Das Byte, das in den Stream geschrieben werden soll.</param>
      <exception cref="T:System.ObjectDisposedException">Die Pipe ist geschlossen.</exception>
      <exception cref="T:System.NotSupportedException">Die Pipe unterstützt keine Schreibvorgänge.</exception>
      <exception cref="T:System.InvalidOperationException">Die Verbindung der Pipe ist getrennt, die Pipe wartet auf eine Verbindung, oder das Handle wurde nicht festgelegt.</exception>
      <exception cref="T:System.IO.IOException">Die Pipe wurde unterbrochen, oder es ist ein anderer E/A-Fehler aufgetreten.</exception>
    </member>
    <member name="T:System.IO.Pipes.PipeStreamImpersonationWorker">
      <summary>Stellt die Methode dar, die als Client aufgerufen werden soll.</summary>
    </member>
    <member name="T:System.IO.Pipes.PipeTransmissionMode">
      <summary>Gibt den Übertragungsmodus der Pipe an.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeTransmissionMode.Byte">
      <summary>Gibt an, dass die Daten in der Pipe als Bytestream übertragen und gelesen werden.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeTransmissionMode.Message">
      <summary>Gibt an, dass die Daten in der Pipe als Meldungsstream übertragen und gelesen werden.</summary>
    </member>
  </members>
</doc>