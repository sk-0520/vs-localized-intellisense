<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Resources.ResourceManager</name>
  </assembly>
  <members>
    <member name="T:System.Resources.IResourceReader">
      <summary>Stellt die Basisfunktionen für das Lesen von Daten aus Ressourcendateien bereit.</summary>
    </member>
    <member name="M:System.Resources.IResourceReader.Close">
      <summary>Gibt zunächst alle dem Ressourcenreader zugeordneten Ressourcen frei und schließt diesen daraufhin.</summary>
    </member>
    <member name="M:System.Resources.IResourceReader.GetEnumerator">
      <summary>Gibt einen Wörterbuchenumerator der Ressourcen für diesen Reader zurück.</summary>
      <returns>Ein Wörterbuchenumerator der Ressourcen für diesen Reader.</returns>
    </member>
    <member name="T:System.Resources.MissingManifestResourceException">
      <summary>Die Ausnahme, die ausgelöst wird, wenn die Hauptassembly keine Ressourcen für die neutrale Kultur enthält, und eine entsprechende Satellitenassembly fehlt.</summary>
    </member>
    <member name="M:System.Resources.MissingManifestResourceException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Resources.MissingManifestResourceException" />-Klasse mit Standardeigenschaften.</summary>
    </member>
    <member name="M:System.Resources.MissingManifestResourceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert anhand von serialisierten Daten eine neue Instanz der <see cref="T:System.Resources.MissingManifestResourceException" />-Klasse.</summary>
      <param name="info">Das Objekt, das die Daten des serialisierten Objekts enthält.</param>
      <param name="context">Die Kontextinformationen über die Quelle oder das Ziel der Ausnahme.</param>
    </member>
    <member name="M:System.Resources.MissingManifestResourceException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Resources.MissingManifestResourceException" />-Klasse mit der angegebenen Fehlermeldung.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
    </member>
    <member name="M:System.Resources.MissingManifestResourceException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Resources.MissingManifestResourceException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
      <param name="inner">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist. Wenn der <paramref name="inner" />-Parameter nicht <see langword="null" /> ist, wird die aktuelle Ausnahme in einem <see langword="catch" />-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="T:System.Resources.MissingSatelliteAssemblyException">
      <summary>Die Ausnahme, die ausgelöst wird, wenn die Satellitenassembly für die Ressourcen der Standardkultur fehlt.</summary>
    </member>
    <member name="M:System.Resources.MissingSatelliteAssemblyException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Resources.MissingSatelliteAssemblyException" />-Klasse mit Standardeigenschaften.</summary>
    </member>
    <member name="M:System.Resources.MissingSatelliteAssemblyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert anhand von serialisierten Daten eine neue Instanz der <see cref="T:System.Resources.MissingSatelliteAssemblyException" />-Klasse.</summary>
      <param name="info">Das Objekt, das die Daten des serialisierten Objekts enthält.</param>
      <param name="context">Die Kontextinformationen über die Quelle oder das Ziel der Ausnahme.</param>
    </member>
    <member name="M:System.Resources.MissingSatelliteAssemblyException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Resources.MissingSatelliteAssemblyException" />-Klasse mit der angegebenen Fehlermeldung.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
    </member>
    <member name="M:System.Resources.MissingSatelliteAssemblyException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Resources.MissingSatelliteAssemblyException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
      <param name="inner">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist. Wenn der <paramref name="inner" />-Parameter nicht <see langword="null" /> ist, wird die aktuelle Ausnahme in einem <see langword="catch" />-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="M:System.Resources.MissingSatelliteAssemblyException.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Resources.MissingSatelliteAssemblyException" />-Klasse mit einer angegebenen Fehlermeldung und dem Namen einer neutralen Kultur.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
      <param name="cultureName">Der Name der neutralen Kultur.</param>
    </member>
    <member name="P:System.Resources.MissingSatelliteAssemblyException.CultureName">
      <summary>Ruft den Namen der Standardkultur ab.</summary>
      <returns>Der Name der Standardkultur.</returns>
    </member>
    <member name="T:System.Resources.NeutralResourcesLanguageAttribute">
      <summary>Informiert den Ressourcen-Manager über die Standardkultur einer App. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.Resources.NeutralResourcesLanguageAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Resources.NeutralResourcesLanguageAttribute" />-Klasse.</summary>
      <param name="cultureName">Der Name der Kultur, in der die neutralen Ressourcen der aktuellen Assembly geschrieben wurden.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="cultureName" />-Parameter ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Resources.NeutralResourcesLanguageAttribute.#ctor(System.String,System.Resources.UltimateResourceFallbackLocation)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Resources.NeutralResourcesLanguageAttribute" />-Klasse mit dem endgültigen Ort für Fallbackressourcen.</summary>
      <param name="cultureName">Der Name der Kultur, in der die neutralen Ressourcen der aktuellen Assembly geschrieben wurden.</param>
      <param name="location">Einer der Enumerationswerte, die den Speicherort angeben, von dem neutrale Fallbackressourcen abgerufen werden sollen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cultureName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="location" /> ist kein Member von <see cref="T:System.Resources.UltimateResourceFallbackLocation" />.</exception>
    </member>
    <member name="P:System.Resources.NeutralResourcesLanguageAttribute.CultureName">
      <summary>Ruft den Kulturnamen ab.</summary>
      <returns>Der Name der Standardkultur für die Hauptassembly.</returns>
    </member>
    <member name="P:System.Resources.NeutralResourcesLanguageAttribute.Location">
      <summary>Ruft den Speicherort für die <see cref="T:System.Resources.ResourceManager" />-Klasse ab, die zum Abrufen neutraler Ressourcen mithilfe des Ressourcenfallbackprozesses verwendet werden soll.</summary>
      <returns>Einer der Enumerationswerte, der den Speicherort (Hauptassembly oder Satellitenassembly) angibt, von dem neutrale Ressourcen abgerufen werden sollen.</returns>
    </member>
    <member name="T:System.Resources.ResourceManager">
      <summary>Stellt einen Ressourcen-Manager dar, der einfachen Zugriff auf kulturabhängige Ressourcen zur Laufzeit ermöglicht.</summary>
    </member>
    <member name="M:System.Resources.ResourceManager.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Resources.ResourceManager" />-Klasse mit Standardwerten.</summary>
    </member>
    <member name="M:System.Resources.ResourceManager.#ctor(System.String,System.Reflection.Assembly)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Resources.ResourceManager" />-Klasse zum Suchen von Ressourcen in Dateien mit dem angegebenen Stammnamen in der angegebenen Assembly.</summary>
      <param name="baseName">Der Stammname der Ressourcendatei ohne Erweiterung, aber einschließlich irgendeines vollqualifizierten Namespacenamens. Der Stammname der Ressourcendatei "MyApplication.MyResource.en-US.resources" lautet beispielsweise "MyApplication.MyResource".</param>
      <param name="assembly">Die Hauptassembly für die Ressourcen.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="baseName" />-Parameter oder der <paramref name="assembly" />-Parameter ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Resources.ResourceManager.#ctor(System.String,System.Reflection.Assembly,System.Type)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Resources.ResourceManager" />-Klasse, die eine angegebene <see cref="T:System.Resources.ResourceSet" />-Klasse verwendet, um Ressourcen in Dateien mit dem angegebenen Stammnamen in der angegebenen Assembly zu suchen.</summary>
      <param name="baseName">Der Stammname der Ressourcendatei ohne Erweiterung, aber einschließlich eines beliebigen vollqualifizierten Namespacenamens. Der Stammname der Ressourcendatei "MyApplication.MyResource.en-US.resources" lautet beispielsweise "MyApplication.MyResource".</param>
      <param name="assembly">Die Hauptassembly für die Ressourcen.</param>
      <param name="usingResourceSet">Der Typ des zu verwendenden benutzerdefinierten <see cref="T:System.Resources.ResourceSet" />. Wenn <see langword="null" />, wird das für die Laufzeit standardmäßig festgelegte <see cref="T:System.Resources.ResourceSet" />-Objekt verwendet.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="usingResourceset" /> ist keine von <see cref="T:System.Resources.ResourceSet" /> abgeleitete Klasse.</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="baseName" />-Parameter oder der <paramref name="assembly" />-Parameter ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Resources.ResourceManager.#ctor(System.Type)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Resources.ResourceManager" />-Klasse, die Ressourcen in Satellitenassemblys auf der Grundlage der Informationen aus dem angegebenen Typobjekt sucht.</summary>
      <param name="resourceSource">Ein Typ, aus dem der Ressourcen-Manager alle Informationen zum Suchen von RESOURCES-Dateien ableitet.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="resourceSource" />-Parameter ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Resources.ResourceManager.BaseName">
      <summary>Ruft den Stammnamen der Ressourcendateien ab, die der <see cref="T:System.Resources.ResourceManager" /> nach Ressourcen durchsucht.</summary>
      <returns>Der Stammname der Ressourcendateien, die der <see cref="T:System.Resources.ResourceManager" /> nach Ressourcen durchsucht.</returns>
    </member>
    <member name="M:System.Resources.ResourceManager.CreateFileBasedResourceManager(System.String,System.String,System.Type)">
      <summary>Gibt ein <see cref="T:System.Resources.ResourceManager" />-Objekt zurück, der anstelle eines Assemblymanifests ein bestimmtes Verzeichnis nach Ressourcen durchsucht.</summary>
      <param name="baseName">Der Stammname der Ressourcen. Der Stammname der Ressourcendatei "MyResource.en-US.resources" lautet beispielsweise "MyResource".</param>
      <param name="resourceDir">Der Name des Verzeichnisses, das nach Ressourcen durchsucht werden soll. <paramref name="resourceDir" /> kann ein absoluter Pfad oder ein relativer Pfad im Anwendungsverzeichnis sein.</param>
      <param name="usingResourceSet">Der Typ des zu verwendenden benutzerdefinierten <see cref="T:System.Resources.ResourceSet" />. Wenn <see langword="null" />, wird das für die Laufzeit standardmäßig festgelegte <see cref="T:System.Resources.ResourceSet" />-Objekt verwendet.</param>
      <returns>Eine neue Instanz eines Ressourcen-Managers, der das angegebene Verzeichnis anstelle eines Assemblymanifests nach Ressourcen durchsucht.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="baseName" />-Parameter oder der <paramref name="resourceDir" />-Parameter ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Resources.ResourceManager.FallbackLocation">
      <summary>Ruft den Speicherort für das Abrufen von Standard-Fallbackressourcen ab oder legt diesen fest.</summary>
      <returns>Einer der Enumerationswerte, der angibt, wo der Ressourcen-Manager nach Fallbackressourcen suchen kann.</returns>
    </member>
    <member name="M:System.Resources.ResourceManager.GetNeutralResourcesLanguage(System.Reflection.Assembly)">
      <summary>Gibt kulturspezifische Informationen für die Standardressourcen der Hauptassembly zurück, indem der Wert des <see cref="T:System.Resources.NeutralResourcesLanguageAttribute" />-Attributs in einer angegebenen Assembly gelesen wird.</summary>
      <param name="a">Die Assembly, für die kulturspezifische Informationen zurückgegeben werden sollen.</param>
      <returns>Die Kultur des <see cref="T:System.Resources.NeutralResourcesLanguageAttribute" />-Attributs, sofern gefunden, andernfalls die invariante Kultur.</returns>
    </member>
    <member name="M:System.Resources.ResourceManager.GetObject(System.String)">
      <summary>Gibt den Wert der angegebenen Ressource, die keine Zeichenfolge ist, zurück.</summary>
      <param name="name">Der Name der abzurufenden Ressource.</param>
      <returns>Der Wert der Ressource, die für die aktuellen Kultureinstellungen des Aufrufers lokalisiert wurde. Wenn ein entsprechender Ressourcensatz vorhanden ist, jedoch <paramref name="name" /> nicht gefunden werden kann, gibt die Methode <see langword="null" /> zurück.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="name" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.Resources.MissingManifestResourceException">Es wurde kein passender Satz von lokalisierten Ressourcen gefunden, und es sind keine Standardkulturressourcen vorhanden. Informationen zur Behandlung dieser Ausnahme finden Sie im Abschnitt über die Behandlung von MissingManifestResourceException- und MissingSatelliteAssemblyException-Ausnahmen im Thema zur <see cref="T:System.Resources.ResourceManager" />-Klasse.</exception>
      <exception cref="T:System.Resources.MissingSatelliteAssemblyException">Die Ressourcen der Standardkultur befinden sich in einer Satellitenassembly, die nicht gefunden werden konnte. Informationen zur Behandlung dieser Ausnahme finden Sie im Abschnitt über die Behandlung von MissingManifestResourceException- und MissingSatelliteAssemblyException-Ausnahmen im Thema zur <see cref="T:System.Resources.ResourceManager" />-Klasse.</exception>
    </member>
    <member name="M:System.Resources.ResourceManager.GetObject(System.String,System.Globalization.CultureInfo)">
      <summary>Ruft den Wert der angegebenen Ressource ab, die keine Zeichenfolge ist und für die angegebene Kultur lokalisiert wurde.</summary>
      <param name="name">Der Name der abzurufenden Ressource.</param>
      <param name="culture">Die Kultur, für die die Ressource lokalisiert wurde. Wenn die Ressource für diese Kultur nicht lokalisiert ist, dann sucht der Ressourcen-Manager unter Verwendung von Fallback-Regeln nach einer geeigneten Ressource.  
Wenn dieser Wert <see langword="null" /> ist, wird das <see cref="T:System.Globalization.CultureInfo" />-Objekt durch die <see cref="P:System.Globalization.CultureInfo.CurrentUICulture" />-Eigenschaft abgerufen.</param>
      <returns>Der Wert der Ressource, die für die angegebene Kultur lokalisiert wurde. Wenn ein entsprechender Ressourcensatz vorhanden ist, jedoch <paramref name="name" /> nicht gefunden werden kann, gibt die Methode <see langword="null" /> zurück.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="name" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.Resources.MissingManifestResourceException">Es wurde kein passender Satz von Ressourcen gefunden, und es sind keine Standardkulturressourcen vorhanden. Informationen zur Behandlung dieser Ausnahme finden Sie im Abschnitt über die Behandlung von MissingManifestResourceException- und MissingSatelliteAssemblyException-Ausnahmen im Thema zur <see cref="T:System.Resources.ResourceManager" />-Klasse.</exception>
      <exception cref="T:System.Resources.MissingSatelliteAssemblyException">Die Ressourcen der Standardkultur befinden sich in einer Satellitenassembly, die nicht gefunden werden konnte. Informationen zur Behandlung dieser Ausnahme finden Sie im Abschnitt über die Behandlung von MissingManifestResourceException- und MissingSatelliteAssemblyException-Ausnahmen im Thema zur <see cref="T:System.Resources.ResourceManager" />-Klasse.</exception>
    </member>
    <member name="M:System.Resources.ResourceManager.GetResourceFileName(System.Globalization.CultureInfo)">
      <summary>Generiert den Ressourcendateinamen für das angegebene <see cref="T:System.Globalization.CultureInfo" />-Objekt.</summary>
      <param name="culture">Das Kulturobjekt, für das ein Ressourcendateiname erstellt wird.</param>
      <returns>Der Name, der für eine Ressourcendatei des angegebenen <see cref="T:System.Globalization.CultureInfo" />-Objekts verwendet werden kann.</returns>
    </member>
    <member name="M:System.Resources.ResourceManager.GetResourceSet(System.Globalization.CultureInfo,System.Boolean,System.Boolean)">
      <summary>Ruft die Ressource ab, die für eine bestimmte Kultur festgelegt wird.</summary>
      <param name="culture">Die Kultur, deren Ressourcen abgerufen werden sollen.</param>
      <param name="createIfNotExists">
        <see langword="true" />, um den Ressourcensatz zu laden, falls er noch nicht geladen wurde; andernfalls <see langword="false" />.</param>
      <param name="tryParents">
        <see langword="true" />, um Ressourcenfallback zu verwenden, um eine entsprechende Ressource zu laden, wenn der Ressourcensatz nicht gefunden werden kann; <see langword="false" />, um den Ressourcenfallback-Prozess zu umgehen.</param>
      <returns>Die Ressource, die für die angegebene Kultur festgelegt wurde.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="culture" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.Resources.MissingManifestResourceException">
        <paramref name="tryParents" /> ist <see langword="true" />, es wurde kein passender Satz von Ressourcen gefunden, und es sind keine Ressourcen für die Standardkultur vorhanden.</exception>
    </member>
    <member name="M:System.Resources.ResourceManager.GetSatelliteContractVersion(System.Reflection.Assembly)">
      <summary>Gibt die vom <see cref="T:System.Resources.SatelliteContractVersionAttribute" />-Attribut in der gegebenen Assembly angegebene Version zurück.</summary>
      <param name="a">Die Assembly, die auf das <see cref="T:System.Resources.SatelliteContractVersionAttribute" />-Attribut überprüft werden soll.</param>
      <returns>Die Satellitenvertragsversion der angegebenen Assembly oder <see langword="null" />, wenn keine Version gefunden wurde.</returns>
      <exception cref="T:System.ArgumentException">Die in der Assembly <paramref name="a" /> gefundene <see cref="T:System.Version" /> ist ungültig.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="a" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Resources.ResourceManager.GetStream(System.String)">
      <summary>Gibt ein nicht verwaltetes Arbeitsspeicher-Datenstromobjekt aus der angegebenen Ressource zurück.</summary>
      <param name="name">Der Name einer Ressource.</param>
      <returns>Ein nicht verwaltetes Arbeitsspeicherstreamobjekt, das eine Ressource darstellt.</returns>
      <exception cref="T:System.InvalidOperationException">Der Wert der angegebenen Ressource ist kein <see cref="T:System.IO.MemoryStream" />-Objekt.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Resources.MissingManifestResourceException">Es wurde kein passender Satz von Ressourcen gefunden, und es sind keine Standardressourcen vorhanden. Informationen zur Behandlung dieser Ausnahme finden Sie im Abschnitt über die Behandlung von MissingManifestResourceException- und MissingSatelliteAssemblyException-Ausnahmen im Thema zur <see cref="T:System.Resources.ResourceManager" />-Klasse.</exception>
      <exception cref="T:System.Resources.MissingSatelliteAssemblyException">Die Ressourcen der Standardkultur befinden sich in einer Satellitenassembly, die nicht gefunden werden konnte. Informationen zur Behandlung dieser Ausnahme finden Sie im Abschnitt über die Behandlung von MissingManifestResourceException- und MissingSatelliteAssemblyException-Ausnahmen im Thema zur <see cref="T:System.Resources.ResourceManager" />-Klasse.</exception>
    </member>
    <member name="M:System.Resources.ResourceManager.GetStream(System.String,System.Globalization.CultureInfo)">
      <summary>Gibt mithilfe der angegebenen Kultur ein nicht verwaltetes Arbeitsspeicherstreamobjekt aus der angegebenen Ressource zurück.</summary>
      <param name="name">Der Name einer Ressource.</param>
      <param name="culture">Ein Objekt, das die Kultur für die Ressourcensuche angibt. Wenn <paramref name="culture" /><see langword="null" /> ist, wird die Kultur für den aktuellen Thread verwendet.</param>
      <returns>Ein nicht verwaltetes Arbeitsspeicherstreamobjekt, das eine Ressource darstellt.</returns>
      <exception cref="T:System.InvalidOperationException">Der Wert der angegebenen Ressource ist kein <see cref="T:System.IO.MemoryStream" />-Objekt.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Resources.MissingManifestResourceException">Es wurde kein passender Satz von Ressourcen gefunden, und es sind keine Standardressourcen vorhanden. Informationen zur Behandlung dieser Ausnahme finden Sie im Abschnitt über die Behandlung von MissingManifestResourceException- und MissingSatelliteAssemblyException-Ausnahmen im Thema zur <see cref="T:System.Resources.ResourceManager" />-Klasse.</exception>
      <exception cref="T:System.Resources.MissingSatelliteAssemblyException">Die Ressourcen der Standardkultur befinden sich in einer Satellitenassembly, die nicht gefunden werden konnte. Informationen zur Behandlung dieser Ausnahme finden Sie im Abschnitt über die Behandlung von MissingManifestResourceException- und MissingSatelliteAssemblyException-Ausnahmen im Thema zur <see cref="T:System.Resources.ResourceManager" />-Klasse.</exception>
    </member>
    <member name="M:System.Resources.ResourceManager.GetString(System.String)">
      <summary>Gibt den Wert der angegebenen Zeichenkette zurück.</summary>
      <param name="name">Der Name der abzurufenden Ressource.</param>
      <returns>Der Wert der Ressource, die für die aktuelle Benutzeroberflächenkultur des Aufrufers lokalisiert wurde, oder <see langword="null" />, wenn <paramref name="name" /> nicht in einem Ressourcensatz gefunden werden kann.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="name" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Der Wert der angegebenen Ressource ist keine Zeichenfolge.</exception>
      <exception cref="T:System.Resources.MissingManifestResourceException">Es wurde kein passender Satz von Ressourcen gefunden, und es sind keine neutralen Ressourcen für eine neutrale Kultur vorhanden. Informationen zur Behandlung dieser Ausnahme finden Sie im Abschnitt über die Behandlung von MissingManifestResourceException- und MissingSatelliteAssemblyException-Ausnahmen im Thema zur <see cref="T:System.Resources.ResourceManager" />-Klasse.</exception>
      <exception cref="T:System.Resources.MissingSatelliteAssemblyException">Die Ressourcen der Standardkultur befinden sich in einer Satellitenassembly, die nicht gefunden werden konnte. Informationen zur Behandlung dieser Ausnahme finden Sie im Abschnitt über die Behandlung von MissingManifestResourceException- und MissingSatelliteAssemblyException-Ausnahmen im Thema zur <see cref="T:System.Resources.ResourceManager" />-Klasse.</exception>
    </member>
    <member name="M:System.Resources.ResourceManager.GetString(System.String,System.Globalization.CultureInfo)">
      <summary>Gibt den Wert der Zeichenfolgenressource zurück, die für die angegebene Kultur lokalisiert wurde.</summary>
      <param name="name">Der Name der abzurufenden Ressource.</param>
      <param name="culture">Das Objekt, das die Kultur darstellt, für die die Ressource lokalisiert wird.</param>
      <returns>Der Wert der Ressource, die für die angegebene Kultur lokalisiert wurde, oder <see langword="null" />, wenn <paramref name="name" /> nicht in einem Ressourcensatz gefunden werden kann.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="name" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Der Wert der angegebenen Ressource ist keine Zeichenfolge.</exception>
      <exception cref="T:System.Resources.MissingManifestResourceException">Es wurde kein passender Satz von Ressourcen gefunden, und es sind keine Ressourcen für eine Standardkultur vorhanden. Informationen zur Behandlung dieser Ausnahme finden Sie im Abschnitt über die Behandlung von MissingManifestResourceException- und MissingSatelliteAssemblyException-Ausnahmen im Thema zur <see cref="T:System.Resources.ResourceManager" />-Klasse.</exception>
      <exception cref="T:System.Resources.MissingSatelliteAssemblyException">Die Ressourcen der Standardkultur befinden sich in einer Satellitenassembly, die nicht gefunden werden konnte. Informationen zur Behandlung dieser Ausnahme finden Sie im Abschnitt über die Behandlung von MissingManifestResourceException- und MissingSatelliteAssemblyException-Ausnahmen im Thema zur <see cref="T:System.Resources.ResourceManager" />-Klasse.</exception>
    </member>
    <member name="F:System.Resources.ResourceManager.HeaderVersionNumber">
      <summary>Gibt die Version der Ressourcendateiheader an, die die aktuelle Implementierung von <see cref="T:System.Resources.ResourceManager" /> interpretieren und erstellen kann.</summary>
    </member>
    <member name="P:System.Resources.ResourceManager.IgnoreCase">
      <summary>Ruft einen booleschen Wert ab, der angibt, ob der Ressourcen-Manager eine Ressourcensuche ohne Berücksichtigung der Groß- und Kleinschreibung in der <see cref="M:System.Resources.ResourceManager.GetString(System.String)" />-Methode und der <see cref="M:System.Resources.ResourceManager.GetObject(System.String)" />-Methode zulässt, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, um die Groß-/Kleinschreibung während der Ressourcensuche zu ignorieren; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Resources.ResourceManager.InternalGetResourceSet(System.Globalization.CultureInfo,System.Boolean,System.Boolean)">
      <summary>Stellt die Implementierung zum Suchen eines Ressourcensatzes bereit.</summary>
      <param name="culture">Das Kulturobjekt, nach dem gesucht werden soll.</param>
      <param name="createIfNotExists">
        <see langword="true" />, um den Ressourcensatz zu laden, falls er noch nicht geladen wurde; andernfalls <see langword="false" />.</param>
      <param name="tryParents">
        <see langword="true" />, um übergeordnete <see cref="T:System.Globalization.CultureInfo" />-Objekte zu prüfen, wenn der Ressourcensatz nicht geladen werden kann; andernfalls <see langword="false" />.</param>
      <returns>Der angegebene Ressourcensatz.</returns>
      <exception cref="T:System.Resources.MissingManifestResourceException">Die Hauptassembly enthält keine .resources-Datei, die erforderlich ist, um eine Ressource zu suchen.</exception>
      <exception cref="T:System.ExecutionEngineException">In der Laufzeit ist ein interner Fehler aufgetreten.</exception>
      <exception cref="T:System.Resources.MissingSatelliteAssemblyException">Die <paramref name="culture" /> zugeordnete Satellitenassembly konnte sich nicht gefunden werden.</exception>
    </member>
    <member name="F:System.Resources.ResourceManager.MagicNumber">
      <summary>Enthält die für die Identifizierung von Ressourcendateien verwendete Nummer.</summary>
    </member>
    <member name="F:System.Resources.ResourceManager.MainAssembly">
      <summary>Gibt die Hauptassembly an, die die Ressourcen enthält.</summary>
    </member>
    <member name="M:System.Resources.ResourceManager.ReleaseAllResources">
      <summary>Teilt dem Ressourcen-Manager mit, die <see cref="M:System.Resources.ResourceSet.Close" />-Methode bei allen <see cref="T:System.Resources.ResourceSet" />-Objekten aufzurufen und alle Ressourcen freizugeben.</summary>
    </member>
    <member name="P:System.Resources.ResourceManager.ResourceSetType">
      <summary>Ruft den Typ des Ressourcensatzobjekts ab, das der Ressourcen-Manager verwendet, um ein <see cref="T:System.Resources.ResourceSet" />-Objekt zu erstellen.</summary>
      <returns>Der Typ des Ressourcensatzobjekts, das der Ressourcen-Manager verwendet, um ein <see cref="T:System.Resources.ResourceSet" />-Objekt zu erstellen.</returns>
    </member>
    <member name="T:System.Resources.ResourceReader">
      <summary>Listet die Ressourcen in einer binären Ressourcendatei (.resources) durch Lesen von sequenziellen Ressourcenname-/Wert-Paaren auf.</summary>
    </member>
    <member name="M:System.Resources.ResourceReader.#ctor(System.IO.Stream)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Resources.ResourceReader" />-Klasse für den angegebenen Stream.</summary>
      <param name="stream">Der Eingabestream zum Lesen von Ressourcen.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="stream" />-Parameter ist nicht lesbar.</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="stream" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException">Beim Zugriff auf <paramref name="stream" /> ist ein E/A-Fehler aufgetreten.</exception>
    </member>
    <member name="M:System.Resources.ResourceReader.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Resources.ResourceReader" />-Klasse für die angegebene benannten Ressourcendatei.</summary>
      <param name="fileName">Der Pfad und der Name der zu lesenden Ressourcen-Datei. Bei <c>filename</c> wird nicht zwischen Groß- und Kleinschreibung unterschieden.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="fileName" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die Datei kann nicht gefunden werden.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler ist aufgetreten.</exception>
      <exception cref="T:System.BadImageFormatException">Die Ressourcendatei weist ein ungültiges Format auf. Zum Beispiel kann die Länge der Datei 0 (null) sein.</exception>
    </member>
    <member name="M:System.Resources.ResourceReader.Close">
      <summary>Gibt alle diesem <see cref="T:System.Resources.ResourceReader" />-Objekt zugeordneten Ressourcen des Betriebssystems frei.</summary>
    </member>
    <member name="M:System.Resources.ResourceReader.Dispose">
      <summary>Gibt alle von der aktuellen Instanz der <see cref="T:System.Resources.ResourceReader" />-Klasse verwendeten Ressourcen frei.</summary>
    </member>
    <member name="M:System.Resources.ResourceReader.GetEnumerator">
      <summary>Gibt ein Enumerator für dieses <see cref="T:System.Resources.ResourceReader" />-Objekt zurück.</summary>
      <returns>Ein Enumerator für dieses <see cref="T:System.Resources.ResourceReader" />-Objekt.</returns>
      <exception cref="T:System.InvalidOperationException">Der Reader wurde geschlossen oder freigegeben, der Zugriff ist daher nicht möglich.</exception>
    </member>
    <member name="M:System.Resources.ResourceReader.GetResourceData(System.String,System.String@,System.Byte[]@)">
      <summary>Ruft den Typnamen und die Daten einer benannten Ressource aus einer geöffneten Ressourcendatei oder einem geöffneten Stream ab.</summary>
      <param name="resourceName">Der Name einer Ressource.</param>
      <param name="resourceType">Diese Methode gibt eine Zeichenfolge zurück, die den Typnamen der abgerufenen Ressource darstellt. Dieser Parameter wird nicht initialisiert übergeben.</param>
      <param name="resourceData">Wenn diese Methode beendet wird, enthält sie ein Bytearray, das die Binärdarstellung des abgerufenen Typs ist. Dieser Parameter wird nicht initialisiert übergeben.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="resourceName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="resourceName" /> existiert nicht.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="resourceName" /> besitzt einen ungültigen Typ.</exception>
      <exception cref="T:System.FormatException">Die abgerufenen Ressourcendaten sind beschädigt.</exception>
      <exception cref="T:System.InvalidOperationException">Das aktuelle <see cref="T:System.Resources.ResourceReader" />-Objekt wurde nicht initialisiert, weil es wahrscheinlich geschlossen ist.</exception>
    </member>
    <member name="M:System.Resources.ResourceReader.System#Collections#IEnumerable#GetEnumerator">
      <summary>Gibt ein Enumerator für dieses <see cref="T:System.Resources.ResourceReader" />-Objekt zurück.</summary>
      <returns>Ein Enumerator für dieses <see cref="T:System.Resources.ResourceReader" />-Objekt.</returns>
      <exception cref="T:System.InvalidOperationException">Der Reader wurde bereits geschlossen, der Zugriff ist nicht möglich.</exception>
    </member>
    <member name="T:System.Resources.ResourceSet">
      <summary>Speichert alle Ressourcen, die für eine bestimmte Kultur lokalisiert wurden, wobei alle anderen Kulturen, einschließlich aller Fallbackregeln, ignoriert werden.</summary>
    </member>
    <member name="M:System.Resources.ResourceSet.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Resources.ResourceSet" />-Klasse mit Standardeigenschaften.</summary>
    </member>
    <member name="M:System.Resources.ResourceSet.#ctor(System.IO.Stream)">
      <summary>Erstellt mit dem standardmäßig festgelegten <see cref="T:System.Resources.ResourceSet" /> eine neue Instanz der <see cref="T:System.Resources.ResourceReader" />-Klasse, um Ressourcen aus dem angegebenen Stream zu lesen.</summary>
      <param name="stream">Der <see cref="T:System.IO.Stream" /> der zu lesenden Ressourcen. Der Stream muss auf eine vorhandene Ressourcendatei verweisen.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="stream" /> kann nicht gelesen werden.</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="stream" />-Parameter ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Resources.ResourceSet.#ctor(System.Resources.IResourceReader)">
      <summary>Erstellt eine neue Instanz der <see cref="T:System.Resources.ResourceSet" />-Klasse unter Verwendung des angegebenen Ressourcenreaders.</summary>
      <param name="reader">Der verwendete Reader.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="reader" />-Parameter ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Resources.ResourceSet.#ctor(System.String)">
      <summary>Erstellt mit dem standardmäßig festgelegten <see cref="T:System.Resources.ResourceSet" /> eine neue Instanz der <see cref="T:System.Resources.ResourceReader" />-Klasse, um Ressourcen aus dem angegebenen Stream zu öffnen und zu lesen.</summary>
      <param name="fileName">Zu lesende Ressourcendatei.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="fileName" />-Parameter ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Resources.ResourceSet.Close">
      <summary>Schließt alle von diesem <see cref="T:System.Resources.ResourceSet" /> verwendeten Ressourcen und gibt diese frei.</summary>
    </member>
    <member name="M:System.Resources.ResourceSet.Dispose">
      <summary>Gibt die durch die aktuelle Instanz von <see cref="T:System.Resources.ResourceSet" /> verwendeten Ressourcen frei, mit Ausnahme des Speichers.</summary>
    </member>
    <member name="M:System.Resources.ResourceSet.Dispose(System.Boolean)">
      <summary>Gibt die der aktuellen Instanz zugeordneten Ressourcen (mit Ausnahme des Speichers) frei und schließt auf Anforderung die intern verwalteten Objekte.</summary>
      <param name="disposing">Gibt an, ob die in der aktuellen Instanz enthaltenen Objekte explizit geschlossen werden sollen.</param>
    </member>
    <member name="M:System.Resources.ResourceSet.GetDefaultReader">
      <summary>Gibt die bevorzugte Klasse von Ressourcenreadern für diese Art von <see cref="T:System.Resources.ResourceSet" /> zurück.</summary>
      <returns>Der <see cref="T:System.Type" /> für den bevorzugten Ressourcenreader für diese Art von <see cref="T:System.Resources.ResourceSet" />.</returns>
    </member>
    <member name="M:System.Resources.ResourceSet.GetDefaultWriter">
      <summary>Gibt die bevorzugte Klasse von Ressourcenwritern für diese Art von <see cref="T:System.Resources.ResourceSet" /> zurück.</summary>
      <returns>Der <see cref="T:System.Type" /> für den bevorzugten Ressourcenwriter für diese Art von <see cref="T:System.Resources.ResourceSet" />.</returns>
    </member>
    <member name="M:System.Resources.ResourceSet.GetEnumerator">
      <summary>Gibt einen <see cref="T:System.Collections.IDictionaryEnumerator" /> zurück, der die <see cref="T:System.Resources.ResourceSet" /> durchlaufen kann.</summary>
      <returns>Ein <see cref="T:System.Collections.IDictionaryEnumerator" /> für dieses <see cref="T:System.Resources.ResourceSet" />.</returns>
      <exception cref="T:System.ObjectDisposedException">Der Ressourcensatz wurde geschlossen oder freigegeben.</exception>
    </member>
    <member name="M:System.Resources.ResourceSet.GetObject(System.String)">
      <summary>Sucht nach einem Ressourcenobjekt mit dem angegebenen Namen.</summary>
      <param name="name">Der Name der zu suchenden Ressource unter Berücksichtigung der Groß- und Kleinschreibung.</param>
      <returns>Die angeforderte Ressource.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="name" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Das Objekt wurde geschlossen oder freigegeben.</exception>
    </member>
    <member name="M:System.Resources.ResourceSet.GetObject(System.String,System.Boolean)">
      <summary>Sucht auf Anforderung unter Berücksichtigung der Groß- und Kleinschreibung nach einem Ressourcenobjekt mit dem angegebenen Namen.</summary>
      <param name="name">Der Name der zu suchenden Ressource.</param>
      <param name="ignoreCase">Gibt an, ob die Groß- und Kleinschreibung beim angegebenen Namen ignoriert werden soll.</param>
      <returns>Die angeforderte Ressource.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="name" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Das Objekt wurde geschlossen oder freigegeben.</exception>
    </member>
    <member name="M:System.Resources.ResourceSet.GetString(System.String)">
      <summary>Sucht nach einer <see cref="T:System.String" />-Ressource mit dem angegebenen Namen.</summary>
      <param name="name">Der Name der zu suchenden Ressource.</param>
      <returns>Der Wert einer Ressource, wenn der Wert ein <see cref="T:System.String" /> ist.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="name" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Die von <paramref name="name" /> angegebene Ressource ist keine <see cref="T:System.String" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Das Objekt wurde geschlossen oder freigegeben.</exception>
    </member>
    <member name="M:System.Resources.ResourceSet.GetString(System.String,System.Boolean)">
      <summary>Sucht auf Anforderung ohne Berücksichtigung der Groß- und Kleinschreibung nach einer <see cref="T:System.String" />-Ressource mit dem angegebenen Namen.</summary>
      <param name="name">Der Name der zu suchenden Ressource.</param>
      <param name="ignoreCase">Gibt an, ob die Groß- und Kleinschreibung beim angegebenen Namen ignoriert werden soll.</param>
      <returns>Der Wert einer Ressource, wenn der Wert ein <see cref="T:System.String" /> ist.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="name" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Die von <paramref name="name" /> angegebene Ressource ist keine <see cref="T:System.String" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Das Objekt wurde geschlossen oder freigegeben.</exception>
    </member>
    <member name="M:System.Resources.ResourceSet.ReadResources">
      <summary>Liest alle Ressourcen und speichert diese in einer <see cref="T:System.Collections.Hashtable" />, die in der <see cref="F:System.Resources.ResourceSet.Table" />-Eigenschaft angegeben ist.</summary>
    </member>
    <member name="M:System.Resources.ResourceSet.System#Collections#IEnumerable#GetEnumerator">
      <summary>Gibt ein <see cref="T:System.Collections.IEnumerator" />-Objekt zurück, um eine Racebedingung mit <see langword="Dispose" /> zu vermeiden. Dieser Member ist nicht für die direkte Verwendung im Code vorgesehen.</summary>
      <returns>Ein Enumerator für das aktuelle <see cref="T:System.Resources.ResourceSet" />-Objekt.</returns>
    </member>
    <member name="T:System.Resources.SatelliteContractVersionAttribute">
      <summary>Weist ein <see cref="T:System.Resources.ResourceManager" />-Objekt an, eine bestimmte Version einer Satellitenassembly anzufordern.</summary>
    </member>
    <member name="M:System.Resources.SatelliteContractVersionAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Resources.SatelliteContractVersionAttribute" />-Klasse.</summary>
      <param name="version">Eine Zeichenfolge, die die Version der zu ladenden Satellitenassemblys angibt.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="version" />-Parameter ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Resources.SatelliteContractVersionAttribute.Version">
      <summary>Ruft die Version der Satellitenassemblys mit den erforderlichen Ressourcen ab.</summary>
      <returns>Eine Zeichenfolge, die die Version der Satellitenassemblys mit den erforderlichen Ressourcen enthält.</returns>
    </member>
    <member name="T:System.Resources.UltimateResourceFallbackLocation">
      <summary>Gibt an, ob ein <see cref="T:System.Resources.ResourceManager" />-Objekt nach den Ressourcen der Standardkultur der Anwendung in der Hauptassembly oder in einer Satellitenassembly sucht.</summary>
    </member>
    <member name="F:System.Resources.UltimateResourceFallbackLocation.MainAssembly">
      <summary>Fallbackressourcen befinden sich in der Hauptassembly.</summary>
    </member>
    <member name="F:System.Resources.UltimateResourceFallbackLocation.Satellite">
      <summary>Fallbackressourcen befinden sich in einer Satellitenassembly.</summary>
    </member>
  </members>
</doc>