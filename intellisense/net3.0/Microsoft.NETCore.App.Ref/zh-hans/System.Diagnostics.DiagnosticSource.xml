<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Diagnostics.DiagnosticSource</name>
  </assembly>
  <members>
    <member name="T:System.Diagnostics.Activity">
      <summary>表示具有要用于日志记录的上下文的操作。</summary>
    </member>
    <member name="M:System.Diagnostics.Activity.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Diagnostics.Activity" /> 类的新实例。</summary>
      <param name="operationName">操作的名称。</param>
    </member>
    <member name="P:System.Diagnostics.Activity.ActivityTraceFlags">
      <summary>获取与活动关联的标志（由 W3C ID 规范定义）。</summary>
      <returns>与活动关联的标志。</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.AddBaggage(System.String,System.String)">
      <summary>更新 <see cref="T:System.Diagnostics.Activity" />，使用指定的键和值获取新的行李项。</summary>
      <param name="key">行李键。</param>
      <param name="value">行李值。</param>
      <returns>便于链接的 <see langword="this" />。</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.AddTag(System.String,System.String)">
      <summary>更新 <see cref="T:System.Diagnostics.Activity" />，使用所提供的 <paramref name="key" /> 和 <paramref name="value" /> 获取新标记。 。</summary>
      <param name="key">标记键。</param>
      <param name="value">标记值。</param>
      <returns>便于链接的 <see langword="this" />。</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Baggage">
      <summary>获取键/值对的集合，它表示传递给此 <see cref="T:System.Diagnostics.Activity" /> 的子元素的信息。</summary>
      <returns>字符串字符串键值对的枚举。</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Current">
      <summary>获取或设置当前线程的当前操作 (<see cref="T:System.Diagnostics.Activity" />)。  这会跨异步调用传递。</summary>
      <returns>当前线程的当前操作。</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.DefaultIdFormat">
      <summary>获取或设置 <see cref="T:System.Diagnostics.Activity" /> 的默认 ID 格式。</summary>
    </member>
    <member name="P:System.Diagnostics.Activity.Duration">
      <summary>获取操作的持续时间。</summary>
      <returns>
        <see cref="P:System.Diagnostics.Activity.StartTimeUtc" />
        <see cref="F:System.TimeSpan.Zero" />如果已结束 (<see cref="M:System.Diagnostics.Activity.Stop" /><see cref="M:System.Diagnostics.Activity.SetEndTime(System.DateTime)" />或已<see cref="M:System.Diagnostics.Activity.SetEndTime(System.DateTime)" />调用), 则为和结束时间之间的增量, 或者, 如果未结束且未调用,则为。<see cref="T:System.Diagnostics.Activity" /><see cref="T:System.Diagnostics.Activity" /></returns>
    </member>
    <member name="P:System.Diagnostics.Activity.ForceDefaultIdFormat">
      <summary>获取或设置一个值，该值用于确定 <see cref="P:System.Diagnostics.Activity.DefaultIdFormat" /> 是否始终用于定义默认 ID 格式。</summary>
      <returns>
        <see langword="true" />如果始终使用<see cref="P:System.Diagnostics.Activity.DefaultIdFormat" />, <see langword="false" />则为; 否则为。</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.GetBaggageItem(System.String)">
      <summary>返回通过 <see cref="M:System.Diagnostics.Activity.AddBaggage(System.String,System.String)" /> 添加到活动的键值对的值。</summary>
      <param name="key">行李键。</param>
      <returns>如果存在，则为键值对项的值；如果不存在，则为 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Id">
      <summary>获取特定请求专属的标识符。</summary>
      <returns>活动 ID。</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.IdFormat">
      <summary>获取 <see cref="P:System.Diagnostics.Activity.Id" /> 的格式。</summary>
      <returns>的格式<see cref="P:System.Diagnostics.Activity.Id" />。</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.OperationName">
      <summary>获取操作名称。</summary>
      <returns>操作的名称。</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Parent">
      <summary>获取创建此活动的父级 <see cref="T:System.Diagnostics.Activity" />。</summary>
      <returns>此<see cref="T:System.Diagnostics.Activity" />的父级 (如果它来自同一进程), 或者<see langword="null" /> , 如果此实例没有父项 (它是根活动) 或者父对象来自进程外, 则为。</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.ParentId">
      <summary>获取此活动父级的 ID。</summary>
      <returns>父 ID (如果存在), <see langword="null" />如果不存在, 则为。</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.ParentSpanId">
      <summary>获取父级的 <see cref="P:System.Diagnostics.Activity.SpanId" />。</summary>
      <returns>父项的<see cref="P:System.Diagnostics.Activity.SpanId" />。</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Recorded">
      <summary>获取一个值，指示是否已设置 W3CIdFlags.Recorded 标志。</summary>
      <returns>
        <see langword="true" />如果设置了 W3CIdFlags 标志, 则为;否则为<see langword="false" />。</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.RootId">
      <summary>获取此 <see cref="T:System.Diagnostics.Activity" /> 的根 ID。</summary>
      <returns>根 ID; <see langword="null" />如果当前实例有<see cref="P:System.Diagnostics.Activity.ParentId" />或<see cref="P:System.Diagnostics.Activity.Id" />, 则为。</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetEndTime(System.DateTime)">
      <summary>更新 <see cref="T:System.Diagnostics.Activity" />，将其 <see cref="P:System.Diagnostics.Activity.Duration" /> 设置为 <see cref="P:System.Diagnostics.Activity.StartTimeUtc" /> 与指定的停止时间之间的差值。</summary>
      <param name="endTimeUtc">UTC 停止时间。</param>
      <returns>便于链接的 <see langword="this" />。</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetIdFormat(System.Diagnostics.ActivityIdFormat)">
      <summary>在开始前，设置此 <see cref="T:System.Diagnostics.Activity" /> 的 ID 格式。</summary>
      <param name="format">枚举值之一，它指定 <see cref="P:System.Diagnostics.Activity.Id" /> 属性的格式。</param>
      <returns>便于链接的 <see langword="this" />。</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetParentId(System.Diagnostics.ActivityTraceId,System.Diagnostics.ActivitySpanId,System.Diagnostics.ActivityTraceFlags)">
      <summary>使用 TraceId 和 SpanId 的 W3C 约定设置父 ID。</summary>
      <param name="traceId">父活动的 TraceId。</param>
      <param name="spanId">父活动的 SpanId。</param>
      <param name="activityTraceFlags">其中一个枚举值，该值指定由 W3C 标准定义的与活动关联的标志。</param>
      <returns>便于链接的 <see langword="this" />。</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetParentId(System.String)">
      <summary>更新此 <see cref="T:System.Diagnostics.Activity" />，以指示 ID 为 <paramref name="parentId" /> 的 <see cref="T:System.Diagnostics.Activity" /> 导致了此 <see cref="T:System.Diagnostics.Activity" />。</summary>
      <param name="parentId">父级操作的 ID。</param>
      <returns>便于链接的 <see langword="this" />。</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetStartTime(System.DateTime)">
      <summary>设置此 <see cref="T:System.Diagnostics.Activity" /> 的开始时间。</summary>
      <param name="startTimeUtc">UTC 中的 <see cref="T:System.Diagnostics.Activity" /> 开始时间。</param>
      <returns>便于链接的 <see langword="this" />。</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.SpanId">
      <summary>获取 <see cref="P:System.Diagnostics.Activity.Id" /> 的 SPAN 部分。</summary>
      <returns>如果具有 W3C 格式<see cref="P:System.Diagnostics.Activity.Id" />, 则为跨距部分的 ID; 否则为零<see langword="SpanId" />。 <see cref="T:System.Diagnostics.Activity" /></returns>
    </member>
    <member name="M:System.Diagnostics.Activity.Start">
      <summary>启动活动。</summary>
      <returns>便于链接的 <see langword="this" />。</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.StartTimeUtc">
      <summary>获取操作开始的时间。</summary>
      <returns>操作开始的 UTC 时间。</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.Stop">
      <summary>停止活动。</summary>
    </member>
    <member name="P:System.Diagnostics.Activity.Tags">
      <summary>获取键/值对的集合，这些键/值对表示将与 <see cref="T:System.Diagnostics.Activity" /> 一起记录到日志系统的信息。</summary>
      <returns>字符串字符串键值对的枚举。</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.TraceId">
      <summary>获取 <see cref="P:System.Diagnostics.Activity.Id" /> 的 TraceId 部分。</summary>
      <returns>如果 id 具有 W3C 格式<see cref="P:System.Diagnostics.Activity.Id" />, 则为的 TraceId 部分的 id; 否则为零 TraceId。</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.TraceStateString">
      <summary>获取 W3C <see langword="tracestate" /> 标头。</summary>
      <returns>W3C <see langword="tracestate" />标头。</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityIdFormat">
      <summary>指定 <see cref="P:System.Diagnostics.Activity.Id" /> 属性的格式。</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityIdFormat.Hierarchical">
      <summary>分层格式。</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityIdFormat.Unknown">
      <summary>未知格式。</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityIdFormat.W3C">
      <summary>W3C 格式。</summary>
    </member>
    <member name="T:System.Diagnostics.ActivitySpanId">
      <summary>表示 <see cref="P:System.Diagnostics.Activity.SpanId" />，其格式基于 W3C 标准。</summary>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CopyTo(System.Span{System.Byte})">
      <summary>将当前 <see cref="T:System.Diagnostics.ActivitySpanId" /> 的 8 个字节复制到指定的范围。</summary>
      <param name="destination">要将 SpanID 的 8 个字节复制到的范围。</param>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateFromBytes(System.ReadOnlySpan{System.Byte})">
      <summary>从一个包含 8 个字节的只读范围创建一个新的 <see cref="T:System.Diagnostics.ActivitySpanId" /> 值。</summary>
      <param name="idData">一个包含 8 个字节的只读范围。</param>
      <returns>新的范围 ID。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="idData" /> 不包含 8 个字节。</exception>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateFromString(System.ReadOnlySpan{System.Char})">
      <summary>从一个包含 16 个十六进制字符的只读范围创建一个新的 <see cref="T:System.Diagnostics.ActivitySpanId" /> 值。</summary>
      <param name="idData">一个包含 16 个十六进制字符的范围。</param>
      <returns>新的范围 ID。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="idData" /> 不包含 16 个十六进制字符。

或 - 
<paramref name="idData" /> 中的字符并非全为小写的十六进制字符或全为零。</exception>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateFromUtf8String(System.ReadOnlySpan{System.Byte})">
      <summary>从一个包含 UTF8 编码字节的只读范围创建一个新的 <see cref="T:System.Diagnostics.ActivitySpanId" /> 值。</summary>
      <param name="idData">一个包含 UTF8 编码字节的只读范围。</param>
      <returns>新的范围 ID。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateRandom">
      <summary>基于一个随机数字（很可能是唯一的数字）创建一个新的 <see cref="T:System.Diagnostics.ActivitySpanId" />。</summary>
      <returns>新的范围 ID。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.Equals(System.Diagnostics.ActivitySpanId)">
      <summary>确定此实例是否与指定的 <see cref="T:System.Diagnostics.ActivitySpanId" /> 实例具有相同的值。</summary>
      <param name="spanId">要比较的实例。</param>
      <returns>如果 <paramref name="spanId" /> 与当前实例含有相同的十六进制值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.Equals(System.Object)">
      <summary>当前实例和指定对象（必须也是 <see cref="T:System.Diagnostics.ActivitySpanId" /> 实例）具有相同值。</summary>
      <param name="obj">要比较的对象。</param>
      <returns>如果 <paramref name="obj" /> 是 <see cref="T:System.Diagnostics.ActivitySpanId" /> 的实例，且与当前实例具有相同的十六进制值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.GetHashCode">
      <summary>返回 SpanId 的哈希代码。</summary>
      <returns>SpanId 的哈希代码。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.op_Equality(System.Diagnostics.ActivitySpanId,System.Diagnostics.ActivitySpanId)">
      <summary>确定两个指定的 <see cref="T:System.Diagnostics.ActivitySpanId" /> 实例是否具有相同的值。</summary>
      <param name="spanId1">要比较的第一个实例。</param>
      <param name="spandId2">要比较的第二个实例。</param>
      <returns>如果 <paramref name="spanId1" /> 的 SpanId 与 <paramref name="spandId2" /> 的 SpanId 相同，则为 <see langword="true" /> ；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.op_Inequality(System.Diagnostics.ActivitySpanId,System.Diagnostics.ActivitySpanId)">
      <summary>确定两个指定的 <see cref="T:System.Diagnostics.ActivitySpanId" /> 实例是否具有不相等的值。</summary>
      <param name="spanId1">要比较的第一个实例。</param>
      <param name="spandId2">要比较的第二个实例。</param>
      <returns>如果 <paramref name="spanId1" /> 的 SpanId 与 <paramref name="spandId2" /> 的 SpanId 不同，则为 <see langword="true" /> ；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.ToHexString">
      <summary>返回表示此范围 ID 的 16 个字符的十六进制字符串。</summary>
      <returns>表示此范围 ID 的 16 个字符的十六进制字符串。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.ToString">
      <summary>返回表示此范围 ID 的 16 个字符的十六进制字符串。</summary>
      <returns>表示此范围 ID 的 16 个字符的十六进制字符串。</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityTraceFlags">
      <summary>指定由 W3C 标准定义的与活动关联的标志。</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityTraceFlags.None">
      <summary>尚未标记活动。</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityTraceFlags.Recorded">
      <summary>活动（或更可能为它的父项）已标记为可用于记录。</summary>
    </member>
    <member name="T:System.Diagnostics.ActivityTraceId">
      <summary>表示 <see cref="P:System.Diagnostics.Activity.TraceId" />，其格式基于 W3C 标准。</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CopyTo(System.Span{System.Byte})">
      <summary>将当前 <see cref="T:System.Diagnostics.ActivityTraceId" /> 的 16 个字节复制到指定的范围。</summary>
      <param name="destination">要将跟踪 ID 的 16 个字节复制到的范围。</param>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateFromBytes(System.ReadOnlySpan{System.Byte})">
      <summary>从一个包含 16 个字节的只读范围创建一个新的 <see cref="T:System.Diagnostics.ActivityTraceId" /> 值。</summary>
      <param name="idData">一个包含 16 个字节的只读范围。</param>
      <returns>新的跟踪 ID。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="idData" /> 不包含 8 个字节。</exception>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateFromString(System.ReadOnlySpan{System.Char})">
      <summary>从一个包含 32 个十六进制字符的只读范围创建一个新的 <see cref="T:System.Diagnostics.ActivityTraceId" /> 值。</summary>
      <param name="idData">一个包含 32 个十六进制字符的范围。</param>
      <returns>新的跟踪 ID。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="idData" /> 不包含 16 个十六进制字符。
或
<paramref name="idData" /> 中的字符并非全为小写的十六进制字符或全为零。</exception>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateFromUtf8String(System.ReadOnlySpan{System.Byte})">
      <summary>从一个包含 UTF8 编码字节的只读范围创建一个新的 <see cref="T:System.Diagnostics.ActivityTraceId" /> 值。</summary>
      <param name="idData">一个包含 UTF8 编码字节的只读范围。</param>
      <returns>新的跟踪 ID。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateRandom">
      <summary>基于一个随机数字（很可能是唯一的数字）创建一个新的 <see cref="T:System.Diagnostics.ActivitySpanId" />。</summary>
      <returns>新的范围 ID。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.Equals(System.Diagnostics.ActivityTraceId)">
      <summary>确定当前实例与指定的 <see cref="T:System.Diagnostics.ActivityTraceId" /> 是否相等。</summary>
      <param name="traceId">要比较的实例。</param>
      <returns>如果 <paramref name="traceId" /> 与当前实例含有相同的十六进制值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.Equals(System.Object)">
      <summary>确定此实例是否与指定的对象（也必须是 <see cref="T:System.Diagnostics.ActivityTraceId" /> 实例）具有相同的值。</summary>
      <param name="obj">要比较的对象。</param>
      <returns>如果 <paramref name="obj" /> 是 <see cref="T:System.Diagnostics.ActivityTraceId" /> 的实例，且与当前实例具有相同的十六进制值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.GetHashCode">
      <summary>返回 TraceId 的哈希代码。</summary>
      <returns>TraceId 的哈希代码。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.op_Equality(System.Diagnostics.ActivityTraceId,System.Diagnostics.ActivityTraceId)">
      <summary>确定两个指定的 <see cref="T:System.Diagnostics.ActivityTraceId" /> 实例是否具有相同的值。</summary>
      <param name="traceId1">要比较的第一个实例。</param>
      <param name="traceId2">要比较的第二个实例。</param>
      <returns>如果 <paramref name="traceId1" /> 的 TraceId 与 <paramref name="traceId2" /> 的 TraceId 相同，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.op_Inequality(System.Diagnostics.ActivityTraceId,System.Diagnostics.ActivityTraceId)">
      <summary>确定两个指定的 <see cref="T:System.Diagnostics.ActivityTraceId" /> 实例是否具有相同的值。</summary>
      <param name="traceId1">要比较的第一个实例。</param>
      <param name="traceId2">要比较的第二个实例。</param>
      <returns>如果 <paramref name="traceId1" /> 的 TraceId 与 <paramref name="traceId2" /> 的 TraceId 不同，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.ToHexString">
      <summary>返回表示此范围 ID 的 16 个字符的十六进制字符串。</summary>
      <returns>表示此跟踪 ID 的 32 个字符的十六进制字符串。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.ToString">
      <summary>返回表示此跟踪 ID 的 32 个字符的十六进制字符串。</summary>
      <returns>表示此跟踪 ID 的 32 个字符的十六进制字符串。</returns>
    </member>
    <member name="T:System.Diagnostics.DiagnosticListener">
      <summary>提供抽象 <see cref="T:System.Diagnostics.DiagnosticSource" /> 类的实现，它表示源将其信息（事件）发送到的指定位置。</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.#ctor(System.String)">
      <summary>创建一个新的 <see cref="T:System.Diagnostics.DiagnosticListener" />。</summary>
      <param name="name">此 <see cref="T:System.Diagnostics.DiagnosticListener" /> 的名称。</param>
    </member>
    <member name="P:System.Diagnostics.DiagnosticListener.AllListeners">
      <summary>获取此 <see cref="T:System.Diagnostics.DiagnosticListener" /> 的侦听器的集合。</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Dispose">
      <summary>释放 NotificationListeners。</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.IsEnabled">
      <summary>确定是否有订阅者已注册。</summary>
      <returns>如果有订阅者已注册，为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.IsEnabled(System.String)">
      <summary>检查是否已启用 <see cref="T:System.Diagnostics.DiagnosticListener" />。</summary>
      <param name="name" />
      <returns>如果已启用通知，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.IsEnabled(System.String,System.Object,System.Object)">
      <summary>检查是否已启用 DiagnosticListener。</summary>
      <param name="name" />
      <param name="arg1" />
      <param name="arg2" />
      <returns>如果已启用，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Diagnostics.DiagnosticListener.Name">
      <summary>获取此 <see cref="T:System.Diagnostics.DiagnosticListener" /> 的名称。</summary>
      <returns>
        <see cref="T:System.Diagnostics.DiagnosticListener" /> 的名称。</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.OnActivityExport(System.Diagnostics.Activity,System.Object)">
      <summary>调用所有订阅服务器的 OnActivityExport 方法。</summary>
      <param name="activity">受外部事件影响的活动。</param>
      <param name="payload">一个表示传出请求的对象。</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.OnActivityImport(System.Diagnostics.Activity,System.Object)">
      <summary>调用所有订阅服务器的 OnActivityImport 方法。</summary>
      <param name="activity">受外部事件影响的活动。</param>
      <param name="payload">表示传入请求的对象。</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
      <summary>添加订阅者。</summary>
      <param name="observer">订阅者。</param>
      <returns>对允许侦听器在 <see cref="T:System.Diagnostics.DiagnosticSource" /> 发送完通知前停止接收这些通知的接口的引用。</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Func{System.String,System.Object,System.Object,System.Boolean})">
      <summary>添加一个订阅者，根据事件名称和最多两个上下文对象筛选事件（可选）。</summary>
      <param name="observer">订阅者。</param>
      <param name="isEnabled">一个委托，它根据事件名称和最多两个上下文对象筛选事件（可为 <see langword="null" />），如果不需要事件筛选器，则为 <see langword="null" />。</param>
      <returns>对允许侦听器在 <see cref="T:System.Diagnostics.DiagnosticSource" /> 发送完通知前停止接收这些通知的接口的引用。</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Func{System.String,System.Object,System.Object,System.Boolean},System.Action{System.Diagnostics.Activity,System.Object},System.Action{System.Diagnostics.Activity,System.Object})">
      <summary>添加一个订阅者，根据事件名称和最多两个上下文对象筛选事件（可选），并指定提供程序在进程外部导入或导出活动时调用的方法。</summary>
      <param name="observer">订阅者。</param>
      <param name="isEnabled">一个委托，它根据事件名称和最多两个上下文对象筛选事件（可为 <see langword="null" />），如果不需要事件筛选器，则为 <see langword="null" />。</param>
      <param name="onActivityImport">一个操作委托，用于接收由外部事件影响的活动以及表示传入请求的对象。</param>
      <param name="onActivityExport">一个操作委托，用于接收由外部事件影响的活动以及表示传出请求的对象。</param>
      <returns>对允许侦听器在 <see cref="T:System.Diagnostics.DiagnosticSource" /> 发送完通知前停止接收这些通知的接口的引用。</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Predicate{System.String})">
      <summary>添加一个订阅者，根据事件名称筛选事件（可选）。</summary>
      <param name="observer">订阅者。</param>
      <param name="isEnabled">一个委托，它根据其名称 (<see cref="T:System.String" />) 筛选事件。 如果已启用事件，则委托应返回 <see langword="true" />。</param>
      <returns>对允许侦听器在 <see cref="T:System.Diagnostics.DiagnosticSource" /> 发送完通知前停止接收这些通知的接口的引用。</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.ToString">
      <summary>返回一个字符串，它具有此 DiagnosticListener 的名称。</summary>
      <returns>此 DiagnosticListener 的名称。</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Write(System.String,System.Object)">
      <summary>记录一个通知。</summary>
      <param name="name">要记录的事件的名称。</param>
      <param name="value">一个对象，它表示事件的有效负载。</param>
    </member>
    <member name="T:System.Diagnostics.DiagnosticSource">
      <summary>一个抽象类，它允许针对丰富数据有效负载的生产时日志记录检测代码，以在被检测的进程中使用。</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.#ctor">
      <summary>初始化 <see cref="T:System.Diagnostics.DiagnosticSource" /> 类的实例。</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.IsEnabled(System.String)">
      <summary>验证通知事件是否已启用。</summary>
      <param name="name">正在写入的事件的名称。</param>
      <returns>如果通知事件已启用，为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.IsEnabled(System.String,System.Object,System.Object)">
      <summary>验证通知事件是否已启用。</summary>
      <param name="name">正在写入的事件的名称。</param>
      <param name="arg1">一个对象，它表示 IsEnabled 的附加上下文。 使用者应会收到 <see langword="null" />，它可能表示生成方已调用纯 IsEnabled(string) 来检查使用者是否确实要获取此类事件的通知。 基于此，生成方可使用非 <see langword="null" /> 上下文再次调用 IsEnabled(string, object, object)。</param>
      <param name="arg2">可选。 一个对象，它表示 IsEnabled 的附加上下文。 默认值为 <see langword="null" />。 使用者应会收到 <see langword="null" />，它可能表示生成方已调用纯 IsEnabled(string) 或者已在 <paramref name="arg1" /> 中传递所有必要的上下文。</param>
      <returns>如果通知事件已启用，为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.OnActivityExport(System.Diagnostics.Activity,System.Object)">
      <summary>将状态从活动转移到将在进程外发生的某些事件或操作，例如传出 HTTP 请求。</summary>
      <param name="activity">受外部事件影响的活动。</param>
      <param name="payload">一个表示传出请求的对象。</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.OnActivityImport(System.Diagnostics.Activity,System.Object)">
      <summary>将状态从将在进程外发生的某些事件或操作（例如传入请求）转移到活动。</summary>
      <param name="activity">受外部事件影响的活动。</param>
      <param name="payload">表示传入请求的有效负载。</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.StartActivity(System.Diagnostics.Activity,System.Object)">
      <summary>启动 <see cref="T:System.Diagnostics.Activity" /> 并写入启动事件。</summary>
      <param name="activity">要启动的 <see cref="T:System.Diagnostics.Activity" />。</param>
      <param name="args">一个对象，它表示作为事件的有效负载传递的值。</param>
      <returns>便于链接的已启动的活动。</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.StopActivity(System.Diagnostics.Activity,System.Object)">
      <summary>停止给定的 <see cref="T:System.Diagnostics.Activity" />，维护全局 <see cref="P:System.Diagnostics.Activity.Current" /> 活动，并通知使用者 <see cref="T:System.Diagnostics.Activity" /> 已停止。</summary>
      <param name="activity">要停止的活动。</param>
      <param name="args">一个对象，它表示作为事件的有效负载传递的值。</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.Write(System.String,System.Object)">
      <summary>提供记录复杂有效负载的通用方法。</summary>
      <param name="name">正在写入的事件的名称。</param>
      <param name="value">一个对象，它表示作为事件的有效负载传递的值。 这通常是一个包含多个子值的匿名类型。</param>
    </member>
  </members>
</doc>