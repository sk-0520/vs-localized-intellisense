<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Threading.Timer</name>
  </assembly>
  <members>
    <member name="T:System.Threading.Timer">
      <summary>지정된 간격으로 스레드 풀 스레드에 대해 메서드를 실행하는 메커니즘을 제공합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback)">
      <summary>새로 만든 <see cref="T:System.Threading.Timer" /> 개체를 상태 개체로 사용하고 무한 기간 및 무한 만료 예정 시간을 지정하여 <see cref="T:System.Threading.Timer" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="callback">실행할 메서드를 나타내는 <see cref="T:System.Threading.TimerCallback" /> 대리자입니다.</param>
    </member>
    <member name="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.Int32,System.Int32)">
      <summary>부호 있는 32비트 정수로 시간 간격을 지정하여 <see langword="Timer" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="callback">실행할 메서드를 나타내는 <see cref="T:System.Threading.TimerCallback" /> 대리자입니다.</param>
      <param name="state">콜백 메서드에서 사용할 정보가 포함된 개체를 반환하거나 <see langword="null" />을 반환합니다.</param>
      <param name="dueTime">
        <paramref name="callback" />이 호출되기 전에 지연할 시간(밀리초)입니다. 타이머가 시작되지 않도록 하려면 <see cref="F:System.Threading.Timeout.Infinite" />를 지정합니다. 타이머를 즉시 시작하려면 0을 지정합니다.</param>
      <param name="period">
        <paramref name="callback" /> 호출 사이의 시간 간격(밀리초)입니다. 정기적으로 신호를 보내지 않도록 하려면 <see cref="F:System.Threading.Timeout.Infinite" />를 지정합니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="dueTime" /> 또는 <paramref name="period" /> 매개 변수가 음수이고 <see cref="F:System.Threading.Timeout.Infinite" />와 같지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callback" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.Int64,System.Int64)">
      <summary>부호 있는 64비트 정수로 시간 간격을 측정하여 <see langword="Timer" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="callback">실행할 메서드를 나타내는 <see cref="T:System.Threading.TimerCallback" /> 대리자입니다.</param>
      <param name="state">콜백 메서드에서 사용할 정보가 포함된 개체를 반환하거나 <see langword="null" />을 반환합니다.</param>
      <param name="dueTime">
        <paramref name="callback" />이 호출되기 전에 지연할 시간(밀리초)입니다. 타이머가 시작되지 않도록 하려면 <see cref="F:System.Threading.Timeout.Infinite" />를 지정합니다. 타이머를 즉시 시작하려면 0을 지정합니다.</param>
      <param name="period">
        <paramref name="callback" /> 호출 사이의 시간 간격(밀리초)입니다. 정기적으로 신호를 보내지 않도록 하려면 <see cref="F:System.Threading.Timeout.Infinite" />를 지정합니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="dueTime" /> 또는 <paramref name="period" /> 매개 변수가 음수이고 <see cref="F:System.Threading.Timeout.Infinite" />와 같지 않은 경우</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="dueTime" /> 또는 <paramref name="period" /> 매개 변수가 4294967294보다 큰 경우</exception>
    </member>
    <member name="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.TimeSpan,System.TimeSpan)">
      <summary>
        <see cref="T:System.TimeSpan" /> 값을 사용하여 시간 간격을 측정하여 <see langword="Timer" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="callback">실행할 메서드를 나타내는 대리자입니다.</param>
      <param name="state">콜백 메서드에서 사용할 정보가 포함된 개체를 반환하거나 <see langword="null" />을 반환합니다.</param>
      <param name="dueTime">
        <paramref name="callback" /> 매개 변수에서 해당 메서드를 호출하기 전에 지연될 시간입니다. 타이머가 시작되지 않게 하려면 -1밀리초를 지정합니다. 타이머를 즉시 시작하려면 0을 지정합니다.</param>
      <param name="period">
        <paramref name="callback" />에서 참조하는 메서드 호출 사이의 시간 간격입니다. 정기적으로 신호를 보내지 않도록 하려면 -1밀리초를 지정합니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="dueTime" /> 또는 <paramref name="period" /> 값의 밀리초 수가 음수이고 <see cref="F:System.Threading.Timeout.Infinite" />와 같지 않거나 <see cref="F:System.Int32.MaxValue" />보다 큰 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callback" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.UInt32,System.UInt32)">
      <summary>부호 있는 32비트 정수로 시간 간격을 측정하여 <see langword="Timer" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="callback">실행할 메서드를 나타내는 대리자입니다.</param>
      <param name="state">콜백 메서드에서 사용할 정보가 포함된 개체를 반환하거나 <see langword="null" />을 반환합니다.</param>
      <param name="dueTime">
        <paramref name="callback" />이 호출되기 전에 지연할 시간(밀리초)입니다. 타이머가 시작되지 않도록 하려면 <see cref="F:System.Threading.Timeout.Infinite" />를 지정합니다. 타이머를 즉시 시작하려면 0을 지정합니다.</param>
      <param name="period">
        <paramref name="callback" /> 호출 사이의 시간 간격(밀리초)입니다. 정기적으로 신호를 보내지 않도록 하려면 <see cref="F:System.Threading.Timeout.Infinite" />를 지정합니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="dueTime" /> 또는 <paramref name="period" /> 매개 변수가 음수이고 <see cref="F:System.Threading.Timeout.Infinite" />와 같지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callback" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.Threading.Timer.ActiveCount">
      <summary>현재 활성 상태인 타이머의 수를 가져옵니다. 활성 타이머는 미래의 특정 시점에 작동하도록 등록되어 있으며 아직 취소되지 않았습니다.</summary>
      <returns>현재 활성 상태인 타이머의 수입니다.</returns>
    </member>
    <member name="M:System.Threading.Timer.Change(System.Int32,System.Int32)">
      <summary>부호 있는 32비트 정수로 시간 간격을 측정하여 타이머 시작 시간 및 메서드 호출 사이의 간격을 변경합니다.</summary>
      <param name="dueTime">
        <see cref="T:System.Threading.Timer" />가 구성될 때 지정되는 콜백 메서드를 호출하기 전의 지연 시간(밀리초)입니다. 타이머가 다시 시작되지 않도록 하려면 <see cref="F:System.Threading.Timeout.Infinite" />를 지정합니다. 타이머를 즉시 시작하려면 0을 지정합니다.</param>
      <param name="period">
        <see cref="T:System.Threading.Timer" />가 생성되었을 때 지정된 콜백 메서드 호출 사이의 간격(밀리초)입니다. 정기적으로 신호를 보내지 않도록 하려면 <see cref="F:System.Threading.Timeout.Infinite" />를 지정합니다.</param>
      <returns>타이머가 성공적으로 업데이트되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Threading.Timer" />가 이미 삭제된 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="dueTime" /> 또는 <paramref name="period" /> 매개 변수가 음수이고 <see cref="F:System.Threading.Timeout.Infinite" />와 같지 않은 경우</exception>
    </member>
    <member name="M:System.Threading.Timer.Change(System.Int64,System.Int64)">
      <summary>부호 있는 64비트 정수로 시간 간격을 측정하여 타이머 시작 시간 및 메서드 호출 사이의 간격을 변경합니다.</summary>
      <param name="dueTime">
        <see cref="T:System.Threading.Timer" />가 구성될 때 지정되는 콜백 메서드를 호출하기 전의 지연 시간(밀리초)입니다. 타이머가 다시 시작되지 않도록 하려면 <see cref="F:System.Threading.Timeout.Infinite" />를 지정합니다. 타이머를 즉시 시작하려면 0을 지정합니다.</param>
      <param name="period">
        <see cref="T:System.Threading.Timer" />가 생성되었을 때 지정된 콜백 메서드 호출 사이의 간격(밀리초)입니다. 정기적으로 신호를 보내지 않도록 하려면 <see cref="F:System.Threading.Timeout.Infinite" />를 지정합니다.</param>
      <returns>타이머가 성공적으로 업데이트되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Threading.Timer" />가 이미 삭제된 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="dueTime" /> 또는 <paramref name="period" /> 매개 변수 값이 -1 미만인 경우</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="dueTime" /> 또는 <paramref name="period" /> 매개 변수가 4294967294보다 큰 경우</exception>
    </member>
    <member name="M:System.Threading.Timer.Change(System.TimeSpan,System.TimeSpan)">
      <summary>
        <see cref="T:System.TimeSpan" /> 값으로 시간 간격을 측정하여 타이머 시작 시간 및 메서드 호출 사이의 간격을 변경합니다.</summary>
      <param name="dueTime">
        <see cref="T:System.TimeSpan" />가 구성될 때 지정되는 콜백 메서드를 호출하기 전의 지연 시간을 나타내는 <see cref="T:System.Threading.Timer" />입니다. 타이머가 다시 시작되지 않게 하려면 -1밀리초를 지정합니다. 타이머를 즉시 시작하려면 0을 지정합니다.</param>
      <param name="period">
        <see cref="T:System.Threading.Timer" />가 생성되었을 때 지정된 콜백 메서드 호출 사이의 간격입니다. 정기적으로 신호를 보내지 않도록 하려면 -1밀리초를 지정합니다.</param>
      <returns>타이머가 성공적으로 업데이트되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Threading.Timer" />가 이미 삭제된 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="dueTime" /> 또는 <paramref name="period" /> 매개 변수 값이 -1밀리초 미만인 경우</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="dueTime" /> 또는 <paramref name="period" /> 매개 변수 값이 4294967294밀리초보다 큰 경우</exception>
    </member>
    <member name="M:System.Threading.Timer.Change(System.UInt32,System.UInt32)">
      <summary>부호 없는 32비트 정수로 시간 간격을 측정하여 타이머 시작 시간 및 메서드 호출 사이의 간격을 변경합니다.</summary>
      <param name="dueTime">
        <see cref="T:System.Threading.Timer" />가 구성될 때 지정되는 콜백 메서드를 호출하기 전의 지연 시간(밀리초)입니다. 타이머가 다시 시작되지 않도록 하려면 <see cref="F:System.Threading.Timeout.Infinite" />를 지정합니다. 타이머를 즉시 시작하려면 0을 지정합니다.</param>
      <param name="period">
        <see cref="T:System.Threading.Timer" />가 생성되었을 때 지정된 콜백 메서드 호출 사이의 간격(밀리초)입니다. 정기적으로 신호를 보내지 않도록 하려면 <see cref="F:System.Threading.Timeout.Infinite" />를 지정합니다.</param>
      <returns>타이머가 성공적으로 업데이트되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Threading.Timer" />가 이미 삭제된 경우</exception>
    </member>
    <member name="M:System.Threading.Timer.Dispose">
      <summary>
        <see cref="T:System.Threading.Timer" />의 현재 인스턴스에서 사용하는 모든 리소스를 해제합니다.</summary>
    </member>
    <member name="M:System.Threading.Timer.Dispose(System.Threading.WaitHandle)">
      <summary>
        <see cref="T:System.Threading.Timer" />의 현재 인스턴스에서 사용하는 모든 리소스를 해제하고 타이머가 삭제되면 신호를 보냅니다.</summary>
      <param name="notifyObject">
        <see langword="Timer" />가 삭제되면 신호를 받을 <see cref="T:System.Threading.WaitHandle" />입니다.</param>
      <returns>작업이 성공적으로 수행되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="notifyObject" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Threading.Timer.DisposeAsync">
      <summary>
        <see cref="T:System.Threading.Timer" />의 현재 인스턴스에서 사용하는 모든 리소스를 해제합니다.</summary>
      <returns>타이머와 연결된 모든 작업이 멈추는 경우 완료되는 <see cref="T:System.Threading.Tasks.ValueTask" />입니다.</returns>
    </member>
    <member name="T:System.Threading.TimerCallback">
      <summary>
        <see cref="T:System.Threading.Timer" />의 호출을 처리하는 메서드를 나타냅니다.</summary>
      <param name="state">이 대리자에서 호출한 메서드와 관련된 애플리케이션 관련 정보를 포함하는 개체 또는 <see langword="null" />입니다.</param>
    </member>
  </members>
</doc>