<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Diagnostics.Debug</name>
  </assembly>
  <members>
    <member name="T:System.Diagnostics.Debug">
      <summary>코드 디버깅에 도움이 되는 메서드 및 속성들을 제공합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Debug.Assert(System.Boolean)">
      <summary>조건을 확인합니다. 조건이 <see langword="false" />이면 호출 스택을 보여주는 메시지 상자를 표시합니다.</summary>
      <param name="condition">평가할 조건식입니다. 조건이 <see langword="true" />이면 실패 메시지가 전송되지 않고 메시지 상자가 표시되지 않습니다.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
      <summary>조건을 확인합니다. 조건이 <see langword="false" />이면 지정된 메시지를 출력하고 호출 스택을 보여주는 메시지 상자를 표시합니다.</summary>
      <param name="condition">평가할 조건식입니다. 조건이 <see langword="true" />이면 지정된 메시지가 전송되지 않고 메시지 상자가 표시되지 않습니다.</param>
      <param name="message">
        <see cref="P:System.Diagnostics.Trace.Listeners" /> 컬렉션으로 보낼 메시지입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
      <summary>조건을 확인합니다. 조건이 <see langword="false" />이면 지정된 2개의 메시지를 출력하고 호출 스택을 보여주는 메시지 상자를 표시합니다.</summary>
      <param name="condition">평가할 조건식입니다. 조건이 <see langword="true" />이면 지정된 메시지가 전송되지 않고 메시지 상자가 표시되지 않습니다.</param>
      <param name="message">
        <see cref="P:System.Diagnostics.Trace.Listeners" /> 컬렉션으로 보낼 메시지입니다.</param>
      <param name="detailMessage">
        <see cref="P:System.Diagnostics.Trace.Listeners" /> 컬렉션으로 보낼 자세한 메시지입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
      <summary>조건을 확인합니다. 조건이 <see langword="false" />이면 두 개의 메시지(단순 및 서식 있는 메시지)를 출력하고 호출 스택을 보여 주는 메시지 상자를 표시합니다.</summary>
      <param name="condition">평가할 조건식입니다. 조건이 <see langword="true" />이면 지정된 메시지가 전송되지 않고 메시지 상자가 표시되지 않습니다.</param>
      <param name="message">
        <see cref="P:System.Diagnostics.Trace.Listeners" /> 컬렉션으로 보낼 메시지입니다.</param>
      <param name="detailMessageFormat">
        <see cref="P:System.Diagnostics.Trace.Listeners" /> 컬렉션에 보낼 복합 서식 문자열입니다. 이 메시지에는 <paramref name="args" /> 배열의 개체에 해당하는 0개 이상의 서식 항목과 혼합된 텍스트가 포함됩니다.</param>
      <param name="args">형식을 지정할 개체를 0개 이상 포함하는 개체 배열입니다.</param>
    </member>
    <member name="P:System.Diagnostics.Debug.AutoFlush">
      <summary>각 쓰기 직후에 <see cref="M:System.Diagnostics.Debug.Flush" />에서 <see cref="P:System.Diagnostics.Debug.Listeners" />를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>각 쓰기 직후에 <see cref="M:System.Diagnostics.Debug.Flush" />에서 <see cref="P:System.Diagnostics.Debug.Listeners" />가 호출되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.Debug.Close">
      <summary>출력 버퍼를 플러시한 다음 각 <see cref="P:System.Diagnostics.Debug.Listeners" />에 대해 <see langword="Close" /> 메서드를 호출합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Debug.Fail(System.String)">
      <summary>지정한 오류 메시지를 내보냅니다.</summary>
      <param name="message">내보낼 메시지입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.Fail(System.String,System.String)">
      <summary>오류 메시지와 자세한 오류 메시지를 내보냅니다.</summary>
      <param name="message">내보낼 메시지입니다.</param>
      <param name="detailMessage">내보낼 자세한 메시지입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.Flush">
      <summary>출력 버퍼를 플러시하고 버퍼링된 데이터를 <see cref="P:System.Diagnostics.Debug.Listeners" /> 컬렉션에 쓰도록 합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Debug.Indent">
      <summary>현재 <see cref="P:System.Diagnostics.Debug.IndentLevel" />을 1만큼 증가시킵니다.</summary>
    </member>
    <member name="P:System.Diagnostics.Debug.IndentLevel">
      <summary>들여쓰기 수준을 가져오거나 설정합니다.</summary>
      <returns>들여쓰기 수준입니다. 기본값은 0입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Debug.IndentSize">
      <summary>들여쓰기의 공백 수를 가져오거나 설정합니다.</summary>
      <returns>들여쓰기의 공백 수입니다. 기본값은 4입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.Debug.Print(System.String)">
      <summary>
        <see cref="P:System.Diagnostics.Debug.Listeners" /> 컬렉션의 추적 수신기에 메시지를 쓰고 뒤에 줄 종결자를 붙입니다.</summary>
      <param name="message">쓸 메시지입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.Print(System.String,System.Object[])">
      <summary>
        <see cref="P:System.Diagnostics.Debug.Listeners" /> 컬렉션의 추적 수신기에 서식이 지정된 문자열을 쓰고 뒤에 줄 종결자를 붙입니다.</summary>
      <param name="format">
        <paramref name="args" /> 배열의 개체에 해당하는 0개 이상의 형식 항목과 결합된 텍스트를 포함하는 복합 형식 문자열입니다.</param>
      <param name="args">형식을 지정할 개체를 0개 이상 포함하는 개체 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" />이 잘못되었습니다.  
또는 
형식을 지정할 인수를 나타내는 숫자가 0보다 작거나, 형식을 지정할 해당 개체의 수보다 크거나 같은 경우</exception>
    </member>
    <member name="M:System.Diagnostics.Debug.Unindent">
      <summary>현재 <see cref="P:System.Diagnostics.Debug.IndentLevel" />을 1만큼 감소시킵니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Debug.Write(System.Object)">
      <summary>
        <see cref="M:System.Object.ToString" /> 컬렉션의 추적 수신기에 개체의 <see cref="P:System.Diagnostics.Debug.Listeners" /> 메서드 값을 씁니다.</summary>
      <param name="value">
        <see cref="P:System.Diagnostics.Debug.Listeners" />에 이름을 보낸 개체입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
      <summary>
        <see cref="M:System.Object.ToString" /> 컬렉션의 추적 수신기에 개체의 <see cref="P:System.Diagnostics.Debug.Listeners" /> 메서드 값 및 범주 이름을 씁니다.</summary>
      <param name="value">
        <see cref="P:System.Diagnostics.Debug.Listeners" />에 이름을 보낸 개체입니다.</param>
      <param name="category">출력을 구성하는 데 사용되는 범주 이름입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.Write(System.String)">
      <summary>
        <see cref="P:System.Diagnostics.Debug.Listeners" /> 컬렉션의 추적 수신기에 메시지를 씁니다.</summary>
      <param name="message">쓸 메시지입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.Write(System.String,System.String)">
      <summary>
        <see cref="P:System.Diagnostics.Debug.Listeners" /> 컬렉션의 추적 수신기에 범주 이름 및 메시지를 씁니다.</summary>
      <param name="message">쓸 메시지입니다.</param>
      <param name="category">출력을 구성하는 데 사용되는 범주 이름입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
      <summary>조건이 <see langword="true" />이면 <see cref="M:System.Object.ToString" /> 컬렉션의 추적 수신기에 개체의 <see cref="P:System.Diagnostics.Debug.Listeners" /> 메서드 값을 씁니다.</summary>
      <param name="condition">평가할 조건식입니다. 조건이 <see langword="true" />이면 컬렉션의 추적 수신기에 값을 씁니다.</param>
      <param name="value">
        <see cref="P:System.Diagnostics.Debug.Listeners" />에 이름을 보낸 개체입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
      <summary>조건이 <see langword="true" />이면 <see cref="M:System.Object.ToString" /> 컬렉션의 추적 수신기에 개체의 <see cref="P:System.Diagnostics.Debug.Listeners" /> 메서드 값 및 범주 이름을 씁니다.</summary>
      <param name="condition">평가할 조건식입니다. 조건이 <see langword="true" />이면 컬렉션의 추적 수신기에 범주 이름과 값을 씁니다.</param>
      <param name="value">
        <see cref="P:System.Diagnostics.Debug.Listeners" />에 이름을 보낸 개체입니다.</param>
      <param name="category">출력을 구성하는 데 사용되는 범주 이름입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
      <summary>조건이 <see langword="true" />이면 <see cref="P:System.Diagnostics.Debug.Listeners" /> 컬렉션의 추적 수신기에 메시지를 씁니다.</summary>
      <param name="condition">평가할 조건식입니다. 조건이 <see langword="true" />이면 컬렉션의 추적 수신기에 메시지를 씁니다.</param>
      <param name="message">쓸 메시지입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
      <summary>조건이 <see langword="true" />이면 <see cref="P:System.Diagnostics.Debug.Listeners" /> 컬렉션의 추적 수신기에 범주 이름 및 메시지를 씁니다.</summary>
      <param name="condition">평가할 조건식입니다. 조건이 <see langword="true" />이면 컬렉션의 추적 수신기에 범주 이름과 메시지를 씁니다.</param>
      <param name="message">쓸 메시지입니다.</param>
      <param name="category">출력을 구성하는 데 사용되는 범주 이름입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLine(System.Object)">
      <summary>
        <see cref="M:System.Object.ToString" /> 컬렉션의 추적 수신기에 개체의 <see cref="P:System.Diagnostics.Debug.Listeners" /> 메서드 값을 씁니다.</summary>
      <param name="value">
        <see cref="P:System.Diagnostics.Debug.Listeners" />에 이름을 보낸 개체입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
      <summary>
        <see cref="M:System.Object.ToString" /> 컬렉션의 추적 수신기에 개체의 <see cref="P:System.Diagnostics.Debug.Listeners" /> 메서드 값 및 범주 이름을 씁니다.</summary>
      <param name="value">
        <see cref="P:System.Diagnostics.Debug.Listeners" />에 이름을 보낸 개체입니다.</param>
      <param name="category">출력을 구성하는 데 사용되는 범주 이름입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLine(System.String)">
      <summary>
        <see cref="P:System.Diagnostics.Debug.Listeners" /> 컬렉션의 추적 수신기에 메시지를 쓰고 뒤에 줄 종결자를 붙입니다.</summary>
      <param name="message">쓸 메시지입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])">
      <summary>
        <see cref="P:System.Diagnostics.Debug.Listeners" /> 컬렉션의 추적 수신기에 서식이 지정된 메시지를 쓰고 뒤에 줄 종결자를 붙입니다.</summary>
      <param name="format">
        <paramref name="args" /> 배열의 개체에 해당하는 0개 이상의 형식 항목과 결합된 텍스트를 포함하는 복합 형식 문자열입니다.</param>
      <param name="args">형식을 지정할 개체를 0개 이상 포함하는 개체 배열입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
      <summary>
        <see cref="P:System.Diagnostics.Debug.Listeners" /> 컬렉션의 추적 수신기에 범주 이름 및 메시지를 씁니다.</summary>
      <param name="message">쓸 메시지입니다.</param>
      <param name="category">출력을 구성하는 데 사용되는 범주 이름입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
      <summary>조건이 <see langword="true" />이면 <see cref="M:System.Object.ToString" /> 컬렉션의 추적 수신기에 개체의 <see cref="P:System.Diagnostics.Debug.Listeners" /> 메서드 값을 씁니다.</summary>
      <param name="condition">평가할 조건식입니다. 조건이 <see langword="true" />이면 컬렉션의 추적 수신기에 값을 씁니다.</param>
      <param name="value">
        <see cref="P:System.Diagnostics.Debug.Listeners" />에 이름을 보낸 개체입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
      <summary>조건이 <see langword="true" />이면 <see cref="M:System.Object.ToString" /> 컬렉션의 추적 수신기에 개체의 <see cref="P:System.Diagnostics.Debug.Listeners" /> 메서드 값 및 범주 이름을 씁니다.</summary>
      <param name="condition">평가할 조건식입니다. 조건이 <see langword="true" />이면 컬렉션의 추적 수신기에 범주 이름과 값을 씁니다.</param>
      <param name="value">
        <see cref="P:System.Diagnostics.Debug.Listeners" />에 이름을 보낸 개체입니다.</param>
      <param name="category">출력을 구성하는 데 사용되는 범주 이름입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
      <summary>조건이 <see langword="true" />이면 <see cref="P:System.Diagnostics.Debug.Listeners" /> 컬렉션의 추적 수신기에 메시지를 씁니다.</summary>
      <param name="condition">평가할 조건식입니다. 조건이 <see langword="true" />이면 컬렉션의 추적 수신기에 메시지를 씁니다.</param>
      <param name="message">쓸 메시지입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
      <summary>조건이 <see langword="true" />이면 <see cref="P:System.Diagnostics.Debug.Listeners" /> 컬렉션의 추적 수신기에 범주 이름 및 메시지를 씁니다.</summary>
      <param name="condition">메시지를 작성하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="message">쓸 메시지입니다.</param>
      <param name="category">출력을 구성하는 데 사용되는 범주 이름입니다.</param>
    </member>
    <member name="T:System.Diagnostics.Debugger">
      <summary>디버거와 통신할 수 있습니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Debugger.Break">
      <summary>연결된 디버거에 중단점을 신호로 알립니다.</summary>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Security.Permissions.UIPermission" />이 디버거를 중단하도록 설정되지 않았습니다.</exception>
    </member>
    <member name="F:System.Diagnostics.Debugger.DefaultCategory">
      <summary>상수를 포함하는 메시지의 기본 범주를 나타냅니다.</summary>
    </member>
    <member name="P:System.Diagnostics.Debugger.IsAttached">
      <summary>디버거가 프로세스에 연결되어 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>디버거가 연결되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.Debugger.IsLogging">
      <summary>연결된 디버거에 의해 로깅이 활성화되어 있는지 여부를 확인합니다.</summary>
      <returns>디버거가 연결되어 있고 로깅이 활성화되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 연결된 디버거는 <see langword="DbgManagedDebugger" /> 레지스트리 키에 등록된 관리되는 디버거입니다. 이 키에 대한 자세한 내용은 JIT 연결 디버깅 설정을 참조하세요.</returns>
    </member>
    <member name="M:System.Diagnostics.Debugger.Launch">
      <summary>디버거를 시작하고 프로세스에 연결합니다.</summary>
      <returns>디버거가 시작되었거나 이미 연결된 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Security.Permissions.UIPermission" />가 디버거를 시작하도록 설정되지 않은 경우.</exception>
    </member>
    <member name="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)">
      <summary>연결된 디버거에 대한 메시지를 게시합니다.</summary>
      <param name="level">메시지의 중요성에 대한 설명입니다.</param>
      <param name="category">메시지의 범주입니다.</param>
      <param name="message">표시할 메시지입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Debugger.NotifyOfCrossThreadDependency">
      <summary>실행에서 크로스 스레드 종속성과 관련된 경로를 입력한다고 디버거에 알립니다.</summary>
    </member>
    <member name="T:System.Diagnostics.DebuggerBrowsableAttribute">
      <summary>디버거 변수 창에 멤버를 표시할지 여부와 표시 방법을 결정합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Diagnostics.DebuggerBrowsableAttribute.#ctor(System.Diagnostics.DebuggerBrowsableState)">
      <summary>
        <see cref="T:System.Diagnostics.DebuggerBrowsableAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="state">멤버 표시 방법을 지정하는 <see cref="T:System.Diagnostics.DebuggerBrowsableState" /> 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="state" />가 <see cref="T:System.Diagnostics.DebuggerBrowsableState" /> 값 중 하나가 아닙니다.</exception>
    </member>
    <member name="P:System.Diagnostics.DebuggerBrowsableAttribute.State">
      <summary>특성의 표시 상태를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Diagnostics.DebuggerBrowsableState" /> 값 중 하나입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.DebuggerBrowsableState">
      <summary>디버거의 표시 명령을 제공합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.DebuggerBrowsableState.Collapsed">
      <summary>요소를 축소된 형태로 표시합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.DebuggerBrowsableState.Never">
      <summary>요소를 표시하지 않습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.DebuggerBrowsableState.RootHidden">
      <summary>루트 요소를 표시하지 않으며, 요소가 항목의 컬렉션 또는 배열인 경우 자식 요소를 표시합니다.</summary>
    </member>
    <member name="T:System.Diagnostics.DebuggerDisplayAttribute">
      <summary>디버거 변수 창에 클래스나 필드가 표시되는 방법을 결정합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.DebuggerDisplayAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:System.Diagnostics.DebuggerDisplayAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="value">형식의 인스턴스에 대한 값 열에 표시될 문자열이며 빈 문자열("")을 사용하면 값 열이 숨겨집니다.</param>
    </member>
    <member name="P:System.Diagnostics.DebuggerDisplayAttribute.Name">
      <summary>디버거 변수 창에 표시할 이름을 가져오거나 설정합니다.</summary>
      <returns>디버거 변수 창에 표시할 이름입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.DebuggerDisplayAttribute.Target">
      <summary>특성의 대상 형식을 가져오거나 설정합니다.</summary>
      <returns>특성의 대상 형식입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Diagnostics.DebuggerDisplayAttribute.Target" />이 <see langword="null" />로 설정됩니다.</exception>
    </member>
    <member name="P:System.Diagnostics.DebuggerDisplayAttribute.TargetTypeName">
      <summary>특성 대상의 형식 이름을 가져오거나 설정합니다.</summary>
      <returns>특성 대상의 형식 이름입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.DebuggerDisplayAttribute.Type">
      <summary>디버거 변수 창의 형식 열에 표시할 문자열을 가져오거나 설정합니다.</summary>
      <returns>디버거 변수 창의 형식 열에 표시할 문자열입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.DebuggerDisplayAttribute.Value">
      <summary>디버거 변수 창의 값 열에 표시할 문자열을 가져옵니다.</summary>
      <returns>디버거 변수의 값 열에 표시할 문자열입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.DebuggerHiddenAttribute">
      <summary>
        <see cref="T:System.Diagnostics.DebuggerHiddenAttribute" />를 지정합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Diagnostics.DebuggerHiddenAttribute.#ctor">
      <summary>
        <see cref="T:System.Diagnostics.DebuggerHiddenAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Diagnostics.DebuggerNonUserCodeAttribute">
      <summary>애플리케이션에 대한 사용자 코드에 포함되지 않는 형식 또는 멤버를 식별합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.DebuggerNonUserCodeAttribute.#ctor">
      <summary>
        <see cref="T:System.Diagnostics.DebuggerNonUserCodeAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Diagnostics.DebuggerStepperBoundaryAttribute">
      <summary>특성 이후의 코드가 단계 모드가 아닌 실행 모드에서 실행될 것임을 나타냅니다.</summary>
    </member>
    <member name="M:System.Diagnostics.DebuggerStepperBoundaryAttribute.#ctor">
      <summary>
        <see cref="T:System.Diagnostics.DebuggerStepperBoundaryAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Diagnostics.DebuggerStepThroughAttribute">
      <summary>코드를 한 단계씩 실행하는 대신 단계별로 실행되도록 디버거에 지시합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Diagnostics.DebuggerStepThroughAttribute.#ctor">
      <summary>
        <see cref="T:System.Diagnostics.DebuggerStepThroughAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Diagnostics.DebuggerTypeProxyAttribute">
      <summary>형식의 표시 프록시를 지정합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.DebuggerTypeProxyAttribute.#ctor(System.String)">
      <summary>프록시의 형식 이름을 사용하여 <see cref="T:System.Diagnostics.DebuggerTypeProxyAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="typeName">프록시 형식의 형식 이름입니다.</param>
    </member>
    <member name="M:System.Diagnostics.DebuggerTypeProxyAttribute.#ctor(System.Type)">
      <summary>프록시의 형식을 사용하여 <see cref="T:System.Diagnostics.DebuggerTypeProxyAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="type">프록시 형식입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.Diagnostics.DebuggerTypeProxyAttribute.ProxyTypeName">
      <summary>프록시 형식의 형식 이름을 가져옵니다.</summary>
      <returns>프록시 형식의 형식 이름입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.DebuggerTypeProxyAttribute.Target">
      <summary>특성의 대상 형식을 가져오거나 설정합니다.</summary>
      <returns>특성에 대한 대상 형식입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Diagnostics.DebuggerTypeProxyAttribute.Target" />이 <see langword="null" />로 설정됩니다.</exception>
    </member>
    <member name="P:System.Diagnostics.DebuggerTypeProxyAttribute.TargetTypeName">
      <summary>대상 형식의 이름을 가져오거나 설정합니다.</summary>
      <returns>대상 형식의 이름입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.DebuggerVisualizerAttribute">
      <summary>형식을 시각화 도우미로 지정합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:System.Diagnostics.DebuggerVisualizerAttribute" /> 클래스의 새 인스턴스를 초기화하고 시각화 도우미의 형식 이름을 지정합니다.</summary>
      <param name="visualizerTypeName">시각화 도우미의 정규화된 형식 이름입니다.</param>
    </member>
    <member name="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.String,System.String)">
      <summary>
        <see cref="T:System.Diagnostics.DebuggerVisualizerAttribute" /> 클래스의 새 인스턴스를 초기화하고 시각화 도우미의 형식 이름과 시각화 도우미 개체 소스의 형식 이름을 지정합니다.</summary>
      <param name="visualizerTypeName">시각화 도우미의 정규화된 형식 이름입니다.</param>
      <param name="visualizerObjectSourceTypeName">시각화 도우미 개체 소스의 정규화된 형식 이름입니다.</param>
    </member>
    <member name="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.String,System.Type)">
      <summary>
        <see cref="T:System.Diagnostics.DebuggerVisualizerAttribute" /> 클래스의 새 인스턴스를 초기화하고 시각화 도우미의 형식 이름과 시각화 도우미 개체 소스의 형식을 지정합니다.</summary>
      <param name="visualizerTypeName">시각화 도우미의 정규화된 형식 이름입니다.</param>
      <param name="visualizerObjectSource">시각화 도우미 개체 소스의 형식입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visualizerObjectSource" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.Type)">
      <summary>시각화 도우미의 형식을 지정하는 <see cref="T:System.Diagnostics.DebuggerVisualizerAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="visualizer">시각화 도우미의 형식입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visualizer" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.Type,System.String)">
      <summary>시각화 도우미의 형식 및 시각화 도우미 개체 소스의 형식 이름을 지정하여 <see cref="T:System.Diagnostics.DebuggerVisualizerAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="visualizer">시각화 도우미의 형식입니다.</param>
      <param name="visualizerObjectSourceTypeName">시각화 도우미 개체 소스의 정규화된 형식 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visualizer" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.Type,System.Type)">
      <summary>시각화 도우미의 형식 및 시각화 도우미 개체 소스의 형식을 지정하여 <see cref="T:System.Diagnostics.DebuggerVisualizerAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="visualizer">시각화 도우미의 형식입니다.</param>
      <param name="visualizerObjectSource">시각화 도우미 개체 소스의 형식입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visualizerObjectSource" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.Diagnostics.DebuggerVisualizerAttribute.Description">
      <summary>시각화 도우미에 대한 설명을 가져오거나 설정합니다.</summary>
      <returns>시각화 도우미에 대한 설명입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.DebuggerVisualizerAttribute.Target">
      <summary>특성이 어셈블리 수준에서 적용될 때 대상 형식을 가져오거나 설정합니다.</summary>
      <returns>시각화 도우미의 대상 형식입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see langword="null" /> 값이기 때문에 설정할 수 없는 경우</exception>
    </member>
    <member name="P:System.Diagnostics.DebuggerVisualizerAttribute.TargetTypeName">
      <summary>특성이 어셈블리 수준에서 적용될 때 정규화된 형식 이름을 가져오거나 설정합니다.</summary>
      <returns>대상 형식의 정규화된 형식 이름입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.DebuggerVisualizerAttribute.VisualizerObjectSourceTypeName">
      <summary>시각화 도우미 개체 소스의 정규화된 형식 이름을 가져옵니다.</summary>
      <returns>시각화 도우미 개체 소스의 정규화된 형식 이름입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.DebuggerVisualizerAttribute.VisualizerTypeName">
      <summary>시각화 도우미의 정규화된 형식 이름을 가져옵니다.</summary>
      <returns>정규화된 시각화 도우미 형식 이름입니다.</returns>
    </member>
  </members>
</doc>