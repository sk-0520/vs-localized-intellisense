<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.ComponentModel</name>
  </assembly>
  <members>
    <member name="T:System.ComponentModel.CancelEventArgs">
      <summary>Fornece dados para um evento cancelável.</summary>
    </member>
    <member name="M:System.ComponentModel.CancelEventArgs.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.CancelEventArgs" /> com a propriedade <see cref="P:System.ComponentModel.CancelEventArgs.Cancel" /> definida como <see langword="false" />.</summary>
    </member>
    <member name="M:System.ComponentModel.CancelEventArgs.#ctor(System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.CancelEventArgs" /> com a propriedade <see cref="P:System.ComponentModel.CancelEventArgs.Cancel" /> definida como o valor especificado.</summary>
      <param name="cancel">
        <see langword="true" /> para cancelar o evento; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="P:System.ComponentModel.CancelEventArgs.Cancel">
      <summary>Obtém ou define um valor que indica se o evento deve ser cancelado.</summary>
      <returns>
        <see langword="true" /> se o evento deve ser cancelado; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.IChangeTracking">
      <summary>Define o mecanismo para consultar o objeto para alterações e redefinição do status alterado.</summary>
    </member>
    <member name="M:System.ComponentModel.IChangeTracking.AcceptChanges">
      <summary>Redefine o estado do objeto para inalterado, aceitando as modificações.</summary>
    </member>
    <member name="P:System.ComponentModel.IChangeTracking.IsChanged">
      <summary>Obtém o status alterado do objeto.</summary>
      <returns>
        <see langword="true" />Se o conteúdo do objeto foi alterado desde a última chamada para <see cref="M:System.ComponentModel.IChangeTracking.AcceptChanges" />; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="T:System.ComponentModel.IEditableObject">
      <summary>Fornece funcionalidade para confirmar ou reverter as alterações para um objeto que é usado como uma fonte de dados.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableObject.BeginEdit">
      <summary>Inicia uma edição em um objeto.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableObject.CancelEdit">
      <summary>Descarta as alterações desde a última chamada a <see cref="M:System.ComponentModel.IEditableObject.BeginEdit" />.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableObject.EndEdit">
      <summary>Envia por push as alterações desde a última chamada <see cref="M:System.ComponentModel.IEditableObject.BeginEdit" /> ou <see cref="M:System.ComponentModel.IBindingList.AddNew" /> ao objeto subjacente.</summary>
    </member>
    <member name="T:System.ComponentModel.IRevertibleChangeTracking">
      <summary>Dá suporte à reversão das alterações</summary>
    </member>
    <member name="M:System.ComponentModel.IRevertibleChangeTracking.RejectChanges">
      <summary>Redefine o estado do objeto para inalterado, rejeitando as modificações.</summary>
    </member>
    <member name="T:System.IServiceProvider">
      <summary>Define um mecanismo para recuperar um objeto de serviço, ou seja, um objeto que dá suporte personalizado a outros objetos.</summary>
    </member>
    <member name="M:System.IServiceProvider.GetService(System.Type)">
      <summary>Obtém o objeto de serviço do tipo especificado.</summary>
      <param name="serviceType">Um objeto que especifica o tipo de objeto de serviço a ser obtido.</param>
      <returns>Um objeto de serviço do tipo <paramref name="serviceType" />.  

ou - 
<see langword="null" /> se não houver nenhum objeto de serviço do tipo <paramref name="serviceType" />.</returns>
    </member>
  </members>
</doc>