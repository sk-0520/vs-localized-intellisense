<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Xml.ReaderWriter</name>
  </assembly>
  <members>
    <member name="T:System.Xml.ConformanceLevel">
      <summary>Especifica a quantidade de verificação de entrada ou saída que os objetos <see cref="T:System.Xml.XmlReader" /> e <see cref="T:System.Xml.XmlWriter" /> executam.</summary>
    </member>
    <member name="F:System.Xml.ConformanceLevel.Auto">
      <summary>O objeto <see cref="T:System.Xml.XmlReader" /> ou <see cref="T:System.Xml.XmlWriter" /> detecta automaticamente se a verificação do nível do documento ou do nível do fragmento deve ser executada e realiza a verificação apropriada. Se você estiver encapsulando outro objeto <see cref="T:System.Xml.XmlReader" /> ou <see cref="T:System.Xml.XmlWriter" />, o objeto externo não executará nenhuma verificação de compatibilidade adicional. A verificação de compatibilidade é deixada a cargo do objeto subjacente.  
Consulte as propriedades <see cref="P:System.Xml.XmlReaderSettings.ConformanceLevel" /> e <see cref="P:System.Xml.XmlWriterSettings.ConformanceLevel" /> para obter detalhes sobre como o nível de conformidade é determinado.</summary>
    </member>
    <member name="F:System.Xml.ConformanceLevel.Document">
      <summary>Os dados XML estão em conformidade com as regras para um documento XML 1.0 bem formado, conforme definido pelo W3C. Esse nível de verificação garante que o fluxo que está sendo lido ou gravado possa ser consumido por qualquer processador como um documento XML 1.0.</summary>
    </member>
    <member name="F:System.Xml.ConformanceLevel.Fragment">
      <summary>Os dados XML são um fragmento de XML bem formado, conforme definido pelo W3C.  Esse nível de conformidade representa um documento XML que pode não ter um elemento raiz, mas que de outro modo é bem formado. Esse nível de verificação garante que o fluxo que está sendo lido ou gravado possa ser consumido por qualquer processador como uma [entidade analisada externa XML 1.0].</summary>
    </member>
    <member name="T:System.Xml.DtdProcessing">
      <summary>Especifica as opções para processar os DTDs. A enumeração <see cref="T:System.Xml.DtdProcessing" /> é usada pela classe <see cref="T:System.Xml.XmlReaderSettings" />.</summary>
    </member>
    <member name="F:System.Xml.DtdProcessing.Ignore">
      <summary>Faz com que o elemento DOCTYPE seja ignorado. Não ocorre nenhum processamento de DTD e o DTD/DOCTYPE é perdido na saída.</summary>
    </member>
    <member name="F:System.Xml.DtdProcessing.Parse">
      <summary>Usado para analisar DTDs.</summary>
    </member>
    <member name="F:System.Xml.DtdProcessing.Prohibit">
      <summary>Especifica que quando um DTD for encontrado, um <see cref="T:System.Xml.XmlException" /> será lançado com uma mensagem informando que os DTDs são proibidos. Este é o comportamento padrão.</summary>
    </member>
    <member name="T:System.Xml.EntityHandling">
      <summary>Especifica como o <see cref="T:System.Xml.XmlTextReader" /> ou <see cref="T:System.Xml.XmlValidatingReader" /> trata entidades.</summary>
    </member>
    <member name="F:System.Xml.EntityHandling.ExpandCharEntities">
      <summary>Expande as entidades de caractere e retorna as entidades gerais como nós <see cref="F:System.Xml.XmlNodeType.EntityReference" />. 
É necessário chamar <see cref="Overload:System.Xml.XmlReader.ResolveEntity" /> para ver para o que as entidades gerais se expandem. Isso permite que você otimize o tratamento de entidade expandindo apenas a entidade na primeira vez que ela é usada.  
Quando essa opção é definida como <see langword="ExpandCharEntities" />, uma chamada de leitor ao método <see cref="Overload:System.Xml.XmlReader.GetAttribute" /> expande todas as entidades (entidades gerais e de caractere).</summary>
    </member>
    <member name="F:System.Xml.EntityHandling.ExpandEntities">
      <summary>Expande todas as entidades e retorna os nós expandidos.
Os nós <see cref="F:System.Xml.XmlNodeType.EntityReference" /> não são retornados. O texto da entidade é expandido no lugar das referências da entidade.</summary>
    </member>
    <member name="T:System.Xml.Formatting">
      <summary>Especifica opções de formatação para o <see cref="T:System.Xml.XmlTextWriter" />.</summary>
    </member>
    <member name="F:System.Xml.Formatting.Indented">
      <summary>Faz com que os elementos filho sejam recuados de acordo com as configurações de <see cref="P:System.Xml.XmlTextWriter.Indentation" /> e <see cref="P:System.Xml.XmlTextWriter.IndentChar" />.
Essa opção recua somente o conteúdo do elemento; o conteúdo misto não é afetado. Para as definições XML 1.0 desses termos, confira a documentação do W3C (World Wide Web Consortium) Conteúdo do elemento e Conteúdo misto.</summary>
    </member>
    <member name="F:System.Xml.Formatting.None">
      <summary>Nenhuma formatação especial é aplicada. Esse é o padrão.</summary>
    </member>
    <member name="T:System.Xml.IApplicationResourceStreamResolver">
      <summary>Representa um resolvedor de fluxo de recurso do aplicativo.</summary>
    </member>
    <member name="M:System.Xml.IApplicationResourceStreamResolver.GetApplicationResourceStream(System.Uri)">
      <summary>Retorna um fluxo de recursos de aplicativo do URI especificado.</summary>
      <param name="relativeUri">O URI relativo.</param>
      <returns>Um fluxo de recurso do aplicativo.</returns>
    </member>
    <member name="T:System.Xml.IHasXmlNode">
      <summary>Permite que uma classe retorne um <see cref="T:System.Xml.XmlNode" /> do contexto ou posição atual.</summary>
    </member>
    <member name="M:System.Xml.IHasXmlNode.GetNode">
      <summary>Retorna o <see cref="T:System.Xml.XmlNode" /> para a posição atual.</summary>
      <returns>O <see langword="XmlNode" /> para a posição atual.</returns>
    </member>
    <member name="T:System.Xml.IXmlLineInfo">
      <summary>Fornece uma interface para permitir que uma classe retorne informações de linha e posição.</summary>
    </member>
    <member name="M:System.Xml.IXmlLineInfo.HasLineInfo">
      <summary>Obtém um valor que indica se a classe pode retornar informações de linha.</summary>
      <returns>
        <see langword="true" /> se <see cref="P:System.Xml.IXmlLineInfo.LineNumber" /> e <see cref="P:System.Xml.IXmlLineInfo.LinePosition" /> puderem ser fornecidos; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.IXmlLineInfo.LineNumber">
      <summary>Obtém o número de linha atual.</summary>
      <returns>O número da linha atual ou 0 se nenhuma informação de linha estiver disponível (por <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo" /> exemplo <see langword="false" />, retorna).</returns>
    </member>
    <member name="P:System.Xml.IXmlLineInfo.LinePosition">
      <summary>Obtém a posição da linha atual.</summary>
      <returns>A posição da linha atual ou 0 se nenhuma informação de linha estiver disponível (por <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo" /> exemplo <see langword="false" />, retorna).</returns>
    </member>
    <member name="T:System.Xml.IXmlNamespaceResolver">
      <summary>Fornece acesso somente leitura a um conjunto de mapeamentos de prefixo e namespace.</summary>
    </member>
    <member name="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>Obtém uma coleção de mapeamentos de namespace de prefixo definidos que estão no escopo no momento.</summary>
      <param name="scope">Um valor <see cref="T:System.Xml.XmlNamespaceScope" /> que especifica o tipo de nós de namespace a serem retornados.</param>
      <returns>Um <see cref="T:System.Collections.IDictionary" /> que contém os namespaces no escopo atuais.</returns>
    </member>
    <member name="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)">
      <summary>Obtém o URI do namespace mapeado para o prefixo especificado.</summary>
      <param name="prefix">O prefixo cujo URI de namespace você deseja localizar.</param>
      <returns>O URI do namespace mapeado para o prefixo; <see langword="null" /> se o prefixo não estiver mapeado para um URI de namespace.</returns>
    </member>
    <member name="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)">
      <summary>Obtém o prefixo que é mapeado para o URI do namespace especificado.</summary>
      <param name="namespaceName">O URI do namespace cujo prefixo você deseja localizar.</param>
      <returns>O prefixo que é mapeado para o URI do namespace; <see langword="null" /> se o URI de namespace não estiver mapeado para um prefixo.</returns>
    </member>
    <member name="T:System.Xml.NamespaceHandling">
      <summary>Especifica se as declarações de namespace duplicados no <see cref="T:System.Xml.XmlWriter" /> devem ser removidas.</summary>
    </member>
    <member name="F:System.Xml.NamespaceHandling.Default">
      <summary>Especifica que as declarações de namespace duplicadas não serão removidas.</summary>
    </member>
    <member name="F:System.Xml.NamespaceHandling.OmitDuplicates">
      <summary>Especifica que as declarações de namespace duplicadas serão removidas. Para o namespace duplicado a ser removido, o prefixo e o namespace devem corresponder.</summary>
    </member>
    <member name="T:System.Xml.NameTable">
      <summary>Implementa um <see cref="T:System.Xml.XmlNameTable" /> single-threaded.</summary>
    </member>
    <member name="M:System.Xml.NameTable.#ctor">
      <summary>Inicializa uma nova instância da classe <see langword="NameTable" />.</summary>
    </member>
    <member name="M:System.Xml.NameTable.Add(System.Char[],System.Int32,System.Int32)">
      <summary>Atomizes a cadeia de caracteres especificada e adiciona-a ao <see langword="NameTable" />.</summary>
      <param name="key">A matriz de caracteres que contém a cadeia de caracteres a adicionar.</param>
      <param name="start">O índice de base zero na matriz que especifica o primeiro caractere da cadeia de caracteres.</param>
      <param name="len">O número de caracteres na cadeia de caracteres.</param>
      <returns>A cadeia de caracteres atomizada ou a cadeia de caracteres existente, se já existir uma no <see langword="NameTable" />. Se <paramref name="len" /> for zero, String.Empty será retornado.</returns>
      <exception cref="T:System.IndexOutOfRangeException">0 &gt; <paramref name="start" />  

ou - 
<paramref name="start" /> &gt;= <paramref name="key" />.Length 
ou - 
<paramref name="len" /> &gt;= <paramref name="key" />.Length 
As condições acima não farão com que uma exceção seja gerada se <paramref name="len" /> =0.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="len" /> &lt; 0.</exception>
    </member>
    <member name="M:System.Xml.NameTable.Add(System.String)">
      <summary>Atomizes a cadeia de caracteres especificada e adiciona-a ao <see langword="NameTable" />.</summary>
      <param name="key">A cadeia de caracteres a ser adicionada.</param>
      <returns>A cadeia de caracteres atomizada ou a cadeia de caracteres existente, se ela já existir no <see langword="NameTable" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.NameTable.Get(System.Char[],System.Int32,System.Int32)">
      <summary>Obtém a cadeia de caracteres atomizada que contém os mesmos caracteres que o intervalo especificado de caracteres na matriz fornecida.</summary>
      <param name="key">A matriz de caracteres que contém o nome a ser localizado.</param>
      <param name="start">O índice de base zero na matriz que especifica o primeiro caractere do nome.</param>
      <param name="len">O número de caracteres no nome.</param>
      <returns>A cadeia de caracteres atomizada ou <see langword="null" />, se ela ainda não tiver sido atomizada. Se <paramref name="len" /> for zero, String.Empty será retornado.</returns>
      <exception cref="T:System.IndexOutOfRangeException">0 &gt; <paramref name="start" />  

ou - 
<paramref name="start" /> &gt;= <paramref name="key" />.Length 
ou - 
<paramref name="len" /> &gt;= <paramref name="key" />.Length 
As condições acima não farão com que uma exceção seja gerada se <paramref name="len" /> =0.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="len" /> &lt; 0.</exception>
    </member>
    <member name="M:System.Xml.NameTable.Get(System.String)">
      <summary>Obtém a cadeia de caracteres atomizada com o valor especificado.</summary>
      <param name="value">O nome a ser localizado.</param>
      <returns>O objeto de cadeia de caracteres atomizados ou <see langword="null" />, se a cadeia de caracteres ainda não tiver sido atomizada.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> é <see langword="null" />.</exception>
    </member>
    <member name="T:System.Xml.NewLineHandling">
      <summary>Especifica como lidar com quebras de linha.</summary>
    </member>
    <member name="F:System.Xml.NewLineHandling.Entitize">
      <summary>Caracteres de nova linha são transformados em entidades. Essa configuração preserva todos os caracteres quando a saída é lida por um <see cref="T:System.Xml.XmlReader" /> de normalização.</summary>
    </member>
    <member name="F:System.Xml.NewLineHandling.None">
      <summary>Os caracteres de nova linha estão inalterados. A saída é a mesma que a entrada.</summary>
    </member>
    <member name="F:System.Xml.NewLineHandling.Replace">
      <summary>Caracteres de nova linha são substituídos de acordo com o caractere especificado na propriedade <see cref="P:System.Xml.XmlWriterSettings.NewLineChars" />.</summary>
    </member>
    <member name="T:System.Xml.ReadState">
      <summary>Especifica o estado do leitor.</summary>
    </member>
    <member name="F:System.Xml.ReadState.Closed">
      <summary>O método <see cref="M:System.Xml.XmlReader.Close" /> foi chamado.</summary>
    </member>
    <member name="F:System.Xml.ReadState.EndOfFile">
      <summary>O final do arquivo foi acessado com êxito.</summary>
    </member>
    <member name="F:System.Xml.ReadState.Error">
      <summary>Ocorreu um erro que impede a continuação da operação de leitura.</summary>
    </member>
    <member name="F:System.Xml.ReadState.Initial">
      <summary>O método <see langword="Read" /> não foi chamado.</summary>
    </member>
    <member name="F:System.Xml.ReadState.Interactive">
      <summary>O método <see langword="Read" /> foi chamado. Outros métodos podem ser chamados no leitor.</summary>
    </member>
    <member name="T:System.Xml.Resolvers.XmlKnownDtds">
      <summary>A enumeração <see cref="T:System.Xml.Resolvers.XmlKnownDtds" /> é usada pelo <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> e define quais DTDs já conhecidas que o <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> reconhece.</summary>
    </member>
    <member name="F:System.Xml.Resolvers.XmlKnownDtds.All">
      <summary>Especifica que o <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> reconhecerá todas as DTDs compatíveis no momento. Este é o comportamento padrão.</summary>
    </member>
    <member name="F:System.Xml.Resolvers.XmlKnownDtds.None">
      <summary>Especifica que o <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> não reconhecerá nenhuma DTD predefinida.</summary>
    </member>
    <member name="F:System.Xml.Resolvers.XmlKnownDtds.Rss091">
      <summary>Especifica que o <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> reconhecerá DTDs e entidades definidas em RSS 0.91.</summary>
    </member>
    <member name="F:System.Xml.Resolvers.XmlKnownDtds.Xhtml10">
      <summary>Especifica que o <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> reconhecerá DTDs e entidades definidas em XHTML 1.0.</summary>
    </member>
    <member name="T:System.Xml.Resolvers.XmlPreloadedResolver">
      <summary>Representa uma classe usada para pré-popular o cache com DTDs ou fluxos XML.</summary>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />.</summary>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.Resolvers.XmlKnownDtds)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> com os DTDs bem-conhecidos pré-carregados especificados.</summary>
      <param name="preloadedDtds">Os DTDs bem conhecidos que devem ser pré-preenchidos no cache.</param>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> com o resolvedor de fallback especificado.</summary>
      <param name="fallbackResolver">O <see langword="XmlResolver" />, o <see langword="XmlXapResolver" /> ou seu próprio resolvedor.</param>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> com o resolvedor de fallback especificado e DTDs bem conhecidos pré-carregados.</summary>
      <param name="fallbackResolver">O <see langword="XmlResolver" />, o <see langword="XmlXapResolver" /> ou seu próprio resolvedor.</param>
      <param name="preloadedDtds">Os DTDs bem conhecidos que devem ser pré-preenchidos no cache.</param>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds,System.Collections.Generic.IEqualityComparer{System.Uri})">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> com o resolvedor de fallback especificado, DTDs bem conhecidos pré-carregados e o comparador de igualdade do URI.</summary>
      <param name="fallbackResolver">O <see langword="XmlResolver" />, o <see langword="XmlXapResolver" /> ou seu próprio resolvedor.</param>
      <param name="preloadedDtds">Os DTDs bem conhecidos que devem ser pré-preenchidos em cache.</param>
      <param name="uriComparer">A implementação da interface genérica <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> a usar ao comparar URIs.</param>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[])">
      <summary>Adiciona uma matriz de bytes ao repositório <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> e mapeia-a para um URI. Se o repositório já contiver um mapeamento para o mesmo URI, o mapeamento existente será substituído.</summary>
      <param name="uri">O URI dos dados que estão sendo adicionados ao repositório do <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />.</param>
      <param name="value">Uma matriz de bytes com os dados que correspondem ao URI fornecido.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> ou <paramref name="value" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[],System.Int32,System.Int32)">
      <summary>Adiciona uma matriz de bytes ao repositório <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> e mapeia-a para um URI. Se o repositório já contiver um mapeamento para o mesmo URI, o mapeamento existente será substituído.</summary>
      <param name="uri">O URI dos dados que estão sendo adicionados ao repositório do <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />.</param>
      <param name="value">Uma matriz de bytes com os dados que correspondem ao URI fornecido.</param>
      <param name="offset">O deslocamento da matriz de bytes fornecida em que os dados começam.</param>
      <param name="count">O número de bytes a serem lidos da matriz de bytes, começando no deslocamento fornecido.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> ou <paramref name="value" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> ou <paramref name="count" /> é menor que 0.  

ou - 
O comprimento de <paramref name="value" /> menos <paramref name="offset" /> é menor que <paramref name="count." /></exception>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.IO.Stream)">
      <summary>Adiciona um <see cref="T:System.IO.Stream" /> ao repositório de <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> e mapeia-o para um URI. Se o repositório já contiver um mapeamento para o mesmo URI, o mapeamento existente será substituído.</summary>
      <param name="uri">O URI dos dados que estão sendo adicionados ao repositório do <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />.</param>
      <param name="value">Uma <see cref="T:System.IO.Stream" /> com os dados que correspondem ao URI fornecido.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> ou <paramref name="value" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.String)">
      <summary>Adiciona uma cadeia de caracteres com os dados pré-carregados ao repositório de <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> e mapeia-os para um URI. Se o repositório já contiver um mapeamento para o mesmo URI, o mapeamento existente será substituído.</summary>
      <param name="uri">O URI dos dados que estão sendo adicionados ao repositório do <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />.</param>
      <param name="value">Uma <see langword="String" /> com os dados que correspondem ao URI fornecido.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> ou <paramref name="value" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.Resolvers.XmlPreloadedResolver.Credentials">
      <summary>Define as credenciais que são usadas para autenticar o <see cref="T:System.Net.WebRequest" /> subjacente.</summary>
      <returns>As credenciais que são usadas para autenticar a solicitação da Web subjacente.</returns>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)">
      <summary>Mapeia um URI para um objeto que contém o recurso real.</summary>
      <param name="absoluteUri">O URI retornado de <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</param>
      <param name="role">A versão atual do .NET Framework para Silverlight não usa esse parâmetro durante a resolução de URIs. Esse parâmetro é fornecido para fins de extensibilidade futura. Por exemplo, esse parâmetro pode ser mapeado para o xlink:role e usado como um argumento específico de implementação em outros cenários.</param>
      <param name="ofObjectToReturn">O tipo de objeto a ser retornado. O <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> dá suporte a objetos <see cref="T:System.IO.Stream" /> e a objetos <see cref="T:System.IO.TextReader" /> para URIs que foram adicionados como <see langword="String" />. Se o tipo solicitado não tiver suporte no resolvedor, uma exceção será gerada. Use o método <see cref="M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)" /> para determinar se um certo <see langword="Type" /> tem suporte nesse resolvedor.</param>
      <returns>Um objeto <see cref="T:System.IO.Stream" /> ou <see cref="T:System.IO.TextReader" /> que corresponde à fonte atual.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="absoluteUri" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException">Não é possível resolver o URI passado em <paramref name="absoluteUri" />.  

ou - 
<paramref name="ofObjectToReturn" /> não é de um tipo com suporte.</exception>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
      <summary>Mapeia de forma assíncrona um URI para um objeto que contém o recurso real.</summary>
      <param name="absoluteUri">O URI retornado de <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</param>
      <param name="role">A versão atual do .NET Framework para Silverlight não usa esse parâmetro durante a resolução de URIs. Esse parâmetro é fornecido para fins de extensibilidade futura. Por exemplo, esse parâmetro pode ser mapeado para o xlink:role e usado como um argumento específico de implementação em outros cenários.</param>
      <param name="ofObjectToReturn">O tipo de objeto a ser retornado. O <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> dá suporte a objetos <see cref="T:System.IO.Stream" /> e a objetos <see cref="T:System.IO.TextReader" /> para URIs que foram adicionados como <see langword="String" />. Se o tipo solicitado não tiver suporte no resolvedor, uma exceção será gerada. Use o método <see cref="M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)" /> para determinar se um certo <see langword="Type" /> tem suporte nesse resolvedor.</param>
      <returns>Um objeto <see cref="T:System.IO.Stream" /> ou <see cref="T:System.IO.TextReader" /> que corresponde à fonte atual.</returns>
    </member>
    <member name="P:System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris">
      <summary>Obtém uma coleção de URIs pré-carregados.</summary>
      <returns>A coleção de URIs pré-carregados.</returns>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Remove(System.Uri)">
      <summary>Remove os dados que correspondem ao URI de <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />.</summary>
      <param name="uri">O URI dos dados que devem ser removidos do repositório <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri(System.Uri,System.String)">
      <summary>Resolve o URI absoluto dos URIs de base e relativo.</summary>
      <param name="baseUri">O URI base usado para resolver o URI relativo.</param>
      <param name="relativeUri">O URI a ser resolvido. O URI pode ser absoluto ou relativo. Se for absoluto, esse valor substituirá eficientemente o valor <paramref name="baseUri" />. Se for relativo, ele combinará com a <paramref name="baseUri" /> para tornar um URI absoluto.</param>
      <returns>O <see cref="T:System.Uri" /> que representa o URI absoluto ou <see langword="null" /> se não for possível resolver o URI relativo.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)">
      <summary>Determina se o resolvedor é compatível com outros <see cref="T:System.Type" />s do que apenas <see cref="T:System.IO.Stream" />.</summary>
      <param name="absoluteUri">O URI absoluto a verificar.</param>
      <param name="type">O <see cref="T:System.Type" /> a ser retornado.</param>
      <returns>
        <see langword="true" /> se houver suporte para o <see cref="T:System.Type" />; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> é <see langword="null" />.</exception>
    </member>
    <member name="T:System.Xml.Schema.IXmlSchemaInfo">
      <summary>Define o infoset de validação pós-esquema de um nó XML validado.</summary>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.IsDefault">
      <summary>Obtém um valor que indica se este nó XML validado foi definido como o resultado de um padrão que foi aplicado durante a validação de esquema de XSD (linguagem de definição de esquema XML).</summary>
      <returns>
        <see langword="true" />Se esse nó XML validado tiver sido definido como resultado de um padrão sendo aplicado durante a validação do esquema; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.IsNil">
      <summary>Obtém um valor que indica se o valor deste nó XML validado é nulo.</summary>
      <returns>
        <see langword="true" />Se o valor desse nó XML validado for nil; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.MemberType">
      <summary>Obtém o tipo de esquema dinâmico para este nó XML validado.</summary>
      <returns>Um <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> objeto que representa o tipo de esquema dinâmico para este nó XML validado.</returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.SchemaAttribute">
      <summary>Obtém o <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> compilado que corresponde a este nó XML validado.</summary>
      <returns>Um <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> que corresponde a esse nó XML validado.</returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.SchemaElement">
      <summary>Obtém o <see cref="T:System.Xml.Schema.XmlSchemaElement" /> compilado que corresponde a este nó XML validado.</summary>
      <returns>Um <see cref="T:System.Xml.Schema.XmlSchemaElement" /> que corresponde a esse nó XML validado.</returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.SchemaType">
      <summary>Obtém o tipo de esquema de XSD (linguagem de definição de esquema XML) estático deste nó XML validado.</summary>
      <returns>Um <see cref="T:System.Xml.Schema.XmlSchemaType" /> deste nó XML validado.</returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.Validity">
      <summary>Obtém o valor <see cref="T:System.Xml.Schema.XmlSchemaValidity" /> deste nó XML validado.</summary>
      <returns>Um <see cref="T:System.Xml.Schema.XmlSchemaValidity" /> valor desse nó XML validado.</returns>
    </member>
    <member name="T:System.Xml.Schema.ValidationEventArgs">
      <summary>Retorna informações detalhadas relacionadas ao <see langword="ValidationEventHandler" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.ValidationEventArgs.Exception">
      <summary>Obtém o <see cref="T:System.Xml.Schema.XmlSchemaException" /> associado ao evento de validação.</summary>
      <returns>O <see langword="XmlSchemaException" /> associado ao evento de validação.</returns>
    </member>
    <member name="P:System.Xml.Schema.ValidationEventArgs.Message">
      <summary>Obtém a descrição de texto correspondente ao evento de validação.</summary>
      <returns>A descrição do texto.</returns>
    </member>
    <member name="P:System.Xml.Schema.ValidationEventArgs.Severity">
      <summary>Obtém a severidade do evento de validação.</summary>
      <returns>Um valor de <see cref="T:System.Xml.Schema.XmlSeverityType" /> que representa a severidade do evento de validação.</returns>
    </member>
    <member name="T:System.Xml.Schema.ValidationEventHandler">
      <summary>Representa o método de retorno de chamada que manipulará eventos de validação de esquema XML e os <see cref="T:System.Xml.Schema.ValidationEventArgs" />.</summary>
      <param name="sender">A fonte do evento.  
 Observação Determine o tipo de um remetente antes de usá-lo em seu código. Você não pode presumir que o remetente seja uma instância de um tipo específico. Também não é garantido que o remetente não seja nulo. Sempre insira uma lógica de manipulação de falhas em suas transmissões.</param>
      <param name="e">Os dados do evento.</param>
    </member>
    <member name="T:System.Xml.Schema.XmlAtomicValue">
      <summary>Representa o valor digitado de um elemento ou atributo XML. A classe <see cref="T:System.Xml.Schema.XmlAtomicValue" /> não pode ser herdada.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlAtomicValue.Clone">
      <summary>Retorna uma cópia deste objeto <see cref="T:System.Xml.Schema.XmlAtomicValue" />.</summary>
      <returns>Uma cópia do objeto <see cref="T:System.Xml.Schema.XmlAtomicValue" /> deste objeto <see cref="T:System.Xml.Schema.XmlAtomicValue" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.IsNode">
      <summary>Obtém um valor que indica se o atributo ou elemento XML validado é um nó XPath ou um valor atômico.</summary>
      <returns>
        <see langword="true" />Se o elemento XML ou atributo validado for um nó XPath; <see langword="false" /> se o elemento XML validado ou atributo for um valor atômico.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlAtomicValue.System#ICloneable#Clone">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.Xml.Schema.XmlAtomicValue.Clone" />.</summary>
      <returns>Uma cópia deste objeto <see cref="T:System.Xml.Schema.XmlAtomicValue" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlAtomicValue.ToString">
      <summary>Obtém o valor <see langword="string" /> do atributo ou elemento XML validado.</summary>
      <returns>O valor <see langword="string" /> do atributo ou elemento XML validado.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.TypedValue">
      <summary>Obtém a atual elemento ou atributo XML validado como um objeto demarcado do tipo Microsoft .NET Framework mais apropriado de acordo com seu tipo de esquema.</summary>
      <returns>O elemento XML validado ou o atributo atual como um objeto de caixa do tipo de .NET Framework mais apropriado.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.Value">
      <summary>Obtém o valor <see langword="string" /> do atributo ou elemento XML validado.</summary>
      <returns>O valor <see langword="string" /> do atributo ou elemento XML validado.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlAtomicValue.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Retorna o elemento XML validado ou o valor do atributo como o tipo especificado usando o objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> especificado para resolver os prefixos de namespace.</summary>
      <param name="type">O tipo como o qual retornar o valor do atributo ou do elemento XML validado.</param>
      <param name="nsResolver">O objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> usado para resolver prefixos de namespace.</param>
      <returns>O valor do atributo ou do elemento XML validado como o tipo solicitado.</returns>
      <exception cref="T:System.FormatException">O valor do atributo ou o elemento XML validado não está no formato correto para o tipo de destino.</exception>
      <exception cref="T:System.InvalidCastException">A tentativa de conversão não é válida.</exception>
      <exception cref="T:System.OverflowException">A tentativa de conversão resultou em um estouro.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueAsBoolean">
      <summary>Obtém o valor do atributo ou o elemento XML validado como um <see cref="T:System.Boolean" />.</summary>
      <returns>O elemento XML validado ou o valor do atributo <see cref="T:System.Boolean" />como um.</returns>
      <exception cref="T:System.FormatException">O valor do atributo ou o elemento XML validado não está no formato correto para o tipo <see cref="T:System.Boolean" />.</exception>
      <exception cref="T:System.InvalidCastException">A tentativa de conversão em <see cref="T:System.Boolean" /> não é válida.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueAsDateTime">
      <summary>Obtém o valor do atributo ou o elemento XML validado como um <see cref="T:System.DateTime" />.</summary>
      <returns>O elemento XML validado ou o valor do atributo <see cref="T:System.DateTime" />como um.</returns>
      <exception cref="T:System.FormatException">O valor do atributo ou o elemento XML validado não está no formato correto para o tipo <see cref="T:System.DateTime" />.</exception>
      <exception cref="T:System.InvalidCastException">A tentativa de conversão em <see cref="T:System.DateTime" /> não é válida.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueAsDouble">
      <summary>Obtém o valor do atributo ou o elemento XML validado como um <see cref="T:System.Double" />.</summary>
      <returns>O elemento XML validado ou o valor do atributo <see cref="T:System.Double" />como um.</returns>
      <exception cref="T:System.FormatException">O valor do atributo ou o elemento XML validado não está no formato correto para o tipo <see cref="T:System.Double" />.</exception>
      <exception cref="T:System.InvalidCastException">A tentativa de conversão em <see cref="T:System.Double" /> não é válida.</exception>
      <exception cref="T:System.OverflowException">A tentativa de conversão resultou em um estouro.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueAsInt">
      <summary>Obtém o valor do atributo ou o elemento XML validado como um <see cref="T:System.Int32" />.</summary>
      <returns>O elemento XML validado ou o valor do atributo <see cref="T:System.Int32" />como um.</returns>
      <exception cref="T:System.FormatException">O valor do atributo ou o elemento XML validado não está no formato correto para o tipo <see cref="T:System.Int32" />.</exception>
      <exception cref="T:System.InvalidCastException">A tentativa de conversão em <see cref="T:System.Int32" /> não é válida.</exception>
      <exception cref="T:System.OverflowException">A tentativa de conversão resultou em um estouro.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueAsLong">
      <summary>Obtém o valor do atributo ou o elemento XML validado como um <see cref="T:System.Int64" />.</summary>
      <returns>O elemento XML validado ou o valor do atributo <see cref="T:System.Int64" />como um.</returns>
      <exception cref="T:System.FormatException">O valor do atributo ou o elemento XML validado não está no formato correto para o tipo <see cref="T:System.Int64" />.</exception>
      <exception cref="T:System.InvalidCastException">A tentativa de conversão em <see cref="T:System.Int64" /> não é válida.</exception>
      <exception cref="T:System.OverflowException">A tentativa de conversão resultou em um estouro.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueType">
      <summary>Obtém o tipo Microsoft .NET Framework do atributo ou elemento XML validado.</summary>
      <returns>O tipo de .NET Framework do atributo ou elemento XML validado. O valor padrão é <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.XmlType">
      <summary>Obtém o <see cref="T:System.Xml.Schema.XmlSchemaType" /> para o atributo ou o elemento XML validado.</summary>
      <returns>O <see cref="T:System.Xml.Schema.XmlSchemaType" /> para o elemento XML validado ou atributo.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchema">
      <summary>Uma representação na memória de um esquema XML, conforme especificado em XML Schema Part 1: Structures (Esquema XML Parte 1: Estruturas) e XML Schema Part 2: Datatypes] (Esquema XML Parte 2: Tipos de dados) do W3C (World Wide Web Consortium).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchema" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.AttributeFormDefault">
      <summary>Obtém ou define o formulário dos atributos declarados no namespace de destino do esquema.</summary>
      <returns>O valor <see cref="T:System.Xml.Schema.XmlSchemaForm" /> que indica se atributos do namespace de destino devem ser qualificados com o prefixo de namespace. O padrão é <see cref="F:System.Xml.Schema.XmlSchemaForm.None" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.AttributeGroups">
      <summary>Obtém o valor de pós-compilação de esquema de todos os grupos de atributos globais no esquema.</summary>
      <returns>Uma <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> coleção de todos os grupos de atributos globais no esquema.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Attributes">
      <summary>Obtém o valor de pós-compilação de esquema de todos os atributos no esquema.</summary>
      <returns>Uma <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> coleção de todos os atributos no esquema.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.BlockDefault">
      <summary>Obtém ou define o atributo <see langword="blockDefault" /> que define o valor padrão do atributo <see langword="block" /> no elemento e tipos complexos no <see langword="targetNamespace" /> do esquema.</summary>
      <returns>Um <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /> valor que representa os métodos diferentes para impedir a derivação. O valor padrão é <see langword="XmlSchemaDerivationMethod.None" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler)">
      <summary>Compila o SOM (Modelo de Objeto de Esquema XML) em informações de esquema para validação. Usado para verificar a estrutura sintática e semântica do SOM criado de forma programática. A verificação de validação semântica é executada durante a compilação.</summary>
      <param name="validationEventHandler">O manipulador de eventos de validação que recebe informações sobre erros de validação do Esquema XML.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlResolver)">
      <summary>Compila o SOM (Modelo de Objeto de Esquema XML) em informações de esquema para validação. Usado para verificar a estrutura sintática e semântica do SOM criado de forma programática. A verificação de validação semântica é executada durante a compilação.</summary>
      <param name="validationEventHandler">O manipulador de eventos de validação que recebe informações sobre erros de validação de esquema XML.</param>
      <param name="resolver">O <see langword="XmlResolver" /> usado para resolver os namespaces referenciados em elementos <see langword="include" /> e <see langword="import" />.</param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.ElementFormDefault">
      <summary>Obtém ou define o formulário dos elementos declarados no namespace de destino do esquema.</summary>
      <returns>O valor <see cref="T:System.Xml.Schema.XmlSchemaForm" /> que indica se elementos do namespace de destino precisam ser qualificados com o prefixo de namespace. O padrão é <see cref="F:System.Xml.Schema.XmlSchemaForm.None" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Elements">
      <summary>Obtém o valor de compilação pós-esquema para todos os elementos no esquema.</summary>
      <returns>Uma coleção <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> de todos os elementos no esquema.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.FinalDefault">
      <summary>Obtém ou define o atributo <see langword="finalDefault" /> que define o valor padrão do atributo <see langword="final" /> nos elementos e tipos complexos no namespace de destino do esquema.</summary>
      <returns>Um <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /> valor que representa os métodos diferentes para impedir a derivação. O valor padrão é <see langword="XmlSchemaDerivationMethod.None" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Groups">
      <summary>Obtém o valor de pós-compilação de esquema de todos os grupos no esquema.</summary>
      <returns>Uma <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> coleção de todos os grupos no esquema.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Id">
      <summary>Obtém ou define a ID de cadeia de caracteres.</summary>
      <returns>A ID da cadeia de caracteres. O valor padrão é <see langword="String.Empty" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Includes">
      <summary>Obtém a coleção de esquemas incluídos e importados.</summary>
      <returns>Um <see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" /> dos esquemas incluídos e importados.</returns>
    </member>
    <member name="F:System.Xml.Schema.XmlSchema.InstanceNamespace">
      <summary>O namespace da instância do esquema XML. Este campo é constante.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.IsCompiled">
      <summary>Indica se o esquema foi compilado.</summary>
      <returns>
        <see langword="true" />Se o esquema tiver sido compilado, caso <see langword="false" />contrário,. O valor padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Items">
      <summary>Obtém a coleção de elementos de esquema no esquema e é usado para adicionar novos tipos de elemento no nível de elemento <see langword="schema" />.</summary>
      <returns>Um <see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" /> de elementos de esquema no esquema.</returns>
    </member>
    <member name="F:System.Xml.Schema.XmlSchema.Namespace">
      <summary>O namespace do esquema XML. Este campo é constante.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Notations">
      <summary>Obtém o valor de pós-compilação de esquema para todas as notações no esquema.</summary>
      <returns>Uma <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> coleção de todas as notações no esquema.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Read(System.IO.Stream,System.Xml.Schema.ValidationEventHandler)">
      <summary>Lê um Esquema XML do fluxo fornecido.</summary>
      <param name="stream">O fluxo de dados fornecido.</param>
      <param name="validationEventHandler">O manipulador de eventos de validação que recebe informações sobre erros de sintaxe do Esquema XML.</param>
      <returns>O objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que representa o Esquema XML.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Um <see cref="T:System.Xml.Schema.XmlSchemaException" /> é gerado se nenhum <see cref="T:System.Xml.Schema.ValidationEventHandler" /> é especificado.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Read(System.IO.TextReader,System.Xml.Schema.ValidationEventHandler)">
      <summary>Lê um Esquema XML do <see cref="T:System.IO.TextReader" /> fornecido.</summary>
      <param name="reader">O <see langword="TextReader" /> que contém o Esquema XML a ser lido.</param>
      <param name="validationEventHandler">O manipulador de eventos de validação que recebe informações sobre os erros de sintaxe do Esquema XML.</param>
      <returns>O objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que representa o Esquema XML.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Um <see cref="T:System.Xml.Schema.XmlSchemaException" /> é gerado se nenhum <see cref="T:System.Xml.Schema.ValidationEventHandler" /> é especificado.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Read(System.Xml.XmlReader,System.Xml.Schema.ValidationEventHandler)">
      <summary>Lê um Esquema XML do <see cref="T:System.Xml.XmlReader" /> fornecido.</summary>
      <param name="reader">O <see langword="XmlReader" /> que contém o Esquema XML a ser lido.</param>
      <param name="validationEventHandler">O manipulador de eventos de validação que recebe informações sobre os erros de sintaxe do Esquema XML.</param>
      <returns>O objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que representa o Esquema XML.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Um <see cref="T:System.Xml.Schema.XmlSchemaException" /> é gerado se nenhum <see cref="T:System.Xml.Schema.ValidationEventHandler" /> é especificado.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.SchemaTypes">
      <summary>Obtém o valor de pós-compilação de esquema de todos os tipos de esquema no esquema.</summary>
      <returns>Um <see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" /> de todos os tipos de esquema no esquema.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.TargetNamespace">
      <summary>Obtém ou define o URI (Uniform Resource Identifier) do namespace de destino do esquema.</summary>
      <returns>O namespace de destino do esquema.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.UnhandledAttributes">
      <summary>Obtém ou define os atributos qualificados que não pertencem ao namespace de destino do esquema.</summary>
      <returns>Uma matriz de objetos <see cref="T:System.Xml.XmlAttribute" /> qualificados que não pertencem ao namespace de destino do esquema.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Version">
      <summary>Obtém ou define a versão do esquema.</summary>
      <returns>A versão do esquema. O valor padrão é <see langword="String.Empty" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.IO.Stream)">
      <summary>Grava o esquema XML no fluxo de dados fornecido.</summary>
      <param name="stream">O fluxo de dados fornecido.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.IO.Stream,System.Xml.XmlNamespaceManager)">
      <summary>Grava o esquema XML no <see cref="T:System.IO.Stream" /> fornecido usando o <see cref="T:System.Xml.XmlNamespaceManager" /> especificado.</summary>
      <param name="stream">O fluxo de dados fornecido.</param>
      <param name="namespaceManager">O <see cref="T:System.Xml.XmlNamespaceManager" />.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.IO.TextWriter)">
      <summary>Grava o esquema XML no <see cref="T:System.IO.TextWriter" /> fornecido.</summary>
      <param name="writer">O <see cref="T:System.IO.TextWriter" /> no qual ocorrerá a gravação.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.IO.TextWriter,System.Xml.XmlNamespaceManager)">
      <summary>Grava o esquema XML no <see cref="T:System.IO.TextWriter" /> fornecido.</summary>
      <param name="writer">O <see cref="T:System.IO.TextWriter" /> no qual ocorrerá a gravação.</param>
      <param name="namespaceManager">O <see cref="T:System.Xml.XmlNamespaceManager" />.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.Xml.XmlWriter)">
      <summary>Grava o esquema XML no <see cref="T:System.Xml.XmlWriter" /> fornecido.</summary>
      <param name="writer">O <see cref="T:System.Xml.XmlWriter" /> no qual ocorrerá a gravação.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="writer" /> é nulo.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.Xml.XmlWriter,System.Xml.XmlNamespaceManager)">
      <summary>Grava o esquema XML no <see cref="T:System.Xml.XmlWriter" /> fornecido.</summary>
      <param name="writer">O <see cref="T:System.Xml.XmlWriter" /> no qual ocorrerá a gravação.</param>
      <param name="namespaceManager">O <see cref="T:System.Xml.XmlNamespaceManager" />.</param>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAll">
      <summary>Representa o elemento <see langword="all" /> W3C (World Wide Web Consortium) (compositor).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAll.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaAll" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAll.Items">
      <summary>Obtém a coleção de elementos <see langword="XmlSchemaElement" /> contidos no compositor <see langword="all" />.</summary>
      <returns>A coleção de elementos contidos em <see langword="XmlSchemaAll" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAnnotated">
      <summary>A classe base de qualquer elemento que pode conter elementos de anotação.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAnnotated.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaAnnotated" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotated.Annotation">
      <summary>Obtém ou define a propriedade <see langword="annotation" />.</summary>
      <returns>Um <see cref="T:System.Xml.Schema.XmlSchemaAnnotation" /> que representa <see langword="annotation" /> a propriedade.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotated.Id">
      <summary>Obtém ou define a ID de cadeia de caracteres.</summary>
      <returns>A ID da cadeia de caracteres. O padrão é <see langword="String.Empty" />. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotated.UnhandledAttributes">
      <summary>Obtém ou define os atributos qualificados que não pertencem ao namespace de destino do esquema atual.</summary>
      <returns>Uma matriz de objetos <see cref="T:System.Xml.XmlAttribute" /> qualificados que não pertencem ao namespace de destino do esquema.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAnnotation">
      <summary>Representa o elemento <see langword="annotation" /> W3C (World Wide Web Consortium).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAnnotation.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaAnnotation" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotation.Id">
      <summary>Obtém ou define a ID de cadeia de caracteres.</summary>
      <returns>A ID da cadeia de caracteres. O padrão é <see langword="String.Empty" />. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotation.Items">
      <summary>Obtém a coleção de <see langword="Items" /> que é usada para armazenar os elementos filhos <see langword="appinfo" /> e <see langword="documentation" />.</summary>
      <returns>Um <see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" /> dos<see langword="appinfo" /> elementos filho.<see langword="documentation" /></returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotation.UnhandledAttributes">
      <summary>Obtém ou define os atributos qualificados que não pertencem ao namespace de destino do esquema.</summary>
      <returns>Uma matriz de <see cref="T:System.Xml.XmlAttribute" /> objetos que não pertencem ao namespace de destino do esquema.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAny">
      <summary>Representa o elemento <see langword="any" /> W3C (World Wide Web Consortium).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAny.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaAny" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAny.Namespace">
      <summary>Obtém ou define os namespaces que contêm os elementos que podem ser usados.</summary>
      <returns>Namespaces para elementos que estão disponíveis para uso. O padrão é <see langword="##any" />. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAny.ProcessContents">
      <summary>Obtém ou define as informações de como um aplicativo ou processador de XML deve lidar com a validação de documentos XML para os elementos especificados pelo elemento <see langword="any" />.</summary>
      <returns>Um dos valores de <see cref="T:System.Xml.Schema.XmlSchemaContentProcessing" />. Se nenhum <see langword="processContents" /> atributo for especificado, o padrão será <see langword="Strict" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAnyAttribute">
      <summary>Representa o elemento <see langword="anyAttribute" /> W3C (World Wide Web Consortium).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAnyAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnyAttribute.Namespace">
      <summary>Obtém ou define os namespaces que contêm os atributos que podem ser usados.</summary>
      <returns>Namespaces para atributos que estão disponíveis para uso. O padrão é <see langword="##any" />. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnyAttribute.ProcessContents">
      <summary>Obtém ou define as informações de como um aplicativo ou processador de XML deve lidar com a validação de documentos XML para os atributos especificados pelo elemento <see langword="anyAttribute" />.</summary>
      <returns>Um dos valores de <see cref="T:System.Xml.Schema.XmlSchemaContentProcessing" />. Se nenhum <see langword="processContents" /> atributo for especificado, o padrão será <see langword="Strict" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAppInfo">
      <summary>Representa o elemento <see langword="appinfo" /> W3C (World Wide Web Consortium).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAppInfo.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaAppInfo" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAppInfo.Markup">
      <summary>Obtém ou define uma matriz de <see cref="T:System.Xml.XmlNode" /> objetos que representa os nós filhos de <see langword="appinfo" />.</summary>
      <returns>Uma matriz de <see cref="T:System.Xml.XmlNode" /> objetos que representa os <see langword="appinfo" /> nós filho.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAppInfo.Source">
      <summary>Obtém ou define a origem das informações do aplicativo.</summary>
      <returns>Uma referência A Uniform Resource Identifier (URI). O padrão é <see langword="String.Empty" />. Opcional.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAttribute">
      <summary>Representa o elemento <see langword="attribute" /> do esquema XML, conforme especificado pelo W3C (World Wide Web Consortium). Os atributos fornecem informações adicionais sobre outros elementos do documento. A marca do atributo é aninhada entre as marcas de elemento do documento para o esquema. O documento XML exibe atributos como itens nomeados na marca de abertura de um elemento.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.AttributeSchemaType">
      <summary>Obtém um objeto <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> que representa o tipo do atributo baseado no <see cref="P:System.Xml.Schema.XmlSchemaAttribute.SchemaType" /> ou no <see cref="P:System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName" /> do atributo.</summary>
      <returns>Um objeto <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.AttributeType">
      <summary>Obtém o objeto do CLR (Common Language Runtime) com base no <see cref="P:System.Xml.Schema.XmlSchemaAttribute.SchemaType" /> ou no <see cref="P:System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName" /> do atributo que contém o valor de pós-compilação da propriedade <see langword="AttributeType" />.</summary>
      <returns>O objeto Common Runtime Library (CLR) que contém o valor de pós-compilação da <see langword="AttributeType" /> propriedade.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.DefaultValue">
      <summary>Obtém ou define o valor padrão do atributo.</summary>
      <returns>O valor padrão para o atributo. O padrão é uma referência nula. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.FixedValue">
      <summary>Obtém ou define o valor fixo do atributo.</summary>
      <returns>O valor fixo para o atributo. O padrão é nulo. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.Form">
      <summary>Obtém ou define o formato do atributo.</summary>
      <returns>Um dos valores de <see cref="T:System.Xml.Schema.XmlSchemaForm" />. O padrão é o valor do <see cref="P:System.Xml.Schema.XmlSchema.AttributeFormDefault" /> elemento de esquema que contém o atributo. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.Name">
      <summary>Obtém ou define o nome do atributo.</summary>
      <returns>O nome do atributo.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.QualifiedName">
      <summary>Obtém o nome qualificado do atributo.</summary>
      <returns>O valor de pós-compilação da <see langword="QualifiedName" /> propriedade.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.RefName">
      <summary>Obtém ou define o nome de um atributo declarado neste esquema (ou em outro esquema indicado pelo namespace especificado).</summary>
      <returns>O nome do atributo declarado.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.SchemaType">
      <summary>Obtém ou define o tipo de atributo para um tipo simples.</summary>
      <returns>O tipo simples definido neste esquema.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName">
      <summary>Obtém ou define o nome do tipo simples definido neste esquema (ou em outro esquema indicado pelo namespace especificado).</summary>
      <returns>O nome do tipo simples.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.Use">
      <summary>Obtém ou define as informações sobre como o atributo é usado.</summary>
      <returns>Um dos seguintes valores: Nenhum, proibido, opcional ou necessário. O padrão é opcional. Opcional.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAttributeGroup">
      <summary>Representa o elemento <see langword="attributeGroup" /> do esquema XML, conforme especificado pelo W3C (World Wide Web Consortium). O AttributesGroups fornece um mecanismo para agrupar um conjunto de declarações de atributo para que elas possam ser incorporadas como um grupo nas definições de tipo complexo.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAttributeGroup.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroup" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroup.AnyAttribute">
      <summary>Obtém ou define o componente <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> do grupo de atributos.</summary>
      <returns>O elemento World Wide Web Consortium (W3C <see langword="anyAttribute" /> ).</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroup.Attributes">
      <summary>Obtém a coleção de atributos para o grupo de atributos. Contém os elementos <see langword="XmlSchemaAttribute" /> e <see langword="XmlSchemaAttributeGroupRef" />.</summary>
      <returns>A coleção de atributos para o grupo de atributos.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroup.Name">
      <summary>Obtém ou define o nome do grupo de atributos.</summary>
      <returns>O nome do grupo de atributos.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroup.QualifiedName">
      <summary>Obtém o nome qualificado do grupo de atributos.</summary>
      <returns>O nome qualificado do grupo de atributos.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroup.RedefinedAttributeGroup">
      <summary>Obtém a propriedade de grupo de atributos redefinida do esquema XML.</summary>
      <returns>A propriedade de grupo de atributos redefinida.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAttributeGroupRef">
      <summary>Representa o elemento <see langword="attributeGroup" /> com o atributo <see langword="ref" /> do esquema XML, conforme especificado pelo W3C (World Wide Web Consortium). AttributesGroupRef é a referência para um attributeGroup, a propriedade de nome contém o grupo de atributos que está sendo referenciado.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAttributeGroupRef.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroupRef.RefName">
      <summary>Obtém ou define o nome do elemento <see langword="attributeGroup" /> referenciado.</summary>
      <returns>O nome do grupo de atributos referenciado. O valor deve ser um QName.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaChoice">
      <summary>Representa o elemento <see langword="choice" /> (compositor) do Esquema XML, conforme especificado pelo W3C (World Wide Web Consortium). O <see langword="choice" /> permite que apenas um de seus filhos sejam exibidos em uma instância.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaChoice.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaChoice" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaChoice.Items">
      <summary>Obtém a coleção de elementos contidos com o compositor (<see langword="choice" />): <see langword="XmlSchemaElement" />, <see langword="XmlSchemaGroupRef" />, <see langword="XmlSchemaChoice" />, <see langword="XmlSchemaSequence" /> ou <see langword="XmlSchemaAny" />.</summary>
      <returns>A coleção de elementos contidos em <see langword="XmlSchemaChoice" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaCollection">
      <summary>Contém um cache de esquemas XSD (linguagem de definição de esquema XML) e XDR (Dados XML reduzidos). A classe <see cref="T:System.Xml.Schema.XmlSchemaCollection" /> está obsoleta. Use <see cref="T:System.Xml.Schema.XmlSchemaSet" /> em seu lugar.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.#ctor">
      <summary>Inicializa uma nova instância da classe <see langword="XmlSchemaCollection" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.#ctor(System.Xml.XmlNameTable)">
      <summary>Inicializa uma nova instância da classe <see langword="XmlSchemaCollection" /> com o <see cref="T:System.Xml.XmlNameTable" /> especificado. O <see langword="XmlNameTable" /> é usado ao carregar os esquemas.</summary>
      <param name="nametable">O <see langword="XmlNameTable" /> a ser usado.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.String)">
      <summary>Adiciona o esquema localizado pela URL fornecida à coleção de esquemas.</summary>
      <param name="ns">O URI de namespace associado ao esquema. Para esquemas XML, isso geralmente será o <see langword="targetNamespace" />.</param>
      <param name="uri">A URL que especifica o esquema a ser carregado.</param>
      <returns>O <see cref="T:System.Xml.Schema.XmlSchema" /> adicionado à coleção de esquemas; <see langword="null" /> se o esquema que está sendo adicionado for um esquema XDR ou se houver erros de compilação no esquema.</returns>
      <exception cref="T:System.Xml.XmlException">O esquema não é válido.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader)">
      <summary>Adiciona o esquema contido no <see cref="T:System.Xml.XmlReader" /> à coleção de esquema.</summary>
      <param name="ns">O URI de namespace associado ao esquema. Para esquemas XML, isso geralmente será o <see langword="targetNamespace" />.</param>
      <param name="reader">
        <see cref="T:System.Xml.XmlReader" /> contendo o esquema a adicionar.</param>
      <returns>O <see cref="T:System.Xml.Schema.XmlSchema" /> adicionado à coleção de esquemas; <see langword="null" /> se o esquema que está sendo adicionado for um esquema XDR ou se houver erros de compilação no esquema.</returns>
      <exception cref="T:System.Xml.XmlException">O esquema não é válido.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader,System.Xml.XmlResolver)">
      <summary>Adiciona o esquema contido no <see cref="T:System.Xml.XmlReader" /> à coleção de esquema. O <see cref="T:System.Xml.XmlResolver" /> especificado é usado para resolver todos os recursos externos.</summary>
      <param name="ns">O URI de namespace associado ao esquema. Para esquemas XML, isso geralmente será o <see langword="targetNamespace" />.</param>
      <param name="reader">
        <see cref="T:System.Xml.XmlReader" /> contendo o esquema a adicionar.</param>
      <param name="resolver">O <see cref="T:System.Xml.XmlResolver" /> usado para resolver os namespaces referenciados em elementos <see langword="include" /> e <see langword="import" /> ou no atributo <see langword="x-schema" /> (esquemas XDR). Se este for <see langword="null" />, as referências externas não serão resolvidas.</param>
      <returns>O <see cref="T:System.Xml.Schema.XmlSchema" /> adicionado à coleção de esquemas; <see langword="null" /> se o esquema que está sendo adicionado for um esquema XDR ou se houver erros de compilação no esquema.</returns>
      <exception cref="T:System.Xml.XmlException">O esquema não é válido.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema)">
      <summary>Adiciona o <see cref="T:System.Xml.Schema.XmlSchema" /> à coleção.</summary>
      <param name="schema">O <see langword="XmlSchema" /> a adicionar à coleção.</param>
      <returns>O objeto <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema,System.Xml.XmlResolver)">
      <summary>Adiciona o <see cref="T:System.Xml.Schema.XmlSchema" /> à coleção. O <see cref="T:System.Xml.XmlResolver" /> especificado é usado para resolver todas as referências externas.</summary>
      <param name="schema">O <see langword="XmlSchema" /> a adicionar à coleção.</param>
      <param name="resolver">O <see cref="T:System.Xml.XmlResolver" /> usado para resolver os namespaces referenciados em elementos <see langword="include" /> e <see langword="import" />. Se este for <see langword="null" />, as referências externas não serão resolvidas.</param>
      <returns>O <see langword="XmlSchema" /> adicionado à coleção de esquema.</returns>
      <exception cref="T:System.Xml.XmlException">O esquema não é válido.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchemaCollection)">
      <summary>Adiciona todos os namespaces definidos na coleção fornecida (inclusive seus esquemas associados) a esta coleção.</summary>
      <param name="schema">O <see langword="XmlSchemaCollection" /> você deseja adicionar a esta coleção.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Contains(System.String)">
      <summary>Obtém um valor que indica se um esquema com o namespace especificado está na coleção.</summary>
      <param name="ns">O URI de namespace associado ao esquema. Para esquemas XML, esse geralmente será o namespace de destino.</param>
      <returns>
        <see langword="true" /> se um esquema com o namespace especificado estiver na coleção; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Contains(System.Xml.Schema.XmlSchema)">
      <summary>Obtém um valor que indica se o <see langword="targetNamespace" /> do <see cref="T:System.Xml.Schema.XmlSchema" /> especificado está na coleção.</summary>
      <param name="schema">O objeto <see langword="XmlSchema" />.</param>
      <returns>
        <see langword="true" /> se houver um esquema na coleção com o mesmo <see langword="targetNamespace" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
      <summary>Copia todos os objetos <see langword="XmlSchema" /> desta coleção para a matriz fornecida, iniciando no índice especificado.</summary>
      <param name="array">A matriz para a qual copiar os objetos.</param>
      <param name="index">O índice na <paramref name="array" /> em que a cópia começará.</param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.Count">
      <summary>Obtém o número de namespaces definidos nesta coleção.</summary>
      <returns>O número de namespaces definidos nesta coleção.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.GetEnumerator">
      <summary>É compatível com a iteração do estilo "for each" na coleção de nós dos esquemas.</summary>
      <returns>Um enumerador para iteração em todos os esquemas na coleção atual.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.Item(System.String)">
      <summary>Obtém o <see cref="T:System.Xml.Schema.XmlSchema" /> associado ao URI de namespace determinado.</summary>
      <param name="ns">O URI do namespace associado ao esquema que você deseja retornar. Isso geralmente será o <see langword="targetNamespace" /> do esquema.</param>
      <returns>O <see langword="XmlSchema" /> associado ao URI do namespace; <see langword="null" /> se não houver esquema carregado associado ao namespace fornecido ou se o namespace estiver associado a um esquema XDR.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.NameTable">
      <summary>Obtém o <see langword="XmlNameTable" /> padrão usado pelo <see langword="XmlSchemaCollection" /> ao carregar novos esquemas.</summary>
      <returns>Um <see langword="XmlNameTable" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.Xml.Schema.XmlSchemaCollection.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)" />.</summary>
      <param name="array">A matriz para a qual copiar os objetos.</param>
      <param name="index">O índice na <paramref name="array" /> em que a cópia começará.</param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#Count">
      <summary>Para obter uma descrição desse membro, consulte <see cref="P:System.Xml.Schema.XmlSchemaCollection.Count" />.</summary>
      <returns>A contagem dos itens na coleção.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Para obter uma descrição desse membro, consulte <see cref="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#IsSynchronized" />.</summary>
      <returns>
        <see langword="true" />se a coleção for sincronizada; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#SyncRoot">
      <summary>Para obter uma descrição desse membro, consulte <see cref="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#SyncRoot" />.</summary>
      <returns>Um <see cref="P:System.Collections.ICollection.SyncRoot" /> objeto que pode ser usado para sincronizar o acesso à coleção.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.Xml.Schema.XmlSchemaCollection.GetEnumerator" />.</summary>
      <returns>O <see cref="T:System.Collections.IEnumerator" /> da coleção.</returns>
    </member>
    <member name="E:System.Xml.Schema.XmlSchemaCollection.ValidationEventHandler">
      <summary>Define um manipulador de eventos para receber informações sobre os erros de validação dos esquemas XML e XDR.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaCollectionEnumerator">
      <summary>Dá suporte a uma iteração simples em uma coleção. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollectionEnumerator.Current">
      <summary>Obtém o <see cref="T:System.Xml.Schema.XmlSchema" /> atual na coleção.</summary>
      <returns>O <see langword="XmlSchema" /> atual na coleção.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollectionEnumerator.MoveNext">
      <summary>Avança o enumerador para o próximo esquema na coleção.</summary>
      <returns>
        <see langword="true" /> se a movimentação for bem-sucedida, <see langword="false" /> se o enumerador passar o final da coleção.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollectionEnumerator.System#Collections#IEnumerator#Current">
      <summary>Para obter uma descrição desse membro, consulte <see cref="P:System.Xml.Schema.XmlSchemaCollectionEnumerator.Current" />.</summary>
      <returns>O nó atual.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollectionEnumerator.System#Collections#IEnumerator#MoveNext">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.Xml.Schema.XmlSchemaCollectionEnumerator.MoveNext" />.</summary>
      <returns>O próximo nó.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollectionEnumerator.System#Collections#IEnumerator#Reset">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.Xml.Schema.XmlSchemaCollectionEnumerator.System#Collections#IEnumerator#Reset" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaCompilationSettings">
      <summary>Fornece opções de compilação de esquema para a classe <see cref="T:System.Xml.Schema.XmlSchemaSet" /> Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCompilationSettings.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck">
      <summary>Obtém ou define um valor que indica se o <see cref="T:System.Xml.Schema.XmlSchemaSet" /> deve verificar se há violações de UPA (Atribuição de Partícula Exclusiva).</summary>
      <returns>
        <see langword="true" />Se o <see cref="T:System.Xml.Schema.XmlSchemaSet" /> deve verificar violações de atribuição de partícula exclusiva (UPA); caso contrário <see langword="false" />,. O padrão é <see langword="true" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaComplexContent">
      <summary>Representa o elemento <see langword="complexContent" /> do esquema XML, conforme especificado pelo W3C (World Wide Web Consortium). Essa classe representa o modelo de conteúdo complexo para tipos complexos. Ela contém extensões ou restrições em um tipo complexo que tem apenas elementos ou conteúdo misto.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaComplexContent.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaComplexContent" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContent.Content">
      <summary>Obtém ou define o conteúdo.</summary>
      <returns>Uma das <see cref="T:System.Xml.Schema.XmlSchemaComplexContentRestriction" /> classes ou <see cref="T:System.Xml.Schema.XmlSchemaComplexContentExtension" /> .</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContent.IsMixed">
      <summary>Obtém ou define as informações que determinam se o tipo tem um modelo de conteúdo misto.</summary>
      <returns>Se essa propriedade for <see langword="true" />, os dados de caractere poderão aparecer entre os elementos filho do tipo complexo (modelo de conteúdo misto). O padrão é <see langword="false" />. Opcional.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaComplexContentExtension">
      <summary>Representa o elemento <see langword="extension" /> do esquema XML, conforme especificado pelo W3C (World Wide Web Consortium). Essa classe é para tipos complexos com o modelo de conteúdo complexo derivado por extensão. Ela estende o tipo complexo pela adição de elementos ou atributos.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaComplexContentExtension.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaComplexContentExtension" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentExtension.AnyAttribute">
      <summary>Obtém ou define o componente <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> do modelo de conteúdo complexo.</summary>
      <returns>O <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> componente do modelo de conteúdo complexo.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentExtension.Attributes">
      <summary>Obtém a coleção de atributos do conteúdo complexo. Contém os elementos <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> e <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" />.</summary>
      <returns>A coleção de atributos para o conteúdo complexo.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentExtension.BaseTypeName">
      <summary>Obtém ou define o nome do tipo complexo do qual esse tipo é derivado por extensão.</summary>
      <returns>O nome do tipo complexo do qual esse tipo é derivado por extensão.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentExtension.Particle">
      <summary>Obtém ou define uma das classes <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> ou <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</summary>
      <returns>Uma das <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />classes, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" />ou. <see cref="T:System.Xml.Schema.XmlSchemaSequence" /></returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaComplexContentRestriction">
      <summary>Representa o elemento <see langword="restriction" /> do esquema XML, conforme especificado pelo W3C (World Wide Web Consortium). Essa classe é para tipos complexos com um modelo de conteúdo complexo derivado por restrição. Ela restringe o conteúdo do tipo complexo a um subconjunto do tipo complexo herdado.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaComplexContentRestriction.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaComplexContentRestriction" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentRestriction.AnyAttribute">
      <summary>Obtém ou define o componente <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> do modelo de conteúdo complexo.</summary>
      <returns>O <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> componente do modelo de conteúdo complexo.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentRestriction.Attributes">
      <summary>Obtém a coleção de atributos para o tipo complexo. Contém os elementos <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> e <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" />.</summary>
      <returns>A coleção de atributos para o tipo complexo.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentRestriction.BaseTypeName">
      <summary>Obtém ou define o nome de um tipo complexo do qual esse tipo é derivado por restrição.</summary>
      <returns>O nome do tipo complexo do qual esse tipo é derivado por restrição.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentRestriction.Particle">
      <summary>Obtém ou define uma das classes <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> ou <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</summary>
      <returns>Uma das <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />classes, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" />ou. <see cref="T:System.Xml.Schema.XmlSchemaSequence" /></returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaComplexType">
      <summary>Representa o elemento <see langword="complexType" /> do esquema XML, conforme especificado pelo W3C (World Wide Web Consortium). Esta classe define um tipo complexo que determina o conjunto de atributos e o conteúdo de um elemento.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaComplexType.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaComplexType" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.AnyAttribute">
      <summary>Obtém ou define o valor do componente <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> do tipo complexo.</summary>
      <returns>O <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> componente do tipo complexo.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.Attributes">
      <summary>Obtém a coleção de atributos para o tipo complexo.</summary>
      <returns>Contains <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> e<see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" /> classes.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.AttributeUses">
      <summary>Obtém a coleção de todos os atributos compilados deste tipo complexo e seus tipos base.</summary>
      <returns>A coleção de todos os atributos desse tipo complexo e seus tipos base. O valor de pós-compilação da <see langword="AttributeUses" /> propriedade.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.AttributeWildcard">
      <summary>Obtém o valor de pós-compilação para <see langword="anyAttribute" /> para este tipo complexo e seus tipos base.</summary>
      <returns>O valor de pós-compilação do <see langword="anyAttribute" /> elemento.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.Block">
      <summary>Obtém ou define o atributo <see langword="block" />.</summary>
      <returns>O <see langword="block" /> atributo impede que um tipo complexo seja usado no tipo de derivação especificado. O padrão é <see langword="XmlSchemaDerivationMethod.None" />. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.BlockResolved">
      <summary>Obtém o valor depois que o tipo foi compilado para o conjunto de informações de pós-validação de esquema (infoset). Esse valor indica como o tipo é imposto quando <see langword="xsi:type" /> é usado no documento da instância.</summary>
      <returns>O valor do infoset validado após o esquema. O padrão é <see langword="BlockDefault" /> o valor <see langword="schema" /> no elemento.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.ContentModel">
      <summary>Obtém ou define o <see cref="T:System.Xml.Schema.XmlSchemaContentModel" /> de pós-compilação deste tipo complexo.</summary>
      <returns>O tipo de modelo de conteúdo que é uma <see cref="T:System.Xml.Schema.XmlSchemaSimpleContent" /> das <see cref="T:System.Xml.Schema.XmlSchemaComplexContent" /> classes ou.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.ContentType">
      <summary>Obtém o modelo de conteúdo do tipo complexo que contém o valor de pós-compilação.</summary>
      <returns>O valor de pós-compilação do modelo de conteúdo para o tipo complexo.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.ContentTypeParticle">
      <summary>Obtém a partícula que contém o valor de pós-compilação da partícula <see cref="P:System.Xml.Schema.XmlSchemaComplexType.ContentType" />.</summary>
      <returns>A partícula do tipo de conteúdo. O valor de pós-compilação da <see cref="P:System.Xml.Schema.XmlSchemaComplexType.ContentType" /> partícula.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.IsAbstract">
      <summary>Obtém ou define as informações que determinam se o elemento <see langword="complexType" /> pode ser usado no documento da instância.</summary>
      <returns>Se <see langword="true" />, um elemento não pode usar <see langword="complexType" /> esse elemento diretamente e deve usar um tipo complexo derivado deste <see langword="complexType" /> elemento. O padrão é <see langword="false" />. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.IsMixed">
      <summary>Obtém ou define as informações que determinam se o tipo complexo tem um modelo de conteúdo misto (marcação dentro do conteúdo).</summary>
      <returns>
        <see langword="true" />, se os dados de caractere puderem aparecer entre os elementos filho desse tipo complexo; caso contrário <see langword="false" />,. O padrão é <see langword="false" />. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.Particle">
      <summary>Obtém ou define o tipo de compositor como uma das classes <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> ou <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</summary>
      <returns>O tipo de com-compositor.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaContent">
      <summary>Uma classe abstrata para o conteúdo de esquema.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaContent.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaContent" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaContentModel">
      <summary>Especifica a ordem e a estrutura dos elementos filhos de um tipo.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaContentModel.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaContentModel" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaContentModel.Content">
      <summary>Obtém ou define o conteúdo do tipo.</summary>
      <returns>Fornece o conteúdo do tipo.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaContentProcessing">
      <summary>Fornece informações sobre o modo de validação de substituições de elemento <see langword="any" /> e <see langword="anyAttribute" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentProcessing.Lax">
      <summary>Se o esquema associado for encontrado, os itens do documento serão validados. Caso contrário, nenhum erro será gerado.
Se o item não é validado, o processador XML tenta notificar o cliente por meio de um manipulador de eventos de validação com <see cref="P:System.Xml.Schema.ValidationEventArgs.Severity" /> = <see langword="XmlSeverityType.Warning" />. Se um manipulador de eventos de validação não foi configurado, nenhuma informação é retornada quando o aviso é produzido.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentProcessing.None">
      <summary>Os itens de documento não são validados.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentProcessing.Skip">
      <summary>Os itens de documento devem consistir em um XML bem formado e não são validados pelo esquema.
O processador XML tenta notificar o cliente por meio de um manipulador de eventos de validação com <see cref="P:System.Xml.Schema.ValidationEventArgs.Severity" /> = <see langword="XmlSeverityType.Warning" /> informando que não houve validação para o item fornecido. Se um manipulador de eventos de validação não foi configurado, nenhuma informação é retornada quando o aviso é produzido.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentProcessing.Strict">
      <summary>O processador de esquema deve localizar um esquema associado ao namespace indicado para validar os itens de documento.
Se o processador não pode encontrar um esquema ou se os itens não são válidos, o processador XML tenta notificar o cliente por meio de um manipulador de eventos de validação com <see cref="P:System.Xml.Schema.ValidationEventArgs.Severity" /> = <see langword="XmlSeverityType.Warning" />. Se ocorre um erro de validação e um manipulador de eventos de validação não é fornecido, uma exceção é gerada.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaContentType">
      <summary>Enumerações para o modelo de conteúdo do tipo complexo. Representa o conteúdo no conjunto de informações de pós-validação de esquema (infoset).</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentType.ElementOnly">
      <summary>Conteúdo somente do elemento.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentType.Empty">
      <summary>Conteúdo vazio.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentType.Mixed">
      <summary>Conteúdo misto.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentType.TextOnly">
      <summary>Conteúdo somente de texto.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaDatatype">
      <summary>A classe <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> é uma classe abstrata para mapear os tipos de XSD (linguagem de definição de esquema XML) para os tipos de CLR (Common Language Runtime).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type)">
      <summary>Converte o valor especificado, cujo tipo é uma das representações válidas do CLR (Common Language Runtime) do tipo de esquema XML representado pelo <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, no tipo do CLR especificado.</summary>
      <param name="value">O valor de entrada a ser convertido no tipo especificado.</param>
      <param name="targetType">O tipo de destino a ser convertido no valor de entrada.</param>
      <returns>O valor de entrada convertido.</returns>
      <exception cref="T:System.ArgumentNullException">O parâmetro <see cref="T:System.Object" /> ou <see cref="T:System.Type" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidCastException">O tipo representado pelo <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> não dá suporte a uma conversão de tipo do valor especificado para o tipo especificado.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Converterá o valor especificado, cujo tipo é uma das representações válidas do CLR (Common Language Runtime) do tipo de esquema XML representado pelo <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, no tipo CLR especificado usando o <see cref="T:System.Xml.IXmlNamespaceResolver" /> se o <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> representar o tipo xs:QName ou um tipo derivado dele.</summary>
      <param name="value">O valor de entrada a ser convertido no tipo especificado.</param>
      <param name="targetType">O tipo de destino a ser convertido no valor de entrada.</param>
      <param name="namespaceResolver">Um <see cref="T:System.Xml.IXmlNamespaceResolver" /> usado para resolver os prefixos de namespace. Somente será usado se o <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> representar o tipo xs:QName ou um tipo derivado dele.</param>
      <returns>O valor de entrada convertido.</returns>
      <exception cref="T:System.ArgumentNullException">O parâmetro <see cref="T:System.Object" /> ou <see cref="T:System.Type" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidCastException">O tipo representado pelo <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> não dá suporte a uma conversão de tipo do valor especificado para o tipo especificado.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)">
      <summary>O método <see cref="M:System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)" /> sempre retorna <see langword="false" />.</summary>
      <param name="datatype">O <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />.</param>
      <returns>Sempre retorna <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
      <summary>Quando substituído em uma classe derivada, valida a <see langword="string" /> especificada em relação a um tipo simples interno ou definido pelo usuário.</summary>
      <param name="s">A <see langword="string" /> a ser validada em relação ao tipo simples.</param>
      <param name="nameTable">A <see cref="T:System.Xml.XmlNameTable" /> a ser usada para atomização ao analisar a <see langword="string" /> se este objeto <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> representar o tipo xs:NCName.</param>
      <param name="nsmgr">O objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> que será usado durante a análise de <see langword="string" /> se este <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> objeto representar o tipo xs:QName.</param>
      <returns>Um <see cref="T:System.Object" /> que pode ser convertido com segurança no tipo retornado pela propriedade <see cref="P:System.Xml.Schema.XmlSchemaDatatype.ValueType" />.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">O valor de entrada não é uma instância válida desse tipo de esquema XML do W3C.</exception>
      <exception cref="T:System.ArgumentNullException">O valor a ser analisado não pode ser <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDatatype.TokenizedType">
      <summary>Quando substituído em uma classe derivada, obtém o tipo da <see langword="string" /> conforme especificado na especificação XML 1.0 do W3C (World Wide Web Consortium).</summary>
      <returns>Um <see cref="T:System.Xml.XmlTokenizedType" /> valor para o <see langword="string" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDatatype.TypeCode">
      <summary>Obtém o valor de <see cref="T:System.Xml.Schema.XmlTypeCode" /> para o tipo simples.</summary>
      <returns>O <see cref="T:System.Xml.Schema.XmlTypeCode" /> valor para o tipo simples.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDatatype.ValueType">
      <summary>Quando substituído em uma classe derivada, obtém o tipo do CLR (Common Language Runtime) do item.</summary>
      <returns>O tipo CLR (Common Language Runtime) do item.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDatatype.Variety">
      <summary>Obtém o valor de <see cref="T:System.Xml.Schema.XmlSchemaDatatypeVariety" /> para o tipo simples.</summary>
      <returns>O <see cref="T:System.Xml.Schema.XmlSchemaDatatypeVariety" /> valor para o tipo simples.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaDatatypeVariety">
      <summary>Especifica a variedade de tipo de dados do esquema XML do W3C do tipo.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDatatypeVariety.Atomic">
      <summary>Um tipo atômico do esquema XML do W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDatatypeVariety.List">
      <summary>Um tipo de lista do esquema XML do W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDatatypeVariety.Union">
      <summary>Um tipo de união do esquema XML do W3C.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaDerivationMethod">
      <summary>Fornece diferentes métodos para evitar a derivação.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.All">
      <summary>
        <see langword="#all" />. Refere-se a todos os métodos de derivação.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.Empty">
      <summary>Substituir o método de derivação padrão para permitir qualquer derivação.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.Extension">
      <summary>Refere-se a derivações por <see langword="Extension" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.List">
      <summary>Refere-se a derivações por <see langword="List" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.None">
      <summary>Aceita o método de derivação padrão.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.Restriction">
      <summary>Refere-se a derivações por <see langword="Restriction" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.Substitution">
      <summary>Refere-se a derivações por <see langword="Substitution" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.Union">
      <summary>Refere-se a derivações por <see langword="Union" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaDocumentation">
      <summary>Representa o elemento <see langword="documentation" /> do esquema XML, conforme especificado pelo W3C (World Wide Web Consortium). Essa classe especifica informações a serem lidas ou usadas por humanos em um <see langword="annotation" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaDocumentation.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaDocumentation" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDocumentation.Language">
      <summary>Obtém ou define o atributo <see langword="xml:lang" />. Funciona como um indicador do idioma usado no conteúdo.</summary>
      <returns>O atributo <see langword="xml:lang" />. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDocumentation.Markup">
      <summary>Obtém ou define uma matriz de <see langword="XmlNodes" /> que representa os nós filho de documentação.</summary>
      <returns>A matriz que representa os nós filho de documentação.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDocumentation.Source">
      <summary>Obtém ou define a origem do URI (Uniform Resource Identifier) das informações.</summary>
      <returns>Uma referência de URI. O padrão é <see langword="String.Empty" />. Opcional.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaElement">
      <summary>Representa o elemento <see langword="element" /> do esquema XML, conforme especificado pelo World Wide Web Consortium (W3C). Essa classe é a classe base para todos os tipos de partícula e é usada para descrever um elemento em um documento XML.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaElement.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaElement" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.Block">
      <summary>Obtém ou define uma derivação de <see langword="Block" />.</summary>
      <returns>O atributo usado para bloquear uma derivação de tipo. O valor padrão é <see langword="XmlSchemaDerivationMethod.None" />. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.BlockResolved">
      <summary>Obtém o valor de pós-compilação da propriedade <see langword="Block" />.</summary>
      <returns>O valor de pós-compilação da <see langword="Block" /> propriedade. O padrão é o <see langword="BlockDefault" /> valor <see langword="schema" /> no elemento.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.Constraints">
      <summary>Obtém a coleção de restrições no elemento.</summary>
      <returns>A coleção de restrições.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.DefaultValue">
      <summary>Obtém ou define o valor padrão do elemento quando seu conteúdo é um tipo simples ou quando o conteúdo do elemento é <see langword="textOnly" />.</summary>
      <returns>O valor padrão para o elemento. O padrão é uma referência nula. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.ElementSchemaType">
      <summary>Obtém um objeto <see cref="T:System.Xml.Schema.XmlSchemaType" /> que representa o tipo do elemento com base nos valores <see cref="P:System.Xml.Schema.XmlSchemaElement.SchemaType" /> e <see cref="P:System.Xml.Schema.XmlSchemaElement.SchemaTypeName" /> do elemento.</summary>
      <returns>Um objeto <see cref="T:System.Xml.Schema.XmlSchemaType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.ElementType">
      <summary>Obtém um objeto do CLR (Common Language Runtime) com base no <see cref="T:System.Xml.Schema.XmlSchemaElement" /> ou <see cref="T:System.Xml.Schema.XmlSchemaElement" /> do elemento, que contém o valor de pós-compilação da propriedade <see langword="ElementType" />.</summary>
      <returns>O objeto Common Language Runtime. O valor de pós-compilação da <see langword="ElementType" /> propriedade.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.Final">
      <summary>Obtém ou define a propriedade <see langword="Final" /> para indicar que nenhuma derivação adicional é permitida.</summary>
      <returns>A propriedade de <see langword="Final" /> . O padrão é <see langword="XmlSchemaDerivationMethod.None" />. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.FinalResolved">
      <summary>Obtém o valor de pós-compilação da propriedade <see langword="Final" />.</summary>
      <returns>O valor de pós-compilação da <see langword="Final" /> propriedade. O valor padrão é <see langword="FinalDefault" /> o valor <see langword="schema" /> no elemento.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.FixedValue">
      <summary>Obtém ou define o valor fixo.</summary>
      <returns>O valor fixo que é predeterminado e inalterável. O padrão é uma referência nula. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.Form">
      <summary>Obtém ou define o formato do elemento.</summary>
      <returns>O formato para o elemento. O padrão é o valor <see cref="P:System.Xml.Schema.XmlSchema.ElementFormDefault" />. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.IsAbstract">
      <summary>Obtém ou define informações para indicar se o elemento pode ser usado em um documento de instância.</summary>
      <returns>Se <see langword="true" />, o elemento não pode aparecer no documento de instância. O padrão é <see langword="false" />. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.IsNillable">
      <summary>Obtém ou define as informações que indicam se <see langword="xsi:nil" /> pode ocorrer nos dados da instância. Indica se um valor nulo explícito pode ser atribuído ao elemento.</summary>
      <returns>Se anulável for <see langword="true" />, isso permitirá que uma instância do elemento tenha o <see langword="nil" /> atributo definido como <see langword="true" />. O <see langword="nil" /> atributo é definido como parte do namespace do esquema XML para instâncias. O padrão é <see langword="false" />. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.Name">
      <summary>Obtém ou define o nome do elemento.</summary>
      <returns>O nome do elemento. O padrão é <see langword="String.Empty" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.QualifiedName">
      <summary>Obtém o nome qualificado real do elemento especificado.</summary>
      <returns>O nome qualificado do elemento. O valor de pós-compilação da <see langword="QualifiedName" /> propriedade.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.RefName">
      <summary>Obtém ou define o nome de referência de um elemento declarado nesse esquema (ou em outro esquema indicado pelo namespace especificado).</summary>
      <returns>O nome de referência do elemento.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.SchemaType">
      <summary>Obtém ou define o tipo do elemento. Esse pode ser um tipo complexo ou um tipo simples.</summary>
      <returns>O tipo do elemento.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.SchemaTypeName">
      <summary>Obtém ou define o nome de um tipo de dados interno definido nesse esquema ou em outro esquema indicado pelo namespace especificado.</summary>
      <returns>O nome do tipo de dados interno.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.SubstitutionGroup">
      <summary>Obtém ou define o nome de um elemento que está sendo substituído por este elemento.</summary>
      <returns>O nome qualificado de um elemento que está sendo substituído por este elemento. Opcional.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaEnumerationFacet">
      <summary>Representa a faceta <see langword="enumeration" /> do Esquema XML, conforme especificado pelo W3C (World Wide Web Consortium). Essa classe especifica uma lista de valores válidos para um elemento simpleType. A declaração está contida em uma declaração <see langword="restriction" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaEnumerationFacet.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaEnumerationFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaException">
      <summary>Retorna informações detalhadas sobre a exceção do esquema.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaException" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Constrói um novo objeto <see langword="XmlSchemaException" /> com as informações de <see langword="SerializationInfo" /> e <see langword="StreamingContext" /> fornecidas que contêm todas as propriedades da <see langword="XmlSchemaException" />.</summary>
      <param name="info">SerializationInfo.</param>
      <param name="context">StreamingContext.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaException" /> com a mensagem de exceção especificada.</summary>
      <param name="message">Uma descrição de <see langword="string" /> da condição de erro.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaException" /> com a mensagem de exceção e o objeto <see cref="T:System.Exception" /> original que causou essa exceção especificada.</summary>
      <param name="message">Uma descrição de <see langword="string" /> da condição de erro.</param>
      <param name="innerException">O objeto T:System.Exception original que causou essa exceção.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaException" /> com a mensagem de exceção especificada e o objeto <see cref="T:System.Exception" /> original, o número de linha e a posição da linha do XML que causou essa exceção especificada.</summary>
      <param name="message">Uma descrição de <see langword="string" /> da condição de erro.</param>
      <param name="innerException">O objeto T:System.Exception original que causou essa exceção.</param>
      <param name="lineNumber">O número de linha do XML que causou essa exceção.</param>
      <param name="linePosition">A posição da linha do XML que causou essa exceção.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Transmite todas as propriedades <see langword="XmlSchemaException" /> para a classe <see langword="SerializationInfo" /> para o <see langword="StreamingContext" /> fornecido.</summary>
      <param name="info">O <see langword="SerializationInfo" />.</param>
      <param name="context">As informações de <see langword="StreamingContext" />.</param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaException.LineNumber">
      <summary>Obtém o número de linha que indica onde ocorreu o erro.</summary>
      <returns>O número de linha que indica onde ocorreu o erro.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaException.LinePosition">
      <summary>Obtém a posição da linha que indica onde ocorreu o erro.</summary>
      <returns>A posição na linha que indica onde ocorreu o erro.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaException.Message">
      <summary>Obtém a descrição da condição de erro dessa exceção.</summary>
      <returns>A descrição da condição de erro desta exceção.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaException.SourceSchemaObject">
      <summary>O <see langword="XmlSchemaObject" /> que produziu a <see langword="XmlSchemaException" />.</summary>
      <returns>Uma instância de objeto válida representa um erro de validação estrutural no SOM (modelo de objeto de esquema XML).</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaException.SourceUri">
      <summary>Obtém o URI (Uniform Resource Identifier) do esquema que causou a exceção.</summary>
      <returns>O local do URI do esquema que causou a exceção.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaExternal">
      <summary>Uma classe abstrata. Fornece informações sobre o esquema incluído.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaExternal.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaExternal" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaExternal.Id">
      <summary>Obtém ou define a ID de cadeia de caracteres.</summary>
      <returns>A ID da cadeia de caracteres. O padrão é <see langword="String.Empty" />. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaExternal.Schema">
      <summary>Obtém ou define o <see langword="XmlSchema" /> para o esquema referenciado.</summary>
      <returns>O <see langword="XmlSchema" /> para o esquema referenciado.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaExternal.SchemaLocation">
      <summary>Obtém ou define o local do URI (Uniform Resource Identifier) para o esquema, que informa ao processador de esquema no qual o esquema reside fisicamente.</summary>
      <returns>O local do URI para o esquema. Opcional para esquemas importados.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaExternal.UnhandledAttributes">
      <summary>Obtém ou define os atributos qualificados, os quais não pertencem ao namespace de destino do esquema.</summary>
      <returns>Atributos qualificados que pertencem a outro namespace de destino.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaFacet">
      <summary>Classe abstrata para todas as facetas que são usadas quando os tipos simples são derivados por restrição.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaFacet.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaFacet" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaFacet.IsFixed">
      <summary>Obtém ou define as informações que indicam que esta faceta é fixa.</summary>
      <returns>Se <see langword="true" />, value for Fixed; caso contrário <see langword="false" />,. O padrão é <see langword="false" />. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaFacet.Value">
      <summary>Obtém ou define o atributo <see langword="value" /> da faceta.</summary>
      <returns>O atributo de valor.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaForm">
      <summary>Indica se os atributos ou elementos precisam ser qualificados com um prefixo de namespace.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaForm.None">
      <summary>O formulário de elemento e atributo não está especificado no esquema.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaForm.Qualified">
      <summary>Elementos e atributos devem ser qualificados com um prefixo de namespace.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaForm.Unqualified">
      <summary>Elementos e atributos não precisam ser qualificados com um prefixo de namespace.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaFractionDigitsFacet">
      <summary>Especifica uma restrição no número de dígitos que podem ser inseridos para o valor de fração de um elemento simpleType. O valor de fractionDigits deve ser um inteiro positivo. Representa a faceta <see langword="fractionDigits" /> do W3C (World Wide Web Consortium).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaFractionDigitsFacet.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaFractionDigitsFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaGroup">
      <summary>Representa o elemento <see langword="group" /> do esquema XML, conforme especificado pelo W3C (World Wide Web Consortium). Essa classe define grupos no nível do <see langword="schema" /> que são referenciados por meio de tipos complexos. Ela agrupa um conjunto de declarações de elemento para que elas possam ser incorporadas como um grupo nas definições de tipo complexo.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaGroup.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaGroup" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroup.Name">
      <summary>Obtém ou define o nome do grupo de esquemas.</summary>
      <returns>O nome do grupo de esquemas.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroup.Particle">
      <summary>Obtém ou define as classes <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> ou <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</summary>
      <returns>Uma das <see cref="T:System.Xml.Schema.XmlSchemaChoice" />classes, <see cref="T:System.Xml.Schema.XmlSchemaAll" />ou. <see cref="T:System.Xml.Schema.XmlSchemaSequence" /></returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroup.QualifiedName">
      <summary>Obtém o nome qualificado do grupo de esquemas.</summary>
      <returns>Um <see cref="T:System.Xml.XmlQualifiedName" /> objeto que representa o nome qualificado do grupo de esquemas.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaGroupBase">
      <summary>Uma classe abstrata para <see cref="T:System.Xml.Schema.XmlSchemaAll" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" /> ou <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroupBase.Items">
      <summary>Essa coleção é usada para adicionar novos elementos ao compositor.</summary>
      <returns>Um <see langword="XmlSchemaObjectCollection" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaGroupRef">
      <summary>Representa o elemento <see langword="group" /> com o atributo <see langword="ref" /> do esquema XML, conforme especificado pelo W3C (World Wide Web Consortium). Essa classe é usada em tipos complexos que fazem referência a um <see langword="group" /> definido no nível do <see langword="schema" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaGroupRef.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroupRef.Particle">
      <summary>Obtém uma das classes <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> ou <see cref="T:System.Xml.Schema.XmlSchemaSequence" />, que contém o valor de pós-compilação da propriedade <see langword="Particle" />.</summary>
      <returns>O valor de pós-compilação da <see langword="Particle" /> Propriedade, que é uma <see cref="T:System.Xml.Schema.XmlSchemaChoice" />das classes, <see cref="T:System.Xml.Schema.XmlSchemaAll" />ou <see cref="T:System.Xml.Schema.XmlSchemaSequence" /> .</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroupRef.RefName">
      <summary>Obtém ou define o nome de um grupo definido no esquema (ou em outro esquema indicado pelo namespace especificado).</summary>
      <returns>O nome de um grupo definido neste esquema.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaIdentityConstraint">
      <summary>Classe para restrições de identidade: elementos <see langword="key" />, <see langword="keyref" /> e <see langword="unique" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaIdentityConstraint.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaIdentityConstraint" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaIdentityConstraint.Fields">
      <summary>Obtém a coleção de campos que se aplicam como filhos do seletor de expressão XPath (XML Path Language).</summary>
      <returns>A coleção de campos.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaIdentityConstraint.Name">
      <summary>Obtém ou define o nome da restrição de identidade.</summary>
      <returns>O nome da restrição de identidade.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaIdentityConstraint.QualifiedName">
      <summary>Obtém o nome qualificado da restrição de identidade, que contém o valor de pós-compilação da propriedade <see langword="QualifiedName" />.</summary>
      <returns>O valor de pós-compilação da <see langword="QualifiedName" /> propriedade.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaIdentityConstraint.Selector">
      <summary>Obtém ou define o elemento <see langword="selector" /> da expressão XPath.</summary>
      <returns>O elemento Expression <see langword="selector" /> XPath.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaImport">
      <summary>Representa o elemento <see langword="import" /> do esquema XML, conforme especificado pelo W3C (World Wide Web Consortium). Essa classe é usada para importar os componentes de esquema de outros esquemas.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaImport.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaImport" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaImport.Annotation">
      <summary>Obtém ou define a propriedade <see langword="annotation" />.</summary>
      <returns>A anotação.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaImport.Namespace">
      <summary>Obtém ou define o namespace de destino para o esquema importado como uma referência de URI (Uniform Resource Identifier).</summary>
      <returns>O namespace de destino para o esquema importado como uma referência de URI. Opcional.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaInclude">
      <summary>Representa o elemento <see langword="include" /> do esquema XML, conforme especificado pelo W3C (World Wide Web Consortium). Essa classe é usada para incluir declarações e definições de um esquema externo. Em seguida, as definições e declarações incluídas ficam disponíveis para o processamento no esquema que as contém.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInclude.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaInclude" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInclude.Annotation">
      <summary>Obtém ou define a propriedade <see langword="annotation" />.</summary>
      <returns>A anotação.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaInference">
      <summary>Infere uma esquema de Linguagem de Definição de Esquema XML (XSD) de um documento XML. A classe <see cref="T:System.Xml.Schema.XmlSchemaInference" /> não pode ser herdada.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInference.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaInference" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaInference.InferenceOption">
      <summary>Afeta as informações de ocorrência e tipo deduzidas pela classe <see cref="T:System.Xml.Schema.XmlSchemaInference" /> para elementos e atributos em um documento XML.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed">
      <summary>Indica que uma declaração de esquema menos restritiva deve ser deduzida para um determinado elemento ou atributo.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted">
      <summary>Indica que uma declaração de esquema mais restritiva deve ser deduzida para um determinado elemento ou atributo.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader)">
      <summary>Deduz um esquema XSD (linguagem de definição de esquema XML) do documento XML contido no objeto <see cref="T:System.Xml.XmlReader" /> especificado.</summary>
      <param name="instanceDocument">Um objeto <see cref="T:System.Xml.XmlReader" /> que contém o documento XML do qual um esquema será deduzido.</param>
      <returns>Um objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que contém os esquemas deduzidos.</returns>
      <exception cref="T:System.Xml.XmlException">O documento XML não está bem formado.</exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaInferenceException">O objeto <see cref="T:System.Xml.XmlReader" /> não está posicionado no nó raiz nem em um elemento. Ocorrerá um erro durante o processo de inferência de esquema.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet)">
      <summary>Deduz um esquema XSD (linguagem de definição de esquema XML) do documento XML contido no objeto <see cref="T:System.Xml.XmlReader" /> especificado e refina o esquema deduzido usando um esquema existente no objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado com o mesmo namespace de destino.</summary>
      <param name="instanceDocument">Um objeto <see cref="T:System.Xml.XmlReader" /> que contém o documento XML do qual um esquema será deduzido.</param>
      <param name="schemas">Um objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que contém um esquema existente usado para refinar o esquema deduzido.</param>
      <returns>Um objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que contém os esquemas deduzidos.</returns>
      <exception cref="T:System.Xml.XmlException">O documento XML não está bem formado.</exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaInferenceException">O objeto <see cref="T:System.Xml.XmlReader" /> não está posicionado no nó raiz nem em um elemento. Ocorrerá um erro durante o processo de inferência de esquema.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInference.Occurrence">
      <summary>Obtém ou define o valor de <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" /> que afeta as declarações de ocorrência de esquema deduzidas do documento XML.</summary>
      <returns>Um objeto <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInference.TypeInference">
      <summary>Obtém ou define o valor de <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" /> que afeta os tipos deduzidos do documento XML.</summary>
      <returns>Um objeto <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaInferenceException">
      <summary>Retorna informações sobre os erros encontrados pela classe <see cref="T:System.Xml.Schema.XmlSchemaInference" /> para inferir um esquema de um documento XML.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> com os objetos <see cref="T:System.Runtime.Serialization.SerializationInfo" /> e <see cref="T:System.Runtime.Serialization.StreamingContext" /> especificados que contêm todas as propriedades da <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />.</summary>
      <param name="info">Um objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context">Um objeto <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> com a mensagem de erro especificada.</summary>
      <param name="message">Uma descrição do erro.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> com a mensagem de erro especificada e a <see cref="T:System.Exception" /> original que causou a <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> especificada.</summary>
      <param name="message">Uma descrição do erro.</param>
      <param name="innerException">Um objeto <see cref="T:System.Exception" /> que contém a exceção original que causou a <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> com a mensagem de erro especificada, a <see cref="T:System.Exception" /> original que causou a <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> especificada e o número de linha e a posição de linha do erro no documento XML especificado.</summary>
      <param name="message">Uma descrição do erro.</param>
      <param name="innerException">Um objeto <see cref="T:System.Exception" /> que contém a exceção original que causou a <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />.</param>
      <param name="lineNumber">O número de linha no documento XML que causou a <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />.</param>
      <param name="linePosition">A posição da linha no documento XML que causou a <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Todos os fluxos das propriedades do objeto <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> no objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> especificado para o objeto <see cref="T:System.Runtime.Serialization.StreamingContext" /> especificado.</summary>
      <param name="info">Um objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context">Um objeto <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaInfo">
      <summary>Representa o infoset de validação pós-esquema de um nó XML validado.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInfo.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaInfo" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.ContentType">
      <summary>Obtém ou define o objeto <see cref="T:System.Xml.Schema.XmlSchemaContentType" /> que corresponde ao tipo de conteúdo desse nó XML validado.</summary>
      <returns>Um objeto <see cref="T:System.Xml.Schema.XmlSchemaContentType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.IsDefault">
      <summary>Obtém ou define um valor que indica se este nó XML validado foi definido como o resultado de um padrão que está sendo aplicado durante a validação de esquema XSD (linguagem de definição de esquema XML).</summary>
      <returns>Um valor <see langword="bool" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.IsNil">
      <summary>Obtém ou define um valor que indica se o valor deste nó XML validado é nulo.</summary>
      <returns>Um valor <see langword="bool" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.MemberType">
      <summary>Obtém ou define o tipo de esquema dinâmico deste nó XML validado.</summary>
      <returns>Um objeto <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute">
      <summary>Obtém ou define o objeto <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> compilado que corresponde a este nó XML validado.</summary>
      <returns>Um objeto <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.SchemaElement">
      <summary>Obtém ou define o objeto <see cref="T:System.Xml.Schema.XmlSchemaElement" /> compilado que corresponde a este nó XML validado.</summary>
      <returns>Um objeto <see cref="T:System.Xml.Schema.XmlSchemaElement" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.SchemaType">
      <summary>Obtém ou define o tipo de esquema XSD (linguagem de definição de esquema XML) estático deste nó XML validado.</summary>
      <returns>Um objeto <see cref="T:System.Xml.Schema.XmlSchemaType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.Validity">
      <summary>Obtém ou define o valor de <see cref="T:System.Xml.Schema.XmlSchemaValidity" /> deste nó XML validado.</summary>
      <returns>Um valor <see cref="T:System.Xml.Schema.XmlSchemaValidity" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaKey">
      <summary>Essa classe representa o elemento <see langword="key" /> do esquema XML, conforme especificado pelo W3C (World Wide Web Consortium).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaKey.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaKey" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaKeyref">
      <summary>Essa classe representa o elemento <see langword="keyref" /> do esquema XML, conforme especificado pelo W3C (World Wide Web Consortium).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaKeyref.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaKeyref" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaKeyref.Refer">
      <summary>Obtém ou define o nome da chave à qual essa restrição se refere em outro tipo simples ou complexo.</summary>
      <returns>O QName da chave à qual essa restrição se refere.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaLengthFacet">
      <summary>Representa a faceta <see langword="length" /> do Esquema XML, conforme especificado pelo W3C (World Wide Web Consortium). Essa classe pode ser usada para especificar uma restrição de comprimento de um elemento <see langword="simpleType" /> no tipo de dados.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaLengthFacet.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaLengthFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMaxExclusiveFacet">
      <summary>Representa o elemento <see langword="maxExclusive" /> do esquema XML, conforme especificado pelo W3C (World Wide Web Consortium). Essa classe pode ser usada para especificar uma restrição no valor máximo de um elemento <see langword="simpleType" />. O valor do elemento deve ser menor que o valor do elemento <see langword="maxExclusive" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMaxExclusiveFacet.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaMaxExclusiveFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMaxInclusiveFacet">
      <summary>Representa o elemento <see langword="maxInclusive" /> do esquema XML, conforme especificado pelo W3C (World Wide Web Consortium). Essa classe pode ser usada para especificar uma restrição no valor máximo de um elemento <see langword="simpleType" />. O valor do elemento deve ser menor ou igual ao valor do elemento <see langword="maxInclusive" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMaxInclusiveFacet.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaMaxInclusiveFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMaxLengthFacet">
      <summary>Representa o elemento <see langword="maxLength" /> do esquema XML, conforme especificado pelo W3C (World Wide Web Consortium). Essa classe pode ser usada para especificar uma restrição de comprimento máximo do valor de dados de um elemento <see langword="simpleType" />. O comprimento deve ser menor que o valor do elemento <see langword="maxLength" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMaxLengthFacet.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaMaxLengthFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMinExclusiveFacet">
      <summary>Representa o elemento <see langword="minExclusive" /> do esquema XML, conforme especificado pelo W3C (World Wide Web Consortium). Essa classe pode ser usada para especificar uma restrição no valor mínimo de um elemento <see langword="simpleType" />. O valor do elemento deve ser maior que o valor do elemento <see langword="minExclusive" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMinExclusiveFacet.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaMinExclusiveFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMinInclusiveFacet">
      <summary>Representa o elemento <see langword="minInclusive" /> do esquema XML, conforme especificado pelo W3C (World Wide Web Consortium). Essa classe pode ser usada para especificar uma restrição de valor mínimo de um elemento simpleType. O valor do elemento deve ser maior ou igual ao valor do elemento <see langword="minInclusive" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMinInclusiveFacet.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaMinInclusiveFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMinLengthFacet">
      <summary>Representa o elemento <see langword="minLength" /> do esquema XML, conforme especificado pelo W3C (World Wide Web Consortium). Essa classe pode ser usada para especificar uma restrição de comprimento mínimo do valor de dados de um elemento <see langword="simpleType" />. O comprimento deve ser maior que o valor do elemento <see langword="minLength" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMinLengthFacet.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaMinLengthFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaNotation">
      <summary>Representa o elemento <see langword="notation" /> do esquema XML, conforme especificado pelo W3C (World Wide Web Consortium). Um declaração <see langword="notation" /> do esquema XML é uma reconstrução de declarações <see langword="XML 1.0 NOTATION" />. A finalidade das notações é descrever o formato dos dados que não são XML dentro de um documento XML.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaNotation.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaNotation" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaNotation.Name">
      <summary>Obtém ou define o nome da notação.</summary>
      <returns>O nome da notação.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaNotation.Public">
      <summary>Obtém ou define o identificador <see langword="public" />.</summary>
      <returns>O <see langword="public" /> identificador. O valor deve ser um Uniform Resource Identifier (URI) válido.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaNotation.System">
      <summary>Obtém ou define o identificador <see langword="system" />.</summary>
      <returns>O <see langword="system" /> identificador. O valor deve ser um URI válido.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaNumericFacet">
      <summary>Classe abstrata para definir facetas <see langword="numeric" />. Essa é a classe base para classes de faceta numérica, como <see cref="T:System.Xml.Schema.XmlSchemaMinLengthFacet" /></summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaNumericFacet.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaNumericFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaObject">
      <summary>Representa a classe raiz para a hierarquia de modelo de objeto de esquema XML e serve como uma classe base para classes, como a classe <see cref="T:System.Xml.Schema.XmlSchema" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObject.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObject.LineNumber">
      <summary>Obtém ou define o número de linha no arquivo ao qual o elemento <see langword="schema" /> se refere.</summary>
      <returns>O número da linha.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObject.LinePosition">
      <summary>Obtém ou define a posição da linha no arquivo ao qual o elemento <see langword="schema" /> se refere.</summary>
      <returns>A posição da linha.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObject.Namespaces">
      <summary>Obtém ou define o <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> a ser usado com esse objeto de esquema.</summary>
      <returns>A propriedade <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> do objeto de esquema.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObject.Parent">
      <summary>Obtém ou define o pai deste <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</summary>
      <returns>O pai <see cref="T:System.Xml.Schema.XmlSchemaObject" /> desse <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObject.SourceUri">
      <summary>Obtém ou define o local de origem para o arquivo que carregou o esquema.</summary>
      <returns>O local de origem (URI) do arquivo.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaObjectCollection">
      <summary>Uma coleção de <see cref="T:System.Xml.Schema.XmlSchemaObject" />s.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.#ctor">
      <summary>Inicializa uma nova instância da classe <see langword="XmlSchemaObjectCollection" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.#ctor(System.Xml.Schema.XmlSchemaObject)">
      <summary>Inicializa uma nova instância da classe <see langword="XmlSchemaObjectCollection" /> que usa um <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</summary>
      <param name="parent">O <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.Add(System.Xml.Schema.XmlSchemaObject)">
      <summary>Adiciona um <see cref="T:System.Xml.Schema.XmlSchemaObject" /> em uma <see langword="XmlSchemaObjectCollection" />.</summary>
      <param name="item">O <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</param>
      <returns>O índice ao qual o item foi adicionado.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> é menor que zero.  

ou - 
<paramref name="index" /> é maior que <see langword="Count" />.</exception>
      <exception cref="T:System.InvalidCastException">O parâmetro <see cref="T:System.Xml.Schema.XmlSchemaObject" /> especificado não é do tipo <see cref="T:System.Xml.Schema.XmlSchemaExternal" /> nem de seus tipos derivados <see cref="T:System.Xml.Schema.XmlSchemaImport" />, <see cref="T:System.Xml.Schema.XmlSchemaInclude" /> e <see cref="T:System.Xml.Schema.XmlSchemaRedefine" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.Contains(System.Xml.Schema.XmlSchemaObject)">
      <summary>Indica se o <see cref="T:System.Xml.Schema.XmlSchemaObject" /> especificado está na <see langword="XmlSchemaObjectCollection" />.</summary>
      <param name="item">O <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</param>
      <returns>
        <see langword="true" /> se o nome qualificado especificado estiver na coleção, caso contrário, retornará <see langword="false" />. Se nulo for fornecido, <see langword="false" /> será retornado porque não há nenhum nome qualificado com um nome nulo.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.CopyTo(System.Xml.Schema.XmlSchemaObject[],System.Int32)">
      <summary>Copia todos os <see cref="T:System.Xml.Schema.XmlSchemaObject" />s da coleção na matriz fornecida, iniciando no índice especificado.</summary>
      <param name="array">A matriz unidimensional que é o destino dos elementos copiados do <see langword="XmlSchemaObjectCollection" />. A matriz deve ter indexação com base em zero.</param>
      <param name="index">O índice de base zero na matriz em que a cópia começa.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é uma referência nula (<see langword="Nothing" /> no Visual Basic).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> é menor que zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> é multidimensional.  

ou - 
<paramref name="index" /> é igual ou maior que o comprimento de <paramref name="array" />.  

ou - 
O número de elementos no <see cref="T:System.Xml.Schema.XmlSchemaObject" /> de origem é maior que o espaço disponível do índice até o final da matriz de destino.</exception>
      <exception cref="T:System.InvalidCastException">O tipo de <see cref="T:System.Xml.Schema.XmlSchemaObject" /> de origem não pode ser convertido automaticamente no tipo da matriz de destino.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.GetEnumerator">
      <summary>Retorna um enumerador para a iteração por meio de <see langword="XmlSchemaObjects" /> contidos na <see langword="XmlSchemaObjectCollection" />.</summary>
      <returns>O iterador retorna <see cref="T:System.Xml.Schema.XmlSchemaObjectEnumerator" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.IndexOf(System.Xml.Schema.XmlSchemaObject)">
      <summary>Obtém o índice da coleção correspondente ao <see cref="T:System.Xml.Schema.XmlSchemaObject" /> especificado.</summary>
      <param name="item">O <see cref="T:System.Xml.Schema.XmlSchemaObject" /> cujo índice você deseja retornar.</param>
      <returns>O índice correspondente ao <see cref="T:System.Xml.Schema.XmlSchemaObject" /> especificado.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.Insert(System.Int32,System.Xml.Schema.XmlSchemaObject)">
      <summary>Insere um <see cref="T:System.Xml.Schema.XmlSchemaObject" /> na <see langword="XmlSchemaObjectCollection" />.</summary>
      <param name="index">O índice de base zero no qual um item deve ser inserido.</param>
      <param name="item">O <see cref="T:System.Xml.Schema.XmlSchemaObject" /> a ser inserido.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> é menor que zero.  

ou - 
<paramref name="index" /> é maior que <see langword="Count" />.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectCollection.Item(System.Int32)">
      <summary>Obtém o <see cref="T:System.Xml.Schema.XmlSchemaObject" /> no índice especificado.</summary>
      <param name="index">O índice do <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</param>
      <returns>O <see cref="T:System.Xml.Schema.XmlSchemaObject" /> no índice especificado.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.OnClear">
      <summary>
        <see langword="OnClear" /> é invocado antes do comportamento <see langword="Clear" /> padrão. Para obter mais informações, consulte o método OnClear para <see cref="T:System.Collections.CollectionBase" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.OnInsert(System.Int32,System.Object)">
      <summary>
        <see langword="OnInsert" /> é invocado antes do comportamento <see langword="Insert" /> padrão. Para obter mais informações, consulte a <see cref="T:System.Collections.CollectionBase" /> do método <see langword="OnInsert" />.</summary>
      <param name="index">O índice do <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</param>
      <param name="item">O item.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.OnRemove(System.Int32,System.Object)">
      <summary>
        <see langword="OnRemove" /> é invocado antes do comportamento <see langword="Remove" /> padrão. Para obter mais informações, consulte o método <see langword="OnRemove" /> de <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="index">O índice do <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</param>
      <param name="item">O item.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.OnSet(System.Int32,System.Object,System.Object)">
      <summary>
        <see langword="OnSet" /> é invocado antes do comportamento <see langword="Set" /> padrão. Para obter mais informações, consulte o método OnSet de <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="index">O índice do <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</param>
      <param name="oldValue">O valor antigo.</param>
      <param name="newValue">O novo valor.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.Remove(System.Xml.Schema.XmlSchemaObject)">
      <summary>Remove um <see cref="T:System.Xml.Schema.XmlSchemaObject" /> da <see langword="XmlSchemaObjectCollection" />.</summary>
      <param name="item">O <see cref="T:System.Xml.Schema.XmlSchemaObject" /> a ser removido.</param>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaObjectEnumerator">
      <summary>Representa o enumerador para a <see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectEnumerator.Current">
      <summary>Obtém o <see cref="T:System.Xml.Schema.XmlSchemaObject" /> atual na coleção.</summary>
      <returns>O <see cref="T:System.Xml.Schema.XmlSchemaObject" /> atual.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectEnumerator.MoveNext">
      <summary>Move para o próximo item na coleção.</summary>
      <returns>
        <see langword="false" /> no final da coleção.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectEnumerator.Reset">
      <summary>Redefine o enumerador para o início da coleção.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectEnumerator.System#Collections#IEnumerator#Current">
      <summary>Para obter uma descrição desse membro, consulte <see cref="P:System.Xml.Schema.XmlSchemaObjectEnumerator.Current" />.</summary>
      <returns>O <see cref="T:System.Xml.Schema.XmlSchemaObject" /> atual.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectEnumerator.System#Collections#IEnumerator#MoveNext">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.Xml.Schema.XmlSchemaObjectEnumerator.MoveNext" />.</summary>
      <returns>O próximo <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectEnumerator.System#Collections#IEnumerator#Reset">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.Xml.Schema.XmlSchemaObjectEnumerator.Reset" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaObjectTable">
      <summary>Fornece as coleções de elementos contidos na classe <see cref="T:System.Xml.Schema.XmlSchema" /> (por exemplo, Attributes, AttributeGroups, Elements e assim por diante).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectTable.Contains(System.Xml.XmlQualifiedName)">
      <summary>Determina se o nome qualificado especificado existe na coleção.</summary>
      <param name="name">O <see cref="T:System.Xml.XmlQualifiedName" />.</param>
      <returns>
        <see langword="true" /> se o nome qualificado especificado existir na coleção, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectTable.Count">
      <summary>Obtém o número de itens contidos no <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</summary>
      <returns>O número de itens contidos no <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectTable.GetEnumerator">
      <summary>Retorna um enumerador que pode ser iterado por meio de <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</summary>
      <returns>Um <see cref="T:System.Collections.IDictionaryEnumerator" /> que pode iterar por meio de <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectTable.Item(System.Xml.XmlQualifiedName)">
      <summary>Retorna o elemento na <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> especificada pelo nome qualificado.</summary>
      <param name="name">O <see cref="T:System.Xml.XmlQualifiedName" /> do elemento a ser retornado.</param>
      <returns>O <see cref="T:System.Xml.Schema.XmlSchemaObject" /> do elemento <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> no especificado pelo nome qualificado.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectTable.Names">
      <summary>Retorna uma coleção de todos os elementos nomeados na <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</summary>
      <returns>Uma coleção de todos os elementos nomeados no <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectTable.Values">
      <summary>Retorna uma coleção de todos os valores para todos os elementos na <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</summary>
      <returns>Uma coleção de todos os valores de todos os elementos no <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaParticle">
      <summary>A classe abstrata para isso é a classe base para todos os tipos de partícula (por exemplo, <see cref="T:System.Xml.Schema.XmlSchemaAny" />).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaParticle.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaParticle" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaParticle.MaxOccurs">
      <summary>Obtém ou define o número máximo de vezes que a partícula pode ocorrer.</summary>
      <returns>O número máximo de vezes que a partícula pode ocorrer. O padrão é 1.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaParticle.MaxOccursString">
      <summary>Obtém ou define o número como um valor de cadeia de caracteres. Número máximo de vezes que a partícula pode ocorrer.</summary>
      <returns>O número como um valor de cadeia de caracteres. <see langword="String.Empty" />indica que <see langword="MaxOccurs" /> é igual ao valor padrão. O padrão é uma referência nula.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaParticle.MinOccurs">
      <summary>Obtém ou define o número mínimo de vezes que a partícula pode ocorrer.</summary>
      <returns>O número mínimo de vezes que a partícula pode ocorrer. O padrão é 1.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaParticle.MinOccursString">
      <summary>Obtém ou define o número como um valor de cadeia de caracteres. O número mínimo de vezes que a partícula pode ocorrer.</summary>
      <returns>O número como um valor de cadeia de caracteres. <see langword="String.Empty" />indica que <see langword="MinOccurs" /> é igual ao valor padrão. O padrão é uma referência nula.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaPatternFacet">
      <summary>Representa o elemento <see langword="pattern" /> do esquema XML, conforme especificado pelo W3C (World Wide Web Consortium). Essa classe pode ser usada para especificar uma restrição no valor inserido para um elemento <see langword="simpleType" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaPatternFacet.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaPatternFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaRedefine">
      <summary>Representa o elemento <see langword="redefine" /> do esquema XML, conforme especificado pelo W3C (World Wide Web Consortium). Essa classe pode ser usada para permitir que tipos simples e complexos, grupos e grupos de atributos de arquivos de esquema externos sejam redefinidos no esquema atual. Essa classe também pode ser usada para fornecer controle de versão para os elementos do esquema.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaRedefine.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaRedefine" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaRedefine.AttributeGroups">
      <summary>Obtém a <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />, para todos os atributos no esquema, que contém o valor de pós-compilação da propriedade <see langword="AttributeGroups" />.</summary>
      <returns>O <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> para todos os atributos no esquema. O valor de pós-compilação da <see langword="AttributeGroups" /> propriedade.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaRedefine.Groups">
      <summary>Obtém a <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />, para todos os grupos no esquema, que contém o valor de pós-compilação da propriedade <see langword="Groups" />.</summary>
      <returns>O <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> para todos os grupos no esquema. O valor de pós-compilação da <see langword="Groups" /> propriedade.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaRedefine.Items">
      <summary>Obtém a coleção das seguintes classes: <see cref="T:System.Xml.Schema.XmlSchemaAnnotation" />, <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroup" />, <see cref="T:System.Xml.Schema.XmlSchemaComplexType" />, <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> e <see cref="T:System.Xml.Schema.XmlSchemaGroup" />.</summary>
      <returns>Os elementos contidos no elemento redefinem.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaRedefine.SchemaTypes">
      <summary>Obtém a <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />, para todos os tipos simples e complexos no esquema, que contém o valor de pós-compilação da propriedade <see langword="SchemaTypes" />.</summary>
      <returns>O <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> para todos os tipos de esquema no esquema. O valor de pós-compilação da <see langword="SchemaTypes" /> propriedade.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSequence">
      <summary>Representa o elemento <see langword="sequence" /> (compositor) do Esquema XML, conforme especificado pelo W3C (World Wide Web Consortium). O <see langword="sequence" /> exige que os elementos do grupo apareçam na sequência especificada dentro do elemento recipiente.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSequence.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSequence.Items">
      <summary>Os elementos contidos dentro do compositor. Coleção de <see cref="T:System.Xml.Schema.XmlSchemaElement" />, <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaSequence" /> ou <see cref="T:System.Xml.Schema.XmlSchemaAny" />.</summary>
      <returns>Os elementos contidos dentro do compositor.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSet">
      <summary>Contém um cache de esquemas XSD (linguagem de definição de esquema XML).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.#ctor(System.Xml.XmlNameTable)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaSet" /> com o <see cref="T:System.Xml.XmlNameTable" /> especificado.</summary>
      <param name="nameTable">O objeto <see cref="T:System.Xml.XmlNameTable" /> a ser usado.</param>
      <exception cref="T:System.ArgumentNullException">O objeto <see cref="T:System.Xml.XmlNameTable" /> passado como um parâmetro é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
      <summary>Adiciona o esquema XSD (linguagem de definição de esquema XML) à URL especificada para o <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="targetNamespace">A propriedade <paramref name="targetNamespace" /> do esquema ou <see langword="null" /> para usar o <paramref name="targetNamespace" /> especificado no esquema.</param>
      <param name="schemaUri">A URL que especifica o esquema a ser carregado.</param>
      <returns>Um objeto <see cref="T:System.Xml.Schema.XmlSchema" /> se o esquema for válido. Se o esquema não for válido e um <see cref="T:System.Xml.Schema.ValidationEventHandler" /> for especificado, <see langword="null" /> será retornado e o evento de validação apropriado será acionado. Caso contrário, um <see cref="T:System.Xml.Schema.XmlSchemaException" /> será gerado.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">O esquema não é válido.</exception>
      <exception cref="T:System.ArgumentNullException">A URL passada como um parâmetro é <see langword="null" /> ou <see cref="F:System.String.Empty" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
      <summary>Adiciona o esquema XSD (linguagem de definição de esquema XML) contido no <see cref="T:System.Xml.XmlReader" /> ao <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="targetNamespace">A propriedade <paramref name="targetNamespace" /> do esquema ou <see langword="null" /> para usar o <paramref name="targetNamespace" /> especificado no esquema.</param>
      <param name="schemaDocument">O objeto <see cref="T:System.Xml.XmlReader" />.</param>
      <returns>Um objeto <see cref="T:System.Xml.Schema.XmlSchema" /> se o esquema for válido. Se o esquema não for válido e um <see cref="T:System.Xml.Schema.ValidationEventHandler" /> for especificado, <see langword="null" /> será retornado e o evento de validação apropriado será acionado. Caso contrário, um <see cref="T:System.Xml.Schema.XmlSchemaException" /> será gerado.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">O esquema não é válido.</exception>
      <exception cref="T:System.ArgumentNullException">O objeto <see cref="T:System.Xml.XmlReader" /> passado como um parâmetro é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)">
      <summary>Adiciona o <see cref="T:System.Xml.Schema.XmlSchema" /> especificado ao <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schema">O objeto <see cref="T:System.Xml.Schema.XmlSchema" /> a ser adicionado ao <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Um objeto <see cref="T:System.Xml.Schema.XmlSchema" /> se o esquema for válido. Se o esquema não for válido e um <see cref="T:System.Xml.Schema.ValidationEventHandler" /> for especificado, <see langword="null" /> será retornado e o evento de validação apropriado será acionado. Caso contrário, um <see cref="T:System.Xml.Schema.XmlSchemaException" /> será gerado.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">O esquema não é válido.</exception>
      <exception cref="T:System.ArgumentNullException">O objeto <see cref="T:System.Xml.Schema.XmlSchema" /> passado como um parâmetro é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
      <summary>Adiciona todos os esquemas XSD (linguagem de definição de esquema XML) no <see cref="T:System.Xml.Schema.XmlSchemaSet" /> determinado para o <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemas">O objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Um esquema no <see cref="T:System.Xml.Schema.XmlSchemaSet" /> não é válido.</exception>
      <exception cref="T:System.ArgumentNullException">O objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> passado como um parâmetro é <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.CompilationSettings">
      <summary>Obtém ou define o <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /> do <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <returns>O <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /> para o <see cref="T:System.Xml.Schema.XmlSchemaSet" />. O padrão é uma <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /> instância com a <see cref="P:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck" /> propriedade definida como <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Compile">
      <summary>Compila os esquemas de XSD (linguagem de definição de esquema XML) adicionados ao <see cref="T:System.Xml.Schema.XmlSchemaSet" /> em um esquema lógico.</summary>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Ocorreu um erro durante a validação e compilação dos esquemas no <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Contains(System.String)">
      <summary>Indica se um esquema de linguagem de definição de esquema XML (XSD) com o URI do namespace de destino especificado é o <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="targetNamespace">A propriedade <paramref name="targetNamespace" /> do esquema.</param>
      <returns>
        <see langword="true" /> se um esquema com o URI do namespace de destino especificado estiver no <see cref="T:System.Xml.Schema.XmlSchemaSet" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Contains(System.Xml.Schema.XmlSchema)">
      <summary>Indica se o objeto <see cref="T:System.Xml.Schema.XmlSchema" /> do esquema de linguagem de definição de esquema XML (XSD) especificado está no <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schema">O objeto <see cref="T:System.Xml.Schema.XmlSchema" />.</param>
      <returns>
        <see langword="true" /> se o objeto <see cref="T:System.Xml.Schema.XmlSchema" /> estiver no <see cref="T:System.Xml.Schema.XmlSchemaSet" />; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">O <see cref="T:System.Xml.Schema.XmlSchemaSet" /> passado como um parâmetro é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
      <summary>Copia todos os objetos <see cref="T:System.Xml.Schema.XmlSchema" /> do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> para a matriz fornecida, iniciando no índice especificado.</summary>
      <param name="schemas">A matriz para a qual copiar os objetos.</param>
      <param name="index">O índice na matriz em que a cópia começará.</param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.Count">
      <summary>Obtém o número de esquemas de linguagem de definição de esquema XML (XSD) no <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <returns>O número de esquemas lógicos no <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.GlobalAttributes">
      <summary>Obtém todos os atributos globais em todos os esquemas XSD de linguagem de definição de esquema XML no <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <returns>A coleção de atributos globais.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.GlobalElements">
      <summary>Obtém todos os elementos globais em todos os esquemas XSD de linguagem de definição de esquema XML no <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <returns>A coleção de elementos globais.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.GlobalTypes">
      <summary>Obtém todos os tipos complexos e simples globais em todos os esquemas XSD de linguagem de definição de esquema XML no <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <returns>A coleção de tipos globais simples e complexos.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.IsCompiled">
      <summary>Obtém um valor que indica se os esquemas de linguagem de definição de esquema XML (XSD) no <see cref="T:System.Xml.Schema.XmlSchemaSet" /> foram compilados.</summary>
      <returns>
        <see langword="true" />Se os esquemas no <see cref="T:System.Xml.Schema.XmlSchemaSet" /> foram compilados desde a última vez em que um esquema foi adicionado ou removido <see cref="T:System.Xml.Schema.XmlSchemaSet" />do; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.NameTable">
      <summary>Obtém o <see cref="T:System.Xml.XmlNameTable" /> padrão usado pelo <see cref="T:System.Xml.Schema.XmlSchemaSet" /> ao carregar novos esquemas de linguagem de definição de esquema XML (XSD).</summary>
      <returns>Uma tabela de objetos de cadeia de caracteres atomed.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Remove(System.Xml.Schema.XmlSchema)">
      <summary>Remove o esquema XSD (linguagem de definição de esquema XML) especificado do <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schema">O objeto <see cref="T:System.Xml.Schema.XmlSchema" /> a ser removido do <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>O objeto <see cref="T:System.Xml.Schema.XmlSchema" /> removido do <see cref="T:System.Xml.Schema.XmlSchemaSet" /> ou <see langword="null" />, se o esquema não foi encontrado no <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">O esquema não é válido.</exception>
      <exception cref="T:System.ArgumentNullException">O <see cref="T:System.Xml.Schema.XmlSchema" /> passado como um parâmetro é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)">
      <summary>Remove o esquema de linguagem de definição de esquema XML (XSD) especificado e todas as importações de esquema do <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemaToRemove">O objeto <see cref="T:System.Xml.Schema.XmlSchema" /> a ser removido do <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>
        <see langword="true" /> se o objeto <see cref="T:System.Xml.Schema.XmlSchema" /> e todas as suas importações foram removidos com êxito; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">O <see cref="T:System.Xml.Schema.XmlSchema" /> passado como um parâmetro é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
      <summary>Reprocessa um esquema de linguagem de definição de esquema XML (XSD) que já existe no <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schema">O esquema a ser reprocessado.</param>
      <returns>Um objeto <see cref="T:System.Xml.Schema.XmlSchema" /> se o esquema for válido. Se o esquema não for válido e um <see cref="T:System.Xml.Schema.ValidationEventHandler" /> for especificado, <see langword="null" /> será retornado e o evento de validação apropriado será acionado. Caso contrário, um <see cref="T:System.Xml.Schema.XmlSchemaException" /> será gerado.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">O esquema não é válido.</exception>
      <exception cref="T:System.ArgumentNullException">O objeto <see cref="T:System.Xml.Schema.XmlSchema" /> passado como um parâmetro é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O objeto <see cref="T:System.Xml.Schema.XmlSchema" /> passado como um parâmetro ainda não existe no <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Schemas">
      <summary>Retorna uma coleção de todos os esquemas XSD (linguagem de definição de esquema XML) no <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <returns>Um objeto <see cref="T:System.Collections.ICollection" /> que contém todos os esquemas adicionados ao <see cref="T:System.Xml.Schema.XmlSchemaSet" />. Se nenhum esquema tiver sido adicionado ao <see cref="T:System.Xml.Schema.XmlSchemaSet" />, um objeto <see cref="T:System.Collections.ICollection" /> vazio será retornado.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Schemas(System.String)">
      <summary>Retorna uma coleção de todos os esquemas de linguagem de definição de esquema XML (XSD) no <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que pertencem ao namespace fornecido.</summary>
      <param name="targetNamespace">A propriedade <paramref name="targetNamespace" /> do esquema.</param>
      <returns>Um objeto <see cref="T:System.Collections.ICollection" /> que contém todos os esquemas adicionados ao <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que pertencem ao namespace fornecido. Se nenhum esquema tiver sido adicionado ao <see cref="T:System.Xml.Schema.XmlSchemaSet" />, um objeto <see cref="T:System.Collections.ICollection" /> vazio será retornado.</returns>
    </member>
    <member name="E:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler">
      <summary>Especifica um manipulador de eventos para receber informações sobre erros de validação de esquema XSD (linguagem de definição de esquema XML).</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.XmlResolver">
      <summary>Define o <see cref="T:System.Xml.XmlResolver" /> usado para resolver namespaces ou locais referenciados nos elementos de inclusão e importação de um esquema.</summary>
      <returns>O <see cref="T:System.Xml.XmlResolver" /> usado para resolver namespaces ou locais referenciados nos elementos include e Import de um esquema.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleContent">
      <summary>Representa o elemento <see langword="simpleContent" /> do esquema XML, conforme especificado pelo W3C (World Wide Web Consortium). Essa classe é para tipos simples e complexos com o modelo de conteúdo simples.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleContent.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaSimpleContent" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContent.Content">
      <summary>Obtém o <see cref="T:System.Xml.Schema.XmlSchemaSimpleContentRestriction" /> ou a <see cref="T:System.Xml.Schema.XmlSchemaSimpleContentExtension" />.</summary>
      <returns>O conteúdo contido <see langword="XmlSchemaSimpleContentRestriction" /> na classe ou <see langword="XmlSchemaSimpleContentExtension" /> .</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleContentExtension">
      <summary>Representa o elemento <see langword="extension" /> para conteúdo simples do Esquema XML, conforme especificado pelo W3C (World Wide Web Consortium). Essa classe pode ser usada para derivar tipos simples por extensão. Tais derivações são usadas para estender o conteúdo de tipo simples do elemento com a adição de atributos.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleContentExtension.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaSimpleContentExtension" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentExtension.AnyAttribute">
      <summary>Obtém ou define o <see langword="XmlSchemaAnyAttribute" /> a ser usado para o valor do atributo.</summary>
      <returns>O <see langword="XmlSchemaAnyAttribute" />. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentExtension.Attributes">
      <summary>Obtém a coleção de <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> e <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" />.</summary>
      <returns>A coleção de atributos para o <see langword="simpleType" /> elemento.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentExtension.BaseTypeName">
      <summary>Obtém ou define o nome de um tipo de dados interno ou de um tipo simples do qual este tipo é estendido.</summary>
      <returns>O nome do tipo base.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleContentRestriction">
      <summary>Representa o elemento <see langword="restriction" /> para conteúdo simples do Esquema XML, conforme especificado pelo W3C (World Wide Web Consortium). Essa classe pode ser usada para derivar tipos simples por restrição. Essas derivações podem ser usadas para restringir o intervalo de valores para o elemento a um subconjunto dos valores especificados no tipo simples herdado.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleContentRestriction.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaSimpleContentRestriction" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentRestriction.AnyAttribute">
      <summary>Obtém ou define um <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> a ser usado para o valor do atributo.</summary>
      <returns>O <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> para o valor do atributo. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentRestriction.Attributes">
      <summary>Obtém a coleção de atributos <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> e <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" /> para o tipo simples.</summary>
      <returns>A coleção de atributos para um tipo simples.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentRestriction.BaseType">
      <summary>Obtém ou define o valor base do tipo simples.</summary>
      <returns>O valor de base do tipo simples.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentRestriction.BaseTypeName">
      <summary>Obtém ou define o nome do tipo de dados interno ou do tipo simples do quel esse tipo é derivado.</summary>
      <returns>O nome do tipo base.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentRestriction.Facets">
      <summary>Obtém ou define uma faceta do esquema XML.</summary>
      <returns>Uma das seguintes classes de faceta: 
 <see cref="T:System.Xml.Schema.XmlSchemaLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaPatternFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaEnumerationFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxInclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxExclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinInclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinExclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaFractionDigitsFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaTotalDigitsFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaWhiteSpaceFacet" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleType">
      <summary>Representa o elemento <see langword="simpleType" /> para conteúdo simples do Esquema XML, conforme especificado pelo W3C (World Wide Web Consortium). Esta classe define um tipo simples. Tipos simples podem especificar informações e restrições para o valor dos atributos ou elementos com conteúdo somente texto.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleType.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleType.Content">
      <summary>Obtém ou define <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeUnion" />, <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeList" /> ou <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeRestriction" />.</summary>
      <returns>Um de <see langword="XmlSchemaSimpleTypeUnion" />, <see langword="XmlSchemaSimpleTypeList" />ou. <see langword="XmlSchemaSimpleTypeRestriction" /></returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleTypeContent">
      <summary>Classe abstrata para classes de conteúdo de tipo simples.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleTypeContent.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeContent" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleTypeList">
      <summary>Representa o elemento <see langword="list" /> do esquema XML, conforme especificado pelo W3C (World Wide Web Consortium). Essa classe pode ser usada para definir um elemento <see langword="simpleType" /> como uma lista de valores de um tipo de dados especificado.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleTypeList.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeList" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeList.BaseItemType">
      <summary>Obtém ou define o <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> que representa o tipo de elemento <see langword="simpleType" /> com base nos valores de <see cref="P:System.Xml.Schema.XmlSchemaSimpleTypeList.ItemType" /> e <see cref="P:System.Xml.Schema.XmlSchemaSimpleTypeList.ItemTypeName" /> do tipo simples.</summary>
      <returns>O <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> que representa o tipo <see langword="simpleType" /> do elemento.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeList.ItemType">
      <summary>Obtém ou define o elemento <see langword="simpleType" /> que é derivado do tipo especificado pelo valor base.</summary>
      <returns>O tipo de item para o elemento de tipo simples.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeList.ItemTypeName">
      <summary>O nome de um tipo de dados interno ou de um elemento <see langword="simpleType" /> definido neste esquema (ou em outro esquema indicado pelo namespace especificado).</summary>
      <returns>O nome do tipo da lista de tipos simples.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleTypeRestriction">
      <summary>Representa o elemento <see langword="restriction" /> para tipos simples do Esquema XML, conforme especificado pelo W3C (World Wide Web Consortium). Essa classe pode ser usada restringindo o elemento <see langword="simpleType" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleTypeRestriction.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeRestriction" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeRestriction.BaseType">
      <summary>Obtém ou define informações sobre o tipo base.</summary>
      <returns>O tipo base para o <see langword="simpleType" /> elemento.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeRestriction.BaseTypeName">
      <summary>Obtém ou define o nome do tipo base qualificado.</summary>
      <returns>O nome qualificado do tipo base de restrição de tipo simples.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeRestriction.Facets">
      <summary>Obtém ou define uma faceta do esquema XML.</summary>
      <returns>Uma das seguintes classes de faceta: 
 <see cref="T:System.Xml.Schema.XmlSchemaLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaPatternFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaEnumerationFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxInclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxExclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinInclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinExclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaFractionDigitsFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaTotalDigitsFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaWhiteSpaceFacet" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleTypeUnion">
      <summary>Representa o elemento <see langword="union" /> para tipos simples do Esquema XML, conforme especificado pelo W3C (World Wide Web Consortium). Um tipo de dados <see langword="union" /> pode ser usado para especificar o conteúdo de um <see langword="simpleType" />. O valor do elemento <see langword="simpleType" /> deve ser qualquer um de um conjunto de tipos de dados alternativos especificados na união. Os tipos de união sempre são tipos derivados e devem ter pelo menos dois tipos de dados alternativos.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleTypeUnion.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeUnion" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.BaseMemberTypes">
      <summary>Obtém uma matriz de objetos <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> que representam o tipo do elemento <see langword="simpleType" /> com base nos valores de <see cref="P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.BaseTypes" /> e <see cref="P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.MemberTypes" /> do tipo simples.</summary>
      <returns>Uma matriz de <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> objetos que representa o tipo <see langword="simpleType" /> do elemento.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.BaseTypes">
      <summary>Obtém a coleção de tipos base.</summary>
      <returns>A coleção de valores de base de tipo simples.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.MemberTypes">
      <summary>Obtém ou define a matriz de nomes de membros qualificados de tipos de dados internos ou elementos <see langword="simpleType" /> definidos neste esquema (ou em outro esquema indicado pelo namespace especificado).</summary>
      <returns>Uma matriz que consiste em uma lista de membros de tipos de dados internos ou tipos simples.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaTotalDigitsFacet">
      <summary>Representa a faceta <see langword="totalDigits" /> do Esquema XML, conforme especificado pelo W3C (World Wide Web Consortium). Essa classe pode ser usada para especificar uma restrição no número de dígitos que podem ser inseridos para o valor de um elemento <see langword="simpleType" />. Esse valor de <see langword="totalDigits" /> deve ser um inteiro positivo.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaTotalDigitsFacet.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaTotalDigitsFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaType">
      <summary>A classe base para todos os tipos simples e tipos complexos.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaType" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.BaseSchemaType">
      <summary>Obtém o tipo de objeto pós-compilação ou o tipo de dados XSD (Linguagem de Definição de Esquema XML) interno, elemento simpleType ou elemento complexType. Esta é uma propriedade infoset pós-compilação do esquema.</summary>
      <returns>O tipo de dados XSD interno, o elemento simpleType ou o elemento complexType.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.BaseXmlSchemaType">
      <summary>Obtém o valor pós-compilação para o tipo base desse tipo de esquema.</summary>
      <returns>Um <see cref="T:System.Xml.Schema.XmlSchemaType" /> objeto que representa o tipo base deste tipo de esquema.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.Datatype">
      <summary>Obtém o valor de pós-compilação para o tipo de dados do tipo complexo.</summary>
      <returns>O <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> valor de compilação após o esquema.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.DerivedBy">
      <summary>Obtém as informações pós-compilação sobre como esse elemento foi derivado de seu tipo base.</summary>
      <returns>Um dos valores <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /> válidos.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.Final">
      <summary>Obtém ou define o atributo final da derivação de tipo que indica se mais derivações são permitidas.</summary>
      <returns>Um dos valores <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /> válidos. O padrão é <see cref="F:System.Xml.Schema.XmlSchemaDerivationMethod.None" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.FinalResolved">
      <summary>Obtém o valor de pós-compilação da propriedade <see cref="P:System.Xml.Schema.XmlSchemaType.Final" />.</summary>
      <returns>O valor de pós-compilação da <see cref="P:System.Xml.Schema.XmlSchemaType.Final" /> propriedade. O padrão é o <see langword="finalDefault" /> valor do atributo <see langword="schema" /> do elemento.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.GetBuiltInComplexType(System.Xml.Schema.XmlTypeCode)">
      <summary>Retorna um <see cref="T:System.Xml.Schema.XmlSchemaComplexType" /> que representa o tipo complexo interno do tipo complexo especificado.</summary>
      <param name="typeCode">Um dos valores de <see cref="T:System.Xml.Schema.XmlTypeCode" /> que representam o tipo complexo.</param>
      <returns>O <see cref="T:System.Xml.Schema.XmlSchemaComplexType" /> que representa o tipo complexo interno.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.GetBuiltInComplexType(System.Xml.XmlQualifiedName)">
      <summary>Retorna um <see cref="T:System.Xml.Schema.XmlSchemaComplexType" /> que representa o tipo complexo interno do tipo complexo especificado pelo nome qualificado.</summary>
      <param name="qualifiedName">O <see cref="T:System.Xml.XmlQualifiedName" /> do tipo complexo.</param>
      <returns>O <see cref="T:System.Xml.Schema.XmlSchemaComplexType" /> que representa o tipo complexo interno.</returns>
      <exception cref="T:System.ArgumentNullException">O parâmetro <see cref="T:System.Xml.XmlQualifiedName" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType(System.Xml.Schema.XmlTypeCode)">
      <summary>Retorna um <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> que representa o tipo simples interno do tipo simples especificado.</summary>
      <param name="typeCode">Um dos valores de <see cref="T:System.Xml.Schema.XmlTypeCode" /> que representam o tipo simples.</param>
      <returns>O <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> que representa o tipo simples interno.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType(System.Xml.XmlQualifiedName)">
      <summary>Retorna um <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> que representa o tipo simples interno do tipo simples especificado pelo nome qualificado.</summary>
      <param name="qualifiedName">O <see cref="T:System.Xml.XmlQualifiedName" /> do tipo simples.</param>
      <returns>O <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> que representa o tipo simples interno.</returns>
      <exception cref="T:System.ArgumentNullException">O parâmetro <see cref="T:System.Xml.XmlQualifiedName" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.IsDerivedFrom(System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaDerivationMethod)">
      <summary>Retorna um valor que indica se o tipo de esquema derivado especificado deriva do tipo de esquema de base especificado</summary>
      <param name="derivedType">O <see cref="T:System.Xml.Schema.XmlSchemaType" /> derivado a testar.</param>
      <param name="baseType">O <see cref="T:System.Xml.Schema.XmlSchemaType" /> de base com relação ao qual testar o <see cref="T:System.Xml.Schema.XmlSchemaType" /> derivado.</param>
      <param name="except">Um dos valores de <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /> que representam um método de derivação de tipo a ser excluído do teste.</param>
      <returns>
        <see langword="true" /> se o tipo derivado for derivado do tipo de base; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.IsMixed">
      <summary>Obtém ou define um valor que indica se esse tipo tem um modelo de conteúdo misto. Essa propriedade só é válida em um tipo complexo.</summary>
      <returns>
        <see langword="true" />Se o tipo tiver um modelo de conteúdo misto; caso contrário <see langword="false" />,. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.Name">
      <summary>Obtém ou define o nome do tipo.</summary>
      <returns>O nome do tipo.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.QualifiedName">
      <summary>Obtém o nome qualificado para o tipo construído com base no atributo <see langword="Name" /> desse tipo. Esta é uma propriedade pós-compilação do esquema.</summary>
      <returns>O <see cref="T:System.Xml.XmlQualifiedName" /> para o tipo criado a <see langword="Name" /> partir do atributo deste tipo.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.TypeCode">
      <summary>Obtém o <see cref="T:System.Xml.Schema.XmlTypeCode" /> do tipo.</summary>
      <returns>Um dos valores de <see cref="T:System.Xml.Schema.XmlTypeCode" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaUnique">
      <summary>Representa o elemento <see langword="unique" /> do esquema XML, conforme especificado pelo W3C (World Wide Web Consortium). Essa classe pode ser usada para identificar uma restrição exclusiva entre um conjunto de elementos.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaUnique.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaUnique" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaUse">
      <summary>Indicador de como o atributo é usado.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaUse.None">
      <summary>Uso do atributo não especificado.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaUse.Optional">
      <summary>O atributo é opcional.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaUse.Prohibited">
      <summary>O atributo não pode ser usado.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaUse.Required">
      <summary>O atributo deve aparecer uma vez.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaValidationException">
      <summary>Representa a exceção gerada quando erros ou avisos de validação de esquema da linguagem XSD (Linguagem de Definição de Esquema) são encontrados em um documento XML que está sendo validado.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaValidationException" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaValidationException" /> com os objetos <see cref="T:System.Runtime.Serialization.SerializationInfo" /> e <see cref="T:System.Runtime.Serialization.StreamingContext" /> especificados.</summary>
      <param name="info">Um objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context">Um objeto <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaValidationException" /> com a mensagem de exceção especificada.</summary>
      <param name="message">Uma descrição de <see langword="string" /> da condição de erro.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaValidationException" /> com a mensagem de exceção e o objeto <see cref="T:System.Exception" /> original que causou essa exceção especificada.</summary>
      <param name="message">Uma descrição de <see langword="string" /> da condição de erro.</param>
      <param name="innerException">O objeto <see cref="T:System.Exception" /> original que causou essa exceção.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaValidationException" /> com a mensagem de exceção especificada e o objeto <see cref="T:System.Exception" /> original, o número de linha e a posição da linha do XML que causou essa exceção especificada.</summary>
      <param name="message">Uma descrição de <see langword="string" /> da condição de erro.</param>
      <param name="innerException">O objeto <see cref="T:System.Exception" /> original que causou essa exceção.</param>
      <param name="lineNumber">O número de linha do XML que causou essa exceção.</param>
      <param name="linePosition">A posição da linha do XML que causou essa exceção.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Constrói um novo objeto <see cref="T:System.Xml.Schema.XmlSchemaValidationException" /> com as informações de <see cref="T:System.Runtime.Serialization.SerializationInfo" /> e <see cref="T:System.Runtime.Serialization.StreamingContext" /> fornecidas que contêm todas as propriedades da <see cref="T:System.Xml.Schema.XmlSchemaValidationException" />.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />
      </param>
      <param name="context">
        <see cref="T:System.Runtime.Serialization.StreamingContext" />
      </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.SetSourceObject(System.Object)">
      <summary>Define o nó XML que causa o erro.</summary>
      <param name="sourceObject">O objeto de origem.</param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaValidationException.SourceObject">
      <summary>Obtém o nó XML que causou essa <see cref="T:System.Xml.Schema.XmlSchemaValidationException" />.</summary>
      <returns>O nó XML que causou isso <see cref="T:System.Xml.Schema.XmlSchemaValidationException" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaValidationFlags">
      <summary>Especifica as opções de validação de esquema usadas pelas classes <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> e <see cref="T:System.Xml.XmlReader" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes">
      <summary>Permite atributos xml:* mesmo quando não estão definidos no esquema. Os atributos serão validados com base em seu tipo de dados.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.None">
      <summary>Não processe restrições de identidade, esquemas embutidos, dicas de localização de esquema ou avisos de validação de esquema de relatório.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints">
      <summary>Restrições de identidade do processo (<c>xs:ID</c>, <c>xs:IDREF</c>, <c>xs:key</c>, <c>xs:keyref</c>, <c>xs:unique</c>) encontradas durante a validação.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema">
      <summary>Esquemas embutidos do processo encontrados durante a validação.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation">
      <summary>Dicas de localização de esquemas do processo (<c>xsi:schemaLocation</c>, <c>xsi:noNamespaceSchemaLocation</c>) encontradas durante a validação.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings">
      <summary>Avisos de validação de esquema de relatório encontrados durante a validação.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaValidator">
      <summary>Representa um mecanismo de validação do esquema XSD (linguagem de definição de esquema XML). A classe <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> não pode ser herdada.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaValidator" />.</summary>
      <param name="nameTable">Um objeto <see cref="T:System.Xml.XmlNameTable" /> que contém nomes de elementos e de atributos como cadeias de caracteres atomizadas.</param>
      <param name="schemas">Um objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que contém os esquemas XSD (linguagem de definição de esquema XML) usados para validação.</param>
      <param name="namespaceResolver">Um objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> usado para resolver namespaces encontrados durante a validação.</param>
      <param name="validationFlags">Um valor <see cref="T:System.Xml.Schema.XmlSchemaValidationFlags" /> que especifica as opções de validação de esquema.</param>
      <exception cref="T:System.ArgumentNullException">Um ou mais dos parâmetros especificados são <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Ocorreu um erro durante a compilação de esquemas no parâmetro <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)">
      <summary>Adiciona um esquema XSD (linguagem de definição de esquema XML) ao conjunto de esquemas usados para validação.</summary>
      <param name="schema">Um objeto <see cref="T:System.Xml.Schema.XmlSchema" /> a ser adicionado ao conjunto de esquemas usados para validação.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <see cref="T:System.Xml.Schema.XmlSchema" /> especificado é <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">O namespace de destino do parâmetro <see cref="T:System.Xml.Schema.XmlSchema" /> corresponde o de qualquer elemento ou atributo já encontrado pelo objeto <see cref="T:System.Xml.Schema.XmlSchemaValidator" />.</exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">O parâmetro <see cref="T:System.Xml.Schema.XmlSchema" /> é inválido.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.EndValidation">
      <summary>Termina a validação e verifica restrições de identidade para todo o documento XML.</summary>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Um erro de restrição de identidade foi encontrado no documento XML.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes">
      <summary>Retorna os atributos esperados para o contexto do elemento atual.</summary>
      <returns>Uma matriz de objetos <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> ou uma matriz vazia se não houver atributos esperados.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
      <summary>Retorna as partículas esperadas no contexto do elemento atual.</summary>
      <returns>Uma matriz de objetos <see cref="T:System.Xml.Schema.XmlSchemaParticle" /> ou uma matriz vazia se não houver partículas esperadas.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)">
      <summary>Valida restrições de identidade nos atributos padrão e popula o <see cref="T:System.Collections.ArrayList" /> especificado com objetos <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> para quaisquer atributos com valores padrão que não foram validados anteriormente usando o método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> no contexto do elemento.</summary>
      <param name="defaultAttributes">Um <see cref="T:System.Collections.ArrayList" /> para popular com objetos <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> para os atributos que ainda não foram encontrados durante a validação no contexto do elemento.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.Initialize">
      <summary>Inicializa o estado do objeto <see cref="T:System.Xml.Schema.XmlSchemaValidator" />.</summary>
      <exception cref="T:System.InvalidOperationException">Chamar o método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.Initialize" /> é válido imediatamente após a construção de um objeto <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> ou após uma chamada a <see cref="M:System.Xml.Schema.XmlSchemaValidator.EndValidation" /> somente.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)">
      <summary>Inicializa o estado do objeto <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> usando o <see cref="T:System.Xml.Schema.XmlSchemaObject" /> especificado para validação parcial.</summary>
      <param name="partialValidationType">Um objeto <see cref="T:System.Xml.Schema.XmlSchemaElement" />, <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> ou <see cref="T:System.Xml.Schema.XmlSchemaType" /> usado para inicializar o contexto de validação do objeto <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> para validação parcial.</param>
      <exception cref="T:System.InvalidOperationException">Chamar o método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.Initialize" /> é válido imediatamente após a construção de um objeto <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> ou após uma chamada a <see cref="M:System.Xml.Schema.XmlSchemaValidator.EndValidation" /> somente.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <see cref="T:System.Xml.Schema.XmlSchemaObject" /> não é um objeto <see cref="T:System.Xml.Schema.XmlSchemaElement" />, <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> ou <see cref="T:System.Xml.Schema.XmlSchemaType" />.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <see cref="T:System.Xml.Schema.XmlSchemaObject" /> não pode ser <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaValidator.LineInfoProvider">
      <summary>Obtém ou define as informações de número de linha para o nó XML que está sendo validado.</summary>
      <returns>Um objeto <see cref="T:System.Xml.IXmlLineInfo" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)">
      <summary>Ignora a validação de conteúdo do elemento atual e prepara o objeto de <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> para validar o conteúdo no contexto do elemento pai.</summary>
      <param name="schemaInfo">Um objeto <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> cujas propriedades serão definidas se o conteúdo do elemento atual for ignorado com êxito. Esse parâmetro pode ser <see langword="null" />.</param>
      <exception cref="T:System.InvalidOperationException">O método <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /> não foi chamado na sequência correta. Por exemplo, chamar <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /> depois de chamar <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaValidator.SourceUri">
      <summary>Obtém ou define o URI de origem para o nó XML que está sendo validado.</summary>
      <returns>Um <see cref="T:System.Uri" /> objeto que representa o URI de origem para o nó XML que está sendo validado; o padrão é <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
      <summary>Valida o nome do atributo, URI de namespace e o valor no contexto do elemento atual.</summary>
      <param name="localName">O nome local do atributo a ser validado.</param>
      <param name="namespaceUri">O URI de namespace do atributo a ser validado.</param>
      <param name="attributeValue">O valor do atributo a ser validado.</param>
      <param name="schemaInfo">Um objeto <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> cujas propriedades são definidas na validação bem-sucedida do atributo. Esse parâmetro pode ser <see langword="null" />.</param>
      <returns>O valor do atributo validado.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">O atributo não é válido no contexto do elemento atual.</exception>
      <exception cref="T:System.InvalidOperationException">O método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> não foi chamado na sequência correta. Por exemplo, chamar <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> depois de chamar <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" />.</exception>
      <exception cref="T:System.ArgumentNullException">Um ou mais dos parâmetros especificados são <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
      <summary>Valida o nome do atributo, URI de namespace e o valor no contexto do elemento atual.</summary>
      <param name="localName">O nome local do atributo a ser validado.</param>
      <param name="namespaceUri">O URI de namespace do atributo a ser validado.</param>
      <param name="attributeValue">Um <see cref="T:System.Xml.Schema.XmlValueGetter" /><see langword="delegate" /> usado para passar o valor do atributo como um tipo CLR (Common Language Runtime) compatível com o tipo XSD (linguagem de definição de esquema XML) do atributo.</param>
      <param name="schemaInfo">Um objeto <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> cujas propriedades são definidas na validação bem-sucedida do atributo. Este parâmetro e pode ser <see langword="null" />.</param>
      <returns>O valor do atributo validado.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">O atributo não é válido no contexto do elemento atual.</exception>
      <exception cref="T:System.InvalidOperationException">O método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> não foi chamado na sequência correta. Por exemplo, chamar <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> depois de chamar <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" />.</exception>
      <exception cref="T:System.ArgumentNullException">Um ou mais dos parâmetros especificados são <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
      <summary>Valida o elemento no contexto atual.</summary>
      <param name="localName">O nome local do elemento a ser validado.</param>
      <param name="namespaceUri">O URI de namespace do elemento a ser validado.</param>
      <param name="schemaInfo">Um objeto <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> cujas propriedades são definidas na validação bem-sucedida do nome do elemento. Esse parâmetro pode ser <see langword="null" />.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">O nome do elemento não é válido no contexto atual.</exception>
      <exception cref="T:System.InvalidOperationException">O método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /> não foi chamado na sequência correta. Por exemplo, o método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /> é chamado após chamar <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
      <summary>Valida o elemento no contexto atual com os valores de atributo <c>xsi:Type</c>, <c>xsi:Nil</c>, <c>xsi:SchemaLocation</c> e <c>xsi:NoNamespaceSchemaLocation</c> especificados.</summary>
      <param name="localName">O nome local do elemento a ser validado.</param>
      <param name="namespaceUri">O URI de namespace do elemento a ser validado.</param>
      <param name="schemaInfo">Um objeto <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> cujas propriedades são definidas na validação bem-sucedida do nome do elemento. Esse parâmetro pode ser <see langword="null" />.</param>
      <param name="xsiType">O valor de atributo <c>xsi:Type</c> do elemento. Esse parâmetro pode ser <see langword="null" />.</param>
      <param name="xsiNil">O valor de atributo <c>xsi:Nil</c> do elemento. Esse parâmetro pode ser <see langword="null" />.</param>
      <param name="xsiSchemaLocation">O valor de atributo <c>xsi:SchemaLocation</c> do elemento. Esse parâmetro pode ser <see langword="null" />.</param>
      <param name="xsiNoNamespaceSchemaLocation">O valor de atributo <c>xsi:NoNamespaceSchemaLocation</c> do elemento. Esse parâmetro pode ser <see langword="null" />.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">O nome do elemento não é válido no contexto atual.</exception>
      <exception cref="T:System.InvalidOperationException">O método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /> não foi chamado na sequência correta. Por exemplo, o método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /> é chamado após chamar <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
      <summary>Verifica se o conteúdo de texto do elemento é válido de acordo com seu tipo de dados para elementos com conteúdo simples e verifica se o conteúdo do elemento atual está completo para elementos com conteúdo complexo.</summary>
      <param name="schemaInfo">Um objeto <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> cujas propriedades são definidas na validação bem-sucedida do elemento. Esse parâmetro pode ser <see langword="null" />.</param>
      <returns>O valor de texto analisado e digitado do elemento se o elemento tiver conteúdo simples.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">O conteúdo do elemento não é válido.</exception>
      <exception cref="T:System.InvalidOperationException">O método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /> não foi chamado na sequência correta. Por exemplo, se o método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /> for chamado após chamar <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
      <summary>Verifica se o conteúdo do texto do elemento especificado é válido de acordo com seu tipo de dados.</summary>
      <param name="schemaInfo">Um objeto <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> cujas propriedades são definidas na validação bem-sucedida do conteúdo de texto do elemento. Esse parâmetro pode ser <see langword="null" />.</param>
      <param name="typedValue">O conteúdo do texto digitado do elemento.</param>
      <returns>O conteúdo simples analisado e digitado do elemento.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">O conteúdo do texto do elemento não é válido.</exception>
      <exception cref="T:System.InvalidOperationException">O método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /> não foi chamado na sequência correta (por exemplo, se o método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /> for chamado após chamar <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />), as chamadas ao método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> tinham sido feitas anteriormente ou o elemento tem conteúdo complexo.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro de conteúdo de texto digitado não pode ser <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
      <summary>Verifica se todos os atributos necessários no contexto do elemento entram presente e prepara o objeto de <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> para validar o conteúdo filho do elemento.</summary>
      <param name="schemaInfo">Um objeto <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> cujas propriedades são definidas na verificação bem-sucedida de que todos os atributos necessários no contexto do elemento estão presentes. Esse parâmetro pode ser <see langword="null" />.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Um ou mais atributos necessários no contexto do elemento atual não foram encontrados.</exception>
      <exception cref="T:System.InvalidOperationException">O método <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /> não foi chamado na sequência correta. Por exemplo, chamar <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /> depois de chamar <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />.</exception>
      <exception cref="T:System.ArgumentNullException">Um ou mais dos parâmetros especificados são <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)">
      <summary>Validará se o texto <see langword="string" /> especificado for permitido no contexto do elemento atual e acumulará o texto para validação se o elemento atual tiver conteúdo simples.</summary>
      <param name="elementValue">Um texto <see langword="string" /> a ser validado no contexto do elemento.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">O <see langword="string" /> do texto especificado não é permitido no contexto do elemento atual.</exception>
      <exception cref="T:System.InvalidOperationException">O método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> não foi chamado na sequência correta. Por exemplo, o método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> é chamado após chamar <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <see langword="string" /> do texto não pode ser <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)">
      <summary>Validará se o texto retornado pelo objeto <see cref="T:System.Xml.Schema.XmlValueGetter" /> especificado for permitido no contexto do elemento atual e acumulará o texto para validação se o elemento atual tiver conteúdo simples.</summary>
      <param name="elementValue">Um <see cref="T:System.Xml.Schema.XmlValueGetter" /><see langword="delegate" /> usado para passar o valor do texto como um tipo CLR (Common Language Runtime) compatível com o tipo XSD (linguagem de definição de esquema XML) do atributo.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">O <see langword="string" /> do texto especificado não é permitido no contexto do elemento atual.</exception>
      <exception cref="T:System.InvalidOperationException">O método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> não foi chamado na sequência correta. Por exemplo, o método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> é chamado após chamar <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <see langword="string" /> do texto não pode ser <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.String)">
      <summary>Validará se o espaço em branco no <see langword="string" /> especificado for permitido no contexto do elemento atual e acumulará o espaço em branco para validação se o elemento atual tiver conteúdo simples.</summary>
      <param name="elementValue">Um espaço em branco <see langword="string" /> a ser validado no contexto do elemento atual.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Não é permitido espaço em branco no contexto do elemento atual.</exception>
      <exception cref="T:System.InvalidOperationException">O método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /> não foi chamado na sequência correta. Por exemplo, se o método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /> for chamado após chamar <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.Xml.Schema.XmlValueGetter)">
      <summary>Validará se o espaço em branco retornado pelo objeto <see cref="T:System.Xml.Schema.XmlValueGetter" /> especificado for permitido no contexto do elemento atual e acumulará o espaço em branco para validação se o elemento atual tiver conteúdo simples.</summary>
      <param name="elementValue">Um <see cref="T:System.Xml.Schema.XmlValueGetter" /><see langword="delegate" /> usado para passar o valor do espaço em branco como um tipo CLR (Common Language Runtime) compatível com o tipo XSD (linguagem de definição de esquema XML) do atributo.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Não é permitido espaço em branco no contexto do elemento atual.</exception>
      <exception cref="T:System.InvalidOperationException">O método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /> não foi chamado na sequência correta. Por exemplo, se o método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /> for chamado após chamar <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
    </member>
    <member name="E:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler">
      <summary>O <see cref="T:System.Xml.Schema.ValidationEventHandler" /> que recebe avisos e erros de validação de esquema encontrados durante a validação do esquema.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaValidator.ValidationEventSender">
      <summary>Obtém ou define o objeto enviado como o objeto do remetente de um evento de validação.</summary>
      <returns>Um <see cref="T:System.Object" />; o padrão é este <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> objeto.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaValidator.XmlResolver">
      <summary>Define o objeto <see cref="T:System.Xml.XmlResolver" /> usado para resolver os elementos <c>xs:import</c> e <c>xs:include</c> bem como os atributos <c>xsi:schemaLocation</c> e <c>xsi:noNamespaceSchemaLocation</c>.</summary>
      <returns>Um <see cref="T:System.Xml.XmlResolver" /> objeto; o padrão é um <see cref="T:System.Xml.XmlUrlResolver" /> objeto.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaValidity">
      <summary>Representa a validade de um item XML validado pela classe <see cref="T:System.Xml.Schema.XmlSchemaValidator" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidity.Invalid">
      <summary>O item XML é inválido.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidity.NotKnown">
      <summary>A validade do item XML não é conhecida.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidity.Valid">
      <summary>O item XML é válido.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaWhiteSpaceFacet">
      <summary>Representa a faceta <see langword="whiteSpace" /> do W3C (World Wide Web Consortium).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaWhiteSpaceFacet.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaWhiteSpaceFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaXPath">
      <summary>Representa o elemento <see langword="selector" /> W3C (World Wide Web Consortium).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaXPath.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaXPath" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaXPath.XPath">
      <summary>Obtém ou define o atributo para a expressão XPath.</summary>
      <returns>O valor do atributo de cadeia de caracteres para a expressão XPath.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSeverityType">
      <summary>Representa a gravidade do evento de validação.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSeverityType.Error">
      <summary>Indica que um erro de validação ocorreu ao validar o documento de instância. Isso se aplica a DTDs (definições de tipo de documento) e esquemas de linguagem XSD (definição de esquema XML). Restrições de validade do W3C (World Wide Web Consortium) são consideradas erros. Se nenhum manipulador de eventos de validação tiver sido criado, os erros lançarão uma exceção.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSeverityType.Warning">
      <summary>Indica que ocorreu um evento de validação que não é um erro. Normalmente, é emitido um aviso quando não há um DTD ou esquema XML com o qual validar um atributo ou elemento em particular. Diferente dos erros, os avisos não lançarão uma exceção se não houver um manipulador de eventos de validação.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlTypeCode">
      <summary>Representa os tipos de esquema W3C XSD (linguagem de definição de esquema XML).</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.AnyAtomicType">
      <summary>Qualquer valor atômico de uma união.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.AnyUri">
      <summary>Um tipo <see langword="xs:anyURI" /> do Esquema XML do W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Attribute">
      <summary>Esse valor dá suporte à infraestrutura .NET Framework e não se destina a ser usado diretamente no código.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Base64Binary">
      <summary>Um tipo <see langword="xs:base64Binary" /> do Esquema XML do W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Boolean">
      <summary>Um tipo <see langword="xs:boolean" /> do Esquema XML do W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Byte">
      <summary>Um tipo <see langword="xs:byte" /> do Esquema XML do W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Comment">
      <summary>Esse valor dá suporte à infraestrutura .NET Framework e não se destina a ser usado diretamente no código.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Date">
      <summary>Um tipo <see langword="xs:date" /> do Esquema XML do W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.DateTime">
      <summary>Um tipo <see langword="xs:dateTime" /> do Esquema XML do W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.DayTimeDuration">
      <summary>Esse valor dá suporte à infraestrutura .NET Framework e não se destina a ser usado diretamente no código.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Decimal">
      <summary>Um tipo <see langword="xs:decimal" /> do Esquema XML do W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Document">
      <summary>Esse valor dá suporte à infraestrutura .NET Framework e não se destina a ser usado diretamente no código.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Double">
      <summary>Um tipo <see langword="xs:double" /> do Esquema XML do W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Duration">
      <summary>Um tipo <see langword="xs:Duration" /> do Esquema XML do W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Element">
      <summary>Esse valor dá suporte à infraestrutura .NET Framework e não se destina a ser usado diretamente no código.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Entity">
      <summary>Um tipo <see langword="xs:ENTITY" /> do Esquema XML do W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Float">
      <summary>Um tipo <see langword="xs:float" /> do Esquema XML do W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GDay">
      <summary>Um tipo <see langword="xs:gDay" /> do Esquema XML do W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GMonth">
      <summary>Um tipo <see langword="xs:gMonth" /> do Esquema XML do W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GMonthDay">
      <summary>Um tipo <see langword="xs:gMonthDay" /> do Esquema XML do W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GYear">
      <summary>Um tipo <see langword="xs:gYear" /> do Esquema XML do W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GYearMonth">
      <summary>Um tipo <see langword="xs:gYearMonth" /> do Esquema XML do W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.HexBinary">
      <summary>Um tipo <see langword="xs:hexBinary" /> do Esquema XML do W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Id">
      <summary>Um tipo <see langword="xs:ID" /> do Esquema XML do W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Idref">
      <summary>Um tipo <see langword="xs:IDREF" /> do Esquema XML do W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Int">
      <summary>Um tipo <see langword="xs:int" /> do Esquema XML do W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Integer">
      <summary>Um tipo <see langword="xs:integer" /> do Esquema XML do W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Item">
      <summary>Um item como um nó ou valor atômico.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Language">
      <summary>Um tipo <see langword="xs:language" /> do Esquema XML do W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Long">
      <summary>Um tipo <see langword="xs:long" /> do Esquema XML do W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Name">
      <summary>Um tipo <see langword="xs:Name" /> do Esquema XML do W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Namespace">
      <summary>Esse valor dá suporte à infraestrutura .NET Framework e não se destina a ser usado diretamente no código.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NCName">
      <summary>Um tipo <see langword="xs:NCName" /> do Esquema XML do W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NegativeInteger">
      <summary>Um tipo <see langword="xs:negativeInteger" /> do Esquema XML do W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NmToken">
      <summary>Um tipo <see langword="xs:NMTOKEN" /> do Esquema XML do W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Node">
      <summary>Esse valor dá suporte à infraestrutura .NET Framework e não se destina a ser usado diretamente no código.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.None">
      <summary>Nenhuma informações de tipo.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NonNegativeInteger">
      <summary>Um tipo <see langword="xs:nonNegativeInteger" /> do Esquema XML do W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NonPositiveInteger">
      <summary>Um tipo <see langword="xs:nonPositiveInteger" /> do Esquema XML do W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NormalizedString">
      <summary>Um tipo <see langword="xs:normalizedString" /> do Esquema XML do W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Notation">
      <summary>Um tipo <see langword="xs:NOTATION" /> do Esquema XML do W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.PositiveInteger">
      <summary>Um tipo <see langword="xs:positiveInteger" /> do Esquema XML do W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.ProcessingInstruction">
      <summary>Esse valor dá suporte à infraestrutura .NET Framework e não se destina a ser usado diretamente no código.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.QName">
      <summary>Um tipo <see langword="xs:QName" /> do Esquema XML do W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Short">
      <summary>Um tipo <see langword="xs:short" /> do Esquema XML do W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.String">
      <summary>Um tipo <see langword="xs:string" /> do Esquema XML do W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Text">
      <summary>Esse valor dá suporte à infraestrutura .NET Framework e não se destina a ser usado diretamente no código.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Time">
      <summary>Um tipo <see langword="xs:time" /> do Esquema XML do W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Token">
      <summary>Um tipo <see langword="xs:token" /> do Esquema XML do W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UnsignedByte">
      <summary>Um tipo <see langword="xs:unsignedByte" /> do Esquema XML do W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UnsignedInt">
      <summary>Um tipo <see langword="xs:unsignedInt" /> do Esquema XML do W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UnsignedLong">
      <summary>Um tipo <see langword="xs:unsignedLong" /> do Esquema XML do W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UnsignedShort">
      <summary>Um tipo <see langword="xs:unsignedShort" /> do Esquema XML do W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UntypedAtomic">
      <summary>Um valor atômico não tipado.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.YearMonthDuration">
      <summary>Esse valor dá suporte à infraestrutura .NET Framework e não se destina a ser usado diretamente no código.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlValueGetter">
      <summary>Um <see langword="delegate" /> usado pela classe <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> para passar valores de atributo, texto e espaço em branco como um tipo CLR (Common Language Runtime) compatível com o tipo de linguagem XSD (linguagem de definição de esquema XML) do atributo, texto ou espaço em branco.</summary>
      <returns>Um objeto que contém o valor de atributo, texto ou espaço em branco. O objeto é um tipo CLR que corresponde ao tipo XSD do valor de atributo, texto ou espaço em branco.</returns>
    </member>
    <member name="T:System.Xml.Serialization.IXmlSerializable">
      <summary>Fornece a formatação personalizada para serialização de XML e de desserialização.</summary>
    </member>
    <member name="M:System.Xml.Serialization.IXmlSerializable.GetSchema">
      <summary>Esse método está reservado e não deve ser usado. Ao implementar a interface <see langword="IXmlSerializable" />, você deverá retornar <see langword="null" /> (<see langword="Nothing" /> no Visual Basic) desse método e, em vez disso, se a especificação de um esquema personalizado for necessária, aplique o <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" /> à classe.</summary>
      <returns>Um <see cref="T:System.Xml.Schema.XmlSchema" /> que descreve a representação XML do objeto produzido pelo método <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> e consumido pelo método <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)">
      <summary>Gera um objeto de sua representação XML.</summary>
      <param name="reader">O fluxo do <see cref="T:System.Xml.XmlReader" /> do qual o objeto é desserializado.</param>
    </member>
    <member name="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)">
      <summary>Converte um objeto em sua representação XML.</summary>
      <param name="writer">O fluxo <see cref="T:System.Xml.XmlWriter" /> para o qual o objeto é serializado.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAnyAttributeAttribute">
      <summary>Especifica que o membro (um campo que retorna uma matriz de objetos <see cref="T:System.Xml.XmlAttribute" />) pode conter os atributos XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyAttributeAttribute.#ctor">
      <summary>Constrói uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlAnyElementAttribute">
      <summary>Especifica que o membro (um campo que retorna uma matriz de objetos <see cref="T:System.Xml.XmlElement" /> ou <see cref="T:System.Xml.XmlNode" />) contém objetos que representam qualquer elemento XML que não tem nenhum membro correspondente no objeto que está sendo serializado ou desserializado.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> e especifica o nome do elemento XML gerado no documento XML.</summary>
      <param name="name">O nome do elemento XML gerado pelo <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> e especifica o nome do elemento XML gerado no documento XML e seu namespace de XML.</summary>
      <param name="name">O nome do elemento XML gerado pelo <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
      <param name="ns">O namespace de XML do elemento XML.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttribute.Name">
      <summary>Obtém ou define o nome do elemento XML.</summary>
      <returns>O nome do elemento XML.</returns>
      <exception cref="T:System.InvalidOperationException">O nome do elemento de um membro da matriz não corresponde ao nome do elemento especificado pela propriedade <see cref="P:System.Xml.Serialization.XmlAnyElementAttribute.Name" />.</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttribute.Namespace">
      <summary>Obtém ou define o namespace de XML gerado no documento XML.</summary>
      <returns>Um namespace de XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttribute.Order">
      <summary>Obtém ou define a ordem explícita na qual os elementos são serializados ou desserializados.</summary>
      <returns>A ordem de geração de código.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeAttribute">
      <summary>Especifica que o <see cref="T:System.Xml.Serialization.XmlSerializer" /> deve serializar o membro de classe como um atributo XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> e especifica o nome do atributo XML gerado.</summary>
      <param name="attributeName">O nome do atributo XML gerado pelo <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.String,System.Type)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />.</summary>
      <param name="attributeName">O nome do atributo XML gerado.</param>
      <param name="type">O <see cref="T:System.Type" /> usado para armazenar o atributo.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.Type)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />.</summary>
      <param name="type">O <see cref="T:System.Type" /> usado para armazenar o atributo.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.AttributeName">
      <summary>Obtém ou define o nome do atributo XML.</summary>
      <returns>O nome do atributo XML. O padrão é o nome do membro.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.DataType">
      <summary>Obtém ou define o tipo de dados XSD do atributo XML gerado pelo <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns>Um tipo de dados XSD (XML Schema Document).</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.Form">
      <summary>Obtém ou define um valor que indica se o nome do atributo XML gerado pelo <see cref="T:System.Xml.Serialization.XmlSerializer" /> é qualificado.</summary>
      <returns>Um dos valores de <see cref="T:System.Xml.Schema.XmlSchemaForm" />. O padrão é <see langword="XmlForm.None" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.Namespace">
      <summary>Obtém ou define o namespace de XML do atributo XML.</summary>
      <returns>O namespace de XML do atributo XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.Type">
      <summary>Obtém ou define o tipo complexo do atributo XML.</summary>
      <returns>O tipo do atributo XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementAttribute">
      <summary>Indica que um campo ou propriedade pública representa um elemento XML quando o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa ou desserializa o objeto que o contém.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> e especifica o nome do elemento XML.</summary>
      <param name="elementName">O nome do elemento XML do membro serializado.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
      <summary>Inicializa uma nova instância do <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> e especifica o nome do elemento XML e um tipo derivado do membro ao qual o <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> é aplicado. Esse tipo de membro é usado quando o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa o objeto que o contém.</summary>
      <param name="elementName">O nome do elemento XML do membro serializado.</param>
      <param name="type">O <see cref="T:System.Type" /> de um objeto derivado do tipo do membro.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> e especifica um tipo para o membro ao qual o <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> é aplicado. Esse tipo é usado pelo <see cref="T:System.Xml.Serialization.XmlSerializer" /> ao serializar ou desserializar um objeto que o contém.</summary>
      <param name="type">O <see cref="T:System.Type" /> de um objeto derivado do tipo do membro.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.DataType">
      <summary>Obtém ou define o tipo de dados XSD (definição de esquema XML) do elemento XML gerado pelo <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns>Um tipo de dados de esquema XML.</returns>
      <exception cref="T:System.Exception">O tipo de dados de esquema XML que você especificou não pode ser mapeado para o tipo de dados .NET.</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.ElementName">
      <summary>Obtém ou define o nome do elemento XML gerado.</summary>
      <returns>O nome do elemento XML gerado. O padrão é o identificador do membro.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Form">
      <summary>Obtém ou define um valor que indica se o elemento está qualificado.</summary>
      <returns>Um dos valores de <see cref="T:System.Xml.Schema.XmlSchemaForm" />. O padrão é <see cref="F:System.Xml.Schema.XmlSchemaForm.None" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.IsNullable">
      <summary>Obtém ou define um valor que indica se o <see cref="T:System.Xml.Serialization.XmlSerializer" /> deve serializar um membro definido como <see langword="null" /> como uma marca vazia com o atributo <see langword="xsi:nil" /> definido como <see langword="true" />.</summary>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Xml.Serialization.XmlSerializer" /> gera o atributo <see langword="xsi:nil" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Namespace">
      <summary>Obtém ou define o namespace atribuído ao elemento XML resultante quando a classe é serializada.</summary>
      <returns>O namespace do elemento XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Order">
      <summary>Obtém ou define a ordem explícita na qual os elementos são serializados ou desserializados.</summary>
      <returns>A ordem de geração de código.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Type">
      <summary>Obtém ou define o tipo de objeto usado para representar o elemento XML.</summary>
      <returns>O <see cref="T:System.Type" /> do membro.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlEnumAttribute">
      <summary>Controla como o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa um membro de enumeração.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlEnumAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlEnumAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlEnumAttribute.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlEnumAttribute" /> e especifica o valor de XML que o <see cref="T:System.Xml.Serialization.XmlSerializer" /> gera ou reconhece (quando ele serializa ou desserializa a enumeração, respectivamente).</summary>
      <param name="name">O nome de substituição do membro de enumeração.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlEnumAttribute.Name">
      <summary>Obtém ou define o valor gerado em uma instância de documento XML quando o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa uma enumeração ou o valor reconhecido quando ele desserializa o membro da enumeração.</summary>
      <returns>O valor gerado em uma instância de documento XML quando o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa a enumeração ou o valor reconhecido quando desserializa o membro de enumeração.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlIgnoreAttribute">
      <summary>Instrui o método <see cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" /> do <see cref="T:System.Xml.Serialization.XmlSerializer" /> para não serializar o campo público ou o valor da propriedade pública de leitura/gravação.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlIgnoreAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlIgnoreAttribute" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute">
      <summary>Especifica que a propriedade de destino, parâmetro, o valor retornado ou o membro da classe contém prefixos associados a namespaces que são usados em um documento XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlRootAttribute">
      <summary>Controla a serialização XML do destino do atributo como um elemento raiz XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlRootAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlRootAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlRootAttribute.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> e especifica o nome do elemento raiz XML.</summary>
      <param name="elementName">O nome do elemento raiz XML.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.DataType">
      <summary>Obtém ou define o tipo de dados XSD do elemento raiz XML.</summary>
      <returns>Um tipo de dados XSD (XML Schema Document).</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.ElementName">
      <summary>Obtém ou define o nome do elemento XML que é gerado e reconhecido pelo <see cref="T:System.Xml.Serialization.XmlSerializer" /> da classe <see cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" /> e métodos <see cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />, respectivamente.</summary>
      <returns>O nome do elemento raiz XML que é gerado e reconhecido em uma instância de documento XML. O padrão é o nome da classe serializada.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.IsNullable">
      <summary>Obtém ou define um valor que indica se o <see cref="T:System.Xml.Serialization.XmlSerializer" /> deve serializar um membro que é definido como <see langword="null" /> para o atributo <see langword="xsi:nil" /> definido como <see langword="true" />.</summary>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Xml.Serialization.XmlSerializer" /> gera o atributo <see langword="xsi:nil" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.Namespace">
      <summary>Obtém ou define o namespace para o elemento raiz XML.</summary>
      <returns>O namespace do elemento XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaProviderAttribute">
      <summary>Quando aplicado a um tipo, armazena o nome de um método estático do tipo que retorna um esquema XML e um <see cref="T:System.Xml.XmlQualifiedName" /> (ou <see cref="T:System.Xml.Schema.XmlSchemaType" /> para tipos anônimos) que controla a serialização do tipo.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaProviderAttribute.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" />, obtendo o nome do método estático que fornece o esquema XML do tipo.</summary>
      <param name="methodName">O nome do método estático que deve ser implementado.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaProviderAttribute.IsAny">
      <summary>Obtém ou define um valor que determina se a classe de destino é um curinga ou, se o esquema para a classe contém apenas um elemento <see langword="xs:any" />.</summary>
      <returns>
        <see langword="true" />, se a classe for um curinga ou se o esquema contiver apenas o <see langword="xs:any" /> elemento; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName">
      <summary>Obtém o nome do método estático que fornece o esquema XML do tipo e o nome do tipo de dados do esquema XML dele.</summary>
      <returns>O nome do método que é invocado pela infraestrutura XML para retornar um esquema XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerNamespaces">
      <summary>Contém os namespaces e prefixos XML que o <see cref="T:System.Xml.Serialization.XmlSerializer" /> usa para gerar nomes qualificados em uma instância de documento XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor(System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />, usando a instância especificada do <see langword="XmlSerializerNamespaces" /> que contém a coleção de pares de prefixo e namespace.</summary>
      <param name="namespaces">Uma instância das <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> que contém os pares de namespace e prefixo.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor(System.Xml.XmlQualifiedName[])">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />.</summary>
      <param name="namespaces">Uma matriz de objetos de <see cref="T:System.Xml.XmlQualifiedName" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.Add(System.String,System.String)">
      <summary>Adiciona um par de prefixo e namespace a um objeto <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />.</summary>
      <param name="prefix">O prefixo associado a um namespace de XML.</param>
      <param name="ns">Um namespace de XML.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerNamespaces.Count">
      <summary>Obtém o número de pares de prefixo e namespace na coleção.</summary>
      <returns>O número de pares de prefixo e namespace na coleção.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.ToArray">
      <summary>Obtém a matriz de pares de prefixo e namespace em um objeto <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />.</summary>
      <returns>Uma matriz de objetos <see cref="T:System.Xml.XmlQualifiedName" /> que são usados como nomes qualificados em um documento XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTextAttribute">
      <summary>Indica para o <see cref="T:System.Xml.Serialization.XmlSerializer" /> que o membro deve ser tratado como texto XML quando a classe que o contém é serializada ou desserializada.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTextAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlTextAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTextAttribute.#ctor(System.Type)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlTextAttribute" />.</summary>
      <param name="type">O <see cref="T:System.Type" /> do membro a ser serializado.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlTextAttribute.DataType">
      <summary>Obtém ou define o tipo de dados XSD (Linguagem de Definição de Esquema XML) do texto gerado pelo <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns>Um tipo de dados XSD (esquema XML).</returns>
      <exception cref="T:System.Exception">O tipo de dados de esquema XML que você especificou não pode ser mapeado para o tipo de dados .NET.</exception>
      <exception cref="T:System.InvalidOperationException">O tipo de dados de esquema XML que você especificou é inválido para a propriedade e não pode ser convertido para o tipo de membro.</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlTextAttribute.Type">
      <summary>Obtém ou define o tipo do membro.</summary>
      <returns>O <see cref="T:System.Type" /> do membro.</returns>
    </member>
    <member name="T:System.Xml.ValidationType">
      <summary>Especifica o tipo de validação a ser executada.</summary>
    </member>
    <member name="F:System.Xml.ValidationType.Auto">
      <summary>Valida se as informações de DTD ou de esquema foram encontradas. 
Do .NET Framework 2.0 em diante, esse campo está obsoleto. Ele se aplica somente à classe <see cref="T:System.Xml.XmlValidatingReader" /> obsoleta.</summary>
    </member>
    <member name="F:System.Xml.ValidationType.DTD">
      <summary>Valida de acordo com a DTD.</summary>
    </member>
    <member name="F:System.Xml.ValidationType.None">
      <summary>Nenhuma validação é realizada e nenhum erro de validação é gerado. Essa definição cria um analisador não validação compatível com XML 1.0.
As chamadas a <see cref="M:System.Xml.XmlReader.ResolveEntity" /> relatam atributos padrão e resolvem as entidades gerais. O DOCTYPE não é usado para fins de validação.</summary>
    </member>
    <member name="F:System.Xml.ValidationType.Schema">
      <summary>Valide de acordo com esquemas XML XSD (linguagem de definição de esquema XML), incluindo Esquemas XML embutidos. Os Esquemas XML são associados a URIs de namespace usando o atributo <see langword="schemaLocation" /> ou a propriedade <see langword="Schemas" /> fornecida.</summary>
    </member>
    <member name="F:System.Xml.ValidationType.XDR">
      <summary>Valide de acordo com esquemas XML XDR (Dados Reduzidos por XML), incluindo Esquemas XDR embutidos. Os esquemas XDR são reconhecidos usando o prefixo de namespace <see langword="x-schema" /> ou a propriedade <see cref="P:System.Xml.XmlValidatingReader.Schemas" />.
Do .NET Framework 2.0 em diante, esse campo está obsoleto. Ele se aplica somente à classe <see cref="T:System.Xml.XmlValidatingReader" /> obsoleta.</summary>
    </member>
    <member name="T:System.Xml.WhitespaceHandling">
      <summary>Especifica como o espaço em branco é tratado.</summary>
    </member>
    <member name="F:System.Xml.WhitespaceHandling.All">
      <summary>Retornar nós <see langword="Whitespace" /> e <see langword="SignificantWhitespace" />. Esse é o padrão.</summary>
    </member>
    <member name="F:System.Xml.WhitespaceHandling.None">
      <summary>Não retorne nenhum nó <see langword="Whitespace" /> e <see langword="SignificantWhitespace" />.</summary>
    </member>
    <member name="F:System.Xml.WhitespaceHandling.Significant">
      <summary>Retorne somente nós <see langword="SignificantWhitespace" />.</summary>
    </member>
    <member name="T:System.Xml.WriteState">
      <summary>Especifica o estado do <see cref="T:System.Xml.XmlWriter" />.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Attribute">
      <summary>Indica que um valor de atributo está sendo gravado.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Closed">
      <summary>Indica que o método <see cref="M:System.Xml.XmlWriter.Close" /> foi chamado.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Content">
      <summary>Indica que o conteúdo do elemento está sendo gravado.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Element">
      <summary>Indica que uma marca de início do elemento está sendo gravada.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Error">
      <summary>Uma exceção foi gerada, o que deixou o <see cref="T:System.Xml.XmlWriter" /> em um estado inválido. Chame o método <see cref="M:System.Xml.XmlWriter.Close" /> para colocar o <see cref="T:System.Xml.XmlWriter" /> no estado <see cref="F:System.Xml.WriteState.Closed" />. Quaisquer outras chamadas de método <see cref="T:System.Xml.XmlWriter" /> resultam em um <see cref="T:System.InvalidOperationException" />.
Esse campo foi adicionado no .NET Framework 2.0.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Prolog">
      <summary>Indica que o prólogo está sendo gravado.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Start">
      <summary>Indica que um método Write ainda não foi chamado.</summary>
    </member>
    <member name="T:System.Xml.XmlAttribute">
      <summary>Representa um atributo. Os valores válidos e padrão do atributo são definidos em um DTD (definição de tipo de documento) ou esquema.</summary>
    </member>
    <member name="M:System.Xml.XmlAttribute.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlAttribute" />.</summary>
      <param name="prefix">O prefixo de namespace.</param>
      <param name="localName">O nome local do atributo.</param>
      <param name="namespaceURI">O URI (Uniform Resource Identifier) do namespace.</param>
      <param name="doc">O documento XML pai.</param>
    </member>
    <member name="M:System.Xml.XmlAttribute.AppendChild(System.Xml.XmlNode)">
      <summary>Adiciona o nó especificado ao final da lista de nós filho desse nó.</summary>
      <param name="newChild">O <see cref="T:System.Xml.XmlNode" /> a ser adicionado.</param>
      <returns>O <see cref="T:System.Xml.XmlNode" /> adicionado.</returns>
      <exception cref="T:System.InvalidOperationException">Esse nó é de um tipo que não permite nós filho do tipo do nó <paramref name="newChild" />.  
O <paramref name="newChild" /> é um ancestral desse nó.</exception>
      <exception cref="T:System.ArgumentException">O <paramref name="newChild" /> foi criado com base em um documento diferente daquele que criou esse nó.  
Este nó é somente leitura.</exception>
    </member>
    <member name="P:System.Xml.XmlAttribute.BaseURI">
      <summary>Obtém o URI (Uniform Resource Identifier) base do nó.</summary>
      <returns>O local do qual o nó foi carregado ou String.Empty se o nó não tiver nenhum URI de base. Os nós de atributo têm o mesmo URI de base que seu elemento de proprietário. Se um nó de atributo não tiver um elemento de proprietário <see langword="BaseURI" /> , retornará String. Empty.</returns>
    </member>
    <member name="M:System.Xml.XmlAttribute.CloneNode(System.Boolean)">
      <summary>Cria uma duplicação deste nó.</summary>
      <param name="deep">
        <see langword="true" /> para clonar recursivamente a subárvore abaixo do nó especificado; <see langword="false" /> para clonar apenas o próprio nó</param>
      <returns>O nó duplicado.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.InnerText">
      <summary>Define os valores concatenados do nó e todos os filhos.</summary>
      <returns>Os valores concatenados do nó e de todos os filhos. Para nós de atributo, essa propriedade tem a mesma funcionalidade que a propriedade <see cref="P:System.Xml.XmlAttribute.Value" />.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.InnerXml">
      <summary>Define o valor do atributo.</summary>
      <returns>O valor do atributo.</returns>
      <exception cref="T:System.Xml.XmlException">O XML especificado ao definir essa propriedade não está bem formado.</exception>
    </member>
    <member name="M:System.Xml.XmlAttribute.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary>Insere o nó especificado imediatamente após o nó de referência especificado.</summary>
      <param name="newChild">O <see cref="T:System.Xml.XmlNode" /> a ser inserido.</param>
      <param name="refChild">O <see cref="T:System.Xml.XmlNode" /> que é o nó de referência. O <paramref name="newChild" /> é posicionado após o <paramref name="refChild" />.</param>
      <returns>O <see cref="T:System.Xml.XmlNode" /> inserido.</returns>
      <exception cref="T:System.InvalidOperationException">Esse nó é de um tipo que não permite nós filho do tipo do nó <paramref name="newChild" />.  
O <paramref name="newChild" /> é um ancestral desse nó.</exception>
      <exception cref="T:System.ArgumentException">O <paramref name="newChild" /> foi criado com base em um documento diferente daquele que criou esse nó.  
O <paramref name="refChild" /> não é filho desse nó.  
Este nó é somente leitura.</exception>
    </member>
    <member name="M:System.Xml.XmlAttribute.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary>Insere o nó especificado imediatamente antes do nó de referência especificado.</summary>
      <param name="newChild">O <see cref="T:System.Xml.XmlNode" /> a ser inserido.</param>
      <param name="refChild">O <see cref="T:System.Xml.XmlNode" /> que é o nó de referência. O <paramref name="newChild" /> é colocado antes desse nó.</param>
      <returns>O <see cref="T:System.Xml.XmlNode" /> inserido.</returns>
      <exception cref="T:System.InvalidOperationException">O nó atual é de um tipo que não permite nós filho do tipo do nó <paramref name="newChild" />.  
O <paramref name="newChild" /> é um ancestral desse nó.</exception>
      <exception cref="T:System.ArgumentException">O <paramref name="newChild" /> foi criado com base em um documento diferente daquele que criou esse nó.  
O <paramref name="refChild" /> não é filho desse nó.  
Este nó é somente leitura.</exception>
    </member>
    <member name="P:System.Xml.XmlAttribute.LocalName">
      <summary>Obtém o nome local do nó.</summary>
      <returns>O nome do nó de atributo com o prefixo removido. No seguinte livro de &lt;exemplo BK: gênero = ' romance '&gt;, o <see langword="LocalName" /> do atributo é <see langword="genre" />.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.Name">
      <summary>Obtém o nome qualificado do nó.</summary>
      <returns>O nome qualificado do nó de atributo.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.NamespaceURI">
      <summary>Obtém o URI do namespace deste nó.</summary>
      <returns>O URI do namespace deste nó. Se o atributo não receber explicitamente um namespace, essa propriedade retornará String. Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.NodeType">
      <summary>Obtém o tipo do nó atual.</summary>
      <returns>O tipo de nó <see langword="XmlAttribute" /> para nós é XmlNodeType. Attribute.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.OwnerDocument">
      <summary>Obtém o <see cref="T:System.Xml.XmlDocument" /> ao qual esse nó pertence.</summary>
      <returns>Um documento XML ao qual este nó pertence.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.OwnerElement">
      <summary>Obtém o <see cref="T:System.Xml.XmlElement" /> ao qual o atributo pertence.</summary>
      <returns>O <see langword="XmlElement" /> que pertence ao atributo ou <see langword="null" /> se esse atributo não faz parte de um <see langword="XmlElement" />.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.ParentNode">
      <summary>Obtém o pai deste nó. Para nós <see langword="XmlAttribute" />, essa propriedade sempre retorna <see langword="null" />.</summary>
      <returns>Para nós <see langword="XmlAttribute" />, essa propriedade sempre retorna <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.Prefix">
      <summary>Obtém ou define o prefixo de namespace desse nó.</summary>
      <returns>O prefixo de namespace desse nó. Se não houver nenhum prefixo, essa propriedade retornará String.Empty.</returns>
      <exception cref="T:System.ArgumentException">Este nó é somente leitura.</exception>
      <exception cref="T:System.Xml.XmlException">O prefixo especificado contém um caractere inválido.  
O prefixo especificado está malformado.  
O namespaceURI deste nó é <see langword="null" />.  
O prefixo especificado é "xml", e o namespaceURI deste nó é diferente de "http://www.w3.org/XML/1998/namespace".  
Este nó é um atributo, o prefixo especificado é "xmlns" e o namespaceURI deste nó é diferente de "http://www.w3.org/2000/xmlns/".  
Esse nó é um atributo e o qualifiedName dele é "xmlns" [Namespaces].</exception>
    </member>
    <member name="M:System.Xml.XmlAttribute.PrependChild(System.Xml.XmlNode)">
      <summary>Adiciona o nó especificado ao início da lista de nós filho desse nó.</summary>
      <param name="newChild">O <see cref="T:System.Xml.XmlNode" /> a ser adicionado. Se este for um <see cref="T:System.Xml.XmlDocumentFragment" />, todo o conteúdo do fragmento de documento será movido para a lista filho deste nó.</param>
      <returns>O <see cref="T:System.Xml.XmlNode" /> adicionado.</returns>
      <exception cref="T:System.InvalidOperationException">Esse nó é de um tipo que não permite nós filho do tipo do nó <paramref name="newChild" />.  
O <paramref name="newChild" /> é um ancestral desse nó.</exception>
      <exception cref="T:System.ArgumentException">O <paramref name="newChild" /> foi criado com base em um documento diferente daquele que criou esse nó.  
Este nó é somente leitura.</exception>
    </member>
    <member name="M:System.Xml.XmlAttribute.RemoveChild(System.Xml.XmlNode)">
      <summary>Remove o nó filho especificado.</summary>
      <param name="oldChild">O <see cref="T:System.Xml.XmlNode" /> a ser removido.</param>
      <returns>O <see cref="T:System.Xml.XmlNode" /> removido.</returns>
      <exception cref="T:System.ArgumentException">O <paramref name="oldChild" /> não é filho desse nó. Ou esse nó é somente leitura.</exception>
    </member>
    <member name="M:System.Xml.XmlAttribute.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary>Substitui o nó filho indicado pelo novo especificado.</summary>
      <param name="newChild">O novo <see cref="T:System.Xml.XmlNode" /> filho.</param>
      <param name="oldChild">O <see cref="T:System.Xml.XmlNode" /> a ser substituído.</param>
      <returns>O <see cref="T:System.Xml.XmlNode" /> substituído.</returns>
      <exception cref="T:System.InvalidOperationException">Esse nó é de um tipo que não permite nós filho do tipo do nó <paramref name="newChild" />.  
O <paramref name="newChild" /> é um ancestral desse nó.</exception>
      <exception cref="T:System.ArgumentException">O <paramref name="newChild" /> foi criado com base em um documento diferente daquele que criou esse nó.  
Este nó é somente leitura.  
O <paramref name="oldChild" /> não é filho desse nó.</exception>
    </member>
    <member name="P:System.Xml.XmlAttribute.SchemaInfo">
      <summary>Obtém o post-schema-validation-infoset que foi atribuído a esse nó como resultado da validação de esquema.</summary>
      <returns>Um <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> que contém o pós-esquema-validação-infoset deste nó.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.Specified">
      <summary>Obtém um valor que indica se o valor do atributo foi definido explicitamente.</summary>
      <returns>
        <see langword="true" /> se esse atributo recebeu explicitamente um valor no documento da instância original; caso contrário, <see langword="false" />. Um valor de <see langword="false" /> indica que o valor do atributo é proveniente de DTD.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.Value">
      <summary>Obtém ou define o valor do nó.</summary>
      <returns>O valor retornado depende do <see cref="P:System.Xml.XmlNode.NodeType" /> do nó. Para nós <see langword="XmlAttribute" /> , essa propriedade é o valor do atributo.</returns>
      <exception cref="T:System.ArgumentException">O nó é somente leitura e uma operação de definição é chamada.</exception>
    </member>
    <member name="M:System.Xml.XmlAttribute.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Salva todos os filhos do nó no <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w">O <see langword="XmlWriter" /> no qual você deseja salvar.</param>
    </member>
    <member name="M:System.Xml.XmlAttribute.WriteTo(System.Xml.XmlWriter)">
      <summary>Salva o nó no <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w">O <see langword="XmlWriter" /> no qual você deseja salvar.</param>
    </member>
    <member name="T:System.Xml.XmlAttributeCollection">
      <summary>Representa uma coleção de atributos que podem ser acessados por nome ou índice.</summary>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.Append(System.Xml.XmlAttribute)">
      <summary>Insere o atributo especificado como o último nó na coleção.</summary>
      <param name="node">O atributo a inserir.</param>
      <returns>O <see langword="XmlAttribute" /> a ser acrescentado à coleção.</returns>
      <exception cref="T:System.ArgumentException">O <paramref name="node" /> foi criado com base em um documento diferente daquele que criou essa coleção.</exception>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute[],System.Int32)">
      <summary>Copia todos os objetos <see cref="T:System.Xml.XmlAttribute" /> desta coleção na matriz indicada.</summary>
      <param name="array">A matriz que é o destino dos objetos copiados dessa coleção.</param>
      <param name="index">O índice na matriz em que a cópia começa.</param>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.InsertAfter(System.Xml.XmlAttribute,System.Xml.XmlAttribute)">
      <summary>Insere o atributo indicado imediatamente após o atributo de referência especificado.</summary>
      <param name="newNode">O atributo a inserir.</param>
      <param name="refNode">O atributo de referência. O <paramref name="newNode" /> é colocado após o <paramref name="refNode" />.</param>
      <returns>O <see langword="XmlAttribute" /> a ser inserido na coleção.</returns>
      <exception cref="T:System.ArgumentException">O <paramref name="newNode" /> foi criado com base em um documento diferente daquele que criou esta coleção. Ou então, o <paramref name="refNode" /> não é um membro dessa coleção.</exception>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.InsertBefore(System.Xml.XmlAttribute,System.Xml.XmlAttribute)">
      <summary>Insere o atributo indicado imediatamente antes do atributo de referência especificado.</summary>
      <param name="newNode">O atributo a inserir.</param>
      <param name="refNode">O atributo de referência. O <paramref name="newNode" /> é colocado antes do <paramref name="refNode" />.</param>
      <returns>O <see langword="XmlAttribute" /> a ser inserido na coleção.</returns>
      <exception cref="T:System.ArgumentException">O <paramref name="newNode" /> foi criado com base em um documento diferente daquele que criou esta coleção. Ou então, o <paramref name="refNode" /> não é um membro dessa coleção.</exception>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.ItemOf(System.Int32)">
      <summary>Obtém o atributo com o índice especificado.</summary>
      <param name="i">O índice do atributo.</param>
      <returns>O atributo no índice especificado.</returns>
      <exception cref="T:System.IndexOutOfRangeException">O índice que está sendo transmitido está fora do intervalo.</exception>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.ItemOf(System.String)">
      <summary>Obtém o atributo com o nome especificado.</summary>
      <param name="name">O nome qualificado do atributo.</param>
      <returns>O atributo com o nome especificado. Se o atributo não existir, essa propriedade retornará <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.ItemOf(System.String,System.String)">
      <summary>Obtém o atributo com o nome local especificado e o URI (Uniform Resource Identifier) do namespace.</summary>
      <param name="localName">O nome local do atributo.</param>
      <param name="namespaceURI">O URI do namespace do atributo.</param>
      <returns>O atributo com o nome local e o URI do namespace especificados. Se o atributo não existir, essa propriedade retornará <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.Prepend(System.Xml.XmlAttribute)">
      <summary>Insere o atributo especificado como o primeiro nó na coleção.</summary>
      <param name="node">O atributo a inserir.</param>
      <returns>O <see langword="XmlAttribute" /> adicionado à coleção.</returns>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.Remove(System.Xml.XmlAttribute)">
      <summary>Remove o atributo especificado da coleção.</summary>
      <param name="node">O atributo a ser removido.</param>
      <returns>O nó removido ou <see langword="null" />, se não for encontrado na coleção.</returns>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.RemoveAll">
      <summary>Remove todos os atributos da coleção.</summary>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.RemoveAt(System.Int32)">
      <summary>Remove o atributo correspondente ao índice especificado da coleção.</summary>
      <param name="i">O índice do nó a ser removido. O primeiro nó tem índice 0.</param>
      <returns>Retorna <see langword="null" /> se não houver nenhum atributo no índice especificado.</returns>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.SetNamedItem(System.Xml.XmlNode)">
      <summary>Adiciona um <see cref="T:System.Xml.XmlNode" /> usando sua propriedade <see cref="P:System.Xml.XmlNode.Name" /></summary>
      <param name="node">Um nó de atributo a ser armazenado nesta coleção. O nó poderá ser acessado posteriormente usando o nome dele. Se um nó com esse nome já estiver presente na coleção, ele será substituído pelo novo, caso contrário, o nó será acrescentado ao final da coleção.</param>
      <returns>Se o <paramref name="node" /> substituir um nó existente com o mesmo nome, o nó antigo será retornado, caso contrário, o nó adicionado será retornado.</returns>
      <exception cref="T:System.ArgumentException">O <paramref name="node" /> foi criado com base em um <see cref="T:System.Xml.XmlDocument" /> diferente daquele que criou essa coleção.  
Esse <see langword="XmlAttributeCollection" /> é somente leitura.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="node" /> é um <see cref="T:System.Xml.XmlAttribute" /> que já é um atributo de outro objeto <see cref="T:System.Xml.XmlElement" />. Para reutilizar atributos em outros elementos, você deve clonar os objetos <see langword="XmlAttribute" /> que deseja reutilizar.</exception>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute[],System.Int32)" />.</summary>
      <param name="array">A matriz que é o destino dos objetos copiados dessa coleção.</param>
      <param name="index">O índice na matriz em que a cópia começa.</param>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#Count">
      <summary>Para obter uma descrição desse membro, consulte <see cref="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#Count" />.</summary>
      <returns>Um <see langword="int" /> que contém a contagem dos atributos.</returns>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Para obter uma descrição desse membro, consulte <see cref="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#IsSynchronized" />.</summary>
      <returns>
        <see langword="true" />se a coleção for sincronizada.</returns>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#SyncRoot">
      <summary>Para obter uma descrição desse membro, consulte <see cref="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#SyncRoot" />.</summary>
      <returns>O <see cref="T:System.Object" /> que é a raiz da coleção.</returns>
    </member>
    <member name="T:System.Xml.XmlCDataSection">
      <summary>Representa uma seção CDATA.</summary>
    </member>
    <member name="M:System.Xml.XmlCDataSection.#ctor(System.String,System.Xml.XmlDocument)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlCDataSection" />.</summary>
      <param name="data">
        <see cref="T:System.String" /> que contém os dados de caractere.</param>
      <param name="doc">Objeto <see cref="T:System.Xml.XmlDocument" />.</param>
    </member>
    <member name="M:System.Xml.XmlCDataSection.CloneNode(System.Boolean)">
      <summary>Cria uma duplicação deste nó.</summary>
      <param name="deep">
        <see langword="true" /> para recursivamente clonar a subárvore abaixo do nó especificado; <see langword="false" /> para clonar apenas o próprio nó. Como os nós CDATA não têm filhos, independentemente da configuração de parâmetro, o nó clonado sempre incluirá o conteúdo de dados.</param>
      <returns>O nó clonado.</returns>
    </member>
    <member name="P:System.Xml.XmlCDataSection.LocalName">
      <summary>Obtém o nome local do nó.</summary>
      <returns>Para nós CDATA, o nome local é <see langword="#cdata-section" />.</returns>
    </member>
    <member name="P:System.Xml.XmlCDataSection.Name">
      <summary>Obtém o nome qualificado do nó.</summary>
      <returns>Para nós CDATA, o nome é <see langword="#cdata-section" />.</returns>
    </member>
    <member name="P:System.Xml.XmlCDataSection.NodeType">
      <summary>Obtém o tipo do nó atual.</summary>
      <returns>O tipo de nó. Para nós CDATA, o valor é XmlNodeType. CDATA.</returns>
    </member>
    <member name="P:System.Xml.XmlCDataSection.ParentNode">
      <summary>Obtém o pai deste nó (para os nós que podem ter pais).</summary>
      <returns>O <see langword="XmlNode" /> que é o pai do nó atual. Se um nó acabou de ser criado e ainda não foi adicionado à árvore ou se ele foi removido da árvore, o pai será <see langword="null" />. Para todos os outros nós, o valor retornado depende do <see cref="P:System.Xml.XmlNode.NodeType" /> do nó. A tabela a seguir descreve os possíveis valores retornados para a propriedade <see langword="ParentNode" />.</returns>
    </member>
    <member name="P:System.Xml.XmlCDataSection.PreviousText">
      <summary>Obtém o nó de texto que precede imediatamente este nó.</summary>
      <returns>Retorna <see cref="T:System.Xml.XmlNode" />.</returns>
    </member>
    <member name="M:System.Xml.XmlCDataSection.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Salva os filhos do nó no <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w">O <see langword="XmlWriter" /> no qual você deseja salvar.</param>
    </member>
    <member name="M:System.Xml.XmlCDataSection.WriteTo(System.Xml.XmlWriter)">
      <summary>Salva o nó no <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w">O <see langword="XmlWriter" /> no qual você deseja salvar.</param>
    </member>
    <member name="T:System.Xml.XmlCharacterData">
      <summary>Fornece métodos de manipulação que são usados por várias classes.</summary>
    </member>
    <member name="M:System.Xml.XmlCharacterData.#ctor(System.String,System.Xml.XmlDocument)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlCharacterData" />.</summary>
      <param name="data">A cadeia de caracteres que contém os dados de caractere a serem adicionados ao documento.</param>
      <param name="doc">
        <see cref="T:System.Xml.XmlDocument" /> para conter dados de caractere.</param>
    </member>
    <member name="M:System.Xml.XmlCharacterData.AppendData(System.String)">
      <summary>Acrescenta a cadeia de caracteres especificada no final dos dados de caractere do nó.</summary>
      <param name="strData">A cadeia de caracteres a ser inserida na cadeia de caracteres existente.</param>
    </member>
    <member name="P:System.Xml.XmlCharacterData.Data">
      <summary>Contém os dados do nó.</summary>
      <returns>Os dados do nó.</returns>
    </member>
    <member name="M:System.Xml.XmlCharacterData.DeleteData(System.Int32,System.Int32)">
      <summary>Remove um intervalo de caracteres do nó.</summary>
      <param name="offset">A posição na cadeia de caracteres para iniciar a exclusão.</param>
      <param name="count">O número de caracteres a ser excluído.</param>
    </member>
    <member name="P:System.Xml.XmlCharacterData.InnerText">
      <summary>Obtém ou define os valores concatenados do nó e de todos os filhos dele.</summary>
      <returns>Os valores concatenados do nó e todos os filhos do nó.</returns>
    </member>
    <member name="M:System.Xml.XmlCharacterData.InsertData(System.Int32,System.String)">
      <summary>Insere a cadeia de caracteres especificada no deslocamento de caractere informado.</summary>
      <param name="offset">A posição na cadeia de caracteres em que os dados de cadeia de caracteres fornecida serão inseridos.</param>
      <param name="strData">Os dados de cadeia de caracteres que deverão ser inseridos na cadeia de caracteres existente.</param>
    </member>
    <member name="P:System.Xml.XmlCharacterData.Length">
      <summary>Obtém o tamanho dos dados, em caracteres.</summary>
      <returns>O comprimento, em caracteres, da cadeia de caracteres na <see cref="P:System.Xml.XmlCharacterData.Data" /> propriedade. O comprimento pode ser zero; ou seja, os nós CharacterData podem estar vazios.</returns>
    </member>
    <member name="M:System.Xml.XmlCharacterData.ReplaceData(System.Int32,System.Int32,System.String)">
      <summary>Substitui o número especificado de caracteres começando no deslocamento especificado com a cadeia de caracteres especificada.</summary>
      <param name="offset">A posição na cadeia de caracteres para iniciar a substituição.</param>
      <param name="count">O número de caracteres a ser substituído.</param>
      <param name="strData">Os novos dados que substituem os dados antigos de cadeia de caracteres.</param>
    </member>
    <member name="M:System.Xml.XmlCharacterData.Substring(System.Int32,System.Int32)">
      <summary>Recupera uma subcadeia da cadeia de caracteres completa do intervalo especificado.</summary>
      <param name="offset">A posição na cadeia de caracteres para iniciar a recuperação. Um deslocamento de zero indica que o ponto de partida é o início dos dados.</param>
      <param name="count">O número de caracteres a ser recuperado.</param>
      <returns>A subcadeia de caracteres correspondente ao intervalo especificado.</returns>
    </member>
    <member name="P:System.Xml.XmlCharacterData.Value">
      <summary>Obtém ou define o valor do nó.</summary>
      <returns>O valor do nó.</returns>
      <exception cref="T:System.ArgumentException">O nó é somente leitura.</exception>
    </member>
    <member name="T:System.Xml.XmlComment">
      <summary>Representa o conteúdo de um comentário XML.</summary>
    </member>
    <member name="M:System.Xml.XmlComment.#ctor(System.String,System.Xml.XmlDocument)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlComment" />.</summary>
      <param name="comment">O conteúdo do elemento de comentário.</param>
      <param name="doc">O documento XML pai.</param>
    </member>
    <member name="M:System.Xml.XmlComment.CloneNode(System.Boolean)">
      <summary>Cria uma duplicação deste nó.</summary>
      <param name="deep">
        <see langword="true" /> para recursivamente clonar a subárvore abaixo do nó especificado; <see langword="false" /> para clonar apenas o próprio nó. Como nós de comentário não têm filhos, o nó clonado sempre inclui o conteúdo de texto, independentemente da configuração do parâmetro.</param>
      <returns>O nó clonado.</returns>
    </member>
    <member name="P:System.Xml.XmlComment.LocalName">
      <summary>Obtém o nome local do nó.</summary>
      <returns>Para nós de comentário, o valor <see langword="#comment" />é.</returns>
    </member>
    <member name="P:System.Xml.XmlComment.Name">
      <summary>Obtém o nome qualificado do nó.</summary>
      <returns>Para nós de comentário, o valor <see langword="#comment" />é.</returns>
    </member>
    <member name="P:System.Xml.XmlComment.NodeType">
      <summary>Obtém o tipo do nó atual.</summary>
      <returns>Para nós de comentário, o valor é XmlNodeType. Comment.</returns>
    </member>
    <member name="M:System.Xml.XmlComment.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Salva todos os filhos do nó no <see cref="T:System.Xml.XmlWriter" /> especificado. Como nós de comentário não têm filhos, esse método não tem efeito.</summary>
      <param name="w">O <see langword="XmlWriter" /> no qual você deseja salvar.</param>
    </member>
    <member name="M:System.Xml.XmlComment.WriteTo(System.Xml.XmlWriter)">
      <summary>Salva o nó no <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w">O <see langword="XmlWriter" /> no qual você deseja salvar.</param>
    </member>
    <member name="T:System.Xml.XmlConvert">
      <summary>Codifica e decodifica nomes XML e fornece métodos para converter entre tipos Common Language Runtime e tipos XSD (linguagem de definição de esquema XML). Ao converter tipos de dados, os valores retornados independem da localidade.</summary>
    </member>
    <member name="M:System.Xml.XmlConvert.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlConvert" />.</summary>
    </member>
    <member name="M:System.Xml.XmlConvert.DecodeName(System.String)">
      <summary>Decodifica um nome. Esse método faz o inverso dos métodos <see cref="M:System.Xml.XmlConvert.EncodeName(System.String)" /> e <see cref="M:System.Xml.XmlConvert.EncodeLocalName(System.String)" />.</summary>
      <param name="name">O nome a ser transformado.</param>
      <returns>O nome decodificado.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.EncodeLocalName(System.String)">
      <summary>Converte o nome em um nome XML local válido.</summary>
      <param name="name">O nome a ser codificado.</param>
      <returns>O texto codificado.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.EncodeName(System.String)">
      <summary>Converte o nome para um nome XML válido.</summary>
      <param name="name">Um nome a ser traduzido.</param>
      <returns>O nome junto com qualquer caractere inválido substituído por uma cadeia de caracteres de escape.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.EncodeNmToken(System.String)">
      <summary>Verifica se que o nome é válido de acordo com a especificação do XML.</summary>
      <param name="name">O nome a ser codificado.</param>
      <returns>O texto codificado.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.IsNCNameChar(System.Char)">
      <summary>Verifica se o caractere transmitido é um tipo de caractere válido diferente de dois-pontos.</summary>
      <param name="ch">O caractere que deverá ser verificado como um caractere diferente de dois-pontos.</param>
      <returns>
        <see langword="true" /> se o caractere for um tipo de caractere válido diferente de dois pontos; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.IsPublicIdChar(System.Char)">
      <summary>Retorna a instância de caractere transmitido se o caractere no argumento for um caractere válido de id pública, caso contrário, <see langword="null" />.</summary>
      <param name="ch">O objeto <see cref="T:System.Char" /> a ser validado.</param>
      <returns>O caractere transmitido se este for um caractere válido de id pública; caso contrário, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.IsStartNCNameChar(System.Char)">
      <summary>Verifica se o caractere transmitido é um tipo válido de caractere de nome inicial.</summary>
      <param name="ch">O caractere a ser validado.</param>
      <returns>
        <see langword="true" /> se o caractere for um tipo válido de caractere de nome inicial; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.IsWhitespaceChar(System.Char)">
      <summary>Verifica se o caractere transmitido é um caractere de espaço em branco XML válido.</summary>
      <param name="ch">O caractere a ser validado.</param>
      <returns>
        <see langword="true" /> se o caractere transmitido for um caractere de espaço em branco XML válido; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.IsXmlChar(System.Char)">
      <summary>Verifica se o caractere passado é um caractere XML válido.</summary>
      <param name="ch">O caractere a ser validado.</param>
      <returns>
        <see langword="true" /> se o caractere passado for um caractere XML válido; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.IsXmlSurrogatePair(System.Char,System.Char)">
      <summary>Verifica se o par alternativo de caracteres transmitido é um caractere XML válido.</summary>
      <param name="lowChar">O caractere alternativo a ser validado.</param>
      <param name="highChar">O caractere alternativo a ser validado.</param>
      <returns>
        <see langword="true" /> se o par alternativo de caracteres transmitido for um caractere XML válido; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToBoolean(System.String)">
      <summary>Converte o <see cref="T:System.String" /> em um <see cref="T:System.Boolean" /> equivalente.</summary>
      <param name="s">A cadeia de caracteres a ser convertida.</param>
      <returns>Um valor <see langword="Boolean" />, ou seja, <see langword="true" /> ou <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> é <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> não representa um valor <see langword="Boolean" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToByte(System.String)">
      <summary>Converte o <see cref="T:System.String" /> em um <see cref="T:System.Byte" /> equivalente.</summary>
      <param name="s">A cadeia de caracteres a ser convertida.</param>
      <returns>Um <see langword="Byte" /> equivalente da cadeia de caracteres.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> é <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> não está no formato correto.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> representa um número menor que <see cref="F:System.Byte.MinValue" /> ou maior que <see cref="F:System.Byte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToChar(System.String)">
      <summary>Converte o <see cref="T:System.String" /> em um <see cref="T:System.Char" /> equivalente.</summary>
      <param name="s">A cadeia de caracteres que contém um único caractere a ser convertido.</param>
      <returns>Um <see langword="Char" /> que representa o caractere único.</returns>
      <exception cref="T:System.ArgumentNullException">O valor do parâmetro <paramref name="s" /> é <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">O parâmetro <paramref name="s" /> contém mais de um caractere.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTime(System.String)">
      <summary>Converte o <see cref="T:System.String" /> em um <see cref="T:System.DateTime" /> equivalente.</summary>
      <param name="s">A cadeia de caracteres a ser convertida.</param>
      <returns>Um <see langword="DateTime" /> equivalente da cadeia de caracteres.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> é <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> é uma cadeia de caracteres vazia ou não está no formato correto.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTime(System.String,System.String)">
      <summary>Converte o <see cref="T:System.String" /> em um <see cref="T:System.DateTime" /> equivalente.</summary>
      <param name="s">A cadeia de caracteres a ser convertida.</param>
      <param name="format">A estrutura de formato a ser aplicada ao <see langword="DateTime" /> convertido. Os formatos válidos incluem “aaaa-MM-ddTHH:mm:sszzzzzz” e seus subconjuntos. A cadeia de caracteres é validada em relação a esse formato.</param>
      <returns>Um <see langword="DateTime" /> equivalente da cadeia de caracteres.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> é <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> ou <paramref name="format" /> é String.Empty 

ou - 
<paramref name="s" /> não contém uma data e hora que corresponde ao <paramref name="format" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTime(System.String,System.String[])">
      <summary>Converte o <see cref="T:System.String" /> em um <see cref="T:System.DateTime" /> equivalente.</summary>
      <param name="s">A cadeia de caracteres a ser convertida.</param>
      <param name="formats">Uma matriz que contém as estruturas de formato a serem aplicadas ao <see langword="DateTime" /> convertido. Os formatos válidos incluem “aaaa-MM-ddTHH:mm:sszzzzzz” e seus subconjuntos.</param>
      <returns>Um <see langword="DateTime" /> equivalente da cadeia de caracteres.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> é <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> ou um elemento de <paramref name="formats" /> é String.Empty 

ou - 
<paramref name="s" /> não contém uma data e hora que corresponda a um dos elementos de <paramref name="formats" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTime(System.String,System.Xml.XmlDateTimeSerializationMode)">
      <summary>Converte o <see cref="T:System.String" /> em um <see cref="T:System.DateTime" /> usando o especificado <see cref="T:System.Xml.XmlDateTimeSerializationMode" /></summary>
      <param name="s">O valor <see cref="T:System.String" /> a ser convertido.</param>
      <param name="dateTimeOption">Um dos valores de enumeração que especifica se a data deve ser convertida em hora local ou preservada como UTC (Tempo Universal Coordenado), em caso de data UTC.</param>
      <returns>Um equivalente de <see cref="T:System.DateTime" /> do <see cref="T:System.String" />.</returns>
      <exception cref="T:System.NullReferenceException">
        <paramref name="s" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dateTimeOption" /> é <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> é uma cadeia de caracteres vazia ou não está em um formato válido.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String)">
      <summary>Converte o <see cref="T:System.String" /> fornecido em um <see cref="T:System.DateTimeOffset" /> equivalente.</summary>
      <param name="s">A cadeia de caracteres a ser convertida.  
 Observação A cadeia de caracteres deve estar em conformidade com um subconjunto de Recomendação do W3C para o tipo dateTime do XML. Para obter mais informações, veja a seção dateTime da especificação do esquema XML.</param>
      <returns>O <see cref="T:System.DateTimeOffset" /> equivalentes da cadeia de caracteres fornecida.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O argumento transmitido para este método está fora do intervalo de valores permitidos. Para obter informações sobre os valores permitidos, consulte <see cref="T:System.DateTimeOffset" />.</exception>
      <exception cref="T:System.FormatException">O argumento transmitido para este método não está em conformidade com um subconjunto das Recomendações do W3C para o tipo dateTime do XML. Para obter mais informações, veja a seção dateTime da especificação do esquema XML.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String)">
      <summary>Converte o <see cref="T:System.String" /> fornecido em um <see cref="T:System.DateTimeOffset" /> equivalente.</summary>
      <param name="s">A cadeia de caracteres a ser convertida.</param>
      <param name="format">O formato do qual <paramref name="s" /> é convertido. O parâmetro de formato pode ser qualquer subconjunto da Recomendação do W3C para o tipo dateTime do XML. (Para obter mais informações, veja a seção dateTime da especificação do esquema XML.) A cadeia de caracteres <paramref name="s" /> é validada em relação a esse formato.</param>
      <returns>O <see cref="T:System.DateTimeOffset" /> equivalentes da cadeia de caracteres fornecida.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> é <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> ou <paramref name="format" /> é uma cadeia de caracteres vazia ou não está no formato especificado.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String[])">
      <summary>Converte o <see cref="T:System.String" /> fornecido em um <see cref="T:System.DateTimeOffset" /> equivalente.</summary>
      <param name="s">A cadeia de caracteres a ser convertida.</param>
      <param name="formats">Uma matriz de formatos dos quais <paramref name="s" /> pode ser convertido. Os formatos em <paramref name="formats" /> podem ser qualquer subconjunto de Recomendação do W3C para o tipo dateTime do XML. (Para obter mais informações, veja a seção dateTime da especificação do esquema XML.) A cadeia de caracteres <paramref name="s" /> é validada em relação a um desses formatos.</param>
      <returns>O <see cref="T:System.DateTimeOffset" /> equivalentes da cadeia de caracteres fornecida.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDecimal(System.String)">
      <summary>Converte o <see cref="T:System.String" /> em um <see cref="T:System.Decimal" /> equivalente.</summary>
      <param name="s">A cadeia de caracteres a ser convertida.</param>
      <returns>Um <see langword="Decimal" /> equivalente da cadeia de caracteres.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> é <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> não está no formato correto.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> representa um número menor que <see cref="F:System.Decimal.MinValue" /> ou maior que <see cref="F:System.Decimal.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDouble(System.String)">
      <summary>Converte o <see cref="T:System.String" /> em um <see cref="T:System.Double" /> equivalente.</summary>
      <param name="s">A cadeia de caracteres a ser convertida.</param>
      <returns>Um <see langword="Double" /> equivalente da cadeia de caracteres.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> é <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> não está no formato correto.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> representa um número menor que <see cref="F:System.Double.MinValue" /> ou maior que <see cref="F:System.Double.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToGuid(System.String)">
      <summary>Converte o <see cref="T:System.String" /> em um <see cref="T:System.Guid" /> equivalente.</summary>
      <param name="s">A cadeia de caracteres a ser convertida.</param>
      <returns>Um <see langword="Guid" /> equivalente da cadeia de caracteres.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToInt16(System.String)">
      <summary>Converte o <see cref="T:System.String" /> em um <see cref="T:System.Int16" /> equivalente.</summary>
      <param name="s">A cadeia de caracteres a ser convertida.</param>
      <returns>Um <see langword="Int16" /> equivalente da cadeia de caracteres.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> é <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> não está no formato correto.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> representa um número menor que <see cref="F:System.Int16.MinValue" /> ou maior que <see cref="F:System.Int16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToInt32(System.String)">
      <summary>Converte o <see cref="T:System.String" /> em um <see cref="T:System.Int32" /> equivalente.</summary>
      <param name="s">A cadeia de caracteres a ser convertida.</param>
      <returns>Um <see langword="Int32" /> equivalente da cadeia de caracteres.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> é <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> não está no formato correto.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> representa um número menor que <see cref="F:System.Int32.MinValue" /> ou maior que <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToInt64(System.String)">
      <summary>Converte o <see cref="T:System.String" /> em um <see cref="T:System.Int64" /> equivalente.</summary>
      <param name="s">A cadeia de caracteres a ser convertida.</param>
      <returns>Um <see langword="Int64" /> equivalente da cadeia de caracteres.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> é <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> não está no formato correto.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> representa um número menor que <see cref="F:System.Int64.MinValue" /> ou maior que <see cref="F:System.Int64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToSByte(System.String)">
      <summary>Converte o <see cref="T:System.String" /> em um <see cref="T:System.SByte" /> equivalente.</summary>
      <param name="s">A cadeia de caracteres a ser convertida.</param>
      <returns>Um <see langword="SByte" /> equivalente da cadeia de caracteres.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> é <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> não está no formato correto.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> representa um número menor que <see cref="F:System.SByte.MinValue" /> ou maior que <see cref="F:System.SByte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToSingle(System.String)">
      <summary>Converte o <see cref="T:System.String" /> em um <see cref="T:System.Single" /> equivalente.</summary>
      <param name="s">A cadeia de caracteres a ser convertida.</param>
      <returns>Um <see langword="Single" /> equivalente da cadeia de caracteres.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> é <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> não está no formato correto.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> representa um número menor que <see cref="F:System.Single.MinValue" /> ou maior que <see cref="F:System.Single.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Boolean)">
      <summary>Converte o <see cref="T:System.Boolean" /> para um <see cref="T:System.String" />.</summary>
      <param name="value">O valor a ser convertido.</param>
      <returns>Uma representação de cadeia de caracteres do <see langword="Boolean" />, ou seja, “true” ou “false”.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Byte)">
      <summary>Converte o <see cref="T:System.Byte" /> para um <see cref="T:System.String" />.</summary>
      <param name="value">O valor a ser convertido.</param>
      <returns>Uma representação da cadeia de caracteres do <see langword="Byte" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Char)">
      <summary>Converte o <see cref="T:System.Char" /> para um <see cref="T:System.String" />.</summary>
      <param name="value">O valor a ser convertido.</param>
      <returns>Uma representação da cadeia de caracteres do <see langword="Char" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTime)">
      <summary>Converte o <see cref="T:System.DateTime" /> para um <see cref="T:System.String" />.</summary>
      <param name="value">O valor a ser convertido.</param>
      <returns>Uma representação de cadeia de caracteres do <see langword="DateTime" /> no formato aaaa-MM-ddTHH:mm:ss em que “t” é uma literal de constante.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTime,System.String)">
      <summary>Converte o <see cref="T:System.DateTime" /> para um <see cref="T:System.String" />.</summary>
      <param name="value">O valor a ser convertido.</param>
      <param name="format">A estrutura de formato que define como exibir a cadeia de caracteres convertida. Os formatos válidos incluem “aaaa-MM-ddTHH:mm:sszzzzzz” e seus subconjuntos.</param>
      <returns>Uma representação de cadeia de caracteres do <see langword="DateTime" /> no formato especificado.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTime,System.Xml.XmlDateTimeSerializationMode)">
      <summary>Converte o <see cref="T:System.DateTime" /> em um <see cref="T:System.String" /> usando o <see cref="T:System.Xml.XmlDateTimeSerializationMode" /> especificado.</summary>
      <param name="value">O valor <see cref="T:System.DateTime" /> a ser convertido.</param>
      <param name="dateTimeOption">Um dos valores <see cref="T:System.Xml.XmlDateTimeSerializationMode" /> que especifica como tratar o valor <see cref="T:System.DateTime" />.</param>
      <returns>Um equivalente de <see cref="T:System.String" /> do <see cref="T:System.DateTime" />.</returns>
      <exception cref="T:System.ArgumentException">O valor <paramref name="dateTimeOption" /> não é válido.</exception>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="value" /> ou <paramref name="dateTimeOption" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTimeOffset)">
      <summary>Converte o <see cref="T:System.DateTimeOffset" /> fornecido em um <see cref="T:System.String" />.</summary>
      <param name="value">O <see cref="T:System.DateTimeOffset" /> a ser convertido.</param>
      <returns>Uma representação <see cref="T:System.String" /> do <see cref="T:System.DateTimeOffset" /> fornecido.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTimeOffset,System.String)">
      <summary>Converte o <see cref="T:System.DateTimeOffset" /> fornecido em um <see cref="T:System.String" /> no formato especificado.</summary>
      <param name="value">O <see cref="T:System.DateTimeOffset" /> a ser convertido.</param>
      <param name="format">O formato para o qual <paramref name="s" /> é convertido. O parâmetro de formato pode ser qualquer subconjunto da Recomendação do W3C para o tipo dateTime do XML. (Para obter mais informações, veja a seção dateTime da especificação do esquema XML.)</param>
      <returns>Uma representação <see cref="T:System.String" /> no formato especificado do <see cref="T:System.DateTimeOffset" /> fornecido.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Decimal)">
      <summary>Converte o <see cref="T:System.Decimal" /> para um <see cref="T:System.String" />.</summary>
      <param name="value">O valor a ser convertido.</param>
      <returns>Uma representação da cadeia de caracteres do <see langword="Decimal" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Double)">
      <summary>Converte o <see cref="T:System.Double" /> para um <see cref="T:System.String" />.</summary>
      <param name="value">O valor a ser convertido.</param>
      <returns>Uma representação da cadeia de caracteres do <see langword="Double" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Guid)">
      <summary>Converte o <see cref="T:System.Guid" /> para um <see cref="T:System.String" />.</summary>
      <param name="value">O valor a ser convertido.</param>
      <returns>Uma representação da cadeia de caracteres do <see langword="Guid" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Int16)">
      <summary>Converte o <see cref="T:System.Int16" /> para um <see cref="T:System.String" />.</summary>
      <param name="value">O valor a ser convertido.</param>
      <returns>Uma representação da cadeia de caracteres do <see langword="Int16" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Int32)">
      <summary>Converte o <see cref="T:System.Int32" /> para um <see cref="T:System.String" />.</summary>
      <param name="value">O valor a ser convertido.</param>
      <returns>Uma representação da cadeia de caracteres do <see langword="Int32" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Int64)">
      <summary>Converte o <see cref="T:System.Int64" /> para um <see cref="T:System.String" />.</summary>
      <param name="value">O valor a ser convertido.</param>
      <returns>Uma representação da cadeia de caracteres do <see langword="Int64" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.SByte)">
      <summary>Converte o <see cref="T:System.SByte" /> para um <see cref="T:System.String" />.</summary>
      <param name="value">O valor a ser convertido.</param>
      <returns>Uma representação da cadeia de caracteres do <see langword="SByte" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Single)">
      <summary>Converte o <see cref="T:System.Single" /> para um <see cref="T:System.String" />.</summary>
      <param name="value">O valor a ser convertido.</param>
      <returns>Uma representação da cadeia de caracteres do <see langword="Single" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.TimeSpan)">
      <summary>Converte o <see cref="T:System.TimeSpan" /> para um <see cref="T:System.String" />.</summary>
      <param name="value">O valor a ser convertido.</param>
      <returns>Uma representação da cadeia de caracteres do <see langword="TimeSpan" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.UInt16)">
      <summary>Converte o <see cref="T:System.UInt16" /> para um <see cref="T:System.String" />.</summary>
      <param name="value">O valor a ser convertido.</param>
      <returns>Uma representação da cadeia de caracteres do <see langword="UInt16" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.UInt32)">
      <summary>Converte o <see cref="T:System.UInt32" /> para um <see cref="T:System.String" />.</summary>
      <param name="value">O valor a ser convertido.</param>
      <returns>Uma representação da cadeia de caracteres do <see langword="UInt32" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.UInt64)">
      <summary>Converte o <see cref="T:System.UInt64" /> para um <see cref="T:System.String" />.</summary>
      <param name="value">O valor a ser convertido.</param>
      <returns>Uma representação da cadeia de caracteres do <see langword="UInt64" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToTimeSpan(System.String)">
      <summary>Converte o <see cref="T:System.String" /> em um <see cref="T:System.TimeSpan" /> equivalente.</summary>
      <param name="s">A cadeia de caracteres a ser convertida. É necessário que o formato de cadeia de caracteres esteja em conformidade com a recomendação do W3C de Esquema XML Parte 2: Recomendação de tipos de dados quanto à duração.</param>
      <returns>Um <see langword="TimeSpan" /> equivalente da cadeia de caracteres.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> não está no formato correto para representar um valor <see langword="TimeSpan" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToUInt16(System.String)">
      <summary>Converte o <see cref="T:System.String" /> em um <see cref="T:System.UInt16" /> equivalente.</summary>
      <param name="s">A cadeia de caracteres a ser convertida.</param>
      <returns>Um <see langword="UInt16" /> equivalente da cadeia de caracteres.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> é <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> não está no formato correto.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> representa um número menor que <see cref="F:System.UInt16.MinValue" /> ou maior que <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToUInt32(System.String)">
      <summary>Converte o <see cref="T:System.String" /> em um <see cref="T:System.UInt32" /> equivalente.</summary>
      <param name="s">A cadeia de caracteres a ser convertida.</param>
      <returns>Um <see langword="UInt32" /> equivalente da cadeia de caracteres.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> é <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> não está no formato correto.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> representa um número menor que <see cref="F:System.UInt32.MinValue" /> ou maior que <see cref="F:System.UInt32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToUInt64(System.String)">
      <summary>Converte o <see cref="T:System.String" /> em um <see cref="T:System.UInt64" /> equivalente.</summary>
      <param name="s">A cadeia de caracteres a ser convertida.</param>
      <returns>Um <see langword="UInt64" /> equivalente da cadeia de caracteres.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> é <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> não está no formato correto.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> representa um número menor que <see cref="F:System.UInt64.MinValue" /> ou maior que <see cref="F:System.UInt64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyName(System.String)">
      <summary>Verifica se o nome é um nome válido de acordo com a recomendação de W3C Extended Markup Language.</summary>
      <param name="name">O nome para verificar.</param>
      <returns>O nome, se ele for um nome XML válido.</returns>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="name" /> não é um nome XML válido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> é <see langword="null" /> ou String.Empty.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyNCName(System.String)">
      <summary>Verifica se o nome é um <see langword="NCName" /> válido de acordo com a recomendação de W3C Extended Markup Language. Um <see langword="NCName" /> é um nome que não pode conter dois-pontos.</summary>
      <param name="name">O nome para verificar.</param>
      <returns>O nome, se ele for um NCName válido.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> é <see langword="null" /> ou <c>String.Empty</c>.</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="name" /> não é um nome válido de sem dois-pontos.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyNMTOKEN(System.String)">
      <summary>Verifica se a cadeia de caracteres é um NMTOKEN válido de acordo com a recomendação do W3C de Esquema de XML Parte 2: Recomendação de tipos de dados</summary>
      <param name="name">A cadeia de caracteres que você deseja verificar.</param>
      <returns>O token de nome, se for um NMTOKEN válido.</returns>
      <exception cref="T:System.Xml.XmlException">A cadeia de caracteres não é um token de nome válido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyPublicId(System.String)">
      <summary>Retorna a instância de cadeia de caracteres transmitida se todos os caracteres no argumento de cadeia de caracteres forem caracteres de ID pública válidos.</summary>
      <param name="publicId">
        <see cref="T:System.String" /> que contém a id a ser validada.</param>
      <returns>A cadeia de caracteres transmitida se todos os caracteres no argumento forem caracteres válidos de ID pública.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyTOKEN(System.String)">
      <summary>Verifica se a cadeia de caracteres é um token válido de acordo com a recomendação do W3C de Esquema de XML Parte 2: Recomendação de tipos de dados.</summary>
      <param name="token">O valor de cadeia de caracteres que você deseja verificar.</param>
      <returns>O token, caso se trate de um token válido.</returns>
      <exception cref="T:System.Xml.XmlException">O valor da cadeia de caracteres não é um token válido.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyWhitespace(System.String)">
      <summary>Retorna a instância de cadeia de caracteres transmitida se todos os caracteres no argumento de cadeia de caracteres forem caracteres de espaço em branco válidos.</summary>
      <param name="content">
        <see cref="T:System.String" /> a ser verificado.</param>
      <returns>A instância de cadeia de caracteres transmitida se todos os caracteres no argumento de cadeia de caracteres forem caracteres de espaço em branco válidos; caso contrário, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyXmlChars(System.String)">
      <summary>Retorna a cadeia de caracteres passada se todos os caracteres e os caracteres do par substituto no argumento de cadeia de caracteres forem caracteres XML válidos, caso contrário, um <see langword="XmlException" /> será gerado com informações sobre o primeiro caractere inválido encontrado.</summary>
      <param name="content">
        <see cref="T:System.String" /> que contém caracteres a serem verificados.</param>
      <returns>A cadeia de caracteres transmitida se todos os caracteres e os caracteres do par alternativo no argumento de cadeia de caracteres forem caracteres XML válidos; caso contrário, um <see langword="XmlException" /> será gerado com informações sobre o primeiro caractere inválido encontrado.</returns>
    </member>
    <member name="T:System.Xml.XmlDateTimeSerializationMode">
      <summary>Especifica como tratar o valor temporal ao converter entre cadeias de caracteres e <see cref="T:System.DateTime" />.</summary>
    </member>
    <member name="F:System.Xml.XmlDateTimeSerializationMode.Local">
      <summary>Trate como horário local. Se o objeto <see cref="T:System.DateTime" /> representar um UTC (Tempo Universal Coordenado), ele será convertido para a hora local.</summary>
    </member>
    <member name="F:System.Xml.XmlDateTimeSerializationMode.RoundtripKind">
      <summary>Informações de fuso horário devem ser preservadas durante a conversão.</summary>
    </member>
    <member name="F:System.Xml.XmlDateTimeSerializationMode.Unspecified">
      <summary>Trate como uma hora local se um <see cref="T:System.DateTime" /> estiver sendo convertido em uma cadeia de caracteres. Se uma cadeia de caracteres está sendo convertida em <see cref="T:System.DateTime" />, converte em uma hora local se um fuso horário é especificado.</summary>
    </member>
    <member name="F:System.Xml.XmlDateTimeSerializationMode.Utc">
      <summary>Trate como um UTC. Se o objeto <see cref="T:System.DateTime" /> representar uma hora local, ele será convertido em um UTC.</summary>
    </member>
    <member name="T:System.Xml.XmlDeclaration">
      <summary>Representa o nó de declaração XML &lt;?xml version='1.0'...?&gt;.</summary>
    </member>
    <member name="M:System.Xml.XmlDeclaration.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlDeclaration" />.</summary>
      <param name="version">A versão do XML; consulte a propriedade <see cref="P:System.Xml.XmlDeclaration.Version" />.</param>
      <param name="encoding">O esquema de codificação; consulte a propriedade <see cref="P:System.Xml.XmlDeclaration.Encoding" />.</param>
      <param name="standalone">Indica se o documento XML depende de DTD externo; consulte a propriedade <see cref="P:System.Xml.XmlDeclaration.Standalone" />.</param>
      <param name="doc">O documento XML pai.</param>
    </member>
    <member name="M:System.Xml.XmlDeclaration.CloneNode(System.Boolean)">
      <summary>Cria uma duplicação deste nó.</summary>
      <param name="deep">
        <see langword="true" /> para recursivamente clonar a subárvore abaixo do nó especificado; <see langword="false" /> para clonar apenas o próprio nó. Como nós <see langword="XmlDeclaration" /> não têm filhos, o nó clonado sempre inclui o valor dos dados, independentemente da configuração do parâmetro.</param>
      <returns>O nó clonado.</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.Encoding">
      <summary>Obtém ou define o nível de codificação do documento XML.</summary>
      <returns>O nome de codificação de caracteres válido. Os nomes de codificação de caracteres mais comumente com suporte para XML são os seguintes:  
  Categoria  

  Nomes de codificação  

  Unicode  

  UTF-8, UTF-16  

  ISO 10646  

  ISO-10646-UCS-2, ISO-10646-UCS-4  

  ISO 8859  

  ISO-8859-n (onde "n" é um dígito de 1 a 9)  

  JIS X-0208-1997  

  ISO-2022-JP, Shift_JIS, EUC-JP  

   

 Esse valor é opcional. Se um valor não for definido, essa propriedade retornará String. Empty.  
Se um atributo de codificação não for incluído, a codificação para UTF-8 será considerada quando o documento for gravado ou salvo.</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.InnerText">
      <summary>Obtém ou define os valores concatenados do <see langword="XmlDeclaration" />.</summary>
      <returns>Os valores concatenados do <see langword="XmlDeclaration" /> (ou seja, tudo entre <c>&lt;? xml</c> e <c>?&gt;</c>).</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.LocalName">
      <summary>Obtém o nome local do nó.</summary>
      <returns>Para <see langword="XmlDeclaration" /> nós, o nome local é <see langword="xml" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.Name">
      <summary>Obtém o nome qualificado do nó.</summary>
      <returns>Para nós <see langword="XmlDeclaration" />, o nome é <see langword="xml" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.NodeType">
      <summary>Obtém o tipo do nó atual.</summary>
      <returns>Para <see langword="XmlDeclaration" /> nós, esse valor é XmlNodeType.XmlDeclaration.</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.Standalone">
      <summary>Obtém ou define o valor de atributo independente.</summary>
      <returns>Os valores válidos são <see langword="yes" /> se todas as declarações de entidade exigidas pelo documento XML estão contidas dentro do documento ou <see langword="no" /> se uma definição de tipo de documento externa (DTD) for necessária. Se um atributo independente não estiver presente na declaração XML, essa propriedade retornará String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.Value">
      <summary>Obtém ou define o valor de <see langword="XmlDeclaration" />.</summary>
      <returns>O conteúdo a <see langword="XmlDeclaration" /> (ou seja, tudo entre <c>&lt;? xml</c> e <c>?&gt;</c>).</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.Version">
      <summary>Obtém a versão XML do documento.</summary>
      <returns>O valor é sempre <see langword="1.0" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDeclaration.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Salva os filhos do nó no <see cref="T:System.Xml.XmlWriter" /> especificado. Como nós <see langword="XmlDeclaration" /> não têm filhos, esse método não tem nenhum efeito.</summary>
      <param name="w">O <see langword="XmlWriter" /> no qual você deseja salvar.</param>
    </member>
    <member name="M:System.Xml.XmlDeclaration.WriteTo(System.Xml.XmlWriter)">
      <summary>Salva o nó no <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w">O <see langword="XmlWriter" /> no qual você deseja salvar.</param>
    </member>
    <member name="T:System.Xml.XmlDocument">
      <summary>Representa um documento XML. Você pode usar essa classe para carregar, validar, editar, adicionar e posicionar o XML em um documento.</summary>
    </member>
    <member name="M:System.Xml.XmlDocument.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlDocument" />.</summary>
    </member>
    <member name="M:System.Xml.XmlDocument.#ctor(System.Xml.XmlImplementation)">
      <summary>Inicializa uma nova instância da classe <see langword="XmlDocument" /> com o <see cref="T:System.Xml.XmlImplementation" /> especificado.</summary>
      <param name="imp">O <see langword="XmlImplementation" /> a ser usado.</param>
    </member>
    <member name="M:System.Xml.XmlDocument.#ctor(System.Xml.XmlNameTable)">
      <summary>Inicializa uma nova instância da classe <see langword="XmlDocument" /> com o <see cref="T:System.Xml.XmlNameTable" /> especificado.</summary>
      <param name="nt">O <see langword="XmlNameTable" /> a ser usado.</param>
    </member>
    <member name="P:System.Xml.XmlDocument.BaseURI">
      <summary>Obtém o URI base do nó atual.</summary>
      <returns>O local do qual o nó foi carregado.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CloneNode(System.Boolean)">
      <summary>Cria uma duplicação deste nó.</summary>
      <param name="deep">
        <see langword="true" /> para recursivamente clonar a subárvore abaixo do nó especificado; <see langword="false" /> para clonar apenas o próprio nó.</param>
      <returns>O nó <see langword="XmlDocument" /> clonado.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateAttribute(System.String)">
      <summary>Cria um <see cref="T:System.Xml.XmlAttribute" /> com o <see cref="P:System.Xml.XmlDocument.Name" /> especificado.</summary>
      <param name="name">O nome qualificado do atributo. Se o nome contiver dois-pontos, a propriedade <see cref="P:System.Xml.XmlNode.Prefix" /> refletirá a parte do nome do anterior ao primeiro e a propriedade <see cref="P:System.Xml.XmlDocument.LocalName" /> refletirá a parte posterior a ele. O <see cref="P:System.Xml.XmlNode.NamespaceURI" /> permanece vazio, a menos que o prefixo seja interno e reconhecido como xmlns. Nesse caso, <see langword="NamespaceURI" /> tem um valor de <c></c>.</param>
      <returns>O novo <see langword="XmlAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateAttribute(System.String,System.String)">
      <summary>Cria um <see cref="T:System.Xml.XmlAttribute" /> com o nome e dados especificados e <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</summary>
      <param name="qualifiedName">O nome qualificado do atributo. Se o nome contiver dois-pontos, a propriedade <see cref="P:System.Xml.XmlNode.Prefix" /> refletirá a parte do nome anterior aos dois-pontos e a propriedade <see cref="P:System.Xml.XmlDocument.LocalName" /> refletirá a parte do nome posterior a ele.</param>
      <param name="namespaceURI">O namespaceURI do atributo. Se o nome qualificado incluir um prefixo de xmlns, esse parâmetro precisará ser <c></c>.</param>
      <returns>O novo <see langword="XmlAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateAttribute(System.String,System.String,System.String)">
      <summary>Cria um <see cref="T:System.Xml.XmlAttribute" /> com o <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.LocalName" /> e <see cref="P:System.Xml.XmlNode.NamespaceURI" /> especificados.</summary>
      <param name="prefix">O prefixo do atributo (se houver). String.Empty e <see langword="null" /> são equivalentes.</param>
      <param name="localName">O nome local do atributo.</param>
      <param name="namespaceURI">O URI do namespace do atributo (se houver). String.Empty e <see langword="null" /> são equivalentes. Se o <paramref name="prefix" /> for xmlns, esse parâmetro precisará ser <c></c>, caso contrário, uma exceção será gerada.</param>
      <returns>O novo <see langword="XmlAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateCDataSection(System.String)">
      <summary>Cria um <see cref="T:System.Xml.XmlCDataSection" /> que contém os dados especificados.</summary>
      <param name="data">O conteúdo do novo <see langword="XmlCDataSection" />.</param>
      <returns>O novo <see langword="XmlCDataSection" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateComment(System.String)">
      <summary>Cria um <see cref="T:System.Xml.XmlComment" /> que contém os dados especificados.</summary>
      <param name="data">O conteúdo do novo <see langword="XmlComment" />.</param>
      <returns>O novo <see langword="XmlComment" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateDefaultAttribute(System.String,System.String,System.String)">
      <summary>Cria um atributo padrão com o prefixo especificado, o nome local e o URI de namespace.</summary>
      <param name="prefix">O prefixo do atributo (se houver).</param>
      <param name="localName">O nome local do atributo.</param>
      <param name="namespaceURI">O URI do namespace do atributo (se houver).</param>
      <returns>O novo <see cref="T:System.Xml.XmlAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateDocumentFragment">
      <summary>Cria um <see cref="T:System.Xml.XmlDocumentFragment" />.</summary>
      <returns>O novo <see langword="XmlDocumentFragment" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateDocumentType(System.String,System.String,System.String,System.String)">
      <summary>Retorna um novo objeto <see cref="T:System.Xml.XmlDocumentType" />.</summary>
      <param name="name">O nome do tipo de documento.</param>
      <param name="publicId">O identificador público do tipo de documento ou <see langword="null" />. É possível especificar um URI público e também um identificador do sistema para identificar o local do subconjunto de DTD externo.</param>
      <param name="systemId">O identificador do sistema do tipo de documento ou <see langword="null" />. Especifica a URL do local do arquivo para o subconjunto de DTD externo.</param>
      <param name="internalSubset">O subconjunto de DTD interno do tipo de documento ou <see langword="null" />.</param>
      <returns>O novo <see langword="XmlDocumentType" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateElement(System.String)">
      <summary>Cria um elemento com o nome especificado.</summary>
      <param name="name">O nome qualificado do elemento. Se o nome contiver dois-pontos, a propriedade <see cref="P:System.Xml.XmlNode.Prefix" /> refletirá a parte do nome anterior a ele e a propriedade <see cref="P:System.Xml.XmlDocument.LocalName" /> refletirá a parte posterior a ele. O nome qualificado não pode incluir um prefixo ‘xmlns’.</param>
      <returns>O novo <see langword="XmlElement" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateElement(System.String,System.String)">
      <summary>Cria um <see cref="T:System.Xml.XmlElement" /> com o nome qualificado e <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</summary>
      <param name="qualifiedName">O nome qualificado do elemento. Se o nome contiver dois-pontos, a propriedade <see cref="P:System.Xml.XmlNode.Prefix" /> refletirá a parte do nome anterior aos dois-pontos e a propriedade <see cref="P:System.Xml.XmlDocument.LocalName" /> refletirá a parte do nome posterior a ele. O nome qualificado não pode incluir um prefixo ‘xmlns’.</param>
      <param name="namespaceURI">O URI do namespace do elemento.</param>
      <returns>O novo <see langword="XmlElement" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateElement(System.String,System.String,System.String)">
      <summary>Cria um elemento com o <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.LocalName" /> e <see cref="P:System.Xml.XmlNode.NamespaceURI" /> especificados.</summary>
      <param name="prefix">O prefixo do novo elemento (se houver). String.Empty e <see langword="null" /> são equivalentes.</param>
      <param name="localName">O nome local do novo elemento.</param>
      <param name="namespaceURI">O URI do namespace do novo elemento (se houver). String.Empty e <see langword="null" /> são equivalentes.</param>
      <returns>O novo <see cref="T:System.Xml.XmlElement" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateEntityReference(System.String)">
      <summary>Cria um <see cref="T:System.Xml.XmlEntityReference" /> com o nome especificado.</summary>
      <param name="name">O nome da referência da entidade.</param>
      <returns>O novo <see langword="XmlEntityReference" />.</returns>
      <exception cref="T:System.ArgumentException">O nome é inválido (por exemplo, nomes que começam com '#' são inválidos.)</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateNavigator">
      <summary>Cria um novo objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> para navegar nesse documento.</summary>
      <returns>Um objeto <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateNavigator(System.Xml.XmlNode)">
      <summary>Cria um objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> para navegar neste documento posicionado no <see cref="T:System.Xml.XmlNode" /> especificado.</summary>
      <param name="node">O <see cref="T:System.Xml.XmlNode" /> no qual você deseja que o navegador seja inicialmente posicionado.</param>
      <returns>Um objeto <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateNode(System.String,System.String,System.String)">
      <summary>Cria um <see cref="T:System.Xml.XmlNode" /> com o tipo de nó especificado, <see cref="P:System.Xml.XmlDocument.Name" /> e <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</summary>
      <param name="nodeTypeString">Versão de cadeia de caracteres do <see cref="T:System.Xml.XmlNodeType" /> do novo nó. Esse parâmetro deve ser um dos valores listados na tabela a seguir.</param>
      <param name="name">O nome qualificado do novo nó. Se o nome contiver dois-pontos, ela será analisada em componentes <see cref="P:System.Xml.XmlNode.Prefix" /> e <see cref="P:System.Xml.XmlDocument.LocalName" />.</param>
      <param name="namespaceURI">O URI do namespace do novo nó.</param>
      <returns>O novo <see langword="XmlNode" />.</returns>
      <exception cref="T:System.ArgumentException">O nome não foi fornecido e o <see langword="XmlNodeType" /> requer um nome ou <paramref name="nodeTypeString" /> não é uma das cadeias de caracteres listadas abaixo.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateNode(System.Xml.XmlNodeType,System.String,System.String)">
      <summary>Cria um <see cref="T:System.Xml.XmlNode" /> com o <see cref="T:System.Xml.XmlNodeType" />, <see cref="P:System.Xml.XmlDocument.Name" /> e <see cref="P:System.Xml.XmlNode.NamespaceURI" /> especificados.</summary>
      <param name="type">O <see langword="XmlNodeType" /> do novo nó.</param>
      <param name="name">O nome qualificado do novo nó. Se o nome contiver dois-pontos, ele será analisado em componentes <see cref="P:System.Xml.XmlNode.Prefix" /> e <see cref="P:System.Xml.XmlDocument.LocalName" />.</param>
      <param name="namespaceURI">O URI do namespace do novo nó.</param>
      <returns>O novo <see langword="XmlNode" />.</returns>
      <exception cref="T:System.ArgumentException">O nome não foi fornecido e o <see langword="XmlNodeType" /> exige um nome.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateNode(System.Xml.XmlNodeType,System.String,System.String,System.String)">
      <summary>Cria um <see cref="T:System.Xml.XmlNode" /> com o <see cref="T:System.Xml.XmlNodeType" />, <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.Name" /> e <see cref="P:System.Xml.XmlNode.NamespaceURI" /> especificados.</summary>
      <param name="type">O <see langword="XmlNodeType" /> do novo nó.</param>
      <param name="prefix">O prefixo do novo nó.</param>
      <param name="name">O nome local do novo nó.</param>
      <param name="namespaceURI">O URI do namespace do novo nó.</param>
      <returns>O novo <see langword="XmlNode" />.</returns>
      <exception cref="T:System.ArgumentException">O nome não foi fornecido e o <see langword="XmlNodeType" /> exige um nome.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateProcessingInstruction(System.String,System.String)">
      <summary>Cria um <see cref="T:System.Xml.XmlProcessingInstruction" /> com o nome e dados especificados.</summary>
      <param name="target">O nome da instrução de processamento.</param>
      <param name="data">Os dados para a instrução de processamento.</param>
      <returns>O novo <see langword="XmlProcessingInstruction" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateSignificantWhitespace(System.String)">
      <summary>Cria um nó <see cref="T:System.Xml.XmlSignificantWhitespace" />.</summary>
      <param name="text">A cadeia de caracteres deve conter somente os seguintes caracteres &amp;#20; &amp;#10; &amp;#13; e &amp;#9;</param>
      <returns>Um novo nó <see langword="XmlSignificantWhitespace" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateTextNode(System.String)">
      <summary>Cria um <see cref="T:System.Xml.XmlText" /> com o texto especificado.</summary>
      <param name="text">O texto para o nó Texto.</param>
      <returns>O novo nó <see langword="XmlText" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateWhitespace(System.String)">
      <summary>Cria um nó <see cref="T:System.Xml.XmlWhitespace" />.</summary>
      <param name="text">A cadeia de caracteres deve conter somente os seguintes caracteres &amp;#20; &amp;#10; &amp;#13; e &amp;#9;</param>
      <returns>Um novo nó <see langword="XmlWhitespace" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateXmlDeclaration(System.String,System.String,System.String)">
      <summary>Cria um nó <see cref="T:System.Xml.XmlDeclaration" /> com os valores especificados.</summary>
      <param name="version">A versão deve ser “1.0”.</param>
      <param name="encoding">O valor do atributo de codificação. Essa é a codificação usada quando você salva o <see cref="T:System.Xml.XmlDocument" /> em um arquivo ou um fluxo, portanto, ele deve ser definido como uma cadeia de caracteres com suporte na classe <see cref="T:System.Text.Encoding" />, caso contrário <see cref="M:System.Xml.XmlDocument.Save(System.String)" /> falhará. Se isso for <see langword="null" /> ou String.Empty, o método <see langword="Save" /> não grava um atributo de codificação na declaração XML e, portanto, o padrão de codificação UTF-8 é usado.  
Observação: Se o <see langword="XmlDocument" /> é salvo como um <see cref="T:System.IO.TextWriter" /> ou um <see cref="T:System.Xml.XmlTextWriter" />, esse valor de codificação é descartado. Em vez disso, a codificação do <see langword="TextWriter" /> ou <see langword="XmlTextWriter" /> é usada. Isso garante que o XML gravado possa ser lido usando a codificação correta.</param>
      <param name="standalone">O valor deve ser “sim” ou “não”. Se isso for <see langword="null" /> ou String.Empty, o método <see langword="Save" /> não gravará um atributo autônomo na declaração XML.</param>
      <returns>O novo nó <see langword="XmlDeclaration" />.</returns>
      <exception cref="T:System.ArgumentException">Os valores de <paramref name="version" /> ou <paramref name="standalone" /> são diferentes daqueles especificados acima.</exception>
    </member>
    <member name="P:System.Xml.XmlDocument.DocumentElement">
      <summary>Obtém a raiz <see cref="T:System.Xml.XmlElement" /> para o documento.</summary>
      <returns>O <see langword="XmlElement" /> que representa a raiz da árvore do documento XML. Se não existir nenhuma raiz, será retornado <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.DocumentType">
      <summary>Obtém o nó que contém a declaração DOCTYPE.</summary>
      <returns>O <see cref="T:System.Xml.XmlNode" /> que contém o DocumentType (declaração DOCTYPE).</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.GetElementById(System.String)">
      <summary>Obtém o <see cref="T:System.Xml.XmlElement" /> com a ID especificada.</summary>
      <param name="elementId">A ID do atributo a ser correspondida.</param>
      <returns>O <see langword="XmlElement" /> com a ID correspondente, ou <see langword="null" />, se nenhum elemento correspondente for encontrado.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.GetElementsByTagName(System.String)">
      <summary>Retorna um <see cref="T:System.Xml.XmlNodeList" /> que contém uma lista de todos os elementos descendentes que correspondem ao <see cref="P:System.Xml.XmlDocument.Name" /> especificado.</summary>
      <param name="name">O nome qualificado para correspondência. Ele é comparado com a propriedade <see langword="Name" /> do nó correspondente. O valor especial “*” corresponde a todas as marcas.</param>
      <returns>Um <see cref="T:System.Xml.XmlNodeList" /> que contém uma lista de todos os nós correspondentes. Se nenhum nó corresponder a <paramref name="name" />, a coleção retornada estará vazia.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.GetElementsByTagName(System.String,System.String)">
      <summary>Retorna um <see cref="T:System.Xml.XmlNodeList" /> que contém uma lista de todos os elementos descendentes que correspondem ao <see cref="P:System.Xml.XmlDocument.LocalName" /> e <see cref="P:System.Xml.XmlNode.NamespaceURI" /> especificados.</summary>
      <param name="localName">O LocalName de correspondência. O valor especial “*” corresponde a todas as marcas.</param>
      <param name="namespaceURI">NamespaceURI de correspondência.</param>
      <returns>Um <see cref="T:System.Xml.XmlNodeList" /> que contém uma lista de todos os nós correspondentes. Se nenhum nó corresponder aos <paramref name="localName" /> e <paramref name="namespaceURI" /> especificados, a coleção retornada ficará vazia.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.Implementation">
      <summary>Obtém o objeto <see cref="T:System.Xml.XmlImplementation" /> para o documento atual.</summary>
      <returns>O <see langword="XmlImplementation" /> objeto do documento atual.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)">
      <summary>Importa um nó de outro documento para o documento atual.</summary>
      <param name="node">O nó que está sendo importado.</param>
      <param name="deep">
        <see langword="true" /> para executar um clone profundo; caso contrário, <see langword="false" />.</param>
      <returns>O <see cref="T:System.Xml.XmlNode" /> importado.</returns>
      <exception cref="T:System.InvalidOperationException">Chamando esse método em um tipo de nó que não pode ser importado.</exception>
    </member>
    <member name="P:System.Xml.XmlDocument.InnerText">
      <summary>Aciona um <see cref="T:System.InvalidOperationException" /> em todos os casos.</summary>
      <returns>Os valores do nó e todos os seus nós filho.</returns>
      <exception cref="T:System.InvalidOperationException">Em todos os casos.</exception>
    </member>
    <member name="P:System.Xml.XmlDocument.InnerXml">
      <summary>Obtém ou define a marcação que representa os filhos do nó atual.</summary>
      <returns>A marcação dos filhos do nó atual.</returns>
      <exception cref="T:System.Xml.XmlException">O XML especificado ao definir essa propriedade não está bem formado.</exception>
    </member>
    <member name="P:System.Xml.XmlDocument.IsReadOnly">
      <summary>Obtém um valor que indica se o nó atual é somente leitura.</summary>
      <returns>
        <see langword="true" /> se o nó atual for somente leitura; caso contrário, <see langword="false" />. Os nós <see langword="XmlDocument" /> sempre retornam <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.Load(System.IO.Stream)">
      <summary>Carrega o documento XML do fluxo especificado.</summary>
      <param name="inStream">O fluxo que contém o documento XML a ser carregado.</param>
      <exception cref="T:System.Xml.XmlException">Há um erro de carregamento ou de análise no XML. Nesse caso, um <see cref="T:System.IO.FileNotFoundException" /> é acionado.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Load(System.IO.TextReader)">
      <summary>Carrega o documento XML da <see cref="T:System.IO.TextReader" /> especificada.</summary>
      <param name="txtReader">O <see langword="TextReader" /> usado para alimentar os dados XML no documento.</param>
      <exception cref="T:System.Xml.XmlException">Há um erro de carregamento ou de análise no XML. Nesse caso, o documento permanece vazio.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Load(System.String)">
      <summary>Carrega o documento XML da URL especificada.</summary>
      <param name="filename">URL do arquivo que contém o documento XML a ser carregado. A URL pode ser um arquivo local ou uma URL HTTP (um endereço Web).</param>
      <exception cref="T:System.Xml.XmlException">Há um erro de carregamento ou de análise no XML. Nesse caso, um <see cref="T:System.IO.FileNotFoundException" /> é acionado.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="filename" /> é uma cadeia de comprimento zero, contém somente espaços em branco ou um ou mais caracteres inválidos, conforme definido por <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filename" /> é <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho especificado, o nome de arquivo, ou ambos excedem o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">O caminho especificado é inválido (por exemplo, ele está em uma unidade não mapeada).</exception>
      <exception cref="T:System.IO.IOException">Um erro de E/S ocorreu ao abrir o arquivo.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="filename" /> especificou um arquivo somente leitura.  

ou - 
Não há suporte para essa operação na plataforma atual.  

ou - 
<paramref name="filename" /> especificou um diretório.  

ou - 
O chamador não tem a permissão necessária.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo especificado em <paramref name="filename" /> não foi encontrado.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="filename" /> está em um formato inválido.</exception>
      <exception cref="T:System.Security.SecurityException">O chamador não tem a permissão necessária.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Load(System.Xml.XmlReader)">
      <summary>Carrega o documento XML da <see cref="T:System.Xml.XmlReader" /> especificada.</summary>
      <param name="reader">O <see langword="XmlReader" /> usado para alimentar os dados XML no documento.</param>
      <exception cref="T:System.Xml.XmlException">Há um erro de carregamento ou de análise no XML. Nesse caso, o documento permanece vazio.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.LoadXml(System.String)">
      <summary>Carrega o documento XML da cadeia de caracteres especificada.</summary>
      <param name="xml">Cadeia de caracteres que contém o documento XML a ser carregado.</param>
      <exception cref="T:System.Xml.XmlException">Há um erro de carregamento ou de análise no XML. Nesse caso, o documento permanece vazio.</exception>
    </member>
    <member name="P:System.Xml.XmlDocument.LocalName">
      <summary>Obtém o nome local do nó.</summary>
      <returns>Para nós <see langword="XmlDocument" />, o nome local é #document.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.Name">
      <summary>Obtém o nome qualificado do nó.</summary>
      <returns>Para nós <see langword="XmlDocument" />, o nome é #document.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.NameTable">
      <summary>Obtém o <see cref="T:System.Xml.XmlNameTable" /> associado à essa implementação.</summary>
      <returns>Um <see langword="XmlNameTable" /> que permite obter a versão atomizada de uma cadeia de caracteres dentro do documento.</returns>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeChanged">
      <summary>Ocorre quando o <see cref="P:System.Xml.XmlNode.Value" /> de um nó que pertence a este documento foi alterado.</summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeChanging">
      <summary>Ocorre quando o <see cref="P:System.Xml.XmlNode.Value" /> de um nó que pertence a este documento está prestes a ser alterado.</summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeInserted">
      <summary>Ocorre quando um nó que pertence a este documento foi inserido em outro nó.</summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeInserting">
      <summary>Ocorre quando um nó que pertence a este documento está prestes a ser inserido em outro nó.</summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeRemoved">
      <summary>Ocorre quando um nó que pertence a este documento foi removido do pai dele.</summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeRemoving">
      <summary>Ocorre quando um nó que pertence a este documento está prestes a ser removido do documento.</summary>
    </member>
    <member name="P:System.Xml.XmlDocument.NodeType">
      <summary>Obtém o tipo do nó atual.</summary>
      <returns>O tipo de nó. Para nós <see langword="XmlDocument" />, esse valor é XmlNodeType.Document.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.OwnerDocument">
      <summary>Obtém o <see cref="T:System.Xml.XmlDocument" /> ao qual pertence o nó atual.</summary>
      <returns>Para <see langword="XmlDocument" /> nós (<see cref="P:System.Xml.XmlDocument.NodeType" /> é igual a XmlNodeType. Document), essa propriedade <see langword="null" />sempre retorna.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.ParentNode">
      <summary>Obtém o nó pai desse nó (para os nós que podem ter pais).</summary>
      <returns>Sempre retorna <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.PreserveWhitespace">
      <summary>Obtém ou define um valor que indica se os espaços em branco devem ser preservados no conteúdo do elemento.</summary>
      <returns>
        <see langword="true" /> para preservar espaços em branco; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.ReadNode(System.Xml.XmlReader)">
      <summary>Cria um objeto <see cref="T:System.Xml.XmlNode" /> com base nas informações no <see cref="T:System.Xml.XmlReader" />. O leitor deve ser posicionado em um nó ou atributo.</summary>
      <param name="reader">O código-fonte XML</param>
      <returns>O novo <see langword="XmlNode" /> ou <see langword="null" /> não se houver mais nenhum nó.</returns>
      <exception cref="T:System.NullReferenceException">O leitor é posicionado em um tipo de nó que não converte em um nó DOM válido (por exemplo, EndElement ou EndEntity).</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Save(System.IO.Stream)">
      <summary>Salva o documento XML no fluxo especificado.</summary>
      <param name="outStream">O fluxo no qual você deseja salvar.</param>
      <exception cref="T:System.Xml.XmlException">A operação não resultaria em um documento XML bem formado (por exemplo, sem declarações XML duplicadas ou elementos do documento).</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Save(System.IO.TextWriter)">
      <summary>Salva o documento XML no <see cref="T:System.IO.TextWriter" /> especificado.</summary>
      <param name="writer">O <see langword="TextWriter" /> no qual você deseja salvar.</param>
      <exception cref="T:System.Xml.XmlException">A operação não resultaria em um documento XML bem formado (por exemplo, sem declarações XML duplicadas ou elementos do documento).</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Save(System.String)">
      <summary>Salva o documento XML no arquivo especificado. Se o arquivo especificado existir, este método o substituirá.</summary>
      <param name="filename">O local do arquivo em que você deseja salvar o documento.</param>
      <exception cref="T:System.Xml.XmlException">A operação não resultaria em um documento XML bem formado (por exemplo, sem declarações XML duplicadas ou elementos do documento).</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Save(System.Xml.XmlWriter)">
      <summary>Salva o documento XML no <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w">O <see langword="XmlWriter" /> no qual você deseja salvar.</param>
      <exception cref="T:System.Xml.XmlException">A operação não resultaria em um documento XML bem formado (por exemplo, sem declarações XML duplicadas ou elementos do documento).</exception>
    </member>
    <member name="P:System.Xml.XmlDocument.SchemaInfo">
      <summary>Retorna o PSVI (Post-Schema-Validation-Infoset) do nó.</summary>
      <returns>O <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> objeto que representa o PSVI do nó.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.Schemas">
      <summary>Obtém ou define o objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> associado a esse <see cref="T:System.Xml.XmlDocument" />.</summary>
      <returns>Um objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que contém os esquemas XSD (linguagem de definição de esquema XML) associados a esse <see cref="T:System.Xml.XmlDocument" />, caso contrário, um objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> vazio.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.Validate(System.Xml.Schema.ValidationEventHandler)">
      <summary>Valida o <see cref="T:System.Xml.XmlDocument" /> em relação aos esquemas XSD (Linguagem de Definição de Esquema XML) contidos na propriedade <see cref="P:System.Xml.XmlDocument.Schemas" />.</summary>
      <param name="validationEventHandler">O objeto <see cref="T:System.Xml.Schema.ValidationEventHandler" /> que recebe informações sobre erros e avisos de validação de esquema.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Ocorreu um evento de validação de esquema e nenhum objeto <see cref="T:System.Xml.Schema.ValidationEventHandler" /> foi especificado.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Validate(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlNode)">
      <summary>Valida o objeto <see cref="T:System.Xml.XmlNode" /> especificado para os esquemas de XSD (Linguagem de Definição de Esquema XML) contidos na propriedade <see cref="P:System.Xml.XmlDocument.Schemas" />.</summary>
      <param name="validationEventHandler">O objeto <see cref="T:System.Xml.Schema.ValidationEventHandler" /> que recebe informações sobre erros e avisos de validação de esquema.</param>
      <param name="nodeToValidate">O objeto <see cref="T:System.Xml.XmlNode" /> criado com base em um <see cref="T:System.Xml.XmlDocument" /> a ser validado.</param>
      <exception cref="T:System.ArgumentException">O parâmetro de objeto <see cref="T:System.Xml.XmlNode" /> não foi criado com base em um <see cref="T:System.Xml.XmlDocument" />.</exception>
      <exception cref="T:System.InvalidOperationException">O parâmetro de objeto <see cref="T:System.Xml.XmlNode" /> não é um elemento, atributo, fragmento de documento ou o nó raiz.</exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Ocorreu um evento de validação de esquema e nenhum objeto <see cref="T:System.Xml.Schema.ValidationEventHandler" /> foi especificado.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Salva todos os filhos do nó <see langword="XmlDocument" /> para o <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="xw">O <see langword="XmlWriter" /> no qual você deseja salvar.</param>
    </member>
    <member name="M:System.Xml.XmlDocument.WriteTo(System.Xml.XmlWriter)">
      <summary>Salva o nó <see langword="XmlDocument" /> no <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w">O <see langword="XmlWriter" /> no qual você deseja salvar.</param>
    </member>
    <member name="P:System.Xml.XmlDocument.XmlResolver">
      <summary>Define o <see cref="T:System.Xml.XmlResolver" /> que será usado para resolver recursos externos.</summary>
      <returns>O <see langword="XmlResolver" /> a ser usado.  
Na versão 1.1 do .NET Framework, o chamador deve ser totalmente confiável para especificar um <see langword="XmlResolver" />.</returns>
      <exception cref="T:System.Xml.XmlException">Essa propriedade é definida como <see langword="null" /> e uma DTD ou entidade externa é encontrada.</exception>
    </member>
    <member name="T:System.Xml.XmlDocumentFragment">
      <summary>Representa um objeto leve que é útil para operações de inserção de árvore.</summary>
    </member>
    <member name="M:System.Xml.XmlDocumentFragment.#ctor(System.Xml.XmlDocument)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlDocumentFragment" />.</summary>
      <param name="ownerDocument">O documento XML que é a origem do fragmento.</param>
    </member>
    <member name="M:System.Xml.XmlDocumentFragment.CloneNode(System.Boolean)">
      <summary>Cria uma duplicação deste nó.</summary>
      <param name="deep">
        <see langword="true" /> para recursivamente clonar a subárvore abaixo do nó especificado; <see langword="false" /> para clonar apenas o próprio nó.</param>
      <returns>O nó clonado.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.InnerXml">
      <summary>Obtém ou define a marcação que representa os filhos deste nó.</summary>
      <returns>A marcação dos filhos deste nó.</returns>
      <exception cref="T:System.Xml.XmlException">O XML especificado ao definir essa propriedade não está bem formado.</exception>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.LocalName">
      <summary>Obtém o nome local do nó.</summary>
      <returns>Para <see langword="XmlDocumentFragment" /> nós, o nome local é <see langword="#document-fragment" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.Name">
      <summary>Obtém o nome qualificado do nó.</summary>
      <returns>Para <see langword="XmlDocumentFragment" />, o nome é <see langword="#document-fragment" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.NodeType">
      <summary>Obtém o tipo do nó atual.</summary>
      <returns>Para <see langword="XmlDocumentFragment" /> nós, esse valor é XmlNodeType. DocumentFragment.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.OwnerDocument">
      <summary>Obtém o <see cref="T:System.Xml.XmlDocument" /> ao qual esse nó pertence.</summary>
      <returns>O <see langword="XmlDocument" /> ao qual pertence esse nó.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.ParentNode">
      <summary>Obtém o pai deste nó (para os nós que podem ter pais).</summary>
      <returns>O pai deste nó.  
Para <see langword="XmlDocumentFragment" /> nós, essa propriedade é sempre <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocumentFragment.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Salva todos os filhos do nó no <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w">O <see langword="XmlWriter" /> no qual você deseja salvar.</param>
    </member>
    <member name="M:System.Xml.XmlDocumentFragment.WriteTo(System.Xml.XmlWriter)">
      <summary>Salva o nó no <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w">O <see langword="XmlWriter" /> no qual você deseja salvar.</param>
    </member>
    <member name="T:System.Xml.XmlDocumentType">
      <summary>Representa a declaração de tipo do documento.</summary>
    </member>
    <member name="M:System.Xml.XmlDocumentType.#ctor(System.String,System.String,System.String,System.String,System.Xml.XmlDocument)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlDocumentType" />.</summary>
      <param name="name">O nome qualificado; consulte a propriedade <see cref="P:System.Xml.XmlDocumentType.Name" />.</param>
      <param name="publicId">O identificador público; consulte a propriedade <see cref="P:System.Xml.XmlDocumentType.PublicId" />.</param>
      <param name="systemId">O identificador do sistema; consulte a propriedade <see cref="P:System.Xml.XmlDocumentType.SystemId" />.</param>
      <param name="internalSubset">O subconjunto interno de DTD; consulte a propriedade <see cref="P:System.Xml.XmlDocumentType.InternalSubset" />.</param>
      <param name="doc">O documento pai.</param>
    </member>
    <member name="M:System.Xml.XmlDocumentType.CloneNode(System.Boolean)">
      <summary>Cria uma duplicação deste nó.</summary>
      <param name="deep">
        <see langword="true" /> para recursivamente clonar a subárvore abaixo do nó especificado; <see langword="false" /> para clonar apenas o próprio nó. Para nós de tipo de documento, o nó clonado sempre inclui a subárvore, independentemente da configuração do parâmetro.</param>
      <returns>O nó clonado.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.Entities">
      <summary>Obtém a coleção de nós <see cref="T:System.Xml.XmlEntity" /> declarados na declaração de tipo do documento.</summary>
      <returns>Um <see cref="T:System.Xml.XmlNamedNodeMap" /> que contém os nós <see langword="XmlEntity" />. O <see langword="XmlNamedNodeMap" /> retornado é somente leitura.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.InternalSubset">
      <summary>Obtém o valor do subconjunto interno de DTD (definição de tipo de documento) na declaração de DOCTYPE.</summary>
      <returns>O subconjunto de DTD interno no DOCTYPE. Se não houver nenhum subconjunto interno de DTD, String. Empty será retornado.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.IsReadOnly">
      <summary>Obtém um valor que indica se o nó é somente leitura.</summary>
      <returns>
        <see langword="true" />Se o nó for somente leitura; caso contrário <see langword="false" />,.  
Como os nós DocumentType são somente leitura, essa propriedade sempre retorna <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.LocalName">
      <summary>Obtém o nome local do nó.</summary>
      <returns>Para nós DocumentType, essa propriedade retorna o nome do tipo de documento.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.Name">
      <summary>Obtém o nome qualificado do nó.</summary>
      <returns>Para nós DocumentType, essa propriedade retorna o nome do tipo de documento.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.NodeType">
      <summary>Obtém o tipo do nó atual.</summary>
      <returns>Para nós DocumentType, esse valor é XmlNodeType. DocumentType.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.Notations">
      <summary>Obtém a coleção de nós <see cref="T:System.Xml.XmlNotation" /> presentes na declaração de tipo de documento.</summary>
      <returns>Um <see cref="T:System.Xml.XmlNamedNodeMap" /> que contém os nós <see langword="XmlNotation" />. O <see langword="XmlNamedNodeMap" /> retornado é somente leitura.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.PublicId">
      <summary>Obtém o valor do identificador público na declaração de DOCTYPE.</summary>
      <returns>O identificador público no DOCTYPE. Se não houver nenhum identificador público, <see langword="null" /> será retornado.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.SystemId">
      <summary>Obtém o valor do identificador do sistema na declaração de DOCTYPE.</summary>
      <returns>O identificador do sistema no DOCTYPE. Se não houver nenhum identificador do sistema <see langword="null" /> , será retornado.</returns>
    </member>
    <member name="M:System.Xml.XmlDocumentType.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Salva todos os filhos do nó no <see cref="T:System.Xml.XmlWriter" /> especificado. Para nós <see langword="XmlDocumentType" />, esse método não tem nenhum efeito.</summary>
      <param name="w">O <see langword="XmlWriter" /> no qual você deseja salvar.</param>
    </member>
    <member name="M:System.Xml.XmlDocumentType.WriteTo(System.Xml.XmlWriter)">
      <summary>Salva o nó no <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w">O <see langword="XmlWriter" /> no qual você deseja salvar.</param>
    </member>
    <member name="T:System.Xml.XmlElement">
      <summary>Representa um elemento.</summary>
    </member>
    <member name="M:System.Xml.XmlElement.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlElement" />.</summary>
      <param name="prefix">O prefixo de namespace; consulte a propriedade <see cref="P:System.Xml.XmlElement.Prefix" />.</param>
      <param name="localName">O nome local; consulte a propriedade <see cref="P:System.Xml.XmlElement.LocalName" />.</param>
      <param name="namespaceURI">O URI do namespace; consulte a propriedade <see cref="P:System.Xml.XmlElement.NamespaceURI" />.</param>
      <param name="doc">O documento XML pai.</param>
    </member>
    <member name="P:System.Xml.XmlElement.Attributes">
      <summary>Obtém um <see cref="T:System.Xml.XmlAttributeCollection" /> que contém a lista de atributos desse nó.</summary>
      <returns>Um <see cref="T:System.Xml.XmlAttributeCollection" /> que contém a lista de atributos desse nó.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.CloneNode(System.Boolean)">
      <summary>Cria uma duplicação deste nó.</summary>
      <param name="deep">
        <see langword="true" /> para clonar recursivamente a subárvore sob o nó especificado; <see langword="false" /> para clonar apenas o próprio nó (e seus atributos, se o nó for um <see langword="XmlElement" />).</param>
      <returns>O nó clonado.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.GetAttribute(System.String)">
      <summary>Retorna o valor do atributo com o nome especificado.</summary>
      <param name="name">O nome do atributo a ser recuperado. Este é um nome qualificado. Ele é comparado com a propriedade <see langword="Name" /> do nó correspondente.</param>
      <returns>O valor do atributo especificado. Uma cadeia de caracteres vazia será retornada se um atributo correspondente não for encontrado ou se o atributo não tiver um valor especificado ou padrão.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.GetAttribute(System.String,System.String)">
      <summary>Retorna o valor do atributo com o nome local e o URI do namespace especificados.</summary>
      <param name="localName">O nome local do atributo a ser recuperado.</param>
      <param name="namespaceURI">O URI do namespace do atributo a ser recuperado.</param>
      <returns>O valor do atributo especificado. Uma cadeia de caracteres vazia será retornada se um atributo correspondente não for encontrado ou se o atributo não tiver um valor especificado ou padrão.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.GetAttributeNode(System.String)">
      <summary>Retorna o <see langword="XmlAttribute" /> com o nome especificado.</summary>
      <param name="name">O nome do atributo a ser recuperado. Este é um nome qualificado. Ele é comparado com a propriedade <see langword="Name" /> do nó correspondente.</param>
      <returns>O <see langword="XmlAttribute" /> especificado ou <see langword="null" /> se um atributo correspondente não for encontrado.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.GetAttributeNode(System.String,System.String)">
      <summary>Retorna o <see cref="T:System.Xml.XmlAttribute" /> com o nome do local especificado e o URI do namespace.</summary>
      <param name="localName">O nome local do atributo.</param>
      <param name="namespaceURI">O URI do namespace do atributo.</param>
      <returns>O <see langword="XmlAttribute" /> especificado ou <see langword="null" /> se um atributo correspondente não for encontrado.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.GetElementsByTagName(System.String)">
      <summary>Retorna um <see cref="T:System.Xml.XmlNodeList" /> que contém uma lista de todos os elementos descendentes que correspondem ao <see cref="P:System.Xml.XmlElement.Name" /> especificado.</summary>
      <param name="name">A identificação de nome a ser comparada. Este é um nome qualificado. Ele é comparado com a propriedade <see langword="Name" /> do nó correspondente. O asterisco (*) é um valor especial que corresponde a todas as marcas.</param>
      <returns>Um <see cref="T:System.Xml.XmlNodeList" /> que contém uma lista de todos os nós correspondentes. A lista está vazia se não houver nenhum nó correspondente.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.GetElementsByTagName(System.String,System.String)">
      <summary>Retorna um <see cref="T:System.Xml.XmlNodeList" /> que contém uma lista de todos os elementos descendentes que correspondem ao <see cref="P:System.Xml.XmlElement.LocalName" /> e <see cref="P:System.Xml.XmlElement.NamespaceURI" /> especificados.</summary>
      <param name="localName">O nome local a ser correspondido. O asterisco (*) é um valor especial que corresponde a todas as marcas.</param>
      <param name="namespaceURI">O URI do namespace que deverá ser correspondido.</param>
      <returns>Um <see cref="T:System.Xml.XmlNodeList" /> que contém uma lista de todos os nós correspondentes. A lista está vazia se não houver nenhum nó correspondente.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.HasAttribute(System.String)">
      <summary>Determina se o nó atual tem um atributo com o nome especificado.</summary>
      <param name="name">O nome do atributo a ser localizado. Este é um nome qualificado. Ele é comparado com a propriedade <see langword="Name" /> do nó correspondente.</param>
      <returns>
        <see langword="true" /> se o nó atual tiver o atributo especificado; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.HasAttribute(System.String,System.String)">
      <summary>Determina se o nó atual tem um atributo com o nome do local especificado e o URI de namespace.</summary>
      <param name="localName">O nome local do atributo a ser localizado.</param>
      <param name="namespaceURI">O URI do namespace do atributo a ser localizado.</param>
      <returns>
        <see langword="true" /> se o nó atual tiver o atributo especificado; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.HasAttributes">
      <summary>Obtém um valor <see langword="boolean" /> que indica se o nó atual tem algum atributo.</summary>
      <returns>
        <see langword="true" /> se o nó atual tiver atributos; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.InnerText">
      <summary>Obtém ou define os valores concatenados do nó e todos os seus filhos.</summary>
      <returns>Os valores concatenados do nó e de todos os filhos.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.InnerXml">
      <summary>Obtém ou define a marcação que representa apenas os filhos deste nó.</summary>
      <returns>A marcação dos filhos deste nó.</returns>
      <exception cref="T:System.Xml.XmlException">O XML especificado ao definir essa propriedade não está bem formado.</exception>
    </member>
    <member name="P:System.Xml.XmlElement.IsEmpty">
      <summary>Obtém ou define o formato de marca do elemento.</summary>
      <returns>
        <see langword="true" />Se o elemento deve ser serializado no formato de marca curta "&lt;item/&gt;"; &lt;&gt;para o formato longo "item&lt;/item&gt;". <see langword="false" />  
Ao definir essa propriedade, se for definida como <see langword="true" />, os filhos do elemento serão removidos e o elemento será serializado no formato de marca abreviado. Se for definido como <see langword="false" />, o valor da propriedade será alterado (independentemente de o elemento ter ou não conteúdo); se o elemento estiver vazio, ele será serializado no formato longo.  
Essa propriedade é uma extensão da Microsoft do DOM (Modelo de Objeto do Documento).</returns>
    </member>
    <member name="P:System.Xml.XmlElement.LocalName">
      <summary>Obtém o nome local do nó atual.</summary>
      <returns>O nome do nó atual com o prefixo removido. Por exemplo, <see langword="LocalName" /> é livro para o elemento &lt;BK: Book&gt;.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.Name">
      <summary>Obtém o nome qualificado do nó.</summary>
      <returns>O nome qualificado do nó. Para nós <see langword="XmlElement" />, esse é o nome de marca do elemento.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.NamespaceURI">
      <summary>Obtém o URI do namespace deste nó.</summary>
      <returns>O URI do namespace deste nó. Se não houver um URI do namespace, a propriedade retorna a String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.NextSibling">
      <summary>Obtém o <see cref="T:System.Xml.XmlNode" /> imediatamente após esse elemento.</summary>
      <returns>
        <see langword="XmlNode" /> Imediatamente após esse elemento.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.NodeType">
      <summary>Obtém o tipo do nó atual.</summary>
      <returns>O tipo de nó. Para <see langword="XmlElement" /> nós, esse valor é XmlNodeType. Element.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.OwnerDocument">
      <summary>Obtém o <see cref="T:System.Xml.XmlDocument" /> ao qual esse nó pertence.</summary>
      <returns>O <see langword="XmlDocument" /> ao qual este elemento pertence.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.ParentNode">
      <summary>Obtém o pai deste nó (para os nós que podem ter pais).</summary>
      <returns>O <see langword="XmlNode" /> que é o pai do nó atual. Se um nó acabou de ser criado e ainda não foi adicionado à árvore ou se ele foi removido da árvore, o pai será <see langword="null" />. Para todos os outros nós, o valor retornado depende do <see cref="P:System.Xml.XmlNode.NodeType" /> do nó. A tabela a seguir descreve os possíveis valores retornados para a propriedade <see langword="ParentNode" /> .</returns>
    </member>
    <member name="P:System.Xml.XmlElement.Prefix">
      <summary>Obtém ou define o prefixo de namespace desse nó.</summary>
      <returns>O prefixo de namespace desse nó. Se não houver nenhum prefixo, essa propriedade retornará String.Empty.</returns>
      <exception cref="T:System.ArgumentException">Este nó é somente leitura</exception>
      <exception cref="T:System.Xml.XmlException">O prefixo especificado contém um caractere inválido.  
O prefixo especificado está malformado.  
O namespaceURI deste nó é <see langword="null" />.  
O prefixo especificado é "xml" e o namespaceURI deste nó é diferente de http://www.w3.org/XML/1998/namespace.</exception>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAll">
      <summary>Remove todos os atributos especificados e os filhos do nó atual. Os atributos padrão não são removidos.</summary>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAllAttributes">
      <summary>Remove todos os atributos especificados do elemento. Os atributos padrão não são removidos.</summary>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAttribute(System.String)">
      <summary>Remove um atributo pelo nome.</summary>
      <param name="name">O nome do atributo a ser removido. Este é um nome qualificado. Ele é comparado com a propriedade <see langword="Name" /> do nó correspondente.</param>
      <exception cref="T:System.ArgumentException">O nó é somente leitura.</exception>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAttribute(System.String,System.String)">
      <summary>Remove um atributo com o nome do local e o URI de namespace especificados. (Se o atributo removido tiver um valor padrão, ele será substituído imediatamente).</summary>
      <param name="localName">O nome local do atributo a ser removido.</param>
      <param name="namespaceURI">O URI do namespace do atributo a ser removido.</param>
      <exception cref="T:System.ArgumentException">O nó é somente leitura.</exception>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAttributeAt(System.Int32)">
      <summary>Remove o nó do atributo com o índice especificado do elemento. (Se o atributo removido tiver um valor padrão, ele será substituído imediatamente).</summary>
      <param name="i">O índice do nó a ser removido. O primeiro nó tem índice 0.</param>
      <returns>O nó do atributo removido ou <see langword="null" /> se não houver nenhum nó no índice especificado.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAttributeNode(System.String,System.String)">
      <summary>Remove o <see cref="T:System.Xml.XmlAttribute" /> especificado pelo nome local e URI de namespace. (Se o atributo removido tiver um valor padrão, ele será substituído imediatamente).</summary>
      <param name="localName">O nome local do atributo.</param>
      <param name="namespaceURI">O URI do namespace do atributo.</param>
      <returns>O <see langword="XmlAttribute" /> removido ou <see langword="null" /> se o <see langword="XmlElement" /> não tiver tem um nó de atributo correspondente.</returns>
      <exception cref="T:System.ArgumentException">Este nó é somente leitura.</exception>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAttributeNode(System.Xml.XmlAttribute)">
      <summary>Remove o <see cref="T:System.Xml.XmlAttribute" /> especificado.</summary>
      <param name="oldAttr">O nó <see langword="XmlAttribute" /> a ser removido. Se o atributo removido tiver um valor padrão, ele será substituído imediatamente.</param>
      <returns>O <see langword="XmlAttribute" /> removido ou <see langword="null" /> se <paramref name="oldAttr" /> não for um nó do atributo do <see langword="XmlElement" />.</returns>
      <exception cref="T:System.ArgumentException">Este nó é somente leitura.</exception>
    </member>
    <member name="P:System.Xml.XmlElement.SchemaInfo">
      <summary>Obtém o infoset de validação de esquema de postagem que foi atribuído a esse nó como resultado da validação de esquema.</summary>
      <returns>Um objeto <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> contendo o infoset de validação de esquema de postagem desse nó.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.SetAttribute(System.String,System.String)">
      <summary>Define o valor do atributo com o nome especificado.</summary>
      <param name="name">O nome do atributo a ser criado ou alterado. Este é um nome qualificado. Se o nome contiver dois-pontos, ele será analisado em componentes de nome local e prefixo.</param>
      <param name="value">O valor a ser definido para o atributo.</param>
      <exception cref="T:System.Xml.XmlException">O nome especificado contém um caractere inválido.</exception>
      <exception cref="T:System.ArgumentException">O nó é somente leitura.</exception>
    </member>
    <member name="M:System.Xml.XmlElement.SetAttribute(System.String,System.String,System.String)">
      <summary>Define o valor do atributo com o nome do local e o URI de namespace especificados.</summary>
      <param name="localName">O nome local do atributo.</param>
      <param name="namespaceURI">O URI do namespace do atributo.</param>
      <param name="value">O valor a ser definido para o atributo.</param>
      <returns>O valor do atributo.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.SetAttributeNode(System.String,System.String)">
      <summary>Adiciona o <see cref="T:System.Xml.XmlAttribute" /> especificado.</summary>
      <param name="localName">O nome local do atributo.</param>
      <param name="namespaceURI">O URI do namespace do atributo.</param>
      <returns>O <see langword="XmlAttribute" /> a ser adicionado.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.SetAttributeNode(System.Xml.XmlAttribute)">
      <summary>Adiciona o <see cref="T:System.Xml.XmlAttribute" /> especificado.</summary>
      <param name="newAttr">O nó <see langword="XmlAttribute" /> para adicionar à coleção de atributos desse elemento.</param>
      <returns>Se o atributo substitui um atributo existente com o mesmo nome, o <see langword="XmlAttribute" /> antigo será retornado; caso contrário, <see langword="null" /> é retornado.</returns>
      <exception cref="T:System.ArgumentException">O <paramref name="newAttr" /> foi criado com base em um documento diferente daquele que criou esse nó. Ou esse nó é somente leitura.</exception>
      <exception cref="T:System.InvalidOperationException">O <paramref name="newAttr" /> já é um atributo de outro objeto <see langword="XmlElement" />. Você deve clonar explicitamente nós de <see langword="XmlAttribute" /> para reutilizá-los em outros objetos <see langword="XmlElement" />.</exception>
    </member>
    <member name="M:System.Xml.XmlElement.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Salva todos os filhos do nó no <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w">O <see langword="XmlWriter" /> no qual você deseja salvar.</param>
    </member>
    <member name="M:System.Xml.XmlElement.WriteTo(System.Xml.XmlWriter)">
      <summary>Salva o nó atual no <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w">O <see langword="XmlWriter" /> no qual você deseja salvar.</param>
    </member>
    <member name="T:System.Xml.XmlEntity">
      <summary>Representa uma declaração de entidade, como &lt;!ENTITY... &gt;.</summary>
    </member>
    <member name="P:System.Xml.XmlEntity.BaseURI">
      <summary>Obtém o URI (Uniform Resource Identifier) base do nó atual.</summary>
      <returns>O local do qual o nó foi carregado.</returns>
    </member>
    <member name="M:System.Xml.XmlEntity.CloneNode(System.Boolean)">
      <summary>Cria uma duplicação deste nó. Não é possível clonar nós de entidade. Chamar este método em um objeto <see cref="T:System.Xml.XmlEntity" /> gera uma exceção.</summary>
      <param name="deep">
        <see langword="true" /> para recursivamente clonar a subárvore abaixo do nó especificado; <see langword="false" /> para clonar apenas o próprio nó.</param>
      <returns>Uma cópia do <see cref="T:System.Xml.XmlNode" /> desde o qual o método é chamado.</returns>
      <exception cref="T:System.InvalidOperationException">Não é possível clonar nós de entidade. Chamar este método em um objeto <see cref="T:System.Xml.XmlEntity" /> gera uma exceção.</exception>
    </member>
    <member name="P:System.Xml.XmlEntity.InnerText">
      <summary>Obtém os valores concatenados do nó de entidade e todos os seus filhos.</summary>
      <returns>Os valores concatenados do nó e de todos os filhos.</returns>
      <exception cref="T:System.InvalidOperationException">Tentativa de definir a propriedade.</exception>
    </member>
    <member name="P:System.Xml.XmlEntity.InnerXml">
      <summary>Obtém a marcação que representa os filhos deste nó.</summary>
      <returns>Para <see langword="XmlEntity" /> nós, String. Empty é retornado.</returns>
      <exception cref="T:System.InvalidOperationException">Tentativa de definir a propriedade.</exception>
    </member>
    <member name="P:System.Xml.XmlEntity.IsReadOnly">
      <summary>Obtém um valor que indica se o nó é somente leitura.</summary>
      <returns>
        <see langword="true" />Se o nó for somente leitura; caso contrário <see langword="false" />,.  
Como <see langword="XmlEntity" /> os nós são somente leitura, essa propriedade sempre retorna <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.LocalName">
      <summary>Obtém o nome do nó sem o prefixo de namespace.</summary>
      <returns>Para <see langword="XmlEntity" /> nós, essa propriedade retorna o nome da entidade.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.Name">
      <summary>Obtém o nome do nó.</summary>
      <returns>O nome da entidade.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.NodeType">
      <summary>Obtém o tipo do nó.</summary>
      <returns>O tipo de nó. Para <see langword="XmlEntity" /> nós, o valor é XmlNodeType. Entity.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.NotationName">
      <summary>Obtém o nome do atributo opcional NDATA na declaração de entidade.</summary>
      <returns>O nome do atributo NDATA. Se não houver um NDATA, <see langword="null" /> será retornado.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.OuterXml">
      <summary>Obtém a marcação que representa este nó e todos os seus filhos.</summary>
      <returns>Para <see langword="XmlEntity" /> nós, String. Empty é retornado.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.PublicId">
      <summary>Obtém o valor do identificador público na declaração de entidade.</summary>
      <returns>O identificador público na entidade. Se não houver nenhum identificador público, <see langword="null" /> será retornado.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.SystemId">
      <summary>Obtém o valor do identificador do sistema na declaração de entidade.</summary>
      <returns>O identificador do sistema na entidade. Se não houver nenhum identificador do sistema <see langword="null" /> , será retornado.</returns>
    </member>
    <member name="M:System.Xml.XmlEntity.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Salva todos os filhos do nó no <see cref="T:System.Xml.XmlWriter" /> especificado. Para nós <see langword="XmlEntity" />, esse método não tem nenhum efeito.</summary>
      <param name="w">O <see langword="XmlWriter" /> no qual você deseja salvar.</param>
    </member>
    <member name="M:System.Xml.XmlEntity.WriteTo(System.Xml.XmlWriter)">
      <summary>Salva o nó no <see cref="T:System.Xml.XmlWriter" /> especificado. Para nós <see langword="XmlEntity" />, esse método não tem nenhum efeito.</summary>
      <param name="w">O <see langword="XmlWriter" /> no qual você deseja salvar.</param>
    </member>
    <member name="T:System.Xml.XmlEntityReference">
      <summary>Representa um nó de referência de entidade.</summary>
    </member>
    <member name="M:System.Xml.XmlEntityReference.#ctor(System.String,System.Xml.XmlDocument)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlEntityReference" />.</summary>
      <param name="name">O nome da referência de entidade; consulte a propriedade <see cref="P:System.Xml.XmlEntityReference.Name" />.</param>
      <param name="doc">O documento XML pai.</param>
    </member>
    <member name="P:System.Xml.XmlEntityReference.BaseURI">
      <summary>Obtém o URI (Uniform Resource Identifier) base do nó atual.</summary>
      <returns>O local do qual o nó foi carregado.</returns>
    </member>
    <member name="M:System.Xml.XmlEntityReference.CloneNode(System.Boolean)">
      <summary>Cria uma duplicação deste nó.</summary>
      <param name="deep">
        <see langword="true" /> para recursivamente clonar a subárvore abaixo do nó especificado; <see langword="false" /> para clonar apenas o próprio nó. Para nós <see langword="XmlEntityReference" />, este método sempre retorna um nó de referência de entidade sem filhos. O texto de substituição é definido quando o nó é inserido em um pai.</param>
      <returns>O nó clonado.</returns>
    </member>
    <member name="P:System.Xml.XmlEntityReference.IsReadOnly">
      <summary>Obtém um valor que indica se o nó é somente leitura.</summary>
      <returns>
        <see langword="true" />Se o nó for somente leitura; caso <see langword="false" />contrário.  
Como <see langword="XmlEntityReference" /> os nós são somente leitura, essa propriedade sempre retorna <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlEntityReference.LocalName">
      <summary>Obtém o nome local do nó.</summary>
      <returns>Para <see langword="XmlEntityReference" /> nós, essa propriedade retorna o nome da entidade referenciada.</returns>
    </member>
    <member name="P:System.Xml.XmlEntityReference.Name">
      <summary>Obtém o nome do nó.</summary>
      <returns>O nome da entidade referenciada.</returns>
    </member>
    <member name="P:System.Xml.XmlEntityReference.NodeType">
      <summary>Obtém o tipo do nó.</summary>
      <returns>O tipo de nó. Para <see langword="XmlEntityReference" /> nós, o valor é XmlNodeType. EntityReference.</returns>
    </member>
    <member name="P:System.Xml.XmlEntityReference.Value">
      <summary>Obtém ou define o valor do nó.</summary>
      <returns>O valor do nó. Para <see langword="XmlEntityReference" /> nós, essa propriedade retorna <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException">O nó é somente leitura.</exception>
      <exception cref="T:System.InvalidOperationException">Definição da propriedade.</exception>
    </member>
    <member name="M:System.Xml.XmlEntityReference.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Salva todos os filhos do nó no <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w">O <see langword="XmlWriter" /> no qual você deseja salvar.</param>
    </member>
    <member name="M:System.Xml.XmlEntityReference.WriteTo(System.Xml.XmlWriter)">
      <summary>Salva o nó no <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w">O <see langword="XmlWriter" /> no qual você deseja salvar.</param>
    </member>
    <member name="T:System.Xml.XmlException">
      <summary>Retorna informações detalhadas sobre a última exceção.</summary>
    </member>
    <member name="M:System.Xml.XmlException.#ctor">
      <summary>Inicializa uma nova instância da classe <see langword="XmlException" />.</summary>
    </member>
    <member name="M:System.Xml.XmlException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância da classe <see langword="XmlException" /> usando as informações nos objetos <see cref="T:System.Runtime.Serialization.SerializationInfo" /> e <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">O objeto <see langword="SerializationInfo" /> que contém todas as propriedades de um <see langword="XmlException" />.</param>
      <param name="context">O objeto <see langword="StreamingContext" /> que contém as informações de contexto.</param>
    </member>
    <member name="M:System.Xml.XmlException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see langword="XmlException" /> com uma mensagem de erro especificada.</summary>
      <param name="message">A descrição do erro.</param>
    </member>
    <member name="M:System.Xml.XmlException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see langword="XmlException" />.</summary>
      <param name="message">A descrição da condição de erro.</param>
      <param name="innerException">O <see cref="T:System.Exception" /> que gerou o <see langword="XmlException" />, se houver. Este valor pode ser <see langword="null" />.</param>
    </member>
    <member name="M:System.Xml.XmlException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
      <summary>Inicializa uma nova instância da classe <see langword="XmlException" /> com a mensagem especificada, a exceção interna, o número de linha e a posição da linha.</summary>
      <param name="message">A descrição do erro.</param>
      <param name="innerException">A exceção que é a causa da exceção atual. Este valor pode ser <see langword="null" />.</param>
      <param name="lineNumber">O número de linha que indica onde ocorreu o erro.</param>
      <param name="linePosition">A posição na linha que indica onde ocorreu o erro.</param>
    </member>
    <member name="M:System.Xml.XmlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Transmite todas as propriedades <see langword="XmlException" /> para a classe <see cref="T:System.Runtime.Serialization.SerializationInfo" /> para o <see cref="T:System.Runtime.Serialization.StreamingContext" /> fornecido.</summary>
      <param name="info">O objeto <see langword="SerializationInfo" />.</param>
      <param name="context">O objeto <see langword="StreamingContext" />.</param>
    </member>
    <member name="P:System.Xml.XmlException.LineNumber">
      <summary>Obtém o número de linha que indica onde ocorreu o erro.</summary>
      <returns>O número de linha que indica onde ocorreu o erro.</returns>
    </member>
    <member name="P:System.Xml.XmlException.LinePosition">
      <summary>Obtém a posição da linha que indica onde ocorreu o erro.</summary>
      <returns>A posição na linha que indica onde ocorreu o erro.</returns>
    </member>
    <member name="P:System.Xml.XmlException.Message">
      <summary>Obtém uma mensagem que descreve a exceção atual.</summary>
      <returns>A mensagem de erro que explica a razão da exceção.</returns>
    </member>
    <member name="P:System.Xml.XmlException.SourceUri">
      <summary>Obtém o local do arquivo XML.</summary>
      <returns>O URI de origem para os dados XML. Se não houver nenhum URI de origem, essa propriedade <see langword="null" />retornará.</returns>
    </member>
    <member name="T:System.Xml.XmlImplementation">
      <summary>Define o contexto de um conjunto de objetos <see cref="T:System.Xml.XmlDocument" />.</summary>
    </member>
    <member name="M:System.Xml.XmlImplementation.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlImplementation" />.</summary>
    </member>
    <member name="M:System.Xml.XmlImplementation.#ctor(System.Xml.XmlNameTable)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlImplementation" /> com o <see cref="T:System.Xml.XmlNameTable" /> especificado.</summary>
      <param name="nt">Um objeto <see cref="T:System.Xml.XmlNameTable" />.</param>
    </member>
    <member name="M:System.Xml.XmlImplementation.CreateDocument">
      <summary>Cria um novo <see cref="T:System.Xml.XmlDocument" />.</summary>
      <returns>O novo objeto <see langword="XmlDocument" />.</returns>
    </member>
    <member name="M:System.Xml.XmlImplementation.HasFeature(System.String,System.String)">
      <summary>Testa se a implementação do DOM (Modelo de Objeto do Documento) implementa um recurso específico.</summary>
      <param name="strFeature">O nome do pacote do recurso a ser testado. Esse nome não diferencia maiúsculas de minúsculas.</param>
      <param name="strVersion">Este é o número de versão do nome do pacote a ser testado. Se a versão não for especificada (<see langword="null" />), dar suporte a qualquer versão do recurso fará com que o método retorne <see langword="true" />.</param>
      <returns>
        <see langword="true" /> se o recurso for implementado na versão especificada; caso contrário, <see langword="false" />.  
A tabela a seguir mostra as combinações que fazem <see langword="HasFeature" /> retornar <see langword="true" />.  
  strFeature 
  strVersion 
  XML 
  1.0 
  XML 
  2.0</returns>
    </member>
    <member name="T:System.Xml.XmlLinkedNode">
      <summary>Obtém o nó imediatamente anterior ou posterior a este nó.</summary>
    </member>
    <member name="P:System.Xml.XmlLinkedNode.NextSibling">
      <summary>Obtém o nó imediatamente posterior a este nó.</summary>
      <returns>Imediatamente após esse nó ou <see langword="null" /> se ele não existir. <see cref="T:System.Xml.XmlNode" /></returns>
    </member>
    <member name="P:System.Xml.XmlLinkedNode.PreviousSibling">
      <summary>Obtém o nó imediatamente anterior a este nó.</summary>
      <returns>O anterior <see cref="T:System.Xml.XmlNode" /> ou <see langword="null" /> se não existir um.</returns>
    </member>
    <member name="T:System.Xml.XmlNamedNodeMap">
      <summary>Representa uma coleção de nós que podem ser acessados por nome ou índice.</summary>
    </member>
    <member name="P:System.Xml.XmlNamedNodeMap.Count">
      <summary>Obtém o número de nós no <see langword="XmlNamedNodeMap" />.</summary>
      <returns>O número de nós.</returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.GetEnumerator">
      <summary>Dá suporte à iteração do estilo “foreach” na coleção de nós no <see langword="XmlNamedNodeMap" />.</summary>
      <returns>Um objeto enumerador.</returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.GetNamedItem(System.String)">
      <summary>Recupera um <see cref="T:System.Xml.XmlNode" /> especificado pelo nome.</summary>
      <param name="name">O nome qualificado do nó a ser recuperado. Ele é comparado com a propriedade <see cref="P:System.Xml.XmlNode.Name" /> do nó correspondente.</param>
      <returns>Um <see langword="XmlNode" /> com o nome especificado ou <see langword="null" /> se um nó correspondente não for encontrado.</returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.GetNamedItem(System.String,System.String)">
      <summary>Recupera um nó com <see cref="P:System.Xml.XmlNode.LocalName" /> e <see cref="P:System.Xml.XmlNode.NamespaceURI" /> correspondentes.</summary>
      <param name="localName">O nome local do nó a ser recuperado.</param>
      <param name="namespaceURI">O URI (Uniform Resource Identifier) do namespace do nó a ser recuperado.</param>
      <returns>Um <see cref="T:System.Xml.XmlNode" /> com correspondência de nome local e de URI de namespace ou <see langword="null" /> se um nó correspondente não foi encontrado.</returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.Item(System.Int32)">
      <summary>Recupera o nó no índice especificado no <see langword="XmlNamedNodeMap" />.</summary>
      <param name="index">A posição do índice do nó a ser recuperada do <see langword="XmlNamedNodeMap" />. O índice é baseado em zero, portanto, o índice do primeiro nó é 0 e o índice do último nó é <see cref="P:System.Xml.XmlNamedNodeMap.Count" /> -1.</param>
      <returns>O <see cref="T:System.Xml.XmlNode" /> no índice especificado. Se <paramref name="index" /> for menor que 0 ou maior ou igual à propriedade <see cref="P:System.Xml.XmlNamedNodeMap.Count" />, <see langword="null" /> será retornado.</returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String)">
      <summary>Remove o nó do <see langword="XmlNamedNodeMap" />.</summary>
      <param name="name">O nome qualificado do nó a ser removido. O nome é comparado com a propriedade <see cref="P:System.Xml.XmlNode.Name" /> do nó correspondente.</param>
      <returns>O <see langword="XmlNode" /> removido deste <see langword="XmlNamedNodeMap" /> ou <see langword="null" /> se um nó correspondente não foi encontrado.</returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String,System.String)">
      <summary>Remove um nó com <see cref="P:System.Xml.XmlNode.LocalName" /> e <see cref="P:System.Xml.XmlNode.NamespaceURI" /> correspondentes.</summary>
      <param name="localName">O nome local do nó a ser removido.</param>
      <param name="namespaceURI">O URI de namespace do nó a ser removido.</param>
      <returns>O <see cref="T:System.Xml.XmlNode" /> removido ou <see langword="null" /> se um nó correspondente não foi encontrado.</returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.SetNamedItem(System.Xml.XmlNode)">
      <summary>Adiciona um <see cref="T:System.Xml.XmlNode" /> usando a propriedade <see cref="P:System.Xml.XmlNode.Name" /> dele.</summary>
      <param name="node">Um <see langword="XmlNode" /> a ser armazenado no <see langword="XmlNamedNodeMap" />. Se um nó com esse nome já existir no mapa, ele será substituído pelo novo.</param>
      <returns>Se o <paramref name="node" /> substituir um nó existente com o mesmo nome, o nó antigo será retornado; caso contrário, <see langword="null" /> será retornado.</returns>
      <exception cref="T:System.ArgumentException">O <paramref name="node" /> foi criado com base em um <see cref="T:System.Xml.XmlDocument" /> diferente daquele que criou o <see langword="XmlNamedNodeMap" /> ou o <see langword="XmlNamedNodeMap" /> é somente leitura.</exception>
    </member>
    <member name="T:System.Xml.XmlNamespaceManager">
      <summary>Resolve, adiciona e remove namespaces de uma coleção e fornece gerenciamento de escopo para esses namespaces.</summary>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.#ctor(System.Xml.XmlNameTable)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlNamespaceManager" /> com o <see cref="T:System.Xml.XmlNameTable" /> especificado.</summary>
      <param name="nameTable">O <see cref="T:System.Xml.XmlNameTable" /> a ser usado.</param>
      <exception cref="T:System.NullReferenceException">
        <see langword="null" /> é passado para o construtor</exception>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.AddNamespace(System.String,System.String)">
      <summary>Adiciona o namespace especificado à coleção.</summary>
      <param name="prefix">O prefixo para associar ao namespace sendo adicionado. Use String.Empty para adicionar um namespace padrão.  
 ObservaçãoSe o <see cref="T:System.Xml.XmlNamespaceManager" /> for usado para resolver os namespaces em uma expressão XPath (XML Path Language), será necessário especificar um prefixo. Se uma expressão XPath não incluir um prefixo, presume-se que o URI (Uniform Resource Identifier) do namespace é o namespace vazio. Para obter mais informações sobre as expressões XPath e <see cref="T:System.Xml.XmlNamespaceManager" />, consulte os métodos <see cref="M:System.Xml.XmlNode.SelectNodes(System.String)" /> e <see cref="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)" />.</param>
      <param name="uri">O namespace a ser adicionado.</param>
      <exception cref="T:System.ArgumentException">O valor de <paramref name="prefix" /> é "xml" ou "xmlns".</exception>
      <exception cref="T:System.ArgumentNullException">O valor de <paramref name="prefix" /> ou <paramref name="uri" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.XmlNamespaceManager.DefaultNamespace">
      <summary>Obtém o URI de namespace para o namespace padrão.</summary>
      <returns>O URI do namespace para o namespace padrão ou uma cadeia de caracteres vazia se não houver nenhum namespace padrão.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.GetEnumerator">
      <summary>Retorna um enumerador a ser usado para iterar os namespaces no <see cref="T:System.Xml.XmlNamespaceManager" />.</summary>
      <returns>Um <see cref="T:System.Collections.IEnumerator" /> que contém os prefixos armazenados pelo <see cref="T:System.Xml.XmlNamespaceManager" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>Obtém uma coleção de nomes de namespace inseridos pelo prefixo que pode ser usada para enumerar os namespaces atualmente no escopo.</summary>
      <param name="scope">Um valor de enumeração que especifica o tipo de nós de namespace a ser retornado.</param>
      <returns>Uma coleção de pares de namespace e prefixo atualmente no escopo.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.HasNamespace(System.String)">
      <summary>Obtém um valor que indica se o prefixo fornecido tem um namespace definido para o escopo atual que passou por push.</summary>
      <param name="prefix">O prefixo de namespace que você deseja localizar.</param>
      <returns>
        <see langword="true" /> se houver um namespace definido; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.LookupNamespace(System.String)">
      <summary>Obtém o URI do namespace do prefixo especificado.</summary>
      <param name="prefix">O prefixo cujo URI de namespace você deseja resolver. Para corresponder o namespace padrão, passe String.Empty.</param>
      <returns>Retorna o URI do namespace para <paramref name="prefix" /> ou <see langword="null" /> se não houver nenhum namespace mapeado. Cadeia de caracteres retornada é atomizada.  
Para obter mais informações sobre cadeias de caracteres atomizadas, veja a classe <see cref="T:System.Xml.XmlNameTable" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.LookupPrefix(System.String)">
      <summary>Encontra o prefixo declarado para o URI de namespace especificado.</summary>
      <param name="uri">O namespace a ser resolvido para o prefixo.</param>
      <returns>O prefixo correspondente. Se não houver nenhum prefixo mapeado, o método retornará String.Empty. Se um valor nulo for fornecido, <see langword="null" /> será retornado.</returns>
    </member>
    <member name="P:System.Xml.XmlNamespaceManager.NameTable">
      <summary>Obtém o <see cref="T:System.Xml.XmlNameTable" /> associado a esse objeto.</summary>
      <returns>O <see cref="T:System.Xml.XmlNameTable" /> usado por este objeto.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.PopScope">
      <summary>Remove um escopo de namespace mais recente da pilha.</summary>
      <returns>
        <see langword="true" /> se houver algum escopo de namespace à esquerda na pilha; <see langword="false" /> se não houver nenhum namespace mais recente para ser removido da pilha.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.PushScope">
      <summary>Efetua push em um escopo de namespace para a pilha.</summary>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.RemoveNamespace(System.String,System.String)">
      <summary>Remove o namespace especificado para o prefixo especificado.</summary>
      <param name="prefix">O prefixo do namespace</param>
      <param name="uri">O namespace a ser removido para o prefixo especificado. O namespace removido é do escopo de namespace atual. Namespaces fora do escopo atual são ignorados.</param>
      <exception cref="T:System.ArgumentNullException">O valor de <paramref name="prefix" /> ou <paramref name="uri" /> é <see langword="null" />.</exception>
    </member>
    <member name="T:System.Xml.XmlNamespaceScope">
      <summary>Define o escopo de namespace.</summary>
    </member>
    <member name="F:System.Xml.XmlNamespaceScope.All">
      <summary>Todos os namespaces definidos no escopo do nó atual. Isso inclui o namespace xmlns:xml que sempre é declarado implicitamente. A ordem dos namespaces retornados não está definida.</summary>
    </member>
    <member name="F:System.Xml.XmlNamespaceScope.ExcludeXml">
      <summary>Todos os namespaces definidos no escopo do nó atual, excluindo o namespace xmlns:xml, que sempre é declarado implicitamente. A ordem dos namespaces retornados não está definida.</summary>
    </member>
    <member name="F:System.Xml.XmlNamespaceScope.Local">
      <summary>Todos os namespaces definidos localmente no nó atual.</summary>
    </member>
    <member name="T:System.Xml.XmlNameTable">
      <summary>Tabela de objetos atomizados de cadeia de caracteres.</summary>
    </member>
    <member name="M:System.Xml.XmlNameTable.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlNameTable" />.</summary>
    </member>
    <member name="M:System.Xml.XmlNameTable.Add(System.Char[],System.Int32,System.Int32)">
      <summary>Quando substituído em uma classe derivada, atomiza a cadeia de caracteres especificada e adiciona-o ao <see langword="XmlNameTable" />.</summary>
      <param name="array">A matriz de caracteres que contém o nome a ser adicionado.</param>
      <param name="offset">O índice de base zero na matriz que especifica o primeiro caractere do nome.</param>
      <param name="length">O número de caracteres no nome.</param>
      <returns>A nova cadeia de caracteres atomizada ou uma existente se ela já existe. Se o comprimento for zero, String.Empty será retornado.</returns>
      <exception cref="T:System.IndexOutOfRangeException">0 &gt; <paramref name="offset" />  

ou - 
<paramref name="offset" /> &gt;= <paramref name="array" />.Length 
ou - 
<paramref name="length" /> &gt; <paramref name="array" />.Length 
As condições acima não farão com que uma exceção seja gerada se <paramref name="length" /> =0.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="length" /> &lt; 0.</exception>
    </member>
    <member name="M:System.Xml.XmlNameTable.Add(System.String)">
      <summary>Quando substituído em uma classe derivada, atomiza a cadeia de caracteres especificada e adiciona-o ao <see langword="XmlNameTable" />.</summary>
      <param name="array">O nome a ser adicionado.</param>
      <returns>A nova cadeia de caracteres atomizada ou uma existente se ela já existe.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlNameTable.Get(System.Char[],System.Int32,System.Int32)">
      <summary>Quando substituído em uma classe derivada, obtém a cadeia de caracteres atomizada que contém os mesmos caracteres que o intervalo especificado de caracteres na matriz fornecida.</summary>
      <param name="array">A matriz de caracteres que contém o nome a ser pesquisado.</param>
      <param name="offset">O índice de base zero na matriz que especifica o primeiro caractere do nome.</param>
      <param name="length">O número de caracteres no nome.</param>
      <returns>A cadeia de caracteres atomizada ou <see langword="null" />, se ela ainda não tiver sido atomizada. Se <paramref name="length" /> for zero, String.Empty será retornado.</returns>
      <exception cref="T:System.IndexOutOfRangeException">0 &gt; <paramref name="offset" />  

ou - 
<paramref name="offset" /> &gt;= <paramref name="array" />.Length 
ou - 
<paramref name="length" /> &gt; <paramref name="array" />.Length 
As condições acima não farão com que uma exceção seja gerada se <paramref name="length" /> =0.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="length" /> &lt; 0.</exception>
    </member>
    <member name="M:System.Xml.XmlNameTable.Get(System.String)">
      <summary>Quando substituído em uma classe derivada, obtém a cadeia de caracteres atomizada que contém o mesmo valor daquela especificada.</summary>
      <param name="array">O nome a ser pesquisado.</param>
      <returns>A cadeia de caracteres atomizada ou <see langword="null" />, se ela ainda não tiver sido atomizada.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
    </member>
    <member name="T:System.Xml.XmlNode">
      <summary>Representa um único nó no mapa do documento XML.</summary>
    </member>
    <member name="M:System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)">
      <summary>Adiciona o nó especificado ao final da lista de nós filho desse nó.</summary>
      <param name="newChild">O nó a ser adicionado. Todo o conteúdo do nó a ser adicionado é movido para o local especificado.</param>
      <returns>O nó adicionado.</returns>
      <exception cref="T:System.InvalidOperationException">Esse nó é de um tipo que não permite nós filho do tipo do nó <paramref name="newChild" />.  
O <paramref name="newChild" /> é um ancestral desse nó.</exception>
      <exception cref="T:System.ArgumentException">O <paramref name="newChild" /> foi criado com base em um documento diferente daquele que criou esse nó.  
Este nó é somente leitura.</exception>
    </member>
    <member name="P:System.Xml.XmlNode.Attributes">
      <summary>Obtém um <see cref="T:System.Xml.XmlAttributeCollection" /> que contém os atributos desse nó.</summary>
      <returns>Um <see langword="XmlAttributeCollection" /> que contém os atributos do nó.  
Se o nó for do tipo XmlNodeType.Element, os atributos do nó serão retornados. Caso contrário, essa propriedade retornará <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.BaseURI">
      <summary>Obtém o URI base do nó atual.</summary>
      <returns>O local do qual o nó foi carregado ou String.Empty se o nó não tiver nenhum URI de base.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.ChildNodes">
      <summary>Obtém todos os nós filho do nó.</summary>
      <returns>Um objeto que contém todos os nós filho do nó.  
Se não houver nenhum nó filho, essa propriedade retornará um <see cref="T:System.Xml.XmlNodeList" /> vazio.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.Clone">
      <summary>Cria uma duplicação deste nó.</summary>
      <returns>O nó clonado.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.CloneNode(System.Boolean)">
      <summary>Cria uma duplicata do nó quando substituído em uma classe derivada.</summary>
      <param name="deep">
        <see langword="true" /> para recursivamente clonar a subárvore abaixo do nó especificado; <see langword="false" /> para clonar apenas o próprio nó.</param>
      <returns>O nó clonado.</returns>
      <exception cref="T:System.InvalidOperationException">Chamando esse método em um tipo de nó que não pode ser clonado.</exception>
    </member>
    <member name="M:System.Xml.XmlNode.CreateNavigator">
      <summary>Cria um <see cref="T:System.Xml.XPath.XPathNavigator" /> para navegar esse objeto.</summary>
      <returns>Um objeto <see langword="XPathNavigator" /> usado para navegar o nó. O <see langword="XPathNavigator" /> é posicionado no nó do qual o método foi chamado. Ele não está posicionado na raiz do documento.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.FirstChild">
      <summary>Obtém o primeiro filho do nó.</summary>
      <returns>O primeiro filho do nó. Se não houver nenhum nó, <see langword="null" /> será retornado.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.GetEnumerator">
      <summary>Obtém um enumerador que itera pelos nós filhos do nó atual.</summary>
      <returns>Um objeto <see cref="T:System.Collections.IEnumerator" /> que pode ser usado para iterar pelos nós filho do nó atual.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)">
      <summary>Procura pela declaração xmlns mais próxima para o prefixo especificado no escopo para o nó atual e retorna o URI de namespace na declaração.</summary>
      <param name="prefix">O prefixo cujo URI de namespace você deseja localizar.</param>
      <returns>O URI do namespace do prefixo especificado.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.GetPrefixOfNamespace(System.String)">
      <summary>Procura pela declaração xmlns mais próxima para o URI do namespace determinado que esteja no escopo para o nó atual e retorna o prefixo definido nessa declaração.</summary>
      <param name="namespaceURI">O URI de namespace cujo prefixo você deseja localizar.</param>
      <returns>O prefixo para o URI do namespace especificado.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.HasChildNodes">
      <summary>Obtém um valor que indica se este nó tem nós filho.</summary>
      <returns>
        <see langword="true" /> se o nó tem nós filho; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.InnerText">
      <summary>Obtém ou define os valores concatenados do nó e todos os seus nós filho.</summary>
      <returns>Os valores concatenados do nó e todos os seus nós filho.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.InnerXml">
      <summary>Obtém ou define a marcação que representa apenas os nós filho deste nó.</summary>
      <returns>A marcação dos nós filho deste nó.  
 <see langword="InnerXml" /> não retorna atributos padrão.</returns>
      <exception cref="T:System.InvalidOperationException">A definição dessa propriedade em um nó que não pode ter nós filho.</exception>
      <exception cref="T:System.Xml.XmlException">O XML especificado ao definir essa propriedade não está bem formado.</exception>
    </member>
    <member name="M:System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary>Insere o nó especificado imediatamente após o nó de referência especificado.</summary>
      <param name="newChild">O nó a inserir.</param>
      <param name="refChild">O nó de referência. O <paramref name="newChild" /> é colocado após o <paramref name="refChild" />.</param>
      <returns>O nó que está sendo inserido.</returns>
      <exception cref="T:System.InvalidOperationException">Esse nó é de um tipo que não permite nós filho do tipo do nó <paramref name="newChild" />.  
O <paramref name="newChild" /> é um ancestral desse nó.</exception>
      <exception cref="T:System.ArgumentException">O <paramref name="newChild" /> foi criado com base em um documento diferente daquele que criou esse nó.  
O <paramref name="refChild" /> não é filho desse nó.  
Este nó é somente leitura.</exception>
    </member>
    <member name="M:System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary>Insere o nó especificado imediatamente antes do nó de referência especificado.</summary>
      <param name="newChild">O nó a inserir.</param>
      <param name="refChild">O nó de referência. O <paramref name="newChild" /> é colocado antes desse nó.</param>
      <returns>O nó que está sendo inserido.</returns>
      <exception cref="T:System.InvalidOperationException">O nó atual é de um tipo que não permite nós filho do tipo do nó <paramref name="newChild" />.  
O <paramref name="newChild" /> é um ancestral desse nó.</exception>
      <exception cref="T:System.ArgumentException">O <paramref name="newChild" /> foi criado com base em um documento diferente daquele que criou esse nó.  
O <paramref name="refChild" /> não é filho desse nó.  
Este nó é somente leitura.</exception>
    </member>
    <member name="P:System.Xml.XmlNode.IsReadOnly">
      <summary>Obtém um valor que indica se o nó é somente leitura.</summary>
      <returns>
        <see langword="true" />Se o nó for somente leitura; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.Item(System.String)">
      <summary>Obtém o primeiro elemento filho com o <see cref="P:System.Xml.XmlNode.Name" /> especificado.</summary>
      <param name="name">O nome qualificado do elemento a ser recuperado.</param>
      <returns>O primeiro <see cref="T:System.Xml.XmlElement" /> que corresponde ao nome especificado. Retorna uma referência nula (<see langword="Nothing" /> no Visual Basic) se não houver uma correspondência.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.Item(System.String,System.String)">
      <summary>Obtém o primeiro elemento filho com o <see cref="P:System.Xml.XmlNode.LocalName" /> e o <see cref="P:System.Xml.XmlNode.NamespaceURI" /> especificados.</summary>
      <param name="localname">O nome local do elemento.</param>
      <param name="ns">O URI do namespace do elemento.</param>
      <returns>O primeiro <see cref="T:System.Xml.XmlElement" /> com <paramref name="localname" /> e <paramref name="ns" /> correspondentes. . Retorna uma referência nula (<see langword="Nothing" /> no Visual Basic) se não houver uma correspondência.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.LastChild">
      <summary>Obtém o último filho do nó.</summary>
      <returns>O último filho do nó. Se não houver nenhum nó, <see langword="null" /> será retornado.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.LocalName">
      <summary>Obtém o nome do local do nó, quando substituído em uma classe derivada.</summary>
      <returns>O nome do nó com o prefixo removido. Por exemplo, <see langword="LocalName" /> é livro para o elemento &lt;BK: Book&gt;.  
O nome retornado depende do <see cref="P:System.Xml.XmlNode.NodeType" /> do nó: 
  Tipo 
  Nome 
  Atributo 
  O nome local do atributo.  
  CDATA 
  #cdata-section 
  Comentário 
  #comment 
  Documento 
  #document 
  DocumentFragment 
  #document-fragment 
  DocumentType 
  O nome do tipo de documento.  
  Elemento 
  O nome local do elemento.  
  Entidade 
  O nome da entidade.  
  EntityReference 
  O nome da entidade referenciada.  
  Notation 
  O nome de notação.  
  ProcessingInstruction 
  O destino da instrução de processamento.  
  Texto 
  #text 
  Whitespace 
  #whitespace 
  SignificantWhitespace 
  #significant-whitespace 
  XmlDeclaration 
  #xml-declaration</returns>
    </member>
    <member name="P:System.Xml.XmlNode.Name">
      <summary>Obtém o nome qualificado do nó quando substituído em uma classe derivada.</summary>
      <returns>O nome qualificado do nó. O nome retornado depende do <see cref="P:System.Xml.XmlNode.NodeType" /> do nó: 
  Tipo 
  Nome 
  Atributo 
  O nome qualificado do atributo.  
  CDATA 
  #cdata-section 
  Comentário 
  #comment 
  Documento 
  #document 
  DocumentFragment 
  #document-fragment 
  DocumentType 
  O nome do tipo de documento.  
  Elemento 
  O nome qualificado do elemento.  
  Entidade 
  O nome da entidade.  
  EntityReference 
  O nome da entidade referenciada.  
  Notation 
  O nome de notação.  
  ProcessingInstruction 
  O destino da instrução de processamento.  
  Texto 
  #text 
  Whitespace 
  #whitespace 
  SignificantWhitespace 
  #significant-whitespace 
  XmlDeclaration 
  #xml-declaration</returns>
    </member>
    <member name="P:System.Xml.XmlNode.NamespaceURI">
      <summary>Obtém o URI do namespace deste nó.</summary>
      <returns>O URI do namespace deste nó. Se não houver um URI do namespace, a propriedade retorna a String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.NextSibling">
      <summary>Obtém o nó imediatamente posterior a este nó.</summary>
      <returns>O próximo <see langword="XmlNode" />. Se não houver nenhum próximo nó, <see langword="null" /> será retornado.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.NodeType">
      <summary>Obtém o tipo do nó atual, quando substituído em uma classe derivada.</summary>
      <returns>Um dos valores de <see cref="T:System.Xml.XmlNodeType" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.Normalize">
      <summary>Coloca todos os nós XmlText em toda a profundidade da subárvore sob esse XmlNode em uma forma "normal" em que somente a marcação (isto é, marcas, comentários, instruções de processamento, seções CDATA e referências de entidade) separa os nós XmlText, isto é, não existem nós XmlText adjacentes.</summary>
    </member>
    <member name="P:System.Xml.XmlNode.OuterXml">
      <summary>Obtém a marcação que contém esse nó e todos os nós filho.</summary>
      <returns>A marcação que contém esse nó e todos os nós filho.  
 <see langword="OuterXml" /> não retorna atributos padrão.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.OwnerDocument">
      <summary>Obtém o <see cref="T:System.Xml.XmlDocument" /> ao qual esse nó pertence.</summary>
      <returns>O <see cref="T:System.Xml.XmlDocument" /> ao qual pertence esse nó.  
Se o nó for um <see cref="T:System.Xml.XmlDocument" /> (NodeType igual a XmlNodeType.Document), essa propriedade retornará <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.ParentNode">
      <summary>Obtém o pai deste nó (para os nós que podem ter pais).</summary>
      <returns>O <see langword="XmlNode" /> que é o pai do nó atual. Se um nó acabou de ser criado e ainda não foi adicionado à árvore ou se ele foi removido da árvore, o pai será <see langword="null" />. Para todos os outros nós, o valor retornado depende do <see cref="P:System.Xml.XmlNode.NodeType" /> do nó. A tabela a seguir descreve os possíveis valores retornados para a propriedade <see langword="ParentNode" />.  
  NodeType 
  Valor retornado de ParentNode 
  Attribute, Document, DocumentFragment, Entity, Notation 
  Retorna <see langword="null" />; esses nós não têm pais.  

  CDATA 
  Retorna o elemento ou a referência de entidade que contém a seção CDATA.  

  Comentário 
  Retorna o elemento, a referência de entidade, o tipo de documento ou o documento que contém o comentário.  

  DocumentType 
  Retorna o nó do documento.  

  Elemento 
  Retorna o nó pai do elemento. Se o elemento for o nó raiz na árvore, o pai será o nó do documento.  

  EntityReference 
  Retorna o elemento, o atributo ou a referência de entidade que contém a referência de entidade.  

  ProcessingInstruction 
  Retorna o documento, o elemento, o tipo de documento ou a referência de entidade que contém a instrução de processamento.  

  Texto 
  Retorna o elemento pai, o atributo ou a referência de entidade que contém o nó do texto.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.Prefix">
      <summary>Obtém ou define o prefixo de namespace desse nó.</summary>
      <returns>O prefixo de namespace desse nó. Por exemplo, <see langword="Prefix" /> é bk para o elemento &lt;BK: Book&gt;. Se não houver nenhum prefixo, essa propriedade retornará String.Empty.</returns>
      <exception cref="T:System.ArgumentException">Este nó é somente leitura.</exception>
      <exception cref="T:System.Xml.XmlException">O prefixo especificado contém um caractere inválido.  
 O prefixo especificado está malformado.  
 O prefixo especificado é "xml" e o namespaceURI deste nó é diferente de "http://www.w3.org/XML/1998/namespace".  
 Este nó é um atributo e o prefixo especificado é "xmlns" e o namespaceURI deste nó é diferente de "http://www.w3.org/2000/xmlns/".  
 Esse nó é um atributo e o qualifiedName dele é "xmlns".</exception>
    </member>
    <member name="M:System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)">
      <summary>Adiciona o nó especificado ao início da lista de nós filho desse nó.</summary>
      <param name="newChild">O nó a ser adicionado. Todo o conteúdo do nó a ser adicionado é movido para o local especificado.</param>
      <returns>O nó adicionado.</returns>
      <exception cref="T:System.InvalidOperationException">Esse nó é de um tipo que não permite nós filho do tipo do nó <paramref name="newChild" />.  
O <paramref name="newChild" /> é um ancestral desse nó.</exception>
      <exception cref="T:System.ArgumentException">O <paramref name="newChild" /> foi criado com base em um documento diferente daquele que criou esse nó.  
Este nó é somente leitura.</exception>
    </member>
    <member name="P:System.Xml.XmlNode.PreviousSibling">
      <summary>Obtém o nó imediatamente anterior a este nó.</summary>
      <returns>O <see langword="XmlNode" />anterior. Se não houver um nó anterior, <see langword="null" /> será retornado.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.PreviousText">
      <summary>Obtém o nó de texto que precede imediatamente este nó.</summary>
      <returns>Retorna <see cref="T:System.Xml.XmlNode" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.RemoveAll">
      <summary>Remove todos os nós filho e/ou atributos do nó atual.</summary>
    </member>
    <member name="M:System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)">
      <summary>Remove o nó filho especificado.</summary>
      <param name="oldChild">O nó que está sendo removido.</param>
      <returns>O nó removido.</returns>
      <exception cref="T:System.ArgumentException">O <paramref name="oldChild" /> não é filho desse nó. Ou esse nó é somente leitura.</exception>
    </member>
    <member name="M:System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary>Substitui o nó filho <paramref name="oldChild" /> pelo nó <paramref name="newChild" />.</summary>
      <param name="newChild">O novo nó a ser colocado na lista de filhos.</param>
      <param name="oldChild">O nó que está sendo substituído na lista.</param>
      <returns>O nó substituído.</returns>
      <exception cref="T:System.InvalidOperationException">Esse nó é de um tipo que não permite nós filho do tipo do nó <paramref name="newChild" />.  
O <paramref name="newChild" /> é um ancestral desse nó.</exception>
      <exception cref="T:System.ArgumentException">O <paramref name="newChild" /> foi criado com base em um documento diferente daquele que criou esse nó.  
Este nó é somente leitura.  
O <paramref name="oldChild" /> não é filho desse nó.</exception>
    </member>
    <member name="P:System.Xml.XmlNode.SchemaInfo">
      <summary>Obtém o infoset de validação de esquema de postagem que foi atribuído a esse nó como resultado da validação de esquema.</summary>
      <returns>Um objeto <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> contendo o infoset de validação de esquema de postagem desse nó.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.SelectNodes(System.String)">
      <summary>Seleciona uma lista de nós que correspondem à expressão XPath.</summary>
      <param name="xpath">A expressão XPath.</param>
      <returns>Um <see cref="T:System.Xml.XmlNodeList" /> que contém uma coleção de nós que correspondem à consulta XPath.</returns>
      <exception cref="T:System.Xml.XPath.XPathException">A expressão XPath contém um prefixo. Consulte Exemplos de XPath.</exception>
    </member>
    <member name="M:System.Xml.XmlNode.SelectNodes(System.String,System.Xml.XmlNamespaceManager)">
      <summary>Seleciona uma lista de nós que correspondem à expressão XPath. Todos os prefixos encontrados na expressão XPath são resolvidos usando o <see cref="T:System.Xml.XmlNamespaceManager" /> fornecido.</summary>
      <param name="xpath">A expressão XPath. Consulte Exemplos de XPath.</param>
      <param name="nsmgr">Um <see cref="T:System.Xml.XmlNamespaceManager" /> a ser usado para resolução de namespaces para prefixos na expressão XPath.</param>
      <returns>Um <see cref="T:System.Xml.XmlNodeList" /> que contém uma coleção de nós que correspondem à consulta XPath.</returns>
      <exception cref="T:System.Xml.XPath.XPathException">A expressão XPath contém um prefixo que não está definido no <see langword="XmlNamespaceManager" />.</exception>
    </member>
    <member name="M:System.Xml.XmlNode.SelectSingleNode(System.String)">
      <summary>Seleciona o primeiro <see langword="XmlNode" /> que corresponde à expressão XPath.</summary>
      <param name="xpath">A expressão XPath. Consulte Exemplos de XPath.</param>
      <returns>O primeiro <see langword="XmlNode" /> que corresponde à consulta do XPath ou <see langword="null" /> se nenhum nó correspondente for encontrado.</returns>
      <exception cref="T:System.Xml.XPath.XPathException">A expressão XPath contém um prefixo.</exception>
    </member>
    <member name="M:System.Xml.XmlNode.SelectSingleNode(System.String,System.Xml.XmlNamespaceManager)">
      <summary>Seleciona o primeiro <see langword="XmlNode" /> que corresponde à expressão XPath. Todos os prefixos encontrados na expressão XPath são resolvidos usando o <see cref="T:System.Xml.XmlNamespaceManager" /> fornecido.</summary>
      <param name="xpath">A expressão XPath. Consulte Exemplos de XPath.</param>
      <param name="nsmgr">Um <see cref="T:System.Xml.XmlNamespaceManager" /> a ser usado para resolução de namespaces para prefixos na expressão XPath.</param>
      <returns>O primeiro <see langword="XmlNode" /> que corresponde à consulta do XPath ou <see langword="null" /> se nenhum nó correspondente for encontrado.</returns>
      <exception cref="T:System.Xml.XPath.XPathException">A expressão XPath contém um prefixo que não está definido no <see langword="XmlNamespaceManager" />.</exception>
    </member>
    <member name="M:System.Xml.XmlNode.Supports(System.String,System.String)">
      <summary>Testa se a implementação do DOM implementa um recurso específico.</summary>
      <param name="feature">O nome do pacote do recurso a ser testado. Esse nome não diferencia maiúsculas de minúsculas.</param>
      <param name="version">O número de versão do nome do pacote a ser testado. Se a versão não for especificada (null), dar suporte a qualquer versão do recurso fará com que o método retorne true.</param>
      <returns>
        <see langword="true" /> se o recurso for implementado na versão especificada; caso contrário, <see langword="false" />. A tabela a seguir descreve as combinações que retornam <see langword="true" />.  
  Recurso 
  Versão 
  XML 
  1.0 
  XML 
  2.0</returns>
    </member>
    <member name="M:System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.Xml.XmlNode.GetEnumerator" />.</summary>
      <returns>Um enumerador para a coleção.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.System#ICloneable#Clone">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.Xml.XmlNode.Clone" />.</summary>
      <returns>Uma cópia do nó do qual ele é chamado.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.Value">
      <summary>Obtém ou define o valor do nó.</summary>
      <returns>O valor retornado depende do <see cref="P:System.Xml.XmlNode.NodeType" /> do nó: 
  Tipo 
  Valor 
  Atributo 
  O valor do atributo.  
  CDATASection 
  O conteúdo da seção CDATA.  
  Comentário 
  O conteúdo do comentário.  
  Documento 
 <see langword="null" />.  
  DocumentFragment 
 <see langword="null" />.  
  DocumentType 
 <see langword="null" />.  
  Elemento 
 <see langword="null" />. Você pode usar as propriedades <see cref="P:System.Xml.XmlElement.InnerText" /> ou <see cref="P:System.Xml.XmlElement.InnerXml" /> para acessar o valor do nó do elemento.  
  Entidade 
 <see langword="null" />.  
  EntityReference 
 <see langword="null" />.  
  Notation 
 <see langword="null" />.  
  ProcessingInstruction 
  Todo o conteúdo, exceto o destino.  
  Texto 
  O conteúdo do nó de texto.  
  SignificantWhitespace 
  Os caracteres de espaço em branco. O espaço em branco pode consistir em um ou mais caracteres de espaço, retornos de carro, alimentação de linha ou tabulações.  
  Whitespace 
  Os caracteres de espaço em branco. O espaço em branco pode consistir em um ou mais caracteres de espaço, retornos de carro, alimentação de linha ou tabulações.  
  XmlDeclaration 
  O conteúdo da declaração (ou seja, tudo entre &lt;? XML e?&gt;).</returns>
      <exception cref="T:System.ArgumentException">Definindo o valor de um nó que é somente leitura.</exception>
      <exception cref="T:System.InvalidOperationException">Definindo o valor de um nó que não deveria ter um valor (por exemplo, um nó de elemento).</exception>
    </member>
    <member name="M:System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Salva todos os nós filho do nó do <see cref="T:System.Xml.XmlWriter" /> especificado, quando substituído em uma classe derivada.</summary>
      <param name="w">O <see langword="XmlWriter" /> no qual você deseja salvar.</param>
    </member>
    <member name="M:System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)">
      <summary>Salva o nó atual especificado <see cref="T:System.Xml.XmlWriter" />, quando substituído em uma classe derivada.</summary>
      <param name="w">O <see langword="XmlWriter" /> no qual você deseja salvar.</param>
    </member>
    <member name="T:System.Xml.XmlNodeChangedAction">
      <summary>Especifica o tipo da alteração de nó.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeChangedAction.Change">
      <summary>Um valor de nó está sendo alterado.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeChangedAction.Insert">
      <summary>Um nó está sendo inserido na árvore.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeChangedAction.Remove">
      <summary>Um nó está sendo removido da árvore.</summary>
    </member>
    <member name="T:System.Xml.XmlNodeChangedEventArgs">
      <summary>Fornece dados para os eventos <see cref="E:System.Xml.XmlDocument.NodeChanged" />, <see cref="E:System.Xml.XmlDocument.NodeChanging" />, <see cref="E:System.Xml.XmlDocument.NodeInserted" />, <see cref="E:System.Xml.XmlDocument.NodeInserting" />, <see cref="E:System.Xml.XmlDocument.NodeRemoved" /> e <see cref="E:System.Xml.XmlDocument.NodeRemoving" />.</summary>
    </member>
    <member name="M:System.Xml.XmlNodeChangedEventArgs.#ctor(System.Xml.XmlNode,System.Xml.XmlNode,System.Xml.XmlNode,System.String,System.String,System.Xml.XmlNodeChangedAction)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlNodeChangedEventArgs" />.</summary>
      <param name="node">O <see cref="T:System.Xml.XmlNode" /> que gerou o evento.</param>
      <param name="oldParent">O pai antigo <see cref="T:System.Xml.XmlNode" /> do <see cref="T:System.Xml.XmlNode" /> que gerou o evento.</param>
      <param name="newParent">O novo pai <see cref="T:System.Xml.XmlNode" /> do <see cref="T:System.Xml.XmlNode" /> que gerou o evento.</param>
      <param name="oldValue">O valor antigo do <see cref="T:System.Xml.XmlNode" /> que gerou o evento.</param>
      <param name="newValue">O novo valor da <see cref="T:System.Xml.XmlNode" /> que gerou o evento.</param>
      <param name="action">O <see cref="T:System.Xml.XmlNodeChangedAction" />.</param>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.Action">
      <summary>Obtém um valor que indica o tipo de evento de alteração de nó que está ocorrendo.</summary>
      <returns>Um dos valores de enumeração que descreve o evento de alteração de nó. O <see langword="Action" /> valor não diferencia quando o evento ocorreu (antes ou depois). Você pode criar manipuladores de eventos separados para lidar com ambas as instâncias.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.NewParent">
      <summary>Obtém o valor do <see cref="P:System.Xml.XmlNode.ParentNode" /> após a conclusão da operação.</summary>
      <returns>O valor de <see langword="ParentNode" /> após a conclusão da operação. Essa propriedade retornará <see langword="null" /> se o nó estiver sendo removido.  
   
 Para nós de atributo, essa propriedade <see cref="P:System.Xml.XmlAttribute.OwnerElement" />retorna o.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.NewValue">
      <summary>Obtém o novo valor do nó.</summary>
      <returns>O novo valor do nó. Essa propriedade retornará <see langword="null" /> se o nó não for um atributo nem um nó de texto, ou se o nó estiver sendo removido.  
Se for chamado em <see cref="E:System.Xml.XmlDocument.NodeChanging" /> um evento <see langword="NewValue" /> , retornará o valor do nó se a alteração for bem-sucedida. Se chamado em um <see cref="E:System.Xml.XmlDocument.NodeChanged" /> evento, <see langword="NewValue" /> retorna o valor atual do nó.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.Node">
      <summary>Obtém o <see cref="T:System.Xml.XmlNode" /> que está sendo adicionado, removido ou alterado.</summary>
      <returns>O <see langword="XmlNode" /> que está sendo adicionado, removido ou alterado; essa propriedade nunca retorna <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.OldParent">
      <summary>Obtém o valor do <see cref="P:System.Xml.XmlNode.ParentNode" /> antes do início da operação.</summary>
      <returns>O valor de <see langword="ParentNode" /> antes do início da operação. Essa propriedade retornará <see langword="null" /> se o nó não tiver um pai.  
   
 Para nós de atributo, essa propriedade <see cref="P:System.Xml.XmlAttribute.OwnerElement" />retorna o.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.OldValue">
      <summary>Obtém o valor original do nó.</summary>
      <returns>O valor original do nó. Essa propriedade retornará <see langword="null" /> se o nó não for um atributo nem um nó de texto, ou se o nó estiver sendo inserido.  
Se for chamado em <see cref="E:System.Xml.XmlDocument.NodeChanging" /> um evento <see langword="OldValue" /> , retornará o valor atual do nó que será substituído se a alteração for bem-sucedida. Se chamado em um <see cref="E:System.Xml.XmlDocument.NodeChanged" /> evento, <see langword="OldValue" /> retorna o valor do nó antes da alteração.</returns>
    </member>
    <member name="T:System.Xml.XmlNodeChangedEventHandler">
      <summary>Representa o método que manipula eventos <see cref="E:System.Xml.XmlDocument.NodeChanged" />, <see cref="E:System.Xml.XmlDocument.NodeChanging" />, <see cref="E:System.Xml.XmlDocument.NodeInserted" />, <see cref="E:System.Xml.XmlDocument.NodeInserting" />, <see cref="E:System.Xml.XmlDocument.NodeRemoved" /> e <see cref="E:System.Xml.XmlDocument.NodeRemoving" />.</summary>
      <param name="sender">A fonte do evento.</param>
      <param name="e">Um <see cref="T:System.Xml.XmlNodeChangedEventArgs" /> que contém os dados de evento.</param>
    </member>
    <member name="T:System.Xml.XmlNodeList">
      <summary>Representa uma coleção ordenada de nós.</summary>
    </member>
    <member name="M:System.Xml.XmlNodeList.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlNodeList" />.</summary>
    </member>
    <member name="P:System.Xml.XmlNodeList.Count">
      <summary>Obtém o número de nós no <see langword="XmlNodeList" />.</summary>
      <returns>O número de nós no <see langword="XmlNodeList" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeList.GetEnumerator">
      <summary>Obtém um enumerador que é iterado por meio da coleção de nós.</summary>
      <returns>Um enumerador usado para iterar por meio da coleção de nós.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeList.Item(System.Int32)">
      <summary>Recupera um nó no índice determinado.</summary>
      <param name="index">O índice de base zero na lista de nós.</param>
      <returns>O <see cref="T:System.Xml.XmlNode" /> com o índice especificado na coleção. Se <paramref name="index" /> for maior ou igual ao número de nós na lista, isso retornará <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeList.ItemOf(System.Int32)">
      <summary>Obtém um nó no índice determinado.</summary>
      <param name="i">O índice de base zero na lista de nós.</param>
      <returns>O <see cref="T:System.Xml.XmlNode" /> com o índice especificado na coleção. Se o índice for maior ou igual ao número de nós na lista, <see langword="null" /> será retornado.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeList.PrivateDisposeNodeList">
      <summary>Descarta os recursos na lista de nós em particular.</summary>
    </member>
    <member name="M:System.Xml.XmlNodeList.System#IDisposable#Dispose">
      <summary>Libera todos os recursos usados pela classe <see cref="T:System.Xml.XmlNodeList" />.</summary>
    </member>
    <member name="T:System.Xml.XmlNodeOrder">
      <summary>Descreve a ordem de um nó no documento em comparação a um segundo nó.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeOrder.After">
      <summary>O nó atual desse navegador está depois do nó atual do navegador fornecido.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeOrder.Before">
      <summary>O nó atual desse navegador está antes do nó atual do navegador fornecido.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeOrder.Same">
      <summary>Os dois navegadores são posicionados no mesmo nó.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeOrder.Unknown">
      <summary>As posições de nó não podem ser determinadas na ordem do documento em relação uns aos outros. Isso poderá ocorrer se os dois nós residirem em árvores diferentes.</summary>
    </member>
    <member name="T:System.Xml.XmlNodeReader">
      <summary>Representa um leitor que fornece acesso rápido não armazenado em cache e somente de encaminhamento aos dados XML em um <see cref="T:System.Xml.XmlNode" />.</summary>
    </member>
    <member name="M:System.Xml.XmlNodeReader.#ctor(System.Xml.XmlNode)">
      <summary>Cria uma instância da classe <see langword="XmlNodeReader" /> usando o <see cref="T:System.Xml.XmlNode" /> especificado.</summary>
      <param name="node">O <see langword="XmlNode" /> que você deseja ler.</param>
    </member>
    <member name="P:System.Xml.XmlNodeReader.AttributeCount">
      <summary>Obtém o número de atributos no nó atual.</summary>
      <returns>O número de atributos no nó atual. Esse número inclui atributos padrão.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.BaseURI">
      <summary>Obtém o URI base do nó atual.</summary>
      <returns>O URI de base do nó atual.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.CanReadBinaryContent">
      <summary>Obtém um valor que indica se o <see cref="T:System.Xml.XmlNodeReader" /> implementa os métodos de leitura de conteúdo binário.</summary>
      <returns>
        <see langword="true" />Se os métodos de leitura de conteúdo binário forem implementados; caso <see langword="false" />contrário. A <see cref="T:System.Xml.XmlNodeReader" /> classe sempre retorna <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.CanResolveEntity">
      <summary>Obtém um valor que indica se este leitor pode analisar e resolver entidades.</summary>
      <returns>
        <see langword="true" />Se o leitor puder analisar e resolver entidades; caso contrário <see langword="false" />,. <see langword="XmlNodeReader" /> sempre retorna <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.Close">
      <summary>Altera o <see cref="P:System.Xml.XmlNodeReader.ReadState" /> para <see langword="Closed" />.</summary>
    </member>
    <member name="P:System.Xml.XmlNodeReader.Depth">
      <summary>Obtém a profundidade do nó atual no documento XML.</summary>
      <returns>A profundidade do nó atual no documento XML.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.EOF">
      <summary>Obtém um valor que indica se o leitor está posicionado no final do fluxo.</summary>
      <returns>
        <see langword="true" /> se o leitor estiver posicionado no final do fluxo; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.GetAttribute(System.Int32)">
      <summary>Obtém o valor do atributo com o índice especificado.</summary>
      <param name="attributeIndex">O índice do atributo. O índice é baseado em zero. (O primeiro atributo tem índice 0.)</param>
      <returns>O valor do atributo especificado.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">O parâmetro <paramref name="i" /> é menor que 0 ou maior que ou igual a <see cref="P:System.Xml.XmlNodeReader.AttributeCount" />.</exception>
    </member>
    <member name="M:System.Xml.XmlNodeReader.GetAttribute(System.String)">
      <summary>Obtém o valor do atributo com o nome especificado.</summary>
      <param name="name">O nome qualificado do atributo.</param>
      <returns>O valor do atributo especificado. Se o atributo não for encontrado, <see langword="null" /> será retornado.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.GetAttribute(System.String,System.String)">
      <summary>Obtém o valor do atributo com o nome do local e o URI de namespace especificados.</summary>
      <param name="name">O nome local do atributo.</param>
      <param name="namespaceURI">O URI do namespace do atributo.</param>
      <returns>O valor do atributo especificado. Se o atributo não for encontrado, <see langword="null" /> será retornado.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.HasAttributes">
      <summary>Obtém um valor que indica se o nó atual tem atributos.</summary>
      <returns>
        <see langword="true" /> se o nó atual tiver atributos; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.HasValue">
      <summary>Obtém um valor que indica se o nó atual pode ter um <see cref="P:System.Xml.XmlNodeReader.Value" />.</summary>
      <returns>
        <see langword="true" /> se o nó em que o leitor está posicionado no momento puder ter um <see langword="Value" />, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.IsDefault">
      <summary>Obtém um valor que indica se o nó atual é um atributo que foi gerado com base no valor padrão definido na DTD (definição de tipo de documento) ou no esquema.</summary>
      <returns>
        <see langword="true" />Se o nó atual for um atributo cujo valor foi gerado a partir do valor padrão definido no DTD ou no esquema; <see langword="false" /> se o valor do atributo foi definido explicitamente.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.IsEmptyElement">
      <summary>Obtém um valor que indica se o nó atual é um elemento vazio (por exemplo, <c>&lt;MyElement/&gt;</c>).</summary>
      <returns>
        <see langword="true" />Se o nó atual for um elemento (<see cref="P:System.Xml.XmlNodeReader.NodeType" /><see langword="XmlNodeType.Element" />Equals) e terminar com <c>/ &gt;</c>; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.LocalName">
      <summary>Obtém o nome local do nó atual.</summary>
      <returns>O nome do nó atual com o prefixo removido. Por exemplo, <see langword="LocalName" /> é <see langword="book" /> para o elemento <c>&lt;BK: Book&gt;</c>.  
Para tipos de nó que não têm um nome (como <see langword="Text" />, <see langword="Comment" />e assim por diante), essa propriedade retorna String. Empty.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.LookupNamespace(System.String)">
      <summary>Resolve um prefixo de namespace no escopo do elemento atual.</summary>
      <param name="prefix">O prefixo cujo URI de namespace você deseja resolver. Para corresponder ao namespace padrão, transmita uma cadeia de caracteres vazia. Essa cadeia de caracteres não precisa ser atomizada.</param>
      <returns>O URI de namespace para o qual o prefixo será mapeado ou <see langword="null" /> se nenhum prefixo correspondente for encontrado.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToAttribute(System.Int32)">
      <summary>Move para o atributo com o índice especificado.</summary>
      <param name="attributeIndex">O índice do atributo.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">O parâmetro <paramref name="i" /> é menor que 0 ou maior que ou igual a <see cref="P:System.Xml.XmlReader.AttributeCount" />.</exception>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToAttribute(System.String)">
      <summary>Move para o atributo com o nome especificado.</summary>
      <param name="name">O nome qualificado do atributo.</param>
      <returns>
        <see langword="true" /> se o atributo for encontrado; caso contrário, <see langword="false" />. Se <see langword="false" />, a posição do leitor não será alterada.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToAttribute(System.String,System.String)">
      <summary>Move para o atributo com o nome local e o URI de namespace especificados.</summary>
      <param name="name">O nome local do atributo.</param>
      <param name="namespaceURI">O URI do namespace do atributo.</param>
      <returns>
        <see langword="true" /> se o atributo for encontrado; caso contrário, <see langword="false" />. Se <see langword="false" />, a posição do leitor não será alterada.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToElement">
      <summary>Move para o elemento que contém o nó de atributo atual.</summary>
      <returns>
        <see langword="true" /> se o leitor estiver posicionado em um atributo (o leitor se move para o elemento que possui o atributo); <see langword="false" /> se o leitor não estiver posicionado em um atributo (a posição do leitor não é alterada).</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToFirstAttribute">
      <summary>Move para o primeiro atributo.</summary>
      <returns>
        <see langword="true" /> se um atributo existir (o leitor é movido para o primeiro atributo); caso contrário, <see langword="false" /> (a posição do leitor não é alterada).</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToNextAttribute">
      <summary>Move para o próximo atributo.</summary>
      <returns>
        <see langword="true" /> se houver um atributo seguinte; <see langword="false" /> se não houver mais nenhum atributo.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.Name">
      <summary>Obtém o nome qualificado do nó atual.</summary>
      <returns>O nome qualificado do nó atual. Por exemplo, <see langword="Name" /> é <see langword="bk:book" /> para o elemento <c>&lt;BK: Book&gt;</c>.  
O nome retornado depende do <see cref="P:System.Xml.XmlNodeReader.NodeType" /> do nó. Os seguintes tipos de nó retornam os valores listados. Todos os outros tipos de nó retornam uma cadeia de caracteres vazia.  
  Tipo de nó 
  Nome 
 <see langword="Attribute" /> O nome do atributo.  

 <see langword="DocumentType" /> O nome do tipo de documento.  

 <see langword="Element" /> O nome da marcação.  

 <see langword="EntityReference" /> O nome da entidade referenciada.  

 <see langword="ProcessingInstruction" /> O destino da instrução de processamento.  

 <see langword="XmlDeclaration" /> A cadeia de caracteres literal <see langword="xml" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.NamespaceURI">
      <summary>Obtém o URI de namespace (conforme definido na especificação de Namespace do W3C) do nó no qual o leitor está posicionado.</summary>
      <returns>O URI do namespace do nó atual; caso contrário, uma cadeia de caracteres vazia.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.NameTable">
      <summary>Obtém o <see cref="T:System.Xml.XmlNameTable" /> associado à essa implementação.</summary>
      <returns>O <see langword="XmlNameTable" /> que permite obter a versão atomizada de uma cadeia de caracteres no nó.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.NodeType">
      <summary>Obtém o tipo do nó atual.</summary>
      <returns>Um dos valores <see cref="T:System.Xml.XmlNodeType" /> que representa o tipo do nó atual.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.Prefix">
      <summary>Obtém o prefixo de namespace associado ao nó atual.</summary>
      <returns>O prefixo de namespace associado com o nó atual.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.Read">
      <summary>Lê o próximo nó do fluxo.</summary>
      <returns>
        <see langword="true" /> se o próximo nó for lido com êxito; <see langword="false" /> se não houver mais nenhum nó para ler.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadAttributeValue">
      <summary>Analisa o valor do atributo em um ou mais nós <see langword="Text" />, <see langword="EntityReference" /> ou <see langword="EndEntity" />.</summary>
      <returns>
        <see langword="true" /> se houver nós para retornar.  
 <see langword="false" /> se o leitor não estiver posicionado em um nó de atributo quando a chamada inicial for feita ou se todos os valores de atributo tiverem sido lidos.  
Um atributo vazio, como <c>misc=""</c>, retorna <see langword="true" /> com um único nó com um valor de String.Empty.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Lê o conteúdo e retorna os bytes binários decodificados de Base64.</summary>
      <param name="buffer">O buffer para o qual o texto resultante será copiado. Este valor pode não ser <see langword="null" />.</param>
      <param name="index">O deslocamento do buffer no qual o resultado começará a ser copiado.</param>
      <param name="count">O número máximo de bytes a serem copiados para o buffer. O número real de bytes copiados é retornado deste método.</param>
      <returns>O número de bytes gravados no buffer.</returns>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Não há suporte para <see cref="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /> no nó atual.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O índice de buffer ou de índice + contagem é maior que o tamanho do buffer alocado.</exception>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Lê o conteúdo e retorna os bytes binários decodificados BinHex.</summary>
      <param name="buffer">O buffer para o qual o texto resultante será copiado. Este valor pode não ser <see langword="null" />.</param>
      <param name="index">O deslocamento do buffer no qual o resultado começará a ser copiado.</param>
      <param name="count">O número máximo de bytes a serem copiados para o buffer. O número real de bytes copiados é retornado deste método.</param>
      <returns>O número de bytes gravados no buffer.</returns>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Não há suporte para <see cref="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> no nó atual.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O índice de buffer ou de índice + contagem é maior que o tamanho do buffer alocado.</exception>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Lê o elemento e decodifica o conteúdo de Base64.</summary>
      <param name="buffer">O buffer para o qual o texto resultante será copiado. Este valor pode não ser <see langword="null" />.</param>
      <param name="index">O deslocamento do buffer no qual o resultado começará a ser copiado.</param>
      <param name="count">O número máximo de bytes a serem copiados para o buffer. O número real de bytes copiados é retornado deste método.</param>
      <returns>O número de bytes gravados no buffer.</returns>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">O nó atual não é um nó de elemento.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O índice de buffer ou de índice + contagem é maior que o tamanho do buffer alocado.</exception>
      <exception cref="T:System.Xml.XmlException">O elemento contém conteúdo misto.</exception>
      <exception cref="T:System.FormatException">Não é possível converter conteúdo no tipo solicitado.</exception>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Lê o elemento e decodifica o conteúdo BinHex.</summary>
      <param name="buffer">O buffer para o qual o texto resultante será copiado. Este valor pode não ser <see langword="null" />.</param>
      <param name="index">O deslocamento do buffer no qual o resultado começará a ser copiado.</param>
      <param name="count">O número máximo de bytes a serem copiados para o buffer. O número real de bytes copiados é retornado deste método.</param>
      <returns>O número de bytes gravados no buffer.</returns>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">O nó atual não é um nó de elemento.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O índice de buffer ou de índice + contagem é maior que o tamanho do buffer alocado.</exception>
      <exception cref="T:System.Xml.XmlException">O elemento contém conteúdo misto.</exception>
      <exception cref="T:System.FormatException">Não é possível converter conteúdo no tipo solicitado.</exception>
    </member>
    <member name="P:System.Xml.XmlNodeReader.ReadState">
      <summary>Obtém o estado do leitor.</summary>
      <returns>Um dos valores de <see cref="T:System.Xml.ReadState" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadString">
      <summary>Lê o conteúdo de um elemento ou nó de texto como uma cadeia de caracteres.</summary>
      <returns>O conteúdo do elemento ou nó de texto semelhantes (o que pode incluir CDATA, nós de texto e assim por diante). Essa poderá ser uma cadeia de caracteres vazia se o leitor estiver posicionado em algo diferente de um elemento ou nó de texto ou, se não houver nenhum outro conteúdo de texto para retornar no contexto atual.  
 <see langword="Note:" /> O nó de texto pode ser um elemento ou um nó de texto do atributo.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ResolveEntity">
      <summary>Resolve a referência de entidade para nós <see langword="EntityReference" />.</summary>
      <exception cref="T:System.InvalidOperationException">O leitor não está posicionado em um nó <see langword="EntityReference" />.</exception>
    </member>
    <member name="P:System.Xml.XmlNodeReader.SchemaInfo">
      <summary>Obtém as informações de esquema que foram atribuídas ao nó atual.</summary>
      <returns>Um objeto <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> que contém as informações de esquema para o nó atual.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.Skip">
      <summary>Ignora os filhos do nó atual.</summary>
    </member>
    <member name="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />.</summary>
      <param name="scope">Objeto <see cref="T:System.Xml.XmlNamespaceScope" />.</param>
      <returns>O objeto <see cref="T:System.Collections.IDictionary" /> que contém os namespaces que estão no escopo.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" />.</summary>
      <param name="prefix">O <see cref="T:System.String" /> que contém o prefixo do namespace.</param>
      <returns>O <see cref="T:System.String" /> que contém o nome do namespace.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" />.</summary>
      <param name="namespaceName">O objeto <see cref="T:System.String" /> que identifica o namespace.</param>
      <returns>O objeto <see cref="T:System.String" /> que contém o prefixo de namespace.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.Value">
      <summary>Obtém o valor de texto do nó atual.</summary>
      <returns>O valor retornado depende do <see cref="P:System.Xml.XmlNodeReader.NodeType" /> do nó. A tabela a seguir lista os tipos de nós que têm um valor a ser retornado. Todos os outros tipos de nó retornam String. Empty.  
  Tipo de nó 
  Valor 
 <see langword="Attribute" /> O valor do atributo.  

 <see langword="CDATA" /> O conteúdo da seção CDATA.  

 <see langword="Comment" /> O conteúdo do comentário.  

 <see langword="DocumentType" /> O subconjunto interno.  

 <see langword="ProcessingInstruction" /> Todo o conteúdo, exceto o destino.  

 <see langword="SignificantWhitespace" /> Espaço em branco entre marcação em um modelo de conteúdo misto.  

 <see langword="Text" /> O conteúdo do nó de texto.  

 <see langword="Whitespace" /> Espaço em branco entre a marcação.  

 <see langword="XmlDeclaration" /> O conteúdo da declaração.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.XmlLang">
      <summary>Obtém o escopo de <see langword="xml:lang" /> atual.</summary>
      <returns>O escopo <see langword="xml:lang" /> atual.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.XmlSpace">
      <summary>Obtém o escopo de <see langword="xml:space" /> atual.</summary>
      <returns>Um dos valores de <see cref="T:System.Xml.XmlSpace" />. Se não <see langword="xml:space" /> existir nenhum escopo, essa propriedade será padronizada como. <see langword="XmlSpace.None" /></returns>
    </member>
    <member name="T:System.Xml.XmlNodeType">
      <summary>Especifica o tipo de nó.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Attribute">
      <summary>Um atributo (por exemplo, <c>id='123'</c> ).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.CDATA">
      <summary>Uma seção CDATA (por exemplo, <c>&lt;![CDATA[meu texto de escape]]&gt;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Comment">
      <summary>Um comentário (por exemplo, <c>&lt;!-- meu comentário --&gt;</c> ).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Document">
      <summary>Um objeto de documento que, como a raiz da árvore do documento, fornece acesso a todo o documento XML.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.DocumentFragment">
      <summary>Um fragmento de documento.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.DocumentType">
      <summary>A declaração de tipo de documento, indicada pela seguinte marca (por exemplo, <c>&lt;!DOCTYPE...&gt;</c> ).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Element">
      <summary>Um elemento (por exemplo, <c>&lt;item&gt;</c> ).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.EndElement">
      <summary>Uma marca de elemento de fim (por exemplo, <c>&lt;/item&gt;</c> ).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.EndEntity">
      <summary>Retornado quando <see langword="XmlReader" /> chega ao final da substituição de entidade como resultado de uma chamada para <see cref="M:System.Xml.XmlReader.ResolveEntity" />.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Entity">
      <summary>Uma declaração de entidade (por exemplo, <c>&lt;!ENTITY...&gt;</c> ).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.EntityReference">
      <summary>Uma referência a uma entidade (por exemplo, <c>&amp;num;</c> ).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.None">
      <summary>Isto é retornado pelo <see cref="T:System.Xml.XmlReader" /> se um método <see langword="Read" /> não foi chamado.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Notation">
      <summary>Uma notação na declaração de tipo de documento (por exemplo, <c>&lt;!NOTATION...&gt;</c> ).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.ProcessingInstruction">
      <summary>Uma instrução de processamento (por exemplo, <c>&lt;?pi test?&gt;</c> ).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.SignificantWhitespace">
      <summary>Espaço em branco entre a marcação em um modelo de conteúdo misto ou espaço em branco dentro do escopo <c>xml:space="preserve"</c>.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Text">
      <summary>O conteúdo de texto de um nó.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Whitespace">
      <summary>Espaço em branco entre a marcação.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.XmlDeclaration">
      <summary>A declaração XML (por exemplo, <c>&lt;?xml version='1.0'?&gt;</c> ).</summary>
    </member>
    <member name="T:System.Xml.XmlNotation">
      <summary>Representa uma declaração de notação, como &lt;!NOTATION... &gt;.</summary>
    </member>
    <member name="M:System.Xml.XmlNotation.CloneNode(System.Boolean)">
      <summary>Cria uma duplicação deste nó. Não é possível clonar nós de notação. Chamar este método em um objeto <see cref="T:System.Xml.XmlNotation" /> gera uma exceção.</summary>
      <param name="deep">
        <see langword="true" /> para recursivamente clonar a subárvore abaixo do nó especificado; <see langword="false" /> para clonar apenas o próprio nó.</param>
      <returns>Uma cópia <see cref="T:System.Xml.XmlNode" /> do nó do qual o método é chamado.</returns>
      <exception cref="T:System.InvalidOperationException">Não é possível clonar nós de notação. Chamar este método em um objeto <see cref="T:System.Xml.XmlNotation" /> gera uma exceção.</exception>
    </member>
    <member name="P:System.Xml.XmlNotation.InnerXml">
      <summary>Obtém a marcação que representa os filhos deste nó.</summary>
      <returns>Para <see langword="XmlNotation" /> nós, String. Empty é retornado.</returns>
      <exception cref="T:System.InvalidOperationException">Tentativa de definir a propriedade.</exception>
    </member>
    <member name="P:System.Xml.XmlNotation.IsReadOnly">
      <summary>Obtém um valor que indica se o nó é somente leitura.</summary>
      <returns>
        <see langword="true" />Se o nó for somente leitura; caso contrário <see langword="false" />,.  
Como <see langword="XmlNotation" /> os nós são somente leitura, essa propriedade sempre retorna <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNotation.LocalName">
      <summary>Obtém o nome do nó atual sem o prefixo de namespace.</summary>
      <returns>Para <see langword="XmlNotation" /> nós, essa propriedade retorna o nome da notação.</returns>
    </member>
    <member name="P:System.Xml.XmlNotation.Name">
      <summary>Obtém o nome do nó atual.</summary>
      <returns>O nome da notação.</returns>
    </member>
    <member name="P:System.Xml.XmlNotation.NodeType">
      <summary>Obtém o tipo do nó atual.</summary>
      <returns>O tipo de nó. Para <see langword="XmlNotation" /> nós, o valor é XmlNodeType. Notation.</returns>
    </member>
    <member name="P:System.Xml.XmlNotation.OuterXml">
      <summary>Obtém a marcação que representa este nó e todos os seus filhos.</summary>
      <returns>Para <see langword="XmlNotation" /> nós, String. Empty é retornado.</returns>
    </member>
    <member name="P:System.Xml.XmlNotation.PublicId">
      <summary>Obtém o valor do identificador público na declaração de notação.</summary>
      <returns>O identificador público na notação. Se não houver nenhum identificador público, <see langword="null" /> será retornado.</returns>
    </member>
    <member name="P:System.Xml.XmlNotation.SystemId">
      <summary>Obtém o valor do identificador do sistema na declaração de notação.</summary>
      <returns>O identificador do sistema na notação. Se não houver nenhum identificador do sistema <see langword="null" /> , será retornado.</returns>
    </member>
    <member name="M:System.Xml.XmlNotation.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Salva os filhos do nó no <see cref="T:System.Xml.XmlWriter" /> especificado. Este método não tem nenhum efeito em nós <see langword="XmlNotation" />.</summary>
      <param name="w">O <see langword="XmlWriter" /> no qual você deseja salvar.</param>
    </member>
    <member name="M:System.Xml.XmlNotation.WriteTo(System.Xml.XmlWriter)">
      <summary>Salva o nó no <see cref="T:System.Xml.XmlWriter" /> especificado. Este método não tem nenhum efeito em nós <see langword="XmlNotation" />.</summary>
      <param name="w">O <see langword="XmlWriter" /> no qual você deseja salvar.</param>
    </member>
    <member name="T:System.Xml.XmlOutputMethod">
      <summary>Especifica o método usado para serializar a saída <see cref="T:System.Xml.XmlWriter" />.</summary>
    </member>
    <member name="F:System.Xml.XmlOutputMethod.AutoDetect">
      <summary>Use as regras XSLT para escolher entre os métodos de saída <see cref="F:System.Xml.XmlOutputMethod.Xml" /> e <see cref="F:System.Xml.XmlOutputMethod.Html" /> no tempo de execução.</summary>
    </member>
    <member name="F:System.Xml.XmlOutputMethod.Html">
      <summary>Serialize de acordo com as regras HTML especificadas por XSLT.</summary>
    </member>
    <member name="F:System.Xml.XmlOutputMethod.Text">
      <summary>Serialize apenas os blocos de texto.</summary>
    </member>
    <member name="F:System.Xml.XmlOutputMethod.Xml">
      <summary>Serialize de acordo com as regras do XML 1.0.</summary>
    </member>
    <member name="T:System.Xml.XmlParserContext">
      <summary>Fornece todas as informações de contexto obrigatórias para o <see cref="T:System.Xml.XmlReader" /> para analisar um fragmento XML.</summary>
    </member>
    <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.String,System.String,System.String,System.String,System.String,System.Xml.XmlSpace)">
      <summary>Inicializa uma nova instância da classe <see langword="XmlParserContext" /> com o <see cref="T:System.Xml.XmlNameTable" /> especificado, <see cref="T:System.Xml.XmlNamespaceManager" />, URI de base, <see langword="xml:lang" />, <see langword="xml:space" /> e valores de tipo de documento.</summary>
      <param name="nt">O <see cref="T:System.Xml.XmlNameTable" /> a ser usado para atomizar as cadeias de caracteres. Se for <see langword="null" />, a tabela de nome usada para construir o <paramref name="nsMgr" /> será usada em vez disso. Para obter mais informações sobre cadeias de caracteres atomizadas, consulte <see cref="T:System.Xml.XmlNameTable" />.</param>
      <param name="nsMgr">O <see cref="T:System.Xml.XmlNamespaceManager" /> a ser usado para consultar informações de namespace ou <see langword="null" />.</param>
      <param name="docTypeName">O nome da declaração de tipo de documento.</param>
      <param name="pubId">O identificador público.</param>
      <param name="sysId">O identificador do sistema.</param>
      <param name="internalSubset">O subconjunto de DTD interno. O subconjunto de DTD é usado para resolução de entidade, não para validação de documento.</param>
      <param name="baseURI">O URI base do fragmento de XML (o local do qual o fragmento foi carregado).</param>
      <param name="xmlLang">O escopo de <see langword="xml:lang" />.</param>
      <param name="xmlSpace">Um valor <see cref="T:System.Xml.XmlSpace" /> que indica o escopo de <see langword="xml:space" />.</param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="nt" /> não é o mesmo <see langword="XmlNameTable" /> usado para construir <paramref name="nsMgr" />.</exception>
    </member>
    <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.String,System.String,System.String,System.String,System.String,System.Xml.XmlSpace,System.Text.Encoding)">
      <summary>Inicializa uma nova instância da classe <see langword="XmlParserContext" /> com o <see cref="T:System.Xml.XmlNameTable" /> especificado, <see cref="T:System.Xml.XmlNamespaceManager" />, URI de base, <see langword="xml:lang" />, <see langword="xml:space" />, codificação e valores de tipo de documento.</summary>
      <param name="nt">O <see cref="T:System.Xml.XmlNameTable" /> a ser usado para atomizar as cadeias de caracteres. Se for <see langword="null" />, a tabela de nome usada para construir o <paramref name="nsMgr" /> será usada em vez disso. Para obter mais informações sobre cadeias de caracteres atomizadas, consulte <see cref="T:System.Xml.XmlNameTable" />.</param>
      <param name="nsMgr">O <see cref="T:System.Xml.XmlNamespaceManager" /> a ser usado para consultar informações de namespace ou <see langword="null" />.</param>
      <param name="docTypeName">O nome da declaração de tipo de documento.</param>
      <param name="pubId">O identificador público.</param>
      <param name="sysId">O identificador do sistema.</param>
      <param name="internalSubset">O subconjunto de DTD interno. A DTD é usada para resolução de entidade, não para validação de documento.</param>
      <param name="baseURI">O URI base do fragmento de XML (o local do qual o fragmento foi carregado).</param>
      <param name="xmlLang">O escopo de <see langword="xml:lang" />.</param>
      <param name="xmlSpace">Um valor <see cref="T:System.Xml.XmlSpace" /> que indica o escopo de <see langword="xml:space" />.</param>
      <param name="enc">Um objeto <see cref="T:System.Text.Encoding" /> que indica a configuração de codificação.</param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="nt" /> não é o mesmo <see langword="XmlNameTable" /> usado para construir <paramref name="nsMgr" />.</exception>
    </member>
    <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.Xml.XmlSpace)">
      <summary>Inicializa uma nova instância da classe <see langword="XmlParserContext" /> com os valores <see cref="T:System.Xml.XmlNameTable" />, <see cref="T:System.Xml.XmlNamespaceManager" />, <see langword="xml:lang" /> e <see langword="xml:space" /> especificados.</summary>
      <param name="nt">O <see cref="T:System.Xml.XmlNameTable" /> a ser usado para atomizar as cadeias de caracteres. Se for <see langword="null" />, a tabela de nome usada para construir o <paramref name="nsMgr" /> será usada em vez disso. Para obter mais informações sobre cadeias de caracteres atomizadas, consulte <see cref="T:System.Xml.XmlNameTable" />.</param>
      <param name="nsMgr">O <see cref="T:System.Xml.XmlNamespaceManager" /> a ser usado para consultar informações de namespace ou <see langword="null" />.</param>
      <param name="xmlLang">O escopo de <see langword="xml:lang" />.</param>
      <param name="xmlSpace">Um valor <see cref="T:System.Xml.XmlSpace" /> que indica o escopo de <see langword="xml:space" />.</param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="nt" /> não é o mesmo <see langword="XmlNameTable" /> usado para construir <paramref name="nsMgr" />.</exception>
    </member>
    <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.Xml.XmlSpace,System.Text.Encoding)">
      <summary>Inicializa uma nova instância da classe <see langword="XmlParserContext" /> com <see cref="T:System.Xml.XmlNameTable" />, <see cref="T:System.Xml.XmlNamespaceManager" />, <see langword="xml:lang" />, <see langword="xml:space" /> e codificação especificados.</summary>
      <param name="nt">O <see cref="T:System.Xml.XmlNameTable" /> a ser usado para atomizar as cadeias de caracteres. Se for <see langword="null" />, a tabela de nome usada para construir o <paramref name="nsMgr" /> será usada em vez disso. Para obter mais informações sobre cadeias de caracteres atomizadas, consulte <see cref="T:System.Xml.XmlNameTable" />.</param>
      <param name="nsMgr">O <see cref="T:System.Xml.XmlNamespaceManager" /> a ser usado para consultar informações de namespace ou <see langword="null" />.</param>
      <param name="xmlLang">O escopo de <see langword="xml:lang" />.</param>
      <param name="xmlSpace">Um valor <see cref="T:System.Xml.XmlSpace" /> que indica o escopo de <see langword="xml:space" />.</param>
      <param name="enc">Um objeto <see cref="T:System.Text.Encoding" /> que indica a configuração de codificação.</param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="nt" /> não é o mesmo <see langword="XmlNameTable" /> usado para construir <paramref name="nsMgr" />.</exception>
    </member>
    <member name="P:System.Xml.XmlParserContext.BaseURI">
      <summary>Obtém ou define o URI de base.</summary>
      <returns>O URI de base a ser usado para resolver o arquivo DTD.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.DocTypeName">
      <summary>Obtém ou define o nome da declaração de tipo de documento.</summary>
      <returns>O nome da declaração de tipo de documento.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.Encoding">
      <summary>Obtém ou define o tipo de codificação.</summary>
      <returns>Um <see cref="T:System.Text.Encoding" /> objeto que indica o tipo de codificação.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.InternalSubset">
      <summary>Obtém ou define o subconjunto de DTD interno.</summary>
      <returns>O subconjunto de DTD interno. Por exemplo, essa propriedade retorna tudo entre colchetes <c>&lt;! Documento DOCTYPE [...] &gt;</c>.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.NamespaceManager">
      <summary>Obtém ou define o <see cref="T:System.Xml.XmlNamespaceManager" />.</summary>
      <returns>O <see langword="XmlNamespaceManager" />.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.NameTable">
      <summary>Obtém o <see cref="T:System.Xml.XmlNameTable" /> usado para atomizar cadeias de caracteres. Para obter mais informações sobre cadeias de caracteres atomizadas, consulte <see cref="T:System.Xml.XmlNameTable" />.</summary>
      <returns>O <see langword="XmlNameTable" />.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.PublicId">
      <summary>Obtém ou define o identificador público.</summary>
      <returns>O identificador público.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.SystemId">
      <summary>Obtém ou define o identificador do sistema.</summary>
      <returns>O identificador do sistema.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.XmlLang">
      <summary>Obtém ou define o escopo de <see langword="xml:lang" /> atual.</summary>
      <returns>O escopo <see langword="xml:lang" /> atual. Se não houver nenhum <see langword="xml:lang" /> escopo, <see langword="String.Empty" /> será retornado.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.XmlSpace">
      <summary>Obtém ou define o escopo de <see langword="xml:space" /> atual.</summary>
      <returns>Um valor <see cref="T:System.Xml.XmlSpace" /> que indica o escopo de <see langword="xml:space" />.</returns>
    </member>
    <member name="T:System.Xml.XmlProcessingInstruction">
      <summary>Representa uma instrução de processamento, a qual é definida pelo XML para manter informações específicas do processador no texto do documento.</summary>
    </member>
    <member name="M:System.Xml.XmlProcessingInstruction.#ctor(System.String,System.String,System.Xml.XmlDocument)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlProcessingInstruction" />.</summary>
      <param name="target">O destino da instrução de processamento; consulte a propriedade <see cref="P:System.Xml.XmlProcessingInstruction.Target" />.</param>
      <param name="data">O conteúdo da instrução; consulte a propriedade <see cref="P:System.Xml.XmlProcessingInstruction.Data" />.</param>
      <param name="doc">O documento XML pai.</param>
    </member>
    <member name="M:System.Xml.XmlProcessingInstruction.CloneNode(System.Boolean)">
      <summary>Cria uma duplicação deste nó.</summary>
      <param name="deep">
        <see langword="true" /> para recursivamente clonar a subárvore abaixo do nó especificado; <see langword="false" /> para clonar apenas o próprio nó.</param>
      <returns>O nó duplicado.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.Data">
      <summary>Obtém ou define o conteúdo da instrução de processamento, excluindo o destino.</summary>
      <returns>O conteúdo da instrução de processamento, excluindo o destino.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.InnerText">
      <summary>Obtém ou define os valores concatenados do nó e todos os seus filhos.</summary>
      <returns>Os valores concatenados do nó e de todos os filhos.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.LocalName">
      <summary>Obtém o nome local do nó.</summary>
      <returns>Para nós de instrução de processamento, essa propriedade retorna o destino da instrução de processamento.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.Name">
      <summary>Obtém o nome qualificado do nó.</summary>
      <returns>Para nós de instrução de processamento, essa propriedade retorna o destino da instrução de processamento.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.NodeType">
      <summary>Obtém o tipo do nó atual.</summary>
      <returns>Para <see langword="XmlProcessingInstruction" /> nós, esse valor é XmlNodeType. ProcessingInstruction.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.Target">
      <summary>Obtém o destino da instrução de processamento.</summary>
      <returns>O destino da instrução de processamento.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.Value">
      <summary>Obtém ou define o valor do nó.</summary>
      <returns>Todo o conteúdo da instrução de processamento, excluindo o destino.</returns>
      <exception cref="T:System.ArgumentException">O nó é somente leitura.</exception>
    </member>
    <member name="M:System.Xml.XmlProcessingInstruction.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Salva todos os filhos do nó no <see cref="T:System.Xml.XmlWriter" /> especificado. Como os nós de ProcessingInstruction não têm filhos, esse método não tem efeito.</summary>
      <param name="w">O <see langword="XmlWriter" /> no qual você deseja salvar.</param>
    </member>
    <member name="M:System.Xml.XmlProcessingInstruction.WriteTo(System.Xml.XmlWriter)">
      <summary>Salva o nó no <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w">O <see langword="XmlWriter" /> no qual você deseja salvar.</param>
    </member>
    <member name="T:System.Xml.XmlQualifiedName">
      <summary>Representa um nome qualificado de XML.</summary>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlQualifiedName" /> com o nome especificado.</summary>
      <param name="name">O nome local a ser usado como o nome do objeto <see cref="T:System.Xml.XmlQualifiedName" />.</param>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.#ctor(System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlQualifiedName" /> com o nome especificado e o namespace.</summary>
      <param name="name">O nome local a ser usado como o nome do objeto <see cref="T:System.Xml.XmlQualifiedName" />.</param>
      <param name="ns">O namespace do objeto <see cref="T:System.Xml.XmlQualifiedName" />.</param>
    </member>
    <member name="F:System.Xml.XmlQualifiedName.Empty">
      <summary>Fornece um <see cref="T:System.Xml.XmlQualifiedName" /> vazio.</summary>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.Equals(System.Object)">
      <summary>Determina se o objeto <see cref="T:System.Xml.XmlQualifiedName" /> especificado é igual ao objeto <see cref="T:System.Xml.XmlQualifiedName" /> atual.</summary>
      <param name="other">O <see cref="T:System.Xml.XmlQualifiedName" /> de comparação.</param>
      <returns>
        <see langword="true" /> se os dois forem o mesmo objeto de instância; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.GetHashCode">
      <summary>Retorna o código hash para o <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <returns>Um código hash para este objeto.</returns>
    </member>
    <member name="P:System.Xml.XmlQualifiedName.IsEmpty">
      <summary>Obtém um valor que indica se o <see cref="T:System.Xml.XmlQualifiedName" /> está vazio.</summary>
      <returns>
        <see langword="true" />Se Name e namespace forem cadeias de caracteres vazias; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Xml.XmlQualifiedName.Name">
      <summary>Obtém uma representação de cadeia de caracteres do nome qualificado do <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <returns>Uma representação de cadeia de caracteres do nome qualificado ou cadeia de caracteres. Empty se um nome não estiver definido para o objeto.</returns>
    </member>
    <member name="P:System.Xml.XmlQualifiedName.Namespace">
      <summary>Obtém uma representação de cadeia de caracteres do namespace do <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <returns>Uma representação de cadeia de caracteres do namespace ou da cadeia de caracteres. Empty se um namespace não estiver definido para o objeto.</returns>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.op_Equality(System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>Compara dois objetos <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <param name="a">Um <see cref="T:System.Xml.XmlQualifiedName" /> de comparação.</param>
      <param name="b">Um <see cref="T:System.Xml.XmlQualifiedName" /> de comparação.</param>
      <returns>
        <see langword="true" /> se os dois objetos tiverem os mesmos valores de nome e de namespace; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.op_Inequality(System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>Compara dois objetos <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <param name="a">Um <see cref="T:System.Xml.XmlQualifiedName" /> de comparação.</param>
      <param name="b">Um <see cref="T:System.Xml.XmlQualifiedName" /> de comparação.</param>
      <returns>
        <see langword="true" /> se os valores de nome e namespace para os dois objetos forem diferentes; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.ToString">
      <summary>Retorna o valor de cadeia de caracteres do <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <returns>O valor da cadeia de caracteres do <see cref="T:System.Xml.XmlQualifiedName" /> no formato <see langword="namespace:localname" />. Se o objeto não tiver um namespace definido, esse método retornará apenas o nome local.</returns>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.ToString(System.String,System.String)">
      <summary>Retorna o valor de cadeia de caracteres do <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <param name="name">O nome do objeto.</param>
      <param name="ns">O namespace do objeto.</param>
      <returns>O valor da cadeia de caracteres do <see cref="T:System.Xml.XmlQualifiedName" /> no formato <see langword="namespace:localname" />. Se o objeto não tiver um namespace definido, esse método retornará apenas o nome local.</returns>
    </member>
    <member name="T:System.Xml.XmlReader">
      <summary>Representa um leitor que fornece acesso rápido não armazenado em cache e somente de encaminhamento aos dados XML.</summary>
    </member>
    <member name="M:System.Xml.XmlReader.#ctor">
      <summary>Inicializa uma nova instância da classe <see langword="XmlReader" />.</summary>
    </member>
    <member name="P:System.Xml.XmlReader.AttributeCount">
      <summary>Quando substituído em uma classe derivada, obtém o número de atributos no nó atual.</summary>
      <returns>O número de atributos no nó atual.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.BaseURI">
      <summary>Quando substituído em uma classe derivada, obtém o URI base do nó atual.</summary>
      <returns>O URI base do nó atual.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.CanReadBinaryContent">
      <summary>Obtém um valor que indica se o <see cref="T:System.Xml.XmlReader" /> implementa os métodos de leitura de conteúdo binário.</summary>
      <returns>
        <see langword="true" /> Se os métodos de leitura de conteúdo binários são implementados; Caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.CanReadValueChunk">
      <summary>Obtém um valor que indica se o <see cref="T:System.Xml.XmlReader" /> implementa o método <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" />.</summary>
      <returns>
        <see langword="true" /> Se o <see cref="T:System.Xml.XmlReader" /> implementa o <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" /> método; caso contrário <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.CanResolveEntity">
      <summary>Obtém um valor que indica se este leitor pode analisar e resolver entidades.</summary>
      <returns>
        <see langword="true" /> Se o leitor pode analisar e resolver entidades; Caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Close">
      <summary>Quando substituído em uma classe derivada, altera o <see cref="P:System.Xml.XmlReader.ReadState" /> para <see cref="F:System.Xml.ReadState.Closed" />.</summary>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.Stream)">
      <summary>Cria uma nova instância <see cref="T:System.Xml.XmlReader" /> usando o fluxo especificado com as configurações padrão.</summary>
      <param name="input">O fluxo que contém os dados XML.  
O <see cref="T:System.Xml.XmlReader" /> examina os primeiros bytes do fluxo buscando uma marca de ordem de byte ou outro sinal de codificação. Quando a codificação é determinada, ela é usada para continuar a ler o fluxo e o processamento continuará analisando a entrada como um fluxo de caracteres (Unicode).</param>
      <returns>Um objeto usado para ler os dados XML no fluxo.</returns>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="input" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">O <see cref="T:System.Xml.XmlReader" /> não tem permissões suficientes para acessar o local dos dados XML.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)">
      <summary>Cria uma nova instância <see cref="T:System.Xml.XmlReader" /> com as configurações e o fluxo especificado.</summary>
      <param name="input">O fluxo que contém os dados XML.  
O <see cref="T:System.Xml.XmlReader" /> examina os primeiros bytes do fluxo buscando uma marca de ordem de byte ou outro sinal de codificação. Quando a codificação é determinada, ela é usada para continuar a ler o fluxo e o processamento continuará analisando a entrada como um fluxo de caracteres (Unicode).</param>
      <param name="settings">As configurações para a nova instância <see cref="T:System.Xml.XmlReader" />. Este valor pode ser <see langword="null" />.</param>
      <returns>Um objeto usado para ler os dados XML no fluxo.</returns>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="input" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)">
      <summary>Cria uma nova instância <see cref="T:System.Xml.XmlReader" /> usando o fluxo, o URI base e as configurações especificadas.</summary>
      <param name="input">O fluxo que contém os dados XML.  
O <see cref="T:System.Xml.XmlReader" /> examina os primeiros bytes do fluxo buscando uma marca de ordem de byte ou outro sinal de codificação. Quando a codificação é determinada, ela é usada para continuar a ler o fluxo e o processamento continuará analisando a entrada como um fluxo de caracteres (Unicode).</param>
      <param name="settings">As configurações para a nova instância <see cref="T:System.Xml.XmlReader" />. Este valor pode ser <see langword="null" />.</param>
      <param name="baseUri">O URI base para a entidade ou o documento que está sendo lido. Este valor pode ser <see langword="null" />.  
 Observação de segurança o URI base é usado para resolver o URI relativo do documento XML. Não use um URI base de uma fonte não confiável.</param>
      <returns>Um objeto usado para ler os dados XML no fluxo.</returns>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="input" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
      <summary>Cria uma nova instância <see cref="T:System.Xml.XmlReader" /> usando as informações de fluxo, configurações e contexto especificadas para análise.</summary>
      <param name="input">O fluxo que contém os dados XML.  
O <see cref="T:System.Xml.XmlReader" /> examina os primeiros bytes do fluxo buscando uma marca de ordem de byte ou outro sinal de codificação. Quando a codificação é determinada, ela é usada para continuar a ler o fluxo e o processamento continuará analisando a entrada como um fluxo de caracteres (Unicode).</param>
      <param name="settings">As configurações para a nova instância <see cref="T:System.Xml.XmlReader" />. Este valor pode ser <see langword="null" />.</param>
      <param name="inputContext">As informações de contexto necessárias para analisar o fragmento XML. As informações de contexto podem incluir o <see cref="T:System.Xml.XmlNameTable" /> a ser usado, a codificação, o escopo de namespace, o escopo de <c>xml:lang</c> e <c>xml:space</c> atual, o URI base e a definição de tipo de documento.  
Este valor pode ser <see langword="null" />.</param>
      <returns>Um objeto usado para ler os dados XML no fluxo.</returns>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="input" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.TextReader)">
      <summary>Cria uma nova instância de <see cref="T:System.Xml.XmlReader" /> usando o leitor de texto especificado.</summary>
      <param name="input">O leitor de texto do qual os dados XML serão lidos. Um leitor de texto retorna um fluxo de caracteres de Unicode, por isso a codificação especificada na declaração XML não é usada pelo leitor de XML para decodificar o fluxo de dados.</param>
      <returns>Um objeto usado para ler os dados XML no fluxo.</returns>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="input" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)">
      <summary>Cria uma nova instância do <see cref="T:System.Xml.XmlReader" /> usando as configurações e o leitor de texto especificados.</summary>
      <param name="input">O leitor de texto do qual os dados XML serão lidos. Um leitor de texto retorna um fluxo de caracteres de Unicode, por isso a codificação especificada na declaração XML não é usada pelo leitor de XML para decodificar o fluxo de dados.</param>
      <param name="settings">As configurações para o novo <see cref="T:System.Xml.XmlReader" />. Este valor pode ser <see langword="null" />.</param>
      <returns>Um objeto usado para ler os dados XML no fluxo.</returns>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="input" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)">
      <summary>Cria uma nova instância <see cref="T:System.Xml.XmlReader" /> usando o leitor de texto especificado, as configurações e o URI base.</summary>
      <param name="input">O leitor de texto do qual os dados XML serão lidos. Um leitor de texto retorna um fluxo de caracteres de Unicode, por isso a codificação especificada na declaração XML não é usada pelo <see cref="T:System.Xml.XmlReader" /> para decodificar o fluxo de dados.</param>
      <param name="settings">As configurações para a nova instância <see cref="T:System.Xml.XmlReader" />. Este valor pode ser <see langword="null" />.</param>
      <param name="baseUri">O URI base para a entidade ou o documento que está sendo lido. Este valor pode ser <see langword="null" />.  
 Observação de segurança o URI base é usado para resolver o URI relativo do documento XML. Não use um URI base de uma fonte não confiável.</param>
      <returns>Um objeto usado para ler os dados XML no fluxo.</returns>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="input" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
      <summary>Cria uma nova instância <see cref="T:System.Xml.XmlReader" /> usando as informações de contexto, de configurações e do leitor de texto especificadas para análise.</summary>
      <param name="input">O leitor de texto do qual os dados XML serão lidos. Um leitor de texto retorna um fluxo de caracteres de Unicode, por isso a codificação especificada na declaração XML não é usada pelo leitor de XML para decodificar o fluxo de dados.</param>
      <param name="settings">As configurações para a nova instância <see cref="T:System.Xml.XmlReader" />. Este valor pode ser <see langword="null" />.</param>
      <param name="inputContext">As informações de contexto necessárias para analisar o fragmento XML. As informações de contexto podem incluir o <see cref="T:System.Xml.XmlNameTable" /> a ser usado, a codificação, o escopo de namespace, o escopo de <c>xml:lang</c> e <c>xml:space</c> atual, o URI base e a definição de tipo de documento.  
Este valor pode ser <see langword="null" />.</param>
      <returns>Um objeto usado para ler os dados XML no fluxo.</returns>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="input" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Ambas as propriedades <see cref="P:System.Xml.XmlReaderSettings.NameTable" /> e <see cref="P:System.Xml.XmlParserContext.NameTable" /> contêm valores. (Somente uma dessas propriedades <see langword="NameTable" /> podem ser definidas e usadas).</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.String)">
      <summary>Cria uma nova instância <see cref="T:System.Xml.XmlReader" /> com o URI especificado.</summary>
      <param name="inputUri">O URI para o arquivo que contém os dados XML. A classe <see cref="T:System.Xml.XmlUrlResolver" /> é usada para converter o caminho em uma representação de dados canônica.</param>
      <returns>Um objeto usado para ler os dados XML no fluxo.</returns>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="inputUri" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">O <see cref="T:System.Xml.XmlReader" /> não tem permissões suficientes para acessar o local dos dados XML.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo identificado pelo URI não existe.</exception>
      <exception cref="T:System.UriFormatException">Em vez disso, no .NET para aplicativos da Windows Store ou na Biblioteca de Classes Portátil, capture a exceção de classe base, <see cref="T:System.FormatException" />.  


            

 O formato de URI não está correto.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)">
      <summary>Cria uma nova instância <see cref="T:System.Xml.XmlReader" /> usando o URI e as configurações especificados.</summary>
      <param name="inputUri">O URI do arquivo que contém os dados XML. O objeto <see cref="T:System.Xml.XmlResolver" /> no objeto <see cref="T:System.Xml.XmlReaderSettings" /> é usado para converter o caminho em uma representação de dados canônica. Se <see cref="P:System.Xml.XmlReaderSettings.XmlResolver" /> for <see langword="null" />, um novo objeto <see cref="T:System.Xml.XmlUrlResolver" /> será usado.</param>
      <param name="settings">As configurações para a nova instância <see cref="T:System.Xml.XmlReader" />. Este valor pode ser <see langword="null" />.</param>
      <returns>Um objeto usado para ler os dados XML no fluxo.</returns>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="inputUri" /> é <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Não foi possível encontrar o arquivo especificado pelo URI.</exception>
      <exception cref="T:System.UriFormatException">Em vez disso, no .NET para aplicativos da Windows Store ou na Biblioteca de Classes Portátil, capture a exceção de classe base, <see cref="T:System.FormatException" />.  


            

 O formato de URI não está correto.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
      <summary>Cria uma nova instância <see cref="T:System.Xml.XmlReader" /> usando as informações de URI, de configurações e de contexto especificadas para análise.</summary>
      <param name="inputUri">O URI do arquivo que contém os dados XML. O objeto <see cref="T:System.Xml.XmlResolver" /> no objeto <see cref="T:System.Xml.XmlReaderSettings" /> é usado para converter o caminho em uma representação de dados canônica. Se <see cref="P:System.Xml.XmlReaderSettings.XmlResolver" /> for <see langword="null" />, um novo objeto <see cref="T:System.Xml.XmlUrlResolver" /> será usado.</param>
      <param name="settings">As configurações para a nova instância <see cref="T:System.Xml.XmlReader" />. Este valor pode ser <see langword="null" />.</param>
      <param name="inputContext">As informações de contexto necessárias para analisar o fragmento XML. As informações de contexto podem incluir o <see cref="T:System.Xml.XmlNameTable" /> a ser usado, a codificação, o escopo de namespace, o escopo de <c>xml:lang</c> e <c>xml:space</c> atual, o URI base e a definição de tipo de documento.  
Este valor pode ser <see langword="null" />.</param>
      <returns>Um objeto usado para ler os dados XML no fluxo.</returns>
      <exception cref="T:System.ArgumentNullException">O valor <see langword="inputUri" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">O <see cref="T:System.Xml.XmlReader" /> não tem permissões suficientes para acessar o local dos dados XML.</exception>
      <exception cref="T:System.ArgumentException">Ambas as propriedades <see cref="P:System.Xml.XmlReaderSettings.NameTable" /> e <see cref="P:System.Xml.XmlParserContext.NameTable" /> contêm valores. (Somente uma dessas propriedades <see langword="NameTable" /> podem ser definidas e usadas).</exception>
      <exception cref="T:System.IO.FileNotFoundException">Não foi possível encontrar o arquivo especificado pelo URI.</exception>
      <exception cref="T:System.UriFormatException">O formato de URI não está correto.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
      <summary>Cria uma nova instância <see cref="T:System.Xml.XmlReader" /> usando as configurações e o leitor XML especificados.</summary>
      <param name="reader">O objeto que você deseja usar como o leitor XML subjacente.</param>
      <param name="settings">As configurações para a nova instância <see cref="T:System.Xml.XmlReader" />.  
O nível de conformidade do objeto <see cref="T:System.Xml.XmlReaderSettings" /> deve corresponder ao nível de conformidade do leitor subjacente ou deve ser definido como <see cref="F:System.Xml.ConformanceLevel.Auto" />.</param>
      <returns>Um objeto encapsulado em torno do objeto <see cref="T:System.Xml.XmlReader" /> especificado.</returns>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="reader" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Se o objeto <see cref="T:System.Xml.XmlReaderSettings" /> especificar um nível de conformidade que não é consistente com o nível de conformidade do leitor subjacente.  

ou - 
O <see cref="T:System.Xml.XmlReader" /> subjacente está em um estado <see cref="F:System.Xml.ReadState.Error" /> ou <see cref="F:System.Xml.ReadState.Closed" />.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.Depth">
      <summary>Quando é substituído em uma classe derivada, obtém a profundidade do nó atual no documento XML.</summary>
      <returns>A profundidade do nó atual no documento XML.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Dispose">
      <summary>Libera todos os recursos usados pela instância atual da classe <see cref="T:System.Xml.XmlReader" />.</summary>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados usados pelo <see cref="T:System.Xml.XmlReader" /> e opcionalmente libera os recursos gerenciados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.EOF">
      <summary>Quando substituído em uma classe derivada, obtém um valor que indica se o leitor está posicionado no final do fluxo.</summary>
      <returns>
        <see langword="true" /> Se o leitor estiver posicionado no final do fluxo; Caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.GetAttribute(System.Int32)">
      <summary>Quando substituído em uma classe derivada, obtém o valor do atributo com o índice especificado.</summary>
      <param name="i">O índice do atributo. O índice é baseado em zero. (O primeiro atributo tem índice 0.)</param>
      <returns>O valor do atributo especificado. Esse método não move o leitor.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="i" /> está fora do intervalo. Ele deve ser não negativo e menor que o tamanho da coleção de atributos.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.GetAttribute(System.String)">
      <summary>Quando substituído em uma classe derivada, obtém o valor do atributo com o <see cref="P:System.Xml.XmlReader.Name" /> especificado.</summary>
      <param name="name">O nome qualificado do atributo.</param>
      <returns>O valor do atributo especificado. Se o atributo não foi encontrado ou o valor é <see langword="String.Empty" />, <see langword="null" /> será retornado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.GetAttribute(System.String,System.String)">
      <summary>Quando substituído em uma classe derivada, obtém o valor do atributo com o <see cref="P:System.Xml.XmlReader.LocalName" /> e o <see cref="P:System.Xml.XmlReader.NamespaceURI" /> especificados.</summary>
      <param name="name">O nome local do atributo.</param>
      <param name="namespaceURI">O URI do namespace do atributo.</param>
      <returns>O valor do atributo especificado. Se o atributo não foi encontrado ou o valor é <see langword="String.Empty" />, <see langword="null" /> será retornado. Esse método não move o leitor.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.GetValueAsync">
      <summary>Obtém o valor do nó atual de forma assíncrona.</summary>
      <returns>O valor do nó atual.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem "Uma operação assíncrona já está em andamento".

ou -

Um método assíncrono <see cref="T:System.Xml.XmlReader" /> foi chamado sem definir o sinalizador <see cref="P:System.Xml.XmlReaderSettings.Async" /> como <see langword="true" />. Neste caso, <see cref="T:System.InvalidOperationException" /> é gerado com a mensagem: “Defina XmlReaderSettings.Async como verdadeiro se desejar usar Métodos Assíncronos”.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.HasAttributes">
      <summary>Obtém um valor que indica se o nó atual tem atributos.</summary>
      <returns>
        <see langword="true" /> Se o nó atual tiver atributos; Caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.HasValue">
      <summary>Quando substituído em uma classe derivada, obtém um valor que indica se o nó atual pode ter um <see cref="P:System.Xml.XmlReader.Value" />.</summary>
      <returns>
        <see langword="true" /> se o nó em que o leitor está posicionado no momento puder ter um <see langword="Value" />, caso contrário, <see langword="false" />. Se <see langword="false" />, o nó tem um valor de <see langword="String.Empty" />.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.IsDefault">
      <summary>Quando substituído em uma classe derivada, obtém um valor que indica se o nó atual é um atributo que foi gerado com base no valor padrão definido no DTD ou no esquema.</summary>
      <returns>
        <see langword="true" /> Se o nó atual é um atributo cujo valor foi gerado a partir o valor padrão definido no DTD ou esquema; <see langword="false" /> se o valor do atributo foi definido explicitamente.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.IsEmptyElement">
      <summary>Quando substituído em uma classe derivada, obtém um valor que indica se o nó atual é um elemento vazio (por exemplo, <c>&lt;MyElement/&gt;</c>).</summary>
      <returns>
        <see langword="true" /> Se o nó atual é um elemento (<see cref="P:System.Xml.XmlReader.NodeType" /> é igual a <see langword="XmlNodeType.Element" />) que terminará com <c>/ &gt;</c>; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.IsName(System.String)">
      <summary>Retorna um valor que indica se o argumento de cadeia de caracteres é um nome XML válido.</summary>
      <param name="str">O nome a ser validado.</param>
      <returns>
        <see langword="true" /> se o nome for válido; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="str" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.IsNameToken(System.String)">
      <summary>Retorna um valor que indica se o argumento de cadeia de caracteres é um token de nome XML válido.</summary>
      <param name="str">O token de nome a ser validado.</param>
      <returns>
        <see langword="true" /> se for um token de nome válido; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="str" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.IsStartElement">
      <summary>Chama <see cref="M:System.Xml.XmlReader.MoveToContent" /> e testa se o nó de conteúdo atual é uma marca de início ou uma marca de elemento vazia.</summary>
      <returns>
        <see langword="true" /> se <see cref="M:System.Xml.XmlReader.MoveToContent" /> encontrar uma marca de início ou uma marca de elemento vazia; <see langword="false" /> se um tipo de nó diferente de <see langword="XmlNodeType.Element" /> for encontrado.</returns>
      <exception cref="T:System.Xml.XmlException">Foi encontrado XML incorreto no fluxo de entrada.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.IsStartElement(System.String)">
      <summary>Chama <see cref="M:System.Xml.XmlReader.MoveToContent" /> e testa se o nó de conteúdo atual é uma marca de início ou uma marca de elemento vazio e se a propriedade <see cref="P:System.Xml.XmlReader.Name" /> que o elemento encontrou corresponde ao argumento fornecido.</summary>
      <param name="name">A cadeia de caracteres é comparada com a propriedade <see langword="Name" /> do elemento encontrado.</param>
      <returns>
        <see langword="true" /> se o nó resultante é um elemento e a propriedade <see langword="Name" /> corresponde à cadeia de caracteres especificada. <see langword="false" /> se um tipo de nó diferente de <see langword="XmlNodeType.Element" /> foi encontrado ou se a propriedade <see langword="Name" /> do elemento não corresponde à cadeia de caracteres especificada.</returns>
      <exception cref="T:System.Xml.XmlException">Foi encontrado XML incorreto no fluxo de entrada.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.IsStartElement(System.String,System.String)">
      <summary>Chama <see cref="M:System.Xml.XmlReader.MoveToContent" /> e testa se o nó de conteúdo atual é uma marca de início ou uma marca de elemento vazio e, se as propriedades <see cref="P:System.Xml.XmlReader.LocalName" /> e <see cref="P:System.Xml.XmlReader.NamespaceURI" /> do elemento encontrado correspondem às cadeias de caracteres fornecidas.</summary>
      <param name="localname">A cadeia de caracteres de correspondência com a propriedade <see langword="LocalName" /> do elemento encontrado.</param>
      <param name="ns">A cadeia de caracteres de correspondência com a propriedade <see langword="NamespaceURI" /> do elemento encontrado.</param>
      <returns>
        <see langword="true" /> se o nó resultante é um elemento. <see langword="false" /> se um tipo de nó diferente de <see langword="XmlNodeType.Element" /> foi encontrado ou se as propriedades <see langword="LocalName" /> e <see langword="NamespaceURI" /> do elemento não correspondem às cadeias de caracteres especificadas.</returns>
      <exception cref="T:System.Xml.XmlException">Foi encontrado XML incorreto no fluxo de entrada.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.Item(System.Int32)">
      <summary>Quando substituído em uma classe derivada, obtém o valor do atributo com o índice especificado.</summary>
      <param name="i">O índice do atributo.</param>
      <returns>O valor do atributo especificado.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.Item(System.String)">
      <summary>Quando substituído em uma classe derivada, obtém o valor do atributo com o <see cref="P:System.Xml.XmlReader.Name" /> especificado.</summary>
      <param name="name">O nome qualificado do atributo.</param>
      <returns>O valor do atributo especificado. Se o atributo não for encontrado, <see langword="null" /> será retornado.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.Item(System.String,System.String)">
      <summary>Quando substituído em uma classe derivada, obtém o valor do atributo com o <see cref="P:System.Xml.XmlReader.LocalName" /> e o <see cref="P:System.Xml.XmlReader.NamespaceURI" /> especificados.</summary>
      <param name="name">O nome local do atributo.</param>
      <param name="namespaceURI">O URI do namespace do atributo.</param>
      <returns>O valor do atributo especificado. Se o atributo não for encontrado, <see langword="null" /> será retornado.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.LocalName">
      <summary>Quando é substituído em uma classe derivada, obtém o nome local do nó atual.</summary>
      <returns>O nome do nó atual com o prefixo removido. Por exemplo, <see langword="LocalName" /> está <see langword="book" /> para o elemento <c>&lt;BK: Book&gt;</c>.  
Para tipos de nós que não têm um nome (como <see langword="Text" />, <see langword="Comment" /> e assim por diante), essa propriedade retornará <see langword="String.Empty" />.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.LookupNamespace(System.String)">
      <summary>Quando substituído em uma classe derivada, resolve um prefixo de namespace no escopo do elemento atual.</summary>
      <param name="prefix">O prefixo cujo URI de namespace você deseja resolver. Para corresponder ao namespace padrão, transmita uma cadeia de caracteres vazia.</param>
      <returns>O URI de namespace para o qual o prefixo será mapeado ou <see langword="null" /> se nenhum prefixo correspondente for encontrado.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToAttribute(System.Int32)">
      <summary>Quando substituído em uma classe derivada, é movido para o atributo com o índice especificado.</summary>
      <param name="i">O índice do atributo.</param>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O parâmetro tem um valor negativo.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToAttribute(System.String)">
      <summary>Quando substituído em uma classe derivada, é movido para o atributo com o <see cref="P:System.Xml.XmlReader.Name" /> especificado.</summary>
      <param name="name">O nome qualificado do atributo.</param>
      <returns>
        <see langword="true" /> se o atributo for encontrado; caso contrário, <see langword="false" />. Se <see langword="false" />, a posição do leitor não será alterada.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro é uma cadeia de caracteres vazia.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToAttribute(System.String,System.String)">
      <summary>Quando substituído em uma classe derivada, passa para o atributo com os <see cref="P:System.Xml.XmlReader.LocalName" /> e <see cref="P:System.Xml.XmlReader.NamespaceURI" /> especificados.</summary>
      <param name="name">O nome local do atributo.</param>
      <param name="ns">O URI do namespace do atributo.</param>
      <returns>
        <see langword="true" /> se o atributo for encontrado; caso contrário, <see langword="false" />. Se <see langword="false" />, a posição do leitor não será alterada.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
      <exception cref="T:System.ArgumentNullException">Ambos os valores de parâmetro são <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToContent">
      <summary>Verifica se o nó atual é um nó de conteúdo (texto sem espaço em branco, <see langword="CDATA" />, <see langword="Element" />, <see langword="EndElement" />, <see langword="EntityReference" /> ou <see langword="EndEntity" />). Se o nó não for um nó de conteúdo, o leitor avançará para o próximo nó de conteúdo ou para o final do arquivo. Pula nós de tipo seguir: <see langword="ProcessingInstruction" />, <see langword="DocumentType" />, <see langword="Comment" />, <see langword="Whitespace" />, ou <see langword="SignificantWhitespace" />.</summary>
      <returns>O <see cref="P:System.Xml.XmlReader.NodeType" /> do nó atual encontrado pelo método ou <see langword="XmlNodeType.None" /> se o leitor atingiu o fim do fluxo de entrada.</returns>
      <exception cref="T:System.Xml.XmlException">XML incorreto encontrado no fluxo de entrada.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToContentAsync">
      <summary>Verifica de forma assíncrona se o nó atual é um nó de conteúdo. Se o nó não for um nó de conteúdo, o leitor avançará para o próximo nó de conteúdo ou para o final do arquivo.</summary>
      <returns>O <see cref="P:System.Xml.XmlReader.NodeType" /> do nó atual encontrado pelo método ou <see langword="XmlNodeType.None" /> se o leitor atingiu o fim do fluxo de entrada.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.

ou -

Um método assíncrono <see cref="T:System.Xml.XmlReader" /> foi chamado sem definir o sinalizador <see cref="P:System.Xml.XmlReaderSettings.Async" /> como <see langword="true" />. Neste caso, <see cref="T:System.InvalidOperationException" /> é gerado com a mensagem: “Defina XmlReaderSettings.Async como verdadeiro se desejar usar Métodos Assíncronos”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToElement">
      <summary>Quando substituído em uma classe derivada, move para o elemento que contém o nó de atributo atual.</summary>
      <returns>
        <see langword="true" /> se o leitor estiver posicionado em um atributo (o leitor se move para o elemento que possui o atributo); <see langword="false" /> se o leitor não estiver posicionado em um atributo (a posição do leitor não é alterada).</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToFirstAttribute">
      <summary>Quando substituído em uma classe derivada, move o primeiro atributo.</summary>
      <returns>
        <see langword="true" /> se um atributo existir (o leitor é movido para o primeiro atributo); caso contrário, <see langword="false" /> (a posição do leitor não é alterada).</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToNextAttribute">
      <summary>Quando substituído em uma classe derivada, vai para o atributo seguinte.</summary>
      <returns>
        <see langword="true" /> se houver um atributo seguinte; <see langword="false" /> se não houver mais nenhum atributo.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.Name">
      <summary>Quando é substituído em uma classe derivada, obtém o nome qualificado do nó atual.</summary>
      <returns>O nome qualificado do nó atual. Por exemplo, <see langword="Name" /> está <see langword="bk:book" /> para o elemento <c>&lt;BK: Book&gt;</c>.  
O nome retornado depende do <see cref="P:System.Xml.XmlReader.NodeType" /> do nó. Os seguintes tipos de nó retornam os valores listados. Todos os outros tipos de nó retornam uma cadeia de caracteres vazia.  
  Tipo de nó 
  Nome 
 <see langword="Attribute" /> O nome do atributo.  

 <see langword="DocumentType" /> O nome do tipo de documento.  

 <see langword="Element" /> O nome da marcação.  

 <see langword="EntityReference" /> O nome da entidade referenciada.  

 <see langword="ProcessingInstruction" /> O destino da instrução de processamento.  

 <see langword="XmlDeclaration" /> A cadeia de caracteres literal <see langword="xml" />.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.NamespaceURI">
      <summary>Quando substituído em uma classe derivada, obtém o URI do namespace (conforme definido na especificação de Namespace do W3C) do nó no qual o leitor está posicionado.</summary>
      <returns>O URI do namespace do nó atual; caso contrário, uma cadeia de caracteres vazia.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.NameTable">
      <summary>Quando substituído em uma classe derivada, obtém o <see cref="T:System.Xml.XmlNameTable" /> associado a essa implementação.</summary>
      <returns>O <see langword="XmlNameTable" /> que permite obter a versão atomizada de uma cadeia de caracteres no nó.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.NodeType">
      <summary>Quando é substituído em uma classe derivada, obtém o tipo do nó atual.</summary>
      <returns>Um dos valores de enumeração que especificam o tipo do nó atual.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.Prefix">
      <summary>Quando substituído em uma classe derivada, obtém o prefixo de namespace associado com o nó atual.</summary>
      <returns>O prefixo de namespace associado com o nó atual.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.QuoteChar">
      <summary>Quando substituído em uma classe derivada, obtém o caractere de aspas usado para circunscrever o valor de um nó de atributo.</summary>
      <returns>O caractere de aspas ("ou") usado para Circunscrever o valor de um nó de atributo.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Read">
      <summary>Quando substituído em uma classe derivada, lê o próximo nó do fluxo.</summary>
      <returns>
        <see langword="true" /> se o próximo nó foi lido com êxito; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.Xml.XmlException">Erro ao analisar o XML.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadAsync">
      <summary>Lê assincronamente o próximo nó do fluxo.</summary>
      <returns>
        <see langword="true" /> se o próximo nó for lido com êxito; <see langword="false" /> se não houver mais nenhum nó para ler.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.

ou -

Um método assíncrono <see cref="T:System.Xml.XmlReader" /> foi chamado sem definir o sinalizador <see cref="P:System.Xml.XmlReaderSettings.Async" /> como <see langword="true" />. Neste caso, <see cref="T:System.InvalidOperationException" /> é gerado com a mensagem: “Defina XmlReaderSettings.Async como verdadeiro se desejar usar Métodos Assíncronos”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadAttributeValue">
      <summary>Quando substituído em uma classe derivada, analisa o valor do atributo em um ou mais nós <see langword="Text" />, <see langword="EntityReference" /> ou <see langword="EndEntity" />.</summary>
      <returns>
        <see langword="true" /> se houver nós para retornar.  
 <see langword="false" /> se o leitor não estiver posicionado em um nó de atributo quando a chamada inicial for feita ou se todos os valores de atributo tiverem sido lidos.  
Um atributo vazio, como <c>misc=""</c>, retorna <see langword="true" /> com um único nó com um valor de <see langword="String.Empty" />.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Lê o conteúdo como um objeto do tipo especificado.</summary>
      <param name="returnType">O tipo do valor a ser retornado.  
 Observação Com a versão do .NET Framework 3.5, o valor do parâmetro <paramref name="returnType" /> agora pode ser do tipo <see cref="T:System.DateTimeOffset" />.</param>
      <param name="namespaceResolver">Um objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> que é usado para resolver todos os prefixos de namespace relacionados à conversão de tipo. Por exemplo, ele pode ser usado ao converter um objeto <see cref="T:System.Xml.XmlQualifiedName" /> em um <c>xs:string</c>.  
Este valor pode ser <see langword="null" />.</param>
      <returns>O valor de atributo ou conteúdo de texto concatenado convertido para o tipo solicitado.</returns>
      <exception cref="T:System.FormatException">O conteúdo não está no formato correto para o tipo de destino.</exception>
      <exception cref="T:System.InvalidCastException">A tentativa de conversão não é válida.</exception>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="returnType" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">O nó atual não é um tipo de nó com suporte. Confira a tabela abaixo para obter detalhes.

ou -

Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
      <exception cref="T:System.OverflowException">Leia o <see langword="Decimal.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Lê de forma assíncrona o conteúdo como um objeto do tipo especificado.</summary>
      <param name="returnType">O tipo do valor a ser retornado.</param>
      <param name="namespaceResolver">Um objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> que é usado para resolver todos os prefixos de namespace relacionados à conversão de tipo.</param>
      <returns>O valor de atributo ou conteúdo de texto concatenado convertido para o tipo solicitado.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.

ou -

Um método assíncrono <see cref="T:System.Xml.XmlReader" /> foi chamado sem definir o sinalizador <see cref="P:System.Xml.XmlReaderSettings.Async" /> como <see langword="true" />. Neste caso, <see cref="T:System.InvalidOperationException" /> é gerado com a mensagem: “Defina XmlReaderSettings.Async como verdadeiro se desejar usar Métodos Assíncronos”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Lê o conteúdo e retorna os bytes binários decodificados de Base64.</summary>
      <param name="buffer">O buffer para o qual o texto resultante será copiado. Este valor pode não ser <see langword="null" />.</param>
      <param name="index">O deslocamento do buffer no qual o resultado começará a ser copiado.</param>
      <param name="count">O número máximo de bytes a serem copiados para o buffer. O número real de bytes copiados é retornado deste método.</param>
      <returns>O número de bytes gravados no buffer.</returns>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Não há suporte para <see cref="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /> no nó atual.

ou -

Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O índice de buffer ou de índice + contagem é maior que o tamanho do buffer alocado.</exception>
      <exception cref="T:System.NotSupportedException">A implementação <see cref="T:System.Xml.XmlReader" /> não dá suporte a esse método.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
      <summary>Lê de forma assíncrona o conteúdo e retorna que os bytes binários decodificados de Base64.</summary>
      <param name="buffer">O buffer para o qual o texto resultante será copiado. Este valor pode não ser <see langword="null" />.</param>
      <param name="index">O deslocamento do buffer no qual o resultado começará a ser copiado.</param>
      <param name="count">O número máximo de bytes a serem copiados para o buffer. O número real de bytes copiados é retornado deste método.</param>
      <returns>O número de bytes gravados no buffer.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.

ou -

Um método assíncrono <see cref="T:System.Xml.XmlReader" /> foi chamado sem definir o sinalizador <see cref="P:System.Xml.XmlReaderSettings.Async" /> como <see langword="true" />. Neste caso, <see cref="T:System.InvalidOperationException" /> é gerado com a mensagem: “Defina XmlReaderSettings.Async como verdadeiro se desejar usar Métodos Assíncronos”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Lê o conteúdo e retorna os bytes binários decodificados <see langword="BinHex" />.</summary>
      <param name="buffer">O buffer para o qual o texto resultante será copiado. Este valor pode não ser <see langword="null" />.</param>
      <param name="index">O deslocamento do buffer no qual o resultado começará a ser copiado.</param>
      <param name="count">O número máximo de bytes a serem copiados para o buffer. O número real de bytes copiados é retornado deste método.</param>
      <returns>O número de bytes gravados no buffer.</returns>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Não há suporte para <see cref="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> no nó atual.

ou -

Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O índice de buffer ou de índice + contagem é maior que o tamanho do buffer alocado.</exception>
      <exception cref="T:System.NotSupportedException">A implementação <see cref="T:System.Xml.XmlReader" /> não dá suporte a esse método.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
      <summary>Lê de forma assíncrona o conteúdo e retorna os bytes binários decodificados <see langword="BinHex" />.</summary>
      <param name="buffer">O buffer para o qual o texto resultante será copiado. Este valor pode não ser <see langword="null" />.</param>
      <param name="index">O deslocamento do buffer no qual o resultado começará a ser copiado.</param>
      <param name="count">O número máximo de bytes a serem copiados para o buffer. O número real de bytes copiados é retornado deste método.</param>
      <returns>O número de bytes gravados no buffer.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.

ou -

Um método assíncrono <see cref="T:System.Xml.XmlReader" /> foi chamado sem definir o sinalizador <see cref="P:System.Xml.XmlReaderSettings.Async" /> como <see langword="true" />. Neste caso, <see cref="T:System.InvalidOperationException" /> é gerado com a mensagem: “Defina XmlReaderSettings.Async como verdadeiro se desejar usar Métodos Assíncronos”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBoolean">
      <summary>Lê o conteúdo de texto na posição atual como um <see langword="Boolean" />.</summary>
      <returns>O conteúdo de texto como um objeto <see cref="T:System.Boolean" />.</returns>
      <exception cref="T:System.InvalidCastException">A tentativa de conversão não é válida.</exception>
      <exception cref="T:System.FormatException">O formato da cadeia de caracteres não é válido.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsDateTime">
      <summary>Lê o conteúdo de texto na posição atual como um objeto <see cref="T:System.DateTime" />.</summary>
      <returns>O conteúdo de texto como um objeto <see cref="T:System.DateTime" />.</returns>
      <exception cref="T:System.InvalidCastException">A tentativa de conversão não é válida.</exception>
      <exception cref="T:System.FormatException">O formato da cadeia de caracteres não é válido.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsDateTimeOffset">
      <summary>Lê o conteúdo de texto na posição atual como um objeto <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>O conteúdo de texto como um objeto <see cref="T:System.DateTimeOffset" />.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsDecimal">
      <summary>Lê o conteúdo de texto na posição atual como um objeto <see cref="T:System.Decimal" />.</summary>
      <returns>O conteúdo do texto na posição atual como um objeto <see cref="T:System.Decimal" />.</returns>
      <exception cref="T:System.InvalidCastException">A tentativa de conversão não é válida.</exception>
      <exception cref="T:System.FormatException">O formato da cadeia de caracteres não é válido.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsDouble">
      <summary>Lê o conteúdo de texto na posição atual como um número de ponto flutuante de precisão dupla.</summary>
      <returns>O conteúdo de texto como um número de ponto flutuante de precisão dupla.</returns>
      <exception cref="T:System.InvalidCastException">A tentativa de conversão não é válida.</exception>
      <exception cref="T:System.FormatException">O formato da cadeia de caracteres não é válido.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsFloat">
      <summary>Lê o conteúdo de texto na posição atual como um número de ponto flutuante de precisão simples.</summary>
      <returns>O conteúdo de texto na posição atual como um número de ponto flutuante de precisão simples.</returns>
      <exception cref="T:System.InvalidCastException">A tentativa de conversão não é válida.</exception>
      <exception cref="T:System.FormatException">O formato da cadeia de caracteres não é válido.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsInt">
      <summary>Lê o conteúdo de texto na posição atual como um inteiro com sinal de 32 bits.</summary>
      <returns>O conteúdo de texto como um inteiro com sinal de 32 bits.</returns>
      <exception cref="T:System.InvalidCastException">A tentativa de conversão não é válida.</exception>
      <exception cref="T:System.FormatException">O formato da cadeia de caracteres não é válido.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsLong">
      <summary>Lê o conteúdo de texto na posição atual como um inteiro com sinal de 64 bits.</summary>
      <returns>O conteúdo de texto como um inteiro com sinal de 64 bits.</returns>
      <exception cref="T:System.InvalidCastException">A tentativa de conversão não é válida.</exception>
      <exception cref="T:System.FormatException">O formato da cadeia de caracteres não é válido.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsObject">
      <summary>Lê o conteúdo do texto na posição atual como um <see cref="T:System.Object" />.</summary>
      <returns>O conteúdo do texto como o objeto CLR (Common Language Runtime) mais apropriado.</returns>
      <exception cref="T:System.InvalidCastException">A tentativa de conversão não é válida.</exception>
      <exception cref="T:System.FormatException">O formato da cadeia de caracteres não é válido.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsObjectAsync">
      <summary>Lê de forma assíncrona o conteúdo do texto na posição atual como um <see cref="T:System.Object" />.</summary>
      <returns>O conteúdo do texto como o objeto CLR (Common Language Runtime) mais apropriado.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.

ou -

Um método assíncrono <see cref="T:System.Xml.XmlReader" /> foi chamado sem definir o sinalizador <see cref="P:System.Xml.XmlReaderSettings.Async" /> como <see langword="true" />. Neste caso, <see cref="T:System.InvalidOperationException" /> é gerado com a mensagem: “Defina XmlReaderSettings.Async como verdadeiro se desejar usar Métodos Assíncronos”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsString">
      <summary>Lê o conteúdo de texto na posição atual como um objeto <see cref="T:System.String" />.</summary>
      <returns>O conteúdo de texto como um objeto <see cref="T:System.String" />.</returns>
      <exception cref="T:System.InvalidCastException">A tentativa de conversão não é válida.</exception>
      <exception cref="T:System.FormatException">O formato da cadeia de caracteres não é válido.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsStringAsync">
      <summary>Lê de forma assíncrona o conteúdo do texto na posição atual como um objeto <see cref="T:System.String" />.</summary>
      <returns>O conteúdo de texto como um objeto <see cref="T:System.String" />.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.

ou -

Um método assíncrono <see cref="T:System.Xml.XmlReader" /> foi chamado sem definir o sinalizador <see cref="P:System.Xml.XmlReaderSettings.Async" /> como <see langword="true" />. Neste caso, <see cref="T:System.InvalidOperationException" /> é gerado com a mensagem: “Defina XmlReaderSettings.Async como verdadeiro se desejar usar Métodos Assíncronos”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Lê o conteúdo do elemento como o tipo solicitado.</summary>
      <param name="returnType">O tipo do valor a ser retornado.  
 Observação Com a versão do .NET Framework 3.5, o valor do parâmetro <paramref name="returnType" /> agora pode ser do tipo <see cref="T:System.DateTimeOffset" />.</param>
      <param name="namespaceResolver">Um objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> que é usado para resolver todos os prefixos de namespace relacionados à conversão de tipo.</param>
      <returns>O conteúdo do elemento convertido para o objeto de tipo solicitado.</returns>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Xml.XmlReader" /> não está posicionado em um elemento.

ou -

Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
      <exception cref="T:System.Xml.XmlException">O elemento atual contém elementos filho.  

ou -  

 Não é possível converter o conteúdo do elemento no tipo solicitado.</exception>
      <exception cref="T:System.ArgumentNullException">O método é chamado com os argumentos <see langword="null" />.</exception>
      <exception cref="T:System.OverflowException">Leia o <see langword="Decimal.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
      <summary>Verifica se o nome local e o URI de namespace especificados são iguais aos do elemento atual e, em seguida, lê o conteúdo do elemento atual como o tipo solicitado.</summary>
      <param name="returnType">O tipo do valor a ser retornado.  
 Observação Com a versão do .NET Framework 3.5, o valor do parâmetro <paramref name="returnType" /> agora pode ser do tipo <see cref="T:System.DateTimeOffset" />.</param>
      <param name="namespaceResolver">Um objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> que é usado para resolver todos os prefixos de namespace relacionados à conversão de tipo.</param>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceURI">O URI do namespace do elemento.</param>
      <returns>O conteúdo do elemento convertido para o objeto de tipo solicitado.</returns>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Xml.XmlReader" /> não está posicionado em um elemento.

ou -

Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
      <exception cref="T:System.Xml.XmlException">O elemento atual contém elementos filho.  

ou -  

 Não é possível converter o conteúdo do elemento no tipo solicitado.</exception>
      <exception cref="T:System.ArgumentNullException">O método é chamado com os argumentos <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O nome do local especificado e o URI de namespace não correspondem àqueles do elemento atual que está sendo lido.</exception>
      <exception cref="T:System.OverflowException">Leia o <see langword="Decimal.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Lê de forma assíncrona o conteúdo do elemento como o tipo solicitado.</summary>
      <param name="returnType">O tipo do valor a ser retornado.</param>
      <param name="namespaceResolver">Um objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> que é usado para resolver todos os prefixos de namespace relacionados à conversão de tipo.</param>
      <returns>O conteúdo do elemento convertido para o objeto de tipo solicitado.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.

ou -

Um método assíncrono <see cref="T:System.Xml.XmlReader" /> foi chamado sem definir o sinalizador <see cref="P:System.Xml.XmlReaderSettings.Async" /> como <see langword="true" />. Neste caso, <see cref="T:System.InvalidOperationException" /> é gerado com a mensagem: “Defina XmlReaderSettings.Async como verdadeiro se desejar usar Métodos Assíncronos”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Lê o elemento e decodifica o conteúdo de <see langword="Base64" />.</summary>
      <param name="buffer">O buffer para o qual o texto resultante será copiado. Este valor pode não ser <see langword="null" />.</param>
      <param name="index">O deslocamento do buffer no qual o resultado começará a ser copiado.</param>
      <param name="count">O número máximo de bytes a serem copiados para o buffer. O número real de bytes copiados é retornado deste método.</param>
      <returns>O número de bytes gravados no buffer.</returns>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">O nó atual não é um nó de elemento.

ou -

Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O índice de buffer ou de índice + contagem é maior que o tamanho do buffer alocado.</exception>
      <exception cref="T:System.NotSupportedException">A implementação <see cref="T:System.Xml.XmlReader" /> não dá suporte a esse método.</exception>
      <exception cref="T:System.Xml.XmlException">O elemento contém conteúdo misto.</exception>
      <exception cref="T:System.FormatException">Não é possível converter conteúdo no tipo solicitado.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
      <summary>Lê de forma assíncrona o elemento e decodifica o conteúdo <see langword="Base64" />.</summary>
      <param name="buffer">O buffer para o qual o texto resultante será copiado. Este valor pode não ser <see langword="null" />.</param>
      <param name="index">O deslocamento do buffer no qual o resultado começará a ser copiado.</param>
      <param name="count">O número máximo de bytes a serem copiados para o buffer. O número real de bytes copiados é retornado deste método.</param>
      <returns>O número de bytes gravados no buffer.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.

ou -

Um método assíncrono <see cref="T:System.Xml.XmlReader" /> foi chamado sem definir o sinalizador <see cref="P:System.Xml.XmlReaderSettings.Async" /> como <see langword="true" />. Neste caso, <see cref="T:System.InvalidOperationException" /> é gerado com a mensagem: “Defina XmlReaderSettings.Async como verdadeiro se desejar usar Métodos Assíncronos”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Lê o elemento e decodifica o conteúdo de <see langword="BinHex" />.</summary>
      <param name="buffer">O buffer para o qual o texto resultante será copiado. Este valor pode não ser <see langword="null" />.</param>
      <param name="index">O deslocamento do buffer no qual o resultado começará a ser copiado.</param>
      <param name="count">O número máximo de bytes a serem copiados para o buffer. O número real de bytes copiados é retornado deste método.</param>
      <returns>O número de bytes gravados no buffer.</returns>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">O nó atual não é um nó de elemento.

ou -

Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O índice de buffer ou de índice + contagem é maior que o tamanho do buffer alocado.</exception>
      <exception cref="T:System.NotSupportedException">A implementação <see cref="T:System.Xml.XmlReader" /> não dá suporte a esse método.</exception>
      <exception cref="T:System.Xml.XmlException">O elemento contém conteúdo misto.</exception>
      <exception cref="T:System.FormatException">Não é possível converter conteúdo no tipo solicitado.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
      <summary>Lê de forma assíncrona o elemento e decodifica o conteúdo <see langword="BinHex" />.</summary>
      <param name="buffer">O buffer para o qual o texto resultante será copiado. Este valor pode não ser <see langword="null" />.</param>
      <param name="index">O deslocamento do buffer no qual o resultado começará a ser copiado.</param>
      <param name="count">O número máximo de bytes a serem copiados para o buffer. O número real de bytes copiados é retornado deste método.</param>
      <returns>O número de bytes gravados no buffer.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.

ou -

Um método assíncrono <see cref="T:System.Xml.XmlReader" /> foi chamado sem definir o sinalizador <see cref="P:System.Xml.XmlReaderSettings.Async" /> como <see langword="true" />. Neste caso, <see cref="T:System.InvalidOperationException" /> é gerado com a mensagem: “Defina XmlReaderSettings.Async como verdadeiro se desejar usar Métodos Assíncronos”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBoolean">
      <summary>Lê o elemento atual e retorna o conteúdo como um objeto <see cref="T:System.Boolean" />.</summary>
      <returns>O elemento de conteúdo como um objeto <see cref="T:System.Boolean" />.</returns>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Xml.XmlReader" /> não está posicionado em um elemento.

ou -

Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
      <exception cref="T:System.Xml.XmlException">O elemento atual contém elementos filho.  

ou - 
O conteúdo do elemento não pode ser convertido em um objeto <see cref="T:System.Boolean" />.</exception>
      <exception cref="T:System.ArgumentNullException">O método é chamado com os argumentos <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)">
      <summary>Verifica se o nome do local especificado e o URI de namespace correspondem àqueles do elemento atual, em seguida, lê o elemento atual e retorna o conteúdo como um objeto <see cref="T:System.Boolean" />.</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceURI">O URI do namespace do elemento.</param>
      <returns>O elemento de conteúdo como um objeto <see cref="T:System.Boolean" />.</returns>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Xml.XmlReader" /> não está posicionado em um elemento.

ou -

Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
      <exception cref="T:System.Xml.XmlException">O elemento atual contém elementos filho.  

ou -  

 Não é possível converter o conteúdo do elemento no tipo solicitado.</exception>
      <exception cref="T:System.ArgumentNullException">O método é chamado com os argumentos <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O nome do local especificado e o URI de namespace não correspondem àqueles do elemento atual que está sendo lido.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDateTime">
      <summary>Lê o elemento atual e retorna o conteúdo como um objeto <see cref="T:System.DateTime" />.</summary>
      <returns>O elemento de conteúdo como um objeto <see cref="T:System.DateTime" />.</returns>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Xml.XmlReader" /> não está posicionado em um elemento.

ou -

Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
      <exception cref="T:System.Xml.XmlException">O elemento atual contém elementos filho.  

ou - 
O conteúdo do elemento não pode ser convertido em um objeto <see cref="T:System.DateTime" />.</exception>
      <exception cref="T:System.ArgumentNullException">O método é chamado com os argumentos <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)">
      <summary>Verifica se o nome do local especificado e o URI de namespace correspondem àqueles do elemento atual, em seguida, lê o elemento atual e retorna o conteúdo como um objeto <see cref="T:System.DateTime" />.</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceURI">O URI do namespace do elemento.</param>
      <returns>O conteúdo do elemento como um objeto <see cref="T:System.DateTime" />.</returns>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Xml.XmlReader" /> não está posicionado em um elemento.

ou -

Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
      <exception cref="T:System.Xml.XmlException">O elemento atual contém elementos filho.  

ou -  

 Não é possível converter o conteúdo do elemento no tipo solicitado.</exception>
      <exception cref="T:System.ArgumentNullException">O método é chamado com os argumentos <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O nome do local especificado e o URI de namespace não correspondem àqueles do elemento atual que está sendo lido.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDecimal">
      <summary>Lê o elemento atual e retorna o conteúdo como um objeto <see cref="T:System.Decimal" />.</summary>
      <returns>O elemento de conteúdo como um objeto <see cref="T:System.Decimal" />.</returns>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Xml.XmlReader" /> não está posicionado em um elemento.

ou -

Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
      <exception cref="T:System.Xml.XmlException">O elemento atual contém elementos filho.  

ou - 
O conteúdo do elemento não pode ser convertido em um <see cref="T:System.Decimal" />.</exception>
      <exception cref="T:System.ArgumentNullException">O método é chamado com os argumentos <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)">
      <summary>Verifica se o nome do local especificado e o URI de namespace correspondem àqueles do elemento atual, em seguida, lê o elemento atual e retorna o conteúdo como um objeto <see cref="T:System.Decimal" />.</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceURI">O URI do namespace do elemento.</param>
      <returns>O elemento de conteúdo como um objeto <see cref="T:System.Decimal" />.</returns>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Xml.XmlReader" /> não está posicionado em um elemento.

ou -

Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
      <exception cref="T:System.Xml.XmlException">O elemento atual contém elementos filho.  

ou - 
O conteúdo do elemento não pode ser convertido em um <see cref="T:System.Decimal" />.</exception>
      <exception cref="T:System.ArgumentNullException">O método é chamado com os argumentos <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O nome do local especificado e o URI de namespace não correspondem àqueles do elemento atual que está sendo lido.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDouble">
      <summary>Lê o elemento atual e retorna o conteúdo como um número de ponto flutuante de precisão dupla.</summary>
      <returns>O conteúdo do elemento como um número de ponto flutuante de precisão dupla.</returns>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Xml.XmlReader" /> não está posicionado em um elemento.

ou -

Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
      <exception cref="T:System.Xml.XmlException">O elemento atual contém elementos filho.  

ou -  

 O conteúdo do elemento não pode ser convertido em um número de ponto flutuante de precisão dupla.</exception>
      <exception cref="T:System.ArgumentNullException">O método é chamado com os argumentos <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)">
      <summary>Verifica se o nome local e o URI de namespace especificados são iguais aos do elemento atual, lê o elemento atual e retorna o conteúdo como um número de ponto flutuante de precisão dupla.</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceURI">O URI do namespace do elemento.</param>
      <returns>O conteúdo do elemento como um número de ponto flutuante de precisão dupla.</returns>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Xml.XmlReader" /> não está posicionado em um elemento.

ou -

Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
      <exception cref="T:System.Xml.XmlException">O elemento atual contém elementos filho.  

ou -  

 Não é possível converter o conteúdo do elemento no tipo solicitado.</exception>
      <exception cref="T:System.ArgumentNullException">O método é chamado com os argumentos <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O nome do local especificado e o URI de namespace não correspondem àqueles do elemento atual que está sendo lido.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsFloat">
      <summary>Lê o elemento atual e retorna o conteúdo como um número de ponto flutuante de precisão simples.</summary>
      <returns>O conteúdo do elemento como um número de ponto flutuante de precisão simples.</returns>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Xml.XmlReader" /> não está posicionado em um elemento.

ou -

Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
      <exception cref="T:System.Xml.XmlException">O elemento atual contém elementos filho.  

ou -  

 O conteúdo do elemento não pode ser convertido em um número de ponto flutuante de precisão simples.</exception>
      <exception cref="T:System.ArgumentNullException">O método é chamado com os argumentos <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)">
      <summary>Verifica se o nome local e o URI de namespace especificados são iguais aos do elemento atual, lê o elemento atual e retorna o conteúdo como um número de ponto flutuante de precisão simples.</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceURI">O URI do namespace do elemento.</param>
      <returns>O conteúdo do elemento como um número de ponto flutuante de precisão simples.</returns>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Xml.XmlReader" /> não está posicionado em um elemento.

ou - 
Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
      <exception cref="T:System.Xml.XmlException">O elemento atual contém elementos filho.  

ou -  

 O conteúdo do elemento não pode ser convertido em um número de ponto flutuante de precisão simples.</exception>
      <exception cref="T:System.ArgumentNullException">O método é chamado com os argumentos <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O nome do local especificado e o URI de namespace não correspondem àqueles do elemento atual que está sendo lido.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsInt">
      <summary>Lê o elemento atual e retorna o conteúdo como um inteiro com sinal de 32 bits.</summary>
      <returns>O conteúdo do elemento como um inteiro com sinal de 32 bits.</returns>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Xml.XmlReader" /> não está posicionado em um elemento.

ou - 
Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
      <exception cref="T:System.Xml.XmlException">O elemento atual contém elementos filho.  

ou -  

 O conteúdo do elemento não pode ser convertido em um inteiro com sinal de 32 bits.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)">
      <summary>Verifica se o nome local e o URI de namespace especificados são iguais aos do elemento atual, lê o elemento atual e retorna o conteúdo como um inteiro com sinal de 32 bits.</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceURI">O URI do namespace do elemento.</param>
      <returns>O conteúdo do elemento como um inteiro com sinal de 32 bits.</returns>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Xml.XmlReader" /> não está posicionado em um elemento.

ou - 
Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
      <exception cref="T:System.Xml.XmlException">O elemento atual contém elementos filho.  

ou -  

 O conteúdo do elemento não pode ser convertido em um inteiro com sinal de 32 bits.</exception>
      <exception cref="T:System.ArgumentNullException">O método é chamado com os argumentos <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O nome do local especificado e o URI de namespace não correspondem àqueles do elemento atual que está sendo lido.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsLong">
      <summary>Lê o elemento atual e retorna o conteúdo como um inteiro com sinal de 64 bits.</summary>
      <returns>O conteúdo do elemento como um inteiro com sinal de 64 bits.</returns>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Xml.XmlReader" /> não está posicionado em um elemento.

ou - 
Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
      <exception cref="T:System.Xml.XmlException">O elemento atual contém elementos filho.  

ou -  

 O conteúdo do elemento não pode ser convertido em um inteiro com sinal de 64 bits.</exception>
      <exception cref="T:System.ArgumentNullException">O método é chamado com os argumentos <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)">
      <summary>Verifica se o nome local e o URI de namespace especificados são iguais aos do elemento atual, lê o elemento atual e retorna o conteúdo como um inteiro com sinal de 64 bits.</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceURI">O URI do namespace do elemento.</param>
      <returns>O conteúdo do elemento como um inteiro com sinal de 64 bits.</returns>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Xml.XmlReader" /> não está posicionado em um elemento.

ou - 
Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
      <exception cref="T:System.Xml.XmlException">O elemento atual contém elementos filho.  

ou -  

 O conteúdo do elemento não pode ser convertido em um inteiro com sinal de 64 bits.</exception>
      <exception cref="T:System.ArgumentNullException">O método é chamado com os argumentos <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O nome do local especificado e o URI de namespace não correspondem àqueles do elemento atual que está sendo lido.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsObject">
      <summary>Lê o elemento atual e retorna os conteúdos como um <see cref="T:System.Object" />.</summary>
      <returns>Um objeto CLR (Common Language Runtime) demarcado do tipo mais apropriado. A propriedade <see cref="P:System.Xml.XmlReader.ValueType" /> determina o tipo CLR apropriado. Se o conteúdo for tipado como tipo de lista, esse método retornará uma matriz de objetos demarcados do tipo apropriado.</returns>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Xml.XmlReader" /> não está posicionado em um elemento.

ou - 
Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
      <exception cref="T:System.Xml.XmlException">O elemento atual contém elementos filho.  

ou -  

 O conteúdo do elemento não pode ser convertido no tipo solicitado</exception>
      <exception cref="T:System.ArgumentNullException">O método é chamado com os argumentos <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)">
      <summary>Verifica se o nome local e o URI de namespace especificados são iguais aos do elemento atual, lê o elemento atual e retorna o conteúdo como um <see cref="T:System.Object" />.</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceURI">O URI do namespace do elemento.</param>
      <returns>Um objeto CLR (Common Language Runtime) demarcado do tipo mais apropriado. A propriedade <see cref="P:System.Xml.XmlReader.ValueType" /> determina o tipo CLR apropriado. Se o conteúdo for tipado como tipo de lista, esse método retornará uma matriz de objetos demarcados do tipo apropriado.</returns>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Xml.XmlReader" /> não está posicionado em um elemento.

ou - 
Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
      <exception cref="T:System.Xml.XmlException">O elemento atual contém elementos filho.  

ou -  

 Não é possível converter o conteúdo do elemento no tipo solicitado.</exception>
      <exception cref="T:System.ArgumentNullException">O método é chamado com os argumentos <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O nome do local especificado e o URI de namespace não correspondem àqueles do elemento atual que está sendo lido.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsObjectAsync">
      <summary>Lê de forma assíncrona o elemento atual e retorna o conteúdo como um <see cref="T:System.Object" />.</summary>
      <returns>Um objeto CLR (Common Language Runtime) demarcado do tipo mais apropriado. A propriedade <see cref="P:System.Xml.XmlReader.ValueType" /> determina o tipo CLR apropriado. Se o conteúdo for tipado como tipo de lista, esse método retornará uma matriz de objetos demarcados do tipo apropriado.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.

ou -

Um método assíncrono <see cref="T:System.Xml.XmlReader" /> foi chamado sem definir o sinalizador <see cref="P:System.Xml.XmlReaderSettings.Async" /> como <see langword="true" />. Neste caso, <see cref="T:System.InvalidOperationException" /> é gerado com a mensagem: “Defina XmlReaderSettings.Async como verdadeiro se desejar usar Métodos Assíncronos”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsString">
      <summary>Lê o elemento atual e retorna o conteúdo como um objeto <see cref="T:System.String" />.</summary>
      <returns>O elemento de conteúdo como um objeto <see cref="T:System.String" />.</returns>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Xml.XmlReader" /> não está posicionado em um elemento.

ou -

Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
      <exception cref="T:System.Xml.XmlException">O elemento atual contém elementos filho.  

ou - 
O conteúdo do elemento não pode ser convertido em um objeto <see cref="T:System.String" />.</exception>
      <exception cref="T:System.ArgumentNullException">O método é chamado com os argumentos <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)">
      <summary>Verifica se o nome do local especificado e o URI de namespace correspondem àqueles do elemento atual, em seguida, lê o elemento atual e retorna o conteúdo como um objeto <see cref="T:System.String" />.</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceURI">O URI do namespace do elemento.</param>
      <returns>O elemento de conteúdo como um objeto <see cref="T:System.String" />.</returns>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Xml.XmlReader" /> não está posicionado em um elemento.

ou -

Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
      <exception cref="T:System.Xml.XmlException">O elemento atual contém elementos filho.  

ou - 
O conteúdo do elemento não pode ser convertido em um objeto <see cref="T:System.String" />.</exception>
      <exception cref="T:System.ArgumentNullException">O método é chamado com os argumentos <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O nome do local especificado e o URI de namespace não correspondem àqueles do elemento atual que está sendo lido.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsStringAsync">
      <summary>Lê de forma assíncrona o elemento atual e retorna o conteúdo como um objeto <see cref="T:System.String" />.</summary>
      <returns>O elemento de conteúdo como um objeto <see cref="T:System.String" />.</returns>
      <exception cref="T:System.InvalidOperationException">Um método assíncrono <see cref="T:System.Xml.XmlReader" /> foi chamado sem definir o sinalizador <see cref="P:System.Xml.XmlReaderSettings.Async" /> como <see langword="true" />. Neste caso, <see cref="T:System.InvalidOperationException" /> é gerado com a mensagem: “Defina XmlReaderSettings.Async como verdadeiro se desejar usar Métodos Assíncronos”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementString">
      <summary>Lê um elemento somente texto. No entanto, é recomendável que você use o método <see cref="M:System.Xml.XmlReader.ReadElementContentAsString" /> em vez disso, porque ele fornece uma maneira mais simples de lidar com essa operação.</summary>
      <returns>O texto contido no elemento que foi lido. Uma cadeia de caracteres vazia se o elemento estiver vazio.</returns>
      <exception cref="T:System.Xml.XmlException">O próximo nó de conteúdo não é uma marca de início ou o elemento encontrado não contém um valor de texto simples.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementString(System.String)">
      <summary>Verifica se a propriedade <see cref="P:System.Xml.XmlReader.Name" /> do elemento encontrado corresponde à cadeia de caracteres fornecida antes de ler um elemento somente texto. No entanto, é recomendável que você use o método <see cref="M:System.Xml.XmlReader.ReadElementContentAsString" /> em vez disso, porque ele fornece uma maneira mais simples de lidar com essa operação.</summary>
      <param name="name">O nome para verificar.</param>
      <returns>O texto contido no elemento que foi lido. Uma cadeia de caracteres vazia se o elemento estiver vazio.</returns>
      <exception cref="T:System.Xml.XmlException">Se o próximo nó de conteúdo não for uma marca de início; se o elemento <see langword="Name" /> não corresponde ao argumento fornecido; ou se o elemento encontrado não contiver um valor de texto simples.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementString(System.String,System.String)">
      <summary>Verifica se as propriedades <see cref="P:System.Xml.XmlReader.LocalName" /> e <see cref="P:System.Xml.XmlReader.NamespaceURI" /> do elemento encontrado correspondem às cadeias de caracteres fornecidas antes de ler um elemento somente de texto. No entanto, é recomendável que você use o método <see cref="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)" /> em vez disso, porque ele fornece uma maneira mais simples de lidar com essa operação.</summary>
      <param name="localname">O nome local a ser verificado.</param>
      <param name="ns">O URI de namespace a ser verificado.</param>
      <returns>O texto contido no elemento que foi lido. Uma cadeia de caracteres vazia se o elemento estiver vazio.</returns>
      <exception cref="T:System.Xml.XmlException">Se o próximo nó de conteúdo não for uma marca de início; se o elemento <see langword="LocalName" /> ou <see langword="NamespaceURI" /> não corresponder aos argumentos fornecidos; ou se o elemento encontrado não contiver um valor de texto simples.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadEndElement">
      <summary>Verifica se o nó de conteúdo atual é uma marca de fim e avança o leitor para o próximo nó.</summary>
      <exception cref="T:System.Xml.XmlException">O nó atual não é uma marca de fim ou XML incorreto foi encontrado no fluxo de entrada.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadInnerXml">
      <summary>Quando substituído em uma classe derivada, lê todo o conteúdo, incluindo a marcação, como uma cadeia de caracteres.</summary>
      <returns>Todo o conteúdo XML, incluindo a marcação, no nó atual. Se o nó atual não tiver nenhum filho, uma cadeia de caracteres vazia será retornada.  
 Se o nó atual não for um elemento nem um atributo, uma cadeia de caracteres vazia será retornada.</returns>
      <exception cref="T:System.Xml.XmlException">O XML está malformado ou ocorreu um erro ao analisar o XML.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadInnerXmlAsync">
      <summary>Lê de forma assíncrona todo o conteúdo, inclusive a marcação, como uma cadeia de caracteres.</summary>
      <returns>Todo o conteúdo XML, incluindo a marcação, no nó atual. Se o nó atual não tiver nenhum filho, uma cadeia de caracteres vazia será retornada.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.

ou -

Um método assíncrono <see cref="T:System.Xml.XmlReader" /> foi chamado sem definir o sinalizador <see cref="P:System.Xml.XmlReaderSettings.Async" /> como <see langword="true" />. Neste caso, <see cref="T:System.InvalidOperationException" /> é gerado com a mensagem: “Defina XmlReaderSettings.Async como verdadeiro se desejar usar Métodos Assíncronos”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadOuterXml">
      <summary>Quando substituído em uma classe derivada, lê o conteúdo, inclusive a marcação, que representa esse nó e todos os seus filhos.</summary>
      <returns>Se o leitor estiver posicionado em um elemento ou em um nó de atributo, esse método retornará todo o conteúdo XML, inclusive a marcação do nó atual e todos os seus filhos; caso contrário, ele retornará uma cadeia de caracteres vazia.</returns>
      <exception cref="T:System.Xml.XmlException">O XML está malformado ou ocorreu um erro ao analisar o XML.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadOuterXmlAsync">
      <summary>Lê de forma assíncrona o conteúdo, inclusive a marcação, representando este nó e todos os seus filhos.</summary>
      <returns>Se o leitor estiver posicionado em um elemento ou em um nó de atributo, esse método retornará todo o conteúdo XML, inclusive a marcação do nó atual e todos os seus filhos; caso contrário, ele retornará uma cadeia de caracteres vazia.</returns>
      <exception cref="T:System.InvalidOperationException">Um método assíncrono <see cref="T:System.Xml.XmlReader" /> foi chamado sem definir o sinalizador <see cref="P:System.Xml.XmlReaderSettings.Async" /> como <see langword="true" />. Neste caso, <see cref="T:System.InvalidOperationException" /> é gerado com a mensagem: “Defina XmlReaderSettings.Async como verdadeiro se desejar usar Métodos Assíncronos”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadStartElement">
      <summary>Verifica se o nó atual é um elemento e avança o leitor para o próximo nó.</summary>
      <exception cref="T:System.Xml.XmlException">Foi encontrado um XML incorreto no fluxo de entrada.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadStartElement(System.String)">
      <summary>Verifica se o nó de conteúdo atual é um elemento com o <see cref="P:System.Xml.XmlReader.Name" /> fornecido e avança o leitor para o próximo nó.</summary>
      <param name="name">O nome qualificado do elemento.</param>
      <exception cref="T:System.Xml.XmlException">Foi encontrado um XML incorreto no fluxo de entrada.  

ou - 
O <see cref="P:System.Xml.XmlReader.Name" /> do elemento não corresponde ao <paramref name="name" /> fornecido.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadStartElement(System.String,System.String)">
      <summary>Verifica se o nó de conteúdo atual é um elemento com o <see cref="P:System.Xml.XmlReader.LocalName" /> e <see cref="P:System.Xml.XmlReader.NamespaceURI" /> fornecidos e avança o leitor para o próximo nó.</summary>
      <param name="localname">O nome local do elemento.</param>
      <param name="ns">O URI do namespace do elemento.</param>
      <exception cref="T:System.Xml.XmlException">Foi encontrado um XML incorreto no fluxo de entrada.  

ou - 
As propriedades <see cref="P:System.Xml.XmlReader.LocalName" /> e <see cref="P:System.Xml.XmlReader.NamespaceURI" /> do elemento encontrado não correspondem aos argumentos fornecidos.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.ReadState">
      <summary>Quando substituído em uma classe derivada, obtém o estado do leitor.</summary>
      <returns>Um dos valores de enumeração que especifica o estado do leitor.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadString">
      <summary>Quando substituído em uma classe derivada, lê o conteúdo de um nó de elemento ou texto como uma cadeia de caracteres. No entanto, é recomendável que você use o método <see cref="Overload:System.Xml.XmlReader.ReadElementContentAsString" /> em vez disso, porque ele fornece uma maneira mais simples de lidar com essa operação.</summary>
      <returns>O conteúdo do elemento ou uma cadeia de caracteres vazia.</returns>
      <exception cref="T:System.Xml.XmlException">Erro ao analisar o XML.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadSubtree">
      <summary>Retorna uma nova instância <see langword="XmlReader" /> que pode ser usada para ler o nó atual e todos os seus descendentes.</summary>
      <returns>Uma nova instância de leitor XML definida como <see cref="F:System.Xml.ReadState.Initial" />. Uma chamada ao método <see cref="M:System.Xml.XmlReader.Read" /> posiciona o novo leitor no nó que era atual antes da chamada ao método <see cref="M:System.Xml.XmlReader.ReadSubtree" />.</returns>
      <exception cref="T:System.InvalidOperationException">O leitor de XML não está posicionado em um elemento quando esse método é chamado.

ou -

Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToDescendant(System.String)">
      <summary>Avança o <see cref="T:System.Xml.XmlReader" /> para o próximo elemento descendente com o nome qualificado especificado.</summary>
      <param name="name">O nome qualificado do elemento para o qual você deseja mover.</param>
      <returns>
        <see langword="true" /> se um elemento descendente correspondente for encontrado; caso contrário, <see langword="false" />. Se um elemento filho correspondente não for encontrado, o <see cref="T:System.Xml.XmlReader" /> é posicionado na marca de fim (<see cref="P:System.Xml.XmlReader.NodeType" /> é <see langword="XmlNodeType.EndElement" />) do elemento.  
Se o <see cref="T:System.Xml.XmlReader" /> não estiver posicionado em um elemento quando <see cref="M:System.Xml.XmlReader.ReadToDescendant(System.String)" /> foi chamado, esse método retornará <see langword="false" /> e a posição do <see cref="T:System.Xml.XmlReader" /> não será alterada.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro é uma cadeia de caracteres vazia.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)">
      <summary>Avança o <see cref="T:System.Xml.XmlReader" /> para o próximo elemento descendente com o nome local e URI do namespace especificados.</summary>
      <param name="localName">O nome local do elemento para o qual você deseja mover.</param>
      <param name="namespaceURI">O URI do namespace do elemento para o qual você deseja mover.</param>
      <returns>
        <see langword="true" /> se um elemento descendente correspondente for encontrado; caso contrário, <see langword="false" />. Se um elemento filho correspondente não for encontrado, o <see cref="T:System.Xml.XmlReader" /> é posicionado na marca de fim (<see cref="P:System.Xml.XmlReader.NodeType" /> é <see langword="XmlNodeType.EndElement" />) do elemento.  
Se o <see cref="T:System.Xml.XmlReader" /> não estiver posicionado em um elemento quando <see cref="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)" /> foi chamado, esse método retornará <see langword="false" /> e a posição do <see cref="T:System.Xml.XmlReader" /> não será alterada.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
      <exception cref="T:System.ArgumentNullException">Ambos os valores de parâmetro são <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToFollowing(System.String)">
      <summary>Lê até que seja encontrado um elemento com o nome qualificado especificado.</summary>
      <param name="name">O nome qualificado do elemento.</param>
      <returns>
        <see langword="true" /> se um elemento correspondente for encontrado; caso contrário, <see langword="false" /> e o <see cref="T:System.Xml.XmlReader" /> estará em um estado de fim do arquivo.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro é uma cadeia de caracteres vazia.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToFollowing(System.String,System.String)">
      <summary>Lê até que seja encontrado um elemento com o nome do local e o URI do namespace especificados.</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceURI">O URI do namespace do elemento.</param>
      <returns>
        <see langword="true" /> se um elemento correspondente for encontrado; caso contrário, <see langword="false" /> e o <see cref="T:System.Xml.XmlReader" /> estará em um estado de fim do arquivo.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
      <exception cref="T:System.ArgumentNullException">Ambos os valores de parâmetro são <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToNextSibling(System.String)">
      <summary>Avança o <see langword="XmlReader" /> para o próximo elemento irmão com o nome qualificado especificado.</summary>
      <param name="name">O nome qualificado do elemento irmão para o qual você deseja realizar a movimentação.</param>
      <returns>
        <see langword="true" /> se um elemento irmão correspondente for encontrado; caso contrário, <see langword="false" />. Se um elemento irmão correspondente não for encontrado, o <see langword="XmlReader" /> é posicionado na marca de fim (<see cref="P:System.Xml.XmlReader.NodeType" /> é <see langword="XmlNodeType.EndElement" />) do elemento pai.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro é uma cadeia de caracteres vazia.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToNextSibling(System.String,System.String)">
      <summary>Avança o <see langword="XmlReader" /> para o próximo elemento irmão com o nome local e o URI de namespace especificados.</summary>
      <param name="localName">O nome local do elemento irmão para o qual você deseja.</param>
      <param name="namespaceURI">O URI do namespace do elemento irmão para o qual você deseja mover.</param>
      <returns>
        <see langword="true" /> se um elemento irmão correspondente for encontrado; caso contrário, <see langword="false" />. Se um elemento irmão correspondente não for encontrado, o <see langword="XmlReader" /> é posicionado na marca de fim (<see cref="P:System.Xml.XmlReader.NodeType" /> é <see langword="XmlNodeType.EndElement" />) do elemento pai.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
      <exception cref="T:System.ArgumentNullException">Ambos os valores de parâmetro são <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
      <summary>Lê grandes fluxos de texto inseridos em um documento XML.</summary>
      <param name="buffer">A matriz de caracteres que serve como o buffer no qual os conteúdos de texto são gravados. Este valor pode não ser <see langword="null" />.</param>
      <param name="index">O deslocamento dentro do buffer em que o <see cref="T:System.Xml.XmlReader" /> pode começar a copiar os resultados.</param>
      <param name="count">O número máximo de caracteres a ser copiado para o buffer. O número real de caracteres copiado é retornado deste método.</param>
      <returns>O número de caracteres lidos no buffer. O valor zero é retornado quando não há mais nenhum conteúdo de texto.</returns>
      <exception cref="T:System.InvalidOperationException">O nó atual não tem um valor (<see cref="P:System.Xml.XmlReader.HasValue" /> é <see langword="false" />).

ou - 
Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O índice do buffer ou a contagem de índices + é maior que o tamanho do buffer alocado.</exception>
      <exception cref="T:System.NotSupportedException">A implementação <see cref="T:System.Xml.XmlReader" /> não dá suporte a esse método.</exception>
      <exception cref="T:System.Xml.XmlException">Os dados XML não estão bem formados.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Lê de forma assíncrona grandes fluxos de texto inserido em um documento XML.</summary>
      <param name="buffer">A matriz de caracteres que serve como o buffer no qual os conteúdos de texto são gravados. Este valor pode não ser <see langword="null" />.</param>
      <param name="index">O deslocamento dentro do buffer em que o <see cref="T:System.Xml.XmlReader" /> pode começar a copiar os resultados.</param>
      <param name="count">O número máximo de caracteres a ser copiado para o buffer. O número real de caracteres copiado é retornado deste método.</param>
      <returns>O número de caracteres lidos no buffer. O valor zero é retornado quando não há mais nenhum conteúdo de texto.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.

ou -

Um método assíncrono <see cref="T:System.Xml.XmlReader" /> foi chamado sem definir o sinalizador <see cref="P:System.Xml.XmlReaderSettings.Async" /> como <see langword="true" />. Neste caso, <see cref="T:System.InvalidOperationException" /> é gerado com a mensagem: “Defina XmlReaderSettings.Async como verdadeiro se desejar usar Métodos Assíncronos”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ResolveEntity">
      <summary>Quando substituído em uma classe derivada, resolve a referência da entidade para nós <see langword="EntityReference" />.</summary>
      <exception cref="T:System.InvalidOperationException">O leitor não está posicionado em um nó <see langword="EntityReference" />. Essa implementação do leitor não pode resolver entidades (<see cref="P:System.Xml.XmlReader.CanResolveEntity" /> retorna <see langword="false" />).

ou -

Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.SchemaInfo">
      <summary>Obtém as informações de esquema que foram atribuídas ao nó atual como resultado da validação de esquema.</summary>
      <returns>Um objeto <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> que contém as informações de esquema para o nó atual. Informações de esquema podem ser definidas em elementos, atributos ou nós de texto com um não-nulo <see cref="P:System.Xml.XmlReader.ValueType" /> (valores digitados).  
Se o nó atual não é um dos tipos de nó acima ou se o <see langword="XmlReader" /> instância não relata informações de esquema, essa propriedade retornará <see langword="null" />.  
Se essa propriedade é chamada de um <see cref="T:System.Xml.XmlTextReader" /> ou um <see cref="T:System.Xml.XmlValidatingReader" /> do objeto, essa propriedade sempre retorna <see langword="null" />. Eles <see langword="XmlReader" /> implementações não expõem informações de esquema por meio de <see langword="SchemaInfo" /> propriedade.  
   
 Se você tiver que obter o conjunto de informações de post-schema-validation (PSVI) de um elemento, posicione o leitor na marca de fim do elemento, em vez de na marca de início. Obtenha o PSVI por meio de <see langword="SchemaInfo" /> propriedade de um leitor. O leitor Validando criado por meio <see cref="Overload:System.Xml.XmlReader.Create" /> com o <see cref="P:System.Xml.XmlReaderSettings.ValidationType" /> propriedade definida como <see cref="F:System.Xml.ValidationType.Schema" /> tem a PSVI completa para um elemento somente quando o leitor está posicionado na marca de fim de um elemento.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.Settings">
      <summary>Obtém o objeto <see cref="T:System.Xml.XmlReaderSettings" /> usado para criar essa instância <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>O objeto <see cref="T:System.Xml.XmlReaderSettings" /> usado para criar essa instância do leitor. Se esse leitor não foi criado usando o <see cref="Overload:System.Xml.XmlReader.Create" /> método, essa propriedade retornará <see langword="null" />.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Skip">
      <summary>Ignora os filhos do nó atual.</summary>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.SkipAsync">
      <summary>Ignora de forma assíncrona os filhos do nó atual.</summary>
      <returns>O nó atual.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.

ou -

Um método assíncrono <see cref="T:System.Xml.XmlReader" /> foi chamado sem definir o sinalizador <see cref="P:System.Xml.XmlReaderSettings.Async" /> como <see langword="true" />. Neste caso, <see cref="T:System.InvalidOperationException" /> é gerado com a mensagem: “Defina XmlReaderSettings.Async como verdadeiro se desejar usar Métodos Assíncronos”.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.Value">
      <summary>Quando é substituído em uma classe derivada, obtém o valor do texto do nó atual.</summary>
      <returns>O valor retornado depende do <see cref="P:System.Xml.XmlReader.NodeType" /> do nó. A tabela a seguir lista os tipos de nós que têm um valor a ser retornado. Todos os outros tipos de nó retornam <see langword="String.Empty" />.  
  Tipo de nó 
  Valor 
 <see langword="Attribute" /> O valor do atributo.  

 <see langword="CDATA" /> O conteúdo da seção CDATA.  

 <see langword="Comment" /> O conteúdo do comentário.  

 <see langword="DocumentType" /> O subconjunto interno.  

 <see langword="ProcessingInstruction" /> Todo o conteúdo, exceto o destino.  

 <see langword="SignificantWhitespace" /> O espaço em branco entre a marcação em um modelo de conteúdo misto.  

 <see langword="Text" /> O conteúdo do nó de texto.  

 <see langword="Whitespace" /> Espaço em branco entre a marcação.  

 <see langword="XmlDeclaration" /> O conteúdo da declaração.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.ValueType">
      <summary>Obtém o tipo CLR (Common Language Runtime) para o nó atual.</summary>
      <returns>O tipo CLR que corresponde ao valor digitado do nó. O padrão é <see langword="System.String" />.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.XmlLang">
      <summary>Quando substituído em uma classe derivada, obtém o escopo <see langword="xml:lang" /> atual.</summary>
      <returns>Atual <see langword="xml:lang" /> escopo.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.XmlSpace">
      <summary>Quando substituído em uma classe derivada, obtém o escopo <see langword="xml:space" /> atual.</summary>
      <returns>Um dos valores de <see cref="T:System.Xml.XmlSpace" />. Se nenhum <see langword="xml:space" /> escopo existir, essa propriedade padroniza como <see langword="XmlSpace.None" />.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlReader" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="T:System.Xml.XmlReaderSettings">
      <summary>Especifica um conjunto de recursos para dar suporte ao objeto <see cref="T:System.Xml.XmlReader" /> criado pelo método <see cref="Overload:System.Xml.XmlReader.Create" />.</summary>
    </member>
    <member name="M:System.Xml.XmlReaderSettings.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlReaderSettings" />.</summary>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.Async">
      <summary>Obtém ou define se métodos <see cref="T:System.Xml.XmlReader" /> assíncronos podem ser usados em uma determinada instância do <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>
        <see langword="true" /> se métodos assíncronos puderem ser usados; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.CheckCharacters">
      <summary>Obtém ou define um valor que indica se a verificação de caracteres deve ser feita ou não.</summary>
      <returns>
        <see langword="true" /> para fazer a verificação de caracteres de; caso contrário, <see langword="false" />. O padrão é <see langword="true" />.  
   
 Se <see cref="T:System.Xml.XmlReader" /> estiver processando dados de texto, sempre verificará se os nomes XML e o conteúdo de texto são válidos, independentemente da configuração de propriedade. A definição de <see cref="P:System.Xml.XmlReaderSettings.CheckCharacters" /> como <see langword="false" /> desativa a verificação de caracteres em referências de entidade de caracteres.</returns>
    </member>
    <member name="M:System.Xml.XmlReaderSettings.Clone">
      <summary>Cria uma cópia da instância <see cref="T:System.Xml.XmlReaderSettings" />.</summary>
      <returns>O objeto <see cref="T:System.Xml.XmlReaderSettings" /> clonado.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.CloseInput">
      <summary>Obtém ou define um valor que indica se o fluxo subjacente ou o <see cref="T:System.IO.TextReader" /> deverá ser fechado quando o leitor for fechado.</summary>
      <returns>
        <see langword="true" /> para fechar o fluxo subjacente ou <see cref="T:System.IO.TextReader" /> quando o leitor for fechado, caso contrário <see langword="false" />. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.ConformanceLevel">
      <summary>Obtém ou define o nível de conformidade que o <see cref="T:System.Xml.XmlReader" /> cumprirá.</summary>
      <returns>Um dos valores de enumeração que especifica o nível de conformidade que será imposto pelo leitor de XML. O padrão é <see cref="F:System.Xml.ConformanceLevel.Document" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.DtdProcessing">
      <summary>Obtém ou define um valor que determina o processamento de DTDs.</summary>
      <returns>Um dos valores de enumeração que determina o processamento de DTDs. O padrão é <see cref="F:System.Xml.DtdProcessing.Prohibit" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.IgnoreComments">
      <summary>Obtém ou define um valor que indica se os comentários devem ser ignorados.</summary>
      <returns>
        <see langword="true" /> para ignorar comentários, caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.IgnoreProcessingInstructions">
      <summary>Obtém ou define um valor que indica se as instruções de processamento devem ser ignoradas.</summary>
      <returns>
        <see langword="true" /> para ignorar as instruções de processamento; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.IgnoreWhitespace">
      <summary>Obtém ou define um valor que indica se os espaços em branco insignificantes devem ser ignorados.</summary>
      <returns>
        <see langword="true" /> para ignorar espaços em branco; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.LineNumberOffset">
      <summary>Obtém ou define o deslocamento do número de linha do objeto <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>O deslocamento do número de linha. O padrão é 0.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.LinePositionOffset">
      <summary>Obtém ou define o deslocamento da posição de linha do objeto <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>O deslocamento da posição da linha. O padrão é 0.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.MaxCharactersFromEntities">
      <summary>Obtém ou define um valor que indica o número máximo permitido de caracteres em um documento resultante da expansão de entidades.</summary>
      <returns>O número máximo permitido de caracteres de entidades expandidas. O padrão é 0.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.MaxCharactersInDocument">
      <summary>Obtém ou define um valor que indica o número máximo permitido de caracteres em um documento XML. Um valor zero (0) significa que não há limite para o tamanho do documento XML. Um valor diferente de zero especifica o tamanho máximo, em caracteres.</summary>
      <returns>O número máximo permitido de caracteres em um documento XML. O padrão é 0.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.NameTable">
      <summary>Obtém ou define o <see cref="T:System.Xml.XmlNameTable" /> usado para comparações de cadeia de caracteres atomizadas.</summary>
      <returns>O <see cref="T:System.Xml.XmlNameTable" /> que armazena todas as cadeias de caracteres Atom usadas <see cref="T:System.Xml.XmlReader" /> por todas as instâncias <see cref="T:System.Xml.XmlReaderSettings" /> criadas usando esse objeto.  
O padrão é <see langword="null" />. A instância <see cref="T:System.Xml.XmlReader" /> criada usará um novo vazio <see cref="T:System.Xml.NameTable" /> se esse valor for <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.ProhibitDtd">
      <summary>Obtém ou define um valor que indica se o processamento de DTD (definição de tipo de documento) deve ser proibido. Esta propriedade está obsoleta. Use <see cref="P:System.Xml.XmlTextReader.DtdProcessing" /> em seu lugar.</summary>
      <returns>
        <see langword="true" /> para proibir o processamento de DTD; caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xml.XmlReaderSettings.Reset">
      <summary>Redefine os membros da classe de configurações para seus valores padrão.</summary>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.Schemas">
      <summary>Obtém ou define o <see cref="T:System.Xml.Schema.XmlSchemaSet" /> a ser usado ao executar a validação de esquema.</summary>
      <returns>O <see cref="T:System.Xml.Schema.XmlSchemaSet" /> a ser usado ao executar a validação de esquema. O padrão é um objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> vazio.</returns>
    </member>
    <member name="E:System.Xml.XmlReaderSettings.ValidationEventHandler">
      <summary>Ocorre quando o leitor encontra erros de validação.</summary>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.ValidationFlags">
      <summary>Obtém ou define um valor que indica as configurações de validação de esquema. Essa configuração aplica-se a objetos <see cref="T:System.Xml.XmlReader" /> que validam esquemas (a propriedade <see cref="P:System.Xml.XmlReaderSettings.ValidationType" /> definida como <see langword="ValidationType.Schema" />).</summary>
      <returns>Uma combinação bit a bit dos valores de enumeração que especifica as opções de validação. <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints" /> e <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes" /> são habilitados por padrão. <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema" />, <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation" /> e <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings" /> são desabilitados por padrão.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.ValidationType">
      <summary>Obtém ou define um valor que indica se o <see cref="T:System.Xml.XmlReader" /> executará a validação ou digitará a atribuição durante a leitura.</summary>
      <returns>Um dos valores <see cref="T:System.Xml.ValidationType" /> que indica se o XmlReader executará a validação ou digitará atribuição durante a leitura. O padrão é <see langword="ValidationType.None" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.XmlResolver">
      <summary>Define o <see cref="T:System.Xml.XmlResolver" /> usado para acessar documentos externos.</summary>
      <returns>Um <see cref="T:System.Xml.XmlResolver" /> usado para acessar documentos externos. Se for definido como <see langword="null" />, uma <see cref="T:System.Xml.XmlException" /> será gerada quando o <see cref="T:System.Xml.XmlReader" /> tentar acessar um recurso externo. O padrão é um novo <see cref="T:System.Xml.XmlUrlResolver" /> sem credenciais.  A partir do .NET Framework 4.5.2, essa configuração tem o valor padrão <see langword="null" />.</returns>
    </member>
    <member name="T:System.Xml.XmlResolver">
      <summary>Resolve recursos XML externos nomeados por um URI (Uniform Resource Identifier).</summary>
    </member>
    <member name="M:System.Xml.XmlResolver.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlResolver" />.</summary>
    </member>
    <member name="P:System.Xml.XmlResolver.Credentials">
      <summary>Quando substituído em uma classe derivada, define as credenciais usadas para autenticar solicitações da Web.</summary>
      <returns>As credenciais a serem usadas para autenticar solicitações da Web. Se essa propriedade não estiver definida, o valor assumirá o padrão de <see langword="null" />, isto é, o <see langword="XmlResolver" /> não tem credenciais de usuário.</returns>
    </member>
    <member name="M:System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)">
      <summary>Quando substituído em uma classe derivada, mapeia um URI para um objeto que contém o recurso real.</summary>
      <param name="absoluteUri">O URI retornado de <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</param>
      <param name="role">Não usado no momento.</param>
      <param name="ofObjectToReturn">O tipo de objeto a ser retornado. A versão atual retorna somente objetos System.IO.Stream.</param>
      <returns>Um objeto de fluxo ou <see langword="null" /> se for especificado um tipo diferente de fluxo.</returns>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="ofObjectToReturn" /> não é um tipo <see langword="Stream" />.</exception>
      <exception cref="T:System.UriFormatException">O URI especificado não é um URI absoluto.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="absoluteUri" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Exception">Há um erro de tempo de execução (por exemplo, uma conexão de servidor interrompida).</exception>
    </member>
    <member name="M:System.Xml.XmlResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
      <summary>Mapeia de forma assíncrona um URI para um objeto que contém o recurso real.</summary>
      <param name="absoluteUri">O URI retornado de <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</param>
      <param name="role">Não usado no momento.</param>
      <param name="ofObjectToReturn">O tipo de objeto a ser retornado. A versão atual retorna somente objetos <see cref="T:System.IO.Stream" />.</param>
      <returns>Um objeto de fluxo ou <see langword="null" /> se for especificado um tipo diferente de fluxo.</returns>
    </member>
    <member name="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)">
      <summary>Quando substituído em uma classe derivada, resolve o URI absoluto dos URIs base e relativo.</summary>
      <param name="baseUri">O URI base usado para resolver o URI relativo.</param>
      <param name="relativeUri">O URI a ser resolvido. O URI pode ser absoluto ou relativo. Se for absoluto, esse valor substituirá eficientemente o valor <paramref name="baseUri" />. Se for relativo, ele combinará com a <paramref name="baseUri" /> para tornar um URI absoluto.</param>
      <returns>O URI absoluto ou <see langword="null" /> se o URI relativo não puder ser resolvido.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="relativeUri" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)">
      <summary>Habilita o resolvedor para tipos de retorno diferentes de <see cref="T:System.IO.Stream" />.</summary>
      <param name="absoluteUri">O URI.</param>
      <param name="type">O tipo a ser retornado.</param>
      <returns>
        <see langword="true" /> se houver suporte para o <paramref name="type" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xml.XmlSecureResolver">
      <summary>Ajuda a proteger outra implementação de <see cref="T:System.Xml.XmlResolver" /> encapsulando o objeto <see cref="T:System.Xml.XmlResolver" /> e restringindo os recursos aos quais o <see cref="T:System.Xml.XmlResolver" /> subjacente tem acesso.</summary>
    </member>
    <member name="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlSecureResolver" /> com o <see cref="T:System.Xml.XmlResolver" /> e a URL fornecida.</summary>
      <param name="resolver">O resolvedor XML que é encapsulado pelo <see cref="T:System.Xml.XmlSecureResolver" />.</param>
      <param name="securityUrl">A URL usada para criar o <see cref="T:System.Security.PermissionSet" /> que será aplicado ao <see cref="T:System.Xml.XmlResolver" /> subjacente. O <see cref="T:System.Xml.XmlSecureResolver" /> chama <see cref="M:System.Security.PermissionSet.PermitOnly" /> no <see cref="T:System.Security.PermissionSet" /> criado antes de chamar <see cref="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)" /> no <see cref="T:System.Xml.XmlResolver" /> subjacente.</param>
    </member>
    <member name="P:System.Xml.XmlSecureResolver.Credentials">
      <summary>Define as credenciais usadas para autenticar solicitações da Web.</summary>
      <returns>As credenciais a serem usadas para autenticar solicitações da Web. O <see cref="T:System.Xml.XmlSecureResolver" /> define as credenciais fornecidas no subjacente <see cref="T:System.Xml.XmlResolver" />. Se essa propriedade não estiver definida, o valor assumirá o padrão de <see langword="null" />, isto é, o <see cref="T:System.Xml.XmlSecureResolver" /> não tem credenciais de usuário.</returns>
    </member>
    <member name="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)">
      <summary>Mapeia um URI para um objeto que contém o recurso real. Esse método define temporariamente o <see cref="T:System.Security.PermissionSet" /> criado no construtor chamando <see cref="M:System.Security.PermissionSet.PermitOnly" /> antes de chamar <see langword="GetEntity" /> no <see cref="T:System.Xml.XmlResolver" /> subjacente para abrir o recurso.</summary>
      <param name="absoluteUri">O URI que é retornado de <see cref="M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)" />.</param>
      <param name="role">Não usado no momento.</param>
      <param name="ofObjectToReturn">O tipo de objeto a ser retornado. A versão atual retorna somente objetos <see cref="T:System.IO.Stream" />.</param>
      <returns>O fluxo retornado ao chamar <see langword="GetEntity" /> no <see cref="T:System.Xml.XmlResolver" /> subjacente. Se um tipo diferente de <see cref="T:System.IO.Stream" /> for especificado, o método retornará <see langword="null" />.</returns>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="ofObjectToReturn" /> não é <see langword="null" /> nem um tipo <see cref="T:System.IO.Stream" />.</exception>
      <exception cref="T:System.UriFormatException">O URI especificado não é um URI absoluto.</exception>
      <exception cref="T:System.NullReferenceException">
        <paramref name="absoluteUri" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Exception">Há um erro de tempo de execução (por exemplo, uma conexão de servidor interrompida).</exception>
    </member>
    <member name="M:System.Xml.XmlSecureResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
      <summary>Mapeia de forma assíncrona um URI para um objeto que contém o recurso real.</summary>
      <param name="absoluteUri">O URI retornado de <see cref="M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)" />.</param>
      <param name="role">Não usado no momento.</param>
      <param name="ofObjectToReturn">O tipo de objeto a ser retornado. A versão atual retorna somente objetos <see cref="T:System.IO.Stream" />.</param>
      <returns>O fluxo retornado ao chamar <see langword="GetEntity" /> no <see cref="T:System.Xml.XmlResolver" /> subjacente. Se um tipo diferente de <see cref="T:System.IO.Stream" /> for especificado, o método retornará <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)">
      <summary>Resolve o URI absoluto dos URIs de base e relativo chamando <see langword="ResolveUri" /> no <see cref="T:System.Xml.XmlResolver" /> subjacente.</summary>
      <param name="baseUri">O URI base usado para resolver o URI relativo.</param>
      <param name="relativeUri">O URI a ser resolvido. O URI pode ser absoluto ou relativo. Se for absoluto, esse valor substituirá eficientemente o valor <paramref name="baseUri" />. Se for relativo, ele combinará com a <paramref name="baseUri" /> para tornar um URI absoluto.</param>
      <returns>O URI absoluto ou <see langword="null" /> se não for possível resolver o URI relativo (retornado chamando <see langword="ResolveUri" /> no <see cref="T:System.Xml.XmlResolver" /> subjacente).</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="relativeUri" /> é <see langword="null" />.</exception>
    </member>
    <member name="T:System.Xml.XmlSignificantWhitespace">
      <summary>Representa o espaço em branco entre a marcação em um nó de conteúdo misto ou espaço em branco em um escopo xml:space= 'preserve'. Isso também é chamado de espaço em branco significativo.</summary>
    </member>
    <member name="M:System.Xml.XmlSignificantWhitespace.#ctor(System.String,System.Xml.XmlDocument)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlSignificantWhitespace" />.</summary>
      <param name="strData">Os caracteres de espaço em branco do nó.</param>
      <param name="doc">O objeto <see cref="T:System.Xml.XmlDocument" />.</param>
    </member>
    <member name="M:System.Xml.XmlSignificantWhitespace.CloneNode(System.Boolean)">
      <summary>Cria uma duplicação deste nó.</summary>
      <param name="deep">
        <see langword="true" /> para recursivamente clonar a subárvore abaixo do nó especificado; <see langword="false" /> para clonar apenas o próprio nó. Para nós de espaço em branco significativos, o nó clonado sempre incluirá o valor dos dados, independentemente da configuração do parâmetro.</param>
      <returns>O nó clonado.</returns>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.LocalName">
      <summary>Obtém o nome local do nó.</summary>
      <returns>Para <see langword="XmlSignificantWhitespace" /> nós, essa propriedade retorna <see langword="#significant-whitespace" />.</returns>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.Name">
      <summary>Obtém o nome qualificado do nó.</summary>
      <returns>Para <see langword="XmlSignificantWhitespace" /> nós, essa propriedade retorna <see langword="#significant-whitespace" />.</returns>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.NodeType">
      <summary>Obtém o tipo do nó atual.</summary>
      <returns>Para <see langword="XmlSignificantWhitespace" /> nós, esse valor é XmlNodeType. SignificantWhitespace.</returns>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.ParentNode">
      <summary>Obtém o pai do nó atual.</summary>
      <returns>O <see cref="T:System.Xml.XmlNode" /> nó pai do nó atual.</returns>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.PreviousText">
      <summary>Obtém o nó de texto que precede imediatamente este nó.</summary>
      <returns>Retorna <see cref="T:System.Xml.XmlNode" />.</returns>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.Value">
      <summary>Obtém ou define o valor do nó.</summary>
      <returns>Os caracteres de espaço em branco encontrados no nó.</returns>
      <exception cref="T:System.ArgumentException">Como definir <see langword="Value" /> para caracteres de espaço em branco inválidos.</exception>
    </member>
    <member name="M:System.Xml.XmlSignificantWhitespace.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Salva todos os filhos do nó no <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w">O <see langword="XmlWriter" /> no qual você deseja salvar.</param>
    </member>
    <member name="M:System.Xml.XmlSignificantWhitespace.WriteTo(System.Xml.XmlWriter)">
      <summary>Salva o nó no <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w">O <see langword="XmlWriter" /> no qual você deseja salvar.</param>
    </member>
    <member name="T:System.Xml.XmlSpace">
      <summary>Especifica o escopo <see langword="xml:space" /> atual.</summary>
    </member>
    <member name="F:System.Xml.XmlSpace.Default">
      <summary>O escopo <see langword="xml:space" /> é igual a <see langword="default" />.</summary>
    </member>
    <member name="F:System.Xml.XmlSpace.None">
      <summary>Sem escopo <see langword="xml:space" />.</summary>
    </member>
    <member name="F:System.Xml.XmlSpace.Preserve">
      <summary>O escopo <see langword="xml:space" /> é igual a <see langword="preserve" />.</summary>
    </member>
    <member name="T:System.Xml.XmlText">
      <summary>Representa o conteúdo de texto de um elemento ou atributo.</summary>
    </member>
    <member name="M:System.Xml.XmlText.#ctor(System.String,System.Xml.XmlDocument)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlText" />.</summary>
      <param name="strData">O conteúdo do nó; consulte a propriedade <see cref="P:System.Xml.XmlText.Value" />.</param>
      <param name="doc">O documento XML pai.</param>
    </member>
    <member name="M:System.Xml.XmlText.CloneNode(System.Boolean)">
      <summary>Cria uma duplicação deste nó.</summary>
      <param name="deep">
        <see langword="true" /> para recursivamente clonar a subárvore abaixo do nó especificado; <see langword="false" /> para clonar apenas o próprio nó.</param>
      <returns>O nó clonado.</returns>
    </member>
    <member name="P:System.Xml.XmlText.LocalName">
      <summary>Obtém o nome local do nó.</summary>
      <returns>Para nós de texto, essa propriedade <see langword="#text" />retorna.</returns>
    </member>
    <member name="P:System.Xml.XmlText.Name">
      <summary>Obtém o nome qualificado do nó.</summary>
      <returns>Para nós de texto, essa propriedade <see langword="#text" />retorna.</returns>
    </member>
    <member name="P:System.Xml.XmlText.NodeType">
      <summary>Obtém o tipo do nó atual.</summary>
      <returns>Para nós de texto, esse valor é XmlNodeType. Text.</returns>
    </member>
    <member name="P:System.Xml.XmlText.ParentNode">
      <summary>Obtém o pai deste nó (para os nós que podem ter pais).</summary>
      <returns>O <see langword="XmlNode" /> que é o pai do nó atual. Se um nó acabou de ser criado e ainda não foi adicionado à árvore ou se ele foi removido da árvore, o pai será <see langword="null" />. Para todos os outros nós, o valor retornado depende do <see cref="P:System.Xml.XmlNode.NodeType" /> do nó. A tabela a seguir descreve os possíveis valores retornados para a propriedade <see langword="ParentNode" />.</returns>
    </member>
    <member name="P:System.Xml.XmlText.PreviousText">
      <summary>Obtém o nó de texto que precede imediatamente este nó.</summary>
      <returns>Retorna <see cref="T:System.Xml.XmlNode" />.</returns>
    </member>
    <member name="M:System.Xml.XmlText.SplitText(System.Int32)">
      <summary>Divide o nó em dois no deslocamento especificado, mantendo ambos na árvore como irmãos.</summary>
      <param name="offset">O deslocamento no qual dividir o nó.</param>
      <returns>O novo nó.</returns>
    </member>
    <member name="P:System.Xml.XmlText.Value">
      <summary>Obtém ou define o valor do nó.</summary>
      <returns>O conteúdo do nó de texto.</returns>
    </member>
    <member name="M:System.Xml.XmlText.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Salva todos os filhos do nó no <see cref="T:System.Xml.XmlWriter" /> especificado. Nós <see langword="XmlText" /> não têm filhos, por isso esse método não tem nenhum efeito.</summary>
      <param name="w">O <see langword="XmlWriter" /> no qual você deseja salvar.</param>
    </member>
    <member name="M:System.Xml.XmlText.WriteTo(System.Xml.XmlWriter)">
      <summary>Salva o nó no <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w">O <see langword="XmlWriter" /> no qual você deseja salvar.</param>
    </member>
    <member name="T:System.Xml.XmlTextReader">
      <summary>Representa um leitor que fornece acesso rápido não armazenado em cache e somente de encaminhamento aos dados XML.  
A partir do .NET Framework 2.0, recomendamos o uso da classe <see cref="T:System.Xml.XmlReader" />.</summary>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor">
      <summary>Inicializa uma nova instância do <see langword="XmlTextReader" />.</summary>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlTextReader" /> com o fluxo especificado.</summary>
      <param name="input">O fluxo que contém os dados XML a serem lidos.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNameTable)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlTextReader" /> com o fluxo especificado e <see cref="T:System.Xml.XmlNameTable" />.</summary>
      <param name="input">O fluxo que contém os dados XML a serem lidos.</param>
      <param name="nt">O <see langword="XmlNameTable" /> a ser usado.</param>
      <exception cref="T:System.NullReferenceException">O valor <paramref name="input" /> ou <paramref name="nt" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlTextReader" /> com o fluxo especificado, <see cref="T:System.Xml.XmlNodeType" /> e <see cref="T:System.Xml.XmlParserContext" />.</summary>
      <param name="xmlFragment">O fluxo que contém o fragmento XML a ser analisado.</param>
      <param name="fragType">O <see cref="T:System.Xml.XmlNodeType" /> do fragmento XML. Ele também determina o que o fragmento pode conter. (Consulte a tabela abaixo.)</param>
      <param name="context">O <see cref="T:System.Xml.XmlParserContext" /> no qual o <paramref name="xmlFragment" /> deve ser analisados. Isso inclui o <see cref="T:System.Xml.XmlNameTable" /> a ser usado, codificação, o escopo de namespace, o <c>xml:lang</c> atual e o escopo <c>xml:space</c>.</param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="fragType" /> não é um Elemento, Atributo ou Documento <see langword="XmlNodeType" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlFragment" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.TextReader)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlTextReader" /> com o <see cref="T:System.IO.TextReader" /> especificado.</summary>
      <param name="input">O <see langword="TextReader" /> que contém os dados XML a serem lidos.</param>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.TextReader,System.Xml.XmlNameTable)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlTextReader" /> com o <see cref="T:System.IO.TextReader" /> e <see cref="T:System.Xml.XmlNameTable" /> especificados.</summary>
      <param name="input">O <see langword="TextReader" /> que contém os dados XML a serem lidos.</param>
      <param name="nt">O <see langword="XmlNameTable" /> a ser usado.</param>
      <exception cref="T:System.NullReferenceException">O valor <paramref name="nt" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlTextReader" /> com o arquivo especificado.</summary>
      <param name="url">A URL do arquivo que contém os dados XML. O <see cref="P:System.Xml.XmlTextReader.BaseURI" /> é definido para esse valor.</param>
      <exception cref="T:System.IO.FileNotFoundException">Não foi possível localizar o arquivo especificado.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Parte do nome de arquivo ou diretório não pôde ser encontrada.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="url" /> é uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.Net.WebException">O nome de arquivo remoto não pode ser resolvido.  

ou -  

 Ocorreu um erro ao processar a solicitação.</exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="url" /> não é um URI válido.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.Stream)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlTextReader" /> com a URL e o fluxo especificados.</summary>
      <param name="url">A URL a ser usada para resolver recursos externos. O <see cref="P:System.Xml.XmlTextReader.BaseURI" /> é definido para esse valor.</param>
      <param name="input">O fluxo que contém os dados XML a serem lidos.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.Stream,System.Xml.XmlNameTable)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlTextReader" /> com a URL, o fluxo e <see cref="T:System.Xml.XmlNameTable" /> especificados.</summary>
      <param name="url">A URL a ser usada para resolver recursos externos. O <see cref="P:System.Xml.XmlTextReader.BaseURI" /> é definido para esse valor. Se <paramref name="url" /> é <see langword="null" />, <see langword="BaseURI" /> é definido como <see langword="String.Empty" />.</param>
      <param name="input">O fluxo que contém os dados XML a serem lidos.</param>
      <param name="nt">O <see langword="XmlNameTable" /> a ser usado.</param>
      <exception cref="T:System.NullReferenceException">O valor <paramref name="input" /> ou <paramref name="nt" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlTextReader" /> com a URL especificada e <see cref="T:System.IO.TextReader" />.</summary>
      <param name="url">A URL a ser usada para resolver recursos externos. O <see cref="P:System.Xml.XmlTextReader.BaseURI" /> é definido para esse valor.</param>
      <param name="input">O <see langword="TextReader" /> que contém os dados XML a serem lidos.</param>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader,System.Xml.XmlNameTable)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlTextReader" /> com a URL especificada, <see cref="T:System.IO.TextReader" /> e <see cref="T:System.Xml.XmlNameTable" />.</summary>
      <param name="url">A URL a ser usada para resolver recursos externos. O <see cref="P:System.Xml.XmlTextReader.BaseURI" /> é definido para esse valor. Se <paramref name="url" /> é <see langword="null" />, <see langword="BaseURI" /> é definido como <see langword="String.Empty" />.</param>
      <param name="input">O <see langword="TextReader" /> que contém os dados XML a serem lidos.</param>
      <param name="nt">O <see langword="XmlNameTable" /> a ser usado.</param>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="nt" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNameTable)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlTextReader" /> com o arquivo especificado e <see cref="T:System.Xml.XmlNameTable" />.</summary>
      <param name="url">A URL do arquivo que contém os dados XML a serem lidos.</param>
      <param name="nt">O <see langword="XmlNameTable" /> a ser usado.</param>
      <exception cref="T:System.NullReferenceException">O valor <paramref name="nt" /> é <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Não foi possível localizar o arquivo especificado.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Parte do nome de arquivo ou diretório não pôde ser encontrada.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="url" /> é uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.Net.WebException">O nome de arquivo remoto não pode ser resolvido.  

ou -  

 Ocorreu um erro ao processar a solicitação.</exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="url" /> não é um URI válido.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlTextReader" /> com a cadeia de caracteres especificada, <see cref="T:System.Xml.XmlNodeType" /> e <see cref="T:System.Xml.XmlParserContext" />.</summary>
      <param name="xmlFragment">A cadeia de caracteres que contém o fragmento XML a ser analisado.</param>
      <param name="fragType">O <see cref="T:System.Xml.XmlNodeType" /> do fragmento XML. Ele também determina o que a cadeia de caracteres de fragmento pode conter. (Consulte a tabela abaixo.)</param>
      <param name="context">O <see cref="T:System.Xml.XmlParserContext" /> no qual o <paramref name="xmlFragment" /> deve ser analisados. Isso inclui o <see cref="T:System.Xml.XmlNameTable" /> a ser usado, codificação, o escopo de namespace, o <c>xml:lang</c> atual e o escopo <c>xml:space</c>.</param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="fragType" /> não é um <see langword="Element" />, <see langword="Attribute" /> ou <see langword="Document" /><see langword="XmlNodeType" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlFragment" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.Xml.XmlNameTable)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlTextReader" /> com o <see cref="T:System.Xml.XmlNameTable" /> especificado.</summary>
      <param name="nt">O <see langword="XmlNameTable" /> a ser usado.</param>
    </member>
    <member name="P:System.Xml.XmlTextReader.AttributeCount">
      <summary>Obtém o número de atributos no nó atual.</summary>
      <returns>O número de atributos no nó atual.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.BaseURI">
      <summary>Obtém o URI base do nó atual.</summary>
      <returns>O URI de base do nó atual.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.CanReadBinaryContent">
      <summary>Obtém um valor que indica se o <see cref="T:System.Xml.XmlTextReader" /> implementa os métodos de leitura de conteúdo binário.</summary>
      <returns>
        <see langword="true" />Se os métodos de leitura de conteúdo binário forem implementados; caso <see langword="false" />contrário. A <see cref="T:System.Xml.XmlTextReader" /> classe sempre retorna <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.CanReadValueChunk">
      <summary>Obtém um valor que indica se o <see cref="T:System.Xml.XmlTextReader" /> implementa o método <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" />.</summary>
      <returns>
        <see langword="true" />Se o <see cref="T:System.Xml.XmlTextReader" /> implementar o <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" /> método; caso <see langword="false" />contrário,. A <see cref="T:System.Xml.XmlTextReader" /> classe sempre retorna <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.CanResolveEntity">
      <summary>Obtém um valor que indica se este leitor pode analisar e resolver entidades.</summary>
      <returns>
        <see langword="true" />Se o leitor puder analisar e resolver entidades; caso contrário <see langword="false" />,. A <see langword="XmlTextReader" /> classe sempre retorna <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.Close">
      <summary>Altera o <see cref="P:System.Xml.XmlReader.ReadState" /> para <see langword="Closed" />.</summary>
    </member>
    <member name="P:System.Xml.XmlTextReader.Depth">
      <summary>Obtém a profundidade do nó atual no documento XML.</summary>
      <returns>A profundidade do nó atual no documento XML.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.DtdProcessing">
      <summary>Obtém ou define a enumeração de <see cref="T:System.Xml.DtdProcessing" />.</summary>
      <returns>A enumeração <see cref="T:System.Xml.DtdProcessing" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.Encoding">
      <summary>Obtém a codificação do documento.</summary>
      <returns>O valor de codificação. Se não houver nenhum atributo de codificação e nenhuma marca de ordem de byte, o padrão será UTF-8.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.EntityHandling">
      <summary>Obtém ou define um valor que especifica como o leitor trata entidades.</summary>
      <returns>Um dos valores de <see cref="T:System.Xml.EntityHandling" />. Se nenhum <see langword="EntityHandling" /> for especificado, ele usará <see langword="EntityHandling.ExpandCharEntities" /> como padrão.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.EOF">
      <summary>Obtém um valor que indica se o leitor está posicionado no final do fluxo.</summary>
      <returns>
        <see langword="true" /> se o leitor estiver posicionado no final do fluxo; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.GetAttribute(System.Int32)">
      <summary>Obtém o valor do atributo com o índice especificado.</summary>
      <param name="i">O índice do atributo. O índice é baseado em zero. (O primeiro atributo tem índice 0.)</param>
      <returns>O valor do atributo especificado.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">O parâmetro <paramref name="i" /> é menor que 0 ou maior que ou igual a <see cref="P:System.Xml.XmlTextReader.AttributeCount" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.GetAttribute(System.String)">
      <summary>Obtém o valor do atributo com o nome especificado.</summary>
      <param name="name">O nome qualificado do atributo.</param>
      <returns>O valor do atributo especificado. Se o atributo não for encontrado, <see langword="null" /> será retornado.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.GetAttribute(System.String,System.String)">
      <summary>Obtém o valor do atributo com o nome do local e o URI de namespace especificados.</summary>
      <param name="localName">O nome local do atributo.</param>
      <param name="namespaceURI">O URI do namespace do atributo.</param>
      <returns>O valor do atributo especificado. Se o atributo não for encontrado, <see langword="null" /> será retornado. Esse método não move o leitor.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>Obtém uma coleção que contém todos os namespaces no escopo no momento.</summary>
      <param name="scope">Um valor <see cref="T:System.Xml.XmlNamespaceScope" /> que especifica o tipo de nós de namespace a serem retornados.</param>
      <returns>Um objeto <see cref="T:System.Collections.IDictionary" /> que contém todos os namespaces no escopo atuais. Se o leitor não estiver posicionado em um elemento, um dicionário vazio (sem namespace) será retornado.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.GetRemainder">
      <summary>Obtém o restante do XML no buffer.</summary>
      <returns>Um <see cref="T:System.IO.TextReader" /> que contém o resto do XML em buffer.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.HasLineInfo">
      <summary>Obtém um valor que indica se a classe pode retornar informações de linha.</summary>
      <returns>
        <see langword="true" /> se a classe puder retornar informações de linha; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.HasValue">
      <summary>Obtém um valor que indica se o nó atual pode ter um <see cref="P:System.Xml.XmlTextReader.Value" /> diferente de <see langword="String.Empty" />.</summary>
      <returns>
        <see langword="true" /> se o nó em que o leitor está posicionado no momento puder ter um <see langword="Value" />, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.IsDefault">
      <summary>Obtém um valor que indica se o nó atual é um atributo que foi gerado do valor padrão definido no DTD ou esquema.</summary>
      <returns>Essa propriedade sempre retorna <see langword="false" />. (<see cref="T:System.Xml.XmlTextReader" /> não expande atributos padrão.)</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.IsEmptyElement">
      <summary>Obtém um valor que indica se o nó atual é um elemento vazio (por exemplo, <c>&lt;MyElement/&gt;</c>).</summary>
      <returns>
        <see langword="true" />Se o nó atual for um elemento (<see cref="P:System.Xml.XmlTextReader.NodeType" /><see langword="XmlNodeType.Element" />Equals) que termina <c>/ &gt;</c>com; caso <see langword="false" />contrário,.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.LineNumber">
      <summary>Obtém o número de linha atual.</summary>
      <returns>O número de linha atual.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.LinePosition">
      <summary>Obtém a posição da linha atual.</summary>
      <returns>A posição da linha atual.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.LocalName">
      <summary>Obtém o nome local do nó atual.</summary>
      <returns>O nome do nó atual com o prefixo removido. Por exemplo, <see langword="LocalName" /> é <see langword="book" /> para o elemento <c>&lt;BK: Book&gt;</c>.  
Para tipos de nós que não têm um nome (como <see langword="Text" />, <see langword="Comment" /> e assim por diante), essa propriedade retornará <see langword="String.Empty" />.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.LookupNamespace(System.String)">
      <summary>Resolve um prefixo de namespace no escopo do elemento atual.</summary>
      <param name="prefix">O prefixo cujo URI de namespace você deseja resolver. Para corresponder ao namespace padrão, transmita uma cadeia de caracteres vazia. Essa cadeia de caracteres não precisa ser atomizada.</param>
      <returns>O URI de namespace para o qual o prefixo será mapeado ou <see langword="null" /> se nenhum prefixo correspondente for encontrado.</returns>
      <exception cref="T:System.ArgumentNullException">A propriedade <see cref="P:System.Xml.XmlTextReader.Namespaces" /> está definida como <see langword="true" /> e o valor <paramref name="prefix" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToAttribute(System.Int32)">
      <summary>Move para o atributo com o índice especificado.</summary>
      <param name="i">O índice do atributo.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">O parâmetro <paramref name="i" /> é menor que 0 ou maior que ou igual a <see cref="P:System.Xml.XmlReader.AttributeCount" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToAttribute(System.String)">
      <summary>Move para o atributo com o nome especificado.</summary>
      <param name="name">O nome qualificado do atributo.</param>
      <returns>
        <see langword="true" /> se o atributo for encontrado; caso contrário, <see langword="false" />. Se <see langword="false" />, a posição do leitor não será alterada.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToAttribute(System.String,System.String)">
      <summary>Move para o atributo com o nome local e o URI de namespace especificados.</summary>
      <param name="localName">O nome local do atributo.</param>
      <param name="namespaceURI">O URI do namespace do atributo.</param>
      <returns>
        <see langword="true" /> se o atributo for encontrado; caso contrário, <see langword="false" />. Se <see langword="false" />, a posição do leitor não será alterada.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToElement">
      <summary>Move para o elemento que contém o nó de atributo atual.</summary>
      <returns>
        <see langword="true" /> se o leitor estiver posicionado em um atributo (o leitor se move para o elemento que possui o atributo); <see langword="false" /> se o leitor não estiver posicionado em um atributo (a posição do leitor não é alterada).</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToFirstAttribute">
      <summary>Move para o primeiro atributo.</summary>
      <returns>
        <see langword="true" /> se um atributo existir (o leitor é movido para o primeiro atributo); caso contrário, <see langword="false" /> (a posição do leitor não é alterada).</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToNextAttribute">
      <summary>Move para o próximo atributo.</summary>
      <returns>
        <see langword="true" /> se houver um atributo seguinte; <see langword="false" /> se não houver mais nenhum atributo.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.Name">
      <summary>Obtém o nome qualificado do nó atual.</summary>
      <returns>O nome qualificado do nó atual. Por exemplo, <see langword="Name" /> é <see langword="bk:book" /> para o elemento <c>&lt;BK: Book&gt;</c>.  
O nome retornado depende do <see cref="P:System.Xml.XmlTextReader.NodeType" /> do nó. Os seguintes tipos de nó retornam os valores listados. Todos os outros tipos de nó retornam uma cadeia de caracteres vazia.  
  Tipo de nó 
  Nome 
 <see langword="Attribute" /> O nome do atributo.  

 <see langword="DocumentType" /> O nome do tipo de documento.  

 <see langword="Element" /> O nome da marcação.  

 <see langword="EntityReference" /> O nome da entidade referenciada.  

 <see langword="ProcessingInstruction" /> O destino da instrução de processamento.  

 <see langword="XmlDeclaration" /> A cadeia de caracteres literal <see langword="xml" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.Namespaces">
      <summary>Obtém ou define um valor que indica se deve-se oferecer suporte ao namespace.</summary>
      <returns>
        <see langword="true" /> para oferecer suporte ao namespace; caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</returns>
      <exception cref="T:System.InvalidOperationException">Ocorreu a configuração dessa propriedade após uma operação de leitura (<see cref="P:System.Xml.XmlTextReader.ReadState" /> não é <see langword="ReadState.Initial" />).</exception>
    </member>
    <member name="P:System.Xml.XmlTextReader.NamespaceURI">
      <summary>Obtém o URI de namespace (conforme definido na especificação de Namespace do W3C) do nó no qual o leitor está posicionado.</summary>
      <returns>O URI do namespace do nó atual; caso contrário, uma cadeia de caracteres vazia.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.NameTable">
      <summary>Obtém o <see cref="T:System.Xml.XmlNameTable" /> associado à essa implementação.</summary>
      <returns>O <see langword="XmlNameTable" /> que permite obter a versão atomizada de uma cadeia de caracteres no nó.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.NodeType">
      <summary>Obtém o tipo do nó atual.</summary>
      <returns>Um dos valores <see cref="T:System.Xml.XmlNodeType" /> que representa o tipo do nó atual.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.Normalization">
      <summary>Obtém ou define um valor que indica se você deseja normalizar o espaço em branco e os valores de atributos.</summary>
      <returns>
        <see langword="true" /> para normalizar; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Definir essa propriedade quando o leitor é fechado (<see cref="P:System.Xml.XmlTextReader.ReadState" /> é <see langword="ReadState.Closed" />).</exception>
    </member>
    <member name="P:System.Xml.XmlTextReader.Prefix">
      <summary>Obtém o prefixo de namespace associado ao nó atual.</summary>
      <returns>O prefixo de namespace associado com o nó atual.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.ProhibitDtd">
      <summary>Obtém ou define um valor que indica se o processamento do DTD deve ser permitido. Esta propriedade está obsoleta. Use <see cref="P:System.Xml.XmlTextReader.DtdProcessing" /> em seu lugar.</summary>
      <returns>
        <see langword="true" />para impedir o processamento de DTD; caso <see langword="false" />contrário. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.QuoteChar">
      <summary>Obtém o caractere de aspas usado para circunscrever o valor de um nó de atributo.</summary>
      <returns>O caractere de aspas ("ou") usado para incluir o valor de um nó de atributo.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.Read">
      <summary>Lê o próximo nó do fluxo.</summary>
      <returns>
        <see langword="true" /> se o próximo nó for lido com êxito; <see langword="false" /> se não houver mais nenhum nó para ler.</returns>
      <exception cref="T:System.Xml.XmlException">Erro ao analisar o XML.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadAttributeValue">
      <summary>Analisa o valor do atributo em um ou mais nós <see langword="Text" />, <see langword="EntityReference" />ou <see langword="EndEntity" /> .</summary>
      <returns>
        <see langword="true" /> se houver nós para retornar.  
 <see langword="false" /> se o leitor não estiver posicionado em um nó de atributo quando a chamada inicial for feita ou se todos os valores de atributo tiverem sido lidos.  
Um atributo vazio, como <c>misc=""</c>, retorna <see langword="true" /> com um único nó com um valor de <see langword="String.Empty" />.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Decodifica a Base64 e retorna os bytes binários decodificados.</summary>
      <param name="array">A matriz de caracteres que serve como o buffer no qual os conteúdos de texto são gravados.</param>
      <param name="offset">O índice de base zero na matriz que especifica onde o método pode começar a gravar no buffer.</param>
      <param name="len">O número de bytes a serem gravados no buffer.</param>
      <returns>O número de bytes gravados no buffer.</returns>
      <exception cref="T:System.Xml.XmlException">A sequência Base64 não é válida.</exception>
      <exception cref="T:System.ArgumentNullException">O valor de <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> &lt; 0 ou <paramref name="len" /> &lt; 0 ou <paramref name="len" /> &gt; <paramref name="array" />.Length- <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Decodifica <see langword="BinHex" /> e retorna os bytes binários decodificados.</summary>
      <param name="array">A matriz de bytes que serve como o buffer no qual os bytes binários decodificados são gravados.</param>
      <param name="offset">O índice de base zero na matriz que especifica onde o método pode começar a gravar no buffer.</param>
      <param name="len">O número de bytes a serem gravados no buffer.</param>
      <returns>O número de bytes gravados no buffer.</returns>
      <exception cref="T:System.Xml.XmlException">A sequência <see langword="BinHex" /> não é válida.</exception>
      <exception cref="T:System.ArgumentNullException">O valor de <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> &lt; 0 ou <paramref name="len" /> &lt; 0 ou <paramref name="len" /> &gt; <paramref name="array" />.Length- <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadChars(System.Char[],System.Int32,System.Int32)">
      <summary>Lê o conteúdo de texto de um elemento em um buffer de caracteres. Esse método é projetado para ler grandes fluxos de texto inserido chamando-o sucessivamente.</summary>
      <param name="buffer">A matriz de caracteres que serve como o buffer no qual os conteúdos de texto são gravados.</param>
      <param name="index">A posição em <paramref name="buffer" /> no qual o método pode iniciar a gravação do conteúdo do texto.</param>
      <param name="count">O número de caracteres a serem gravados em <paramref name="buffer" />.</param>
      <returns>Número de caracteres a serem lidos. Isso poderá ser <see langword="0" /> se o leitor não estiver posicionado em um elemento ou se não houver mais nenhum conteúdo de texto a ser retornado no contexto atual.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="count" /> é maior que o espaço especificado no <paramref name="buffer" /> (tamanho do buffer – <paramref name="index" />).</exception>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />
        <see langword="&lt; 0" /> ou <paramref name="count" /><see langword="&lt; 0" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Lê o conteúdo e retorna os bytes binários decodificados <see langword="Base64" />.</summary>
      <param name="buffer">O buffer para o qual o texto resultante será copiado. Este valor pode não ser <see langword="null" />.</param>
      <param name="index">O deslocamento do buffer no qual o resultado começará a ser copiado.</param>
      <param name="count">O número máximo de bytes a serem copiados para o buffer. O número real de bytes copiados é retornado deste método.</param>
      <returns>O número de bytes gravados no buffer.</returns>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Não há suporte para <see cref="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /> no nó atual.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O índice de buffer ou de índice + contagem é maior que o tamanho do buffer alocado.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Lê o conteúdo e retorna os bytes binários decodificados <see langword="BinHex" />.</summary>
      <param name="buffer">O buffer para o qual o texto resultante será copiado. Este valor pode não ser <see langword="null" />.</param>
      <param name="index">O deslocamento do buffer no qual o resultado começará a ser copiado.</param>
      <param name="count">O número máximo de bytes a serem copiados para o buffer. O número real de bytes copiados é retornado deste método.</param>
      <returns>O número de bytes gravados no buffer.</returns>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Não há suporte para <see cref="M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> no nó atual.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O índice de buffer ou de índice + contagem é maior que o tamanho do buffer alocado.</exception>
      <exception cref="T:System.NotSupportedException">A implementação <see cref="T:System.Xml.XmlTextReader" /> não dá suporte a esse método.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Lê o elemento e decodifica o conteúdo de Base64.</summary>
      <param name="buffer">O buffer para o qual o texto resultante será copiado. Este valor pode não ser <see langword="null" />.</param>
      <param name="index">O deslocamento do buffer no qual o resultado começará a ser copiado.</param>
      <param name="count">O número máximo de bytes a serem copiados para o buffer. O número real de bytes copiados é retornado deste método.</param>
      <returns>O número de bytes gravados no buffer.</returns>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">O nó atual não é um nó de elemento.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O índice de buffer ou de índice + contagem é maior que o tamanho do buffer alocado.</exception>
      <exception cref="T:System.NotSupportedException">A implementação <see cref="T:System.Xml.XmlTextReader" /> não dá suporte a esse método.</exception>
      <exception cref="T:System.Xml.XmlException">O elemento contém conteúdo misto.</exception>
      <exception cref="T:System.FormatException">Não é possível converter conteúdo no tipo solicitado.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Lê o elemento e decodifica o conteúdo de <see langword="BinHex" />.</summary>
      <param name="buffer">O buffer para o qual o texto resultante será copiado. Este valor pode não ser <see langword="null" />.</param>
      <param name="index">O deslocamento do buffer no qual o resultado começará a ser copiado.</param>
      <param name="count">O número máximo de bytes a serem copiados para o buffer. O número real de bytes copiados é retornado deste método.</param>
      <returns>O número de bytes gravados no buffer.</returns>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">O nó atual não é um nó de elemento.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O índice de buffer ou de índice + contagem é maior que o tamanho do buffer alocado.</exception>
      <exception cref="T:System.NotSupportedException">A implementação <see cref="T:System.Xml.XmlReader" /> não dá suporte a esse método.</exception>
      <exception cref="T:System.Xml.XmlException">O elemento contém conteúdo misto.</exception>
      <exception cref="T:System.FormatException">Não é possível converter conteúdo no tipo solicitado.</exception>
    </member>
    <member name="P:System.Xml.XmlTextReader.ReadState">
      <summary>Obtém o estado do leitor.</summary>
      <returns>Um dos valores de <see cref="T:System.Xml.ReadState" />.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadString">
      <summary>Lê o conteúdo de um elemento ou um nó de texto como uma cadeia de caracteres.</summary>
      <returns>O conteúdo do nó de elemento ou de texto. Essa poderá ser uma cadeia de caracteres vazia se o leitor estiver posicionado em algo diferente de um elemento ou nó de texto ou, se não houver nenhum outro conteúdo de texto para retornar no contexto atual.  
 <see langword="Note:" /> O nó de texto pode ser um elemento ou um nó de texto do atributo.</returns>
      <exception cref="T:System.Xml.XmlException">Erro ao analisar o XML.</exception>
      <exception cref="T:System.InvalidOperationException">Ocorreu uma tentativa de uma operação inválida.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ResetState">
      <summary>Redefine o estado do leitor para ReadState.Initial.</summary>
      <exception cref="T:System.InvalidOperationException">Chamando <see langword="ResetState" /> se o leitor foi criado usando um <see cref="T:System.Xml.XmlParserContext" />.</exception>
      <exception cref="T:System.Xml.XmlException">Documentos em um mesmo fluxo não compartilham a mesma codificação.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ResolveEntity">
      <summary>Resolve a referência de entidade para nós <see langword="EntityReference" />.</summary>
    </member>
    <member name="M:System.Xml.XmlTextReader.Skip">
      <summary>Ignora os filhos do nó atual.</summary>
    </member>
    <member name="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />.</summary>
      <param name="scope">Um valor <see cref="T:System.Xml.XmlNamespaceScope" /> que especifica o tipo de nós de namespace a serem retornados.</param>
      <returns>Um <see cref="T:System.Collections.IDictionary" /> que contém os namespaces no escopo atuais.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" />.</summary>
      <param name="prefix">O prefixo cujo URI de namespace você deseja localizar.</param>
      <returns>O URI do namespace mapeado para o prefixo; <see langword="null" /> se o prefixo não estiver mapeado para um URI de namespace.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" />.</summary>
      <param name="namespaceName">O URI do namespace cujo prefixo você deseja localizar.</param>
      <returns>O prefixo que é mapeado para o URI do namespace; <see langword="null" /> se o URI de namespace não estiver mapeado para um prefixo.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.Value">
      <summary>Obtém o valor de texto do nó atual.</summary>
      <returns>O valor retornado depende do <see cref="P:System.Xml.XmlTextReader.NodeType" /> do nó. A tabela a seguir lista os tipos de nós que têm um valor a ser retornado. Todos os outros tipos de nó retornam <see langword="String.Empty" />.  
  Tipo de nó 
  Valor 
 <see langword="Attribute" /> O valor do atributo.  

 <see langword="CDATA" /> O conteúdo da seção CDATA.  

 <see langword="Comment" /> O conteúdo do comentário.  

 <see langword="DocumentType" /> O subconjunto interno.  

 <see langword="ProcessingInstruction" /> Todo o conteúdo, exceto o destino.  

 <see langword="SignificantWhitespace" /> O espaço em branco dentro de um escopo <see langword="xml:space" />= 'preserve'.  

 <see langword="Text" /> O conteúdo do nó de texto.  

 <see langword="Whitespace" /> Espaço em branco entre a marcação.  

 <see langword="XmlDeclaration" /> O conteúdo da declaração.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.WhitespaceHandling">
      <summary>Obtém ou define um valor que especifica como o espaço em branco é tratado.</summary>
      <returns>Um dos valores de <see cref="T:System.Xml.WhitespaceHandling" />. O padrão é <see langword="WhitespaceHandling.All" /> (retorna os nós <see langword="Whitespace" /> e <see langword="SignificantWhitespace" /> ).</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Valor inválido especificado.</exception>
      <exception cref="T:System.InvalidOperationException">Definir essa propriedade quando o leitor é fechado (<see cref="P:System.Xml.XmlTextReader.ReadState" /> é <see langword="ReadState.Closed" />).</exception>
    </member>
    <member name="P:System.Xml.XmlTextReader.XmlLang">
      <summary>Obtém o escopo de <see langword="xml:lang" /> atual.</summary>
      <returns>O escopo <see langword="xml:lang" /> atual.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.XmlResolver">
      <summary>Define o <see cref="T:System.Xml.XmlResolver" /> usado para resolver referências de DTD.</summary>
      <returns>O <see langword="XmlResolver" /> a ser usado. Se definido como <see langword="null" />, os recursos externos não serão resolvidos.  
Na versão 1.1 do .NET Framework, o chamador deve ser totalmente confiável para especificar um <see langword="XmlResolver" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.XmlSpace">
      <summary>Obtém o escopo de <see langword="xml:space" /> atual.</summary>
      <returns>Um dos valores de <see cref="T:System.Xml.XmlSpace" />. Se não <see langword="xml:space" /> existir nenhum escopo, essa propriedade será padronizada como. <see langword="XmlSpace.None" /></returns>
    </member>
    <member name="T:System.Xml.XmlTextWriter">
      <summary>Representa um gravador que fornece um modo rápido não armazenado em cache e somente de encaminhamento para gerar fluxos ou arquivos que contém dados XML em conformidade com o W3C Extensible Markup Language (XML) 1.0 e os Namespaces nas recomendações de XML.  
A partir do .NET Framework 2.0, recomendamos o uso da classe <see cref="T:System.Xml.XmlWriter" />.</summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
      <summary>Cria uma instância da classe <see langword="XmlTextWriter" /> usando o fluxo e a codificação especificados.</summary>
      <param name="w">O fluxo no qual você deseja fazer a gravação.</param>
      <param name="encoding">A codificação a ser gerada. Se a codificação for <see langword="null" />, ele gravará o fluxo como UTF-8 e omitirá o atributo de codificação do <see langword="ProcessingInstruction" />.</param>
      <exception cref="T:System.ArgumentException">Não há suporte para a codificação ou não é possível gravar no fluxo.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="w" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.#ctor(System.IO.TextWriter)">
      <summary>Cria uma instância da classe <see langword="XmlTextWriter" /> usando o <see cref="T:System.IO.TextWriter" /> especificado.</summary>
      <param name="w">O <see langword="TextWriter" /> no qual ocorrerá a gravação. Supõe-se que <see langword="TextWriter" /> já esteja definido como a codificação correta.</param>
    </member>
    <member name="M:System.Xml.XmlTextWriter.#ctor(System.String,System.Text.Encoding)">
      <summary>Cria uma instância da classe <see cref="T:System.Xml.XmlTextWriter" /> usando o arquivo especificado.</summary>
      <param name="filename">O nome do arquivo para gravação. Se o arquivo existir, ele será truncado e substituído pelo novo conteúdo.</param>
      <param name="encoding">A codificação a ser gerada. Se a codificação for <see langword="null" />, ele gravará o arquivo como UTF-8 e omitirá o atributo de codificação do <see langword="ProcessingInstruction" />.</param>
      <exception cref="T:System.ArgumentException">Não há suporte para a codificação; o nome do arquivo está vazio, contém somente espaços em branco ou contém um ou mais caracteres inválidos.</exception>
      <exception cref="T:System.UnauthorizedAccessException">O acesso foi negado.</exception>
      <exception cref="T:System.ArgumentNullException">O nome do arquivo é <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">O diretório de gravação não foi encontrado.</exception>
      <exception cref="T:System.IO.IOException">O nome do arquivo inclui uma sintaxe incorreta ou inválida para o nome do arquivo, o nome do diretório ou a sintaxe do rótulo do volume.</exception>
      <exception cref="T:System.Security.SecurityException">O chamador não tem a permissão necessária.</exception>
    </member>
    <member name="P:System.Xml.XmlTextWriter.BaseStream">
      <summary>Obtém o objeto do fluxo subjacente.</summary>
      <returns>O fluxo ao qual o <see langword="XmlTextWriter" /> está gravando ou <see langword="null" /> se o <see langword="XmlTextWriter" /> foi criado usando um <see cref="T:System.IO.TextWriter" /> que não herda da classe <see cref="T:System.IO.StreamWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlTextWriter.Close">
      <summary>Fecha este fluxo e o fluxo subjacente.</summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.Flush">
      <summary>Libera o que está no buffer para os fluxos subjacentes e também libera o fluxo subjacente.</summary>
    </member>
    <member name="P:System.Xml.XmlTextWriter.Formatting">
      <summary>Indica como a saída é formatada.</summary>
      <returns>Um dos valores de <see cref="T:System.Xml.Formatting" />. O padrão é <see langword="Formatting.None" /> (sem formatação especial).</returns>
    </member>
    <member name="P:System.Xml.XmlTextWriter.Indentation">
      <summary>Obtém ou define quantos IndentChars gravar para cada nível da hierarquia quando <see cref="P:System.Xml.XmlTextWriter.Formatting" /> está definido como <see langword="Formatting.Indented" />.</summary>
      <returns>Número de <see langword="IndentChars" /> para cada nível. O padrão é 2.</returns>
      <exception cref="T:System.ArgumentException">Definir essa propriedade para um valor negativo.</exception>
    </member>
    <member name="P:System.Xml.XmlTextWriter.IndentChar">
      <summary>Obtém ou define qual caractere deve ser usado para recuar quando <see cref="P:System.Xml.XmlTextWriter.Formatting" /> é definido como <see langword="Formatting.Indented" />.</summary>
      <returns>O caractere a ser usado para o recuo. O padrão é espaço.  
   
 O <see langword="XmlTextWriter" /> permite definir essa propriedade com qualquer caractere. Para garantir um XML válido, especifique um caractere de espaço em branco válido: 0x9, 0x10, 0x13 ou 0x20.</returns>
    </member>
    <member name="M:System.Xml.XmlTextWriter.LookupPrefix(System.String)">
      <summary>Retorna o prefixo mais próximo definido no escopo atual do namespace para o URI de namespace.</summary>
      <param name="ns">URI do namespace cujo prefixo que você deseja localizar.</param>
      <returns>O prefixo correspondente. Ou <see langword="null" /> se nenhum URI de namespace correspondente for encontrado no escopo atual.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="ns" /> é <see langword="null" /> ou <see langword="String.Empty" />.</exception>
    </member>
    <member name="P:System.Xml.XmlTextWriter.Namespaces">
      <summary>Obtém ou define um valor que indica se deve-se oferecer suporte ao namespace.</summary>
      <returns>
        <see langword="true" /> para oferecer suporte a namespaces. Caso contrário, <see langword="false" />.  
O padrão é <see langword="true" />.</returns>
      <exception cref="T:System.InvalidOperationException">Você só pode alterar essa propriedade quando estiver no estado <see langword="WriteState.Start" />.</exception>
    </member>
    <member name="P:System.Xml.XmlTextWriter.QuoteChar">
      <summary>Obtém ou define o caractere a ser usado para colocar valores de atributos entre aspas.</summary>
      <returns>O caractere a ser usado para colocar valores de atributos entre aspas. Deve ser uma aspa simples (&amp;#39;) ou aspas duplas (&amp;#34;). O padrão são aspas duplas.</returns>
      <exception cref="T:System.ArgumentException">Configurar essa propriedade como algo diferente de aspas simples ou aspas duplas.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Codifica os bytes binários especificados como base64 e grava o texto resultante.</summary>
      <param name="buffer">Matriz de bytes a ser codificada.</param>
      <param name="index">A posição dentro do buffer que indica o início dos bytes a serem gravados.</param>
      <param name="count">O número de bytes a serem gravados.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O tamanho do buffer menos <paramref name="index" /> é menor que <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ou <paramref name="count" /> é menor que zero.</exception>
      <exception cref="T:System.InvalidOperationException">O <see cref="P:System.Xml.XmlTextWriter.WriteState" /> é <see langword="Closed" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Codifica os bytes binários especificados como binhex e grava o texto resultante.</summary>
      <param name="buffer">Matriz de bytes a ser codificada.</param>
      <param name="index">A posição no buffer que indica o início dos bytes a serem gravados.</param>
      <param name="count">O número de bytes a serem gravados.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O tamanho do buffer menos <paramref name="index" /> é menor que <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ou <paramref name="count" /> é menor que zero.</exception>
      <exception cref="T:System.InvalidOperationException">O <see cref="P:System.Xml.XmlTextWriter.WriteState" /> está Fechado.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteCData(System.String)">
      <summary>Grava um bloco &lt;![CDATA[...]]&gt; que contém o texto especificado.</summary>
      <param name="text">O texto a ser colocado no bloco CDATA.</param>
      <exception cref="T:System.ArgumentException">O texto poderia resultar em um documento XML malformado.</exception>
      <exception cref="T:System.InvalidOperationException">O <see cref="P:System.Xml.XmlTextWriter.WriteState" /> é <see langword="Closed" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteCharEntity(System.Char)">
      <summary>Força a geração de uma entidade de caracteres para o valor especificado de caracteres Unicode.</summary>
      <param name="ch">O caractere Unicode para a qual gerar uma entidade de caracteres.</param>
      <exception cref="T:System.ArgumentException">O caractere está dentro do intervalo de caracteres do par alternativo, <see langword="0xd800" /> - <see langword="0xdfff" />; ou então, o texto pode resultar em um documento XML malformado.</exception>
      <exception cref="T:System.InvalidOperationException">O <see cref="P:System.Xml.XmlTextWriter.WriteState" /> é <see langword="Closed" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
      <summary>Grava texto um buffer por vez.</summary>
      <param name="buffer">Uma matriz de caracteres que contém o texto a ser gravado.</param>
      <param name="index">A posição do buffer que indica o início do texto a ser gravado.</param>
      <param name="count">O número de caracteres a serem gravados.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ou <paramref name="count" /> é menor que zero.  

ou - 
O tamanho do buffer menos <paramref name="index" /> é menor que <paramref name="count" />; a chamada resulta em caracteres do par alternativo sendo divididos ou na gravação de um par alternativo inválido.</exception>
      <exception cref="T:System.InvalidOperationException">O <see cref="P:System.Xml.XmlTextWriter.WriteState" /> está Fechado.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteComment(System.String)">
      <summary>Grava um comentário &lt;!--...--&gt; que contém o texto especificado.</summary>
      <param name="text">Texto a colocar dentro do comentário.</param>
      <exception cref="T:System.ArgumentException">O texto pode resultar em um documento XML malformado</exception>
      <exception cref="T:System.InvalidOperationException">O <see cref="P:System.Xml.XmlTextWriter.WriteState" /> é <see langword="Closed" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteDocType(System.String,System.String,System.String,System.String)">
      <summary>Grava a declaração DOCTYPE com o nome especificado e os atributos opcionais.</summary>
      <param name="name">O nome do DOCTYPE. Isso deve ser não vazio.</param>
      <param name="pubid">Se for não nulo, ele também gravará PUBLIC "pubid" "sysid", em que <paramref name="pubid" /> e <paramref name="sysid" /> são substituídos pelo valor dos argumentos fornecidos.</param>
      <param name="sysid">Se <paramref name="pubid" /> for nulo e <paramref name="sysid" /> for não nulo, ele gravará SYSTEM "sysid", em que <paramref name="sysid" /> é substituído pelo valor desse argumento.</param>
      <param name="subset">Se não for nulo, ele gravará [subset], em que subset é substituído pelo valor desse argumento.</param>
      <exception cref="T:System.InvalidOperationException">Esse método foi chamado fora do prólogo (após o elemento raiz).</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> é <see langword="null" /> ou <see langword="String.Empty" />  

ou - 
o valor de <paramref name="name" /> resultaria em um XML inválido.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteEndAttribute">
      <summary>Fecha a chamada <see cref="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" /> anterior.</summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteEndDocument">
      <summary>Fecha os possíveis elementos ou atributos abertos e coloca o gravador de volta no estado Inicial.</summary>
      <exception cref="T:System.ArgumentException">O documento XML é inválido.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteEndElement">
      <summary>Fecha um elemento e aciona o escopo de namespace correspondente.</summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteEntityRef(System.String)">
      <summary>Grava uma referência de entidade como <see langword="&amp;name;" />.</summary>
      <param name="name">Nome da referência de entidade.</param>
      <exception cref="T:System.ArgumentException">O texto pode resultar em um documento XML malformado ou <paramref name="name" /> é <see langword="null" /> ou <see langword="String.Empty" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteFullEndElement">
      <summary>Fecha um elemento e aciona o escopo de namespace correspondente.</summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteName(System.String)">
      <summary>Grava o nome especificado, garantindo que ele seja um nome válido de acordo com a recomendação do XML 1.0 do W3C.</summary>
      <param name="name">Nome para gravação.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> não é um nome XML válido; ou <paramref name="name" /> é <see langword="null" /> ou <see langword="String.Empty" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteNmToken(System.String)">
      <summary>Grava o nome especificado, garantindo que ele seja um <see langword="NmToken" /> válido de acordo com a recomendação do XML 1.0 do W3C.</summary>
      <param name="name">Nome para gravação.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> não é um <see langword="NmToken" /> válido; ou <paramref name="name" /> é <see langword="null" /> ou <see langword="String.Empty" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteProcessingInstruction(System.String,System.String)">
      <summary>Grava uma instrução de processamento com um espaço entre o nome e o texto da seguinte maneira: &lt;?nome texto?&gt;.</summary>
      <param name="name">Nome da instrução de processamento.</param>
      <param name="text">Texto a ser incluído na instrução de processamento.</param>
      <exception cref="T:System.ArgumentException">O texto poderia resultar em um documento XML malformado.  
 <paramref name="name" /> é <see langword="null" /> ou <see langword="String.Empty" />.  
Esse método está sendo usado para criar uma declaração XML após uma chamada a <see cref="M:System.Xml.XmlTextWriter.WriteStartDocument" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteQualifiedName(System.String,System.String)">
      <summary>Grava o nome qualificado do namespace. Este método pesquisa o prefixo que está no escopo para o namespace fornecido.</summary>
      <param name="localName">O nome local a ser gravado.</param>
      <param name="ns">O URI do namespace para associar ao nome.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="localName" /> é <see langword="null" /> ou <see langword="String.Empty" />.  
 <paramref name="localName" /> não é um nome válido de acordo com a especificação de Namespaces do W3C.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
      <summary>Grava a marcação bruta manualmente de um buffer de caracteres.</summary>
      <param name="buffer">Uma matriz de caracteres que contém o texto a ser gravado.</param>
      <param name="index">A posição no buffer que indica o início do texto a ser escrito.</param>
      <param name="count">O número de caracteres a serem gravados.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ou <paramref name="count" /> é menor que zero.  

ou - 
O tamanho do buffer menos <paramref name="index" /> é menor que <paramref name="count" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteRaw(System.String)">
      <summary>Grava a marcação bruta manualmente de uma cadeia de caracteres.</summary>
      <param name="data">A cadeia de caracteres que contém o texto a ser gravado.</param>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)">
      <summary>Grava o início de um atributo.</summary>
      <param name="prefix">O prefixo <see langword="Namespace" /> do atributo.</param>
      <param name="localName">
        <see langword="LocalName" /> do atributo.</param>
      <param name="ns">
        <see langword="NamespaceURI" /> do atributo</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="localName" /> é <see langword="null" /> ou <see langword="String.Empty" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteStartDocument">
      <summary>Grava a declaração XML com a versão "1.0".</summary>
      <exception cref="T:System.InvalidOperationException">Este não é o primeiro método de gravação chamado após o construtor.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteStartDocument(System.Boolean)">
      <summary>Grava a declaração XML com a versão “1.0” e o atributo autônomo.</summary>
      <param name="standalone">Se <see langword="true" />, grava "standalone=yes"; se <see langword="false" />, ele grava "standalone=no".</param>
      <exception cref="T:System.InvalidOperationException">Este não é o primeiro método de gravação chamado após o construtor.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteStartElement(System.String,System.String,System.String)">
      <summary>Grava a marca de início especificada e a associa ao prefixo e ao namespace determinados.</summary>
      <param name="prefix">O prefixo do namespace do elemento.</param>
      <param name="localName">O nome local do elemento.</param>
      <param name="ns">O URI do namespace a ser associado ao elemento. Se este namespace já estiver no escopo e tiver um prefixo associado, o gravador também gravará automaticamente esse prefixo.</param>
      <exception cref="T:System.InvalidOperationException">O gravador está fechado.</exception>
    </member>
    <member name="P:System.Xml.XmlTextWriter.WriteState">
      <summary>Obtém o estado do gravador.</summary>
      <returns>Um dos valores de <see cref="T:System.Xml.WriteState" />.</returns>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteString(System.String)">
      <summary>Grava o conteúdo de texto especificado.</summary>
      <param name="text">O texto a ser gravado.</param>
      <exception cref="T:System.ArgumentException">A cadeia de caracteres contém um par alternativo inválido.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
      <summary>Gera e grava a entidade de caracteres alternativos para o par de caracteres alternativos.</summary>
      <param name="lowChar">A alternativa baixa. Deve ser um valor entre <see langword="0xDC00" /> e <see langword="0xDFFF" />.</param>
      <param name="highChar">A alternativa alta. Deve ser um valor entre <see langword="0xD800" /> e <see langword="0xDBFF" />.</param>
      <exception cref="T:System.Exception">Um par de caracteres alternativos inválido foi passado.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteWhitespace(System.String)">
      <summary>Grava o espaço em branco determinado.</summary>
      <param name="ws">A cadeia de caracteres de espaço em branco.</param>
      <exception cref="T:System.ArgumentException">A cadeia de caracteres contém caracteres que não sejam em branco.</exception>
    </member>
    <member name="P:System.Xml.XmlTextWriter.XmlLang">
      <summary>Obtém o escopo de <see langword="xml:lang" /> atual.</summary>
      <returns>O <see langword="xml:lang" /> ou <see langword="null" /> atual se não houver nenhum <see langword="xml:lang" /> no escopo atual.</returns>
    </member>
    <member name="P:System.Xml.XmlTextWriter.XmlSpace">
      <summary>Obtém um <see cref="T:System.Xml.XmlSpace" /> que representa o escopo de <see langword="xml:space" /> atual.</summary>
      <returns>Um <see langword="XmlSpace" /> que representa o escopo de <see langword="xml:space" /> atual.  
  Valor 
  Significado 
  Nenhum 
  Esse será o padrão se não existir nenhum escopo de <see langword="xml:space" /> .  

  Padrão 
  O escopo atual é <see langword="xml:space" />="default".  

  Preservar 
  O escopo atual é <see langword="xml:space" />="preserve".</returns>
    </member>
    <member name="T:System.Xml.XmlTokenizedType">
      <summary>Representa o tipo XML para a cadeia de caracteres. Isso permite que a cadeia de caracteres seja lida como um tipo XML específico, por exemplo, um tipo de seção CDATA.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.CDATA">
      <summary>Tipo CDATA.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.ENTITIES">
      <summary>Tipo ENTIDADES.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.ENTITY">
      <summary>Tipo ENTIDADE.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.ENUMERATION">
      <summary>Tipo ENUMERAÇÃO.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.ID">
      <summary>Tipo ID.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.IDREF">
      <summary>Tipo IDREF.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.IDREFS">
      <summary>Tipo IDREFS.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.NCName">
      <summary>Tipo NCName.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.NMTOKEN">
      <summary>Tipo NMTOKEN.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.NMTOKENS">
      <summary>Tipo NMTOKENS.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.None">
      <summary>Nenhum tipo.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.NOTATION">
      <summary>Tipo NOTAÇÃO.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.QName">
      <summary>Tipo QName.</summary>
    </member>
    <member name="T:System.Xml.XmlUrlResolver">
      <summary>Resolve recursos XML externos nomeados por um URI (Uniform Resource Identifier).</summary>
    </member>
    <member name="M:System.Xml.XmlUrlResolver.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlUrlResolver" />.</summary>
    </member>
    <member name="P:System.Xml.XmlUrlResolver.CachePolicy">
      <summary>Obtém ou define a política de cache para o objeto <see cref="T:System.Net.WebRequest" /> subjacente.</summary>
      <returns>A política de cache para a solicitação da Web subjacente.</returns>
    </member>
    <member name="P:System.Xml.XmlUrlResolver.Credentials">
      <summary>Define as credenciais usadas para autenticar solicitações da Web.</summary>
      <returns>As credenciais a serem usadas para autenticar solicitações da Web. Se essa propriedade não estiver definida, o valor assumirá o padrão de <see langword="null" />, isto é, o <see langword="XmlUrlResolver" /> não tem credenciais de usuário.</returns>
    </member>
    <member name="M:System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)">
      <summary>Mapeia um URI para um objeto que contém o recurso real.</summary>
      <param name="absoluteUri">O URI retornado de <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</param>
      <param name="role">Não usado no momento.</param>
      <param name="ofObjectToReturn">O tipo de objeto a ser retornado. A implementação atual retorna apenas objetos <see cref="T:System.IO.Stream" />.</param>
      <returns>Um objeto de fluxo ou <see langword="null" /> se for especificado um tipo diferente de fluxo.</returns>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="ofObjectToReturn" /> não é <see langword="null" /> nem um tipo <see langword="Stream" />.</exception>
      <exception cref="T:System.UriFormatException">O URI especificado não é um URI absoluto.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="absoluteUri" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Exception">Há um erro de tempo de execução (por exemplo, uma conexão de servidor interrompida).</exception>
    </member>
    <member name="M:System.Xml.XmlUrlResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
      <summary>Mapeia de forma assíncrona um URI para um objeto que contém o recurso real.</summary>
      <param name="absoluteUri">O URI retornado de <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</param>
      <param name="role">Não usado no momento.</param>
      <param name="ofObjectToReturn">O tipo de objeto a ser retornado. A implementação atual retorna apenas objetos <see cref="T:System.IO.Stream" />.</param>
      <returns>Um objeto de fluxo ou <see langword="null" /> se for especificado um tipo diferente de fluxo.</returns>
    </member>
    <member name="P:System.Xml.XmlUrlResolver.Proxy">
      <summary>Obtém ou define o proxy de rede para o objeto <see cref="T:System.Net.WebRequest" /> subjacente.</summary>
      <returns>O <see cref="T:System.Net.IWebProxy" /> a ser usado para acessar o recurso de Internet.</returns>
    </member>
    <member name="M:System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)">
      <summary>Resolve o URI absoluto dos URIs de base e relativo.</summary>
      <param name="baseUri">O URI base usado para resolver o URI relativo.</param>
      <param name="relativeUri">O URI a ser resolvido. O URI pode ser absoluto ou relativo. Se for absoluto, esse valor substituirá eficientemente o valor <paramref name="baseUri" />. Se for relativo, ele combinará com a <paramref name="baseUri" /> para tornar um URI absoluto.</param>
      <returns>O URI absoluto ou <see langword="null" /> se não for possível resolver o URI relativo.</returns>
      <exception cref="T:System.ArgumentNullException">O <paramref name="baseUri" /> é <see langword="null" /> ou o <paramref name="relativeUri" /> é <see langword="null" />.</exception>
    </member>
    <member name="T:System.Xml.XmlValidatingReader">
      <summary>Representa um leitor que fornece a DTD (definição de tipo de documento), o esquema XDR (dados XML reduzidos) e a validação de XSD (linguagem de definição de esquema XML).  
Essa classe está obsoleta. A partir do .NET Framework 2.0, recomendamos que você use a classe <see cref="T:System.Xml.XmlReaderSettings" /> e o método <see cref="Overload:System.Xml.XmlReader.Create" /> para criar um leitor de XML de validação.</summary>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
      <summary>Inicializa uma nova instância da classe <see langword="XmlValidatingReader" /> com os valores especificados.</summary>
      <param name="xmlFragment">O fluxo que contém o fragmento XML a ser analisado.</param>
      <param name="fragType">O <see cref="T:System.Xml.XmlNodeType" /> do fragmento XML. Isso determina o que o fragmento pode conter (consulte a tabela abaixo).</param>
      <param name="context">O <see cref="T:System.Xml.XmlParserContext" /> no qual o fragmento XML deverá ser analisado. Isso inclui o <see cref="T:System.Xml.XmlNameTable" /> a ser usado, codificação, o escopo de namespace, <see langword="xml:lang" /> atual e o escopo <see langword="xml:space" />.</param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="fragType" /> não é um dos tipos de nó listados na tabela a seguir.</exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
      <summary>Inicializa uma nova instância da classe <see langword="XmlValidatingReader" /> com os valores especificados.</summary>
      <param name="xmlFragment">A cadeia de caracteres que contém o fragmento XML a ser analisado.</param>
      <param name="fragType">O <see cref="T:System.Xml.XmlNodeType" /> do fragmento XML. Ele também determina o que a cadeia de caracteres de fragmento pode conter (consulte a tabela abaixo).</param>
      <param name="context">O <see cref="T:System.Xml.XmlParserContext" /> no qual o fragmento XML deverá ser analisado. Isso inclui o <see cref="T:System.Xml.NameTable" /> a ser usado, codificação, o escopo de namespace, xml:lang atual e o escopo xml:space.</param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="fragType" /> não é um dos tipos de nó listados na tabela a seguir.</exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.#ctor(System.Xml.XmlReader)">
      <summary>Inicializa uma nova instância da classe <see langword="XmlValidatingReader" /> que valida o conteúdo retornado do <see cref="T:System.Xml.XmlReader" /> fornecido.</summary>
      <param name="reader">O <see langword="XmlReader" /> a ler lido durante a validação. A implementação atual dá suporte somente a <see cref="T:System.Xml.XmlTextReader" />.</param>
      <exception cref="T:System.ArgumentException">O leitor especificado não é um <see langword="XmlTextReader" />.</exception>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.AttributeCount">
      <summary>Obtém o número de atributos no nó atual.</summary>
      <returns>O número de atributos no nó atual. Esse número inclui atributos padrão.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.BaseURI">
      <summary>Obtém o URI base do nó atual.</summary>
      <returns>O URI de base do nó atual.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.CanReadBinaryContent">
      <summary>Obtém um valor que indica se o <see cref="T:System.Xml.XmlValidatingReader" /> implementa os métodos de leitura de conteúdo binário.</summary>
      <returns>
        <see langword="true" />Se os métodos de leitura de conteúdo binário forem implementados; caso <see langword="false" />contrário. A <see cref="T:System.Xml.XmlValidatingReader" /> classe retorna <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.CanResolveEntity">
      <summary>Obtém um valor que indica se este leitor pode analisar e resolver entidades.</summary>
      <returns>
        <see langword="true" />Se o leitor puder analisar e resolver entidades; caso contrário <see langword="false" />,. <see langword="XmlValidatingReader" /> sempre retorna <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.Close">
      <summary>Altera o <see cref="P:System.Xml.XmlReader.ReadState" /> para Fechado.</summary>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Depth">
      <summary>Obtém a profundidade do nó atual no documento XML.</summary>
      <returns>A profundidade do nó atual no documento XML.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Encoding">
      <summary>Obtém o atributo de codificação para o documento.</summary>
      <returns>O valor de codificação. Se não existir nenhum atributo de codificação e não houver marca de ordem de byte, o padrão será UTF-8.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.EntityHandling">
      <summary>Obtém ou define um valor que especifica como o leitor trata entidades.</summary>
      <returns>Um dos valores de <see cref="T:System.Xml.EntityHandling" />. Se não <see langword="EntityHandling" /> for especificado, o padrão será EntityHandling. ExpandEntities.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Um valor inválido foi especificado.</exception>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.EOF">
      <summary>Obtém um valor que indica se o leitor está posicionado no final do fluxo.</summary>
      <returns>
        <see langword="true" /> se o leitor estiver posicionado no final do fluxo; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.GetAttribute(System.Int32)">
      <summary>Obtém o valor do atributo com o índice especificado.</summary>
      <param name="i">O índice do atributo. O índice é baseado em zero. (O primeiro atributo tem índice 0.)</param>
      <returns>O valor do atributo especificado.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">O parâmetro <paramref name="i" /> é menor que 0 ou maior que ou igual a <see cref="P:System.Xml.XmlValidatingReader.AttributeCount" />.</exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.GetAttribute(System.String)">
      <summary>Obtém o valor do atributo com o nome especificado.</summary>
      <param name="name">O nome qualificado do atributo.</param>
      <returns>O valor do atributo especificado. Se o atributo não for encontrado, <see langword="null" /> será retornado.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.GetAttribute(System.String,System.String)">
      <summary>Obtém o valor do atributo com o nome local especificado e o URI (Uniform Resource Identifier) do namespace.</summary>
      <param name="localName">O nome local do atributo.</param>
      <param name="namespaceURI">O URI do namespace do atributo.</param>
      <returns>O valor do atributo especificado. Se o atributo não for encontrado, <see langword="null" /> será retornado. Esse método não move o leitor.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.HasLineInfo">
      <summary>Obtém um valor que indica se a classe pode retornar informações de linha.</summary>
      <returns>
        <see langword="true" /> se a classe puder retornar informações de linha; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.HasValue">
      <summary>Obtém um valor que indica se o nó atual pode ter um <see cref="P:System.Xml.XmlValidatingReader.Value" /> diferente de String.Empty.</summary>
      <returns>
        <see langword="true" /> se o nó em que o leitor está posicionado no momento puder ter um <see langword="Value" />, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.IsDefault">
      <summary>Obtém um valor que indica se o nó atual é um atributo que foi gerado com base no valor padrão definido na DTD (definição de tipo de documento) ou no esquema.</summary>
      <returns>
        <see langword="true" />Se o nó atual for um atributo cujo valor foi gerado a partir do valor padrão definido no DTD ou no esquema; <see langword="false" /> se o valor do atributo foi definido explicitamente.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.IsEmptyElement">
      <summary>Obtém um valor que indica se o nó atual é um elemento vazio (por exemplo, <c>&lt;MyElement/&gt;</c>).</summary>
      <returns>
        <see langword="true" />Se o nó atual for um elemento (<see cref="P:System.Xml.XmlValidatingReader.NodeType" /><see langword="XmlNodeType.Element" />Equals) que termina <c>/ &gt;</c>com; caso <see langword="false" />contrário,.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.LineNumber">
      <summary>Obtém o número de linha atual.</summary>
      <returns>O número de linha atual. O valor inicial dessa propriedade é 1.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.LinePosition">
      <summary>Obtém a posição da linha atual.</summary>
      <returns>A posição da linha atual. O valor inicial dessa propriedade é 1.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.LocalName">
      <summary>Obtém o nome local do nó atual.</summary>
      <returns>O nome do nó atual com o prefixo removido. Por exemplo, <see langword="LocalName" /> é <see langword="book" /> para o elemento <c>&lt;BK: Book&gt;</c>.  
Para tipos de nó que não têm um nome (como <see langword="Text" />, <see langword="Comment" />e assim por diante), essa propriedade retorna String. Empty.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.LookupNamespace(System.String)">
      <summary>Resolve um prefixo de namespace no escopo do elemento atual.</summary>
      <param name="prefix">O prefixo cujo URI (Uniform Resource Identifier) do namespace você deseja resolver. Para corresponder ao namespace padrão, transmita uma cadeia de caracteres vazia.</param>
      <returns>O URI de namespace para o qual o prefixo será mapeado ou <see langword="null" /> se nenhum prefixo correspondente for encontrado.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.Int32)">
      <summary>Move para o atributo com o índice especificado.</summary>
      <param name="i">O índice do atributo.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">O parâmetro <paramref name="i" /> é menor que 0 ou maior que ou igual a <see cref="P:System.Xml.XmlReader.AttributeCount" />.</exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.String)">
      <summary>Move para o atributo com o nome especificado.</summary>
      <param name="name">O nome qualificado do atributo.</param>
      <returns>
        <see langword="true" /> se o atributo for encontrado; caso contrário, <see langword="false" />. Se <see langword="false" />, a posição do leitor não se altera.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.String,System.String)">
      <summary>Move para o atributo com o nome local e o URI (Uniform Resource Identifier) do namespace especificados.</summary>
      <param name="localName">O nome local do atributo.</param>
      <param name="namespaceURI">O URI do namespace do atributo.</param>
      <returns>
        <see langword="true" /> se o atributo for encontrado; caso contrário, <see langword="false" />. Se <see langword="false" />, a posição do leitor não se altera.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToElement">
      <summary>Move para o elemento que contém o nó de atributo atual.</summary>
      <returns>
        <see langword="true" /> se o leitor estiver posicionado em um atributo (o leitor se move para o elemento que possui o atributo); <see langword="false" /> se o leitor não estiver posicionado em um atributo (a posição do leitor não é alterada).</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToFirstAttribute">
      <summary>Move para o primeiro atributo.</summary>
      <returns>
        <see langword="true" /> se um atributo existir (o leitor é movido para o primeiro atributo); caso contrário, <see langword="false" /> (a posição do leitor não é alterada).</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToNextAttribute">
      <summary>Move para o próximo atributo.</summary>
      <returns>
        <see langword="true" /> se houver um atributo seguinte; <see langword="false" /> se não houver mais nenhum atributo.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Name">
      <summary>Obtém o nome qualificado do nó atual.</summary>
      <returns>O nome qualificado do nó atual. Por exemplo, <see langword="Name" /> é <see langword="bk:book" /> para o elemento <c>&lt;BK: Book&gt;</c>.  
O nome retornado depende do <see cref="P:System.Xml.XmlValidatingReader.NodeType" /> do nó. Os seguintes tipos de nó retornam os valores listados. Todos os outros tipos de nó retornam uma cadeia de caracteres vazia.  
  Tipo de nó 
  Nome 
 <see langword="Attribute" /> O nome do atributo.  

 <see langword="DocumentType" /> O nome do tipo de documento.  

 <see langword="Element" /> O nome da marcação.  

 <see langword="EntityReference" /> O nome da entidade referenciada.  

 <see langword="ProcessingInstruction" /> O destino da instrução de processamento.  

 <see langword="XmlDeclaration" /> A cadeia de caracteres literal <see langword="xml" />.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Namespaces">
      <summary>Obtém ou define um valor que indica se deve-se oferecer suporte ao namespace.</summary>
      <returns>
        <see langword="true" /> para oferecer suporte ao namespace; caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.NamespaceURI">
      <summary>Obtém o namespace URI (Uniform Resource Identifier) (conforme definido na especificação de Namespace do W3C [World Wide Web Consortium]) do nó no qual o leitor está posicionado.</summary>
      <returns>O URI do namespace do nó atual; caso contrário, uma cadeia de caracteres vazia.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.NameTable">
      <summary>Obtém o <see cref="T:System.Xml.XmlNameTable" /> associado à essa implementação.</summary>
      <returns>
        <see langword="XmlNameTable" />Isso permite que você obtenha a versão atomada de uma cadeia de caracteres dentro do nó.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.NodeType">
      <summary>Obtém o tipo do nó atual.</summary>
      <returns>Um dos valores <see cref="T:System.Xml.XmlNodeType" /> que representa o tipo do nó atual.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Prefix">
      <summary>Obtém o prefixo de namespace associado ao nó atual.</summary>
      <returns>O prefixo de namespace associado com o nó atual.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.QuoteChar">
      <summary>Obtém o caractere de aspas usado para circunscrever o valor de um nó de atributo.</summary>
      <returns>O caractere de aspas ("ou") usado para incluir o valor de um nó de atributo.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.Read">
      <summary>Lê o próximo nó do fluxo.</summary>
      <returns>
        <see langword="true" /> se o próximo nó for lido com êxito; <see langword="false" /> se não houver mais nenhum nó para ler.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadAttributeValue">
      <summary>Analisa o valor do atributo em um ou mais nós <see langword="Text" />, <see langword="EntityReference" /> ou <see langword="EndEntity" />.</summary>
      <returns>
        <see langword="true" /> se houver nós para retornar.  
 <see langword="false" /> se o leitor não estiver posicionado em um nó de atributo quando a chamada inicial for feita ou se todos os valores de atributo tiverem sido lidos.  
Um atributo vazio, como <c>misc=""</c>, retorna <see langword="true" /> com um único nó com um valor de String.Empty.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Lê o conteúdo e retorna os bytes binários decodificados de Base64.</summary>
      <param name="buffer">O buffer para o qual o texto resultante será copiado. Este valor pode não ser <see langword="null" />.</param>
      <param name="index">O deslocamento do buffer no qual o resultado começará a ser copiado.</param>
      <param name="count">O número máximo de bytes a serem copiados para o buffer. O número real de bytes copiados é retornado deste método.</param>
      <returns>O número de bytes gravados no buffer.</returns>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Não há suporte para <see cref="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /> no nó atual.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O índice de buffer ou de índice + contagem é maior que o tamanho do buffer alocado.</exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Lê o conteúdo e retorna os bytes binários decodificados BinHex.</summary>
      <param name="buffer">O buffer para o qual o texto resultante será copiado. Este valor pode não ser <see langword="null" />.</param>
      <param name="index">O deslocamento do buffer no qual o resultado começará a ser copiado.</param>
      <param name="count">O número máximo de bytes a serem copiados para o buffer. O número real de bytes copiados é retornado deste método.</param>
      <returns>O número de bytes gravados no buffer.</returns>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Não há suporte para <see cref="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> no nó atual.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O índice de buffer ou de índice + contagem é maior que o tamanho do buffer alocado.</exception>
      <exception cref="T:System.NotSupportedException">A implementação <see cref="T:System.Xml.XmlValidatingReader" /> não dá suporte a esse método.</exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Lê o elemento e decodifica o conteúdo de Base64.</summary>
      <param name="buffer">O buffer para o qual o texto resultante será copiado. Este valor pode não ser <see langword="null" />.</param>
      <param name="index">O deslocamento do buffer no qual o resultado começará a ser copiado.</param>
      <param name="count">O número máximo de bytes a serem copiados para o buffer. O número real de bytes copiados é retornado deste método.</param>
      <returns>O número de bytes gravados no buffer.</returns>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">O nó atual não é um nó de elemento.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O índice de buffer ou de índice + contagem é maior que o tamanho do buffer alocado.</exception>
      <exception cref="T:System.NotSupportedException">A implementação <see cref="T:System.Xml.XmlValidatingReader" /> não dá suporte a esse método.</exception>
      <exception cref="T:System.Xml.XmlException">O elemento contém conteúdo misto.</exception>
      <exception cref="T:System.FormatException">Não é possível converter conteúdo no tipo solicitado.</exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Lê o elemento e decodifica o conteúdo BinHex.</summary>
      <param name="buffer">O buffer para o qual o texto resultante será copiado. Este valor pode não ser <see langword="null" />.</param>
      <param name="index">O deslocamento do buffer no qual o resultado começará a ser copiado.</param>
      <param name="count">O número máximo de bytes a serem copiados para o buffer. O número real de bytes copiados é retornado deste método.</param>
      <returns>O número de bytes gravados no buffer.</returns>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">O nó atual não é um nó de elemento.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O índice de buffer ou de índice + contagem é maior que o tamanho do buffer alocado.</exception>
      <exception cref="T:System.NotSupportedException">A implementação <see cref="T:System.Xml.XmlValidatingReader" /> não dá suporte a esse método.</exception>
      <exception cref="T:System.Xml.XmlException">O elemento contém conteúdo misto.</exception>
      <exception cref="T:System.FormatException">Não é possível converter conteúdo no tipo solicitado.</exception>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Reader">
      <summary>Obtém o <see cref="T:System.Xml.XmlReader" /> usado para construir esse <see langword="XmlValidatingReader" />.</summary>
      <returns>O <see langword="XmlReader" /> especificado no construtor.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.ReadState">
      <summary>Obtém o estado do leitor.</summary>
      <returns>Um dos valores de <see cref="T:System.Xml.ReadState" />.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadString">
      <summary>Lê o conteúdo de um elemento ou nó de texto como uma cadeia de caracteres.</summary>
      <returns>O conteúdo do nó de elemento ou de texto. Essa poderá ser uma cadeia de caracteres vazia se o leitor estiver posicionado em algo diferente de um elemento ou nó de texto ou, se não houver nenhum outro conteúdo de texto para retornar no contexto atual.  
   
 O nó de texto pode ser um elemento ou um nó de texto do atributo.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadTypedValue">
      <summary>Obtém o tipo Common Language Runtime para o tipo XSD (linguagem de definição de esquema XML) especificado.</summary>
      <returns>O tipo de Common Language Runtime para o tipo de esquema XML especificado.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ResolveEntity">
      <summary>Resolve a referência de entidade para nós <see langword="EntityReference" />.</summary>
      <exception cref="T:System.InvalidOperationException">O leitor não está posicionado em um nó <see langword="EntityReference" />.</exception>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Schemas">
      <summary>Obtém um <see cref="T:System.Xml.Schema.XmlSchemaCollection" /> que será usado para validação.</summary>
      <returns>O <see langword="XmlSchemaCollection" /> a ser usado para validação.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.SchemaType">
      <summary>Obtém um objeto do tipo de esquema.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> ou<see cref="T:System.Xml.Schema.XmlSchemaComplexType" /> dependendo se o valor do nó é um tipo de linguagem de definição de esquema XML (XSD) interno ou um simpleType ou complexo definido pelo usuário; <see langword="null" /> se o nó atual não tiver nenhum tipo de esquema.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />.</summary>
      <param name="scope">Um objeto <see cref="T:System.Xml.XmlNamespaceScope" /> que identifica o escopo do leitor.</param>
      <returns>Um objeto T:System.Collections.IDictionary que identifica os namespaces no escopo.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" />.</summary>
      <param name="prefix">O prefixo de namespace.</param>
      <returns>Um valor de cadeia de caracteres que contém o Uri de namespace que é associado ao prefixo.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" />.</summary>
      <param name="namespaceName">O namespace associado ao prefixo.</param>
      <returns>Um valor de cadeia de caracteres que contém o prefixo de namespace que é associado ao <paramref name="namespaceName" />.</returns>
    </member>
    <member name="E:System.Xml.XmlValidatingReader.ValidationEventHandler">
      <summary>Define um manipulador de eventos para receber informações sobre DTD (definição de tipo de documento), esquema XDR (reduzido com os dados XML) e erros de validação do esquema XSD (linguagem de definição de esquema XML).</summary>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.ValidationType">
      <summary>Obtém ou define um valor que indica o tipo de validação a ser realizado.</summary>
      <returns>Um dos valores de <see cref="T:System.Xml.ValidationType" />. Se essa propriedade não for definida, o padrão será ValidationType. auto.</returns>
      <exception cref="T:System.InvalidOperationException">Como definir a propriedade depois que uma Leitura foi chamada.</exception>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Value">
      <summary>Obtém o valor de texto do nó atual.</summary>
      <returns>O valor retornado depende do <see cref="P:System.Xml.XmlValidatingReader.NodeType" /> do nó. A tabela a seguir lista os tipos de nós que têm um valor a ser retornado. Todos os outros tipos de nó retornam String. Empty.  
  Tipo de nó 
  Valor 
 <see langword="Attribute" /> O valor do atributo.  

 <see langword="CDATA" /> O conteúdo da seção CDATA.  

 <see langword="Comment" /> O conteúdo do comentário.  

 <see langword="DocumentType" /> O subconjunto interno.  

 <see langword="ProcessingInstruction" /> Todo o conteúdo, exceto o destino.  

 <see langword="SignificantWhitespace" /> Espaço em branco entre marcação em um modelo de conteúdo misto.  

 <see langword="Text" /> O conteúdo do nó de texto.  

 <see langword="Whitespace" /> Espaço em branco entre a marcação.  

 <see langword="XmlDeclaration" /> O conteúdo da declaração.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.XmlLang">
      <summary>Obtém o escopo de <see langword="xml:lang" /> atual.</summary>
      <returns>O escopo <see langword="xml:lang" /> atual.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.XmlResolver">
      <summary>Define o <see cref="T:System.Xml.XmlResolver" /> usado para resolver referências de DTD (definição de tipo de documento) e local de esquema. O <see langword="XmlResolver" /> também é usado para lidar com qualquer importação ou incluir elementos encontrados em esquemas XSD (linguagem de definição de esquema XML).</summary>
      <returns>O <see langword="XmlResolver" /> a ser usado. Se definido como <see langword="null" />, os recursos externos não serão resolvidos.  
Na versão 1,1 do .NET Framework, o chamador deve ser totalmente confiável para especificar um. <see langword="XmlResolver" /></returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.XmlSpace">
      <summary>Obtém o escopo de <see langword="xml:space" /> atual.</summary>
      <returns>Um dos valores de <see cref="T:System.Xml.XmlSpace" />. Se não <see langword="xml:space" /> existir nenhum escopo, essa propriedade será padronizada como. <see langword="XmlSpace.None" /></returns>
    </member>
    <member name="T:System.Xml.XmlWhitespace">
      <summary>Representa o espaço em branco no conteúdo do elemento.</summary>
    </member>
    <member name="M:System.Xml.XmlWhitespace.#ctor(System.String,System.Xml.XmlDocument)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlWhitespace" />.</summary>
      <param name="strData">Os caracteres de espaço em branco do nó.</param>
      <param name="doc">O objeto <see cref="T:System.Xml.XmlDocument" />.</param>
    </member>
    <member name="M:System.Xml.XmlWhitespace.CloneNode(System.Boolean)">
      <summary>Cria uma duplicação deste nó.</summary>
      <param name="deep">
        <see langword="true" /> para recursivamente clonar a subárvore abaixo do nó especificado; <see langword="false" /> para clonar apenas o próprio nó. Para nós de espaço em branco, o nó clonado sempre incluirá o valor dos dados, independentemente da configuração do parâmetro.</param>
      <returns>O nó clonado.</returns>
    </member>
    <member name="P:System.Xml.XmlWhitespace.LocalName">
      <summary>Obtém o nome local do nó.</summary>
      <returns>Para <see langword="XmlWhitespace" /> nós, essa propriedade retorna <see langword="#whitespace" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWhitespace.Name">
      <summary>Obtém o nome qualificado do nó.</summary>
      <returns>Para <see langword="XmlWhitespace" /> nós, essa propriedade retorna <see langword="#whitespace" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWhitespace.NodeType">
      <summary>Obtém o tipo do nó.</summary>
      <returns>Para <see langword="XmlWhitespace" /> nós, o valor é <see cref="F:System.Xml.XmlNodeType.Whitespace" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWhitespace.ParentNode">
      <summary>Obtém o pai do nó atual.</summary>
      <returns>O <see cref="T:System.Xml.XmlNode" /> nó pai do nó atual.</returns>
    </member>
    <member name="P:System.Xml.XmlWhitespace.PreviousText">
      <summary>Obtém o nó de texto que precede imediatamente este nó.</summary>
      <returns>Retorna <see cref="T:System.Xml.XmlNode" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWhitespace.Value">
      <summary>Obtém ou define o valor do nó.</summary>
      <returns>Os caracteres de espaço em branco encontrados no nó.</returns>
      <exception cref="T:System.ArgumentException">Como definir <see cref="P:System.Xml.XmlWhitespace.Value" /> para caracteres de espaço em branco inválidos.</exception>
    </member>
    <member name="M:System.Xml.XmlWhitespace.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Salva todos os filhos do nó no <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w">O <see cref="T:System.Xml.XmlWriter" /> no qual você deseja salvar.</param>
    </member>
    <member name="M:System.Xml.XmlWhitespace.WriteTo(System.Xml.XmlWriter)">
      <summary>Salva o nó no <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w">O <see cref="T:System.Xml.XmlWriter" /> no qual você deseja salvar.</param>
    </member>
    <member name="T:System.Xml.XmlWriter">
      <summary>Representa um gravador que fornece uma maneira rápida, não armazenada em cache e somente de encaminhamento de gerar fluxos ou arquivos que contém dados XML.</summary>
    </member>
    <member name="M:System.Xml.XmlWriter.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlWriter" />.</summary>
    </member>
    <member name="M:System.Xml.XmlWriter.Close">
      <summary>Quando substituído em uma classe derivada, fecha este fluxo e o fluxo subjacente.</summary>
      <exception cref="T:System.InvalidOperationException">É realizada uma chamada para gravar mais saídas após <see langword="Close" /> ter sido chamado ou se o resultado dessa chamada for um documento XML inválido.

ou -

Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
      <summary>Cria uma nova instância de <see cref="T:System.Xml.XmlWriter" /> usando o fluxo especificado.</summary>
      <param name="output">O fluxo no qual você deseja fazer a gravação. O <see cref="T:System.Xml.XmlWriter" /> grava a sintaxe de texto XML 1.0 e a anexa ao fluxo especificado.</param>
      <returns>Um objeto <see cref="T:System.Xml.XmlWriter" />.</returns>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="stream" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)">
      <summary>Cria uma nova instância do <see cref="T:System.Xml.XmlWriter" /> usando o fluxo e o objeto <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
      <param name="output">O fluxo no qual você deseja fazer a gravação. O <see cref="T:System.Xml.XmlWriter" /> grava a sintaxe de texto XML 1.0 e a anexa ao fluxo especificado.</param>
      <param name="settings">O objeto <see cref="T:System.Xml.XmlWriterSettings" /> usado para configurar a nova instância do <see cref="T:System.Xml.XmlWriter" />. Se for <see langword="null" />, um <see cref="T:System.Xml.XmlWriterSettings" /> com configuração padrão é utilizado.  
Se o <see cref="T:System.Xml.XmlWriter" /> está sendo usado com o método <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" />, você deve usar a propriedade <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> para obter um objeto <see cref="T:System.Xml.XmlWriterSettings" /> com as configurações corretas. Isso assegura que o objeto <see cref="T:System.Xml.XmlWriter" /> criado tenha as configurações de saída correta.</param>
      <returns>Um objeto <see cref="T:System.Xml.XmlWriter" />.</returns>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="stream" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)">
      <summary>Cria uma nova instância <see cref="T:System.Xml.XmlWriter" /> usando o <see cref="T:System.IO.TextWriter" /> especificado.</summary>
      <param name="output">O <see cref="T:System.IO.TextWriter" /> no qual você deseja gravar. O <see cref="T:System.Xml.XmlWriter" /> grava a sintaxe de texto XML 1.0 e a anexa ao <see cref="T:System.IO.TextWriter" /> especificado.</param>
      <returns>Um objeto <see cref="T:System.Xml.XmlWriter" />.</returns>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="text" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.IO.TextWriter,System.Xml.XmlWriterSettings)">
      <summary>Cria uma nova instância do <see cref="T:System.Xml.XmlWriter" /> usando os objetos <see cref="T:System.IO.TextWriter" /> e <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
      <param name="output">O <see cref="T:System.IO.TextWriter" /> no qual você deseja gravar. O <see cref="T:System.Xml.XmlWriter" /> grava a sintaxe de texto XML 1.0 e a anexa ao <see cref="T:System.IO.TextWriter" /> especificado.</param>
      <param name="settings">O objeto <see cref="T:System.Xml.XmlWriterSettings" /> usado para configurar a nova instância do <see cref="T:System.Xml.XmlWriter" />. Se for <see langword="null" />, um <see cref="T:System.Xml.XmlWriterSettings" /> com configuração padrão é utilizado.  
Se o <see cref="T:System.Xml.XmlWriter" /> está sendo usado com o método <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" />, você deve usar a propriedade <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> para obter um objeto <see cref="T:System.Xml.XmlWriterSettings" /> com as configurações corretas. Isso assegura que o objeto <see cref="T:System.Xml.XmlWriter" /> criado tenha as configurações de saída correta.</param>
      <returns>Um objeto <see cref="T:System.Xml.XmlWriter" />.</returns>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="text" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.String)">
      <summary>Cria uma nova instância <see cref="T:System.Xml.XmlWriter" /> usando o nome de arquivo especificado.</summary>
      <param name="outputFileName">O arquivo no qual você deseja gravar. O <see cref="T:System.Xml.XmlWriter" /> cria um arquivo no caminho especificado e grava na sintaxe de texto XML 1.0. O <paramref name="outputFileName" /> deve ser um caminho de sistema de arquivos.</param>
      <returns>Um objeto <see cref="T:System.Xml.XmlWriter" />.</returns>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="url" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.String,System.Xml.XmlWriterSettings)">
      <summary>Cria uma nova <see cref="T:System.Xml.XmlWriter" /> instância usando o nome do arquivo e <see cref="T:System.Xml.XmlWriterSettings" /> objeto.</summary>
      <param name="outputFileName">O arquivo no qual você deseja gravar. O <see cref="T:System.Xml.XmlWriter" /> cria um arquivo no caminho especificado e grava na sintaxe de texto XML 1.0. O <paramref name="outputFileName" /> deve ser um caminho de sistema de arquivos.</param>
      <param name="settings">O objeto <see cref="T:System.Xml.XmlWriterSettings" /> usado para configurar a nova instância do <see cref="T:System.Xml.XmlWriter" />. Se for <see langword="null" />, um <see cref="T:System.Xml.XmlWriterSettings" /> com configuração padrão é utilizado.  
Se o <see cref="T:System.Xml.XmlWriter" /> está sendo usado com o método <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" />, você deve usar a propriedade <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> para obter um objeto <see cref="T:System.Xml.XmlWriterSettings" /> com as configurações corretas. Isso assegura que o objeto <see cref="T:System.Xml.XmlWriter" /> criado tenha as configurações de saída correta.</param>
      <returns>Um objeto <see cref="T:System.Xml.XmlWriter" />.</returns>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="url" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)">
      <summary>Cria uma nova instância <see cref="T:System.Xml.XmlWriter" /> usando o <see cref="T:System.Text.StringBuilder" /> especificado.</summary>
      <param name="output">O <see cref="T:System.Text.StringBuilder" /> no qual será gravado. Conteúdo gravado pelo <see cref="T:System.Xml.XmlWriter" /> é acrescentado ao <see cref="T:System.Text.StringBuilder" />.</param>
      <returns>Um objeto <see cref="T:System.Xml.XmlWriter" />.</returns>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="builder" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder,System.Xml.XmlWriterSettings)">
      <summary>Cria uma nova instância do <see cref="T:System.Xml.XmlWriter" /> usando os objetos <see cref="T:System.Text.StringBuilder" /> e <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
      <param name="output">O <see cref="T:System.Text.StringBuilder" /> no qual será gravado. O conteúdo gravado pelo <see cref="T:System.Xml.XmlWriter" /> é acrescentado ao <see cref="T:System.Text.StringBuilder" />.</param>
      <param name="settings">O objeto <see cref="T:System.Xml.XmlWriterSettings" /> usado para configurar a nova instância do <see cref="T:System.Xml.XmlWriter" />. Se for <see langword="null" />, um <see cref="T:System.Xml.XmlWriterSettings" /> com configuração padrão é utilizado.  
Se o <see cref="T:System.Xml.XmlWriter" /> está sendo usado com o método <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" />, você deve usar a propriedade <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> para obter um objeto <see cref="T:System.Xml.XmlWriterSettings" /> com as configurações corretas. Isso assegura que o objeto <see cref="T:System.Xml.XmlWriter" /> criado tenha as configurações de saída correta.</param>
      <returns>Um objeto <see cref="T:System.Xml.XmlWriter" />.</returns>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="builder" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)">
      <summary>Cria uma nova instância <see cref="T:System.Xml.XmlWriter" /> usando o objeto <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="output">O objeto <see cref="T:System.Xml.XmlWriter" /> que você deseja usar como o gravador subjacente.</param>
      <returns>Um objeto <see cref="T:System.Xml.XmlWriter" /> encapsulado em torno do objeto <see cref="T:System.Xml.XmlWriter" /> especificado.</returns>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="writer" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter,System.Xml.XmlWriterSettings)">
      <summary>Cria uma nova instância <see cref="T:System.Xml.XmlWriter" /> usando os objetos <see cref="T:System.Xml.XmlWriter" /> e <see cref="T:System.Xml.XmlWriterSettings" /> especificados.</summary>
      <param name="output">O objeto <see cref="T:System.Xml.XmlWriter" /> que você deseja usar como o gravador subjacente.</param>
      <param name="settings">O objeto <see cref="T:System.Xml.XmlWriterSettings" /> usado para configurar a nova instância do <see cref="T:System.Xml.XmlWriter" /> . Se for <see langword="null" />, um <see cref="T:System.Xml.XmlWriterSettings" /> com configuração padrão é utilizado.  
Se o <see cref="T:System.Xml.XmlWriter" /> está sendo usado com o método <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" />, você deve usar a propriedade <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> para obter um objeto <see cref="T:System.Xml.XmlWriterSettings" /> com as configurações corretas. Isso assegura que o objeto <see cref="T:System.Xml.XmlWriter" /> criado tenha as configurações de saída correta.</param>
      <returns>Um objeto <see cref="T:System.Xml.XmlWriter" /> encapsulado em torno do objeto <see cref="T:System.Xml.XmlWriter" /> especificado.</returns>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="writer" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Dispose">
      <summary>Libera todos os recursos usados pela instância atual da classe <see cref="T:System.Xml.XmlWriter" />.</summary>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados usados pelo <see cref="T:System.Xml.XmlWriter" /> e opcionalmente libera os recursos gerenciados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Flush">
      <summary>Quando substituído em uma classe derivada, libera o que está no buffer para os fluxos subjacentes e também libera o fluxo subjacente.</summary>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.FlushAsync">
      <summary>Libera de maneira assíncrona tudo o que está no buffer para os fluxos subjacentes e também libera o fluxo subjacente.</summary>
      <returns>Uma tarefa que representa a operação <see langword="Flush" /> assíncrona.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.

ou -

Um método assíncrono <see cref="T:System.Xml.XmlWriter" /> foi chamado sem definir o sinalizador <see cref="P:System.Xml.XmlWriterSettings.Async" /> como <see langword="true" />. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Defina XmlWriterSettings.Async como verdadeiro se desejar usar Métodos Assíncronos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.LookupPrefix(System.String)">
      <summary>Quando substituído em uma classe derivada, retorna o prefixo mais próximo definido no escopo do namespace atual para o URI de namespace.</summary>
      <param name="ns">O URI de namespace cujo prefixo você deseja localizar.</param>
      <returns>O prefixo correspondente ou <see langword="null" /> se nenhum URI de namespace correspondente for encontrado no escopo atual.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="ns" /> é <see langword="null" /> ou <see langword="String.Empty" />.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="P:System.Xml.XmlWriter.Settings">
      <summary>Obtém o objeto <see cref="T:System.Xml.XmlWriterSettings" /> usado para criar essa instância <see cref="T:System.Xml.XmlWriter" />.</summary>
      <returns>O objeto <see cref="T:System.Xml.XmlWriterSettings" /> usado para criar essa instância do gravador. Se esse gravador não foi criado usando o método <see cref="Overload:System.Xml.XmlWriter.Create" /> , essa propriedade retornará <see langword="null" />.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
      <summary>Quando substituído em uma classe derivada, grava todos os atributos localizados na posição atual no <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">O <see langword="XmlReader" /> do qual copiar os atributos.</param>
      <param name="defattr">
        <see langword="true" /> para copiar os atributos padrão do <see langword="XmlReader" />; caso contrário, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException">O leitor não está posicionado em um nó <see langword="element" />, <see langword="attribute" /> ou <see langword="XmlDeclaration" /> .</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributesAsync(System.Xml.XmlReader,System.Boolean)">
      <summary>Grava de forma assíncrona todos os atributos encontrados na posição atual no <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">O <see langword="XmlReader" /> do qual copiar os atributos.</param>
      <param name="defattr">
        <see langword="true" /> para copiar os atributos padrão do <see langword="XmlReader" />; caso contrário, <see langword="false" />.</param>
      <returns>Uma tarefa que representa a operação <see langword="WriteAttributes" /> assíncrona.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.

ou -

Um método assíncrono <see cref="T:System.Xml.XmlWriter" /> foi chamado sem definir o sinalizador <see cref="P:System.Xml.XmlWriterSettings.Async" /> como <see langword="true" />. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Defina XmlWriterSettings.Async como verdadeiro se desejar usar Métodos Assíncronos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)">
      <summary>Quando substituído em uma classe derivada, grava o atributo com o nome local e o valor especificados.</summary>
      <param name="localName">O nome local do atributo.</param>
      <param name="value">O valor do atributo.</param>
      <exception cref="T:System.InvalidOperationException">O estado do gravador não é <see langword="WriteState.Element" /> ou o gravador está fechado.

ou -

Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
      <exception cref="T:System.ArgumentException">O valor do atributo <see langword="xml:space" /> ou <see langword="xml:lang" /> é inválido.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
      <summary>Quando substituído em uma classe derivada, grava um atributo com o nome local, URI do namespace e o valor especificados.</summary>
      <param name="localName">O nome local do atributo.</param>
      <param name="ns">O URI do namespace para associar ao atributo.</param>
      <param name="value">O valor do atributo.</param>
      <exception cref="T:System.InvalidOperationException">O estado do gravador não é <see langword="WriteState.Element" /> ou o gravador está fechado.

ou - 
Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
      <exception cref="T:System.ArgumentException">O valor do atributo <see langword="xml:space" /> ou <see langword="xml:lang" /> é inválido.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
      <summary>Quando substituído em uma classe derivada, grava o atributo com o prefixo, nome local, URI do namespace e o valor especificados.</summary>
      <param name="prefix">O prefixo do namespace do atributo.</param>
      <param name="localName">O nome local do atributo.</param>
      <param name="ns">O URI do namespace do atributo.</param>
      <param name="value">O valor do atributo.</param>
      <exception cref="T:System.InvalidOperationException">O estado do gravador não é <see langword="WriteState.Element" /> ou o gravador está fechado.

ou - 
Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
      <exception cref="T:System.ArgumentException">O valor do atributo <see langword="xml:space" /> ou <see langword="xml:lang" /> é inválido.</exception>
      <exception cref="T:System.Xml.XmlException">O <paramref name="localName" /> ou <paramref name="ns" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)">
      <summary>Grava de forma assíncrona o atributo com o prefixo especificado, o nome local, o URI de namespace e o valor.</summary>
      <param name="prefix">O prefixo do namespace do atributo.</param>
      <param name="localName">O nome local do atributo.</param>
      <param name="ns">O URI do namespace do atributo.</param>
      <param name="value">O valor do atributo.</param>
      <returns>Uma tarefa que representa a operação <see langword="WriteAttributeString" /> assíncrona.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.

ou - 
Um método assíncrono <see cref="T:System.Xml.XmlWriter" /> foi chamado sem definir o sinalizador <see cref="P:System.Xml.XmlWriterSettings.Async" /> como <see langword="true" />. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Defina XmlWriterSettings.Async como verdadeiro se desejar usar Métodos Assíncronos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Quando substituído em uma classe derivada, codifica os bytes binários especificados como Base64 e grava o texto resultante.</summary>
      <param name="buffer">Matriz de bytes a ser codificada.</param>
      <param name="index">A posição no buffer que indica o início dos bytes a serem gravados.</param>
      <param name="count">O número de bytes a serem gravados.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ou <paramref name="count" /> é menor que zero.  

ou - 
O tamanho do buffer menos <paramref name="index" /> é menor que <paramref name="count" />.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)">
      <summary>Codifica de forma assíncrona os bytes binários especificados como Base64 e grava o texto resultante.</summary>
      <param name="buffer">Matriz de bytes a ser codificada.</param>
      <param name="index">A posição no buffer que indica o início dos bytes a serem gravados.</param>
      <param name="count">O número de bytes a serem gravados.</param>
      <returns>Uma tarefa que representa a operação <see langword="WriteBase64" /> assíncrona.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.

ou -

Um método assíncrono <see cref="T:System.Xml.XmlWriter" /> foi chamado sem definir o sinalizador <see cref="P:System.Xml.XmlWriterSettings.Async" /> como <see langword="true" />. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Defina XmlWriterSettings.Async como verdadeiro se desejar usar Métodos Assíncronos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Quando substituído em uma classe derivada, codifica os bytes binários especificados como <see langword="BinHex" /> e grava o texto resultante.</summary>
      <param name="buffer">Matriz de bytes a ser codificada.</param>
      <param name="index">A posição no buffer que indica o início dos bytes a serem gravados.</param>
      <param name="count">O número de bytes a serem gravados.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">O gravador está fechado ou em estado de erro.

ou -

Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ou <paramref name="count" /> é menor que zero.  

ou - 
O tamanho do buffer menos <paramref name="index" /> é menor que <paramref name="count" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)">
      <summary>Codifica de forma assíncrona os bytes binários especificados como <see langword="BinHex" /> e grava o texto resultante.</summary>
      <param name="buffer">Matriz de bytes a ser codificada.</param>
      <param name="index">A posição no buffer que indica o início dos bytes a serem gravados.</param>
      <param name="count">O número de bytes a serem gravados.</param>
      <returns>Uma tarefa que representa a operação <see langword="WriteBinHex" /> assíncrona.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.

ou -

Um método assíncrono <see cref="T:System.Xml.XmlWriter" /> foi chamado sem definir o sinalizador <see cref="P:System.Xml.XmlWriterSettings.Async" /> como <see langword="true" />. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Defina XmlWriterSettings.Async como verdadeiro se desejar usar Métodos Assíncronos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCData(System.String)">
      <summary>Quando substituído em uma classe derivada, grava um bloco &lt;![CDATA[...]]&gt; que contém o texto especificado.</summary>
      <param name="text">O texto a ser colocado no bloco CDATA.</param>
      <exception cref="T:System.ArgumentException">O texto poderia resultar em um documento XML malformado.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCDataAsync(System.String)">
      <summary>Grava de forma assíncrona um bloco &lt;![CDATA[...]]&gt; que contém o texto especificado.</summary>
      <param name="text">O texto a ser colocado no bloco CDATA.</param>
      <returns>Uma tarefa que representa a operação <see langword="WriteCData" /> assíncrona.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.

ou -

Um método assíncrono <see cref="T:System.Xml.XmlWriter" /> foi chamado sem definir o sinalizador <see cref="P:System.Xml.XmlWriterSettings.Async" /> como <see langword="true" />. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Defina XmlWriterSettings.Async como verdadeiro se desejar usar Métodos Assíncronos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCharEntity(System.Char)">
      <summary>Quando substituído em uma classe derivada, força a geração de uma entidade de caracteres para o valor especificado de caracteres Unicode.</summary>
      <param name="ch">O caractere Unicode para o qual uma entidade de caracteres será gerada.</param>
      <exception cref="T:System.ArgumentException">O caractere está dentro do intervalo de caracteres do par alternativo, <see langword="0xd800" /> - <see langword="0xdfff" />.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCharEntityAsync(System.Char)">
      <summary>Força de forma assíncrona a geração de uma entidade de caracteres para o valor de caractere Unicode especificado.</summary>
      <param name="ch">O caractere Unicode para o qual uma entidade de caracteres será gerada.</param>
      <returns>Uma tarefa que representa a operação <see langword="WriteCharEntity" /> assíncrona.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.

ou -

Um método assíncrono <see cref="T:System.Xml.XmlWriter" /> foi chamado sem definir o sinalizador <see cref="P:System.Xml.XmlWriterSettings.Async" /> como <see langword="true" />. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Defina XmlWriterSettings.Async como verdadeiro se desejar usar Métodos Assíncronos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
      <summary>Quando substituído em uma classe derivada, grava texto um buffer por vez.</summary>
      <param name="buffer">Uma matriz de caracteres que contém o texto a ser gravado.</param>
      <param name="index">A posição do buffer que indica o início do texto a ser gravado.</param>
      <param name="count">O número de caracteres a serem gravados.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ou <paramref name="count" /> é menor que zero.  

ou - 
O tamanho do buffer menos <paramref name="index" /> é menor que <paramref name="count" />; a chamada resulta em caracteres do par alternativo sendo divididos ou na gravação de um par alternativo inválido.</exception>
      <exception cref="T:System.ArgumentException">O valor do parâmetro <paramref name="buffer" /> não é válido.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Grava texto de forma assíncrona um buffer por vez.</summary>
      <param name="buffer">Uma matriz de caracteres que contém o texto a ser gravado.</param>
      <param name="index">A posição do buffer que indica o início do texto a ser gravado.</param>
      <param name="count">O número de caracteres a serem gravados.</param>
      <returns>Uma tarefa que representa a operação <see langword="WriteChars" /> assíncrona.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.

ou -

Um método assíncrono <see cref="T:System.Xml.XmlWriter" /> foi chamado sem definir o sinalizador <see cref="P:System.Xml.XmlWriterSettings.Async" /> como <see langword="true" />. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Defina XmlWriterSettings.Async como verdadeiro se desejar usar Métodos Assíncronos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteComment(System.String)">
      <summary>Quando substituído em uma classe derivada, grava um comentário &lt;!--...--&gt; que contém o texto especificado.</summary>
      <param name="text">Texto a colocar dentro do comentário.</param>
      <exception cref="T:System.ArgumentException">O texto pode resultar em um documento XML malformado.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCommentAsync(System.String)">
      <summary>Grava de forma assíncrona um comentário &lt;!--...--&gt; que contém o texto especificado.</summary>
      <param name="text">Texto a colocar dentro do comentário.</param>
      <returns>Uma tarefa que representa a operação <see langword="WriteComment" /> assíncrona.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.

ou -

Um método assíncrono <see cref="T:System.Xml.XmlWriter" /> foi chamado sem definir o sinalizador <see cref="P:System.Xml.XmlWriterSettings.Async" /> como <see langword="true" />. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Defina XmlWriterSettings.Async como verdadeiro se desejar usar Métodos Assíncronos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
      <summary>Quando substituído em uma classe derivada, grava a declaração DOCTYPE com o nome especificado e os atributos opcionais.</summary>
      <param name="name">O nome do DOCTYPE. Isso deve ser não vazio.</param>
      <param name="pubid">Se for não nulo, ele também gravará PUBLIC "pubid" "sysid", em que <paramref name="pubid" /> e <paramref name="sysid" /> são substituídos pelo valor dos argumentos fornecidos.</param>
      <param name="sysid">Se <paramref name="pubid" /> for <see langword="null" /> e <paramref name="sysid" /> for não nulo, ele gravará SYSTEM "sysid", em que <paramref name="sysid" /> será substituído pelo valor desse argumento.</param>
      <param name="subset">Se não for nulo, ele gravará [subset], em que subset é substituído pelo valor desse argumento.</param>
      <exception cref="T:System.InvalidOperationException">Esse método foi chamado fora do prólogo (após o elemento raiz).

ou -

Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
      <exception cref="T:System.ArgumentException">O valor de <paramref name="name" /> resultaria em um XML inválido.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)">
      <summary>Grava de forma assíncrona a declaração DOCTYPE com o nome especificado e os atributos opcionais.</summary>
      <param name="name">O nome do DOCTYPE. Isso deve ser não vazio.</param>
      <param name="pubid">Se for não nulo, ele também gravará PUBLIC "pubid" "sysid", em que <paramref name="pubid" /> e <paramref name="sysid" /> são substituídos pelo valor dos argumentos fornecidos.</param>
      <param name="sysid">Se <paramref name="pubid" /> for <see langword="null" /> e <paramref name="sysid" /> for não nulo, ele gravará SYSTEM "sysid", em que <paramref name="sysid" /> será substituído pelo valor desse argumento.</param>
      <param name="subset">Se não for nulo, ele gravará [subset], em que subset é substituído pelo valor desse argumento.</param>
      <returns>Uma tarefa que representa a operação <see langword="WriteDocType" /> assíncrona.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.

ou -

Um método assíncrono <see cref="T:System.Xml.XmlWriter" /> foi chamado sem definir o sinalizador <see cref="P:System.Xml.XmlWriterSettings.Async" /> como <see langword="true" />. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Defina XmlWriterSettings.Async como verdadeiro se desejar usar Métodos Assíncronos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
      <summary>Grava um elemento com o valor e o nome local especificados.</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="value">O valor do elemento.</param>
      <exception cref="T:System.ArgumentException">O valor de <paramref name="localName" /> é <see langword="null" /> ou uma cadeia de caracteres vazia.  

ou - 
Os valores de parâmetros não são válidos.</exception>
      <exception cref="T:System.Text.EncoderFallbackException">Há um caractere no buffer que é um caractere XML válido, mas que não é válido para a codificação de saída. Por exemplo, se a codificação de saída for ASCII, use apenas caracteres no intervalo de 0 a 127 para nomes de elemento e de atributo. O caractere inválido pode estar no argumento do método ou em um argumento dos métodos anteriores que foram gravados no buffer. Esses caracteres são substituídos por referências de entidade de caracteres de escape quando possível (por exemplo, em nós de texto ou valores de atributo). No entanto, a referência de entidade de caracteres não é permitida em nomes de elemento e de atributo, comentários, instruções de processamento ou seções de CDATA.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
      <summary>Grava um elemento com o nome local, URI de namespace e valor especificados.</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="ns">O URI do namespace a ser associado ao elemento.</param>
      <param name="value">O valor do elemento.</param>
      <exception cref="T:System.ArgumentException">O valor de <paramref name="localName" /> é <see langword="null" /> ou uma cadeia de caracteres vazia.  

ou - 
Os valores de parâmetros não são válidos.</exception>
      <exception cref="T:System.Text.EncoderFallbackException">Há um caractere no buffer que é um caractere XML válido, mas que não é válido para a codificação de saída. Por exemplo, se a codificação de saída for ASCII, use apenas caracteres no intervalo de 0 a 127 para nomes de elemento e de atributo. O caractere inválido pode estar no argumento do método ou em um argumento dos métodos anteriores que foram gravados no buffer. Esses caracteres são substituídos por referências de entidade de caracteres de escape quando possível (por exemplo, em nós de texto ou valores de atributo). No entanto, a referência de entidade de caracteres não é permitida em nomes de elemento e de atributo, comentários, instruções de processamento ou seções de CDATA.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
      <summary>Grava um elemento com o prefixo, o nome local, o URI do namespace e o valor especificados.</summary>
      <param name="prefix">O prefixo do elemento.</param>
      <param name="localName">O nome local do elemento.</param>
      <param name="ns">O URI do namespace do elemento.</param>
      <param name="value">O valor do elemento.</param>
      <exception cref="T:System.ArgumentException">O valor de <paramref name="localName" /> é <see langword="null" /> ou uma cadeia de caracteres vazia.  

ou - 
Os valores de parâmetros não são válidos.</exception>
      <exception cref="T:System.Text.EncoderFallbackException">Há um caractere no buffer que é um caractere XML válido, mas que não é válido para a codificação de saída. Por exemplo, se a codificação de saída for ASCII, use apenas caracteres no intervalo de 0 a 127 para nomes de elemento e de atributo. O caractere inválido pode estar no argumento do método ou em um argumento dos métodos anteriores que foram gravados no buffer. Esses caracteres são substituídos por referências de entidade de caracteres de escape quando possível (por exemplo, em nós de texto ou valores de atributo). No entanto, a referência de entidade de caracteres não é permitida em nomes de elemento e de atributo, comentários, instruções de processamento ou seções de CDATA.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)">
      <summary>Grava de forma assíncrona um elemento com o prefixo especificado, o nome local, o URI de namespace e o valor.</summary>
      <param name="prefix">O prefixo do elemento.</param>
      <param name="localName">O nome local do elemento.</param>
      <param name="ns">O URI do namespace do elemento.</param>
      <param name="value">O valor do elemento.</param>
      <returns>Uma tarefa que representa a operação <see langword="WriteElementString" /> assíncrona.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.

ou -

Um método assíncrono <see cref="T:System.Xml.XmlWriter" /> foi chamado sem definir o sinalizador <see cref="P:System.Xml.XmlWriterSettings.Async" /> como <see langword="true" />. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Defina XmlWriterSettings.Async como verdadeiro se desejar usar Métodos Assíncronos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndAttribute">
      <summary>Quando substituído em uma classe derivada, fecha a chamada <see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" /> anterior.</summary>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndAttributeAsync">
      <summary>Fecha de forma assíncrona a chamada <see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" /> anterior.</summary>
      <returns>Uma tarefa que representa a operação <see langword="WriteEndAttribute" /> assíncrona.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.

ou -

Um método assíncrono <see cref="T:System.Xml.XmlWriter" /> foi chamado sem definir o sinalizador <see cref="P:System.Xml.XmlWriterSettings.Async" /> como <see langword="true" />. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Defina XmlWriterSettings.Async como verdadeiro se desejar usar Métodos Assíncronos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndDocument">
      <summary>Quando substituído em uma classe derivada, fecha todos os elementos ou atributos abertos e coloca o gravador de volta no estado Inicial.</summary>
      <exception cref="T:System.ArgumentException">O documento XML é inválido.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndDocumentAsync">
      <summary>Fecha de forma assíncrona os elementos ou atributos abertos e coloca o gravador de volta no estado Inicial.</summary>
      <returns>Uma tarefa que representa a operação <see langword="WriteEndDocument" /> assíncrona.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.

ou -

Um método assíncrono <see cref="T:System.Xml.XmlWriter" /> foi chamado sem definir o sinalizador <see cref="P:System.Xml.XmlWriterSettings.Async" /> como <see langword="true" />. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Defina XmlWriterSettings.Async como verdadeiro se desejar usar Métodos Assíncronos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndElement">
      <summary>Quando substituído em uma classe derivada, fecha um elemento e aciona o escopo de namespace correspondente.</summary>
      <exception cref="T:System.InvalidOperationException">Isso resulta em um documento XML inválido.

ou -

Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndElementAsync">
      <summary>Fecha de forma assíncrona um elemento e remove o escopo de namespace correspondente da pilha.</summary>
      <returns>Uma tarefa que representa a operação <see langword="WriteEndElement" /> assíncrona.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.

ou -

Um método assíncrono <see cref="T:System.Xml.XmlWriter" /> foi chamado sem definir o sinalizador <see cref="P:System.Xml.XmlWriterSettings.Async" /> como <see langword="true" />. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Defina XmlWriterSettings.Async como verdadeiro se desejar usar Métodos Assíncronos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEntityRef(System.String)">
      <summary>Quando substituído em uma classe derivada, grava uma referência de entidade como <see langword="&amp;name;" />.</summary>
      <param name="name">O nome da referência da entidade.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> é <see langword="null" /> ou <see langword="String.Empty" />.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEntityRefAsync(System.String)">
      <summary>Grava de forma assíncrona uma referência de entidade como <see langword="&amp;name;" />.</summary>
      <param name="name">O nome da referência da entidade.</param>
      <returns>Uma tarefa que representa a operação <see langword="WriteEntityRef" /> assíncrona.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.

ou -

Um método assíncrono <see cref="T:System.Xml.XmlWriter" /> foi chamado sem definir o sinalizador <see cref="P:System.Xml.XmlWriterSettings.Async" /> como <see langword="true" />. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Defina XmlWriterSettings.Async como verdadeiro se desejar usar Métodos Assíncronos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteFullEndElement">
      <summary>Quando substituído em uma classe derivada, fecha um elemento e aciona o escopo de namespace correspondente.</summary>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteFullEndElementAsync">
      <summary>Fecha de forma assíncrona um elemento e remove o escopo de namespace correspondente da pilha.</summary>
      <returns>Uma tarefa que representa a operação <see langword="WriteFullEndElement" /> assíncrona.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.

ou -

Um método assíncrono <see cref="T:System.Xml.XmlWriter" /> foi chamado sem definir o sinalizador <see cref="P:System.Xml.XmlWriterSettings.Async" /> como <see langword="true" />. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Defina XmlWriterSettings.Async como verdadeiro se desejar usar Métodos Assíncronos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteName(System.String)">
      <summary>Quando substituído em uma classe derivada, grava o nome especificado, garantindo que ele seja um nome válido de acordo com a recomendação do W3C XML 1.0 (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</summary>
      <param name="name">O nome a ser gravado.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> não é um nome XML válido; ou <paramref name="name" /> é <see langword="null" /> ou <see langword="String.Empty" />.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNameAsync(System.String)">
      <summary>Grava de maneira assíncrona o nome especificado, garantindo que ele seja um nome válido de acordo com a recomendação do W3C XML 1.0 (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</summary>
      <param name="name">O nome a ser gravado.</param>
      <returns>Uma tarefa que representa a operação <see langword="WriteName" /> assíncrona.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.

ou -

Um método assíncrono <see cref="T:System.Xml.XmlWriter" /> foi chamado sem definir o sinalizador <see cref="P:System.Xml.XmlWriterSettings.Async" /> como <see langword="true" />. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Defina XmlWriterSettings.Async como verdadeiro se desejar usar Métodos Assíncronos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNmToken(System.String)">
      <summary>Quando substituído em uma classe derivada, grava o nome especificado, garantindo que ele seja um NmToken válido de acordo com a recomendação do W3C XML 1.0 (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</summary>
      <param name="name">O nome a ser gravado.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> não é um NmToken válido; ou <paramref name="name" /> é <see langword="null" /> ou <see langword="String.Empty" />.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNmTokenAsync(System.String)">
      <summary>Grava de maneira assíncrona o nome especificado, garantindo que ele seja um NmToken válido de acordo com a recomendação do W3C XML 1.0 (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</summary>
      <param name="name">O nome a ser gravado.</param>
      <returns>Uma tarefa que representa a operação <see langword="WriteNmToken" /> assíncrona.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.

ou -

Um método assíncrono <see cref="T:System.Xml.XmlWriter" /> foi chamado sem definir o sinalizador <see cref="P:System.Xml.XmlWriterSettings.Async" /> como <see langword="true" />. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Defina XmlWriterSettings.Async como verdadeiro se desejar usar Métodos Assíncronos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
      <summary>Quando substituído em uma classe derivada, copia tudo do leitor no gravador e move o leitor para o início do próximo irmão.</summary>
      <param name="reader">O <see cref="T:System.Xml.XmlReader" /> para leitura.</param>
      <param name="defattr">
        <see langword="true" /> para copiar os atributos padrão do <see langword="XmlReader" />; caso contrário, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="reader" /> contém caracteres inválidos.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
      <summary>Copia tudo do objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> no gravador. A posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> permanece inalterada.</summary>
      <param name="navigator">O <see cref="T:System.Xml.XPath.XPathNavigator" /> do qual copiar.</param>
      <param name="defattr">
        <see langword="true" /> para copiar os atributos padrão; caso contrário, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="navigator" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XmlReader,System.Boolean)">
      <summary>Copia de forma assíncrona tudo do leitor no gravador e move o leitor para o início do próximo irmão.</summary>
      <param name="reader">O <see cref="T:System.Xml.XmlReader" /> para leitura.</param>
      <param name="defattr">
        <see langword="true" /> para copiar os atributos padrão do <see langword="XmlReader" />; caso contrário, <see langword="false" />.</param>
      <returns>Uma tarefa que representa a operação <see langword="WriteNode" /> assíncrona.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.

ou -

Um método assíncrono <see cref="T:System.Xml.XmlWriter" /> foi chamado sem definir o sinalizador <see cref="P:System.Xml.XmlWriterSettings.Async" /> como <see langword="true" />. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Defina XmlWriterSettings.Async como verdadeiro se desejar usar Métodos Assíncronos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XPath.XPathNavigator,System.Boolean)">
      <summary>Copia de forma assíncrona tudo do objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> para o gravador. A posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> permanece inalterada.</summary>
      <param name="navigator">O <see cref="T:System.Xml.XPath.XPathNavigator" /> do qual copiar.</param>
      <param name="defattr">
        <see langword="true" /> para copiar os atributos padrão; caso contrário, <see langword="false" />.</param>
      <returns>Uma tarefa que representa a operação <see langword="WriteNode" /> assíncrona.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.

ou -

Um método assíncrono <see cref="T:System.Xml.XmlWriter" /> foi chamado sem definir o sinalizador <see cref="P:System.Xml.XmlWriterSettings.Async" /> como <see langword="true" />. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Defina XmlWriterSettings.Async como verdadeiro se desejar usar Métodos Assíncronos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
      <summary>Quando substituído em uma classe derivada, grava uma instrução de processamento com um espaço entre o nome e o texto da seguinte maneira: &lt;?nome texto?&gt;.</summary>
      <param name="name">O nome da instrução de processamento.</param>
      <param name="text">O texto a ser incluído na instrução de processamento.</param>
      <exception cref="T:System.ArgumentException">O texto poderia resultar em um documento XML malformado.  
 <paramref name="name" /> é <see langword="null" /> ou <see langword="String.Empty" />.  
Esse método está sendo usado para criar uma declaração XML após uma chamada a <see cref="M:System.Xml.XmlWriter.WriteStartDocument" />.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteProcessingInstructionAsync(System.String,System.String)">
      <summary>Grava de forma assíncrona uma instrução de processamento com um espaço entre o nome e o texto da seguinte maneira: &lt;? nome texto?&gt;.</summary>
      <param name="name">O nome da instrução de processamento.</param>
      <param name="text">O texto a ser incluído na instrução de processamento.</param>
      <returns>Uma tarefa que representa a operação <see langword="WriteProcessingInstruction" /> assíncrona.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.

ou -

Um método assíncrono <see cref="T:System.Xml.XmlWriter" /> foi chamado sem definir o sinalizador <see cref="P:System.Xml.XmlWriterSettings.Async" /> como <see langword="true" />. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Defina XmlWriterSettings.Async como verdadeiro se desejar usar Métodos Assíncronos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
      <summary>Quando substituído em uma classe derivada, grava o nome qualificado do namespace. Este método pesquisa o prefixo que está no escopo para o namespace fornecido.</summary>
      <param name="localName">O nome local a ser gravado.</param>
      <param name="ns">O URI do namespace para o nome.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="localName" /> é <see langword="null" /> ou <see langword="String.Empty" />.  
 <paramref name="localName" /> não é um nome válido.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteQualifiedNameAsync(System.String,System.String)">
      <summary>Grava de forma assíncrona o nome qualificado do namespace. Este método pesquisa o prefixo que está no escopo para o namespace fornecido.</summary>
      <param name="localName">O nome local a ser gravado.</param>
      <param name="ns">O URI do namespace para o nome.</param>
      <returns>Uma tarefa que representa a operação <see langword="WriteQualifiedName" /> assíncrona.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.

ou -

Um método assíncrono <see cref="T:System.Xml.XmlWriter" /> foi chamado sem definir o sinalizador <see cref="P:System.Xml.XmlWriterSettings.Async" /> como <see langword="true" />. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Defina XmlWriterSettings.Async como verdadeiro se desejar usar Métodos Assíncronos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
      <summary>Quando substituído em uma classe derivada, grava a marcação bruta manualmente de um buffer de caracteres.</summary>
      <param name="buffer">Uma matriz de caracteres que contém o texto a ser gravado.</param>
      <param name="index">A posição no buffer que indica o início do texto a ser escrito.</param>
      <param name="count">O número de caracteres a serem gravados.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ou <paramref name="count" /> é menor que zero.  

ou - 
O tamanho do buffer menos <paramref name="index" /> é menor que <paramref name="count" />.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteRaw(System.String)">
      <summary>Quando substituído em uma classe derivada, grava manualmente a marcação bruta de uma cadeia de caracteres.</summary>
      <param name="data">A cadeia de caracteres que contém o texto a ser gravado.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="data" /> é <see langword="null" /> ou <see langword="String.Empty" />.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Grava de forma assíncrona e manual a marcação bruta de um buffer de caracteres.</summary>
      <param name="buffer">Uma matriz de caracteres que contém o texto a ser gravado.</param>
      <param name="index">A posição no buffer que indica o início do texto a ser escrito.</param>
      <param name="count">O número de caracteres a serem gravados.</param>
      <returns>Uma tarefa que representa a operação <see langword="WriteRaw" /> assíncrona.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.

ou -

Um método assíncrono <see cref="T:System.Xml.XmlWriter" /> foi chamado sem definir o sinalizador <see cref="P:System.Xml.XmlWriterSettings.Async" /> como <see langword="true" />. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Defina XmlWriterSettings.Async como verdadeiro se desejar usar Métodos Assíncronos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteRawAsync(System.String)">
      <summary>Grava de forma assíncrona e manual a marcação bruta de uma cadeia de caracteres.</summary>
      <param name="data">A cadeia de caracteres que contém o texto a ser gravado.</param>
      <returns>Uma tarefa que representa a operação <see langword="WriteRaw" /> assíncrona.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.

ou -

Um método assíncrono <see cref="T:System.Xml.XmlWriter" /> foi chamado sem definir o sinalizador <see cref="P:System.Xml.XmlWriterSettings.Async" /> como <see langword="true" />. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Defina XmlWriterSettings.Async como verdadeiro se desejar usar Métodos Assíncronos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)">
      <summary>Grava o início de um atributo com o nome do local especificado.</summary>
      <param name="localName">O nome local do atributo.</param>
      <exception cref="T:System.InvalidOperationException">O gravador está fechado.

ou -

Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
      <exception cref="T:System.Text.EncoderFallbackException">Há um caractere no buffer que é um caractere XML válido, mas que não é válido para a codificação de saída. Por exemplo, se a codificação de saída for ASCII, use apenas caracteres no intervalo de 0 a 127 para nomes de elemento e de atributo. O caractere inválido pode estar no argumento do método ou em um argumento dos métodos anteriores que foram gravados no buffer. Esses caracteres são substituídos por referências de entidade de caracteres de escape quando possível (por exemplo, em nós de texto ou valores de atributo). No entanto, a referência de entidade de caracteres não é permitida em nomes de elemento e de atributo, comentários, instruções de processamento ou seções de CDATA.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)">
      <summary>Grava o início de um atributo com o nome do local e o URI de namespace especificados.</summary>
      <param name="localName">O nome local do atributo.</param>
      <param name="ns">O URI do namespace do atributo.</param>
      <exception cref="T:System.Text.EncoderFallbackException">Há um caractere no buffer que é um caractere XML válido, mas que não é válido para a codificação de saída. Por exemplo, se a codificação de saída for ASCII, use apenas caracteres no intervalo de 0 a 127 para nomes de elemento e de atributo. O caractere inválido pode estar no argumento do método ou em um argumento dos métodos anteriores que foram gravados no buffer. Esses caracteres são substituídos por referências de entidade de caracteres de escape quando possível (por exemplo, em nós de texto ou valores de atributo). No entanto, a referência de entidade de caracteres não é permitida em nomes de elemento e de atributo, comentários, instruções de processamento ou seções de CDATA.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
      <summary>Quando substituído em uma classe derivada, grava o início de um atributo com o prefixo especificado, o nome local e o URI de namespace.</summary>
      <param name="prefix">O prefixo do namespace do atributo.</param>
      <param name="localName">O nome local do atributo.</param>
      <param name="ns">O URI do namespace para o atributo.</param>
      <exception cref="T:System.Text.EncoderFallbackException">Há um caractere no buffer que é um caractere XML válido, mas que não é válido para a codificação de saída. Por exemplo, se a codificação de saída for ASCII, use apenas caracteres no intervalo de 0 a 127 para nomes de elemento e de atributo. O caractere inválido pode estar no argumento do método ou em um argumento dos métodos anteriores que foram gravados no buffer. Esses caracteres são substituídos por referências de entidade de caracteres de escape quando possível (por exemplo, em nós de texto ou valores de atributo). No entanto, a referência de entidade de caracteres não é permitida em nomes de elemento e de atributo, comentários, instruções de processamento ou seções de CDATA.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartAttributeAsync(System.String,System.String,System.String)">
      <summary>Grava de forma assíncrona o início de um atributo com o prefixo, o nome local e o URI de namespace especificados.</summary>
      <param name="prefix">O prefixo do namespace do atributo.</param>
      <param name="localName">O nome local do atributo.</param>
      <param name="ns">O URI do namespace para o atributo.</param>
      <returns>Uma tarefa que representa a operação <see langword="WriteStartAttribute" /> assíncrona.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.

ou -

Um método assíncrono <see cref="T:System.Xml.XmlWriter" /> foi chamado sem definir o sinalizador <see cref="P:System.Xml.XmlWriterSettings.Async" /> como <see langword="true" />. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Defina XmlWriterSettings.Async como verdadeiro se desejar usar Métodos Assíncronos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartDocument">
      <summary>Quando substituído em uma classe derivada, grava a declaração XML com a versão "1.0".</summary>
      <exception cref="T:System.InvalidOperationException">Este não é o primeiro método de gravação chamado após o construtor.

ou -

Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartDocument(System.Boolean)">
      <summary>Quando substituído em uma classe derivada, grava a declaração XML com a versão "1.0" e o atributo autônomo.</summary>
      <param name="standalone">Se <see langword="true" />, grava "standalone=yes"; se <see langword="false" />, ele grava "standalone=no".</param>
      <exception cref="T:System.InvalidOperationException">Este não é o primeiro método de gravação chamado após o construtor.

ou -

Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartDocumentAsync">
      <summary>Grava de forma assíncrona a declaração XML com a versão “1.0”.</summary>
      <returns>Uma tarefa que representa a operação <see langword="WriteStartDocument" /> assíncrona.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.

ou -

Um método assíncrono <see cref="T:System.Xml.XmlWriter" /> foi chamado sem definir o sinalizador <see cref="P:System.Xml.XmlWriterSettings.Async" /> como <see langword="true" />. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Defina XmlWriterSettings.Async como verdadeiro se desejar usar Métodos Assíncronos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartDocumentAsync(System.Boolean)">
      <summary>Grava de forma assíncrona a declaração XML com a versão “1.0” e o atributo autônomo.</summary>
      <param name="standalone">Se <see langword="true" />, grava "standalone=yes"; se <see langword="false" />, ele grava "standalone=no".</param>
      <returns>Uma tarefa que representa a operação <see langword="WriteStartDocument" /> assíncrona.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.

ou -

Um método assíncrono <see cref="T:System.Xml.XmlWriter" /> foi chamado sem definir o sinalizador <see cref="P:System.Xml.XmlWriterSettings.Async" /> como <see langword="true" />. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Defina XmlWriterSettings.Async como verdadeiro se desejar usar Métodos Assíncronos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartElement(System.String)">
      <summary>Quando substituído em uma classe derivada, grava uma marca de início com o nome local especificado.</summary>
      <param name="localName">O nome local do elemento.</param>
      <exception cref="T:System.InvalidOperationException">O gravador está fechado.

ou -

Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
      <exception cref="T:System.Text.EncoderFallbackException">Há um caractere no buffer que é um caractere XML válido, mas que não é válido para a codificação de saída. Por exemplo, se a codificação de saída for ASCII, use apenas caracteres no intervalo de 0 a 127 para nomes de elemento e de atributo. O caractere inválido pode estar no argumento do método ou em um argumento dos métodos anteriores que foram gravados no buffer. Esses caracteres são substituídos por referências de entidade de caracteres de escape quando possível (por exemplo, em nós de texto ou valores de atributo). No entanto, a referência de entidade de caracteres não é permitida em nomes de elemento e de atributo, comentários, instruções de processamento ou seções de CDATA.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
      <summary>Quando substituído em uma classe derivada, grava a marca de início especificada e a associa ao namespace específico.</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="ns">O URI do namespace a ser associado ao elemento. Se este namespace já estiver no escopo e tiver um prefixo associado, o gravador gravará esse prefixo também automaticamente.</param>
      <exception cref="T:System.InvalidOperationException">O gravador está fechado.

ou -

Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
      <exception cref="T:System.Text.EncoderFallbackException">Há um caractere no buffer que é um caractere XML válido, mas que não é válido para a codificação de saída. Por exemplo, se a codificação de saída for ASCII, use apenas caracteres no intervalo de 0 a 127 para nomes de elemento e de atributo. O caractere inválido pode estar no argumento do método ou em um argumento dos métodos anteriores que foram gravados no buffer. Esses caracteres são substituídos por referências de entidade de caracteres de escape quando possível (por exemplo, em nós de texto ou valores de atributo). No entanto, a referência de entidade de caracteres não é permitida em nomes de elemento e de atributo, comentários, instruções de processamento ou seções de CDATA.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
      <summary>Quando substituído em uma classe derivada, grava a marca de início especificada e a associa ao prefixo e ao namespace específicos.</summary>
      <param name="prefix">O prefixo do namespace do elemento.</param>
      <param name="localName">O nome local do elemento.</param>
      <param name="ns">O URI do namespace a ser associado ao elemento.</param>
      <exception cref="T:System.InvalidOperationException">O gravador está fechado.

ou -

Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
      <exception cref="T:System.Text.EncoderFallbackException">Há um caractere no buffer que é um caractere XML válido, mas que não é válido para a codificação de saída. Por exemplo, se a codificação de saída for ASCII, use apenas caracteres no intervalo de 0 a 127 para nomes de elemento e de atributo. O caractere inválido pode estar no argumento do método ou em um argumento dos métodos anteriores que foram gravados no buffer. Esses caracteres são substituídos por referências de entidade de caracteres de escape quando possível (por exemplo, em nós de texto ou valores de atributo). No entanto, a referência de entidade de caracteres não é permitida em nomes de elemento e de atributo, comentários, instruções de processamento ou seções de CDATA.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartElementAsync(System.String,System.String,System.String)">
      <summary>Grava de forma assíncrona a marca de início especificada e a associa ao namespace e ao prefixo fornecidos.</summary>
      <param name="prefix">O prefixo do namespace do elemento.</param>
      <param name="localName">O nome local do elemento.</param>
      <param name="ns">O URI do namespace a ser associado ao elemento.</param>
      <returns>Uma tarefa que representa a operação <see langword="WriteStartElement" /> assíncrona.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.

ou -

Um método assíncrono <see cref="T:System.Xml.XmlWriter" /> foi chamado sem definir o sinalizador <see cref="P:System.Xml.XmlWriterSettings.Async" /> como <see langword="true" />. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Defina XmlWriterSettings.Async como verdadeiro se desejar usar Métodos Assíncronos”.</exception>
    </member>
    <member name="P:System.Xml.XmlWriter.WriteState">
      <summary>Quando substituído em uma classe derivada, obtém o estado do gravador.</summary>
      <returns>Um dos valores de <see cref="T:System.Xml.WriteState" />.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteString(System.String)">
      <summary>Quando substituído em uma classe derivada, grava o conteúdo de texto especificado.</summary>
      <param name="text">O texto a gravação.</param>
      <exception cref="T:System.ArgumentException">A cadeia de caracteres contém um par alternativo inválido.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStringAsync(System.String)">
      <summary>Grava de forma assíncrona o conteúdo de texto fornecido.</summary>
      <param name="text">O texto a gravação.</param>
      <returns>Uma tarefa que representa a operação <see langword="WriteString" /> assíncrona.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.

ou -

Um método assíncrono <see cref="T:System.Xml.XmlWriter" /> foi chamado sem definir o sinalizador <see cref="P:System.Xml.XmlWriterSettings.Async" /> como <see langword="true" />. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Defina XmlWriterSettings.Async como verdadeiro se desejar usar Métodos Assíncronos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
      <summary>Quando substituído em uma classe derivada, gera e grava a entidade de caracteres alternativos para o par de caracteres alternativos.</summary>
      <param name="lowChar">A alternativa baixa. Este deve ser um valor entre 0xDC00 e 0xDFFF.</param>
      <param name="highChar">A alternativa alta. Este deve ser um valor entre 0xD800 e 0xDBFF.</param>
      <exception cref="T:System.ArgumentException">Um par de caracteres alternativos inválido foi passado.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)">
      <summary>Gera e grava a entidade de caracteres alternativos de forma assíncrona para o par de caracteres alternativos.</summary>
      <param name="lowChar">A alternativa baixa. Este deve ser um valor entre 0xDC00 e 0xDFFF.</param>
      <param name="highChar">A alternativa alta. Este deve ser um valor entre 0xD800 e 0xDBFF.</param>
      <returns>Uma tarefa que representa a operação <see langword="WriteSurrogateCharEntity" /> assíncrona.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.

ou -

Um método assíncrono <see cref="T:System.Xml.XmlWriter" /> foi chamado sem definir o sinalizador <see cref="P:System.Xml.XmlWriterSettings.Async" /> como <see langword="true" />. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Defina XmlWriterSettings.Async como verdadeiro se desejar usar Métodos Assíncronos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Boolean)">
      <summary>Grava um valor <see cref="T:System.Boolean" />.</summary>
      <param name="value">O valor <see cref="T:System.Boolean" /> a ser gravado.</param>
      <exception cref="T:System.ArgumentException">Um valor inválido foi especificado.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.DateTime)">
      <summary>Grava um valor <see cref="T:System.DateTime" />.</summary>
      <param name="value">O valor <see cref="T:System.DateTime" /> a ser gravado.</param>
      <exception cref="T:System.ArgumentException">Um valor inválido foi especificado.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.DateTimeOffset)">
      <summary>Grava um valor <see cref="T:System.DateTimeOffset" />.</summary>
      <param name="value">O valor <see cref="T:System.DateTimeOffset" /> a ser gravado.</param>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Decimal)">
      <summary>Grava um valor <see cref="T:System.Decimal" />.</summary>
      <param name="value">O valor <see cref="T:System.Decimal" /> a ser gravado.</param>
      <exception cref="T:System.ArgumentException">Um valor inválido foi especificado.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Double)">
      <summary>Grava um valor <see cref="T:System.Double" />.</summary>
      <param name="value">O valor <see cref="T:System.Double" /> a ser gravado.</param>
      <exception cref="T:System.ArgumentException">Um valor inválido foi especificado.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Int32)">
      <summary>Grava um valor <see cref="T:System.Int32" />.</summary>
      <param name="value">O valor <see cref="T:System.Int32" /> a ser gravado.</param>
      <exception cref="T:System.ArgumentException">Um valor inválido foi especificado.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Int64)">
      <summary>Grava um valor <see cref="T:System.Int64" />.</summary>
      <param name="value">O valor <see cref="T:System.Int64" /> a ser gravado.</param>
      <exception cref="T:System.ArgumentException">Um valor inválido foi especificado.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Object)">
      <summary>Grava o valor do objeto.</summary>
      <param name="value">O valor do objeto a ser gravado.  
 Observação na versão .NET Framework 3.5, esse método aceita <see cref="T:System.DateTimeOffset" /> como um parâmetro.</param>
      <exception cref="T:System.ArgumentException">Um valor inválido foi especificado.</exception>
      <exception cref="T:System.ArgumentNullException">O <paramref name="value" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">O gravador está fechado ou em estado de erro.

ou -

Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Single)">
      <summary>Grava um número de ponto flutuante de precisão simples.</summary>
      <param name="value">O número de ponto flutuante de precisão simples a ser gravado.</param>
      <exception cref="T:System.ArgumentException">Um valor inválido foi especificado.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.String)">
      <summary>Grava um valor <see cref="T:System.String" />.</summary>
      <param name="value">O valor <see cref="T:System.String" /> a ser gravado.</param>
      <exception cref="T:System.ArgumentException">Um valor inválido foi especificado.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteWhitespace(System.String)">
      <summary>Quando substituído em uma classe derivada, grava o espaço em branco determinado.</summary>
      <param name="ws">A cadeia de caracteres de espaço em branco.</param>
      <exception cref="T:System.ArgumentException">A cadeia de caracteres contém caracteres que não sejam em branco.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteWhitespaceAsync(System.String)">
      <summary>Grava de forma assíncrona o espaço em branco determinado.</summary>
      <param name="ws">A cadeia de caracteres de espaço em branco.</param>
      <returns>Uma tarefa que representa a operação <see langword="WriteWhitespace" /> assíncrona.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.

ou -

Um método assíncrono <see cref="T:System.Xml.XmlWriter" /> foi chamado sem definir o sinalizador <see cref="P:System.Xml.XmlWriterSettings.Async" /> como <see langword="true" />. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Defina XmlWriterSettings.Async como verdadeiro se desejar usar Métodos Assíncronos”.</exception>
    </member>
    <member name="P:System.Xml.XmlWriter.XmlLang">
      <summary>Quando substituído em uma classe derivada, obtém o escopo <see langword="xml:lang" /> atual.</summary>
      <returns>O escopo <see langword="xml:lang" /> atual.</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="P:System.Xml.XmlWriter.XmlSpace">
      <summary>Quando substituído em uma classe derivada, obtém um <see cref="T:System.Xml.XmlSpace" /> que representa o escopo <see langword="xml:space" /> atual.</summary>
      <returns>Um <see langword="XmlSpace" /> que representa o escopo de <see langword="xml:space" /> atual.  
  Valor 
  Significado 
 <see langword="None" /> Esse será o padrão se não existir nenhum escopo de <see langword="xml:space" /> .  

 <see langword="Default" /> O escopo atual é <see langword="xml:space" />="default".  

 <see langword="Preserve" /> O escopo atual é <see langword="xml:space" />="preserve".</returns>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="T:System.Xml.XmlWriterSettings">
      <summary>Especifica um conjunto de recursos para dar suporte ao objeto <see cref="T:System.Xml.XmlWriter" /> criado pelo método <see cref="Overload:System.Xml.XmlWriter.Create" />.</summary>
    </member>
    <member name="M:System.Xml.XmlWriterSettings.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.Async">
      <summary>Obtém ou define um valor que indica se métodos <see cref="T:System.Xml.XmlWriter" /> assíncronos podem ser usados em uma instância <see cref="T:System.Xml.XmlWriter" /> específica.</summary>
      <returns>
        <see langword="true" /> se métodos assíncronos puderem ser usados; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.CheckCharacters">
      <summary>Obtém ou define um valor que indica se o gravador XML deve verificar para garantir que todos os caracteres do documento estejam em conformidade com a seção “2.2 Caracteres” da Recomendação de XML 1.0 do W3C.</summary>
      <returns>
        <see langword="true" /> para fazer a verificação de caracteres; caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xml.XmlWriterSettings.Clone">
      <summary>Cria uma cópia da instância <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
      <returns>O objeto <see cref="T:System.Xml.XmlWriterSettings" /> clonado.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.CloseOutput">
      <summary>Obtém ou define um valor que indica se o <see cref="T:System.Xml.XmlWriter" /> deve fechar também o fluxo subjacente ou <see cref="T:System.IO.TextWriter" /> quando o método <see cref="M:System.Xml.XmlWriter.Close" /> for chamado.</summary>
      <returns>
        <see langword="true" /> para fechar também o fluxo subjacente ou <see cref="T:System.IO.TextWriter" />; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.ConformanceLevel">
      <summary>Obtém ou define o nível de conformidade em relação ao qual o gravador de XML verifica a saída XML.</summary>
      <returns>Um dos valores de enumeração que especificam o nível de conformidade (documento, fragmento ou detecção automática). O padrão é <see cref="F:System.Xml.ConformanceLevel.Document" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.DoNotEscapeUriAttributes">
      <summary>Obtém ou define um valor que indica se o <see cref="T:System.Xml.XmlWriter" /> não escapa atributos de URI.</summary>
      <returns>
        <see langword="true" />Se o <see cref="T:System.Xml.XmlWriter" /> não escapar dos atributos de URI; caso <see langword="false" />contrário,. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.Encoding">
      <summary>Obtém ou define o tipo de codificação de texto a usar.</summary>
      <returns>A codificação de texto a ser usada. O padrão é <see langword="Encoding.UTF8" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.Indent">
      <summary>Obtém ou define um valor que indica se deseja recuar elementos.</summary>
      <returns>
        <see langword="true" /> para gravar elementos individuais em novas linhas e recuo; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.IndentChars">
      <summary>Especifica ou define a cadeia de caracteres a ser usada ao recuar. Esta configuração é usada quando a propriedade <see cref="P:System.Xml.XmlWriterSettings.Indent" /> for definida como <see langword="true" />.</summary>
      <returns>A cadeia de caracteres a ser usada ao recuar. Isso pode ser definido para qualquer valor de cadeia de caracteres. No entanto, para garantir um XML válido, você deve especificar somente caracteres de espaço em branco válidos, como caracteres de espaço, tabulações, retornos de carro ou alimentações de linha. O padrão é os dois espaços.</returns>
      <exception cref="T:System.ArgumentNullException">O valor atribuído ao <see cref="P:System.Xml.XmlWriterSettings.IndentChars" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.NamespaceHandling">
      <summary>Obtém ou define um valor que indica se o <see cref="T:System.Xml.XmlWriter" /> deve remover declarações de namespace duplicadas ao gravar o conteúdo XML. O comportamento padrão do gravador é produzir todas as declarações de namespace presentes no resolvedor do namespace do gravador como saída.</summary>
      <returns>A enumeração <see cref="T:System.Xml.NamespaceHandling" /> usada para especificar se as declarações de namespace duplicadas do <see cref="T:System.Xml.XmlWriter" /> serão removidas.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.NewLineChars">
      <summary>Obtém ou define a cadeia de caracteres a ser usada para quebras de linha.</summary>
      <returns>A cadeia de caracteres a ser usada para quebras de linha. Isso pode ser definido para qualquer valor de cadeia de caracteres. No entanto, para garantir um XML válido, você deve especificar somente caracteres de espaço em branco válidos, como caracteres de espaço, tabulações, retornos de carro ou alimentações de linha. O padrão é <c>\r\n</c> (retorno de carro, nova linha).</returns>
      <exception cref="T:System.ArgumentNullException">O valor atribuído ao <see cref="P:System.Xml.XmlWriterSettings.NewLineChars" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.NewLineHandling">
      <summary>Obtém ou define um valor que indica se você deseja normalizar quebras de linha na saída.</summary>
      <returns>Um dos valores de <see cref="T:System.Xml.NewLineHandling" />. O padrão é <see cref="F:System.Xml.NewLineHandling.Replace" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.NewLineOnAttributes">
      <summary>Obtém ou define um valor que indica se os atributos devem ser gravados em uma nova linha.</summary>
      <returns>
        <see langword="true" /> para gravar atributos em linhas individuais; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.  
   
 Essa configuração não tem efeito quando o valor da propriedade <see cref="P:System.Xml.XmlWriterSettings.Indent" /> é <see langword="false" />.  

  

 Quando <see cref="P:System.Xml.XmlWriterSettings.NewLineOnAttributes" /> é definido como <see langword="true" />, cada atributo precede uma nova linha e um nível extra de recuo.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.OmitXmlDeclaration">
      <summary>Obtém ou define um valor que indica se uma declaração XML deve ser omitida.</summary>
      <returns>
        <see langword="true" /> para omitir a declaração XML; caso contrário, <see langword="false" />. O padrão é <see langword="false" />, uma declaração XML é gravada.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.OutputMethod">
      <summary>Obtém o método usado para serializar a saída <see cref="T:System.Xml.XmlWriter" />.</summary>
      <returns>Um dos valores de <see cref="T:System.Xml.XmlOutputMethod" />. O padrão é <see cref="F:System.Xml.XmlOutputMethod.Xml" />.</returns>
    </member>
    <member name="M:System.Xml.XmlWriterSettings.Reset">
      <summary>Redefine os membros da classe de configurações para seus valores padrão.</summary>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose">
      <summary>Obtém ou define um valor que indica se o <see cref="T:System.Xml.XmlWriter" /> adicionará marcas de fechamento a odas as marcas de elemento que não estiverem fechadas quando o método <see cref="M:System.Xml.XmlWriter.Close" /> for chamado.</summary>
      <returns>
        <see langword="true" /> para fechar todas as marcas de elemento não fechadas. Caso contrário, <see langword="false" />. O valor padrão é <see langword="true" />.</returns>
    </member>
    <member name="T:System.Xml.XPath.IXPathNavigable">
      <summary>Fornece um acessador para a classe <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
    </member>
    <member name="M:System.Xml.XPath.IXPathNavigable.CreateNavigator">
      <summary>Retorna um novo objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> .</summary>
      <returns>Um objeto <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="T:System.Xml.XPath.XmlCaseOrder">
      <summary>Especifica a ordem de classificação para letras maiúsculas e minúsculas.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlCaseOrder.LowerFirst">
      <summary>As letras minúsculas são classificadas antes das letras maiúsculas.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlCaseOrder.None">
      <summary>Ignorar a diferenciação de maiúsculas e minúsculas.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlCaseOrder.UpperFirst">
      <summary>As letras maiúsculas são classificadas antes das letras minúsculas.</summary>
    </member>
    <member name="T:System.Xml.XPath.XmlDataType">
      <summary>Especifica o tipo de dados usado para determinar a ordem de classificação.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlDataType.Number">
      <summary>Os valores são classificados numericamente.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlDataType.Text">
      <summary>Os valores são classificados em ordem alfabética.</summary>
    </member>
    <member name="T:System.Xml.XPath.XmlSortOrder">
      <summary>Especifica a ordem de classificação.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlSortOrder.Ascending">
      <summary>Os nós são classificados em ordem crescente. Por exemplo, se os números 1, 2, 3 e 4 forem classificados em ordem crescente, eles aparecerão como 1, 2, 3, 4.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlSortOrder.Descending">
      <summary>Os nós são classificados em ordem decrescente. Por exemplo, se os números 1, 2, 3 e 4 forem classificados em ordem decrescente, eles aparecerão como 4, 3, 2, 1.</summary>
    </member>
    <member name="T:System.Xml.XPath.XPathExpression">
      <summary>Fornece uma classe de tipo que representa uma expressão XPath compilada.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.AddSort(System.Object,System.Collections.IComparer)">
      <summary>Quando substituído em uma classe derivada, classifica os nós selecionados pela expressão XPath de acordo com o objeto <see cref="T:System.Collections.IComparer" /> especificado.</summary>
      <param name="expr">Um objeto que representa a chave de classificação. Isso pode ser o valor <see langword="string" /> do nó ou um objeto <see cref="T:System.Xml.XPath.XPathExpression" /> com uma expressão XPath compilada.</param>
      <param name="comparer">Um objeto <see cref="T:System.Collections.IComparer" /> que fornece as comparações de tipo de dados específico para comparar dois objetos quanto à equivalência.</param>
      <exception cref="T:System.Xml.XPath.XPathException">O <see cref="T:System.Xml.XPath.XPathExpression" /> ou a chave de classificação inclui um prefixo e um <see cref="T:System.Xml.XmlNamespaceManager" /> não é fornecido ou o prefixo não pode ser encontrado no <see cref="T:System.Xml.XmlNamespaceManager" /> fornecido.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.AddSort(System.Object,System.Xml.XPath.XmlSortOrder,System.Xml.XPath.XmlCaseOrder,System.String,System.Xml.XPath.XmlDataType)">
      <summary>Quando substituído em uma classe derivada, classifica os nós selecionados pela expressão XPath de acordo com os parâmetros fornecidos.</summary>
      <param name="expr">Um objeto que representa a chave de classificação. Isso pode ser o valor <see langword="string" /> do nó ou um objeto <see cref="T:System.Xml.XPath.XPathExpression" /> com uma expressão XPath compilada.</param>
      <param name="order">Um valor <see cref="T:System.Xml.XPath.XmlSortOrder" /> que indica a ordem de classificação.</param>
      <param name="caseOrder">Um valor <see cref="T:System.Xml.XPath.XmlCaseOrder" /> que indica como classificar letras maiúsculas e minúsculas.</param>
      <param name="lang">O idioma a ser usado para comparação. Usa a classe <see cref="T:System.Globalization.CultureInfo" /> que pode ser passada para o método <see cref="Overload:System.String.Compare" /> para os tipos de idioma, por exemplo, “us-en” para inglês dos EUA. Se uma cadeia de caracteres vazia for especificada, o ambiente do sistema será usado para determinar a <see cref="T:System.Globalization.CultureInfo" />.</param>
      <param name="dataType">Um valor <see cref="T:System.Xml.XPath.XmlDataType" /> que indica a ordem de classificação para o tipo de dados.</param>
      <exception cref="T:System.Xml.XPath.XPathException">O <see cref="T:System.Xml.XPath.XPathExpression" /> ou a chave de classificação inclui um prefixo e um <see cref="T:System.Xml.XmlNamespaceManager" /> não é fornecido ou o prefixo não pode ser encontrado no <see cref="T:System.Xml.XmlNamespaceManager" /> fornecido.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.Clone">
      <summary>Quando substituído em uma classe derivada, retorna um clone deste <see cref="T:System.Xml.XPath.XPathExpression" />.</summary>
      <returns>Um novo objeto <see cref="T:System.Xml.XPath.XPathExpression" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.Compile(System.String)">
      <summary>Compila a expressão XPath especificada e retorna um objeto <see cref="T:System.Xml.XPath.XPathExpression" /> que representa a expressão XPath.</summary>
      <param name="xpath">Uma expressão XPath.</param>
      <returns>Um objeto <see cref="T:System.Xml.XPath.XPathExpression" />.</returns>
      <exception cref="T:System.ArgumentException">O parâmetro da expressão XPath não é uma expressão XPath válida.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">A expressão XPath não é válida.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.Compile(System.String,System.Xml.IXmlNamespaceResolver)">
      <summary>Compila a expressão XPath especificada incluindo o objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> especificado para resolução de namespaces e retorna um objeto <see cref="T:System.Xml.XPath.XPathExpression" /> que representa a expressão XPath.</summary>
      <param name="xpath">Uma expressão XPath.</param>
      <param name="nsResolver">Um objeto que implementa a interface do <see cref="T:System.Xml.IXmlNamespaceResolver" /> para resolução de namespaces.</param>
      <returns>Um objeto <see cref="T:System.Xml.XPath.XPathExpression" />.</returns>
      <exception cref="T:System.ArgumentException">O parâmetro da expressão XPath não é uma expressão XPath válida.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">A expressão XPath não é válida.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathExpression.Expression">
      <summary>Quando substituído em uma classe derivada, obtém uma representação de <see langword="string" /> do <see cref="T:System.Xml.XPath.XPathExpression" />.</summary>
      <returns>Uma representação de <see langword="string" /> do <see cref="T:System.Xml.XPath.XPathExpression" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathExpression.ReturnType">
      <summary>Quando substituído em uma classe derivada, obtém ou define o tipo de resultado da expressão XPath.</summary>
      <returns>Um <see cref="T:System.Xml.XPath.XPathResultType" /> valor que representa o tipo de resultado da expressão XPath.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.IXmlNamespaceResolver)">
      <summary>Quando substituído em uma classe derivada, especifica o objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> a ser usado para resolução de namespace.</summary>
      <param name="nsResolver">Um objeto que implementa a interface <see cref="T:System.Xml.IXmlNamespaceResolver" /> a ser usada para resolução de namespaces.</param>
      <exception cref="T:System.Xml.XPath.XPathException">O parâmetro de objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> não é derivado de <see cref="T:System.Xml.IXmlNamespaceResolver" />.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)">
      <summary>Quando substituído em uma classe derivada, especifica o objeto <see cref="T:System.Xml.XmlNamespaceManager" /> a ser usado para resolução de namespace.</summary>
      <param name="nsManager">Um objeto <see cref="T:System.Xml.XmlNamespaceManager" /> a ser usado para resolução de namespace.</param>
      <exception cref="T:System.Xml.XPath.XPathException">O parâmetro de objeto <see cref="T:System.Xml.XmlNamespaceManager" /> não é derivado da classe <see cref="T:System.Xml.XmlNamespaceManager" />.</exception>
    </member>
    <member name="T:System.Xml.XPath.XPathItem">
      <summary>Representa um item no modelo de dados XQuery 1.0 e XPath 2.0.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathItem.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.XPath.XPathItem" />.</summary>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.IsNode">
      <summary>Quando substituído em uma classe derivada, obtém um valor que indica se o item representa um valor atômico ou um nó XPath.</summary>
      <returns>
        <see langword="true" />Se o item representa um nó XPath; <see langword="false" /> se o item representa um valor atômico.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.TypedValue">
      <summary>Quando substituído em uma classe derivada, obtém o item atual como um objeto demarcado do tipo .NET Framework 2.0 mais apropriado de acordo com seu tipo de esquema.</summary>
      <returns>O item atual como um objeto de caixa do tipo mais .NET Framework apropriado.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.Value">
      <summary>Quando substituído em uma classe derivada, obtém o valor <see langword="string" /> do item.</summary>
      <returns>O valor <see langword="string" /> do item.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathItem.ValueAs(System.Type)">
      <summary>Retorna o valor do item como o tipo especificado.</summary>
      <param name="returnType">O tipo como o qual o valor do item deverá ser retornado.</param>
      <returns>O valor do item como o tipo solicitado.</returns>
      <exception cref="T:System.FormatException">O valor do item não está no formato correto para o tipo de destino.</exception>
      <exception cref="T:System.InvalidCastException">A tentativa de conversão não é válida.</exception>
      <exception cref="T:System.OverflowException">A tentativa de conversão resultou em um estouro.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathItem.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Quando substituído em uma classe derivada, retorna o valor do item como o tipo especificado usando o objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> especificado para resolver os prefixos de namespace.</summary>
      <param name="returnType">O tipo como o qual o valor do item deverá ser retornado.</param>
      <param name="nsResolver">O objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> usado para resolver prefixos de namespace.</param>
      <returns>O valor do item como o tipo solicitado.</returns>
      <exception cref="T:System.FormatException">O valor do item não está no formato correto para o tipo de destino.</exception>
      <exception cref="T:System.InvalidCastException">A tentativa de conversão não é válida.</exception>
      <exception cref="T:System.OverflowException">A tentativa de conversão resultou em um estouro.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueAsBoolean">
      <summary>Quando substituído em uma classe derivada, obtém o valor do item como um <see cref="T:System.Boolean" />.</summary>
      <returns>O valor do item como um <see cref="T:System.Boolean" />.</returns>
      <exception cref="T:System.FormatException">O valor do item não está no formato correto para o tipo <see cref="T:System.Boolean" />.</exception>
      <exception cref="T:System.InvalidCastException">A tentativa de conversão em <see cref="T:System.Boolean" /> não é válida.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueAsDateTime">
      <summary>Quando substituído em uma classe derivada, obtém o valor do item como um <see cref="T:System.DateTime" />.</summary>
      <returns>O valor do item como um <see cref="T:System.DateTime" />.</returns>
      <exception cref="T:System.FormatException">O valor do item não está no formato correto para o tipo <see cref="T:System.DateTime" />.</exception>
      <exception cref="T:System.InvalidCastException">A tentativa de conversão em <see cref="T:System.DateTime" /> não é válida.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueAsDouble">
      <summary>Quando substituído em uma classe derivada, obtém o valor do item como um <see cref="T:System.Double" />.</summary>
      <returns>O valor do item como um <see cref="T:System.Double" />.</returns>
      <exception cref="T:System.FormatException">O valor do item não está no formato correto para o tipo <see cref="T:System.Double" />.</exception>
      <exception cref="T:System.InvalidCastException">A tentativa de conversão em <see cref="T:System.Double" /> não é válida.</exception>
      <exception cref="T:System.OverflowException">A tentativa de conversão resultou em um estouro.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueAsInt">
      <summary>Quando substituído em uma classe derivada, obtém o valor do item como um <see cref="T:System.Int32" />.</summary>
      <returns>O valor do item como um <see cref="T:System.Int32" />.</returns>
      <exception cref="T:System.FormatException">O valor do item não está no formato correto para o tipo <see cref="T:System.Int32" />.</exception>
      <exception cref="T:System.InvalidCastException">A tentativa de conversão em <see cref="T:System.Int32" /> não é válida.</exception>
      <exception cref="T:System.OverflowException">A tentativa de conversão resultou em um estouro.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueAsLong">
      <summary>Quando substituído em uma classe derivada, obtém o valor do item como um <see cref="T:System.Int64" />.</summary>
      <returns>O valor do item como um <see cref="T:System.Int64" />.</returns>
      <exception cref="T:System.FormatException">O valor do item não está no formato correto para o tipo <see cref="T:System.Int64" />.</exception>
      <exception cref="T:System.InvalidCastException">A tentativa de conversão em <see cref="T:System.Int64" /> não é válida.</exception>
      <exception cref="T:System.OverflowException">A tentativa de conversão resultou em um estouro.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueType">
      <summary>Quando substituído em uma classe derivada, obtém o tipo .NET Framework 2.0 do item.</summary>
      <returns>O .NET Framework tipo do item. O valor padrão é <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.XmlType">
      <summary>Quando substituído em uma classe derivada, obtém o <see cref="T:System.Xml.Schema.XmlSchemaType" /> do item.</summary>
      <returns>O <see cref="T:System.Xml.Schema.XmlSchemaType" /> para o item.</returns>
    </member>
    <member name="T:System.Xml.XPath.XPathNamespaceScope">
      <summary>Define o escopo de namespace.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNamespaceScope.All">
      <summary>Retorna todos os namespaces definidos no escopo do nó atual. Isso inclui o namespace <c>xmlns:xml</c> que sempre é declarado implicitamente. A ordem dos namespaces retornados não está definida.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNamespaceScope.ExcludeXml">
      <summary>Retorna todos os namespaces definidos no escopo do nó atual, excluindo o namespace <c>xmlns:xml</c>. O namespace <c>xmlns:xml</c> é sempre declarado implicitamente. A ordem dos namespaces retornados não está definida.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNamespaceScope.Local">
      <summary>Retorna todos os namespaces definidos localmente no nó atual.</summary>
    </member>
    <member name="T:System.Xml.XPath.XPathNavigator">
      <summary>Fornece um modelo de cursor para navegar e editar dados XML.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.AppendChild">
      <summary>Retorna um objeto <see cref="T:System.Xml.XmlWriter" /> usado para criar um ou mais novos nós filhos no final da lista de nós filhos do nó atual.</summary>
      <returns>Um objeto <see cref="T:System.Xml.XmlWriter" /> usado para criar novos nós filhos no final da lista de nós filhos do nó atual.</returns>
      <exception cref="T:System.InvalidOperationException">O nó atual no qual <see cref="T:System.Xml.XPath.XPathNavigator" /> está posicionado não é o nó raiz nem um nó de elemento.</exception>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.AppendChild(System.String)">
      <summary>Cria um novo nó filho ao final da lista de nós filho do nó atual usando a cadeia de caracteres de dados XML especificada.</summary>
      <param name="newChild">A cadeia de dados XML do novo nó filho.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro de cadeia de caracteres de dados XML é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">O nó atual no qual <see cref="T:System.Xml.XPath.XPathNavigator" /> está posicionado não é o nó raiz nem um nó de elemento.</exception>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
      <exception cref="T:System.Xml.XmlException">O parâmetro de cadeia de caracteres de dados XML não está bem formado.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.AppendChild(System.Xml.XmlReader)">
      <summary>Cria um novo nó filho ao final da lista de nós filho do nó atual usando o conteúdo XML do objeto <see cref="T:System.Xml.XmlReader" /> especificado.</summary>
      <param name="newChild">Um objeto <see cref="T:System.Xml.XmlReader" /> posicionado nos dados XML para o novo nó filho.</param>
      <exception cref="T:System.ArgumentException">O objeto <see cref="T:System.Xml.XmlReader" /> está em um estado de erro ou fechado.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro do objeto <see cref="T:System.Xml.XmlReader" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">O nó atual no qual <see cref="T:System.Xml.XPath.XPathNavigator" /> está posicionado não é o nó raiz nem um nó de elemento.</exception>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
      <exception cref="T:System.Xml.XmlException">O conteúdo XML do parâmetro de objeto <see cref="T:System.Xml.XmlReader" /> não está bem formado.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.AppendChild(System.Xml.XPath.XPathNavigator)">
      <summary>Cria um novo nó filho ao final da lista de nós filho do nó atual usando os nós no <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado.</summary>
      <param name="newChild">Um objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> posicionado no nó a ser adicionado como o novo nó filho.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro do objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">O nó atual no qual <see cref="T:System.Xml.XPath.XPathNavigator" /> está posicionado não é o nó raiz nem um nó de elemento.</exception>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.AppendChildElement(System.String,System.String,System.String,System.String)">
      <summary>Cria um novo nó de elemento filho no final da lista de nós filho do nó atual, usando o prefixo do namespace, o nome local e o URI do namespace especificado, com o valor especificado.</summary>
      <param name="prefix">O prefixo de namespace do novo nó do elemento filho (se houver).</param>
      <param name="localName">O nome local do novo nó do elemento filho (se houver).</param>
      <param name="namespaceURI">O URI do namespace do novo nó do elemento filho (se houver). <see cref="F:System.String.Empty" /> e <see langword="null" /> são equivalentes.</param>
      <param name="value">O valor do novo nó do elemento filho. Se <see cref="F:System.String.Empty" /> ou <see langword="null" /> for passado, um elemento vazio será criado.</param>
      <exception cref="T:System.InvalidOperationException">O nó atual no qual <see cref="T:System.Xml.XPath.XPathNavigator" /> está posicionado não é o nó raiz nem um nó de elemento.</exception>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.BaseURI">
      <summary>Quando substituído em uma classe derivada, obtém o URI de base para o nó atual.</summary>
      <returns>O local do qual o nó foi carregado ou <see cref="F:System.String.Empty" /> se não há nenhum valor.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.CanEdit">
      <summary>Obtém um valor que indica se o <see cref="T:System.Xml.XPath.XPathNavigator" /> pode editar os dados XML subjacentes.</summary>
      <returns>
        <see langword="true" />Se o <see cref="T:System.Xml.XPath.XPathNavigator" /> puder editar os dados XML subjacentes; caso <see langword="false" />contrário,.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.CheckValidity(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
      <summary>Verifica se os dados XML no <see cref="T:System.Xml.XPath.XPathNavigator" /> estão em conformidade com o XSD (linguagem de definição de esquema XML) fornecido.</summary>
      <param name="schemas">O <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que contém os esquemas usados para validar os dados XML contidos no <see cref="T:System.Xml.XPath.XPathNavigator" />.</param>
      <param name="validationEventHandler">O <see cref="T:System.Xml.Schema.ValidationEventHandler" /> que recebe informações sobre erros e avisos de validação de esquema.</param>
      <returns>
        <see langword="true" /> se não ocorreu nenhum erro de validação de esquema; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Ocorreu um erro de validação de esquema e nenhum <see cref="T:System.Xml.Schema.ValidationEventHandler" /> foi especificado para lidar com erros de validação.</exception>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> é posicionado em um nó que não é um elemento, atributo nem um nó raiz ou em que não há informações de tipo para executar a validação.</exception>
      <exception cref="T:System.ArgumentException">O método <see cref="M:System.Xml.XPath.XPathNavigator.CheckValidity(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)" /> foi chamado com um parâmetro <see cref="T:System.Xml.Schema.XmlSchemaSet" /> quando o <see cref="T:System.Xml.XPath.XPathNavigator" /> não foi posicionado no nó raiz dos dados XML.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Clone">
      <summary>Quando substituído em uma classe derivada, cria um novo <see cref="T:System.Xml.XPath.XPathNavigator" /> posicionado no mesmo nó que este <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <returns>Um novo <see cref="T:System.Xml.XPath.XPathNavigator" /> posicionado no mesmo nó que este <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ComparePosition(System.Xml.XPath.XPathNavigator)">
      <summary>Compara a posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> atual com a posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado.</summary>
      <param name="nav">O <see cref="T:System.Xml.XPath.XPathNavigator" /> com o qual comparar.</param>
      <returns>Um valor <see cref="T:System.Xml.XmlNodeOrder" /> que representa a posição de comparação dos dois objetos <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Compile(System.String)">
      <summary>Compila uma cadeia de caracteres que representa uma expressão XPath e retorna um objeto <see cref="T:System.Xml.XPath.XPathExpression" />.</summary>
      <param name="xpath">Uma cadeia de caracteres que representa uma expressão XPath.</param>
      <returns>Um objeto <see cref="T:System.Xml.XPath.XPathExpression" /> que representa a expressão XPath.</returns>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="xpath" /> contém uma expressão XPath que não é válida.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">A expressão XPath não é válida.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.CreateAttribute(System.String,System.String,System.String,System.String)">
      <summary>Cria um nó de atributo no nó do elemento atual usando o prefixo de namespace, o nome local e o URI de namespace especificado com o valor especificado.</summary>
      <param name="prefix">O prefixo de namespace do novo nó de atributo (se houver).</param>
      <param name="localName">O nome local do novo nó de atributo que não pode ser <see cref="F:System.String.Empty" /> nem <see langword="null" />.</param>
      <param name="namespaceURI">O URI de namespace do novo nó de atributo (se houver).</param>
      <param name="value">O valor do novo nó de atributo. Se <see cref="F:System.String.Empty" /> ou <see langword="null" /> for passado, um nó de atributo vazio será criado.</param>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não está posicionado em um nó do elemento.</exception>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.CreateAttributes">
      <summary>Retorna um objeto <see cref="T:System.Xml.XmlWriter" /> usado para criar novos atributos no elemento atual.</summary>
      <returns>Um objeto <see cref="T:System.Xml.XmlWriter" /> usado para criar novos atributos no elemento atual.</returns>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não está posicionado em um nó do elemento.</exception>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.CreateNavigator">
      <summary>Retorna uma cópia do <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <returns>Uma cópia <see cref="T:System.Xml.XPath.XPathNavigator" /> deste <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.DeleteRange(System.Xml.XPath.XPathNavigator)">
      <summary>Exclui um intervalo de nós irmãos do nó atual para o nó especificado.</summary>
      <param name="lastSiblingToDelete">Um <see cref="T:System.Xml.XPath.XPathNavigator" /> posicionado no último nó irmão no intervalo a ser excluído.</param>
      <exception cref="T:System.ArgumentNullException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado é <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
      <exception cref="T:System.InvalidOperationException">O último nó a excluir especificado não é um nó irmão válido do nó atual.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.DeleteSelf">
      <summary>Exclui o nó atual e seus nós filho.</summary>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> é posicionado em um nó que não pode ser excluído, como o nó raiz ou um nó de namespace.</exception>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Evaluate(System.String)">
      <summary>Avalia a expressão XPath especificada e retorna o resultado tipado.</summary>
      <param name="xpath">Uma cadeia de caracteres que representa uma expressão XPath que pode ser avaliada.</param>
      <returns>O resultado da expressão (booliano, número, cadeia de caracteres ou conjunto de nós). Ele é mapeado para os objetos <see cref="T:System.Boolean" />, <see cref="T:System.Double" />, <see cref="T:System.String" /> ou <see cref="T:System.Xml.XPath.XPathNodeIterator" />, respectivamente.</returns>
      <exception cref="T:System.ArgumentException">O tipo de retorno da expressão XPath é um conjunto de nós.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">A expressão XPath não é válida.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Evaluate(System.String,System.Xml.IXmlNamespaceResolver)">
      <summary>Avalia a expressão XPath especificada e retorna o resultado tipado, usando o objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> especificado para resolver prefixos de namespace na expressão XPath.</summary>
      <param name="xpath">Uma cadeia de caracteres que representa uma expressão XPath que pode ser avaliada.</param>
      <param name="resolver">O objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> usado para resolver os prefixos de namespace na expressão XPath.</param>
      <returns>O resultado da expressão (booliano, número, cadeia de caracteres ou conjunto de nós). Ele é mapeado para os objetos <see cref="T:System.Boolean" />, <see cref="T:System.Double" />, <see cref="T:System.String" /> ou <see cref="T:System.Xml.XPath.XPathNodeIterator" />, respectivamente.</returns>
      <exception cref="T:System.ArgumentException">O tipo de retorno da expressão XPath é um conjunto de nós.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">A expressão XPath não é válida.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Evaluate(System.Xml.XPath.XPathExpression)">
      <summary>Avalia <see cref="T:System.Xml.XPath.XPathExpression" /> e retorna o resultado de tipo.</summary>
      <param name="expr">Um <see cref="T:System.Xml.XPath.XPathExpression" /> que pode ser avaliado.</param>
      <returns>O resultado da expressão (booliano, número, cadeia de caracteres ou conjunto de nós). Ele é mapeado para os objetos <see cref="T:System.Boolean" />, <see cref="T:System.Double" />, <see cref="T:System.String" /> ou <see cref="T:System.Xml.XPath.XPathNodeIterator" />, respectivamente.</returns>
      <exception cref="T:System.ArgumentException">O tipo de retorno da expressão XPath é um conjunto de nós.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">A expressão XPath não é válida.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Evaluate(System.Xml.XPath.XPathExpression,System.Xml.XPath.XPathNodeIterator)">
      <summary>Usa o contexto fornecido para avaliar o <see cref="T:System.Xml.XPath.XPathExpression" /> e retorna o resultado com tipo.</summary>
      <param name="expr">Um <see cref="T:System.Xml.XPath.XPathExpression" /> que pode ser avaliado.</param>
      <param name="context">Um <see cref="T:System.Xml.XPath.XPathNodeIterator" /> que aponta para o conjunto de nós selecionado em que a avaliação deve ser executada.</param>
      <returns>O resultado da expressão (booliano, número, cadeia de caracteres ou conjunto de nós). Ele é mapeado para os objetos <see cref="T:System.Boolean" />, <see cref="T:System.Double" />, <see cref="T:System.String" /> ou <see cref="T:System.Xml.XPath.XPathNodeIterator" />, respectivamente.</returns>
      <exception cref="T:System.ArgumentException">O tipo de retorno da expressão XPath é um conjunto de nós.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">A expressão XPath não é válida.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.GetAttribute(System.String,System.String)">
      <summary>Obtém o valor do atributo com o nome do local e o URI de namespace especificados.</summary>
      <param name="localName">O nome local do atributo. <paramref name="localName" /> diferencia maiúsculas de minúsculas.</param>
      <param name="namespaceURI">O URI do namespace do atributo.</param>
      <returns>Um <see cref="T:System.String" /> que contém o valor do atributo especificado; <see cref="F:System.String.Empty" /> se um atributo correspondente não for encontrado ou se o <see cref="T:System.Xml.XPath.XPathNavigator" /> não estiver posicionado em um nó de elemento.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.GetNamespace(System.String)">
      <summary>Retorna o valor do nó de namespace que corresponde ao nome local especificado.</summary>
      <param name="name">O nome local do nó de namespace.</param>
      <returns>Um <see cref="T:System.String" /> que contém o valor do nó de namespace; <see cref="F:System.String.Empty" /> se um nó de namespace correspondente não for encontrado ou se o <see cref="T:System.Xml.XPath.XPathNavigator" /> não estiver posicionado em um nó de elemento.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>Retorna os namespaces no escopo do nó atual.</summary>
      <param name="scope">Um valor <see cref="T:System.Xml.XmlNamespaceScope" /> que especifica os namespaces a serem retornados.</param>
      <returns>Uma coleção <see cref="T:System.Collections.Generic.IDictionary`2" /> de nomes de namespace organizada por prefixo.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.HasAttributes">
      <summary>Obtém um valor que indica se o nó atual tem atributos.</summary>
      <returns>
        <see langword="true" />Se o nó atual tiver atributos; retorna <see langword="false" /> se o nó atual não tiver nenhum atributo ou se o <see cref="T:System.Xml.XPath.XPathNavigator" /> não estiver posicionado em um nó de elemento.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.HasChildren">
      <summary>Obtém um valor que indica se o nó atual tem nós filho.</summary>
      <returns>
        <see langword="true" />Se o nó atual tiver qualquer nó filho; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.InnerXml">
      <summary>Obtém ou define a marcação que representa os nós filho do nó atual.</summary>
      <returns>Um <see cref="T:System.String" /> que contém a marcação dos nós filho do nó atual.</returns>
      <exception cref="T:System.InvalidOperationException">A propriedade <see cref="P:System.Xml.XPath.XPathNavigator.InnerXml" /> não pode ser definida.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertAfter">
      <summary>Retorna um objeto <see cref="T:System.Xml.XmlWriter" /> usado para criar um novo nó irmão após o nó atualmente selecionado.</summary>
      <returns>Um objeto <see cref="T:System.Xml.XmlWriter" /> usado para criar um novo nó irmão após o nó atualmente selecionado.</returns>
      <exception cref="T:System.InvalidOperationException">A posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> não permite que um novo nó irmão seja inserido após o nó atual.</exception>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.String)">
      <summary>Cria um novo nó irmão após o nó atualmente selecionado, usando a cadeia de caracteres XML especificada.</summary>
      <param name="newSibling">A cadeia de dados XML para o novo nó irmão.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro da cadeia de caracteres XML é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">A posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> não permite que um novo nó irmão seja inserido após o nó atual.</exception>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
      <exception cref="T:System.Xml.XmlException">O parâmetro da cadeia de caracteres XML não está bem formado.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.Xml.XmlReader)">
      <summary>Cria um novo nó irmão após o nó atualmente selecionado, usando o conteúdo XML do objeto <see cref="T:System.Xml.XmlReader" /> especificado.</summary>
      <param name="newSibling">Um objeto <see cref="T:System.Xml.XmlReader" /> posicionado nos dados XML para o novo nó irmão.</param>
      <exception cref="T:System.ArgumentException">O objeto <see cref="T:System.Xml.XmlReader" /> está em um estado de erro ou fechado.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro do objeto <see cref="T:System.Xml.XmlReader" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">A posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> não permite que um novo nó irmão seja inserido após o nó atual.</exception>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
      <exception cref="T:System.Xml.XmlException">O conteúdo XML do parâmetro de objeto <see cref="T:System.Xml.XmlReader" /> não está bem formado.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.Xml.XPath.XPathNavigator)">
      <summary>Cria um novo nó irmão após o nó atualmente selecionado usando os nós do objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado.</summary>
      <param name="newSibling">Um objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> posicionado no nó a ser adicionado como o novo nó irmão.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro do objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">A posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> não permite que um novo nó irmão seja inserido após o nó atual.</exception>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertBefore">
      <summary>Retorna um objeto <see cref="T:System.Xml.XmlWriter" /> usado para criar um novo nó irmão antes do nó atualmente selecionado.</summary>
      <returns>Um objeto <see cref="T:System.Xml.XmlWriter" /> usado para criar um novo nó irmão antes do nó atualmente selecionado.</returns>
      <exception cref="T:System.InvalidOperationException">A posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> não permite que um novo nó irmão seja inserido antes do nó atual.</exception>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.String)">
      <summary>Cria um novo nó irmão antes do nó atualmente selecionado, usando a cadeia de caracteres XML especificada.</summary>
      <param name="newSibling">A cadeia de dados XML para o novo nó irmão.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro da cadeia de caracteres XML é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">A posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> não permite que um novo nó irmão seja inserido antes do nó atual.</exception>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
      <exception cref="T:System.Xml.XmlException">O parâmetro da cadeia de caracteres XML não está bem formado.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.Xml.XmlReader)">
      <summary>Cria um novo nó irmão antes do nó atualmente selecionado, usando o conteúdo XML do objeto <see cref="T:System.Xml.XmlReader" /> especificado.</summary>
      <param name="newSibling">Um objeto <see cref="T:System.Xml.XmlReader" /> posicionado nos dados XML para o novo nó irmão.</param>
      <exception cref="T:System.ArgumentException">O objeto <see cref="T:System.Xml.XmlReader" /> está em um estado de erro ou fechado.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro do objeto <see cref="T:System.Xml.XmlReader" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">A posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> não permite que um novo nó irmão seja inserido antes do nó atual.</exception>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
      <exception cref="T:System.Xml.XmlException">O conteúdo XML do parâmetro de objeto <see cref="T:System.Xml.XmlReader" /> não está bem formado.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.Xml.XPath.XPathNavigator)">
      <summary>Cria um novo nó irmão antes do nó atualmente selecionado, usando os nós no <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado.</summary>
      <param name="newSibling">Um objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> posicionado no nó a ser adicionado como o novo nó irmão.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro do objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">A posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> não permite que um novo nó irmão seja inserido antes do nó atual.</exception>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertElementAfter(System.String,System.String,System.String,System.String)">
      <summary>Cria um novo elemento irmão após o nó atual usando o prefixo de namespace, o nome local e o URI de namespace especificado, com o valor especificado.</summary>
      <param name="prefix">O prefixo de namespace do novo elemento filho (se houver).</param>
      <param name="localName">O nome local do novo elemento filho (se houver).</param>
      <param name="namespaceURI">O URI de namespace do novo elemento filho (se houver). <see cref="F:System.String.Empty" /> e <see langword="null" /> são equivalentes.</param>
      <param name="value">O valor do novo elemento filho. Se <see cref="F:System.String.Empty" /> ou <see langword="null" /> for passado, um elemento vazio será criado.</param>
      <exception cref="T:System.InvalidOperationException">A posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> não permite que um novo nó irmão seja inserido após o nó atual.</exception>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertElementBefore(System.String,System.String,System.String,System.String)">
      <summary>Cria um novo elemento irmão antes do nó atual usando o prefixo de namespace, o nome local e o URI de namespace especificado, com o valor especificado.</summary>
      <param name="prefix">O prefixo de namespace do novo elemento filho (se houver).</param>
      <param name="localName">O nome local do novo elemento filho (se houver).</param>
      <param name="namespaceURI">O URI de namespace do novo elemento filho (se houver). <see cref="F:System.String.Empty" /> e <see langword="null" /> são equivalentes.</param>
      <param name="value">O valor do novo elemento filho. Se <see cref="F:System.String.Empty" /> ou <see langword="null" /> for passado, um elemento vazio será criado.</param>
      <exception cref="T:System.InvalidOperationException">A posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> não permite que um novo nó irmão seja inserido antes do nó atual.</exception>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.IsDescendant(System.Xml.XPath.XPathNavigator)">
      <summary>Determina se o <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado é um descendente do <see cref="T:System.Xml.XPath.XPathNavigator" /> atual.</summary>
      <param name="nav">O <see cref="T:System.Xml.XPath.XPathNavigator" /> para comparar com esse <see cref="T:System.Xml.XPath.XPathNavigator" />.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado é um descendente do <see cref="T:System.Xml.XPath.XPathNavigator" /> atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.IsEmptyElement">
      <summary>Quando substituído em uma classe derivada, obtém um valor que indica se o nó atual é um elemento vazio sem uma marca de elemento final.</summary>
      <returns>
        <see langword="true" />Se o nó atual for um elemento vazio; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.IsNode">
      <summary>Obtém um valor que indica se o nó atual representa um nó XPath.</summary>
      <returns>Sempre retorna <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.IsSamePosition(System.Xml.XPath.XPathNavigator)">
      <summary>Quando substituído em uma classe derivada, determina se o <see cref="T:System.Xml.XPath.XPathNavigator" /> atual está na mesma posição que o <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado.</summary>
      <param name="other">O <see cref="T:System.Xml.XPath.XPathNavigator" /> para comparar com esse <see cref="T:System.Xml.XPath.XPathNavigator" />.</param>
      <returns>
        <see langword="true" /> se dois objetos <see cref="T:System.Xml.XPath.XPathNavigator" /> tiverem a mesma posição; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.LocalName">
      <summary>Quando substituído em uma classe derivada, obtém o <see cref="P:System.Xml.XPath.XPathNavigator.Name" /> do nó atual sem nenhum prefixo de namespace.</summary>
      <returns>Um <see cref="T:System.String" /> que contém o nome local do nó atual ou <see cref="F:System.String.Empty" /> se o nó atual não tem um nome (por exemplo, nós de texto ou comentário).</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.LookupNamespace(System.String)">
      <summary>Obtém o URI do namespace do prefixo especificado.</summary>
      <param name="prefix">O prefixo cujo URI de namespace você deseja resolver. Para corresponder o namespace padrão, passe <see cref="F:System.String.Empty" />.</param>
      <returns>Um <see cref="T:System.String" /> que contém o URI de namespace atribuído ao prefixo de namespace especificado; <see langword="null" /> se nenhum URI de namespace for atribuído ao prefixo especificado. A <see cref="T:System.String" /> retornada é atomizada.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.LookupPrefix(System.String)">
      <summary>Obtém o prefixo declarado para o URI de namespace especificado.</summary>
      <param name="namespaceURI">O URI de namespace a ser resolvido para o prefixo.</param>
      <returns>Um <see cref="T:System.String" /> que contém o prefixo de namespace atribuído ao URI de namespace especificado; caso contrário, <see cref="F:System.String.Empty" /> se nenhum prefixo for atribuído ao URI de namespace especificado. A <see cref="T:System.String" /> retornada é atomizada.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Matches(System.String)">
      <summary>Determina se o nó atual corresponde à expressão XPath especificada.</summary>
      <param name="xpath">A expressão XPath.</param>
      <returns>
        <see langword="true" /> se o nó atual corresponde à expressão XPath especificada; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">A expressão XPath não pode ser avaliada.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">A expressão XPath não é válida.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Matches(System.Xml.XPath.XPathExpression)">
      <summary>Determina se o nó atual corresponde ao <see cref="T:System.Xml.XPath.XPathExpression" /> especificado.</summary>
      <param name="expr">Um objeto <see cref="T:System.Xml.XPath.XPathExpression" /> que contém a expressão XPath compilada.</param>
      <returns>
        <see langword="true" /> se o nó atual corresponder à <see cref="T:System.Xml.XPath.XPathExpression" />; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">A expressão XPath não pode ser avaliada.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">A expressão XPath não é válida.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveTo(System.Xml.XPath.XPathNavigator)">
      <summary>Quando substituído em uma classe derivada, move o <see cref="T:System.Xml.XPath.XPathNavigator" /> para a mesma posição que o <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado.</summary>
      <param name="other">O <see cref="T:System.Xml.XPath.XPathNavigator" /> posicionado no nó para o qual você deseja mover.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Xml.XPath.XPathNavigator" /> tiver êxito na movimentação para a mesma posição que o <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado, caso contrário, <see langword="false" />. Se for <see langword="false" />, a posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> permanecerá inalterada.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToAttribute(System.String,System.String)">
      <summary>Move o <see cref="T:System.Xml.XPath.XPathNavigator" /> para o atributo com o URI do namespace e o nome local correspondentes.</summary>
      <param name="localName">O nome local do atributo.</param>
      <param name="namespaceURI">O URI de namespace do atributo, <see langword="null" /> para um namespace vazio.</param>
      <returns>
        <see langword="true" /> se <see cref="T:System.Xml.XPath.XPathNavigator" /> tiver êxito na movimentação para o atributo, caso contrário, <see langword="false" />. Se for <see langword="false" />, a posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> permanecerá inalterada.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToChild(System.String,System.String)">
      <summary>Move o <see cref="T:System.Xml.XPath.XPathNavigator" /> para o nó filho com o nome local e o URI do namespace especificado.</summary>
      <param name="localName">O nome local do nó filho para o qual mover.</param>
      <param name="namespaceURI">O URI do namespace do nó filho para o qual mover.</param>
      <returns>
        <see langword="true" /> se <see cref="T:System.Xml.XPath.XPathNavigator" /> tiver êxito na movimentação para o nó filho, caso contrário, <see langword="false" />. Se for <see langword="false" />, a posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> permanecerá inalterada.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToChild(System.Xml.XPath.XPathNodeType)">
      <summary>Move o <see cref="T:System.Xml.XPath.XPathNavigator" /> para o nó filho do <see cref="T:System.Xml.XPath.XPathNodeType" /> especificado.</summary>
      <param name="type">O <see cref="T:System.Xml.XPath.XPathNodeType" /> do nó filho para o qual mover.</param>
      <returns>
        <see langword="true" /> se <see cref="T:System.Xml.XPath.XPathNavigator" /> tiver êxito na movimentação para o nó filho, caso contrário, <see langword="false" />. Se for <see langword="false" />, a posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> permanecerá inalterada.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirst">
      <summary>Move <see cref="T:System.Xml.XPath.XPathNavigator" /> ao primeiro nó irmãos do nó atual.</summary>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Xml.XPath.XPathNavigator" /> tiver êxito na movimentação para o primeiro nó irmão do nó atual, <see langword="false" /> se não houver primeiro irmão ou se o <see cref="T:System.Xml.XPath.XPathNavigator" /> estiver posicionado em um nó de atributo no momento. Se o <see cref="T:System.Xml.XPath.XPathNavigator" /> já estiver posicionado no primeiro irmão, <see cref="T:System.Xml.XPath.XPathNavigator" /> retornará <see langword="true" /> e não moverá sua posição.  
Se <see cref="M:System.Xml.XPath.XPathNavigator.MoveToFirst" /> retornar <see langword="false" /> porque não há primeiro irmão ou se <see cref="T:System.Xml.XPath.XPathNavigator" /> estiver atualmente posicionado em um atributo, a posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> permanecerá inalterada.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirstAttribute">
      <summary>Quando substituído em uma classe derivada, move o <see cref="T:System.Xml.XPath.XPathNavigator" /> para o primeiro atributo do nó atual.</summary>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Xml.XPath.XPathNavigator" /> tiver êxito na movimentação para o primeiro atributo do nó atual, caso contrário, <see langword="false" />. Se for <see langword="false" />, a posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> permanecerá inalterada.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirstChild">
      <summary>Quando substituído em uma classe derivada, move o <see cref="T:System.Xml.XPath.XPathNavigator" /> para o primeiro nó filho do nó atual.</summary>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Xml.XPath.XPathNavigator" /> tiver êxito na movimentação para o primeiro nó filho do nó atual, caso contrário, <see langword="false" />. Se for <see langword="false" />, a posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> permanecerá inalterada.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirstNamespace">
      <summary>Move o <see cref="T:System.Xml.XPath.XPathNavigator" /> para o primeiro nó de namespace do nó atual.</summary>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Xml.XPath.XPathNavigator" /> tiver êxito na movimentação para o primeiro nó de namespace, caso contrário, <see langword="false" />. Se for <see langword="false" />, a posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> permanecerá inalterada.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirstNamespace(System.Xml.XPath.XPathNamespaceScope)">
      <summary>Quando substituído em uma classe derivada, move o <see cref="T:System.Xml.XPath.XPathNavigator" /> para o primeiro nó de namespace que corresponde ao <see cref="T:System.Xml.XPath.XPathNamespaceScope" /> especificado.</summary>
      <param name="namespaceScope">Um valor <see cref="T:System.Xml.XPath.XPathNamespaceScope" /> que descreve o escopo do namespace.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Xml.XPath.XPathNavigator" /> tiver êxito na movimentação para o primeiro nó de namespace, caso contrário, <see langword="false" />. Se for <see langword="false" />, a posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> permanecerá inalterada.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.String,System.String)">
      <summary>Move o <see cref="T:System.Xml.XPath.XPathNavigator" /> para o elemento com o nome local e o URI do namespace especificado na ordem do documento.</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceURI">O URI do namespace do elemento.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Xml.XPath.XPathNavigator" /> foi movido com êxito, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.String,System.String,System.Xml.XPath.XPathNavigator)">
      <summary>Move o <see cref="T:System.Xml.XPath.XPathNavigator" /> para o elemento com o nome local e o URI do namespace especificado, até o limite especificado, na ordem do documento.</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceURI">O URI do namespace do elemento.</param>
      <param name="end">O objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> posicionado no limite do elemento além do qual o <see cref="T:System.Xml.XPath.XPathNavigator" /> atual não passará ao procurar o elemento seguinte.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Xml.XPath.XPathNavigator" /> foi movido com êxito, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.Xml.XPath.XPathNodeType)">
      <summary>Move o <see cref="T:System.Xml.XPath.XPathNavigator" /> para o próximo elemento do <see cref="T:System.Xml.XPath.XPathNodeType" /> especificado na ordem do documento.</summary>
      <param name="type">O <see cref="T:System.Xml.XPath.XPathNodeType" /> do elemento. O <see cref="T:System.Xml.XPath.XPathNodeType" /> não pode ser <see cref="F:System.Xml.XPath.XPathNodeType.Attribute" /> ou <see cref="F:System.Xml.XPath.XPathNodeType.Namespace" />.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Xml.XPath.XPathNavigator" /> foi movido com êxito, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.Xml.XPath.XPathNodeType,System.Xml.XPath.XPathNavigator)">
      <summary>Move o <see cref="T:System.Xml.XPath.XPathNavigator" /> para o próximo elemento do <see cref="T:System.Xml.XPath.XPathNodeType" /> especificado, até o limite especificado, na ordem do documento.</summary>
      <param name="type">O <see cref="T:System.Xml.XPath.XPathNodeType" /> do elemento. O <see cref="T:System.Xml.XPath.XPathNodeType" /> não pode ser <see cref="F:System.Xml.XPath.XPathNodeType.Attribute" /> ou <see cref="F:System.Xml.XPath.XPathNodeType.Namespace" />.</param>
      <param name="end">O objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> posicionado no limite do elemento além do qual o <see cref="T:System.Xml.XPath.XPathNavigator" /> atual não passará ao procurar o elemento seguinte.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Xml.XPath.XPathNavigator" /> foi movido com êxito, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToId(System.String)">
      <summary>Quando substituído em uma classe derivada, move para o nó que tem um atributo do tipo <c>ID</c> cujo valor corresponde ao <see cref="T:System.String" /> especificado.</summary>
      <param name="id">Um <see cref="T:System.String" /> que representa o valor da <c>ID</c> do nó ao qual você deseja mover.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Xml.XPath.XPathNavigator" /> tiver êxito na movimentação; caso contrário, <see langword="false" />. Se for <see langword="false" />, a posição do navegador permanecerá inalterada.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNamespace(System.String)">
      <summary>Move o <see cref="T:System.Xml.XPath.XPathNavigator" /> para o nó de namespace com o prefixo de namespace especificado.</summary>
      <param name="name">O prefixo do namespace do nó de namespace.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Xml.XPath.XPathNavigator" /> tiver êxito na movimentação para o namespace especificado; <see langword="false" /> se um nó de namespace correspondente não for encontrado ou se o <see cref="T:System.Xml.XPath.XPathNavigator" /> não estiver posicionado em um nó de elemento. Se for <see langword="false" />, a posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> permanecerá inalterada.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNext">
      <summary>Quando substituído em uma classe derivada, move o <see cref="T:System.Xml.XPath.XPathNavigator" /> para o próximo nó irmão do nó atual.</summary>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Xml.XPath.XPathNavigator" /> tiver êxito na movimentação para o próximo nó irmão; caso contrário, <see langword="false" /> se não houver mais nenhum irmão ou se o <see cref="T:System.Xml.XPath.XPathNavigator" /> estiver atualmente posicionado em um nó de atributo. Se for <see langword="false" />, a posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> permanecerá inalterada.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNext(System.String,System.String)">
      <summary>Move o <see cref="T:System.Xml.XPath.XPathNavigator" /> para o próximo nó irmão com o nome local e o URI do namespace especificado.</summary>
      <param name="localName">O nome local do próximo nó irmão para o qual mover.</param>
      <param name="namespaceURI">O URI do namespace do próximo nó irmão para o qual mover.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Xml.XPath.XPathNavigator" /> tiver êxito na movimentação para o próximo nó irmão, <see langword="false" /> se não houver mais nenhum irmão ou se o <see cref="T:System.Xml.XPath.XPathNavigator" /> estiver posicionado em um nó de atributo no momento. Se for <see langword="false" />, a posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> permanecerá inalterada.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNext(System.Xml.XPath.XPathNodeType)">
      <summary>Move o <see cref="T:System.Xml.XPath.XPathNavigator" /> para o próximo nó irmão do nó atual que corresponde ao <see cref="T:System.Xml.XPath.XPathNodeType" /> especificado.</summary>
      <param name="type">O <see cref="T:System.Xml.XPath.XPathNodeType" /> do nó irmão para movimentação.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Xml.XPath.XPathNavigator" /> tiver êxito na movimentação para o próximo nó irmão; caso contrário, <see langword="false" /> se não houver mais nenhum irmão ou se o <see cref="T:System.Xml.XPath.XPathNavigator" /> estiver atualmente posicionado em um nó de atributo. Se for <see langword="false" />, a posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> permanecerá inalterada.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNextAttribute">
      <summary>Quando substituído em uma classe derivada, move o <see cref="T:System.Xml.XPath.XPathNavigator" /> para o atributo seguinte.</summary>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Xml.XPath.XPathNavigator" /> tiver êxito na movimentação para o próximo atributo; <see langword="false" /> se não houver mais nenhum atributo. Se for <see langword="false" />, a posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> permanecerá inalterada.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNextNamespace">
      <summary>Move o <see cref="T:System.Xml.XPath.XPathNavigator" /> para o próximo nó de namespace.</summary>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Xml.XPath.XPathNavigator" /> tiver êxito na movimentação para o próximo nó de namespace, caso contrário, <see langword="false" />. Se for <see langword="false" />, a posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> permanecerá inalterada.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNextNamespace(System.Xml.XPath.XPathNamespaceScope)">
      <summary>Quando substituído em uma classe derivada, move o <see cref="T:System.Xml.XPath.XPathNavigator" /> para o próximo nó de namespace que corresponde ao <see cref="T:System.Xml.XPath.XPathNamespaceScope" /> especificado.</summary>
      <param name="namespaceScope">Um valor <see cref="T:System.Xml.XPath.XPathNamespaceScope" /> que descreve o escopo do namespace.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Xml.XPath.XPathNavigator" /> tiver êxito na movimentação para o próximo nó de namespace, caso contrário, <see langword="false" />. Se for <see langword="false" />, a posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> permanecerá inalterada.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToParent">
      <summary>Quando substituído em uma classe derivada, move o <see cref="T:System.Xml.XPath.XPathNavigator" /> para o nó pai do nó atual.</summary>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Xml.XPath.XPathNavigator" /> tiver êxito na movimentação para o nó pai do nó atual, caso contrário, <see langword="false" />. Se for <see langword="false" />, a posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> permanecerá inalterada.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToPrevious">
      <summary>Quando substituído em uma classe derivada, move o <see cref="T:System.Xml.XPath.XPathNavigator" /> para o nó irmão anterior ao nó atual.</summary>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Xml.XPath.XPathNavigator" /> tiver êxito na movimentação para o nó irmão anterior, caso contrário, <see langword="false" /> se não houver nenhum nó irmão anterior ou se o <see cref="T:System.Xml.XPath.XPathNavigator" /> estiver posicionado em um nó de atributo no momento. Se for <see langword="false" />, a posição do <see cref="T:System.Xml.XPath.XPathNavigator" /> permanecerá inalterada.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToRoot">
      <summary>Move o <see cref="T:System.Xml.XPath.XPathNavigator" /> para o nó raiz ao qual o nó atual pertence.</summary>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.Name">
      <summary>Quando é substituído em uma classe derivada, obtém o nome qualificado do nó atual.</summary>
      <returns>A <see cref="T:System.String" /> que contém o <see cref="P:System.Xml.XPath.XPathNavigator.Name" /> qualificado do nó atual ou <see cref="F:System.String.Empty" /> se o nó atual não tem um nome (por exemplo, nós de texto ou comentário).</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.NamespaceURI">
      <summary>Quando substituído em uma classe derivada, obtém o URI de namespace do nó atual.</summary>
      <returns>Um <see cref="T:System.String" /> que contém o URI do namespace do nó atual ou <see cref="F:System.String.Empty" /> se o nó atual não tiver nenhum URI de namespace.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.NameTable">
      <summary>Quando substituído em uma classe derivada, obtém o <see cref="T:System.Xml.XmlNameTable" /> do <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <returns>Um <see cref="T:System.Xml.XmlNameTable" /> objeto que permite que você obtenha a versão Atom de um <see cref="T:System.String" /> dentro do documento XML.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.NavigatorComparer">
      <summary>Obtém um <see cref="T:System.Collections.IEqualityComparer" /> usado para a comparação de igualdade de objetos <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <returns>Um <see cref="T:System.Collections.IEqualityComparer" /> usado para comparação de igualdade <see cref="T:System.Xml.XPath.XPathNavigator" /> de objetos.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.NodeType">
      <summary>Quando substituído em uma classe derivada, obtém o <see cref="T:System.Xml.XPath.XPathNodeType" /> do nó atual.</summary>
      <returns>Um dos valores <see cref="T:System.Xml.XPath.XPathNodeType" /> que representa o nó atual.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.OuterXml">
      <summary>Obtém ou define a marcação que representa as marcas de abertura e fechamento do nó atual e de seus nós filho.</summary>
      <returns>Um <see cref="T:System.String" /> que contém a marcação que representa as marcas de abertura e fechamento do nó atual e seus nós filho.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.Prefix">
      <summary>Quando substituído em uma classe derivada, obtém o prefixo de namespace associado com o nó atual.</summary>
      <returns>Um <see cref="T:System.String" /> que contém o prefixo de namespace associado ao nó atual.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.PrependChild">
      <summary>Retorna um objeto <see cref="T:System.Xml.XmlWriter" /> usado para criar um novo nó filho no início da lista de nós filho do nó atual.</summary>
      <returns>Um objeto <see cref="T:System.Xml.XmlWriter" /> usado para criar um novo nó filho no início da lista de nós filho do nó atual.</returns>
      <exception cref="T:System.InvalidOperationException">O nó atual no qual o <see cref="T:System.Xml.XPath.XPathNavigator" /> está posicionado não permite que um novo nó filho seja anexado.</exception>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.PrependChild(System.String)">
      <summary>Cria um novo nó filho no início da lista de nós filho do nó atual usando a cadeia de caracteres XML especificada.</summary>
      <param name="newChild">A cadeia de dados XML do novo nó filho.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro da cadeia de caracteres XML é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">O nó atual no qual o <see cref="T:System.Xml.XPath.XPathNavigator" /> está posicionado não permite que um novo nó filho seja anexado.</exception>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
      <exception cref="T:System.Xml.XmlException">O parâmetro da cadeia de caracteres XML não está bem formado.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.PrependChild(System.Xml.XmlReader)">
      <summary>Cria um novo nó filho no início da lista de nós filho do nó atual usando o conteúdo XML do objeto <see cref="T:System.Xml.XmlReader" /> especificado.</summary>
      <param name="newChild">Um objeto <see cref="T:System.Xml.XmlReader" /> posicionado nos dados XML para o novo nó filho.</param>
      <exception cref="T:System.ArgumentException">O objeto <see cref="T:System.Xml.XmlReader" /> está em um estado de erro ou fechado.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro do objeto <see cref="T:System.Xml.XmlReader" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">O nó atual no qual o <see cref="T:System.Xml.XPath.XPathNavigator" /> está posicionado não permite que um novo nó filho seja anexado.</exception>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
      <exception cref="T:System.Xml.XmlException">O conteúdo XML do parâmetro de objeto <see cref="T:System.Xml.XmlReader" /> não está bem formado.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.PrependChild(System.Xml.XPath.XPathNavigator)">
      <summary>Cria um novo nó filho no início da lista de nós filho do nó atual usando os nós no objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado.</summary>
      <param name="newChild">Um objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> posicionado no nó a ser adicionado como o novo nó filho.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro do objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">O nó atual no qual o <see cref="T:System.Xml.XPath.XPathNavigator" /> está posicionado não permite que um novo nó filho seja anexado.</exception>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.PrependChildElement(System.String,System.String,System.String,System.String)">
      <summary>Cria um novo elemento filho no início da lista de nós filho do nó atual, usando o prefixo do namespace, o nome local e o URI do namespace especificado, com o valor especificado.</summary>
      <param name="prefix">O prefixo de namespace do novo elemento filho (se houver).</param>
      <param name="localName">O nome local do novo elemento filho (se houver).</param>
      <param name="namespaceURI">O URI de namespace do novo elemento filho (se houver). <see cref="F:System.String.Empty" /> e <see langword="null" /> são equivalentes.</param>
      <param name="value">O valor do novo elemento filho. Se <see cref="F:System.String.Empty" /> ou <see langword="null" /> for passado, um elemento vazio será criado.</param>
      <exception cref="T:System.InvalidOperationException">O nó atual no qual o <see cref="T:System.Xml.XPath.XPathNavigator" /> está posicionado não permite que um novo nó filho seja anexado.</exception>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ReadSubtree">
      <summary>Retorna um objeto <see cref="T:System.Xml.XmlReader" /> que contém o nó atual e seus nós filho.</summary>
      <returns>Um objeto <see cref="T:System.Xml.XmlReader" /> que contém o nó atual e seus nós filho.</returns>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não está posicionado em um nó de elemento ou no nó raiz.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ReplaceRange(System.Xml.XPath.XPathNavigator)">
      <summary>Substitui um intervalo de nós irmão, do nó atual ao nó especificado.</summary>
      <param name="lastSiblingToReplace">Um <see cref="T:System.Xml.XPath.XPathNavigator" /> posicionado no último nó irmão no intervalo a ser substituído.</param>
      <returns>Um objeto <see cref="T:System.Xml.XmlWriter" /> usado para especificar o intervalo de substituição.</returns>
      <exception cref="T:System.ArgumentNullException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado é <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
      <exception cref="T:System.InvalidOperationException">O último nó especificado a ser substituído não é um nó irmão válido do nó atual.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.String)">
      <summary>Substitui o nó atual com o conteúdo da cadeia de caracteres especificada.</summary>
      <param name="newNode">A cadeia de dados XML para o novo nó.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro da cadeia de caracteres XML é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não está posicionado em um elemento, um texto, uma instrução de processamento ou em um nó de comentário.</exception>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
      <exception cref="T:System.Xml.XmlException">O parâmetro da cadeia de caracteres XML não está bem formado.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.Xml.XmlReader)">
      <summary>Substitui o nó atual com o conteúdo do objeto <see cref="T:System.Xml.XmlReader" /> especificado.</summary>
      <param name="newNode">Um objeto <see cref="T:System.Xml.XmlReader" /> posicionado nos dados XML para o novo nó.</param>
      <exception cref="T:System.ArgumentException">O objeto <see cref="T:System.Xml.XmlReader" /> está em um estado de erro ou fechado.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro do objeto <see cref="T:System.Xml.XmlReader" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não está posicionado em um elemento, um texto, uma instrução de processamento ou em um nó de comentário.</exception>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
      <exception cref="T:System.Xml.XmlException">O conteúdo XML do parâmetro de objeto <see cref="T:System.Xml.XmlReader" /> não está bem formado.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.Xml.XPath.XPathNavigator)">
      <summary>Substitui o nó atual com o conteúdo do objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado.</summary>
      <param name="newNode">Um objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> posicionado no novo nó.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro do objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não está posicionado em um elemento, um texto, uma instrução de processamento ou em um nó de comentário.</exception>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
      <exception cref="T:System.Xml.XmlException">O conteúdo XML do parâmetro de objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> não está bem formado.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.SchemaInfo">
      <summary>Obtém as informações de esquema que foram atribuídas ao nó atual como resultado da validação de esquema.</summary>
      <returns>Um <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> objeto que contém as informações de esquema para o nó atual.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Select(System.String)">
      <summary>Seleciona um nó definido usando a expressão XPath especificada.</summary>
      <param name="xpath">Um <see cref="T:System.String" /> que representa uma expressão XPath.</param>
      <returns>Um <see cref="T:System.Xml.XPath.XPathNodeIterator" /> que aponta para o conjunto de nós selecionado.</returns>
      <exception cref="T:System.ArgumentException">A expressão XPath contém um erro ou seu tipo de retorno não é um conjunto de nós.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">A expressão XPath não é válida.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Select(System.String,System.Xml.IXmlNamespaceResolver)">
      <summary>Seleciona um nó definido usando a expressão XPath especificada com o objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> especificado para resolver os prefixos de namespace.</summary>
      <param name="xpath">Um <see cref="T:System.String" /> que representa uma expressão XPath.</param>
      <param name="resolver">O objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> usado para resolver prefixos de namespace.</param>
      <returns>Um <see cref="T:System.Xml.XPath.XPathNodeIterator" /> que aponta para o conjunto de nó selecionado.</returns>
      <exception cref="T:System.ArgumentException">A expressão XPath contém um erro ou seu tipo de retorno não é um conjunto de nós.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">A expressão XPath não é válida.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Select(System.Xml.XPath.XPathExpression)">
      <summary>Seleciona um nó definido usando o <see cref="T:System.Xml.XPath.XPathExpression" /> especificado.</summary>
      <param name="expr">Um objeto <see cref="T:System.Xml.XPath.XPathExpression" /> que contém a consulta XPath compilada.</param>
      <returns>Um <see cref="T:System.Xml.XPath.XPathNodeIterator" /> que aponta para o conjunto de nó selecionado.</returns>
      <exception cref="T:System.ArgumentException">A expressão XPath contém um erro ou seu tipo de retorno não é um conjunto de nós.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">A expressão XPath não é válida.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectAncestors(System.String,System.String,System.Boolean)">
      <summary>Seleciona todos os nós ancestrais do nó atual que têm o nome local e o URI do namespace especificados.</summary>
      <param name="name">O nome local dos nós ancestrais.</param>
      <param name="namespaceURI">O URI de namespace dos nós ancestrais.</param>
      <param name="matchSelf">Para incluir o nó de contexto na seleção, <see langword="true" />; caso contrário, <see langword="false" />.</param>
      <returns>Um <see cref="T:System.Xml.XPath.XPathNodeIterator" /> que contém os nós selecionados. Os nós retornados estão na ordem inversa do documento.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see langword="null" /> não pode ser passado como um parâmetro.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectAncestors(System.Xml.XPath.XPathNodeType,System.Boolean)">
      <summary>Seleciona todos os nós ancestrais do nó atual que têm um <see cref="T:System.Xml.XPath.XPathNodeType" /> correspondente.</summary>
      <param name="type">O <see cref="T:System.Xml.XPath.XPathNodeType" /> dos nós ancestrais.</param>
      <param name="matchSelf">Para incluir o nó de contexto na seleção, <see langword="true" />; caso contrário, <see langword="false" />.</param>
      <returns>Um <see cref="T:System.Xml.XPath.XPathNodeIterator" /> que contém os nós selecionados. Os nós retornados estão na ordem inversa do documento.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectChildren(System.String,System.String)">
      <summary>Seleciona todos os nós filhos do nó atual que têm o nome local e o URI do namespace especificado.</summary>
      <param name="name">O nome local dos nós filhos.</param>
      <param name="namespaceURI">O URI de namespace dos nós filho.</param>
      <returns>Um <see cref="T:System.Xml.XPath.XPathNodeIterator" /> que contém os nós selecionados.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see langword="null" /> não pode ser passado como um parâmetro.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectChildren(System.Xml.XPath.XPathNodeType)">
      <summary>Seleciona todos os nós filho do nó atual que têm a correspondência <see cref="T:System.Xml.XPath.XPathNodeType" />.</summary>
      <param name="type">O <see cref="T:System.Xml.XPath.XPathNodeType" /> dos nós filho.</param>
      <returns>Um <see cref="T:System.Xml.XPath.XPathNodeIterator" /> que contém os nós selecionados.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectDescendants(System.String,System.String,System.Boolean)">
      <summary>Seleciona todos os nós descendentes do nó atual com o nome local e o URI do namespace especificado.</summary>
      <param name="name">O nome local dos nós descendentes.</param>
      <param name="namespaceURI">O URI de namespace dos nós descendentes.</param>
      <param name="matchSelf">
        <see langword="true" /> para incluir o nó de contexto na seleção; caso contrário, <see langword="false" />.</param>
      <returns>Um <see cref="T:System.Xml.XPath.XPathNodeIterator" /> que contém os nós selecionados.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see langword="null" /> não pode ser passado como um parâmetro.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectDescendants(System.Xml.XPath.XPathNodeType,System.Boolean)">
      <summary>Seleciona todos os nós descendentes do nó atual que têm um <see cref="T:System.Xml.XPath.XPathNodeType" /> correspondente.</summary>
      <param name="type">O <see cref="T:System.Xml.XPath.XPathNodeType" /> dos nós descendentes.</param>
      <param name="matchSelf">
        <see langword="true" /> para incluir o nó de contexto na seleção; caso contrário, <see langword="false" />.</param>
      <returns>Um <see cref="T:System.Xml.XPath.XPathNodeIterator" /> que contém os nós selecionados.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectSingleNode(System.String)">
      <summary>Seleciona um único nó no <see cref="T:System.Xml.XPath.XPathNavigator" /> usando a consulta XPath especificada.</summary>
      <param name="xpath">Um <see cref="T:System.String" /> que representa uma expressão XPath.</param>
      <returns>Um objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> que contém o primeiro nó correspondente à consulta XPath especificada; caso contrário, <see langword="null" /> se não houver resultado da consulta.</returns>
      <exception cref="T:System.ArgumentException">Ocorreu um erro na consulta XPath ou o tipo de retorno da expressão XPath não é um nó.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">A consulta XPath não é válida.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectSingleNode(System.String,System.Xml.IXmlNamespaceResolver)">
      <summary>Seleciona um único nó no objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> usando a consulta XPath especificada com o objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> especificado para resolver os prefixos de namespace.</summary>
      <param name="xpath">Um <see cref="T:System.String" /> que representa uma expressão XPath.</param>
      <param name="resolver">O objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> usado para resolver prefixos de namespace na consulta XPath.</param>
      <returns>Um objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> que contém o primeiro nó correspondente à consulta XPath especificada; caso contrário, <see langword="null" /> se não houver resultado da consulta.</returns>
      <exception cref="T:System.ArgumentException">Ocorreu um erro na consulta XPath ou o tipo de retorno da expressão XPath não é um nó.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">A consulta XPath não é válida.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectSingleNode(System.Xml.XPath.XPathExpression)">
      <summary>Seleciona um único nó no <see cref="T:System.Xml.XPath.XPathNavigator" /> usando o objeto <see cref="T:System.Xml.XPath.XPathExpression" /> especificado.</summary>
      <param name="expression">Um objeto <see cref="T:System.Xml.XPath.XPathExpression" /> que contém a consulta XPath compilada.</param>
      <returns>Um objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> que contém o primeiro nó correspondente à consulta XPath especificada; caso contrário, <see langword="null" /> se não houver resultado da consulta.</returns>
      <exception cref="T:System.ArgumentException">Ocorreu um erro na consulta XPath ou o tipo de retorno da expressão XPath não é um nó.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">A consulta XPath não é válida.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SetTypedValue(System.Object)">
      <summary>Define o valor tipado do nó atual.</summary>
      <param name="typedValue">O novo valor tipado do nó.</param>
      <exception cref="T:System.ArgumentException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não é compatível com o tipo do objeto especificado.</exception>
      <exception cref="T:System.ArgumentNullException">O valor especificado não pode ser <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não está posicionado em um nó de elemento ou de atributo.</exception>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SetValue(System.String)">
      <summary>Define o valor do nó atual.</summary>
      <param name="value">O novo valor do nó.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro de valor é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> está posicionado no nó raiz, em um nó de namespace ou o valor especificado é inválido.</exception>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Xml.XPath.XPathNavigator" /> não dá suporte à edição.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.System#ICloneable#Clone">
      <summary>Cria uma nova cópia do objeto <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <returns>Uma nova cópia do objeto <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ToString">
      <summary>Obtém o valor de texto do nó atual.</summary>
      <returns>Um <see langword="string" /> que contém o valor de texto do nó atual.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.TypedValue">
      <summary>Obtém o nó atual como um objeto em caixa do tipo mais adequado do .NET Framework.</summary>
      <returns>O nó atual como um objeto de caixa do tipo de .NET Framework mais apropriado.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.UnderlyingObject">
      <summary>Usado por implementações de <see cref="T:System.Xml.XPath.XPathNavigator" /> que fornecem uma exibição XML "virtualizada" sobre um repositório, a fim de fornecer acesso aos objetos subjacentes.</summary>
      <returns>O padrão é <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Obtém o valor do nó atual como o <see cref="T:System.Type" /> especificado, usando o objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> especificado para resolver prefixos de namespace.</summary>
      <param name="returnType">O <see cref="T:System.Type" /> para retornar como o valor do nó atual.</param>
      <param name="nsResolver">O objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> usado para resolver prefixos de namespace.</param>
      <returns>O valor do nó atual como o <see cref="T:System.Type" /> solicitado.</returns>
      <exception cref="T:System.FormatException">O valor do nó atual não está no formato correto para o tipo de destino.</exception>
      <exception cref="T:System.InvalidCastException">A tentativa de conversão não é válida.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueAsBoolean">
      <summary>Obtém o valor do nó atual como um <see cref="T:System.Boolean" />.</summary>
      <returns>O valor do nó atual como um <see cref="T:System.Boolean" />.</returns>
      <exception cref="T:System.FormatException">O valor de cadeia de caracteres do nó atual não pode ser convertido em um <see cref="T:System.Boolean" />.</exception>
      <exception cref="T:System.InvalidCastException">A tentativa de conversão em <see cref="T:System.Boolean" /> não é válida.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueAsDateTime">
      <summary>Obtém o valor do nó atual como um <see cref="T:System.DateTime" />.</summary>
      <returns>O valor do nó atual como um <see cref="T:System.DateTime" />.</returns>
      <exception cref="T:System.FormatException">O valor de cadeia de caracteres do nó atual não pode ser convertido em um <see cref="T:System.DateTime" />.</exception>
      <exception cref="T:System.InvalidCastException">A tentativa de conversão em <see cref="T:System.DateTime" /> não é válida.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueAsDouble">
      <summary>Obtém o valor do nó atual como um <see cref="T:System.Double" />.</summary>
      <returns>O valor do nó atual como um <see cref="T:System.Double" />.</returns>
      <exception cref="T:System.FormatException">O valor de cadeia de caracteres do nó atual não pode ser convertido em um <see cref="T:System.Double" />.</exception>
      <exception cref="T:System.InvalidCastException">A tentativa de conversão em <see cref="T:System.Double" /> não é válida.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueAsInt">
      <summary>Obtém o valor do nó atual como um <see cref="T:System.Int32" />.</summary>
      <returns>O valor do nó atual como um <see cref="T:System.Int32" />.</returns>
      <exception cref="T:System.FormatException">O valor de cadeia de caracteres do nó atual não pode ser convertido em um <see cref="T:System.Int32" />.</exception>
      <exception cref="T:System.InvalidCastException">A tentativa de conversão em <see cref="T:System.Int32" /> não é válida.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueAsLong">
      <summary>Obtém o valor do nó atual como um <see cref="T:System.Int64" />.</summary>
      <returns>O valor do nó atual como um <see cref="T:System.Int64" />.</returns>
      <exception cref="T:System.FormatException">O valor de cadeia de caracteres do nó atual não pode ser convertido em um <see cref="T:System.Int64" />.</exception>
      <exception cref="T:System.InvalidCastException">A tentativa de conversão em <see cref="T:System.Int64" /> não é válida.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueType">
      <summary>Obtém o <see cref="T:System.Type" /> do .NET Framework do nó atual.</summary>
      <returns>O .NET Framework <see cref="T:System.Type" /> do nó atual. O valor padrão é <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.WriteSubtree(System.Xml.XmlWriter)">
      <summary>Transmite o nó atual e seus nós filho para o objeto <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="writer">O objeto <see cref="T:System.Xml.XmlWriter" /> para o qual transmitir.</param>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.XmlLang">
      <summary>Obtém o escopo <c>xml:lang</c> para o nó atual.</summary>
      <returns>Um <see cref="T:System.String" /> valor que contém o valor do escopo <c>XML: lang</c> ou <see cref="F:System.String.Empty" /> , se o nó atual não tiver o valores de escopo <c>XML: lang</c> para retornar.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.XmlType">
      <summary>Obtém as informações <see cref="T:System.Xml.Schema.XmlSchemaType" /> para o nó atual.</summary>
      <returns>Um <see cref="T:System.Xml.Schema.XmlSchemaType" /> objeto; o padrão <see langword="null" />é.</returns>
    </member>
    <member name="T:System.Xml.XPath.XPathNodeIterator">
      <summary>Fornece um iterador em um conjunto de nós selecionados.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathNodeIterator.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.XPath.XPathNodeIterator" />.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathNodeIterator.Clone">
      <summary>Quando substituído em uma classe derivada, retorna um clone deste objeto <see cref="T:System.Xml.XPath.XPathNodeIterator" />.</summary>
      <returns>Um novo clone do objeto <see cref="T:System.Xml.XPath.XPathNodeIterator" /> deste objeto <see cref="T:System.Xml.XPath.XPathNodeIterator" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNodeIterator.Count">
      <summary>Obtém o índice do último nó no conjunto de nós selecionado.</summary>
      <returns>O índice do último nó no conjunto de nós selecionado ou 0 se não houver nenhum nó selecionado.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNodeIterator.Current">
      <summary>Quando substituído em uma classe derivada, obtém o objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> dpara este <see cref="T:System.Xml.XPath.XPathNodeIterator" />, posicionado no nó do contexto atual.</summary>
      <returns>Um objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> posicionado no nó de contexto do qual o conjunto de nós foi selecionado. O método <see cref="M:System.Xml.XPath.XPathNodeIterator.MoveNext" /> deve ser chamado para mover a <see cref="T:System.Xml.XPath.XPathNodeIterator" /> para o primeiro nó no conjunto selecionado.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNodeIterator.CurrentPosition">
      <summary>Quando substituído em uma classe derivada, obtém o índice da posição atual no conjunto de nós selecionado.</summary>
      <returns>O índice da posição atual.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNodeIterator.GetEnumerator">
      <summary>Retorna um objeto <see cref="T:System.Collections.IEnumerator" /> para iterar pelo conjunto de nós selecionado.</summary>
      <returns>Um objeto <see cref="T:System.Collections.IEnumerator" /> para iterar pelo conjunto de nós selecionado.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNodeIterator.MoveNext">
      <summary>Quando substituído em uma classe derivada, move o objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> retornado pela propriedade <see cref="P:System.Xml.XPath.XPathNodeIterator.Current" /> para o nó seguinte no conjunto de nós selecionados.</summary>
      <returns>
        <see langword="true" /> se o objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> for movido para o nó seguinte; <see langword="false" /> se não houver mais nós selecionados.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNodeIterator.System#ICloneable#Clone">
      <summary>Cria um novo objeto que é uma cópia da instância atual.</summary>
      <returns>Um novo objeto que é uma cópia dessa instância.</returns>
    </member>
    <member name="T:System.Xml.XPath.XPathNodeType">
      <summary>Define os tipos de nó XPath que podem ser retornados da classe <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.All">
      <summary>Qualquer um dos tipos de nó <see cref="T:System.Xml.XPath.XPathNodeType" />.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Attribute">
      <summary>Um atributo, tal como <c>id='123'</c>.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Comment">
      <summary>Um comentário, tal como <c>&lt;!-- my comment --&gt;</c></summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Element">
      <summary>Um elemento, tal como <c>&lt;element&gt;</c>.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Namespace">
      <summary>Um namespace, tal como <c>xmlns="namespace"</c>.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.ProcessingInstruction">
      <summary>Uma instrução de processamento, tal como <c>&lt;?pi test?&gt;</c>. Isso não inclui declarações XML, que não são visíveis para a classe <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Root">
      <summary>O nó raiz do documento XML ou árvore do nó.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.SignificantWhitespace">
      <summary>Um nó com caracteres de espaço em branco e <c>xml:space</c> definido como <c>preserve</c>.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Text">
      <summary>O conteúdo de texto de um nó. Equivalente aos tipos de nó CDATA e Texto DOM (Modelo de Objeto do Documento). Contém pelo menos um caractere.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Whitespace">
      <summary>Um nó com apenas caracteres de espaço em branco e nenhum espaço em branco significativo. Os caracteres de espaço em branco são <c>#x20</c>, <c>#x9</c>, <c>#xD</c> ou <c>#xA</c>.</summary>
    </member>
    <member name="T:System.Xml.XPath.XPathResultType">
      <summary>Especifica o tipo de retorno da expressão XPath.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Any">
      <summary>Qualquer um dos tipos de nó XPath.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Boolean">
      <summary>Um valor <see cref="T:System.Boolean" /><see langword="true" /> ou <see langword="false" />.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Error">
      <summary>A expressão não é avaliada como o tipo XPath correto.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Navigator">
      <summary>Um fragmento da árvore.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.NodeSet">
      <summary>Uma coleção de nós.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Number">
      <summary>Um valor numérico.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.String">
      <summary>Um valor <see cref="T:System.String" />.</summary>
    </member>
    <member name="T:System.Xml.Xsl.IXsltContextFunction">
      <summary>Fornece uma interface para uma determinada função definida em folha de estilos XSLT (linguagem XSL Transformations) durante a execução do tempo de execução.</summary>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextFunction.ArgTypes">
      <summary>Obtém os tipos de XPath (linguagem XPath) fornecidos para a lista de argumentos da função. Essas informações podem ser usadas para descobrir a assinatura da função que lhe permite diferenciar entre funções sobrecarregadas.</summary>
      <returns>Uma matriz de <see cref="T:System.Xml.XPath.XPathResultType" /> que representa os tipos para a lista de argumentos da função.</returns>
    </member>
    <member name="M:System.Xml.Xsl.IXsltContextFunction.Invoke(System.Xml.Xsl.XsltContext,System.Object[],System.Xml.XPath.XPathNavigator)">
      <summary>Fornece o método para invocar a função com os argumentos fornecidos no contexto fornecido.</summary>
      <param name="xsltContext">O contexto XSLT para a chamada de função.</param>
      <param name="args">Os argumentos da chamada de função. Cada argumento é um elemento na matriz.</param>
      <param name="docContext">O nó de contexto para a chamada de função.</param>
      <returns>Um <see cref="T:System.Object" /> que representa o valor retornado da função.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextFunction.Maxargs">
      <summary>Obtém o número máximo de argumentos para a função. Isso permite que o usuário diferencie entre funções sobrecarregadas.</summary>
      <returns>O número máximo de argumentos para a função.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextFunction.Minargs">
      <summary>Obtém o número mínimo de argumentos para a função. Isso permite que o usuário diferencie entre funções sobrecarregadas.</summary>
      <returns>O número mínimo de argumentos para a função.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextFunction.ReturnType">
      <summary>Obtém o <see cref="T:System.Xml.XPath.XPathResultType" /> que representa o tipo de XPath retornado pela função.</summary>
      <returns>Um <see cref="T:System.Xml.XPath.XPathResultType" /> que representa o tipo XPath retornado pela função</returns>
    </member>
    <member name="T:System.Xml.Xsl.IXsltContextVariable">
      <summary>Fornece uma interface para uma variável determinada que é definida na folha de estilos durante a execução do tempo de execução.</summary>
    </member>
    <member name="M:System.Xml.Xsl.IXsltContextVariable.Evaluate(System.Xml.Xsl.XsltContext)">
      <summary>Avalia a variável em tempo de execução e retorna um objeto que representa o valor da variável.</summary>
      <param name="xsltContext">Um <see cref="T:System.Xml.Xsl.XsltContext" /> que representa o contexto de execução da variável.</param>
      <returns>Um <see cref="T:System.Object" /> que representa o valor da variável. Os tipos de retorno possíveis incluem número, cadeia de caracteres, booliano, fragmento de documento ou conjunto de nós.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextVariable.IsLocal">
      <summary>Obtém um valor que indica se a variável é local.</summary>
      <returns>
        <see langword="true" />se a variável for uma variável local no contexto atual; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextVariable.IsParam">
      <summary>Obtém um valor que indica se a variável é um parâmetro de XSLT (linguagem XSL Transformations). Esse pode ser um parâmetro para um modelo ou uma folha de estilos.</summary>
      <returns>
        <see langword="true" />se a variável for um parâmetro XSLT; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextVariable.VariableType">
      <summary>Obtém o <see cref="T:System.Xml.XPath.XPathResultType" /> que representa o tipo de XPath (linguagem XPath) da variável.</summary>
      <returns>O <see cref="T:System.Xml.XPath.XPathResultType" /> que representa o tipo XPath da variável.</returns>
    </member>
    <member name="T:System.Xml.Xsl.XslCompiledTransform">
      <summary>Transforma dados XML usando uma folha de estilos XSLT.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Xsl.XslCompiledTransform" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.#ctor(System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> com a configuração de depuração especificada.</summary>
      <param name="enableDebug">
        <see langword="true" /> para gerar informações de depuração. Caso contrário, <see langword="false" />. Configurar esse valor como <see langword="true" /> permite depurar a folha de estilos com o depurador do Microsoft Visual Studio.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Reflection.MethodInfo,System.Byte[],System.Type[])">
      <summary>Carrega um método de uma folha de estilos compilada usando o utilitário <see langword="XSLTC.exe" />.</summary>
      <param name="executeMethod">Um objeto <see cref="T:System.Reflection.MethodInfo" /> que representa o método <c>execute</c> gerado pelo compilador da folha de estilos compilada.</param>
      <param name="queryData">Uma matriz de bytes de estruturas de dados serializados no campo <c>staticData</c> da folha de estilos compilada, como gerada pelo método <see cref="M:System.Xml.Xsl.XslCompiledTransform.CompileToType(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver,System.Boolean,System.Reflection.Emit.TypeBuilder,System.String)" />.</param>
      <param name="earlyBoundTypes">Uma matriz de tipos armazenada no campo <c>ebTypes</c> gerado pelo compilador da folha de estilos compilada.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.String)">
      <summary>Carrega e compila a folha de estilos localizada no URI especificado.</summary>
      <param name="stylesheetUri">O URI da folha de estilos.</param>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="stylesheetUri" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">A folha de estilos contém um erro.</exception>
      <exception cref="T:System.IO.FileNotFoundException">A folha de estilos não foi encontrada.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">O valor <paramref name="stylesheetUri" /> inclui um nome de arquivo ou diretório que não pôde ser encontrado.</exception>
      <exception cref="T:System.Net.WebException">Não é possível resolver um valor <paramref name="stylesheetUri" />.  

ou - 
Ocorreu um erro ao processar a solicitação.</exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="stylesheetUri" /> não é um URI válido.</exception>
      <exception cref="T:System.Xml.XmlException">Ocorreu um erro de análise ao carregar a folha de estilos.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.String,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)">
      <summary>Carrega e compila a folha de estilos XSLT especificada pelo URI. O <see cref="T:System.Xml.XmlResolver" /> resolve qualquer elemento XSLT <c>import</c> e <c>include</c> e as configurações de XSLT determinam as permissões para a folha de estilos.</summary>
      <param name="stylesheetUri">O URI da folha de estilos.</param>
      <param name="settings">O <see cref="T:System.Xml.Xsl.XsltSettings" /> a ser aplicado à folha de estilos. Se isso for <see langword="null" />, a configuração <see cref="P:System.Xml.Xsl.XsltSettings.Default" /> será aplicada.</param>
      <param name="stylesheetResolver">O <see cref="T:System.Xml.XmlResolver" /> usado para resolver o URI de folha de estilos e quaisquer folhas de estilos referenciadas nos elementos XSLT <c>import</c> e <c>include</c>.</param>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="stylesheetUri" /> ou <paramref name="stylesheetResolver" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">A folha de estilos contém um erro.</exception>
      <exception cref="T:System.IO.FileNotFoundException">A folha de estilos não foi encontrada.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">O valor <paramref name="stylesheetUri" /> inclui um nome de arquivo ou diretório que não pôde ser encontrado.</exception>
      <exception cref="T:System.Net.WebException">Não é possível resolver um valor <paramref name="stylesheetUri" />.  

ou - 
Ocorreu um erro ao processar a solicitação.</exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="stylesheetUri" /> não é um URI válido.</exception>
      <exception cref="T:System.Xml.XmlException">Ocorreu um erro de análise ao carregar a folha de estilos.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Type)">
      <summary>Carrega a folha de estilos compilada que foi criada usando o Compilador de XSLT (xsltc.exe).</summary>
      <param name="compiledStylesheet">O nome da classe que contém a folha de estilos compilada.  
 Esse geralmente é o nome da folha de estilos. A menos que especificado de outra forma, a ferramenta xsltc.exe usa o nome da folha de estilos para os nomes de classe e de assembly.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XmlReader)">
      <summary>Compila a folha de estilos contida no <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="stylesheet">Um <see cref="T:System.Xml.XmlReader" /> que contém a folha de estilos.</param>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="stylesheet" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">A folha de estilos contém um erro.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)">
      <summary>Compila a folha de estilos XSLT contida no <see cref="T:System.Xml.XmlReader" />. O <see cref="T:System.Xml.XmlResolver" /> resolve qualquer elemento XSLT <c>import</c> e <c>include</c> e as configurações de XSLT determinam as permissões para a folha de estilos.</summary>
      <param name="stylesheet">O <see cref="T:System.Xml.XmlReader" /> que contém a folha de estilos.</param>
      <param name="settings">O <see cref="T:System.Xml.Xsl.XsltSettings" /> a ser aplicado à folha de estilos. Se isso for <see langword="null" />, a configuração <see cref="P:System.Xml.Xsl.XsltSettings.Default" /> será aplicada.</param>
      <param name="stylesheetResolver">O <see cref="T:System.Xml.XmlResolver" /> usado para resolver as folhas de estilos referenciadas nos elementos XSLT <c>import</c> e <c>include</c>. Se for <see langword="null" />, os recursos externos não serão resolvidos.</param>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="stylesheet" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">A folha de estilos contém um erro.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XPath.IXPathNavigable)">
      <summary>Compila a folha de estilos contida no objeto <see cref="T:System.Xml.XPath.IXPathNavigable" />.</summary>
      <param name="stylesheet">Um objeto implementando a interface <see cref="T:System.Xml.XPath.IXPathNavigable" />. No Microsoft .NET Framework, isso pode ser um <see cref="T:System.Xml.XmlNode" /> (normalmente, um <see cref="T:System.Xml.XmlDocument" />) ou um <see cref="T:System.Xml.XPath.XPathDocument" /> que contém a folha de estilos.</param>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="stylesheet" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">A folha de estilos contém um erro.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)">
      <summary>Compila a folha de estilos XSLT contida no <see cref="T:System.Xml.XPath.IXPathNavigable" />. O <see cref="T:System.Xml.XmlResolver" /> resolve qualquer elemento XSLT <c>import</c> e <c>include</c> e as configurações de XSLT determinam as permissões para a folha de estilos.</summary>
      <param name="stylesheet">Um objeto implementando a interface <see cref="T:System.Xml.XPath.IXPathNavigable" />. No Microsoft .NET Framework, isso pode ser um <see cref="T:System.Xml.XmlNode" /> (normalmente, um <see cref="T:System.Xml.XmlDocument" />) ou um <see cref="T:System.Xml.XPath.XPathDocument" /> que contém a folha de estilos.</param>
      <param name="settings">O <see cref="T:System.Xml.Xsl.XsltSettings" /> a ser aplicado à folha de estilos. Se isso for <see langword="null" />, a configuração <see cref="P:System.Xml.Xsl.XsltSettings.Default" /> será aplicada.</param>
      <param name="stylesheetResolver">O <see cref="T:System.Xml.XmlResolver" /> usado para resolver as folhas de estilos referenciadas nos elementos XSLT <c>import</c> e <c>include</c>. Se for <see langword="null" />, os recursos externos não serão resolvidos.</param>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="stylesheet" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">A folha de estilos contém um erro.</exception>
    </member>
    <member name="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings">
      <summary>Obtém um objeto <see cref="T:System.Xml.XmlWriterSettings" /> que contém as informações de saída derivadas do elemento <c>xsl:output</c> da folha de estilos.</summary>
      <returns>Um objeto somente <see cref="T:System.Xml.XmlWriterSettings" /> leitura que contém as informações de saída derivadas do elemento <c>xsl: output</c> da folha de estilos. Este valor pode ser <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.String)">
      <summary>Executa a transformação usando o documento de entrada especificado pelo URI e gera o resultado para um arquivo.</summary>
      <param name="inputUri">O URI do documento de entrada.</param>
      <param name="resultsFile">O URI do arquivo de saída.</param>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="inputUri" /> ou <paramref name="resultsFile" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Ocorreu um erro ao executar a transformação XSLT.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O documento de entrada não foi encontrado.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">O valor <paramref name="inputUri" /> e <paramref name="resultsFile" /> inclui um nome de arquivo ou o diretório não foi encontrado.</exception>
      <exception cref="T:System.Net.WebException">Não foi possível resolver o valor <paramref name="inputUri" /> ou <paramref name="resultsFile" />.  

ou - 
Ocorreu um erro ao processar a solicitação</exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="inputUri" /> ou <paramref name="resultsFile" /> não é um URI válido.</exception>
      <exception cref="T:System.Xml.XmlException">Ocorreu um erro de análise ao carregar o documento de entrada.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)">
      <summary>Executa a transformação usando o documento de entrada especificado pelo URI e gera o resultado para um <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="inputUri">O URI do documento de entrada.</param>
      <param name="results">O <see cref="T:System.Xml.XmlWriter" /> para o qual deseja gerar.  
Se a folha de estilos contiver um elemento <c>xsl:output</c>, você deverá criar o <see cref="T:System.Xml.XmlWriter" /> usando objeto <see cref="T:System.Xml.XmlWriterSettings" /> retornado da propriedade <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Isso garante que o objeto <see cref="T:System.Xml.XmlWriter" /> tenha as configurações de saída corretas.</param>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="inputUri" /> ou <paramref name="results" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Ocorreu um erro ao executar a transformação XSLT.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">O valor <paramref name="inputUri" /> inclui um nome de arquivo ou não foi possível encontrar o diretório.</exception>
      <exception cref="T:System.Net.WebException">Não é possível resolver um valor <paramref name="inputUri" />.  

ou - 
Ocorreu um erro ao processar a solicitação.</exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="inputUri" /> não é um URI válido.</exception>
      <exception cref="T:System.Xml.XmlException">Ocorreu um erro de análise ao carregar o documento de entrada.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
      <summary>Executa a transformação usando o documento de entrada especificado pelo URI e gera o resultado em um fluxo. O <see cref="T:System.Xml.Xsl.XsltArgumentList" /> fornece argumentos de tempo de execução adicionais.</summary>
      <param name="inputUri">O URI do documento de entrada.</param>
      <param name="arguments">Um <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contém os argumentos qualificados por namespace usados como a entrada para a transformação. Este valor pode ser <see langword="null" />.</param>
      <param name="results">O fluxo no qual você deseja gerar saída.</param>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="inputUri" /> ou <paramref name="results" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Ocorreu um erro ao executar a transformação XSLT.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">O valor <paramref name="inputUri" /> inclui um nome de arquivo ou não foi possível encontrar o diretório.</exception>
      <exception cref="T:System.Net.WebException">Não é possível resolver um valor <paramref name="inputUri" />.  

ou - 
Ocorreu um erro ao processar a solicitação</exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="inputUri" /> não é um URI válido.</exception>
      <exception cref="T:System.Xml.XmlException">Ocorreu um erro de análise ao carregar o documento de entrada.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
      <summary>Executa a transformação usando o documento de entrada especificado pelo URI e gera o resultado em um <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="inputUri">O URI do documento de entrada.</param>
      <param name="arguments">Um <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contém os argumentos qualificados por namespace usados como a entrada para a transformação. Este valor pode ser <see langword="null" />.</param>
      <param name="results">O <see cref="T:System.IO.TextWriter" /> para o qual deseja gerar.</param>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="inputUri" /> ou <paramref name="results" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Ocorreu um erro ao executar a transformação XSLT.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">O valor <paramref name="inputUri" /> inclui um nome de arquivo ou não foi possível encontrar o diretório.</exception>
      <exception cref="T:System.Net.WebException">Não é possível resolver um valor <paramref name="inputUri" />.  

ou - 
Ocorreu um erro ao processar a solicitação</exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="inputUri" /> não é um URI válido.</exception>
      <exception cref="T:System.Xml.XmlException">Ocorreu um erro de análise ao carregar o documento de entrada.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
      <summary>Executa a transformação usando o documento de entrada especificado pelo URI e gera o resultado para um <see cref="T:System.Xml.XmlWriter" />. O <see cref="T:System.Xml.Xsl.XsltArgumentList" /> fornece argumentos de tempo de execução adicionais.</summary>
      <param name="inputUri">O URI do documento de entrada.</param>
      <param name="arguments">Um <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contém os argumentos qualificados por namespace usados como a entrada para a transformação. Este valor pode ser <see langword="null" />.</param>
      <param name="results">O <see cref="T:System.Xml.XmlWriter" /> para o qual deseja gerar.  
Se a folha de estilos contiver um elemento <c>xsl:output</c>, você deverá criar o <see cref="T:System.Xml.XmlWriter" /> usando objeto <see cref="T:System.Xml.XmlWriterSettings" /> retornado da propriedade <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Isso garante que o objeto <see cref="T:System.Xml.XmlWriter" /> tenha as configurações de saída corretas.</param>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="inputUri" /> ou <paramref name="results" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Ocorreu um erro ao executar a transformação XSLT.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">O valor <paramref name="inputtUri" /> inclui um nome de arquivo ou não foi possível encontrar o diretório.</exception>
      <exception cref="T:System.Net.WebException">Não é possível resolver um valor <paramref name="inputUri" />.  

ou - 
Ocorreu um erro ao processar a solicitação.</exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="inputUri" /> não é um URI válido.</exception>
      <exception cref="T:System.Xml.XmlException">Ocorreu um erro de análise ao carregar o documento de entrada.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.XmlWriter)">
      <summary>Executa a transformação usando o documento de entrada especificado pelo objeto <see cref="T:System.Xml.XmlReader" /> e gera os resultados em um <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="input">O <see cref="T:System.Xml.XmlReader" /> que contém o documento de entrada.</param>
      <param name="results">O <see cref="T:System.Xml.XmlWriter" /> para o qual deseja gerar.  
Se a folha de estilos contiver um elemento <c>xsl:output</c>, você deverá criar o <see cref="T:System.Xml.XmlWriter" /> usando objeto <see cref="T:System.Xml.XmlWriterSettings" /> retornado da propriedade <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Isso garante que o objeto <see cref="T:System.Xml.XmlWriter" /> tenha as configurações de saída corretas.</param>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="input" /> ou <paramref name="results" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Ocorreu um erro ao executar a transformação XSLT.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
      <summary>Executa a transformação usando o documento de entrada especificado pelo objeto <see cref="T:System.Xml.XmlReader" /> e gera os resultados em um fluxo. O <see cref="T:System.Xml.Xsl.XsltArgumentList" /> fornece argumentos de tempo de execução adicionais.</summary>
      <param name="input">O <see cref="T:System.Xml.XmlReader" /> que contém o documento de entrada.</param>
      <param name="arguments">Um <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contém os argumentos qualificados por namespace usados como a entrada para a transformação. Este valor pode ser <see langword="null" />.</param>
      <param name="results">O fluxo no qual você deseja gerar saída.</param>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="input" /> ou <paramref name="results" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Ocorreu um erro ao executar a transformação XSLT.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
      <summary>Executa a transformação usando o documento de entrada especificado pelo objeto <see cref="T:System.Xml.XmlReader" /> e gera os resultados em um <see cref="T:System.IO.TextWriter" />. O <see cref="T:System.Xml.Xsl.XsltArgumentList" /> fornece argumentos de tempo de execução adicionais.</summary>
      <param name="input">O <see cref="T:System.Xml.XmlReader" /> que contém o documento de entrada.</param>
      <param name="arguments">Um <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contém os argumentos qualificados por namespace usados como a entrada para a transformação. Este valor pode ser <see langword="null" />.</param>
      <param name="results">O <see cref="T:System.IO.TextWriter" /> para o qual deseja gerar.</param>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="input" /> ou <paramref name="results" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Ocorreu um erro ao executar a transformação XSLT.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
      <summary>Executa a transformação usando o documento de entrada especificado pelo objeto <see cref="T:System.Xml.XmlReader" /> e gera os resultados em um <see cref="T:System.Xml.XmlWriter" />. O <see cref="T:System.Xml.Xsl.XsltArgumentList" /> fornece argumentos de tempo de execução adicionais.</summary>
      <param name="input">O <see cref="T:System.Xml.XmlReader" /> que contém o documento de entrada.</param>
      <param name="arguments">Um <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contém os argumentos qualificados por namespace usados como a entrada para a transformação. Este valor pode ser <see langword="null" />.</param>
      <param name="results">O <see cref="T:System.Xml.XmlWriter" /> para o qual deseja gerar.  
Se a folha de estilos contiver um elemento <c>xsl:output</c>, você deverá criar o <see cref="T:System.Xml.XmlWriter" /> usando objeto <see cref="T:System.Xml.XmlWriterSettings" /> retornado da propriedade <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Isso garante que o objeto <see cref="T:System.Xml.XmlWriter" /> tenha as configurações de saída corretas.</param>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="input" /> ou <paramref name="results" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Ocorreu um erro ao executar a transformação XSLT.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)">
      <summary>Executa a transformação usando o documento de entrada especificado pelo objeto <see cref="T:System.Xml.XmlReader" /> e gera os resultados em um <see cref="T:System.Xml.XmlWriter" />. O <see cref="T:System.Xml.Xsl.XsltArgumentList" /> fornece argumentos de tempo de execução adicionais e o XmlResolver resolve a função XSLT <c>document()</c>.</summary>
      <param name="input">O <see cref="T:System.Xml.XmlReader" /> que contém o documento de entrada.</param>
      <param name="arguments">Um <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contém os argumentos qualificados por namespace usados como a entrada para a transformação. Este valor pode ser <see langword="null" />.</param>
      <param name="results">O <see cref="T:System.Xml.XmlWriter" /> para o qual deseja gerar.  
Se a folha de estilos contiver um elemento <c>xsl:output</c>, você deverá criar o <see cref="T:System.Xml.XmlWriter" /> usando objeto <see cref="T:System.Xml.XmlWriterSettings" /> retornado da propriedade <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Isso garante que o objeto <see cref="T:System.Xml.XmlWriter" /> tenha as configurações de saída corretas.</param>
      <param name="documentResolver">O <see cref="T:System.Xml.XmlResolver" /> usado para resolver a função XSLT <c>document()</c>. Se isso for <see langword="null" />, a função <c>document()</c> não será resolvida.</param>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="input" /> ou <paramref name="results" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Ocorreu um erro ao executar a transformação XSLT.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.XmlWriter)">
      <summary>Executa a transformação usando o documento de entrada especificado pelo objeto <see cref="T:System.Xml.XPath.IXPathNavigable" /> e gera os resultados em um <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="input">Um objeto implementando a interface <see cref="T:System.Xml.XPath.IXPathNavigable" />. No Microsoft .NET Framework, isso pode ser um <see cref="T:System.Xml.XmlNode" /> (normalmente um <see cref="T:System.Xml.XmlDocument" />) ou um <see cref="T:System.Xml.XPath.XPathDocument" /> que contém os dados a serem transformados.</param>
      <param name="results">O <see cref="T:System.Xml.XmlWriter" /> para o qual deseja gerar.  
Se a folha de estilos contiver um elemento <c>xsl:output</c>, você deverá criar o <see cref="T:System.Xml.XmlWriter" /> usando objeto <see cref="T:System.Xml.XmlWriterSettings" /> retornado da propriedade <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Isso garante que o objeto <see cref="T:System.Xml.XmlWriter" /> tenha as configurações de saída corretas.</param>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="input" /> ou <paramref name="results" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Ocorreu um erro ao executar a transformação XSLT.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
      <summary>Executa a transformação usando o documento de entrada especificado pelo objeto <see cref="T:System.Xml.XPath.IXPathNavigable" /> e gera os resultados em um fluxo. A <see cref="T:System.Xml.Xsl.XsltArgumentList" /> fornece argumentos adicionais de tempo de execução.</summary>
      <param name="input">Um objeto implementando a interface <see cref="T:System.Xml.XPath.IXPathNavigable" />. No Microsoft .NET Framework, isso pode ser um <see cref="T:System.Xml.XmlNode" /> (normalmente um <see cref="T:System.Xml.XmlDocument" />) ou um <see cref="T:System.Xml.XPath.XPathDocument" /> que contém os dados a serem transformados.</param>
      <param name="arguments">Um <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contém os argumentos qualificados por namespace usados como a entrada para a transformação. Este valor pode ser <see langword="null" />.</param>
      <param name="results">O fluxo no qual você deseja gerar saída.</param>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="input" /> ou <paramref name="results" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Ocorreu um erro ao executar a transformação XSLT.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
      <summary>Executa a transformação usando o documento de entrada especificado pelo objeto <see cref="T:System.Xml.XPath.IXPathNavigable" /> e gera os resultados em um <see cref="T:System.IO.TextWriter" />. O <see cref="T:System.Xml.Xsl.XsltArgumentList" /> fornece argumentos de tempo de execução adicionais.</summary>
      <param name="input">Um objeto implementando a interface <see cref="T:System.Xml.XPath.IXPathNavigable" />. No Microsoft .NET Framework, isso pode ser um <see cref="T:System.Xml.XmlNode" /> (normalmente um <see cref="T:System.Xml.XmlDocument" />) ou um <see cref="T:System.Xml.XPath.XPathDocument" /> que contém os dados a serem transformados.</param>
      <param name="arguments">Um <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contém os argumentos qualificados por namespace usados como a entrada para a transformação. Este valor pode ser <see langword="null" />.</param>
      <param name="results">O <see cref="T:System.IO.TextWriter" /> para o qual deseja gerar.</param>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="input" /> ou <paramref name="results" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Ocorreu um erro ao executar a transformação XSLT.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
      <summary>Executa a transformação usando o documento de entrada especificado pelo objeto <see cref="T:System.Xml.XPath.IXPathNavigable" /> e gera os resultados em um <see cref="T:System.Xml.XmlWriter" />. O <see cref="T:System.Xml.Xsl.XsltArgumentList" /> fornece argumentos de tempo de execução adicionais.</summary>
      <param name="input">Um objeto implementando a interface <see cref="T:System.Xml.XPath.IXPathNavigable" />. No Microsoft .NET Framework, isso pode ser um <see cref="T:System.Xml.XmlNode" /> (normalmente um <see cref="T:System.Xml.XmlDocument" />) ou um <see cref="T:System.Xml.XPath.XPathDocument" /> que contém os dados a serem transformados.</param>
      <param name="arguments">Um <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contém os argumentos qualificados por namespace usados como a entrada para a transformação. Este valor pode ser <see langword="null" />.</param>
      <param name="results">O <see cref="T:System.Xml.XmlWriter" /> para o qual deseja gerar.  
Se a folha de estilos contiver um elemento <c>xsl:output</c>, você deverá criar o <see cref="T:System.Xml.XmlWriter" /> usando objeto <see cref="T:System.Xml.XmlWriterSettings" /> retornado da propriedade <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Isso garante que o objeto <see cref="T:System.Xml.XmlWriter" /> tenha as configurações de saída corretas.</param>
      <exception cref="T:System.ArgumentNullException">O valor <paramref name="input" /> ou <paramref name="results" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Ocorreu um erro ao executar a transformação XSLT.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)">
      <summary>Executa a transformação usando o documento de entrada especificado pelo objeto <see cref="T:System.Xml.XPath.IXPathNavigable" /> e gera os resultados em um <see cref="T:System.Xml.XmlWriter" />. O <see cref="T:System.Xml.Xsl.XsltArgumentList" /> fornece argumentos de tempo de execução adicionais e o <see cref="T:System.Xml.XmlResolver" /> resolve a função XSLT <see langword="document()" />.</summary>
      <param name="input">O documento a ser transformado, que é especificado pelo objeto <see cref="T:System.Xml.XPath.IXPathNavigable" />.</param>
      <param name="arguments">Uma lista de argumentos como <see cref="T:System.Xml.Xsl.XsltArgumentList" />.</param>
      <param name="results">O <see cref="T:System.Xml.XmlWriter" /> para o qual deseja gerar.  
Se a folha de estilos contiver um elemento <see langword="xsl:output" />, você deverá criar o <see cref="T:System.Xml.XmlWriter" /> usando objeto <see cref="T:System.Xml.XmlWriterSettings" /> retornado da propriedade <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Isso garante que o objeto <see cref="T:System.Xml.XmlWriter" /> tenha as configurações de saída corretas.</param>
      <param name="documentResolver">O <see cref="T:System.Xml.XmlResolver" /> usado para resolver a função XSLT <see langword="document()" />. Se isso for <see langword="null" />, a função <see langword="document()" /> não será resolvida.</param>
    </member>
    <member name="T:System.Xml.Xsl.XsltArgumentList">
      <summary>Contém um número variável de argumentos que são parâmetros XSLT ou objetos de extensão.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.#ctor">
      <summary>Implementa uma nova instância do <see cref="T:System.Xml.Xsl.XsltArgumentList" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.AddExtensionObject(System.String,System.Object)">
      <summary>Adiciona um novo objeto ao <see cref="T:System.Xml.Xsl.XsltArgumentList" /> e associa-o ao URI do namespace.</summary>
      <param name="namespaceUri">O URI do namespace a associar ao objeto. Para usar o namespace padrão, especifique uma cadeia de caracteres vazia.</param>
      <param name="extension">O objeto a ser adicionado à lista.</param>
      <exception cref="T:System.ArgumentException">O <paramref name="namespaceUri" /> é <see langword="null" /> ou http://www.w3.org/1999/XSL/Transform 
O <paramref name="namespaceUri" /> já tem um objeto de extensão associado a ele.</exception>
      <exception cref="T:System.Security.SecurityException">O chamador não tem permissões suficientes para chamar esse método.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.AddParam(System.String,System.String,System.Object)">
      <summary>Adiciona um parâmetro ao <see cref="T:System.Xml.Xsl.XsltArgumentList" /> e o associa ao nome qualificado de namespace.</summary>
      <param name="name">O nome a ser associado ao parâmetro.</param>
      <param name="namespaceUri">O URI de namespace a ser associado ao parâmetro. Para usar o namespace padrão, especifique uma cadeia de caracteres vazia.</param>
      <param name="parameter">O valor do parâmetro ou o objeto a ser adicionado à lista.</param>
      <exception cref="T:System.ArgumentException">O <paramref name="namespaceUri" /> é <see langword="null" /> ou http://www.w3.org/1999/XSL/Transform.  
O <paramref name="name" /> não é um nome válido de acordo com a especificação W3C XML.  
O <paramref name="namespaceUri" /> já tem um parâmetro associado a ele.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.Clear">
      <summary>Remove todos os parâmetros e objetos de extensão do <see cref="T:System.Xml.Xsl.XsltArgumentList" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.GetExtensionObject(System.String)">
      <summary>Obtém o objeto associado ao namespace fornecido.</summary>
      <param name="namespaceUri">O URI de namespace do objeto.</param>
      <returns>O objeto de URI de namespace ou <see langword="null" /> se nenhum foi encontrado.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.GetParam(System.String,System.String)">
      <summary>Obtém o parâmetro associado ao nome qualificado do namespace.</summary>
      <param name="name">O nome do parâmetro. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> não verifica para assegurar que o nome passado é um nome local válido; no entanto, o nome não pode ser <see langword="null" />.</param>
      <param name="namespaceUri">O URI de namespace associado ao parâmetro.</param>
      <returns>O objeto de parâmetro ou <see langword="null" /> se nenhum foi encontrado.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.RemoveExtensionObject(System.String)">
      <summary>Remove o objeto com o URI de namespace do <see cref="T:System.Xml.Xsl.XsltArgumentList" />.</summary>
      <param name="namespaceUri">O URI de namespace associado ao objeto a ser removido.</param>
      <returns>O objeto com o URI de namespace ou <see langword="null" /> se nenhum foi encontrado.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.RemoveParam(System.String,System.String)">
      <summary>Remove o parâmetro do <see cref="T:System.Xml.Xsl.XsltArgumentList" />.</summary>
      <param name="name">O nome do parâmetro a ser removido. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> não verifica para assegurar que o nome passado é um nome local válido; no entanto, o nome não pode ser <see langword="null" />.</param>
      <param name="namespaceUri">O URI de namespace do parâmetro a ser removido.</param>
      <returns>O objeto de parâmetro ou <see langword="null" /> se nenhum foi encontrado.</returns>
    </member>
    <member name="E:System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered">
      <summary>Ocorre quando uma mensagem é especificada na folha de estilos pelo elemento <c>xsl:message</c>.</summary>
    </member>
    <member name="T:System.Xml.Xsl.XsltCompileException">
      <summary>A exceção que é lançada pelo método Load quando um erro é encontrado na folha de estilos XSLT.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Xsl.XsltCompileException" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.#ctor(System.Exception,System.String,System.Int32,System.Int32)">
      <summary>Inicializa uma nova instância da classe <see langword="XsltCompileException" />.</summary>
      <param name="inner">O <see cref="T:System.Exception" /> que gerou a <see langword="XsltCompileException" />.</param>
      <param name="sourceUri">O caminho do local da folha de estilos.</param>
      <param name="lineNumber">O número de linha que indica o local em que o erro ocorreu na folha de estilos.</param>
      <param name="linePosition">A posição na linha que indica o local em que o erro ocorreu na folha de estilos.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância da classe <see langword="XsltCompileException" /> usando as informações nos objetos <see cref="T:System.Runtime.Serialization.SerializationInfo" /> e <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">O objeto <see langword="SerializationInfo" /> que contém todas as propriedades de um <see langword="XsltCompileException" />.</param>
      <param name="context">O objeto <see langword="StreamingContext" /> que contém as informações de contexto.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Xsl.XsltCompileException" /> com uma mensagem de erro especificada.</summary>
      <param name="message">A mensagem que descreve o erro.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da mensagem de erro especificada da classe <see cref="T:System.Xml.Xsl.XsltCompileException" /> e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message">A mensagem que descreve o erro.</param>
      <param name="innerException">A exceção que é a causa da exceção atual ou então <see langword="null" /> se nenhuma exceção interna é especificada.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Transmite todas as propriedades <see langword="XsltCompileException" /> para a classe <see cref="T:System.Runtime.Serialization.SerializationInfo" /> para o <see cref="T:System.Runtime.Serialization.StreamingContext" /> fornecido.</summary>
      <param name="info">O objeto <see langword="SerializationInfo" />.</param>
      <param name="context">O objeto <see langword="StreamingContext" />.</param>
    </member>
    <member name="T:System.Xml.Xsl.XsltContext">
      <summary>Encapsula o contexto de execução atual do processador de XSLT (linguagem XSL Transformation) permitindo que a XPath (linguagem XPath) resolva funções, parâmetros e namespaces em expressões XPath.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Xsl.XsltContext" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.#ctor(System.Xml.NameTable)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Xsl.XsltContext" /> com o <see cref="T:System.Xml.NameTable" /> especificado.</summary>
      <param name="table">O <see cref="T:System.Xml.NameTable" /> a ser usado.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.CompareDocument(System.String,System.String)">
      <summary>Quando substituído em uma classe derivada, compara os URIs (Uniform Resource Identifiers) base de dois documentos com base na ordem em que os documentos foram carregados pelo processador XSLT (ou seja, a classe <see cref="T:System.Xml.Xsl.XslTransform" />).</summary>
      <param name="baseUri">O URI base do primeiro documento a ser comparado.</param>
      <param name="nextbaseUri">O URI base do segundo documento a ser comparado.</param>
      <returns>Um valor inteiro que descreve a ordem relativa dos dois URIs base: -1 se <paramref name="baseUri" /> ocorre antes de <paramref name="nextbaseUri" />; 0 se os dois URIs base são idênticos e 1 se <paramref name="baseUri" /> ocorre após <paramref name="nextbaseUri" />.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.PreserveWhitespace(System.Xml.XPath.XPathNavigator)">
      <summary>Quando substituído em uma classe derivada, avalia se devemos preservar nós de espaço em branco ou removê-los para o contexto determinado.</summary>
      <param name="node">O nó de espaço em branco que deve ser preservado ou eliminado no contexto atual.</param>
      <returns>
        <see langword="true" /> se o espaço em branco deve ser preservado ou <see langword="false" /> se o espaço em branco deve ser removido.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.ResolveFunction(System.String,System.String,System.Xml.XPath.XPathResultType[])">
      <summary>Quando substituído em uma classe derivada, resolve uma referência de função e retorna um <see cref="T:System.Xml.Xsl.IXsltContextFunction" /> que representa a função. O <see cref="T:System.Xml.Xsl.IXsltContextFunction" /> é usado em tempo de execução para obter o valor retornado da função.</summary>
      <param name="prefix">O prefixo da função como ele aparece na expressão XPath.</param>
      <param name="name">O nome da função.</param>
      <param name="ArgTypes">Uma matriz de tipos de argumento para a função que está sendo resolvida. Isso permite que você selecione entre os métodos com o mesmo nome (por exemplo, os métodos sobrecarregados).</param>
      <returns>Um <see cref="T:System.Xml.Xsl.IXsltContextFunction" /> que representa a função.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.ResolveVariable(System.String,System.String)">
      <summary>Quando substituído em uma classe derivada, resolve uma referência de variável e retorna um <see cref="T:System.Xml.Xsl.IXsltContextVariable" /> que representa a variável.</summary>
      <param name="prefix">O prefixo da variável como ele aparece na expressão XPath.</param>
      <param name="name">O nome da variável.</param>
      <returns>Um <see cref="T:System.Xml.Xsl.IXsltContextVariable" /> que representa a variável em tempo de execução.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltContext.Whitespace">
      <summary>Quando substituído em uma classe derivada, obtém um valor que indica se nós de espaço em branco devem ou não ser incluídos na saída.</summary>
      <returns>
        <see langword="true" />para verificar os nós de espaço em branco no documento de origem para inclusão na saída; <see langword="false" /> para não avaliar os nós de espaço em branco. O padrão é <see langword="true" />.</returns>
    </member>
    <member name="T:System.Xml.Xsl.XsltException">
      <summary>A exceção que é gerada quando ocorre um erro ao processar uma transformação de XSLT.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Xsl.XsltException" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância da classe <see langword="XsltException" /> usando as informações nos objetos <see cref="T:System.Runtime.Serialization.SerializationInfo" /> e <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">O objeto <see langword="SerializationInfo" /> que contém todas as propriedades de um <see langword="XsltException" />.</param>
      <param name="context">O objeto <see langword="StreamingContext" />.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Xsl.XsltException" /> com uma mensagem de erro especificada.</summary>
      <param name="message">A mensagem que descreve o erro.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see langword="XsltException" />.</summary>
      <param name="message">A descrição da condição de erro.</param>
      <param name="innerException">A <see cref="T:System.Exception" /> que gerou a <see langword="XsltException" />, se houver. Este valor pode ser <see langword="null" />.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Transmite todas as propriedades <see langword="XsltException" /> para a classe <see cref="T:System.Runtime.Serialization.SerializationInfo" /> para o <see cref="T:System.Runtime.Serialization.StreamingContext" /> fornecido.</summary>
      <param name="info">O objeto <see langword="SerializationInfo" />.</param>
      <param name="context">O objeto <see langword="StreamingContext" />.</param>
    </member>
    <member name="P:System.Xml.Xsl.XsltException.LineNumber">
      <summary>Obtém o número de linha que indica o local em que o erro ocorreu na folha de estilos.</summary>
      <returns>O número de linha que indica o local em que o erro ocorreu na folha de estilos.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltException.LinePosition">
      <summary>Obtém a posição na linha que indica o local em que o erro ocorreu na folha de estilos.</summary>
      <returns>A posição na linha que indica o local em que o erro ocorreu na folha de estilos.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltException.Message">
      <summary>Obtém a mensagem de erro formatada que descreve a exceção atual.</summary>
      <returns>A mensagem de erro formatada que descreve a exceção atual.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltException.SourceUri">
      <summary>Obtém o caminho do local da folha de estilos.</summary>
      <returns>O caminho do local da folha de estilos.</returns>
    </member>
    <member name="T:System.Xml.Xsl.XsltMessageEncounteredEventArgs">
      <summary>Fornece dados para o evento de <see cref="E:System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered" /> .</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltMessageEncounteredEventArgs.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Xsl.XsltMessageEncounteredEventArgs" />.</summary>
    </member>
    <member name="P:System.Xml.Xsl.XsltMessageEncounteredEventArgs.Message">
      <summary>Obtém o conteúdo do elemento <c>xsl:message</c>.</summary>
      <returns>O conteúdo do elemento <c>xsl: Message</c> .</returns>
    </member>
    <member name="T:System.Xml.Xsl.XsltMessageEncounteredEventHandler">
      <summary>Representa o método que manipulará o evento de <see cref="E:System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered" /> .</summary>
      <param name="sender">A fonte do evento.</param>
      <param name="e">O <see cref="T:System.Xml.Xsl.XsltMessageEncounteredEventArgs" /> que contém os dados de evento.</param>
    </member>
    <member name="T:System.Xml.Xsl.XslTransform">
      <summary>Transforma dados XML usando uma folha de estilos XSLT (linguagem XSL Transformation).</summary>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Xsl.XslTransform" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.String)">
      <summary>Carrega a folha de estilos XSLT especificada por uma URL.</summary>
      <param name="url">A URL que especifica a folha de estilos XSLT a ser carregada.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">O recurso carregado não é uma folha de estilos válida.</exception>
      <exception cref="T:System.Security.SecurityException">A folha de estilos contém scripts inseridos e o chamador não tem a permissão <see langword="UnmanagedCode" />.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)">
      <summary>Carrega a folha de estilos XSLT especificada por uma URL.</summary>
      <param name="url">A URL que especifica a folha de estilos XSLT a ser carregada.</param>
      <param name="resolver">O <see cref="T:System.Xml.XmlResolver" /> a ser usado para carregar a folha de estilos e qualquer folha de estilos referenciada nos elementos <c>xsl:import</c> e <c>xsl:include</c>.  
Se for <see langword="null" />, um <see cref="T:System.Xml.XmlUrlResolver" /> padrão sem nenhuma credencial de usuário será usado para abrir a folha de estilos. O <see cref="T:System.Xml.XmlUrlResolver" /> padrão não é usado para resolver nenhum recurso externo na folha de estilos, de modo que os elementos <c>xsl:import</c> e <c>xsl:include</c> não são resolvidos.  
O <see cref="T:System.Xml.XmlResolver" /> não é armazenado em cache após o método <see cref="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" /> ser concluído.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">O recurso carregado não é uma folha de estilos válida.</exception>
      <exception cref="T:System.Security.SecurityException">A folha de estilos contém scripts inseridos e o chamador não tem a permissão <see langword="UnmanagedCode" />.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader)">
      <summary>Carrega a folha de estilos XSLT contida no <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="stylesheet">Um objeto <see cref="T:System.Xml.XmlReader" /> que contém a folha de estilos XSLT.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">O nó atual não está em conformidade com uma folha de estilos válida.</exception>
      <exception cref="T:System.Security.SecurityException">A folha de estilos contém scripts inseridos e o chamador não tem permissão de <see langword="UnmanagedCode" />.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)">
      <summary>Carrega a folha de estilos XSLT contida no <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="stylesheet">Um objeto <see cref="T:System.Xml.XmlReader" /> que contém a folha de estilos XSLT.</param>
      <param name="resolver">O <see cref="T:System.Xml.XmlResolver" /> usado para carregar as folhas de estilos referenciadas nos elementos <c>xsl:import</c> e <c>xsl:include</c>. Se for <see langword="null" />, os recursos externos não serão resolvidos.  
O <see cref="T:System.Xml.XmlResolver" /> não é armazenado em cache após o método <see cref="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" /> ser concluído.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">O nó atual não está em conformidade com uma folha de estilos válida.</exception>
      <exception cref="T:System.Security.SecurityException">A folha de estilos contém scripts inseridos e o chamador não tem permissão de <see langword="UnmanagedCode" />.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable)">
      <summary>Carrega a folha de estilos XSLT contida no <see cref="T:System.Xml.XPath.IXPathNavigable" />.</summary>
      <param name="stylesheet">Um objeto implementando a interface <see cref="T:System.Xml.XPath.IXPathNavigable" />. No .NET Framework, isso pode ser um <see cref="T:System.Xml.XmlNode" /> (normalmente um <see cref="T:System.Xml.XmlDocument" />) ou um <see cref="T:System.Xml.XPath.XPathDocument" /> que contém a folha de estilos XSLT.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">O recurso carregado não é uma folha de estilos válida.</exception>
      <exception cref="T:System.Security.SecurityException">A folha de estilos contém scripts inseridos e o chamador não tem permissão de <see langword="UnmanagedCode" />.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)">
      <summary>Carrega a folha de estilos XSLT contida no <see cref="T:System.Xml.XPath.IXPathNavigable" />.</summary>
      <param name="stylesheet">Um objeto implementando a interface <see cref="T:System.Xml.XPath.IXPathNavigable" />. No .NET Framework, isso pode ser um <see cref="T:System.Xml.XmlNode" /> (normalmente um <see cref="T:System.Xml.XmlDocument" />) ou um <see cref="T:System.Xml.XPath.XPathDocument" /> que contém a folha de estilos XSLT.</param>
      <param name="resolver">O <see cref="T:System.Xml.XmlResolver" /> usado para carregar as folhas de estilos referenciadas nos elementos <c>xsl:import</c> e <c>xsl:include</c>. Se for <see langword="null" />, os recursos externos não serão resolvidos.  
O <see cref="T:System.Xml.XmlResolver" /> não é armazenado em cache após o método <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> ser concluído.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">O recurso carregado não é uma folha de estilos válida.</exception>
      <exception cref="T:System.Security.SecurityException">A folha de estilos contém scripts inseridos e o chamador não tem permissão de <see langword="UnmanagedCode" />.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator)">
      <summary>Carrega a folha de estilos XSLT contida no <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <param name="stylesheet">Um objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> que contém a folha de estilos XSLT.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">O nó atual não está em conformidade com uma folha de estilos válida.</exception>
      <exception cref="T:System.Security.SecurityException">A folha de estilos contém scripts inseridos e o chamador não tem permissão de <see langword="UnmanagedCode" />.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)">
      <summary>Carrega a folha de estilos XSLT contida no <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <param name="stylesheet">Um objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> que contém a folha de estilos XSLT.</param>
      <param name="resolver">O <see cref="T:System.Xml.XmlResolver" /> usado para carregar as folhas de estilos referenciadas nos elementos <c>xsl:import</c> e <c>xsl:include</c>. Se for <see langword="null" />, os recursos externos não serão resolvidos.  
O <see cref="T:System.Xml.XmlResolver" /> não é armazenado em cache após o método <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> ser concluído.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">O nó atual não está em conformidade com uma folha de estilos válida.</exception>
      <exception cref="T:System.Security.SecurityException">A folha de estilos contém scripts inseridos e o chamador não tem permissão de <see langword="UnmanagedCode" />.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String)">
      <summary>Transforma os dados XML no arquivo de entrada e gera o resultado para um arquivo de saída.</summary>
      <param name="inputfile">A URL do documento de origem a ser transformado.</param>
      <param name="outputfile">O URL do arquivo de saída.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String,System.Xml.XmlResolver)">
      <summary>Transforma os dados XML no arquivo de entrada e gera o resultado para um arquivo de saída.</summary>
      <param name="inputfile">A URL do documento de origem a ser transformado.</param>
      <param name="outputfile">O URL do arquivo de saída.</param>
      <param name="resolver">O <see cref="T:System.Xml.XmlResolver" /> usado para resolver a função XSLT <c>document()</c>. Se isso for <see langword="null" />, a função <c>document()</c> não será resolvida.  
O <see cref="T:System.Xml.XmlResolver" /> não é armazenado em cache após o método <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> ser concluído.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)">
      <summary>Transforma os dados XML no <see cref="T:System.Xml.XPath.IXPathNavigable" /> usando o <paramref name="args" /> especificado e gera o resultado para um <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="input">Um objeto implementando a interface <see cref="T:System.Xml.XPath.IXPathNavigable" />. No .NET Framework, isso pode ser um <see cref="T:System.Xml.XmlNode" /> (normalmente um <see cref="T:System.Xml.XmlDocument" />) ou um <see cref="T:System.Xml.XPath.XPathDocument" /> que contém os dados a serem transformados.</param>
      <param name="args">Um <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contém os argumentos qualificados por namespace usados como a entrada para a transformação.</param>
      <returns>Um <see cref="T:System.Xml.XmlReader" /> que contém os resultados da transformação.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
      <summary>Transforma os dados XML no <see cref="T:System.Xml.XPath.IXPathNavigable" /> usando o <paramref name="args" /> especificado e gera o resultado para um <see cref="T:System.IO.Stream" />.</summary>
      <param name="input">Um objeto implementando a interface <see cref="T:System.Xml.XPath.IXPathNavigable" />. No .NET Framework, isso pode ser um <see cref="T:System.Xml.XmlNode" /> (normalmente um <see cref="T:System.Xml.XmlDocument" />) ou um <see cref="T:System.Xml.XPath.XPathDocument" /> que contém os dados a serem transformados.</param>
      <param name="args">Um <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contém os argumentos qualificados por namespace usados como a entrada para a transformação.</param>
      <param name="output">O fluxo no qual você deseja gerar saída.</param>
      <exception cref="T:System.InvalidOperationException">Ocorreu um erro ao processar a transformação XSLT.  
Observação: Esta é uma alteração no comportamento de versões anteriores. Um <see cref="T:System.Xml.Xsl.XsltException" /> será gerado se você estiver usando o Microsoft .NET Framework versão 1.1 ou anterior.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)">
      <summary>Transforma os dados XML no <see cref="T:System.Xml.XPath.IXPathNavigable" /> usando o <paramref name="args" /> especificado e gera o resultado para um <see cref="T:System.IO.Stream" />.</summary>
      <param name="input">Um objeto implementando a interface <see cref="T:System.Xml.XPath.IXPathNavigable" />. No .NET Framework, isso pode ser um <see cref="T:System.Xml.XmlNode" /> (normalmente um <see cref="T:System.Xml.XmlDocument" />) ou um <see cref="T:System.Xml.XPath.XPathDocument" /> que contém os dados a serem transformados.</param>
      <param name="args">Um <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contém os argumentos qualificados por namespace usados como a entrada para a transformação.</param>
      <param name="output">O fluxo no qual você deseja gerar saída.</param>
      <param name="resolver">O <see cref="T:System.Xml.XmlResolver" /> usado para resolver a função XSLT <c>document()</c>. Se isso for <see langword="null" />, a função <c>document()</c> não será resolvida.  
O <see cref="T:System.Xml.XmlResolver" /> não é armazenado em cache após o método <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> ser concluído.</param>
      <exception cref="T:System.InvalidOperationException">Ocorreu um erro ao processar a transformação XSLT.  
Observação: Esta é uma alteração no comportamento de versões anteriores. Um <see cref="T:System.Xml.Xsl.XsltException" /> será gerado se você estiver usando o Microsoft .NET Framework versão 1.1 ou anterior.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
      <summary>Transforma os dados XML no <see cref="T:System.Xml.XPath.IXPathNavigable" /> usando o <paramref name="args" /> especificado e gera o resultado para um <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="input">Um objeto implementando a interface <see cref="T:System.Xml.XPath.IXPathNavigable" />. No .NET Framework, isso pode ser um <see cref="T:System.Xml.XmlNode" /> (normalmente um <see cref="T:System.Xml.XmlDocument" />) ou um <see cref="T:System.Xml.XPath.XPathDocument" /> que contém os dados a serem transformados.</param>
      <param name="args">Um <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contém os argumentos qualificados por namespace usados como a entrada para a transformação.</param>
      <param name="output">O <see cref="T:System.IO.TextWriter" /> para o qual deseja gerar.</param>
      <exception cref="T:System.InvalidOperationException">Ocorreu um erro ao processar a transformação XSLT.  
Observação: Esta é uma alteração no comportamento de versões anteriores. Um <see cref="T:System.Xml.Xsl.XsltException" /> será gerado se você estiver usando o Microsoft .NET Framework versão 1.1 ou anterior.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)">
      <summary>Transforma os dados XML no <see cref="T:System.Xml.XPath.IXPathNavigable" /> usando o <paramref name="args" /> especificado e gera o resultado para um <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="input">Um objeto implementando a interface <see cref="T:System.Xml.XPath.IXPathNavigable" />. No .NET Framework, isso pode ser um <see cref="T:System.Xml.XmlNode" /> (normalmente um <see cref="T:System.Xml.XmlDocument" />) ou um <see cref="T:System.Xml.XPath.XPathDocument" /> que contém os dados a serem transformados.</param>
      <param name="args">Um <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contém os argumentos qualificados por namespace usados como a entrada para a transformação.</param>
      <param name="output">O <see cref="T:System.IO.TextWriter" /> para o qual deseja gerar.</param>
      <param name="resolver">O <see cref="T:System.Xml.XmlResolver" /> usado para resolver a função XSLT <c>document()</c>. Se isso for <see langword="null" />, a função <c>document()</c> não será resolvida.  
O <see cref="T:System.Xml.XmlResolver" /> não é armazenado em cache após o método <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> ser concluído.</param>
      <exception cref="T:System.InvalidOperationException">Ocorreu um erro ao processar a transformação XSLT.  
Observação: Esta é uma alteração no comportamento de versões anteriores. Um <see cref="T:System.Xml.Xsl.XsltException" /> será gerado se você estiver usando o Microsoft .NET Framework versão 1.1 ou anterior.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)">
      <summary>Transforma os dados XML no <see cref="T:System.Xml.XPath.IXPathNavigable" /> usando o <paramref name="args" /> especificado e gera o resultado para um <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="input">Um objeto implementando a interface <see cref="T:System.Xml.XPath.IXPathNavigable" />. No .NET Framework, isso pode ser um <see cref="T:System.Xml.XmlNode" /> (normalmente um <see cref="T:System.Xml.XmlDocument" />) ou um <see cref="T:System.Xml.XPath.XPathDocument" /> que contém os dados a serem transformados.</param>
      <param name="args">Um <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contém os argumentos qualificados por namespace usados como a entrada para a transformação.</param>
      <param name="resolver">O <see cref="T:System.Xml.XmlResolver" /> usado para resolver a função XSLT <c>document()</c>. Se isso for <see langword="null" />, a função <c>document()</c> não será resolvida.  
O <see cref="T:System.Xml.XmlResolver" /> não é armazenado em cache após o método <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> ser concluído.</param>
      <returns>Um <see cref="T:System.Xml.XmlReader" /> que contém os resultados da transformação.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
      <summary>Transforma os dados XML no <see cref="T:System.Xml.XPath.IXPathNavigable" /> usando o <paramref name="args" /> especificado e gera o resultado para um <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="input">Um objeto implementando a interface <see cref="T:System.Xml.XPath.IXPathNavigable" />. No .NET Framework, isso pode ser um <see cref="T:System.Xml.XmlNode" /> (normalmente um <see cref="T:System.Xml.XmlDocument" />) ou um <see cref="T:System.Xml.XPath.XPathDocument" /> que contém os dados a serem transformados.</param>
      <param name="args">Um <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contém os argumentos qualificados por namespace usados como a entrada para a transformação.</param>
      <param name="output">O <see cref="T:System.Xml.XmlWriter" /> para o qual deseja gerar.</param>
      <exception cref="T:System.InvalidOperationException">Ocorreu um erro ao processar a transformação XSLT.  
Observação: Esta é uma alteração no comportamento de versões anteriores. Um <see cref="T:System.Xml.Xsl.XsltException" /> será gerado se você estiver usando o Microsoft .NET Framework versão 1.1 ou anterior.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)">
      <summary>Transforma os dados XML no <see cref="T:System.Xml.XPath.IXPathNavigable" /> usando o <paramref name="args" /> especificado e gera o resultado para um <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="input">Um objeto implementando a interface <see cref="T:System.Xml.XPath.IXPathNavigable" />. No .NET Framework, isso pode ser um <see cref="T:System.Xml.XmlNode" /> (normalmente um <see cref="T:System.Xml.XmlDocument" />) ou um <see cref="T:System.Xml.XPath.XPathDocument" /> que contém os dados a serem transformados.</param>
      <param name="args">Um <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contém os argumentos qualificados por namespace usados como a entrada para a transformação.</param>
      <param name="output">O <see cref="T:System.Xml.XmlWriter" /> para o qual deseja gerar.</param>
      <param name="resolver">O <see cref="T:System.Xml.XmlResolver" /> usado para resolver a função XSLT <c>document()</c>. Se isso for <see langword="null" />, a função <c>document()</c> não será resolvida.  
O <see cref="T:System.Xml.XmlResolver" /> não é armazenado em cache após o método <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> ser concluído.</param>
      <exception cref="T:System.InvalidOperationException">Ocorreu um erro ao processar a transformação XSLT.  
Observação: Esta é uma alteração no comportamento de versões anteriores. Um <see cref="T:System.Xml.Xsl.XsltException" /> será gerado se você estiver usando o Microsoft .NET Framework versão 1.1 ou anterior.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)">
      <summary>Transforma os dados XML no <see cref="T:System.Xml.XPath.XPathNavigator" /> usando o <paramref name="args" /> especificado e gera o resultado para um <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="input">Um <see cref="T:System.Xml.XPath.XPathNavigator" /> que contém os dados a serem transformados.</param>
      <param name="args">Um <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contém os argumentos qualificados por namespace usados como a entrada para a transformação.</param>
      <returns>Um <see cref="T:System.Xml.XmlReader" /> que contém os resultados da transformação.</returns>
      <exception cref="T:System.InvalidOperationException">Ocorreu um erro ao processar a transformação XSLT.  
Observação: Esta é uma alteração no comportamento de versões anteriores. Um <see cref="T:System.Xml.Xsl.XsltException" /> será gerado se você estiver usando o Microsoft .NET Framework versão 1.1 ou anterior.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
      <summary>Transforma os dados XML no <see cref="T:System.Xml.XPath.XPathNavigator" /> usando o <paramref name="args" /> especificado e gera o resultado para um <see cref="T:System.IO.Stream" />.</summary>
      <param name="input">Um <see cref="T:System.Xml.XPath.XPathNavigator" /> que contém os dados a serem transformados.</param>
      <param name="args">Um <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contém os argumentos qualificados por namespace usados como a entrada para a transformação.</param>
      <param name="output">O fluxo no qual você deseja gerar saída.</param>
      <exception cref="T:System.InvalidOperationException">Ocorreu um erro ao processar a transformação XSLT.  
Observação: Esta é uma alteração no comportamento de versões anteriores. Um <see cref="T:System.Xml.Xsl.XsltException" /> será gerado se você estiver usando o Microsoft .NET Framework versão 1.1 ou anterior.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)">
      <summary>Transforma os dados XML no <see cref="T:System.Xml.XPath.XPathNavigator" /> usando o <paramref name="args" /> especificado e gera o resultado para um <see cref="T:System.IO.Stream" />.</summary>
      <param name="input">Um <see cref="T:System.Xml.XPath.XPathNavigator" /> que contém os dados a serem transformados.</param>
      <param name="args">Um <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contém os argumentos qualificados por namespace usados como a entrada para a transformação.</param>
      <param name="output">O fluxo no qual você deseja gerar saída.</param>
      <param name="resolver">O <see cref="T:System.Xml.XmlResolver" /> usado para resolver a função XSLT <c>document()</c>. Se isso for <see langword="null" />, a função <c>document()</c> não será resolvida.  
O <see cref="T:System.Xml.XmlResolver" /> não é armazenado em cache após o método <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" /> ser concluído.</param>
      <exception cref="T:System.InvalidOperationException">Ocorreu um erro ao processar a transformação XSLT.  
Observação: Esta é uma alteração no comportamento de versões anteriores. Um <see cref="T:System.Xml.Xsl.XsltException" /> será gerado se você estiver usando o Microsoft .NET Framework versão 1.1 ou anterior.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
      <summary>Transforma os dados XML no <see cref="T:System.Xml.XPath.XPathNavigator" /> usando o <paramref name="args" /> especificado e gera o resultado para um <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="input">Um <see cref="T:System.Xml.XPath.XPathNavigator" /> que contém os dados a serem transformados.</param>
      <param name="args">Um <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contém os argumentos qualificados por namespace usados como a entrada para a transformação.</param>
      <param name="output">O <see cref="T:System.IO.TextWriter" /> para o qual deseja gerar.</param>
      <exception cref="T:System.InvalidOperationException">Ocorreu um erro ao processar a transformação XSLT.  
Observação: Esta é uma alteração no comportamento de versões anteriores. Um <see cref="T:System.Xml.Xsl.XsltException" /> será gerado se você estiver usando o Microsoft .NET Framework versão 1.1 ou anterior.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)">
      <summary>Transforma os dados XML no <see cref="T:System.Xml.XPath.XPathNavigator" /> usando o <paramref name="args" /> especificado e gera o resultado para um <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="input">Um <see cref="T:System.Xml.XPath.XPathNavigator" /> que contém os dados a serem transformados.</param>
      <param name="args">Um <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contém os argumentos qualificados por namespace usados como a entrada para a transformação.</param>
      <param name="output">O <see cref="T:System.IO.TextWriter" /> para o qual deseja gerar.</param>
      <param name="resolver">O <see cref="T:System.Xml.XmlResolver" /> usado para resolver a função XSLT <c>document()</c>. Se isso for <see langword="null" />, a função <c>document()</c> não será resolvida.  
O <see cref="T:System.Xml.XmlResolver" /> não é armazenado em cache após o método <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> ser concluído.</param>
      <exception cref="T:System.InvalidOperationException">Ocorreu um erro ao processar a transformação XSLT.  
Observação: Esta é uma alteração no comportamento de versões anteriores. Um <see cref="T:System.Xml.Xsl.XsltException" /> será gerado se você estiver usando o Microsoft .NET Framework versão 1.1 ou anterior.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)">
      <summary>Transforma os dados XML no <see cref="T:System.Xml.XPath.XPathNavigator" /> usando o <paramref name="args" /> especificado e gera o resultado para um <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="input">Um <see cref="T:System.Xml.XPath.XPathNavigator" /> que contém os dados a serem transformados.</param>
      <param name="args">Um <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contém os argumentos qualificados por namespace usados como a entrada para a transformação.</param>
      <param name="resolver">O <see cref="T:System.Xml.XmlResolver" /> usado para resolver a função XSLT <c>document()</c>. Se isso for <see langword="null" />, a função <c>document()</c> não será resolvida.  
O <see cref="T:System.Xml.XmlResolver" /> não é armazenado em cache após o método <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> ser concluído.</param>
      <returns>Um <see cref="T:System.Xml.XmlReader" /> que contém os resultados da transformação.</returns>
      <exception cref="T:System.InvalidOperationException">Ocorreu um erro ao processar a transformação XSLT.  
Observação: Esta é uma alteração no comportamento de versões anteriores. Um <see cref="T:System.Xml.Xsl.XsltException" /> será gerado se você estiver usando o Microsoft .NET Framework versão 1.1 ou anterior.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
      <summary>Transforma os dados XML no <see cref="T:System.Xml.XPath.XPathNavigator" /> usando o args especificado e gera o resultado para um <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="input">Um <see cref="T:System.Xml.XPath.XPathNavigator" /> que contém os dados a serem transformados.</param>
      <param name="args">Um <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contém os argumentos qualificados por namespace usados como a entrada para a transformação.</param>
      <param name="output">O <see cref="T:System.Xml.XmlWriter" /> para o qual deseja gerar.</param>
      <exception cref="T:System.InvalidOperationException">Ocorreu um erro ao processar a transformação XSLT.  
Observação: Esta é uma alteração no comportamento de versões anteriores. Um <see cref="T:System.Xml.Xsl.XsltException" /> será gerado se você estiver usando o Microsoft .NET Framework versão 1.1 ou anterior.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)">
      <summary>Transforma os dados XML no <see cref="T:System.Xml.XPath.XPathNavigator" /> usando o args especificado e gera o resultado para um <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="input">Um <see cref="T:System.Xml.XPath.XPathNavigator" /> que contém os dados a serem transformados.</param>
      <param name="args">Um <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contém os argumentos qualificados por namespace usados como a entrada para a transformação.</param>
      <param name="output">O <see cref="T:System.Xml.XmlWriter" /> para o qual deseja gerar.</param>
      <param name="resolver">O <see cref="T:System.Xml.XmlResolver" /> usado para resolver a função XSLT <c>document()</c>. Se isso for <see langword="null" />, a função <c>document()</c> não será resolvida.  
O <see cref="T:System.Xml.XmlResolver" /> não é armazenado em cache após o método <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> ser concluído.</param>
      <exception cref="T:System.InvalidOperationException">Ocorreu um erro ao processar a transformação XSLT.  
Observação: Esta é uma alteração no comportamento de versões anteriores. Um <see cref="T:System.Xml.Xsl.XsltException" /> será gerado se você estiver usando o Microsoft .NET Framework versão 1.1 ou anterior.</exception>
    </member>
    <member name="P:System.Xml.Xsl.XslTransform.XmlResolver">
      <summary>Define o <see cref="T:System.Xml.XmlResolver" /> usado para resolver recursos externos quando o método <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> é chamado.</summary>
      <returns>O <see cref="T:System.Xml.XmlResolver" /> a ser usado durante a transformação. Se definido como <see langword="null" />, a função de <c>documento XSLT ()</c> não será resolvida.</returns>
    </member>
    <member name="T:System.Xml.Xsl.XsltSettings">
      <summary>Especifica os recursos de XSLT (linguagem XSL Transformation) que terão suporte durante a execução da folha de estilos XSLT.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltSettings.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Xsl.XsltSettings" /> com as configurações padrão.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltSettings.#ctor(System.Boolean,System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Xsl.XsltSettings" /> com as configurações especificadas.</summary>
      <param name="enableDocumentFunction">
        <see langword="true" /> para habilitar o suporte à função <c>document()</c> de XSLT, caso contrário, <see langword="false" />.</param>
      <param name="enableScript">
        <see langword="true" /> para habilitar o suporte a blocos de scripts inseridos, caso contrário, <see langword="false" />.</param>
    </member>
    <member name="P:System.Xml.Xsl.XsltSettings.Default">
      <summary>Obtém um objeto <see cref="T:System.Xml.Xsl.XsltSettings" /> com configurações padrão. O suporte à função <c>document()</c> de XSLT e a blocos de script inseridos está desabilitado.</summary>
      <returns>Um <see cref="T:System.Xml.Xsl.XsltSettings" /> objeto com as <see cref="P:System.Xml.Xsl.XsltSettings.EnableDocumentFunction" /> propriedades <see cref="P:System.Xml.Xsl.XsltSettings.EnableScript" /> e definidas como <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltSettings.EnableDocumentFunction">
      <summary>Obtém ou define um valor que indica se o suporte para a função <c>document()</c> de XSLT deve ser habilitado.</summary>
      <returns>
        <see langword="true" />para dar suporte à função de <c>documento XSLT ()</c> ; caso contrário <see langword="false" />,. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltSettings.EnableScript">
      <summary>Obtém ou define um valor que indica se deseja habilitar o suporte para os blocos de script inserido.</summary>
      <returns>
        <see langword="true" /> para dar suporte a blocos de script em folhas de estilos XSLT; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltSettings.TrustedXslt">
      <summary>Obtém um objeto <see cref="T:System.Xml.Xsl.XsltSettings" /> que habilita o suporte à função <c>document()</c> de XSLT e a blocos de script inseridos.</summary>
      <returns>Um <see cref="T:System.Xml.Xsl.XsltSettings" /> objeto com as <see cref="P:System.Xml.Xsl.XsltSettings.EnableDocumentFunction" /> propriedades <see cref="P:System.Xml.Xsl.XsltSettings.EnableScript" /> e definidas como <see langword="true" />.</returns>
    </member>
  </members>
</doc>