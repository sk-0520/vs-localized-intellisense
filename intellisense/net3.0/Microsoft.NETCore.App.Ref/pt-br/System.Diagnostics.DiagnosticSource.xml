<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Diagnostics.DiagnosticSource</name>
  </assembly>
  <members>
    <member name="T:System.Diagnostics.Activity">
      <summary>Representa uma operação com contexto a ser usada para registro em log.</summary>
    </member>
    <member name="M:System.Diagnostics.Activity.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Activity" />.</summary>
      <param name="operationName">O nome da operação.</param>
    </member>
    <member name="P:System.Diagnostics.Activity.ActivityTraceFlags">
      <summary>Obtém os sinalizadores (definidos pela especificação de ID W3C) associados à atividade.</summary>
      <returns>os sinalizadores associados à atividade.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.AddBaggage(System.String,System.String)">
      <summary>Atualiza <see cref="T:System.Diagnostics.Activity" /> para ter um novo item de bagagem com a chave e o valor especificados.</summary>
      <param name="key">A chave de bagagem.</param>
      <param name="value">O valor da bagagem.</param>
      <returns>
        <see langword="this" /> para encadeamento conveniente.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.AddTag(System.String,System.String)">
      <summary>Atualiza <see cref="T:System.Diagnostics.Activity" /> para ter uma nova marcação com os <paramref name="key" /> e <paramref name="value" /> fornecidos. .</summary>
      <param name="key">A chave de marcação.</param>
      <param name="value">O valor da marcação.</param>
      <returns>
        <see langword="this" /> para encadeamento conveniente.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Baggage">
      <summary>Obtém uma coleção de pares chave/valor que representa as informações que são passadas para os filhos deste <see cref="T:System.Diagnostics.Activity" />.</summary>
      <returns>Uma enumeração de pares chave-valor da cadeia de caracteres.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Current">
      <summary>Obtém ou define a operação atual (<see cref="T:System.Diagnostics.Activity" />) do thread atual.  Isso flui entre as chamadas assíncronas.</summary>
      <returns>A operação atual para o thread atual.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.DefaultIdFormat">
      <summary>Obtém ou define o formato da ID padrão para o <see cref="T:System.Diagnostics.Activity" />.</summary>
    </member>
    <member name="P:System.Diagnostics.Activity.Duration">
      <summary>Obtém a duração da operação.</summary>
      <returns>O Delta entre <see cref="P:System.Diagnostics.Activity.StartTimeUtc" /> e a hora de término, <see cref="T:System.Diagnostics.Activity" /> se o tiver<see cref="M:System.Diagnostics.Activity.Stop" /> terminado <see cref="M:System.Diagnostics.Activity.SetEndTime(System.DateTime)" /> (ou se foi chamado <see cref="F:System.TimeSpan.Zero" /> ), <see cref="T:System.Diagnostics.Activity" /> ou se o não <see cref="M:System.Diagnostics.Activity.SetEndTime(System.DateTime)" /> foi concluído e não foi chamado.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.ForceDefaultIdFormat">
      <summary>Obtém ou define um valor que determina se o <see cref="P:System.Diagnostics.Activity.DefaultIdFormat" /> sempre é usado para definir o formato da ID padrão.</summary>
      <returns>
        <see langword="true" />para sempre usar o <see cref="P:System.Diagnostics.Activity.DefaultIdFormat" />; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.GetBaggageItem(System.String)">
      <summary>Retorna o valor de um par chave-valor adicionado para a atividade com <see cref="M:System.Diagnostics.Activity.AddBaggage(System.String,System.String)" />.</summary>
      <param name="key">A chave de bagagem.</param>
      <returns>O valor do item par chave-valor, se ele existir, ou <see langword="null" />, se ele não existir.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Id">
      <summary>Obtém um identificador que é específico para uma determinada solicitação.</summary>
      <returns>A ID da atividade.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.IdFormat">
      <summary>Obtém o formato do <see cref="P:System.Diagnostics.Activity.Id" />.</summary>
      <returns>O formato para o <see cref="P:System.Diagnostics.Activity.Id" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.OperationName">
      <summary>Obtém o nome da operação.</summary>
      <returns>O nome da operação.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Parent">
      <summary>Obtém o <see cref="T:System.Diagnostics.Activity" /> pai que criou essa atividade.</summary>
      <returns>O pai <see cref="T:System.Diagnostics.Activity" />disso, se for do mesmo processo, ou <see langword="null" /> se essa instância não tiver um pai (é uma atividade raiz) ou se o pai estiver fora do processo.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.ParentId">
      <summary>Obtém a ID do pai dessa atividade.</summary>
      <returns>A ID pai, se houver, ou <see langword="null" /> se não tiver.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.ParentSpanId">
      <summary>Obtém o <see cref="P:System.Diagnostics.Activity.SpanId" /> do pai.</summary>
      <returns>
        <see cref="P:System.Diagnostics.Activity.SpanId" />O.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Recorded">
      <summary>Obtém um valor que indica se o sinalizador W3CIdFlags.Recorded foi definido.</summary>
      <returns>
        <see langword="true" />Se o sinalizador W3CIdFlags. grave for definido; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.RootId">
      <summary>Obtém a ID de raiz deste <see cref="T:System.Diagnostics.Activity" />.</summary>
      <returns>A ID raiz ou <see langword="null" /> se a instância atual tiver um <see cref="P:System.Diagnostics.Activity.ParentId" /> ou um <see cref="P:System.Diagnostics.Activity.Id" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetEndTime(System.DateTime)">
      <summary>Atualiza <see cref="T:System.Diagnostics.Activity" /> para definir <see cref="P:System.Diagnostics.Activity.Duration" /> como a diferença entre <see cref="P:System.Diagnostics.Activity.StartTimeUtc" /> e a hora de término especificada.</summary>
      <param name="endTimeUtc">A hora de término do UTC.</param>
      <returns>
        <see langword="this" /> para encadeamento conveniente.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetIdFormat(System.Diagnostics.ActivityIdFormat)">
      <summary>Define o formato da ID neste <see cref="T:System.Diagnostics.Activity" /> antes que seja iniciado.</summary>
      <param name="format">Um dos valores de enumeração que especifica o formato da propriedade <see cref="P:System.Diagnostics.Activity.Id" />.</param>
      <returns>
        <see langword="this" /> para encadeamento conveniente.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetParentId(System.Diagnostics.ActivityTraceId,System.Diagnostics.ActivitySpanId,System.Diagnostics.ActivityTraceFlags)">
      <summary>Define a ID pai usando a convenção W3C de um TraceId e um SpanId.</summary>
      <param name="traceId">O TraceId da atividade pai.</param>
      <param name="spanId">O SpanId da atividade pai.</param>
      <param name="activityTraceFlags">Um dos valores de enumeração que especifica sinalizadores definidos pelo padrão W3C associados a uma atividade.</param>
      <returns>
        <see langword="this" /> para encadeamento conveniente.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetParentId(System.String)">
      <summary>Atualiza este <see cref="T:System.Diagnostics.Activity" /> para indicar que o <see cref="T:System.Diagnostics.Activity" /> com uma ID <paramref name="parentId" /> causou este <see cref="T:System.Diagnostics.Activity" />.</summary>
      <param name="parentId">A ID da operação pai.</param>
      <returns>
        <see langword="this" /> para encadeamento conveniente.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetStartTime(System.DateTime)">
      <summary>Define a hora de início deste <see cref="T:System.Diagnostics.Activity" />.</summary>
      <param name="startTimeUtc">A hora de início de <see cref="T:System.Diagnostics.Activity" /> em UTC.</param>
      <returns>
        <see langword="this" /> para encadeamento conveniente.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.SpanId">
      <summary>Obtém a parte SPAN do <see cref="P:System.Diagnostics.Activity.Id" />.</summary>
      <returns>A ID da parte span de <see cref="P:System.Diagnostics.Activity.Id" />, se o <see cref="T:System.Diagnostics.Activity" /> tiver o formato W3C; caso contrário, um zero <see langword="SpanId" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.Start">
      <summary>Inicia a atividade.</summary>
      <returns>
        <see langword="this" /> para encadeamento conveniente.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.StartTimeUtc">
      <summary>Obtém a hora de quando a operação foi iniciada.</summary>
      <returns>A hora UTC em que a operação foi iniciada.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.Stop">
      <summary>Interrompe a atividade.</summary>
    </member>
    <member name="P:System.Diagnostics.Activity.Tags">
      <summary>Obtém uma coleção de pares chave/valor que representam informações que serão registradas com o <see cref="T:System.Diagnostics.Activity" /> no sistema de registro em log.</summary>
      <returns>Uma enumeração de String-String-Value-pairs.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.TraceId">
      <summary>Obtém a parte TraceId do <see cref="P:System.Diagnostics.Activity.Id" />.</summary>
      <returns>A ID da parte TraceID do <see cref="P:System.Diagnostics.Activity.Id" />, se a ID tiver o formato W3C; caso contrário, um TraceID zero.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.TraceStateString">
      <summary>Obtém o cabeçalho <see langword="tracestate" /> W3C.</summary>
      <returns>O cabeçalho <see langword="tracestate" /> W3C.</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityIdFormat">
      <summary>Especifica o formato da propriedade <see cref="P:System.Diagnostics.Activity.Id" />.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityIdFormat.Hierarchical">
      <summary>O formato hierárquico.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityIdFormat.Unknown">
      <summary>Um formato desconhecido.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityIdFormat.W3C">
      <summary>O formato W3C.</summary>
    </member>
    <member name="T:System.Diagnostics.ActivitySpanId">
      <summary>Representa um <see cref="P:System.Diagnostics.Activity.SpanId" /> formatado com base em um padrão W3C.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CopyTo(System.Span{System.Byte})">
      <summary>Copia os 8 bytes do <see cref="T:System.Diagnostics.ActivitySpanId" /> atual para um intervalo especificado.</summary>
      <param name="destination">O intervalo para o qual os 8 bytes da SpanID devem ser copiados.</param>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateFromBytes(System.ReadOnlySpan{System.Byte})">
      <summary>Cria um valor <see cref="T:System.Diagnostics.ActivitySpanId" /> com base em um intervalo somente leitura de 8 bytes.</summary>
      <param name="idData">Um intervalo somente leitura de oito bytes.</param>
      <returns>A nova ID do intervalo.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="idData" /> não contém oito bytes.</exception>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateFromString(System.ReadOnlySpan{System.Char})">
      <summary>Cria um valor <see cref="T:System.Diagnostics.ActivitySpanId" /> com base em um intervalo somente leitura de 16 caracteres hexadecimais.</summary>
      <param name="idData">Um intervalo que contém 16 caracteres hexadecimais.</param>
      <returns>A nova ID do intervalo.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="idData" /> não contém 16 caracteres hexadecimais.

ou - 
Os caracteres em <paramref name="idData" /> não são todos caracteres hexadecimais em minúsculas ou todos zeros.</exception>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateFromUtf8String(System.ReadOnlySpan{System.Byte})">
      <summary>Cria um valor <see cref="T:System.Diagnostics.ActivitySpanId" /> com base em um intervalo somente leitura de bytes codificados por UTF8.</summary>
      <param name="idData">Um intervalo somente leitura de bytes codificados por UTF8.</param>
      <returns>A nova ID do intervalo.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateRandom">
      <summary>Cria um <see cref="T:System.Diagnostics.ActivitySpanId" /> com base em um número aleatório (que muito provavelmente seja exclusivo).</summary>
      <returns>A nova ID do intervalo.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.Equals(System.Diagnostics.ActivitySpanId)">
      <summary>Determina se essa instância e a instância de <see cref="T:System.Diagnostics.ActivitySpanId" /> especificada têm o mesmo valor.</summary>
      <param name="spanId">A instância a ser comparada.</param>
      <returns>
        <see langword="true" /> se <paramref name="spanId" /> tiver o mesmo valor hexadecimal que a instância atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.Equals(System.Object)">
      <summary>A instância atual e um objeto especificado, que também deve ser uma instância de <see cref="T:System.Diagnostics.ActivitySpanId" />, têm o mesmo valor.</summary>
      <param name="obj">O objeto a ser comparado.</param>
      <returns>
        <see langword="true" /> se <paramref name="obj" /> for uma instância de <see cref="T:System.Diagnostics.ActivitySpanId" /> e tiver o mesmo valor hexadecimal que a instância atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.GetHashCode">
      <summary>Retorna o código hash do SpanId.</summary>
      <returns>O código hash do SpanId.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.op_Equality(System.Diagnostics.ActivitySpanId,System.Diagnostics.ActivitySpanId)">
      <summary>Determina se duas instâncias de <see cref="T:System.Diagnostics.ActivitySpanId" /> especificadas têm o mesmo valor.</summary>
      <param name="spanId1">A primeira instância a ser comparada.</param>
      <param name="spandId2">A segunda instância a ser comparada.</param>
      <returns>
        <see langword="true" /> se o SpanId de <paramref name="spanId1" /> for o mesmo que o SpanId de <paramref name="spandId2" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.op_Inequality(System.Diagnostics.ActivitySpanId,System.Diagnostics.ActivitySpanId)">
      <summary>Determina se duas instâncias de <see cref="T:System.Diagnostics.ActivitySpanId" /> especificadas têm valores diferentes.</summary>
      <param name="spanId1">A primeira instância a ser comparada.</param>
      <param name="spandId2">A segunda instância a ser comparada.</param>
      <returns>
        <see langword="true" /> se o SpanId de <paramref name="spanId1" /> for diferente do SpanId de <paramref name="spandId2" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.ToHexString">
      <summary>Retorna uma cadeia de 16 caracteres hexadecimais que representa a ID do intervalo.</summary>
      <returns>A representação da cadeia de 16 caracteres hexadecimais dessa ID de intervalo.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.ToString">
      <summary>Retorna uma cadeia de 16 caracteres hexadecimais que representa a ID do intervalo.</summary>
      <returns>A representação da cadeia de 16 caracteres hexadecimais dessa ID de intervalo.</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityTraceFlags">
      <summary>Especifica sinalizadores definidos pelo padrão W3C associados a uma atividade.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityTraceFlags.None">
      <summary>A atividade não foi marcada.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityTraceFlags.Recorded">
      <summary>A atividade (ou, mais provavelmente, suas atividades pai) foi marcada como útil para ser registrada.</summary>
    </member>
    <member name="T:System.Diagnostics.ActivityTraceId">
      <summary>Representa um <see cref="P:System.Diagnostics.Activity.TraceId" /> cujo formato se baseia em um padrão W3C.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CopyTo(System.Span{System.Byte})">
      <summary>Copia os 16 bytes do <see cref="T:System.Diagnostics.ActivityTraceId" /> atual para um intervalo especificado.</summary>
      <param name="destination">O intervalo para o qual os 16 bytes da ID do rastreamento devem ser copiados.</param>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateFromBytes(System.ReadOnlySpan{System.Byte})">
      <summary>Cria um valor <see cref="T:System.Diagnostics.ActivityTraceId" /> com base em um intervalo somente leitura de 16 bytes.</summary>
      <param name="idData">Um intervalo somente leitura de 16 bytes.</param>
      <returns>A nova ID de rastreamento.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="idData" /> não contém oito bytes.</exception>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateFromString(System.ReadOnlySpan{System.Char})">
      <summary>Cria um valor <see cref="T:System.Diagnostics.ActivityTraceId" /> com base em um intervalo somente leitura de 32 caracteres hexadecimais.</summary>
      <param name="idData">Um intervalo que contém 32 caracteres hexadecimais.</param>
      <returns>A nova ID de rastreamento.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="idData" /> não contém 16 caracteres hexadecimais.

ou -

Os caracteres em <paramref name="idData" /> não são todos caracteres hexadecimais em minúsculas ou todos zeros.</exception>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateFromUtf8String(System.ReadOnlySpan{System.Byte})">
      <summary>Cria um valor <see cref="T:System.Diagnostics.ActivityTraceId" /> com base em um intervalo somente leitura de bytes codificados por UTF8.</summary>
      <param name="idData">Um intervalo somente leitura de bytes codificados por UTF8.</param>
      <returns>A nova ID de rastreamento.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateRandom">
      <summary>Cria um <see cref="T:System.Diagnostics.ActivitySpanId" /> com base em um número aleatório (que muito provavelmente seja exclusivo).</summary>
      <returns>A nova ID do intervalo.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.Equals(System.Diagnostics.ActivityTraceId)">
      <summary>Determina se a instância atual e um <see cref="T:System.Diagnostics.ActivityTraceId" /> especificado são iguais.</summary>
      <param name="traceId">A instância a ser comparada.</param>
      <returns>
        <see langword="true" /> se <paramref name="traceId" /> tiver o mesmo valor hexadecimal que a instância atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.Equals(System.Object)">
      <summary>Determina se essa instância e um objeto especificado, que também deve ser uma instância de <see cref="T:System.Diagnostics.ActivityTraceId" />, têm o mesmo valor.</summary>
      <param name="obj">O objeto a ser comparado.</param>
      <returns>
        <see langword="true" /> se <paramref name="obj" /> for uma instância de <see cref="T:System.Diagnostics.ActivityTraceId" /> e tiver o mesmo valor hexadecimal que a instância atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.GetHashCode">
      <summary>Retorna o código hash do TraceId.</summary>
      <returns>O código hash do TraceId.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.op_Equality(System.Diagnostics.ActivityTraceId,System.Diagnostics.ActivityTraceId)">
      <summary>Determina se duas instâncias de <see cref="T:System.Diagnostics.ActivityTraceId" /> especificadas têm o mesmo valor.</summary>
      <param name="traceId1">A primeira instância a ser comparada.</param>
      <param name="traceId2">A segunda instância a ser comparada.</param>
      <returns>
        <see langword="true" /> se o TraceId de <paramref name="traceId1" /> for o mesmo que o TraceId de <paramref name="traceId2" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.op_Inequality(System.Diagnostics.ActivityTraceId,System.Diagnostics.ActivityTraceId)">
      <summary>Determina se duas instâncias de <see cref="T:System.Diagnostics.ActivityTraceId" /> especificadas têm o mesmo valor.</summary>
      <param name="traceId1">A primeira instância a ser comparada.</param>
      <param name="traceId2">A segunda instância a ser comparada.</param>
      <returns>
        <see langword="true" /> se o TraceId de <paramref name="traceId1" /> for diferente do TraceId de <paramref name="traceId2" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.ToHexString">
      <summary>Retorna uma cadeia de 16 caracteres hexadecimais que representa a ID do intervalo.</summary>
      <returns>A representação de cadeia de caracteres hexadecimal de 32 caracteres dessa ID de rastreamento.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.ToString">
      <summary>Retorna uma cadeia de caracteres hexadecimal de 32 caracteres que representa essa ID de rastreamento.</summary>
      <returns>A representação de cadeia hexadecimal de 32 caracteres dessa ID de rastreamento.</returns>
    </member>
    <member name="T:System.Diagnostics.DiagnosticListener">
      <summary>Fornece uma implementação da classe <see cref="T:System.Diagnostics.DiagnosticSource" /> abstrata que representa um local nomeado para o qual uma fonte envia suas informações (eventos).</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.#ctor(System.String)">
      <summary>Cria um novo <see cref="T:System.Diagnostics.DiagnosticListener" />.</summary>
      <param name="name">O nome deste <see cref="T:System.Diagnostics.DiagnosticListener" />.</param>
    </member>
    <member name="P:System.Diagnostics.DiagnosticListener.AllListeners">
      <summary>Obtém a coleção de ouvintes para este <see cref="T:System.Diagnostics.DiagnosticListener" />.</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Dispose">
      <summary>Descarta o NotificationListeners.</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.IsEnabled">
      <summary>Determina se há algum assinante registrado.</summary>
      <returns>
        <see langword="true" />, se não houver assinante registrado, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.IsEnabled(System.String)">
      <summary>Verifica se o <see cref="T:System.Diagnostics.DiagnosticListener" /> está habilitado.</summary>
      <param name="name" />
      <returns>
        <see langword="true" />, se as notificações estiverem habilitadas, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.IsEnabled(System.String,System.Object,System.Object)">
      <summary>Verifica se DiagnosticListener está habilitado.</summary>
      <param name="name" />
      <param name="arg1" />
      <param name="arg2" />
      <returns>
        <see langword="true" />, se ele estiver habilitado, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.DiagnosticListener.Name">
      <summary>Obtém o nome deste <see cref="T:System.Diagnostics.DiagnosticListener" />.</summary>
      <returns>O nome do <see cref="T:System.Diagnostics.DiagnosticListener" />.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.OnActivityExport(System.Diagnostics.Activity,System.Object)">
      <summary>Invoca o método OnActivityExport de todos os assinantes.</summary>
      <param name="activity">A atividade afetada por um evento externo.</param>
      <param name="payload">Um objeto que representa a solicitação de saída.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.OnActivityImport(System.Diagnostics.Activity,System.Object)">
      <summary>Invoca o método OnActivityImport de todos os assinantes.</summary>
      <param name="activity">A atividade afetada por um evento externo.</param>
      <param name="payload">Um objeto que representa a solicitação de entrada.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
      <summary>Adiciona um assinante.</summary>
      <param name="observer">Um assinante.</param>
      <returns>Uma referência a uma interface que permite que o ouvinte para de receber notificações antes que o <see cref="T:System.Diagnostics.DiagnosticSource" /> tenha terminado de enviá-las.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Func{System.String,System.Object,System.Object,System.Boolean})">
      <summary>Adiciona um assinante e opcionalmente filtra eventos com base em seu nome e até dois objetos de contexto.</summary>
      <param name="observer">Um assinante.</param>
      <param name="isEnabled">Um delegado que filtra eventos com base em seu nome e até dois objetos de contexto (que podem ser <see langword="null" />) ou <see langword="null" /> se um filtro de evento não for desejável.</param>
      <returns>Uma referência a uma interface que permite que o ouvinte para de receber notificações antes que o <see cref="T:System.Diagnostics.DiagnosticSource" /> tenha terminado de enviá-las.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Func{System.String,System.Object,System.Object,System.Boolean},System.Action{System.Diagnostics.Activity,System.Object},System.Action{System.Diagnostics.Activity,System.Object})">
      <summary>Adiciona um assinante, opcionalmente, filtra eventos com base em seu nome e até dois objetos de contexto e especifica os métodos a serem chamados quando os provedores importam ou exportam atividades de fora do processo.</summary>
      <param name="observer">Um assinante.</param>
      <param name="isEnabled">Um delegado que filtra eventos com base em seu nome e até dois objetos de contexto (que podem ser <see langword="null" />) ou, se um filtro de evento não for desejável, <see langword="null" />.</param>
      <param name="onActivityImport">Um delegado de ação que recebe a atividade afetada por um evento externo e um objeto que representa a solicitação de entrada.</param>
      <param name="onActivityExport">Um delegado de ação que recebe a atividade afetada por um evento externo e um objeto que representa a solicitação de saída.</param>
      <returns>Uma referência a uma interface que permite que o ouvinte para de receber notificações antes que o <see cref="T:System.Diagnostics.DiagnosticSource" /> tenha terminado de enviá-las.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Predicate{System.String})">
      <summary>Adiciona um assinante e, opcionalmente, filtra eventos com base em seu nome.</summary>
      <param name="observer">Um assinante.</param>
      <param name="isEnabled">Um delegado que filtra eventos com base em seu nome (<see cref="T:System.String" />). O delegado deverá retornar <see langword="true" /> se o evento estiver habilitado.</param>
      <returns>Uma referência a uma interface que permite que o ouvinte para de receber notificações antes que o <see cref="T:System.Diagnostics.DiagnosticSource" /> tenha terminado de enviá-las.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.ToString">
      <summary>Retorna uma cadeia de caracteres com o nome deste DiagnosticListener.</summary>
      <returns>O nome deste DiagnosticListener.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Write(System.String,System.Object)">
      <summary>Registra uma notificação.</summary>
      <param name="name">O nome do evento a ser registrado.</param>
      <param name="value">Um objeto que representa o conteúdo do evento.</param>
    </member>
    <member name="T:System.Diagnostics.DiagnosticSource">
      <summary>Uma classe abstrata que permite que o código seja instrumentado para registro em log de tempo de produção dos conteúdos de dados avançados para consumo dentro do processo que foi instrumentado.</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.#ctor">
      <summary>Inicializa uma instância da classe <see cref="T:System.Diagnostics.DiagnosticSource" />.</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.IsEnabled(System.String)">
      <summary>Verifica se o evento de notificação está habilitado.</summary>
      <param name="name">O nome do evento que está sendo gravado.</param>
      <returns>
        <see langword="true" />, se o evento de notificação estiver habilitado, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.IsEnabled(System.String,System.Object,System.Object)">
      <summary>Verifica se o evento de notificação está habilitado.</summary>
      <param name="name">O nome do evento que está sendo gravado.</param>
      <param name="arg1">Um objeto que representa o contexto adicional para IsEnabled. Os consumidores devem esperar receber <see langword="null" />, que pode indicar que o produtor chamou o IsEnabled(string) puro para verificar se o consumidor deseja receber notificações para tais eventos. Com base nisso, o produtor pode chamar IsEnabled(string, object, object) novamente com um contexto não relacionado a <see langword="null" />.</param>
      <param name="arg2">Opcional. Um objeto que representa o contexto adicional para IsEnabled. <see langword="null" /> por padrão. Os consumidores devem esperar receber <see langword="null" />, que pode indicar que o produtor chamou o IsEnabled(string) puro ou produtor passou o contexto necessário no <paramref name="arg1" />.</param>
      <returns>
        <see langword="true" />, se o evento de notificação estiver habilitado, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.OnActivityExport(System.Diagnostics.Activity,System.Object)">
      <summary>Transfere um estado de uma atividade para algum evento ou operação, como uma solicitação HTTP de saída, que ocorrerá fora do processo.</summary>
      <param name="activity">A atividade afetada por um evento externo.</param>
      <param name="payload">Um objeto que representa a solicitação de saída.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.OnActivityImport(System.Diagnostics.Activity,System.Object)">
      <summary>Transfere um estado para uma atividade de algum evento ou operação, como uma solicitação de entrada, que ocorreu fora do processo.</summary>
      <param name="activity">A atividade afetada por um evento externo.</param>
      <param name="payload">Um conteúdo que representa a solicitação de entrada.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.StartActivity(System.Diagnostics.Activity,System.Object)">
      <summary>Inicia um <see cref="T:System.Diagnostics.Activity" /> e grava um evento de início.</summary>
      <param name="activity">O <see cref="T:System.Diagnostics.Activity" /> a ser iniciado.</param>
      <param name="args">Um objeto que representa o valor sendo passado como um conteúdo para o evento.</param>
      <returns>A atividade iniciada para encadeamento conveniente.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.StopActivity(System.Diagnostics.Activity,System.Object)">
      <summary>Interrompe o <see cref="T:System.Diagnostics.Activity" /> determinado, mantém a atividade <see cref="P:System.Diagnostics.Activity.Current" /> global e notifica os consumidores que o <see cref="T:System.Diagnostics.Activity" /> foi interrompido.</summary>
      <param name="activity">A atividade a ser interrompida.</param>
      <param name="args">Um objeto que representa o valor passado como um conteúdo para o evento.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.Write(System.String,System.Object)">
      <summary>Fornece uma maneira genérica de registro em log de conteúdos complexos.</summary>
      <param name="name">O nome do evento que está sendo gravado.</param>
      <param name="value">Um objeto que representa o valor sendo passado como um conteúdo para o evento. Isso geralmente é um tipo anônimo que contém vários valores inferiores.</param>
    </member>
  </members>
</doc>