<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Diagnostics.Tracing</name>
  </assembly>
  <members>
    <member name="T:System.Diagnostics.Tracing.DiagnosticCounter">
      <summary>
        <see cref="T:System.Diagnostics.Tracing.DiagnosticCounter" /> é uma classe abstrata que serve como classe pai de várias classes Counter*, ou seja, <see cref="T:System.Diagnostics.Tracing.EventCounter" />, <see cref="T:System.Diagnostics.Tracing.PollingCounter" />, <see cref="T:System.Diagnostics.Tracing.IncrementingEventCounter" /> e <see cref="T:System.Diagnostics.Tracing.IncrementingPollingCounter" />.</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.DiagnosticCounter.AddMetadata(System.String,System.String)">
      <summary>Adiciona metadados chave-valor ao contador que serão incluídos como parte do conteúdo</summary>
      <param name="key">A chave de metadados.</param>
      <param name="value">O valor de metadados.</param>
    </member>
    <member name="P:System.Diagnostics.Tracing.DiagnosticCounter.DisplayName">
      <summary>Obtém ou define o nome de exibição do contador.</summary>
      <returns>O nome de exibição do contador.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.DiagnosticCounter.DisplayUnits">
      <summary>Obtém ou define as unidades de exibição do contador.</summary>
      <returns>As unidades de exibição do contador.</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.DiagnosticCounter.Dispose">
      <summary>Remove o contador do conjunto sobre o qual o <see cref="T:System.Diagnostics.Tracing.EventSource" /> gerará relatório.</summary>
    </member>
    <member name="P:System.Diagnostics.Tracing.DiagnosticCounter.EventSource">
      <summary>Obtém o EventSource a que este contador está anexado.</summary>
      <returns>A EventSource à qual esse contador está anexado.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.DiagnosticCounter.Name">
      <summary>Obtém o nome deste contador.</summary>
      <returns>O nome deste contador.</returns>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventActivityOptions">
      <summary>Especifica o rastreamento de eventos de início e interrupção de atividades.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventActivityOptions.Detachable">
      <summary>Permitir a sobreposição de atividades. Por padrão, os inícios e paradas da atividade devem ser aninhados na propriedade. Ou seja, uma sequência Iniciar A, Iniciar B, Parar A, Parar B não é permitida e resultará em B parando ao mesmo tempo que A.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventActivityOptions.Disable">
      <summary>Desligar o acompanhamento de iniciar e parar.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventActivityOptions.None">
      <summary>Use o comportamento padrão para o acompanhamento de início e parada.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventActivityOptions.Recursive">
      <summary>Permitir início de atividades recursivas. Por padrão, uma atividade não pode ser recursiva. Ou seja, uma sequência Iniciar A, Iniciar A, Parar A, Parar A não é permitida. Atividades recursivas não intencionais podem ocorrer se o aplicativo é executado e para alguns a interrupção não é atingida antes de outro início ser chamado.</summary>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventAttribute">
      <summary>Especifica informações de esquema de evento adicionais para um evento.</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventAttribute.#ctor(System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Tracing.EventAttribute" /> com o identificador de eventos especificado.</summary>
      <param name="eventId">O identificador de evento para o evento.</param>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventAttribute.ActivityOptions">
      <summary>Especifica o comportamento dos eventos de início e parada de uma atividade. Uma atividade é a região de tempo em um aplicativo entre o início e a parada.</summary>
      <returns>Retorna <see cref="T:System.Diagnostics.Tracing.EventActivityOptions" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventAttribute.Channel">
      <summary>Obtém ou define um log de eventos adicional no qual o evento deve ser gravado.</summary>
      <returns>Um log de eventos adicional em que o evento deve ser gravado.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventAttribute.EventId">
      <summary>Obtém ou define o identificador do evento.</summary>
      <returns>O identificador de evento. Esse valor deve estar entre 0 e 65535.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventAttribute.Keywords">
      <summary>Obtém ou define as palavras-chave para o evento.</summary>
      <returns>Um combinação bit a bit dos valores de enumeração.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventAttribute.Level">
      <summary>Obtém ou define o nível do evento.</summary>
      <returns>Um dos valores de enumeração que especifica o nível do evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventAttribute.Message">
      <summary>Obtém ou define a mensagem para o evento.</summary>
      <returns>A mensagem para o evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventAttribute.Opcode">
      <summary>Obtém ou define o código de operação para o evento.</summary>
      <returns>Um dos valores de enumeração que especifica o código de operação.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventAttribute.Tags">
      <summary>Obtém ou define o valor <see cref="T:System.Diagnostics.Tracing.EventTags" /> deste objeto <see cref="T:System.Diagnostics.Tracing.EventAttribute" />. Uma marca de evento é um valor definido pelo usuário que é passado quando o evento é registrado.</summary>
      <returns>O <see cref="T:System.Diagnostics.Tracing.EventTags" /> valor deste <see cref="T:System.Diagnostics.Tracing.EventAttribute" /> objeto. Uma marca de evento é um valor definido pelo usuário que é passado quando o evento é registrado.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventAttribute.Task">
      <summary>Obtém ou define a tarefa para o evento.</summary>
      <returns>A tarefa para o evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventAttribute.Version">
      <summary>Obtém ou define a versão do evento.</summary>
      <returns>A versão do evento.</returns>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventChannel">
      <summary>Especifica o canal de log de eventos para o evento.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventChannel.Admin">
      <summary>O canal de log do administrador.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventChannel.Analytic">
      <summary>O canal analítico.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventChannel.Debug">
      <summary>O canal de depuração.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventChannel.None">
      <summary>Nenhum canal especificado.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventChannel.Operational">
      <summary>O canal operacional.</summary>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventCommand">
      <summary>Descreve o comando (propriedade <see cref="P:System.Diagnostics.Tracing.EventCommandEventArgs.Command" />) que é passado para o retorno de chamada <see cref="M:System.Diagnostics.Tracing.EventSource.OnEventCommand(System.Diagnostics.Tracing.EventCommandEventArgs)" />.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventCommand.Disable">
      <summary>Desabilitar o evento.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventCommand.Enable">
      <summary>Habilitar o evento.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventCommand.SendManifest">
      <summary>Enviar o manifesto.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventCommand.Update">
      <summary>Atualizar o evento.</summary>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventCommandEventArgs">
      <summary>Fornece os argumentos para o retorno de chamada <see cref="M:System.Diagnostics.Tracing.EventSource.OnEventCommand(System.Diagnostics.Tracing.EventCommandEventArgs)" />.</summary>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventCommandEventArgs.Arguments">
      <summary>Obtém a matriz de argumentos para o retorno de chamada.</summary>
      <returns>Uma matriz de argumentos de retorno de chamada.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventCommandEventArgs.Command">
      <summary>Obtém o comando para o retorno de chamada.</summary>
      <returns>O comando de retorno de chamada.</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventCommandEventArgs.DisableEvent(System.Int32)">
      <summary>Desabilita o evento que tem o identificador especificado.</summary>
      <param name="eventId">O identificador do evento a ser desabilitado.</param>
      <returns>
        <see langword="true" /> se <paramref name="eventId" /> estiver no intervalo; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventCommandEventArgs.EnableEvent(System.Int32)">
      <summary>Habilita o evento que tem o identificador especificado.</summary>
      <param name="eventId">O identificador do evento a ser habilitado.</param>
      <returns>
        <see langword="true" /> se <paramref name="eventId" /> estiver no intervalo; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventCounter">
      <summary>Oferece a capacidade de coletar estatísticas para eventos muito frequentes por meio da classe <see cref="T:System.Diagnostics.Tracing.EventSource" />.</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventCounter.#ctor(System.String,System.Diagnostics.Tracing.EventSource)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Tracing.EventCounter" />.</summary>
      <param name="name">O nome do contador de eventos.</param>
      <param name="eventSource">A fonte do evento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> é <see langword="null" />.  

ou - 
<paramref name="eventSource" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventCounter.ToString">
      <summary>Retorna uma representação de cadeia de caracteres da instância do contador de eventos atual.</summary>
      <returns>O nome, a contagem e a média do contador de eventos atual.</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventCounter.WriteMetric(System.Double)">
      <summary>Gravará a métrica se os contadores de desempenho estiverem ativados.</summary>
      <param name="value">O valor a ser gravado.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventCounter.WriteMetric(System.Single)">
      <summary>Gravará a métrica se os contadores de desempenho estiverem ativados.</summary>
      <param name="value">O valor a ser gravado.</param>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventDataAttribute">
      <summary>Especifica um tipo a ser passado para o método <see cref="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions,``0)" />.</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventDataAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" />.</summary>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventDataAttribute.Name">
      <summary>Obtém ou define o nome a ser aplicado a um evento se o tipo de evento ou propriedade não for nomeado explicitamente.</summary>
      <returns>O nome a ser aplicado ao evento ou à propriedade.</returns>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventFieldAttribute">
      <summary>O <see cref="T:System.Diagnostics.Tracing.EventFieldAttribute" /> é colocado em campos de tipos definidos pelo usuário que são passados como payloads <see cref="T:System.Diagnostics.Tracing.EventSource" />.</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventFieldAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Tracing.EventFieldAttribute" />.</summary>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventFieldAttribute.Format">
      <summary>Obtém ou define o valor que especifica como formatar o valor de um tipo definido pelo usuário.</summary>
      <returns>O valor que especifica como formatar o valor de um tipo definido pelo usuário.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventFieldAttribute.Tags">
      <summary>Obtém ou define o valor <see cref="T:System.Diagnostics.Tracing.EventFieldTags" /> definido pelo usuário que é necessário para os campos que contêm dados que não são de um dos tipos compatíveis.</summary>
      <returns>Retorna <see cref="T:System.Diagnostics.Tracing.EventFieldTags" />.</returns>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventFieldFormat">
      <summary>Especifica como formatar o valor de um tipo definido pelo usuário e pode ser usado para substituir a formatação padrão para um campo.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventFieldFormat.Boolean">
      <summary>Boolean</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventFieldFormat.Default">
      <summary>Padrão.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventFieldFormat.Hexadecimal">
      <summary>Hexadecimal.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventFieldFormat.HResult">
      <summary>HResult.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventFieldFormat.Json">
      <summary>JSON.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventFieldFormat.String">
      <summary>Cadeia.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventFieldFormat.Xml">
      <summary>XML.</summary>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventFieldTags">
      <summary>Especifica a marcação definida pelo usuário que é colocada em campos de tipos definidos pelo usuário que são passados como payloads <see cref="T:System.Diagnostics.Tracing.EventSource" /> por meio do <see cref="T:System.Diagnostics.Tracing.EventFieldAttribute" />.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventFieldTags.None">
      <summary>Não especifica nenhuma marca e é igual a zero.</summary>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventIgnoreAttribute">
      <summary>Especifica que uma propriedade deve ser ignorada durante a gravação de um tipo de evento com o método <see cref="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,``0@)" />.</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventIgnoreAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Tracing.EventIgnoreAttribute" />.</summary>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventKeywords">
      <summary>Define as palavras-chave padrão que se aplicam a eventos.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventKeywords.All">
      <summary>Todos os bits são definidos como 1, representando todos os grupos de eventos possíveis.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventKeywords.AuditFailure">
      <summary>Anexado a todos os eventos de auditoria de segurança com falha. Use essa palavra-chave apenas para eventos no log de segurança.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventKeywords.AuditSuccess">
      <summary>Anexado a todos os eventos de auditoria de segurança com êxito. Use essa palavra-chave apenas para eventos no log de segurança.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventKeywords.CorrelationHint">
      <summary>Anexado a eventos de transferência em que a ID da atividade relacionada (ID de correlação) é um valor computado e não tem garantia de ser exclusivo (isto é, não é um GUID real).</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventKeywords.EventLogClassic">
      <summary>Anexado a eventos que são criados usando a função <see langword="RaiseEvent" />.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventKeywords.MicrosoftTelemetry">
      <summary>Anexado a todos os eventos de telemetria da Microsoft.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventKeywords.None">
      <summary>Não é realizada nenhuma filtragem nas palavras-chave quando o evento é publicado.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventKeywords.Sqm">
      <summary>Anexado a todos os eventos do SQM (Mecanismo de Qualidade de Serviço).</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventKeywords.WdiContext">
      <summary>Anexado a todos os eventos de contexto da WDI (Infraestrutura de Diagnóstico do Windows).</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventKeywords.WdiDiagnostic">
      <summary>Anexado a todos os eventos de diagnóstico da WDI (Infraestrutura de Diagnóstico do Windows).</summary>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventLevel">
      <summary>Identifica o nível de um evento.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventLevel.Critical">
      <summary>Esse nível corresponde a um erro crítico, que é um erro grave que causou uma falha grave.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventLevel.Error">
      <summary>Esse nível adiciona erros padrão que significam um problema.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventLevel.Informational">
      <summary>Esse nível adiciona mensagens ou eventos informativos que não são erros. Esses eventos podem ajudar a rastrear o progresso ou o estado de um aplicativo.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventLevel.LogAlways">
      <summary>Não é realizado nenhuma filtragem de nível.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventLevel.Verbose">
      <summary>Esse nível adiciona mensagens ou eventos longos. Faz com que todos os eventos sejam registrados.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventLevel.Warning">
      <summary>Esse nível adiciona eventos de aviso (por exemplo, eventos publicados porque um disco está se aproximando da capacidade total).</summary>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventListener">
      <summary>Fornece métodos para habilitar e desabilitar eventos de fontes de eventos.</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventListener.#ctor">
      <summary>Cria uma nova instância da classe <see cref="T:System.Diagnostics.Tracing.EventListener" />.</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventListener.DisableEvents(System.Diagnostics.Tracing.EventSource)">
      <summary>Desabilita todos os eventos para a origem do evento especificada.</summary>
      <param name="eventSource">A origem do evento para a qual os eventos serão desabilitados.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventListener.Dispose">
      <summary>Libera os recursos usados pela instância atual da classe <see cref="T:System.Diagnostics.Tracing.EventListener" />.</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel)">
      <summary>Habilita eventos para a origem do evento especificado que têm o nível de detalhes especificado ou inferior.</summary>
      <param name="eventSource">A origem do evento para a qual os eventos serão habilitados.</param>
      <param name="level">O nível de eventos a ser habilitado.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)">
      <summary>Habilita eventos para a origem do evento especificado que têm o nível de detalhes especificado ou inferior e os sinalizadores de palavra-chave de correspondência.</summary>
      <param name="eventSource">A origem do evento para a qual os eventos serão habilitados.</param>
      <param name="level">O nível de eventos a ser habilitado.</param>
      <param name="matchAnyKeyword">Os sinalizadores de palavra-chave necessários para habilitar os eventos.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>Habilita eventos para a origem do evento especificada que têm o nível de detalhes especificado ou inferior e os sinalizadores de palavra-chave e argumentos correspondentes.</summary>
      <param name="eventSource">A origem do evento para a qual os eventos serão habilitados.</param>
      <param name="level">O nível de eventos a ser habilitado.</param>
      <param name="matchAnyKeyword">Os sinalizadores de palavra-chave necessários para habilitar os eventos.</param>
      <param name="arguments">Os argumentos a serem correspondidos para habilitar os eventos.</param>
    </member>
    <member name="E:System.Diagnostics.Tracing.EventListener.EventSourceCreated">
      <summary>Ocorre quando uma fonte do evento (objeto <see cref="T:System.Diagnostics.Tracing.EventSource" />) está anexado ao dispatcher.</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventListener.EventSourceIndex(System.Diagnostics.Tracing.EventSource)">
      <summary>Obtém um pequeno número não negativo que representa a origem do evento especificada.</summary>
      <param name="eventSource">A origem do evento para a qual o índice será localizado.</param>
      <returns>Um pequeno número não negativo que representa a origem do evento especificado.</returns>
    </member>
    <member name="E:System.Diagnostics.Tracing.EventListener.EventWritten">
      <summary>Ocorre quando um evento foi gravado por uma origem do evento (objeto <see cref="T:System.Diagnostics.Tracing.EventSource" />) para a qual o ouvinte de eventos habilitou eventos.</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated(System.Diagnostics.Tracing.EventSource)">
      <summary>Chamado para todas as origens do evento existentes quando o ouvinte do evento é criado e quando uma nova origem do evento é anexada ao ouvinte.</summary>
      <param name="eventSource">A fonte do evento.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventListener.OnEventWritten(System.Diagnostics.Tracing.EventWrittenEventArgs)">
      <summary>Chamado sempre que um evento tiver sido gravado por uma origem do evento para a qual o ouvinte de eventos tiver habilitado eventos.</summary>
      <param name="eventData">Os argumentos de evento que descrevem o evento.</param>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventManifestOptions">
      <summary>Especifica como o manifesto ETW para a fonte do evento é gerado.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventManifestOptions.AllCultures">
      <summary>Gera um nó de recursos sob a pasta de localização para cada assembly satélite fornecido.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventManifestOptions.AllowEventSourceOverride">
      <summary>Substitui o comportamento padrão que o <see cref="T:System.Diagnostics.Tracing.EventSource" /> atual precisa ser da classe base do tipo definido pelo usuário passada para o método de gravação. Isso habilita a validação de origens do evento .NET.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventManifestOptions.None">
      <summary>Nenhuma opção foi especificada.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventManifestOptions.OnlyIfNeededForRegistration">
      <summary>Um manifesto é gerado; apenas a origem do evento precisa ser registrada no computador host.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventManifestOptions.Strict">
      <summary>Gera uma exceção se ocorrer alguma inconsistência ao gravar o arquivo de manifesto.</summary>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventOpcode">
      <summary>Define os códigos de operação padrão que a origem do evento anexa aos eventos.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventOpcode.DataCollectionStart">
      <summary>Um evento de início da coleta do rastreamento.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventOpcode.DataCollectionStop">
      <summary>Um evento de interrupção da coleta do rastreamento.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventOpcode.Extension">
      <summary>Um evento de extensão.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventOpcode.Info">
      <summary>Um evento informativo.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventOpcode.Receive">
      <summary>Um evento que é publicado quando uma atividade em um aplicativo recebe dados.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventOpcode.Reply">
      <summary>Um evento que é publicado depois que uma atividade em um aplicativo responde a um evento.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventOpcode.Resume">
      <summary>Um evento que é publicado depois que uma atividade em um aplicativo continua de um estado suspenso. O evento deve seguir um evento com o código de operação <see cref="F:System.Diagnostics.Tracing.EventOpcode.Suspend" />.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventOpcode.Send">
      <summary>Um evento que é publicado quando uma atividade em um aplicativo transfere dados ou recursos do sistema para outra atividade.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventOpcode.Start">
      <summary>Um evento que é publicado quando um aplicativo inicia uma nova transação ou atividade. Esse código de operação pode ser inserido em outra transação ou atividade quando vários eventos que têm o código <see cref="F:System.Diagnostics.Tracing.EventOpcode.Start" /> são sucessivos sem um evento intermediário que tem um código <see cref="F:System.Diagnostics.Tracing.EventOpcode.Stop" />.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventOpcode.Stop">
      <summary>Um evento que é publicado quando uma atividade ou transação em um aplicativo é encerrada. O evento corresponde ao último evento desemparelhado com um código de operação <see cref="F:System.Diagnostics.Tracing.EventOpcode.Start" />.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventOpcode.Suspend">
      <summary>Um evento que é publicado quando uma atividade em um aplicativo é suspensa.</summary>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventSource">
      <summary>Oferece a capacidade de criar eventos para ETW (Rastreamento de Eventos para Windows).</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.#ctor">
      <summary>Cria uma nova instância da classe <see cref="T:System.Diagnostics.Tracing.EventSource" />.</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Boolean)">
      <summary>Cria uma nova instância da classe <see cref="T:System.Diagnostics.Tracing.EventSource" /> e especifica se uma exceção deve ser gerada quando ocorre um erro no código do Windows subjacente.</summary>
      <param name="throwOnEventWriteErrors">
        <see langword="true" /> para gerar uma exceção quando ocorre um erro no código subjacente do Windows; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings)">
      <summary>Cria uma nova instância da classe <see cref="T:System.Diagnostics.Tracing.EventSource" /> com as definições de configuração especificadas.</summary>
      <param name="settings">Uma combinação bit a bit dos valores de enumeração que especifica as definições de configuração a serem aplicadas à origem do evento.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
      <summary>Inicializa uma nova instância do <see cref="T:System.Diagnostics.Tracing.EventSource" /> a ser usada com eventos que não são de contrato que contém as configurações e características especificadas.</summary>
      <param name="settings">Uma combinação bit a bit dos valores de enumeração que especifica as definições de configuração a serem aplicadas à origem do evento.</param>
      <param name="traits">Os pares chave-valor que especificam características para a origem do evento.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="traits" /> não é especificado em pares chave-valor.</exception>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String)">
      <summary>Cria uma nova instância da classe <see cref="T:System.Diagnostics.Tracing.EventSource" /> com o nome especificado.</summary>
      <param name="eventSourceName">O nome a ser aplicado à origem do evento. Não deve ser <see langword="null" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="eventSourceName" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings)">
      <summary>Cria uma nova instância da classe <see cref="T:System.Diagnostics.Tracing.EventSource" /> com o nome e as configurações especificados.</summary>
      <param name="eventSourceName">O nome a ser aplicado à origem do evento. Não deve ser <see langword="null" />.</param>
      <param name="config">Uma combinação bit a bit dos valores de enumeração que especifica as definições de configuração a serem aplicadas à origem do evento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="eventSourceName" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
      <summary>Cria uma nova instância da classe <see cref="T:System.Diagnostics.Tracing.EventSource" /> com as definições de configuração especificadas.</summary>
      <param name="eventSourceName">O nome a ser aplicado à origem do evento. Não deve ser <see langword="null" />.</param>
      <param name="config">Uma combinação bit a bit dos valores de enumeração que especifica as definições de configuração a serem aplicadas à origem do evento.</param>
      <param name="traits">Os pares chave-valor que especificam características para a origem do evento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="eventSourceName" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="traits" /> não é especificado em pares chave-valor.</exception>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSource.ConstructionException">
      <summary>Obtém as exceções geradas durante a construção de origem do evento.</summary>
      <returns>A exceção que foi lançada durante a construção da origem do evento ou <see langword="null" /> se nenhuma exceção foi gerada.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSource.CurrentThreadActivityId">
      <summary>Obtém a ID de atividade do thread atual.</summary>
      <returns>A ID da atividade do thread atual.</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.Dispose">
      <summary>Libera todos os recursos usados pela instância atual da classe <see cref="T:System.Diagnostics.Tracing.EventSource" />.</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados usados pela classe <see cref="T:System.Diagnostics.Tracing.EventSource" /> e, opcionalmente, libera os recursos gerenciados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="E:System.Diagnostics.Tracing.EventSource.EventCommandExecuted">
      <summary>Ocorre quando um comando é proveniente de um ouvinte de evento.</summary>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventSource.EventData">
      <summary>Fornece os dados de evento para a criação de sobrecargas rápidas de <see cref="Overload:System.Diagnostics.Tracing.EventSource.WriteEvent" /> usando o método <see cref="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)" />.</summary>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSource.EventData.DataPointer">
      <summary>Obtém ou define o ponteiro para os dados para a nova sobrecarga <see cref="Overload:System.Diagnostics.Tracing.EventSource.WriteEvent" />.</summary>
      <returns>O ponteiro para os dados.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSource.EventData.Size">
      <summary>Obtém ou define o número de itens de payload na nova sobrecarga <see cref="Overload:System.Diagnostics.Tracing.EventSource.WriteEvent" />.</summary>
      <returns>O número de itens de carga na nova sobrecarga.</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.Finalize">
      <summary>Permite que o objeto <see cref="T:System.Diagnostics.Tracing.EventSource" /> tente liberar recursos e executar outras operações de limpeza antes que o objeto seja obtido pela coleta de lixo.</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String)">
      <summary>Retorna uma cadeia de caracteres do manifesto XML que está associado à origem do evento atual.</summary>
      <param name="eventSourceType">O tipo da origem do evento.</param>
      <param name="assemblyPathToIncludeInManifest">O caminho para o arquivo do assembly (.dll) a ser incluído no elemento provedor do manifesto.</param>
      <returns>A cadeia de caracteres de dados XML.</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String,System.Diagnostics.Tracing.EventManifestOptions)">
      <summary>Retorna uma cadeia de caracteres do manifesto XML que está associado à origem do evento atual.</summary>
      <param name="eventSourceType">O tipo da origem do evento.</param>
      <param name="assemblyPathToIncludeInManifest">O caminho para o arquivo (.dll) do arquivo do assembly a ser incluído no elemento provedor do manifesto.</param>
      <param name="flags">Um combinação bit a bit dos valores de enumeração que especificam como o manifesto é gerado.</param>
      <returns>A cadeia de caracteres de dados XML ou <see langword="null" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.GetGuid(System.Type)">
      <summary>Obtém o identificador exclusivo para essa implementação da origem do evento.</summary>
      <param name="eventSourceType">O tipo da origem do evento.</param>
      <returns>Um identificador exclusivo para este tipo de origem do evento.</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.GetName(System.Type)">
      <summary>Obtém o nome amigável da origem do evento.</summary>
      <param name="eventSourceType">O tipo da origem do evento.</param>
      <returns>O nome amigável da origem do evento. O padrão é o nome simples da classe.</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.GetSources">
      <summary>Obtém um instantâneo de todas as origens do evento para o domínio do aplicativo.</summary>
      <returns>Uma enumeração de todas as origens do evento no domínio do aplicativo.</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.GetTrait(System.String)">
      <summary>Obtém o valor de característica associado à chave especificada.</summary>
      <param name="key">A chave da característica a ser obtida.</param>
      <returns>O valor de característica associado à chave especificada. Se a chave não for encontrada, retornará <see langword="null" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSource.Guid">
      <summary>O identificador exclusivo da origem do evento.</summary>
      <returns>Um identificador exclusivo para a origem do evento.</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.IsEnabled">
      <summary>Determina se a origem do evento atual está habilitada.</summary>
      <returns>
        <see langword="true" /> se a origem do evento atual estiver habilitada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)">
      <summary>Determina se a origem do evento atual que tem o nível e a palavra-chave especificados está habilitada.</summary>
      <param name="level">O nível da origem do evento.</param>
      <param name="keywords">A palavra-chave da origem do evento.</param>
      <returns>
        <see langword="true" /> se a origem do evento estiver habilitada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Diagnostics.Tracing.EventChannel)">
      <summary>Determina se a origem do evento atual é habilitada para eventos com o nível, palavras-chave e canais específicos.</summary>
      <param name="level">O nível do evento a serem verificado. Uma origem do evento será considerada habilitada quando o respectivo nível for maior ou igual ao <paramref name="level" />.</param>
      <param name="keywords">As palavras-chave do evento a serem verificadas.</param>
      <param name="channel">O canal de evento a ser verificado.</param>
      <returns>
        <see langword="true" /> se a origem do evento está habilitada para o nível de evento, palavras-chaves e canal especificado; caso contrário, <see langword="false" />.  
O resultado deste método é somente uma aproximação de se determinado evento está ativo.  Use-o para evitar computação cara para registro em log quando este registro está desabilitado. Origens do evento podem ter filtragem adicional que determina as respectivas atividades.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSource.Name">
      <summary>O nome amigável da classe que é derivada da origem do evento.</summary>
      <returns>O nome amigável da classe derivada.  O padrão é o nome simples da classe.</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.OnEventCommand(System.Diagnostics.Tracing.EventCommandEventArgs)">
      <summary>Chamado quando a origem do evento atual é atualizada pelo controlador.</summary>
      <param name="command">Os argumentos para o evento.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.SendCommand(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventCommand,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>Envia um comando para uma origem do evento especificada.</summary>
      <param name="eventSource">A origem do evento para a qual o comando será enviado.</param>
      <param name="command">O comando de evento a ser enviado.</param>
      <param name="commandArguments">Os argumentos para o comando do evento.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid)">
      <summary>Define a ID de atividade no thread atual.</summary>
      <param name="activityId">A nova ID de atividade do thread atual ou <see cref="F:System.Guid.Empty" /> para indicar que o trabalho no thread atual não está associado a nenhuma atividade.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid,System.Guid@)">
      <summary>Define a ID de atividade no thread atual e retorna a ID da atividade anterior.</summary>
      <param name="activityId">A nova ID de atividade do thread atual ou <see cref="F:System.Guid.Empty" /> para indicar que o trabalho no thread atual não está associado a nenhuma atividade.</param>
      <param name="oldActivityThatWillContinue">Quando o método retorna, contém a ID de atividade anterior no thread atual.</param>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSource.Settings">
      <summary>Obtém as configurações aplicadas a esta origem do evento.</summary>
      <returns>As configurações aplicadas a esta origem do evento.</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.ToString">
      <summary>Obtém uma representação de cadeia de caracteres da instância da origem do evento atual.</summary>
      <returns>O nome e identificador exclusivo que identificam a origem do evento atual.</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.Write(System.String)">
      <summary>Grava um evento sem campos, mas com o nome e as opções padrão especificados.</summary>
      <param name="eventName">O nome do evento a ser gravado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="eventName" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.Write(System.String,System.Diagnostics.Tracing.EventSourceOptions)">
      <summary>Grava um evento sem campos, mas com o nome e as opções especificadas.</summary>
      <param name="eventName">O nome do evento a ser gravado.</param>
      <param name="options">As opções, como nível, palavras-chave e código de operação para o evento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="eventName" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,``0)">
      <summary>Grava um evento com o nome e os dados especificados.</summary>
      <param name="eventName">O nome do evento.</param>
      <param name="data">Os dados do evento. Esse tipo deve ser um tipo anônimo ou marcado com o atributo <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" />.</param>
      <typeparam name="T">O tipo que define o evento e seus dados associados. Esse tipo deve ser um tipo anônimo ou marcado com o atributo <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" />.</typeparam>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions,``0)">
      <summary>Grava um evento com o nome, dados de evento e opções especificados.</summary>
      <param name="eventName">O nome do evento.</param>
      <param name="options">As opções de evento.</param>
      <param name="data">Os dados do evento. Esse tipo deve ser um tipo anônimo ou marcado com o atributo <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" />.</param>
      <typeparam name="T">O tipo que define o evento e seus dados associados. Esse tipo deve ser um tipo anônimo ou marcado com o atributo <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" />.</typeparam>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,``0@)">
      <summary>Grava um evento com o nome, opções e dados de evento especificados.</summary>
      <param name="eventName">O nome do evento.</param>
      <param name="options">As opções de evento.</param>
      <param name="data">Os dados do evento. Esse tipo deve ser um tipo anônimo ou marcado com o atributo <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" />.</param>
      <typeparam name="T">O tipo que define o evento e seus dados associados. Esse tipo deve ser um tipo anônimo ou marcado com o atributo <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" />.</typeparam>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,System.Guid@,System.Guid@,``0@)">
      <summary>Grava um evento com o nome, opções, dados de atividade e de evento relacionados especificados.</summary>
      <param name="eventName">O nome do evento.</param>
      <param name="options">As opções de evento.</param>
      <param name="activityId">A ID da atividade associada ao evento.</param>
      <param name="relatedActivityId">A ID de uma atividade associada ou <see cref="F:System.Guid.Empty" /> se não houver nenhuma atividade associada.</param>
      <param name="data">Os dados do evento. Esse tipo deve ser um tipo anônimo ou marcado com o atributo <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" />.</param>
      <typeparam name="T">O tipo que define o evento e seus dados associados. Esse tipo deve ser um tipo anônimo ou marcado com o atributo <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" />.</typeparam>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32)">
      <summary>Grava um evento usando o identificador de evento fornecido.</summary>
      <param name="eventId">O identificador de evento. Esse valor deve estar entre 0 e 65535.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Byte[])">
      <summary>Grava um evento usando o identificador de evento e o argumento de matriz de bytes fornecidos.</summary>
      <param name="eventId">O identificador de evento.  Esse valor deve estar entre 0 e 65535.</param>
      <param name="arg1">Um argumento de matriz de bytes.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32)">
      <summary>Grava um evento usando o identificador de evento e o argumento inteiro de 32 bits fornecidos.</summary>
      <param name="eventId">O identificador de evento.  Esse valor deve estar entre 0 e 65535.</param>
      <param name="arg1">Um argumento inteiro.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32)">
      <summary>Grava um evento usando o identificador de evento e os argumentos inteiros de 32 bits fornecidos.</summary>
      <param name="eventId">O identificador de evento.  Esse valor deve estar entre 0 e 65535.</param>
      <param name="arg1">Um argumento inteiro.</param>
      <param name="arg2">Um argumento inteiro.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Grava um evento usando o identificador de evento e os argumentos inteiros de 32 bits fornecidos.</summary>
      <param name="eventId">O identificador de evento.  Esse valor deve estar entre 0 e 65535.</param>
      <param name="arg1">Um argumento inteiro.</param>
      <param name="arg2">Um argumento inteiro.</param>
      <param name="arg3">Um argumento inteiro.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.String)">
      <summary>Grava um evento usando o identificador de evento fornecido e argumentos inteiros de 32 bits e cadeia de caracteres fornecidos.</summary>
      <param name="eventId">O identificador de evento. Esse valor deve estar entre 0 e 65535.</param>
      <param name="arg1">Um argumento inteiro de 32 bits.</param>
      <param name="arg2">Um argumento de cadeia de caracteres.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64)">
      <summary>Grava um evento usando o identificador de evento e o argumento inteiro de 64 bits fornecidos.</summary>
      <param name="eventId">O identificador de evento.  Esse valor deve estar entre 0 e 65535.</param>
      <param name="arg1">Um argumento inteiro de 64 bits.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Byte[])">
      <summary>Grava os dados de evento usando o identificador especificado e inteiro de 64 bits e argumentos da matriz de bytes.</summary>
      <param name="eventId">O identificador de evento.  Esse valor deve estar entre 0 e 65535.</param>
      <param name="arg1">Um argumento inteiro de 64 bits.</param>
      <param name="arg2">Um argumento de matriz de bytes.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64)">
      <summary>Grava um evento usando o identificador de evento fornecido e os argumentos 64 bits.</summary>
      <param name="eventId">O identificador de evento.  Esse valor deve estar entre 0 e 65535.</param>
      <param name="arg1">Um argumento inteiro de 64 bits.</param>
      <param name="arg2">Um argumento inteiro de 64 bits.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64,System.Int64)">
      <summary>Grava um evento usando o identificador de evento fornecido e os argumentos 64 bits.</summary>
      <param name="eventId">O identificador de evento.  Esse valor deve estar entre 0 e 65535.</param>
      <param name="arg1">Um argumento inteiro de 64 bits.</param>
      <param name="arg2">Um argumento inteiro de 64 bits.</param>
      <param name="arg3">Um argumento inteiro de 64 bits.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.String)">
      <summary>Grava um evento usando o identificador de evento fornecido e argumentos inteiros de 64 bits e cadeia de caracteres fornecidos.</summary>
      <param name="eventId">O identificador de evento.  Esse valor deve estar entre 0 e 65535.</param>
      <param name="arg1">Um argumento inteiro de 64 bits.</param>
      <param name="arg2">Um argumento de cadeia de caracteres.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
      <summary>Grava um evento usando o identificador de evento fornecido e a matriz de argumentos.</summary>
      <param name="eventId">O identificador de evento.  Esse valor deve estar entre 0 e 65535.</param>
      <param name="args">Uma matriz de objetos.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String)">
      <summary>Grava um evento usando o identificador de evento e o argumentos de cadeia de caractere fornecidos.</summary>
      <param name="eventId">O identificador de evento.  Esse valor deve estar entre 0 e 65535.</param>
      <param name="arg1">Um argumento de cadeia de caracteres.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32)">
      <summary>Grava um evento usando o identificador de evento fornecido e os argumentos.</summary>
      <param name="eventId">O identificador de evento.  Esse valor deve estar entre 0 e 65535.</param>
      <param name="arg1">Um argumento de cadeia de caracteres.</param>
      <param name="arg2">Um argumento inteiro de 32 bits.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32,System.Int32)">
      <summary>Grava um evento usando o identificador de evento fornecido e os argumentos.</summary>
      <param name="eventId">O identificador de evento.  Esse valor deve estar entre 0 e 65535.</param>
      <param name="arg1">Um argumento de cadeia de caracteres.</param>
      <param name="arg2">Um argumento inteiro de 32 bits.</param>
      <param name="arg3">Um argumento inteiro de 32 bits.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int64)">
      <summary>Grava um evento usando o identificador de evento fornecido e os argumentos.</summary>
      <param name="eventId">O identificador de evento.  Esse valor deve estar entre 0 e 65535.</param>
      <param name="arg1">Um argumento de cadeia de caracteres.</param>
      <param name="arg2">Um argumento inteiro de 64 bits.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String)">
      <summary>Grava um evento usando o identificador de evento e os argumentos de cadeia de caractere fornecidos.</summary>
      <param name="eventId">O identificador de evento.  Esse valor deve estar entre 0 e 65535.</param>
      <param name="arg1">Um argumento de cadeia de caracteres.</param>
      <param name="arg2">Um argumento de cadeia de caracteres.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String,System.String)">
      <summary>Grava um evento usando o identificador de evento e os argumentos de cadeia de caractere fornecidos.</summary>
      <param name="eventId">O identificador de evento.  Esse valor deve estar entre 0 e 65535.</param>
      <param name="arg1">Um argumento de cadeia de caracteres.</param>
      <param name="arg2">Um argumento de cadeia de caracteres.</param>
      <param name="arg3">Um argumento de cadeia de caracteres.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
      <summary>Cria uma nova sobrecarga <see cref="Overload:System.Diagnostics.Tracing.EventSource.WriteEvent" /> usando o identificador de evento fornecidos e os dados de evento.</summary>
      <param name="eventId">O identificador de evento.</param>
      <param name="eventDataCount">O número de itens de dados de evento.</param>
      <param name="data">A estrutura que contém os dados do evento.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])">
      <summary>Grava um evento que indica que a atividade atual está relacionada a outra atividade.</summary>
      <param name="eventId">Um identificador que identifica este evento exclusivamente dentro do <see cref="T:System.Diagnostics.Tracing.EventSource" />.</param>
      <param name="relatedActivityId">O identificador da atividade relacionada.</param>
      <param name="args">Obtém uma matriz de objetos que contêm dados sobre o evento.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore(System.Int32,System.Guid*,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
      <summary>Grava um evento que indica que a atividade atual está relacionada a outra atividade.</summary>
      <param name="eventId">Um identificador que identifica este evento exclusivamente dentro do <see cref="T:System.Diagnostics.Tracing.EventSource" />.</param>
      <param name="relatedActivityId">Um ponteiro para o GUID da ID de atividade relacionada.</param>
      <param name="eventDataCount">O número de itens no campo <paramref name="data" />.</param>
      <param name="data">Um ponteiro para o primeiro item no campo de dados de evento.</param>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventSourceAttribute">
      <summary>Permite que nome do ETW (Rastreamento de Eventos para Windows) seja definido independentemente do nome da classe de origem do evento.</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSourceAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" />.</summary>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSourceAttribute.Guid">
      <summary>Obtém ou define o identificador de origem do evento.</summary>
      <returns>O identificador de origem do evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSourceAttribute.LocalizationResources">
      <summary>Obtém ou define o nome do arquivo de recurso de localização.</summary>
      <returns>O nome do arquivo de recurso de localização ou <see langword="null" /> se o arquivo de recurso de localização não existir.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSourceAttribute.Name">
      <summary>Obtém ou define o nome da origem do evento.</summary>
      <returns>O nome da origem do evento.</returns>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventSourceCreatedEventArgs">
      <summary>Fornece dados para o evento de <see cref="E:System.Diagnostics.Tracing.EventListener.EventSourceCreated" /> .</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSourceCreatedEventArgs.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Tracing.EventSourceCreatedEventArgs" />.</summary>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSourceCreatedEventArgs.EventSource">
      <summary>Obter a origem do evento que está sendo anexado ao ouvinte.</summary>
      <returns>A origem do evento que está anexando ao ouvinte.</returns>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventSourceException">
      <summary>A exceção que é gerada quando ocorre um erro durante o ETW (Rastreamento de Eventos para Windows).</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSourceException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Tracing.EventSourceException" />.</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSourceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Tracing.EventSourceException" /> com dados serializados.</summary>
      <param name="info">O objeto que mantém os dados de objeto serializados.</param>
      <param name="context">As informações contextuais sobre a origem ou o destino.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSourceException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Tracing.EventSourceException" /> com uma mensagem de erro especificada.</summary>
      <param name="message">A mensagem que descreve o erro.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSourceException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Tracing.EventSourceException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message">A mensagem de erro que explica a razão da exceção.</param>
      <param name="innerException">A exceção que é a causa da exceção atual ou então <see langword="null" /> se nenhuma exceção interna é especificada.</param>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventSourceOptions">
      <summary>Especifica as substituições de configurações de evento padrão, como o nível de log, palavras-chave e o código de operação quando o método <see cref="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions,``0)" /> é chamado.</summary>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSourceOptions.ActivityOptions">
      <summary>As opções de atividade definidas para esta origem do evento.</summary>
      <returns>Retorna <see cref="T:System.Diagnostics.Tracing.EventActivityOptions" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSourceOptions.Keywords">
      <summary>Obtém ou define as palavras-chave aplicadas ao evento. Se essa propriedade não for definida, as palavras-chave do evento serão <see langword="None" />.</summary>
      <returns>As palavras-chave aplicadas ao evento ou <see langword="None" /> se nenhuma palavra-chave estiver definida.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSourceOptions.Level">
      <summary>Obtém ou define o nível de evento aplicado ao evento.</summary>
      <returns>O nível de evento para o evento. Se não estiver definido, o padrão será Verbose (5).</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSourceOptions.Opcode">
      <summary>Obtém ou define o código de operação a ser usado para o evento especificado.</summary>
      <returns>O código de operação a ser usado para o evento especificado. Se não estiver definido, o padrão <see langword="Info" /> será (0).</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSourceOptions.Tags">
      <summary>As marcas de eventos definidas para esta origem do evento.</summary>
      <returns>Retorna <see cref="T:System.Diagnostics.Tracing.EventTags" />.</returns>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventSourceSettings">
      <summary>Especifica opções de configuração para uma fonte de evento.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventSourceSettings.Default">
      <summary>Nenhuma das opções de configuração especiais é habilitada.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventSourceSettings.EtwManifestEventFormat">
      <summary>O ouvinte ETW deve usar um formato baseado em manifesto ao gerar eventos. A configuração dessa opção é uma diretiva para o ouvinte ETW de que ele deve usar o formato baseado em manifesto ao gerar eventos. Essa é a opção padrão ao definir um tipo derivado de <see cref="T:System.Diagnostics.Tracing.EventSource" /> usando um dos construtores <see cref="T:System.Diagnostics.Tracing.EventSource" /> protegidos.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventSourceSettings.EtwSelfDescribingEventFormat">
      <summary>O ouvinte ETW deve usar o formato de evento autodescritivo. Essa é a opção padrão ao criar uma nova instância do <see cref="T:System.Diagnostics.Tracing.EventSource" /> usando um dos construtores <see cref="T:System.Diagnostics.Tracing.EventSource" /> públicos.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventSourceSettings.ThrowOnEventWriteErrors">
      <summary>A origem do evento lança uma exceção quando ocorre um erro.</summary>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventTags">
      <summary>Especifica o rastreamento de eventos de início e interrupção de atividades. Você deve usar apenas os 24 bits inferiores. Para obter mais informações, consulte <see cref="T:System.Diagnostics.Tracing.EventSourceOptions" /> e <see cref="M:System.Diagnostics.Tracing.EventSource.Write(System.String,System.Diagnostics.Tracing.EventSourceOptions)" />.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventTags.None">
      <summary>Não especifica nenhuma marca e é igual a zero.</summary>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventTask">
      <summary>Define as tarefas que se aplicam a eventos.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventTask.None">
      <summary>Tarefa indefinida.</summary>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventWrittenEventArgs">
      <summary>Fornece dados para o retorno de chamada <see cref="M:System.Diagnostics.Tracing.EventListener.OnEventWritten(System.Diagnostics.Tracing.EventWrittenEventArgs)" />.</summary>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.ActivityId">
      <summary>Obtém a ID de atividade no thread no qual o evento foi gravado.</summary>
      <returns>A ID de atividade no thread no qual o evento foi gravado.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.Channel">
      <summary>Obtém o canal para o evento.</summary>
      <returns>O canal para o evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.EventId">
      <summary>Obtém o identificador de evento.</summary>
      <returns>O identificador de evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.EventName">
      <summary>Obtém o nome do evento.</summary>
      <returns>O nome do evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.EventSource">
      <summary>Obtém o objeto da origem do evento.</summary>
      <returns>O objeto de origem do evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.Keywords">
      <summary>Obtém as palavras-chave para o evento.</summary>
      <returns>As palavras-chave para o evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.Level">
      <summary>Obtém o nível do evento.</summary>
      <returns>O nível do evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.Message">
      <summary>Obtém a mensagem para o evento.</summary>
      <returns>A mensagem para o evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.Opcode">
      <summary>Obtém o código de operação para o evento.</summary>
      <returns>O código de operação para o evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.OSThreadId">
      <summary>Obtém o identificador de thread para o thread do SO que escreveu o evento. (somente .NET core 2.2 e posterior.)</summary>
      <returns>O identificador de thread para o thread de sistema operacional que escreveu o evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.Payload">
      <summary>Obtém o payload para o evento.</summary>
      <returns>A carga do evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.PayloadNames">
      <summary>Retorna uma lista de cadeias de caracteres que representa os nomes de propriedade do evento.</summary>
      <returns>Retorna <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.RelatedActivityId">
      <summary>Obtém o identificador de uma atividade que está relacionado à atividade representada pela instância atual.</summary>
      <returns>O identificador da atividade relacionada, ou <see cref="F:System.Guid.Empty" /> se não houver nenhuma atividade relacionada.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.Tags">
      <summary>Retorna as marcas especificadas na chamada para o método <see cref="M:System.Diagnostics.Tracing.EventSource.Write(System.String,System.Diagnostics.Tracing.EventSourceOptions)" />.</summary>
      <returns>Retorna <see cref="T:System.Diagnostics.Tracing.EventTags" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.Task">
      <summary>Obtém a tarefa para o evento.</summary>
      <returns>A tarefa para o evento.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.TimeStamp">
      <summary>Obtém a hora em que o evento foi gerado originalmente como um carimbo de data/hora <see cref="T:System.DateTime" />. (somente .NET core 2.2 e posterior.)</summary>
      <returns>A data e hora quando o evento foi registrado. O sistema tenta ser tão precisas quanto possível.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.Version">
      <summary>Obtém a versão do evento.</summary>
      <returns>A versão do evento.</returns>
    </member>
    <member name="T:System.Diagnostics.Tracing.IncrementingEventCounter">
      <summary>Fornece uma variante de <see cref="T:System.Diagnostics.Tracing.EventCounter" /> para variáveis que são cada vez maiores, como o número de exceções no tempo de execução.</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.IncrementingEventCounter.#ctor(System.String,System.Diagnostics.Tracing.EventSource)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Tracing.IncrementingEventCounter" />.</summary>
      <param name="name">O nome dessa instância <see cref="T:System.Diagnostics.Tracing.IncrementingEventCounter" />.</param>
      <param name="eventSource">A fonte do evento.</param>
    </member>
    <member name="P:System.Diagnostics.Tracing.IncrementingEventCounter.DisplayRateTimeScale">
      <summary>Obtém ou define a taxa na qual essa métrica deve ser exibida.</summary>
      <returns>Obtém ou define a taxa na qual essa métrica deve ser exibida</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.IncrementingEventCounter.Increment(System.Double)">
      <summary>Adiciona um valor a uma soma acumulada que será publicado pelo contador no próximo intervalo do timer.</summary>
      <param name="increment">O valor no qual incrementar a soma acumulada.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.IncrementingEventCounter.ToString">
      <summary>Retorna uma representação de cadeia de caracteres da instância do contador de eventos com incremento atual.</summary>
      <returns>O nome e o incremento do contador de eventos com incremento atual.</returns>
    </member>
    <member name="T:System.Diagnostics.Tracing.IncrementingPollingCounter">
      <summary>Fornece uma variante de <see cref="T:System.Diagnostics.Tracing.EventCounter" /> para variáveis que são cada vez maiores, como o número de exceções no tempo de execução.</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.IncrementingPollingCounter.#ctor(System.String,System.Diagnostics.Tracing.EventSource,System.Func{System.Double})">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Tracing.IncrementingPollingCounter" />.</summary>
      <param name="name">O nome dessa instância <see cref="T:System.Diagnostics.Tracing.IncrementingPollingCounter" />.</param>
      <param name="eventSource">A origem do evento de que essa instância faz parte.</param>
      <param name="totalValueProvider">Um método que será usado para sondar o valor.</param>
    </member>
    <member name="P:System.Diagnostics.Tracing.IncrementingPollingCounter.DisplayRateTimeScale">
      <summary>Obtém ou define a taxa na qual essa métrica deve ser exibida.</summary>
      <returns>A taxa na qual essa métrica deve ser exibida.</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.IncrementingPollingCounter.ToString">
      <summary>Retorna uma representação de cadeia de caracteres da instância do contador de sondagem com incremento atual.</summary>
      <returns>O nome e o incremento do contador de sondagem com incremento atual.</returns>
    </member>
    <member name="T:System.Diagnostics.Tracing.NonEventAttribute">
      <summary>Identifica um método que não está gerando um evento.</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.NonEventAttribute.#ctor">
      <summary>Cria uma nova instância da classe <see cref="T:System.Diagnostics.Tracing.NonEventAttribute" />.</summary>
    </member>
    <member name="T:System.Diagnostics.Tracing.PollingCounter">
      <summary>Fornece uma variante de <see cref="T:System.Diagnostics.Tracing.EventCounter" /> que coleta e calcula estatísticas semelhantes como <see cref="T:System.Diagnostics.Tracing.EventCounter" />.</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.PollingCounter.#ctor(System.String,System.Diagnostics.Tracing.EventSource,System.Func{System.Double})">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Tracing.PollingCounter" />.</summary>
      <param name="name">O nome dessa instância <see cref="T:System.Diagnostics.Tracing.PollingCounter" />.</param>
      <param name="eventSource">A fonte do evento.</param>
      <param name="metricProvider">Um método que será usado para sondar o valor.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.PollingCounter.ToString">
      <summary>Retorna uma representação de cadeia de caracteres da instância do contador de sondagem atual.</summary>
      <returns>O nome e a média do contador de sondagem atual.</returns>
    </member>
  </members>
</doc>