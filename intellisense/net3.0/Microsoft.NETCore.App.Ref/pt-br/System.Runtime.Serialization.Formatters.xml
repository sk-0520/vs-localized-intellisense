<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Runtime.Serialization.Formatters</name>
  </assembly>
  <members>
    <member name="T:System.Runtime.Serialization.Formatter">
      <summary>Fornece funcionalidade básica para formatadores de serialização de Common Language Runtime.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.Formatter" />.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.Formatter.Binder">
      <summary>Quando substituído em uma classe derivada, obtém ou define o <see cref="T:System.Runtime.Serialization.SerializationBinder" /> usado com o formatador atual.</summary>
      <returns>O <see cref="T:System.Runtime.Serialization.SerializationBinder" /> usado com o formatador atual.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Formatter.Context">
      <summary>Quando substituído em uma classe derivada, obtém ou define o <see cref="T:System.Runtime.Serialization.StreamingContext" /> usado para a serialização atual.</summary>
      <returns>O <see cref="T:System.Runtime.Serialization.StreamingContext" /> usado para a serialização atual.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.Deserialize(System.IO.Stream)">
      <summary>Quando substituído em uma classe derivada, desserializa o fluxo anexado ao formatador quando ele foi criado, criando um grafo de objetos idênticos ao grafo originalmente serializado no fluxo.</summary>
      <param name="serializationStream">O fluxo a desserializar.</param>
      <returns>O objeto superior do grafo desserializado de objetos.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.GetNext(System.Int64@)">
      <summary>Retorna o próximo objeto a serializar, da fila de trabalho interna do formatador.</summary>
      <param name="objID">A ID atribuída ao objeto atual durante a serialização.</param>
      <returns>O próximo objeto a serializar.</returns>
      <exception cref="T:System.Runtime.Serialization.SerializationException">O próximo objeto recuperado da fila de trabalho não tinha uma ID atribuída.</exception>
    </member>
    <member name="F:System.Runtime.Serialization.Formatter.m_idGenerator">
      <summary>Contém o <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" /> usado com o formatador atual.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatter.m_objectQueue">
      <summary>Contém uma <see cref="T:System.Collections.Queue" /> dos objetos restantes para serializar.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.Schedule(System.Object)">
      <summary>Agenda um objeto para serialização posterior.</summary>
      <param name="obj">O objeto cuja serialização agendar.</param>
      <returns>A ID de objeto atribuída ao objeto.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.Serialize(System.IO.Stream,System.Object)">
      <summary>Quando substituído em uma classe derivada, serializa o grafo de objetos com a raiz especificada para o fluxo já anexado ao formatador.</summary>
      <param name="serializationStream">O fluxo para o qual os objetos são serializados.</param>
      <param name="graph">O objeto na raiz do grafo a ser serializado.</param>
    </member>
    <member name="P:System.Runtime.Serialization.Formatter.SurrogateSelector">
      <summary>Quando substituído em uma classe derivada, obtém ou define o <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> usado com o formatador atual.</summary>
      <returns>O <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> usado com o formatador atual.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteArray(System.Object,System.String,System.Type)">
      <summary>Quando substituído em uma classe derivada, grava uma matriz no fluxo já anexado ao formatador.</summary>
      <param name="obj">A matriz a gravar.</param>
      <param name="name">O nome da matriz.</param>
      <param name="memberType">O tipo dos elementos contidos na matriz.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteBoolean(System.Boolean,System.String)">
      <summary>Quando substituído em uma classe derivada, grava um valor booliano no fluxo já anexado ao formatador.</summary>
      <param name="val">O valor a ser gravado.</param>
      <param name="name">O nome do membro.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteByte(System.Byte,System.String)">
      <summary>Quando substituído em uma classe derivada, grava um inteiro sem sinal de 8 bits no fluxo já anexado ao formatador.</summary>
      <param name="val">O valor a ser gravado.</param>
      <param name="name">O nome do membro.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteChar(System.Char,System.String)">
      <summary>Quando substituído em uma classe derivada, grava um caractere Unicode no fluxo já anexado ao formatador.</summary>
      <param name="val">O valor a ser gravado.</param>
      <param name="name">O nome do membro.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteDateTime(System.DateTime,System.String)">
      <summary>Quando substituído em uma classe derivada, grava um valor <see cref="T:System.DateTime" /> no fluxo já anexado ao formatador.</summary>
      <param name="val">O valor a ser gravado.</param>
      <param name="name">O nome do membro.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteDecimal(System.Decimal,System.String)">
      <summary>Quando substituído em uma classe derivada, grava um valor <see cref="T:System.Decimal" /> no fluxo já anexado ao formatador.</summary>
      <param name="val">O valor a ser gravado.</param>
      <param name="name">O nome do membro.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteDouble(System.Double,System.String)">
      <summary>Quando substituído em uma classe derivada, grava um número de ponto flutuante de precisão dupla no fluxo já anexado ao formatador.</summary>
      <param name="val">O valor a ser gravado.</param>
      <param name="name">O nome do membro.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteInt16(System.Int16,System.String)">
      <summary>Quando substituído em uma classe derivada, grava um inteiro com sinal de 16 bits no fluxo já anexado ao formatador.</summary>
      <param name="val">O valor a ser gravado.</param>
      <param name="name">O nome do membro.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteInt32(System.Int32,System.String)">
      <summary>Quando substituído em uma classe derivada, grava um inteiro com sinal de 32 bits no fluxo.</summary>
      <param name="val">O valor a ser gravado.</param>
      <param name="name">O nome do membro.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteInt64(System.Int64,System.String)">
      <summary>Quando substituído em uma classe derivada, grava um inteiro com sinal de 64 bits no fluxo.</summary>
      <param name="val">O valor a ser gravado.</param>
      <param name="name">O nome do membro.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteMember(System.String,System.Object)">
      <summary>Inspeciona o tipo dos dados recebidos e chama o método <see langword="Write" /> apropriado para executar a gravação no fluxo já anexado ao formatador.</summary>
      <param name="memberName">O nome do membro a serializar.</param>
      <param name="data">O objeto a gravar no fluxo anexado ao formatador.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteObjectRef(System.Object,System.String,System.Type)">
      <summary>Quando substituído em uma classe derivada, grava uma referência de objeto no fluxo já anexado ao formatador.</summary>
      <param name="obj">A referência de objeto a gravar.</param>
      <param name="name">O nome do membro.</param>
      <param name="memberType">O tipo de objeto para o qual a referência aponta.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteSByte(System.SByte,System.String)">
      <summary>Quando substituído em uma classe derivada, grava um inteiro com sinal de 8 bits no fluxo já anexado ao formatador.</summary>
      <param name="val">O valor a ser gravado.</param>
      <param name="name">O nome do membro.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteSingle(System.Single,System.String)">
      <summary>Quando substituído em uma classe derivada, grava um número de ponto flutuante de precisão simples no fluxo já anexado ao formatador.</summary>
      <param name="val">O valor a ser gravado.</param>
      <param name="name">O nome do membro.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteTimeSpan(System.TimeSpan,System.String)">
      <summary>Quando substituído em uma classe derivada, grava um valor <see cref="T:System.TimeSpan" /> no fluxo já anexado ao formatador.</summary>
      <param name="val">O valor a ser gravado.</param>
      <param name="name">O nome do membro.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteUInt16(System.UInt16,System.String)">
      <summary>Quando substituído em uma classe derivada, grava um inteiro sem sinal de 16 bits no fluxo já anexado ao formatador.</summary>
      <param name="val">O valor a ser gravado.</param>
      <param name="name">O nome do membro.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteUInt32(System.UInt32,System.String)">
      <summary>Quando substituído em uma classe derivada, grava um inteiro sem sinal de 32 bits no fluxo já anexado ao formatador.</summary>
      <param name="val">O valor a ser gravado.</param>
      <param name="name">O nome do membro.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteUInt64(System.UInt64,System.String)">
      <summary>Quando substituído em uma classe derivada, grava um inteiro sem sinal de 64 bits no fluxo já anexado ao formatador.</summary>
      <param name="val">O valor a ser gravado.</param>
      <param name="name">O nome do membro.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteValueType(System.Object,System.String,System.Type)">
      <summary>Quando substituído em uma classe derivada, grava um valor do tipo fornecido ao fluxo já anexo ao formatador.</summary>
      <param name="obj">O objeto que representa o tipo de valor.</param>
      <param name="name">O nome do membro.</param>
      <param name="memberType">O <see cref="T:System.Type" /> do tipo do valor.</param>
    </member>
    <member name="T:System.Runtime.Serialization.FormatterConverter">
      <summary>Representa uma implementação base da interface <see cref="T:System.Runtime.Serialization.IFormatterConverter" /> que usa a classe <see cref="T:System.Convert" /> e a interface <see cref="T:System.IConvertible" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.FormatterConverter" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.Convert(System.Object,System.Type)">
      <summary>Converte um valor no <see cref="T:System.Type" /> fornecido.</summary>
      <param name="value">O objeto a ser convertido.</param>
      <param name="type">O <see cref="T:System.Type" /> no qual <paramref name="value" /> é convertido.</param>
      <returns>O <paramref name="value" /> convertido ou então <see langword="null" />, se o parâmetro <paramref name="type" /> é <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="value" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.Convert(System.Object,System.TypeCode)">
      <summary>Converte um valor no <see cref="T:System.TypeCode" /> fornecido.</summary>
      <param name="value">O objeto a ser convertido.</param>
      <param name="typeCode">O <see cref="T:System.TypeCode" /> no qual <paramref name="value" /> é convertido.</param>
      <returns>O <paramref name="value" /> convertido ou então <see langword="null" />, se o parâmetro <paramref name="type" /> é <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="value" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToBoolean(System.Object)">
      <summary>Converte um valor em uma <see cref="T:System.Boolean" />.</summary>
      <param name="value">O objeto a ser convertido.</param>
      <returns>O <paramref name="value" /> convertido ou então <see langword="null" />, se o parâmetro <paramref name="type" /> é <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="value" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToByte(System.Object)">
      <summary>Converte um valor em um inteiro sem sinal de 8 bits.</summary>
      <param name="value">O objeto a ser convertido.</param>
      <returns>O <paramref name="value" /> convertido ou então <see langword="null" />, se o parâmetro <paramref name="type" /> é <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="value" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToChar(System.Object)">
      <summary>Converte um valor em um caractere Unicode.</summary>
      <param name="value">O objeto a ser convertido.</param>
      <returns>O <paramref name="value" /> convertido ou então <see langword="null" />, se o parâmetro <paramref name="type" /> é <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="value" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToDateTime(System.Object)">
      <summary>Converte um valor em uma <see cref="T:System.DateTime" />.</summary>
      <param name="value">O objeto a ser convertido.</param>
      <returns>O <paramref name="value" /> convertido ou então <see langword="null" />, se o parâmetro <paramref name="type" /> é <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="value" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToDecimal(System.Object)">
      <summary>Converte um valor em uma <see cref="T:System.Decimal" />.</summary>
      <param name="value">O objeto a ser convertido.</param>
      <returns>O <paramref name="value" /> convertido ou então <see langword="null" />, se o parâmetro <paramref name="type" /> é <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="value" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToDouble(System.Object)">
      <summary>Converte um valor em um número de ponto flutuante de precisão dupla.</summary>
      <param name="value">O objeto a ser convertido.</param>
      <returns>O <paramref name="value" /> convertido ou então <see langword="null" />, se o parâmetro <paramref name="type" /> é <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="value" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToInt16(System.Object)">
      <summary>Converte um valor em um inteiro com sinal de 16 bits.</summary>
      <param name="value">O objeto a ser convertido.</param>
      <returns>O <paramref name="value" /> convertido ou então <see langword="null" />, se o parâmetro <paramref name="type" /> é <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="value" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToInt32(System.Object)">
      <summary>Converte um valor em um inteiro com sinal de 32 bits.</summary>
      <param name="value">O objeto a ser convertido.</param>
      <returns>O <paramref name="value" /> convertido ou então <see langword="null" />, se o parâmetro <paramref name="type" /> é <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="value" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToInt64(System.Object)">
      <summary>Converte um valor em um inteiro com sinal de 64 bits.</summary>
      <param name="value">O objeto a ser convertido.</param>
      <returns>O <paramref name="value" /> convertido ou então <see langword="null" />, se o parâmetro <paramref name="type" /> é <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="value" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToSByte(System.Object)">
      <summary>Converte um valor em uma <see cref="T:System.SByte" />.</summary>
      <param name="value">O objeto a ser convertido.</param>
      <returns>O <paramref name="value" /> convertido ou então <see langword="null" />, se o parâmetro <paramref name="type" /> é <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="value" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToSingle(System.Object)">
      <summary>Converte um valor em um número de ponto flutuante de precisão simples.</summary>
      <param name="value">O objeto a ser convertido.</param>
      <returns>O <paramref name="value" /> convertido ou então <see langword="null" />, se o parâmetro <paramref name="type" /> é <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="value" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToString(System.Object)">
      <summary>Converte o objeto especificado em um <see cref="T:System.String" />.</summary>
      <param name="value">O objeto a ser convertido.</param>
      <returns>O <paramref name="value" /> convertido ou então <see langword="null" />, se o parâmetro <paramref name="type" /> é <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="value" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToUInt16(System.Object)">
      <summary>Converte um valor em um inteiro sem sinal de 16 bits.</summary>
      <param name="value">O objeto a ser convertido.</param>
      <returns>O <paramref name="value" /> convertido ou então <see langword="null" />, se o parâmetro <paramref name="type" /> é <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="value" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToUInt32(System.Object)">
      <summary>Converte um valor em um inteiro sem sinal de 32 bits.</summary>
      <param name="value">O objeto a ser convertido.</param>
      <returns>O <paramref name="value" /> convertido ou então <see langword="null" />, se o parâmetro <paramref name="type" /> é <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="value" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToUInt64(System.Object)">
      <summary>Converte um valor em um inteiro sem sinal de 64 bits.</summary>
      <param name="value">O objeto a ser convertido.</param>
      <returns>O <paramref name="value" /> convertido ou então <see langword="null" />, se o parâmetro <paramref name="type" /> é <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="value" /> é <see langword="null" />.</exception>
    </member>
    <member name="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter">
      <summary>Serializa e desserializa um objeto ou um grafo inteiro de objetos conectados, em formato binário.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" /> com valores padrão.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.#ctor(System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância de <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" /> classe com um seletor substituto determinado e o contexto de streaming.</summary>
      <param name="selector">O <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> a ser usado. Pode ser <see langword="null" />.</param>
      <param name="context">A origem e destino para os dados serializados.</param>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.AssemblyFormat">
      <summary>Obtém ou define o comportamento do desserializador em relação a encontrar e carregar assemblies.</summary>
      <returns>Um dos valores <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> que especifica o comportamento do desserializador.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Binder">
      <summary>Obtém ou define um objeto do tipo <see cref="T:System.Runtime.Serialization.SerializationBinder" /> que controla a associação de um objeto serializado a um tipo.</summary>
      <returns>O associador de serialização a se usar com esse formatador.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Context">
      <summary>Obtém ou define o <see cref="T:System.Runtime.Serialization.StreamingContext" /> para esse formatador.</summary>
      <returns>O contexto de streaming a ser usado com este formatador.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize(System.IO.Stream)">
      <summary>Desserializa o fluxo especificado em um grafo de objeto.</summary>
      <param name="serializationStream">O fluxo do qual desserializar o grafo do objeto.</param>
      <returns>A parte superior (raiz) do grafo do objeto.</returns>
      <exception cref="T:System.ArgumentNullException">O <paramref name="serializationStream" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">O <paramref name="serializationStream" /> dá suporte a busca, mas seu tamanho é 0.  

ou - 
O tipo de destino é um <see cref="T:System.Decimal" />, mas o valor está fora do intervalo do tipo <see cref="T:System.Decimal" />.</exception>
      <exception cref="T:System.Security.SecurityException">O chamador não tem a permissão necessária.</exception>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.FilterLevel">
      <summary>Obtém ou define o <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /> de desserialização automática que o <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" /> executa.</summary>
      <returns>O <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /> que representa o nível de desserialização automática atual.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Serialize(System.IO.Stream,System.Object)">
      <summary>Serializa o objeto ou grafo de objetos com o topo (raiz) especificado para o fluxo especificado.</summary>
      <param name="serializationStream">O fluxo para o qual o gráfico deve ser serializado.</param>
      <param name="graph">O objeto na raiz do grafo a ser serializado.</param>
      <exception cref="T:System.ArgumentNullException">O <paramref name="serializationStream" /> é <see langword="null" />.  

ou - 
O <paramref name="graph" /> é nulo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Ocorreu um erro durante a serialização; por exemplo, se um objeto no parâmetro <paramref name="graph" /> não foi marcado como serializável.</exception>
      <exception cref="T:System.Security.SecurityException">O chamador não tem a permissão necessária.</exception>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.SurrogateSelector">
      <summary>Obtém ou define um <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> que controla a substituição de tipo durante a serialização e desserialização.</summary>
      <returns>O seletor substituto a ser usado com este formatador.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.TypeFormat">
      <summary>Obtém ou define o formato no qual as descrições de tipo são apresentadas no fluxo serializado.</summary>
      <returns>O estilo de layouts de tipo a ser usado.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle">
      <summary>Indica o método que será usado durante a desserialização para localizar e carregar assemblies.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle.Full">
      <summary>No modo completo, o assembly usado durante a desserialização deve corresponder exatamente ao assembly usado durante a serialização. O método <see cref="Overload:System.Reflection.Assembly.Load" /> da classe <see cref="T:System.Reflection.Assembly" /> é usado para carregar o assembly.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle.Simple">
      <summary>No modo simples, o assembly usado durante a desserialização não precisa corresponder exatamente ao assembly usado durante a serialização. Especificamente, os números de versão não precisam corresponder, visto que o método <see cref="Overload:System.Reflection.Assembly.LoadWithPartialName" /> é usado para carregar o assembly.</summary>
    </member>
    <member name="T:System.Runtime.Serialization.Formatters.FormatterTypeStyle">
      <summary>Indica o formato no qual as descrições de tipo são apresentadas no fluxo serializado.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.FormatterTypeStyle.TypesAlways">
      <summary>Indica que os tipos podem ser fornecidos para todos os membros do objeto e membros de objeto <see cref="T:System.Runtime.Serialization.ISerializable" />.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.FormatterTypeStyle.TypesWhenNeeded">
      <summary>Indica que os tipos podem ser definidos apenas para matrizes de objetos, os membros de objeto do tipo <see cref="T:System.Object" /> e tipos de valor não primitivos <see cref="T:System.Runtime.Serialization.ISerializable" />.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.FormatterTypeStyle.XsdString">
      <summary>Indica que as cadeias de caracteres podem ser especificadas em formato XSD em vez de SOAP. Nenhuma ID de cadeia de caracteres é transmitida.</summary>
    </member>
    <member name="T:System.Runtime.Serialization.Formatters.IFieldInfo">
      <summary>Permite acesso aos nomes de campo e tipos de campo de objetos que dão suporte à interface <see cref="T:System.Runtime.Serialization.ISerializable" />.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.IFieldInfo.FieldNames">
      <summary>Obtém ou define os nomes de campo de objetos serializados.</summary>
      <returns>Os nomes de campo dos objetos serializados.</returns>
      <exception cref="T:System.Security.SecurityException">O chamador não tem a permissão necessária.</exception>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.IFieldInfo.FieldTypes">
      <summary>Obtém ou define os tipos de campo dos objetos serializados.</summary>
      <returns>Os tipos de campo dos objetos serializados.</returns>
      <exception cref="T:System.Security.SecurityException">O chamador não tem a permissão necessária.</exception>
    </member>
    <member name="T:System.Runtime.Serialization.Formatters.TypeFilterLevel">
      <summary>Especifica o nível de desserialização automática para comunicação remota do .NET Framework.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.TypeFilterLevel.Full">
      <summary>O nível de desserialização total para comunicação remota do .NET Framework. Ele dá suporte a todos os tipos aos quais a comunicação remota dá suporte, em todas as situações.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.TypeFilterLevel.Low">
      <summary>O baixo nível de desserialização para comunicação remota do .NET Framework. Ele dá suporte a tipos associados à funcionalidade básica de comunicação remota.</summary>
    </member>
    <member name="T:System.Runtime.Serialization.FormatterServices">
      <summary>Fornece métodos estáticos para ajudar com a implementação de um <see cref="T:System.Runtime.Serialization.Formatter" /> para serialização. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.CheckTypeSecurity(System.Type,System.Runtime.Serialization.Formatters.TypeFilterLevel)">
      <summary>Determina se o <see cref="T:System.Type" /> especificado pode ser desserializado com a propriedade <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /> definida como <see langword="Low" />.</summary>
      <param name="t">O <see cref="T:System.Type" /> cuja capacidade de desserialização deve ser verificada.</param>
      <param name="securityLevel">O valor da propriedade <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" />.</param>
      <exception cref="T:System.Security.SecurityException">O parâmetro <paramref name="t" /> é um tipo de objeto avançado e não pode ser desserializado quando a propriedade <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /> está definida para <see langword="Low" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetObjectData(System.Object,System.Reflection.MemberInfo[])">
      <summary>Extrai os dados do objeto especificado e retorna-os como uma matriz de objetos.</summary>
      <param name="obj">O objeto a gravar no formatador.</param>
      <param name="members">Os membros a extrair do objeto.</param>
      <returns>Uma matriz de <see cref="T:System.Object" /> que contém dados armazenados em <paramref name="members" /> e associados a <paramref name="obj" />.</returns>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="obj" /> ou <paramref name="members" /> é <see langword="null" />.  
Um elemento de <paramref name="members" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Um elemento de <paramref name="members" /> não representa um campo.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject(System.Type)">
      <summary>Cria uma nova instância do tipo de objeto especificado.</summary>
      <param name="type">O tipo de objeto a ser criado.</param>
      <returns>Um objeto zerado do tipo especificado.</returns>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="type" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">O parâmetro <paramref name="type" /> não é um tipo válido do Common Language Runtime.</exception>
      <exception cref="T:System.Security.SecurityException">O chamador não tem a permissão necessária.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type)">
      <summary>Obtém todos os membros serializáveis para uma classe do <see cref="T:System.Type" /> especificado.</summary>
      <param name="type">O tipo que está sendo serializado.</param>
      <returns>Uma matriz do tipo <see cref="T:System.Reflection.MemberInfo" /> dos membros não transitórios e não estáticos.</returns>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="type" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">O chamador não tem a permissão necessária.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type,System.Runtime.Serialization.StreamingContext)">
      <summary>Obtém todos os membros serializáveis para uma classe do <see cref="T:System.Type" /> especificado e no <see cref="T:System.Runtime.Serialization.StreamingContext" /> fornecido.</summary>
      <param name="type">O tipo sendo serializado ou clonado.</param>
      <param name="context">O contexto em que a serialização ocorre.</param>
      <returns>Uma matriz do tipo <see cref="T:System.Reflection.MemberInfo" /> dos membros não transitórios e não estáticos.</returns>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="type" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">O chamador não tem a permissão necessária.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetSurrogateForCyclicalReference(System.Runtime.Serialization.ISerializationSurrogate)">
      <summary>Retorna um substituto de serialização para o <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" /> especificado.</summary>
      <param name="innerSurrogate">O substituto especificado.</param>
      <returns>Um <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" /> para o <paramref name="innerSurrogate" /> especificado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetTypeFromAssembly(System.Reflection.Assembly,System.String)">
      <summary>Pesquisa o <see cref="T:System.Type" /> do objeto especificado no <see cref="T:System.Reflection.Assembly" /> fornecido.</summary>
      <param name="assem">O assembly em que você deseja pesquisar o objeto.</param>
      <param name="name">O nome do objeto.</param>
      <returns>O <see cref="T:System.Type" /> do objeto nomeado.</returns>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="assem" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">O chamador não tem a permissão necessária.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetUninitializedObject(System.Type)">
      <summary>Cria uma nova instância do tipo de objeto especificado.</summary>
      <param name="type">O tipo de objeto a ser criado.</param>
      <returns>Um objeto zerado do tipo especificado.</returns>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="type" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">O chamador não tem a permissão necessária.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])">
      <summary>Preenche o objeto especificado com valores para cada campo extraído da matriz de dados de objetos.</summary>
      <param name="obj">O objeto a popular.</param>
      <param name="members">Uma matriz de <see cref="T:System.Reflection.MemberInfo" /> que descreve quais campos e propriedades popular.</param>
      <param name="data">Uma matriz de <see cref="T:System.Object" /> que especifica os valores para cada campo e propriedade a popular.</param>
      <returns>O objeto recentemente populado.</returns>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="obj" />, <paramref name="members" /> ou <paramref name="data" /> é <see langword="null" />.  
Um elemento de <paramref name="members" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O comprimento de <paramref name="members" /> não corresponde ao comprimento de <paramref name="data" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Um elemento de <paramref name="members" /> não é uma instância de <see cref="T:System.Reflection.FieldInfo" />.</exception>
      <exception cref="T:System.Security.SecurityException">O chamador não tem a permissão necessária.</exception>
    </member>
    <member name="T:System.Runtime.Serialization.IFormatter">
      <summary>Fornece a funcionalidade para formatação de objetos serializados.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.IFormatter.Binder">
      <summary>Obtém ou define o <see cref="T:System.Runtime.Serialization.SerializationBinder" /> que executa pesquisas de tipo durante a desserialização.</summary>
      <returns>O <see cref="T:System.Runtime.Serialization.SerializationBinder" /> que executa pesquisas de tipo durante a desserialização.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.IFormatter.Context">
      <summary>Obtém ou define o <see cref="T:System.Runtime.Serialization.StreamingContext" /> usado para serialização e desserialização.</summary>
      <returns>O <see cref="T:System.Runtime.Serialization.StreamingContext" /> usado para serialização e desserialização.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.IFormatter.Deserialize(System.IO.Stream)">
      <summary>Desserializa os dados no fluxo fornecido e reconstitui o grafo de objetos.</summary>
      <param name="serializationStream">O fluxo que contém os dados a serem desserializados.</param>
      <returns>O objeto superior do grafo desserializado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.IFormatter.Serialize(System.IO.Stream,System.Object)">
      <summary>Serializa um objeto ou grafo de objetos com a raiz especificada para o fluxo fornecido.</summary>
      <param name="serializationStream">O fluxo no qual o formatador coloca os dados serializados. Esse fluxo pode fazer referência a uma variedade de repositórios de backup (como arquivos, rede, memória e assim por diante).</param>
      <param name="graph">O objeto ou a raiz do gráfico do objeto a serializar. Todos os objetos filho desse objeto raiz são serializados automaticamente.</param>
    </member>
    <member name="P:System.Runtime.Serialization.IFormatter.SurrogateSelector">
      <summary>Obtém ou define o <see cref="T:System.Runtime.Serialization.SurrogateSelector" /> usado pelo formatador atual.</summary>
      <returns>O <see cref="T:System.Runtime.Serialization.SurrogateSelector" /> usado por este formatador.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.ISerializationSurrogate">
      <summary>Implementa um seletor de substitutos de serialização que permite que um objeto realize a serialização e a desserialização de outro.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ISerializationSurrogate.GetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Popula o <see cref="T:System.Runtime.Serialization.SerializationInfo" /> fornecido com os dados necessários para serializar o objeto.</summary>
      <param name="obj">O objeto a ser serializado.</param>
      <param name="info">O <see cref="T:System.Runtime.Serialization.SerializationInfo" /> a ser preenchido com dados.</param>
      <param name="context">O destino (consulte <see cref="T:System.Runtime.Serialization.StreamingContext" />) dessa serialização.</param>
      <exception cref="T:System.Security.SecurityException">O chamador não tem a permissão necessária.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ISerializationSurrogate.SetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISurrogateSelector)">
      <summary>Popula o objeto usando as informações no <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</summary>
      <param name="obj">O objeto a popular.</param>
      <param name="info">As informações para popular o objeto.</param>
      <param name="context">A origem da qual o objeto é desserializado.</param>
      <param name="selector">O seletor substituto em que a pesquisa por um substituto compatível começa.</param>
      <returns>O objeto desserializado populado.</returns>
      <exception cref="T:System.Security.SecurityException">O chamador não tem a permissão necessária.</exception>
    </member>
    <member name="T:System.Runtime.Serialization.ISurrogateSelector">
      <summary>Indica uma classe de seletor alternativo de serialização.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ISurrogateSelector.ChainSelector(System.Runtime.Serialization.ISurrogateSelector)">
      <summary>Especifica o próximo <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> para substitutos para examinar se a instância atual não tem um substituto para o tipo e o assembly especificados no contexto especificado.</summary>
      <param name="selector">O próximo seletor substituto a examinar.</param>
      <exception cref="T:System.Security.SecurityException">O chamador não tem a permissão necessária.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ISurrogateSelector.GetNextSelector">
      <summary>Retorna o próximo seletor de substituto na cadeia.</summary>
      <returns>O próximo seletor substituto na cadeia ou <see langword="null" />.</returns>
      <exception cref="T:System.Security.SecurityException">O chamador não tem a permissão necessária.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ISurrogateSelector.GetSurrogate(System.Type,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISurrogateSelector@)">
      <summary>Localiza o substituto que representa o tipo do objeto especificado, começando com o seletor de substitutos especificado para o contexto de serialização especificado.</summary>
      <param name="type">O <see cref="T:System.Type" /> do objeto (classe) que precisa de um substituto.</param>
      <param name="context">O contexto de origem ou de destino para a serialização atual.</param>
      <param name="selector">Quando esse método retorna, contém um <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> com uma referência para o seletor substituto no qual o substituto adequado foi encontrado. Este parâmetro é passado não inicializado.</param>
      <returns>O substituto adequado para o tipo de determinado no contexto fornecido.</returns>
      <exception cref="T:System.Security.SecurityException">O chamador não tem a permissão necessária.</exception>
    </member>
    <member name="T:System.Runtime.Serialization.ObjectIDGenerator">
      <summary>Gera IDs para objetos.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectIDGenerator.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectIDGenerator.GetId(System.Object,System.Boolean@)">
      <summary>Retornará a ID do objeto especificado, gerando uma nova ID, se o objeto especificado ainda não tiver sido identificado pelo <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" />.</summary>
      <param name="obj">O objeto para o qual você deseja ter uma ID.</param>
      <param name="firstTime">
        <see langword="true" /> se <paramref name="obj" /> não era conhecido anteriormente pelo <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" />; caso contrário, <see langword="false" />.</param>
      <returns>A ID do objeto é usada para serialização. <paramref name="firstTime" /> será definido como <see langword="true" />, se esta for a primeira vez que o objeto foi identificado; caso contrário, ele é definido como <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="obj" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Foi solicitado que <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" /> controlasse objetos em excesso.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectIDGenerator.HasId(System.Object,System.Boolean@)">
      <summary>Determina se já foi atribuído uma ID a um objeto.</summary>
      <param name="obj">O objeto que você está solicitando.</param>
      <param name="firstTime">
        <see langword="true" /> se <paramref name="obj" /> não era conhecido anteriormente pelo <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" />; caso contrário, <see langword="false" />.</param>
      <returns>A ID de objeto do <paramref name="obj" />, se anteriormente conhecida pelo <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" />; caso contrário, zero.</returns>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="obj" /> é <see langword="null" />.</exception>
    </member>
    <member name="T:System.Runtime.Serialization.ObjectManager">
      <summary>Monitora a desserialização de objetos.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.#ctor(System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.ObjectManager" />.</summary>
      <param name="selector">O seletor substituto a usar. O <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> determina o substituto correto a ser usado ao desserializar objetos de um determinado tipo. No tempo de desserialização, o seletor substituto cria uma nova instância do objeto com base nas informações transmitidas no fluxo.</param>
      <param name="context">O contexto de streaming. O <see cref="T:System.Runtime.Serialization.StreamingContext" /> não é usado pelo <see langword="ObjectManager" />, mas é passado como um parâmetro para quaisquer objetos que implementem <see cref="T:System.Runtime.Serialization.ISerializable" /> ou tenham um <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />. Esses objetos podem executar ações específicas dependendo da fonte de informações a desserializar.</param>
      <exception cref="T:System.Security.SecurityException">O chamador não tem a permissão necessária.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.DoFixups">
      <summary>Executa todas as correções gravadas.</summary>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Uma correção não foi concluída com êxito.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.GetObject(System.Int64)">
      <summary>Retorna o objeto com a ID do objeto especificada.</summary>
      <param name="objectID">A ID do objeto solicitado.</param>
      <returns>O objeto com a ID do objeto especificada se tiver sido armazenado anteriormente ou <see langword="null" />, se esse objeto não tiver sido registrado.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">O parâmetro <paramref name="objectID" /> é menor ou igual a zero.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RaiseDeserializationEvent">
      <summary>Gera o evento de desserialização para qualquer objeto registrado que implementa <see cref="T:System.Runtime.Serialization.IDeserializationCallback" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RaiseOnDeserializingEvent(System.Object)">
      <summary>Invoca o método marcado com <see cref="T:System.Runtime.Serialization.OnDeserializingAttribute" />.</summary>
      <param name="obj">A instância do tipo que contém o método a ser invocado.</param>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(System.Int64,System.Int32,System.Int64)">
      <summary>Registra uma correção para um elemento em uma matriz.</summary>
      <param name="arrayToBeFixed">A ID da matriz usada para registrar um ajuste.</param>
      <param name="index">O índice em <c>arrayFixup</c> para o qual um ajuste é solicitado.</param>
      <param name="objectRequired">A ID do objeto para o qual o elemento da matriz atual apontará após a correção ser concluída.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">O parâmetro <paramref name="arrayToBeFixed" /> ou <paramref name="objectRequired" /> é menor ou igual a zero.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="index" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(System.Int64,System.Int32[],System.Int64)">
      <summary>Registra correções para os elementos especificados em uma matriz, a serem executados posteriormente.</summary>
      <param name="arrayToBeFixed">A ID da matriz usada para registrar um ajuste.</param>
      <param name="indices">Os índices dentro da matriz multidimensional para os quais um ajuste é solicitado.</param>
      <param name="objectRequired">A ID do objeto para a qual os elementos da matriz apontarão após a correção.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">O parâmetro <paramref name="arrayToBeFixed" /> ou <paramref name="objectRequired" /> é menor ou igual a zero.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="indices" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RecordDelayedFixup(System.Int64,System.String,System.Int64)">
      <summary>Registra uma correção para um membro de objeto, a ser executado posteriormente.</summary>
      <param name="objectToBeFixed">A ID do objeto que precisa da referência ao <paramref name="objectRequired" />.</param>
      <param name="memberName">O nome do membro de <paramref name="objectToBeFixed" /> em que a correção será executada.</param>
      <param name="objectRequired">A ID do objeto exigido pelo <paramref name="objectToBeFixed" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">O parâmetro <paramref name="objectToBeFixed" /> ou <paramref name="objectRequired" /> é menor ou igual a zero.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="memberName" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RecordFixup(System.Int64,System.Reflection.MemberInfo,System.Int64)">
      <summary>Registra uma correção para um membro de um objeto a ser executado posteriormente.</summary>
      <param name="objectToBeFixed">A ID do objeto que precisa da referência ao objeto <paramref name="objectRequired" />.</param>
      <param name="member">O membro de <paramref name="objectToBeFixed" /> em que a correção será executada.</param>
      <param name="objectRequired">A ID do objeto exigido pelo <paramref name="objectToBeFixed" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">O parâmetro <paramref name="objectToBeFixed" /> ou <paramref name="objectRequired" /> é menor ou igual a zero.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="member" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64)">
      <summary>Registra um objeto conforme ele é desserializado, associando-o a <paramref name="objectID" />.</summary>
      <param name="obj">O objeto a ser registrado.</param>
      <param name="objectID">A ID do objeto a registrar.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="obj" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O parâmetro <paramref name="objectID" /> é menor ou igual a zero.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">O <paramref name="objectID" /> já foi registrado para um objeto diferente de <paramref name="obj" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo)">
      <summary>Registra um objeto conforme ele é desserializado, associando-o a <paramref name="objectID" /> e gravando o <see cref="T:System.Runtime.Serialization.SerializationInfo" /> usado com ele.</summary>
      <param name="obj">O objeto a ser registrado.</param>
      <param name="objectID">A ID do objeto a registrar.</param>
      <param name="info">O <see cref="T:System.Runtime.Serialization.SerializationInfo" /> usado se <paramref name="obj" /> implementar <see cref="T:System.Runtime.Serialization.ISerializable" /> ou tiver um <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />. <paramref name="info" /> serão preenchidas com quaisquer informações necessárias de correção e então passadas para o objeto necessário quando esse objeto estiver concluído.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="obj" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O parâmetro <paramref name="objectID" /> é menor ou igual a zero.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">O <paramref name="objectID" /> já foi registrado para um objeto diferente de <paramref name="obj" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo)">
      <summary>Registra um membro de um objeto conforme ele é desserializado, associando-o a <paramref name="objectID" /> e registrando o <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</summary>
      <param name="obj">O objeto a ser registrado.</param>
      <param name="objectID">A ID do objeto a registrar.</param>
      <param name="info">O <see cref="T:System.Runtime.Serialization.SerializationInfo" /> usado se <paramref name="obj" /> implementar <see cref="T:System.Runtime.Serialization.ISerializable" /> ou tiver um <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />. <paramref name="info" /> serão preenchidas com quaisquer informações necessárias de correção e então passadas para o objeto necessário quando esse objeto estiver concluído.</param>
      <param name="idOfContainingObj">A ID do objeto que contém <paramref name="obj" />. Este parâmetro será obrigatório somente se <paramref name="obj" /> for um tipo de valor.</param>
      <param name="member">O campo no objeto recipiente no qual <paramref name="obj" /> existe. Este parâmetro terá significado somente se <paramref name="obj" /> for um tipo de valor.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="obj" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O parâmetro <paramref name="objectID" /> é menor ou igual a zero.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">O <paramref name="objectID" /> já foi registrado para um objeto diferente de <paramref name="obj" />, ou <paramref name="member" /> não é um <see cref="T:System.Reflection.FieldInfo" /> e <paramref name="member" /> não é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo,System.Int32[])">
      <summary>Registra um membro de uma matriz contido em um objeto enquanto ele é desserializado, associando-o a <paramref name="objectID" /> e registrando o <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</summary>
      <param name="obj">O objeto a ser registrado.</param>
      <param name="objectID">A ID do objeto a registrar.</param>
      <param name="info">O <see cref="T:System.Runtime.Serialization.SerializationInfo" /> usado se <paramref name="obj" /> implementar <see cref="T:System.Runtime.Serialization.ISerializable" /> ou tiver um <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />. <paramref name="info" /> serão preenchidas com quaisquer informações necessárias de correção e então passadas para o objeto necessário quando esse objeto estiver concluído.</param>
      <param name="idOfContainingObj">A ID do objeto que contém <paramref name="obj" />. Este parâmetro será obrigatório somente se <paramref name="obj" /> for um tipo de valor.</param>
      <param name="member">O campo no objeto recipiente no qual <paramref name="obj" /> existe. Este parâmetro terá significado somente se <paramref name="obj" /> for um tipo de valor.</param>
      <param name="arrayIndex">Se <paramref name="obj" /> é um <see cref="T:System.ValueType" /> e um membro de uma matriz, <paramref name="arrayIndex" /> contém o índice na matriz em que <paramref name="obj" /> existe. <paramref name="arrayIndex" /> será ignorado se <paramref name="obj" /> não for um <see cref="T:System.ValueType" /> e um membro de uma matriz.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="obj" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O parâmetro <paramref name="objectID" /> é menor ou igual a zero.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">O <paramref name="objectID" /> já foi registrado para um objeto diferente de <paramref name="obj" />, ou <paramref name="member" /> não é um <see cref="T:System.Reflection.FieldInfo" /> e <paramref name="member" /> não é <see langword="null" />.</exception>
    </member>
    <member name="T:System.Runtime.Serialization.SerializationBinder">
      <summary>Permite aos usuários controlar o carregamento de classe e gerencia a classe a ser carregada.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationBinder.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.SerializationBinder" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationBinder.BindToName(System.Type,System.String@,System.String@)">
      <summary>Quando substituído em uma classe derivada, controla a associação de um objeto serializado a um tipo.</summary>
      <param name="serializedType">O tipo do objeto do qual o formatador cria uma nova instância.</param>
      <param name="assemblyName">Especifica o nome <see cref="T:System.Reflection.Assembly" /> do objeto serializado.</param>
      <param name="typeName">Especifica o nome <see cref="T:System.Type" /> do objeto serializado.</param>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationBinder.BindToType(System.String,System.String)">
      <summary>Quando substituído em uma classe derivada, controla a associação de um objeto serializado a um tipo.</summary>
      <param name="assemblyName">Especifica o nome <see cref="T:System.Reflection.Assembly" /> do objeto serializado.</param>
      <param name="typeName">Especifica o nome <see cref="T:System.Type" /> do objeto serializado.</param>
      <returns>O tipo do objeto do qual o formatador cria uma nova instância.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.SerializationObjectManager">
      <summary>Gerencia os processos de serialização em tempo de execução. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationObjectManager.#ctor(System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.SerializationObjectManager" />.</summary>
      <param name="context">Uma instância da classe <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contém informações sobre a operação atual de serialização.</param>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationObjectManager.RaiseOnSerializedEvent">
      <summary>Invocará o evento de retorno de chamada OnSerializing se o tipo do objeto tiver um; e registrará o objeto para gerar o evento OnSerialized se o tipo do objeto tiver um.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationObjectManager.RegisterObject(System.Object)">
      <summary>Registra o objeto após o qual os eventos serão gerados.</summary>
      <param name="obj">O objeto a ser registrado.</param>
    </member>
    <member name="T:System.Runtime.Serialization.SurrogateSelector">
      <summary>Auxilia formatadores na seleção do substituto da serialização ao qual delegar o processo de serialização ou desserialização.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.SurrogateSelector.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.SurrogateSelector" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.SurrogateSelector.AddSurrogate(System.Type,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISerializationSurrogate)">
      <summary>Adiciona um substituto à lista de substitutos verificados.</summary>
      <param name="type">O <see cref="T:System.Type" /> para o qual o substituto é necessário.</param>
      <param name="context">Os dados específicos do contexto.</param>
      <param name="surrogate">O substituto a ser chamado para esse tipo.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="type" /> ou <paramref name="surrogate" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Já existe um substituto para esse tipo e contexto.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.SurrogateSelector.ChainSelector(System.Runtime.Serialization.ISurrogateSelector)">
      <summary>Adiciona o <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> especificado que pode lidar com um tipo de objeto específico à lista de substitutos.</summary>
      <param name="selector">O seletor de substitutos a ser adicionado.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="selector" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">O seletor já está na lista de seletores.</exception>
      <exception cref="T:System.Security.SecurityException">O chamador não tem a permissão necessária.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.SurrogateSelector.GetNextSelector">
      <summary>Retorna o próximo seletor na cadeia de seletores.</summary>
      <returns>O próximo <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> na cadeia de seletores.</returns>
      <exception cref="T:System.Security.SecurityException">O chamador não tem a permissão necessária.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.SurrogateSelector.GetSurrogate(System.Type,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISurrogateSelector@)">
      <summary>Retorna o substituto de um determinado tipo.</summary>
      <param name="type">O <see cref="T:System.Type" /> para o qual o substituto é solicitado.</param>
      <param name="context">O contexto de streaming.</param>
      <param name="selector">O substituto a ser usado.</param>
      <returns>O substituto de um determinado tipo.</returns>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="type" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">O chamador não tem a permissão necessária.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.SurrogateSelector.RemoveSurrogate(System.Type,System.Runtime.Serialization.StreamingContext)">
      <summary>Remove do substituto associado com um determinado tipo.</summary>
      <param name="type">O <see cref="T:System.Type" /> do qual o substituto será removido.</param>
      <param name="context">O <see cref="T:System.Runtime.Serialization.StreamingContext" /> do substituto atual.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="type" /> é <see langword="null" />.</exception>
    </member>
  </members>
</doc>