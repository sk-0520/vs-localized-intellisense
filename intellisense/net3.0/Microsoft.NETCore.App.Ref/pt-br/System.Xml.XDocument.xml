<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Xml.XDocument</name>
  </assembly>
  <members>
    <member name="T:System.Xml.Linq.Extensions">
      <summary>Contém os métodos de extensão LINQ to XML.</summary>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>Retorna uma coleção de elementos que contém os ancestrais de cada nó na coleção de origem.</summary>
      <param name="source">Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> do <see cref="T:System.Xml.Linq.XNode" /> que contém a coleção de origem.</param>
      <typeparam name="T">O tipo dos objetos em <paramref name="source" />, restritos para <see cref="T:System.Xml.Linq.XNode" />.</typeparam>
      <returns>Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> que contém os ancestrais de cada nó na coleção de origem.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
      <summary>Retorna uma coleção filtrada de elementos que contém os ancestrais de cada nó na coleção de origem. Somente os elementos que têm um <see cref="T:System.Xml.Linq.XName" /> correspondente são incluídos na coleção.</summary>
      <param name="source">Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> do <see cref="T:System.Xml.Linq.XNode" /> que contém a coleção de origem.</param>
      <param name="name">O <see cref="T:System.Xml.Linq.XName" /> correspondente.</param>
      <typeparam name="T">O tipo dos objetos em <paramref name="source" />, restritos para <see cref="T:System.Xml.Linq.XNode" />.</typeparam>
      <returns>Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> que contém os ancestrais de cada nó na coleção de origem. Somente os elementos que têm um <see cref="T:System.Xml.Linq.XName" /> correspondente são incluídos na coleção.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
      <summary>Retorna uma coleção de elementos que contém todos os elementos na coleção de origem e os ancestrais de todos os elementos na coleção de origem.</summary>
      <param name="source">Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> do <see cref="T:System.Xml.Linq.XElement" /> que contém a coleção de origem.</param>
      <returns>Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> que contém todos os elementos na coleção de origem e os ancestrais de todos os elementos na coleção de origem.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
      <summary>Retorna uma coleção filtrada de elementos que contém todos os elementos na coleção de origem e os ancestrais de todos os elementos na coleção de origem. Somente os elementos que têm um <see cref="T:System.Xml.Linq.XName" /> correspondente são incluídos na coleção.</summary>
      <param name="source">Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> do <see cref="T:System.Xml.Linq.XElement" /> que contém a coleção de origem.</param>
      <param name="name">O <see cref="T:System.Xml.Linq.XName" /> correspondente.</param>
      <returns>Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> que contém todos os elementos na coleção de origem e os ancestrais de todos os elementos na coleção de origem. Somente os elementos que têm um <see cref="T:System.Xml.Linq.XName" /> correspondente são incluídos na coleção.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
      <summary>Retorna uma coleção de atributos de cada elemento na coleção de origem.</summary>
      <param name="source">Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> do <see cref="T:System.Xml.Linq.XElement" /> que contém a coleção de origem.</param>
      <returns>Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> do <see cref="T:System.Xml.Linq.XAttribute" /> que contém os atributos de cada elemento da coleção de origem.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
      <summary>Retorna uma coleção filtrada dos atributos de cada elemento na coleção de origem. Somente os elementos que têm um <see cref="T:System.Xml.Linq.XName" /> correspondente são incluídos na coleção.</summary>
      <param name="source">Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> do <see cref="T:System.Xml.Linq.XElement" /> que contém a coleção de origem.</param>
      <param name="name">O <see cref="T:System.Xml.Linq.XName" /> correspondente.</param>
      <returns>Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XAttribute" /> que contém uma coleção filtrada dos atributos de cada elemento na coleção de origem. Somente os elementos que têm um <see cref="T:System.Xml.Linq.XName" /> correspondente são incluídos na coleção.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>Retorna uma coleção dos nós descendentes de todos os documentos e elementos na coleção de origem.</summary>
      <param name="source">Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> do <see cref="T:System.Xml.Linq.XContainer" /> que contém a coleção de origem.</param>
      <typeparam name="T">O tipo dos objetos em <paramref name="source" />, restritos para <see cref="T:System.Xml.Linq.XContainer" />.</typeparam>
      <returns>Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XNode" /> dos nós descendentes de todos os documentos e elementos na coleção de origem.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
      <summary>Retorna uma coleção de nós que contém todos os elementos na coleção de origem e os nós descendentes de todos os elementos na coleção de origem.</summary>
      <param name="source">Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> do <see cref="T:System.Xml.Linq.XElement" /> que contém a coleção de origem.</param>
      <returns>Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XNode" /> que contém todos os elementos na coleção de origem e os nós descendentes de todos os elementos na coleção de origem.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>Retorna uma coleção de elementos que contém os elementos descendentes de cada elemento e o documento na coleção de origem.</summary>
      <param name="source">Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> do <see cref="T:System.Xml.Linq.XContainer" /> que contém a coleção de origem.</param>
      <typeparam name="T">O tipo dos objetos em <paramref name="source" />, restritos para <see cref="T:System.Xml.Linq.XContainer" />.</typeparam>
      <returns>Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> do <see cref="T:System.Xml.Linq.XElement" /> que contém os elementos descendentes de cada elemento e o documento na coleção de origem.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
      <summary>Retorna uma coleção filtrada de elementos que contém os elementos descendentes de cada elemento e o documento na coleção de origem. Somente os elementos que têm um <see cref="T:System.Xml.Linq.XName" /> correspondente são incluídos na coleção.</summary>
      <param name="source">Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> do <see cref="T:System.Xml.Linq.XContainer" /> que contém a coleção de origem.</param>
      <param name="name">O <see cref="T:System.Xml.Linq.XName" /> correspondente.</param>
      <typeparam name="T">O tipo dos objetos em <paramref name="source" />, restritos para <see cref="T:System.Xml.Linq.XContainer" />.</typeparam>
      <returns>Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> do <see cref="T:System.Xml.Linq.XElement" /> que contém os elementos descendentes de cada elemento e o documento na coleção de origem. Somente os elementos que têm um <see cref="T:System.Xml.Linq.XName" /> correspondente são incluídos na coleção.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
      <summary>Retorna uma coleção de elementos que contém todos os elementos na coleção de origem e os elementos descendentes de todos os elementos na coleção de origem.</summary>
      <param name="source">Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> do <see cref="T:System.Xml.Linq.XElement" /> que contém a coleção de origem.</param>
      <returns>Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> que contém todos os elementos na coleção de origem e os elementos descendentes de todos os elementos na coleção de origem.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
      <summary>Retorna uma coleção filtrada de elementos que contém todos os elementos na coleção de origem e os descendentes de todos os elementos na coleção de origem. Somente os elementos que têm um <see cref="T:System.Xml.Linq.XName" /> correspondente são incluídos na coleção.</summary>
      <param name="source">Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> do <see cref="T:System.Xml.Linq.XElement" /> que contém a coleção de origem.</param>
      <param name="name">O <see cref="T:System.Xml.Linq.XName" /> correspondente.</param>
      <returns>Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> que contém todos os elementos na coleção de origem e os descendentes de todos os elementos na coleção de origem. Somente os elementos que têm um <see cref="T:System.Xml.Linq.XName" /> correspondente são incluídos na coleção.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>Retorna uma coleção dos filhos elementos de cada elemento e o documento na coleção de origem.</summary>
      <param name="source">Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> do <see cref="T:System.Xml.Linq.XElement" /> que contém a coleção de origem.</param>
      <typeparam name="T">O tipo dos objetos em <paramref name="source" />, restritos para <see cref="T:System.Xml.Linq.XContainer" />.</typeparam>
      <returns>Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> do <see cref="T:System.Xml.Linq.XElement" /> dos elementos filho de cada elemento ou documento na coleção de origem.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
      <summary>Retorna uma coleção filtrada dos elementos filho de cada elemento e documento na coleção de origem. Somente os elementos que têm um <see cref="T:System.Xml.Linq.XName" /> correspondente são incluídos na coleção.</summary>
      <param name="source">Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> do <see cref="T:System.Xml.Linq.XElement" /> que contém a coleção de origem.</param>
      <param name="name">O <see cref="T:System.Xml.Linq.XName" /> correspondente.</param>
      <typeparam name="T">O tipo dos objetos em <paramref name="source" />, restritos para <see cref="T:System.Xml.Linq.XContainer" />.</typeparam>
      <returns>Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> do <see cref="T:System.Xml.Linq.XElement" /> dos elementos filho de cada elemento e documento na coleção de origem. Somente os elementos que têm um <see cref="T:System.Xml.Linq.XName" /> correspondente são incluídos na coleção.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>Retorna uma coleção de nós que contém todos os nós na coleção de origem, classificados em ordem segundo o documento.</summary>
      <param name="source">Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> do <see cref="T:System.Xml.Linq.XNode" /> que contém a coleção de origem.</param>
      <typeparam name="T">O tipo dos objetos em <paramref name="source" />, restritos para <see cref="T:System.Xml.Linq.XNode" />.</typeparam>
      <returns>Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XNode" /> que contém todos os nós na coleção de origem, classificados em ordem segundo o documento.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>Retorna uma coleção dos nós filhos de todos os documentos e elementos na coleção de origem.</summary>
      <param name="source">Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> do <see cref="T:System.Xml.Linq.XNode" /> que contém a coleção de origem.</param>
      <typeparam name="T">O tipo dos objetos em <paramref name="source" />, restritos para <see cref="T:System.Xml.Linq.XContainer" />.</typeparam>
      <returns>Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XNode" /> dos nós filhos de todos os documentos e elementos na coleção de origem.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})">
      <summary>Remove cada atributo na coleção de origem do respectivo elemento pai.</summary>
      <param name="source">Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> do <see cref="T:System.Xml.Linq.XAttribute" /> que contém a coleção de origem.</param>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>Remove todos os nós na coleção de origem do respectivo nó pai.</summary>
      <param name="source">Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> do <see cref="T:System.Xml.Linq.XNode" /> que contém a coleção de origem.</param>
      <typeparam name="T">O tipo dos objetos em <paramref name="source" />, restritos para <see cref="T:System.Xml.Linq.XNode" />.</typeparam>
    </member>
    <member name="T:System.Xml.Linq.LoadOptions">
      <summary>Especifica as opções de carga durante a análise de XML.</summary>
    </member>
    <member name="F:System.Xml.Linq.LoadOptions.None">
      <summary>Não preserva espaço em branco insignificante ou carrega o URI de base e as informações de linha.</summary>
    </member>
    <member name="F:System.Xml.Linq.LoadOptions.PreserveWhitespace">
      <summary>Preserva todo espaço em branco insignificante durante a análise.</summary>
    </member>
    <member name="F:System.Xml.Linq.LoadOptions.SetBaseUri">
      <summary>Solicita as informações de URI de base do <see cref="T:System.Xml.XmlReader" /> e disponibiliza por meio da propriedade <see cref="P:System.Xml.Linq.XObject.BaseUri" />.</summary>
    </member>
    <member name="F:System.Xml.Linq.LoadOptions.SetLineInfo">
      <summary>Solicita as informações de linha do <see cref="T:System.Xml.XmlReader" /> e disponibiliza por meio das propriedades em <see cref="T:System.Xml.Linq.XObject" />.</summary>
    </member>
    <member name="T:System.Xml.Linq.ReaderOptions">
      <summary>Especifica se namespaces duplicados devem ser omitidos ao carregar um <see cref="T:System.Xml.Linq.XDocument" /> com um <see cref="T:System.Xml.XmlReader" />.</summary>
    </member>
    <member name="F:System.Xml.Linq.ReaderOptions.None">
      <summary>Não há opções de leitor especificadas.</summary>
    </member>
    <member name="F:System.Xml.Linq.ReaderOptions.OmitDuplicateNamespaces">
      <summary>Omitir namespaces duplicados ao carregar o <see cref="T:System.Xml.Linq.XDocument" />.</summary>
    </member>
    <member name="T:System.Xml.Linq.SaveOptions">
      <summary>Especifica opções de serialização.</summary>
    </member>
    <member name="F:System.Xml.Linq.SaveOptions.DisableFormatting">
      <summary>Preserve todo espaço em branco insignificante durante a serialização.</summary>
    </member>
    <member name="F:System.Xml.Linq.SaveOptions.None">
      <summary>Formato XML (recuo) durante a serialização.</summary>
    </member>
    <member name="F:System.Xml.Linq.SaveOptions.OmitDuplicateNamespaces">
      <summary>Remova as declarações de namespace duplicadas durante a serialização.</summary>
    </member>
    <member name="T:System.Xml.Linq.XAttribute">
      <summary>Representa um atributo XML.</summary>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XAttribute)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Linq.XAttribute" /> de outro objeto <see cref="T:System.Xml.Linq.XAttribute" />.</summary>
      <param name="other">Um objeto <see cref="T:System.Xml.Linq.XAttribute" /> do qual copiar.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="other" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XName,System.Object)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Linq.XAttribute" /> do valor e nome especificados.</summary>
      <param name="name">O <see cref="T:System.Xml.Linq.XName" /> do atributo.</param>
      <param name="value">Um <see cref="T:System.Object" /> que contém o valor desse atributo.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="name" /> ou <paramref name="value" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.EmptySequence">
      <summary>Obtém uma coleção vazia de atributos.</summary>
      <returns>Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> de<see cref="T:System.Xml.Linq.XAttribute" /> contendo uma coleção vazia.</returns>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.IsNamespaceDeclaration">
      <summary>Determina se este atributo é uma declaração de namespace.</summary>
      <returns>
        <see langword="true" />Se esse atributo for uma declaração de namespace; caso <see langword="false" />contrário.</returns>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.Name">
      <summary>Obtém o nome expandido deste atributo.</summary>
      <returns>Um <see cref="T:System.Xml.Linq.XName" /> que contém o nome deste atributo.</returns>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.NextAttribute">
      <summary>Obtém o próximo atributo do elemento pai.</summary>
      <returns>Um <see cref="T:System.Xml.Linq.XAttribute" /> que contém o próximo atributo do elemento pai.</returns>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.NodeType">
      <summary>Obtém o tipo de nó para este nó.</summary>
      <returns>O tipo de nó. Para objetos <see cref="T:System.Xml.Linq.XAttribute" />, esse valor é <see cref="F:System.Xml.XmlNodeType.Attribute" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Boolean">
      <summary>Converta o valor deste <see cref="T:System.Xml.Linq.XAttribute" /> em um <see cref="T:System.Boolean" />.</summary>
      <param name="attribute">O <see cref="T:System.Xml.Linq.XAttribute" /> a ser convertido em <see cref="T:System.Boolean" />.</param>
      <returns>Um <see cref="T:System.Boolean" /> que contém o conteúdo deste <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException">O atributo não contém um valor <see cref="T:System.Boolean" /> válido.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="attribute" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTime">
      <summary>Converta o valor deste <see cref="T:System.Xml.Linq.XAttribute" /> em um <see cref="T:System.DateTime" />.</summary>
      <param name="attribute">O <see cref="T:System.Xml.Linq.XAttribute" /> a ser convertido em <see cref="T:System.DateTime" />.</param>
      <returns>Um <see cref="T:System.DateTime" /> que contém o conteúdo deste <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException">O atributo não contém um valor <see cref="T:System.DateTime" /> válido.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="attribute" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTimeOffset">
      <summary>Converta o valor deste <see cref="T:System.Xml.Linq.XAttribute" /> em um <see cref="T:System.DateTimeOffset" />.</summary>
      <param name="attribute">O <see cref="T:System.Xml.Linq.XAttribute" /> a ser convertido em <see cref="T:System.DateTimeOffset" />.</param>
      <returns>Um <see cref="T:System.DateTimeOffset" /> que contém o conteúdo deste <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException">O atributo não contém um valor <see cref="T:System.DateTimeOffset" /> válido.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="attribute" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Decimal">
      <summary>Converta o valor deste <see cref="T:System.Xml.Linq.XAttribute" /> em um <see cref="T:System.Decimal" />.</summary>
      <param name="attribute">O <see cref="T:System.Xml.Linq.XAttribute" /> a ser convertido em <see cref="T:System.Decimal" />.</param>
      <returns>Um <see cref="T:System.Decimal" /> que contém o conteúdo deste <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException">O atributo não contém um valor <see cref="T:System.Decimal" /> válido.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="attribute" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Double">
      <summary>Converta o valor deste <see cref="T:System.Xml.Linq.XAttribute" /> em um <see cref="T:System.Double" />.</summary>
      <param name="attribute">O <see cref="T:System.Xml.Linq.XAttribute" /> a ser convertido em <see cref="T:System.Double" />.</param>
      <returns>Um <see cref="T:System.Double" /> que contém o conteúdo deste <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException">O atributo não contém um valor <see cref="T:System.Double" /> válido.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="attribute" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Guid">
      <summary>Converta o valor deste <see cref="T:System.Xml.Linq.XAttribute" /> em um <see cref="T:System.Guid" />.</summary>
      <param name="attribute">O <see cref="T:System.Xml.Linq.XAttribute" /> a ser convertido em <see cref="T:System.Guid" />.</param>
      <returns>Um <see cref="T:System.Guid" /> que contém o conteúdo deste <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException">O atributo não contém um valor <see cref="T:System.Guid" /> válido.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="attribute" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int32">
      <summary>Converta o valor deste <see cref="T:System.Xml.Linq.XAttribute" /> em um <see cref="T:System.Int32" />.</summary>
      <param name="attribute">O <see cref="T:System.Xml.Linq.XAttribute" /> a ser convertido em <see cref="T:System.Int32" />.</param>
      <returns>Um <see cref="T:System.Int32" /> que contém o conteúdo deste <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException">O atributo não contém um valor <see cref="T:System.Int32" /> válido.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="attribute" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int64">
      <summary>Converta o valor deste <see cref="T:System.Xml.Linq.XAttribute" /> em um <see cref="T:System.Int64" />.</summary>
      <param name="attribute">O <see cref="T:System.Xml.Linq.XAttribute" /> a ser convertido em <see cref="T:System.Int64" />.</param>
      <returns>Um <see cref="T:System.Int64" /> que contém o conteúdo deste <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException">O atributo não contém um valor <see cref="T:System.Int64" /> válido.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="attribute" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Boolean}">
      <summary>Converte o valor deste <see cref="T:System.Xml.Linq.XAttribute" /> em um <see cref="T:System.Nullable`1" /> de <see cref="T:System.Boolean" />.</summary>
      <param name="attribute">O <see cref="T:System.Xml.Linq.XAttribute" /> a ser convertido para <see cref="T:System.Nullable`1" /> de <see cref="T:System.Boolean" />.</param>
      <returns>Um <see cref="T:System.Nullable`1" /> de <see cref="T:System.Boolean" /> que retém o conteúdo deste <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException">O atributo não contém um valor <see cref="T:System.Boolean" /> válido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTime}">
      <summary>Converte o valor deste <see cref="T:System.Xml.Linq.XAttribute" /> em um <see cref="T:System.Nullable`1" /> de <see cref="T:System.DateTime" />.</summary>
      <param name="attribute">O <see cref="T:System.Xml.Linq.XAttribute" /> a ser convertido para um <see cref="T:System.Nullable`1" /> de <see cref="T:System.DateTime" />.</param>
      <returns>Um <see cref="T:System.Nullable`1" /> de <see cref="T:System.DateTime" /> que retém o conteúdo deste <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException">O atributo não contém um valor <see cref="T:System.DateTime" /> válido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTimeOffset}">
      <summary>Converte o valor deste <see cref="T:System.Xml.Linq.XAttribute" /> em um <see cref="T:System.Nullable`1" /> de <see cref="T:System.DateTimeOffset" />.</summary>
      <param name="attribute">O <see cref="T:System.Xml.Linq.XAttribute" /> a ser convertido para um <see cref="T:System.Nullable`1" /> de <see cref="T:System.DateTimeOffset" />.</param>
      <returns>Um <see cref="T:System.Nullable`1" /> de <see cref="T:System.DateTimeOffset" /> que retém o conteúdo deste <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException">O atributo não contém um valor <see cref="T:System.DateTimeOffset" /> válido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Decimal}">
      <summary>Converte o valor deste <see cref="T:System.Xml.Linq.XAttribute" /> em um <see cref="T:System.Nullable`1" /> de <see cref="T:System.Decimal" />.</summary>
      <param name="attribute">O <see cref="T:System.Xml.Linq.XAttribute" /> a ser convertido para <see cref="T:System.Nullable`1" /> de <see cref="T:System.Decimal" />.</param>
      <returns>Um <see cref="T:System.Nullable`1" /> de <see cref="T:System.Decimal" /> que retém o conteúdo deste <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException">O atributo não contém um valor <see cref="T:System.Decimal" /> válido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Double}">
      <summary>Converte o valor deste <see cref="T:System.Xml.Linq.XAttribute" /> em um <see cref="T:System.Nullable`1" /> de <see cref="T:System.Double" />.</summary>
      <param name="attribute">O <see cref="T:System.Xml.Linq.XAttribute" /> a ser convertido para <see cref="T:System.Nullable`1" /> de <see cref="T:System.Double" />.</param>
      <returns>Um <see cref="T:System.Nullable`1" /> de <see cref="T:System.Double" /> que retém o conteúdo deste <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException">O atributo não contém um valor <see cref="T:System.Double" /> válido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Guid}">
      <summary>Converte o valor deste <see cref="T:System.Xml.Linq.XAttribute" /> em um <see cref="T:System.Nullable`1" /> de <see cref="T:System.Guid" />.</summary>
      <param name="attribute">O <see cref="T:System.Xml.Linq.XAttribute" /> a ser convertido para um <see cref="T:System.Nullable`1" /> de <see cref="T:System.Guid" />.</param>
      <returns>Um <see cref="T:System.Nullable`1" /> de <see cref="T:System.Guid" /> que retém o conteúdo deste <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException">O atributo não contém um valor <see cref="T:System.Guid" /> válido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int32}">
      <summary>Converte o valor deste <see cref="T:System.Xml.Linq.XAttribute" /> em um <see cref="T:System.Nullable`1" /> de <see cref="T:System.Int32" />.</summary>
      <param name="attribute">O <see cref="T:System.Xml.Linq.XAttribute" /> a ser convertido para um <see cref="T:System.Nullable`1" /> de <see cref="T:System.Int32" />.</param>
      <returns>Um <see cref="T:System.Nullable`1" /> de <see cref="T:System.Int32" /> que retém o conteúdo deste <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int64}">
      <summary>Converte o valor deste <see cref="T:System.Xml.Linq.XAttribute" /> em um <see cref="T:System.Nullable`1" /> de <see cref="T:System.Int64" />.</summary>
      <param name="attribute">O <see cref="T:System.Xml.Linq.XAttribute" /> a ser convertido para um <see cref="T:System.Nullable`1" /> de <see cref="T:System.Int64" />.</param>
      <returns>Um <see cref="T:System.Nullable`1" /> de <see cref="T:System.Int64" /> que retém o conteúdo deste <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException">O atributo não contém um valor <see cref="T:System.Int64" /> válido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Single}">
      <summary>Converte o valor deste <see cref="T:System.Xml.Linq.XAttribute" /> em um <see cref="T:System.Nullable`1" /> de <see cref="T:System.Single" />.</summary>
      <param name="attribute">O <see cref="T:System.Xml.Linq.XAttribute" /> a ser convertido para <see cref="T:System.Nullable`1" /> de <see cref="T:System.Single" />.</param>
      <returns>Um <see cref="T:System.Nullable`1" /> de <see cref="T:System.Single" /> que retém o conteúdo deste <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException">O atributo não contém um valor <see cref="T:System.Single" /> válido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.TimeSpan}">
      <summary>Converte o valor deste <see cref="T:System.Xml.Linq.XAttribute" /> em um <see cref="T:System.Nullable`1" /> de <see cref="T:System.TimeSpan" />.</summary>
      <param name="attribute">O <see cref="T:System.Xml.Linq.XAttribute" /> a ser convertido para um <see cref="T:System.Nullable`1" /> de <see cref="T:System.TimeSpan" />.</param>
      <returns>Um <see cref="T:System.Nullable`1" /> de <see cref="T:System.TimeSpan" /> que retém o conteúdo deste <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException">O atributo não contém um valor <see cref="T:System.TimeSpan" /> válido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt32}">
      <summary>Converte o valor deste <see cref="T:System.Xml.Linq.XAttribute" /> em um <see cref="T:System.Nullable`1" /> de <see cref="T:System.UInt32" />.</summary>
      <param name="attribute">O <see cref="T:System.Xml.Linq.XAttribute" /> a ser convertido para um <see cref="T:System.Nullable`1" /> de <see cref="T:System.UInt32" />.</param>
      <returns>Um <see cref="T:System.Nullable`1" /> de <see cref="T:System.UInt32" /> que retém o conteúdo deste <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException">O atributo não contém um valor <see cref="T:System.UInt32" /> válido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt64}">
      <summary>Converte o valor deste <see cref="T:System.Xml.Linq.XAttribute" /> em um <see cref="T:System.Nullable`1" /> de <see cref="T:System.UInt64" />.</summary>
      <param name="attribute">O <see cref="T:System.Xml.Linq.XAttribute" /> a ser convertido para um <see cref="T:System.Nullable`1" /> de <see cref="T:System.UInt64" />.</param>
      <returns>Um <see cref="T:System.Nullable`1" /> de <see cref="T:System.UInt64" /> que retém o conteúdo deste <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException">O atributo não contém um valor <see cref="T:System.UInt64" /> válido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Single">
      <summary>Converta o valor deste <see cref="T:System.Xml.Linq.XAttribute" /> em um <see cref="T:System.Single" />.</summary>
      <param name="attribute">O <see cref="T:System.Xml.Linq.XAttribute" /> a ser convertido em <see cref="T:System.Single" />.</param>
      <returns>Um <see cref="T:System.Single" /> que contém o conteúdo deste <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException">O atributo não contém um valor <see cref="T:System.Single" /> válido.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="attribute" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.String">
      <summary>Converta o valor deste <see cref="T:System.Xml.Linq.XAttribute" /> em um <see cref="T:System.String" />.</summary>
      <param name="attribute">O <see cref="T:System.Xml.Linq.XAttribute" /> a ser convertido em <see cref="T:System.String" />.</param>
      <returns>Um <see cref="T:System.String" /> que contém o conteúdo deste <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.TimeSpan">
      <summary>Converta o valor deste <see cref="T:System.Xml.Linq.XAttribute" /> em um <see cref="T:System.TimeSpan" />.</summary>
      <param name="attribute">O <see cref="T:System.Xml.Linq.XAttribute" /> a ser convertido em <see cref="T:System.TimeSpan" />.</param>
      <returns>Um <see cref="T:System.TimeSpan" /> que contém o conteúdo deste <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException">O atributo não contém um valor <see cref="T:System.TimeSpan" /> válido.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="attribute" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt32">
      <summary>Converta o valor deste <see cref="T:System.Xml.Linq.XAttribute" /> em um <see cref="T:System.UInt32" />.</summary>
      <param name="attribute">O <see cref="T:System.Xml.Linq.XAttribute" /> a ser convertido em <see cref="T:System.UInt32" />.</param>
      <returns>Um <see cref="T:System.UInt32" /> que contém o conteúdo deste <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException">O atributo não contém um valor <see cref="T:System.UInt32" /> válido.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="attribute" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt64">
      <summary>Converta o valor deste <see cref="T:System.Xml.Linq.XAttribute" /> em um <see cref="T:System.UInt64" />.</summary>
      <param name="attribute">O <see cref="T:System.Xml.Linq.XAttribute" /> a ser convertido em <see cref="T:System.UInt64" />.</param>
      <returns>Um <see cref="T:System.UInt64" /> que contém o conteúdo deste <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException">O atributo não contém um valor <see cref="T:System.UInt64" /> válido.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="attribute" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.PreviousAttribute">
      <summary>Obtém o atributo anterior do elemento pai.</summary>
      <returns>Um <see cref="T:System.Xml.Linq.XAttribute" /> que contém o atributo anterior do elemento pai.</returns>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.Remove">
      <summary>Remove este atributo de seu elemento pai.</summary>
      <exception cref="T:System.InvalidOperationException">O elemento pai é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.SetValue(System.Object)">
      <summary>Obtém o valor desse atributo.</summary>
      <param name="value">O valor a ser atribuído a esse atributo.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="value" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O <paramref name="value" /> é um <see cref="T:System.Xml.Linq.XObject" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.ToString">
      <summary>Converte o objeto <see cref="T:System.Xml.Linq.XAttribute" /> atual em uma representação de cadeia de caracteres.</summary>
      <returns>Um <see cref="T:System.String" /> que contém a representação de texto XML de um atributo e seu valor.</returns>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.Value">
      <summary>Obtém ou define o valor deste atributo.</summary>
      <returns>
        <see cref="T:System.String" /> que contém o valor deste atributo.</returns>
      <exception cref="T:System.ArgumentNullException">Ao definir, <paramref name="value" /> é <see langword="null" />.</exception>
    </member>
    <member name="T:System.Xml.Linq.XCData">
      <summary>Representa um nó de texto que contém CDATA.</summary>
    </member>
    <member name="M:System.Xml.Linq.XCData.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Linq.XCData" />.</summary>
      <param name="value">Uma cadeia de caracteres que contém o valor do nó <see cref="T:System.Xml.Linq.XCData" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XCData.#ctor(System.Xml.Linq.XCData)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Linq.XCData" />.</summary>
      <param name="other">O nó <see cref="T:System.Xml.Linq.XCData" /> em que a cópia ocorrerá.</param>
    </member>
    <member name="P:System.Xml.Linq.XCData.NodeType">
      <summary>Obtém o tipo de nó para este nó.</summary>
      <returns>O tipo de nó. Para objetos <see cref="T:System.Xml.Linq.XCData" />, esse valor é <see cref="F:System.Xml.XmlNodeType.CDATA" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XCData.WriteTo(System.Xml.XmlWriter)">
      <summary>Grava este objeto CDATA em um <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Um <see cref="T:System.Xml.XmlWriter" /> no qual esse método gravará.</param>
    </member>
    <member name="M:System.Xml.Linq.XCData.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <param name="writer" />
      <param name="cancellationToken" />
    </member>
    <member name="T:System.Xml.Linq.XComment">
      <summary>Representa um comentário XML.</summary>
    </member>
    <member name="M:System.Xml.Linq.XComment.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Linq.XComment" /> com o conteúdo de cadeia de caracteres especificada.</summary>
      <param name="value">Uma cadeia de caracteres que contém o conteúdo do novo objeto <see cref="T:System.Xml.Linq.XComment" />.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="value" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XComment.#ctor(System.Xml.Linq.XComment)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Linq.XComment" /> com base em um nó de comentário existente.</summary>
      <param name="other">O nó <see cref="T:System.Xml.Linq.XComment" /> em que a cópia ocorrerá.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="other" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.Linq.XComment.NodeType">
      <summary>Obtém o tipo de nó para este nó.</summary>
      <returns>O tipo de nó. Para objetos <see cref="T:System.Xml.Linq.XComment" />, esse valor é <see cref="F:System.Xml.XmlNodeType.Comment" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XComment.Value">
      <summary>Obtém ou define o valor de cadeia de caracteres deste comentário.</summary>
      <returns>Uma <see cref="T:System.String" /> que contém o valor da cadeia de caracteres deste comentário.</returns>
      <exception cref="T:System.ArgumentNullException">O <paramref name="value" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XComment.WriteTo(System.Xml.XmlWriter)">
      <summary>Gravar este comentário em um <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Um <see cref="T:System.Xml.XmlWriter" /> no qual esse método gravará.</param>
    </member>
    <member name="M:System.Xml.Linq.XComment.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <param name="writer" />
      <param name="cancellationToken" />
    </member>
    <member name="T:System.Xml.Linq.XContainer">
      <summary>Representa um nó que pode conter outros nós.</summary>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Add(System.Object)">
      <summary>Adiciona o conteúdo especificado como filhos deste <see cref="T:System.Xml.Linq.XContainer" />.</summary>
      <param name="content">Um objeto de conteúdo que contém o conteúdo simples ou uma coleção de objetos de conteúdo a ser adicionada.</param>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Add(System.Object[])">
      <summary>Adiciona o conteúdo especificado como filhos deste <see cref="T:System.Xml.Linq.XContainer" />.</summary>
      <param name="content">Uma lista de parâmetros de objetos de conteúdo.</param>
    </member>
    <member name="M:System.Xml.Linq.XContainer.AddFirst(System.Object)">
      <summary>Adiciona o conteúdo especificado como os primeiros filhos desse documento ou elemento.</summary>
      <param name="content">Um objeto de conteúdo que contém o conteúdo simples ou uma coleção de objetos de conteúdo a ser adicionada.</param>
    </member>
    <member name="M:System.Xml.Linq.XContainer.AddFirst(System.Object[])">
      <summary>Adiciona o conteúdo especificado como os primeiros filhos desse documento ou elemento.</summary>
      <param name="content">Uma lista de parâmetros de objetos de conteúdo.</param>
      <exception cref="T:System.InvalidOperationException">O pai é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XContainer.CreateWriter">
      <summary>Cria um <see cref="T:System.Xml.XmlWriter" /> que pode ser usado para adicionar nós ao <see cref="T:System.Xml.Linq.XContainer" />.</summary>
      <returns>Um <see cref="T:System.Xml.XmlWriter" /> que está pronto para receber a gravação de conteúdo.</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.DescendantNodes">
      <summary>Retorna uma coleção dos nós descendentes desse documento ou elemento, na ordem do documento.</summary>
      <returns>Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XNode" /> que contém os nós descendentes do <see cref="T:System.Xml.Linq.XContainer" />, na ordem do documento.</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Descendants">
      <summary>Retorna uma coleção dos elementos descendentes desse documento ou elemento, na ordem do documento.</summary>
      <returns>Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> do <see cref="T:System.Xml.Linq.XElement" /> que contém os elementos descendentes do <see cref="T:System.Xml.Linq.XContainer" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)">
      <summary>Retorna uma coleção filtrada dos elementos descendentes desse documento ou elemento, na ordem do documento. Somente os elementos que têm um <see cref="T:System.Xml.Linq.XName" /> correspondente são incluídos na coleção.</summary>
      <param name="name">O <see cref="T:System.Xml.Linq.XName" /> correspondente.</param>
      <returns>Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> que contém os elementos descendentes do <see cref="T:System.Xml.Linq.XContainer" /> que correspondem ao <see cref="T:System.Xml.Linq.XName" /> especificado.</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
      <summary>Obtém o primeiro elemento filho (na ordem de documentos) com o <see cref="T:System.Xml.Linq.XName" /> especificado.</summary>
      <param name="name">O <see cref="T:System.Xml.Linq.XName" /> correspondente.</param>
      <returns>Um <see cref="T:System.Xml.Linq.XElement" /> que corresponde ao <see cref="T:System.Xml.Linq.XName" /> ou <see langword="null" /> especificado.</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Elements">
      <summary>Retorna uma coleção dos elementos filho desse elemento ou documento, na ordem do documento.</summary>
      <returns>Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> que contém os elementos filho deste <see cref="T:System.Xml.Linq.XContainer" />, na ordem de documento.</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)">
      <summary>Retorna uma coleção filtrada dos elementos filho desse elemento ou documento, na ordem do documento. Somente os elementos que têm um <see cref="T:System.Xml.Linq.XName" /> correspondente são incluídos na coleção.</summary>
      <param name="name">O <see cref="T:System.Xml.Linq.XName" /> correspondente.</param>
      <returns>Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> do <see cref="T:System.Xml.Linq.XElement" /> que contém os filhos do <see cref="T:System.Xml.Linq.XContainer" />, que têm um <see cref="T:System.Xml.Linq.XName" /> correspondente, na ordem do documento.</returns>
    </member>
    <member name="P:System.Xml.Linq.XContainer.FirstNode">
      <summary>Obtém o primeiro nó filho desse nó.</summary>
      <returns>Um <see cref="T:System.Xml.Linq.XNode" /> que contém o primeiro nó filho do <see cref="T:System.Xml.Linq.XContainer" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XContainer.LastNode">
      <summary>Obtém o primeiro nó filho desse nó.</summary>
      <returns>Um <see cref="T:System.Xml.Linq.XNode" /> que contém o último nó filho do <see cref="T:System.Xml.Linq.XContainer" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Nodes">
      <summary>Retorna uma coleção de nós filhos deste elemento ou documento, na ordem do documento.</summary>
      <returns>Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XNode" /> que contém o conteúdo desse <see cref="T:System.Xml.Linq.XContainer" />, na ordem de documento.</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.RemoveNodes">
      <summary>Remove os nós filho desse documento ou elemento.</summary>
    </member>
    <member name="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)">
      <summary>Substitui os nós filho desse documento ou elemento pelo conteúdo especificado.</summary>
      <param name="content">Um objeto de conteúdo que contém o conteúdo simples ou uma coleção de objetos de conteúdo que substitui os nós filho.</param>
    </member>
    <member name="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])">
      <summary>Substitui os nós filho desse documento ou elemento pelo conteúdo especificado.</summary>
      <param name="content">Uma lista de parâmetros de objetos de conteúdo.</param>
    </member>
    <member name="T:System.Xml.Linq.XDeclaration">
      <summary>Representa uma declaração XML.</summary>
    </member>
    <member name="M:System.Xml.Linq.XDeclaration.#ctor(System.String,System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Linq.XDeclaration" /> com a versão, codificação e status autônomo especificados.</summary>
      <param name="version">A versão do XML, geralmente "1.0".</param>
      <param name="encoding">A codificação para o documento XML.</param>
      <param name="standalone">Uma cadeia de caracteres que contém "sim" ou "não" que especifica se o XML é autônomo ou requer que entidades externas sejam resolvidas.</param>
    </member>
    <member name="M:System.Xml.Linq.XDeclaration.#ctor(System.Xml.Linq.XDeclaration)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Linq.XDeclaration" /> de outro objeto <see cref="T:System.Xml.Linq.XDeclaration" />.</summary>
      <param name="other">O <see cref="T:System.Xml.Linq.XDeclaration" /> usado para inicializar este objeto <see cref="T:System.Xml.Linq.XDeclaration" />.</param>
    </member>
    <member name="P:System.Xml.Linq.XDeclaration.Encoding">
      <summary>Obtém ou define a codificação para este documento.</summary>
      <returns>Um <see cref="T:System.String" /> que contém o nome da página de código para este documento.</returns>
    </member>
    <member name="P:System.Xml.Linq.XDeclaration.Standalone">
      <summary>Obtém ou define a propriedade autônoma para esse documento.</summary>
      <returns>Um <see cref="T:System.String" /> que contém a propriedade autônoma para esse documento.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDeclaration.ToString">
      <summary>Fornece a declaração como uma cadeia de caracteres formatada.</summary>
      <returns>Um <see cref="T:System.String" /> que contém a cadeia de caracteres XML formatada.</returns>
    </member>
    <member name="P:System.Xml.Linq.XDeclaration.Version">
      <summary>Obtém ou define a propriedade de versão deste documento.</summary>
      <returns>Um <see cref="T:System.String" /> valor que contém a Propriedade Version deste documento.</returns>
    </member>
    <member name="T:System.Xml.Linq.XDocument">
      <summary>Representa um documento XML. Para saber mais sobre os componentes e o uso de um objeto <see cref="T:System.Xml.Linq.XDocument" />, consulte Visão geral da classe XDocument.</summary>
    </member>
    <member name="M:System.Xml.Linq.XDocument.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Linq.XDocument" />.</summary>
    </member>
    <member name="M:System.Xml.Linq.XDocument.#ctor(System.Object[])">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Linq.XDocument" /> com o conteúdo especificado.</summary>
      <param name="content">Uma lista de parâmetros de objetos de conteúdo para adicionar a este documento.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.#ctor(System.Xml.Linq.XDeclaration,System.Object[])">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Linq.XDocument" /> com o <see cref="T:System.Xml.Linq.XDeclaration" /> e conteúdo especificados.</summary>
      <param name="declaration">O <see cref="T:System.Xml.Linq.XDeclaration" /> para o documento.</param>
      <param name="content">O conteúdo do documento.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.#ctor(System.Xml.Linq.XDocument)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Linq.XDocument" /> de um objeto <see cref="T:System.Xml.Linq.XDocument" /> existente.</summary>
      <param name="other">O objeto <see cref="T:System.Xml.Linq.XDocument" /> que será copiado.</param>
    </member>
    <member name="P:System.Xml.Linq.XDocument.Declaration">
      <summary>Obtém ou define a declaração XML para este documento.</summary>
      <returns>Um <see cref="T:System.Xml.Linq.XDeclaration" /> que contém a declaração XML para este documento.</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocument.DocumentType">
      <summary>Obtém a DTD (Definição de Tipo de Documento) desse documento.</summary>
      <returns>Um <see cref="T:System.Xml.Linq.XDocumentType" /> que contém a DTD deste documento.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.IO.Stream)">
      <summary>Cria uma nova instância <see cref="T:System.Xml.Linq.XDocument" /> usando o fluxo especificado.</summary>
      <param name="stream">O fluxo que contém os dados XML.</param>
      <returns>Um objeto <see cref="T:System.Xml.Linq.XDocument" /> que lê os dados contidos em um fluxo.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
      <summary>Cria uma nova instância de <see cref="T:System.Xml.Linq.XDocument" /> usando o fluxo especificado, com a opção de preservar espaços em branco, definir o URI base e reter informações de linha.</summary>
      <param name="stream">O fluxo que contém os dados XML.</param>
      <param name="options">Um <see cref="T:System.Xml.Linq.LoadOptions" /> que especifica se informações de linha e URI base devem ser carregadas.</param>
      <returns>Um objeto <see cref="T:System.Xml.Linq.XDocument" /> que lê os dados contidos em um fluxo.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader)">
      <summary>Cria um novo <see cref="T:System.Xml.Linq.XDocument" /> com base em um <see cref="T:System.IO.TextReader" />.</summary>
      <param name="textReader">Um <see cref="T:System.IO.TextReader" /> que contém o conteúdo do <see cref="T:System.Xml.Linq.XDocument" />.</param>
      <returns>Um <see cref="T:System.Xml.Linq.XDocument" /> que contém o conteúdo do <see cref="T:System.IO.TextReader" /> especificado.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
      <summary>Cria um novo <see cref="T:System.Xml.Linq.XDocument" /> de um <see cref="T:System.IO.TextReader" />, opcionalmente preservando espaços em branco, configurando o URI base e retendo informações de linha.</summary>
      <param name="textReader">Um <see cref="T:System.IO.TextReader" /> que contém o conteúdo do <see cref="T:System.Xml.Linq.XDocument" />.</param>
      <param name="options">
        <see cref="T:System.Xml.Linq.LoadOptions" /> que especificam o comportamento de espaço em branco e se serão carregadas as informações de linha e o URI base.</param>
      <returns>Um <see cref="T:System.Xml.Linq.XDocument" /> que contém o XML que foi lido do <see cref="T:System.IO.TextReader" /> especificado.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.String)">
      <summary>Cria um novo <see cref="T:System.Xml.Linq.XDocument" /> com base em um arquivo.</summary>
      <param name="uri">Uma cadeia de caracteres do URI que faz referência ao arquivo a ser carregado em um novo <see cref="T:System.Xml.Linq.XDocument" />.</param>
      <returns>Um <see cref="T:System.Xml.Linq.XDocument" /> que contém o conteúdo do arquivo especificado.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)">
      <summary>Cria um novo <see cref="T:System.Xml.Linq.XDocument" /> com base em um arquivo, opcionalmente, preservando os espaços em branco, definindo o URI base e retendo as informações de linha.</summary>
      <param name="uri">Uma cadeia de caracteres do URI que faz referência ao arquivo a ser carregado em um novo <see cref="T:System.Xml.Linq.XDocument" />.</param>
      <param name="options">
        <see cref="T:System.Xml.Linq.LoadOptions" /> que especificam o comportamento de espaço em branco e se serão carregadas as informações de linha e o URI base.</param>
      <returns>Um <see cref="T:System.Xml.Linq.XDocument" /> que contém o conteúdo do arquivo especificado.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader)">
      <summary>Cria um novo <see cref="T:System.Xml.Linq.XDocument" /> com base em um <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">Um <see cref="T:System.Xml.XmlReader" /> que contém o conteúdo do <see cref="T:System.Xml.Linq.XDocument" />.</param>
      <returns>Um <see cref="T:System.Xml.Linq.XDocument" /> que contém o conteúdo do <see cref="T:System.Xml.XmlReader" /> especificado.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
      <summary>Carrega um <see cref="T:System.Xml.Linq.XDocument" /> de um <see cref="T:System.Xml.XmlReader" />, configurando opcionalmente o URI de base e retendo informações de linha.</summary>
      <param name="reader">Um <see cref="T:System.Xml.XmlReader" /> que será lido para o conteúdo do <see cref="T:System.Xml.Linq.XDocument" />.</param>
      <param name="options">Um <see cref="T:System.Xml.Linq.LoadOptions" /> que especifica se informações de linha e URI base devem ser carregadas.</param>
      <returns>Um <see cref="T:System.Xml.Linq.XDocument" /> que contém o XML que foi lido do <see cref="T:System.Xml.XmlReader" /> especificado.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.LoadAsync(System.IO.Stream,System.Xml.Linq.LoadOptions,System.Threading.CancellationToken)">
      <param name="stream" />
      <param name="options" />
      <param name="cancellationToken" />
    </member>
    <member name="M:System.Xml.Linq.XDocument.LoadAsync(System.IO.TextReader,System.Xml.Linq.LoadOptions,System.Threading.CancellationToken)">
      <param name="textReader" />
      <param name="options" />
      <param name="cancellationToken" />
    </member>
    <member name="M:System.Xml.Linq.XDocument.LoadAsync(System.Xml.XmlReader,System.Xml.Linq.LoadOptions,System.Threading.CancellationToken)">
      <param name="reader" />
      <param name="options" />
      <param name="cancellationToken" />
    </member>
    <member name="P:System.Xml.Linq.XDocument.NodeType">
      <summary>Obtém o tipo de nó para este nó.</summary>
      <returns>O tipo de nó. Para objetos <see cref="T:System.Xml.Linq.XDocument" />, esse valor é <see cref="F:System.Xml.XmlNodeType.Document" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Parse(System.String)">
      <summary>Cria um novo <see cref="T:System.Xml.Linq.XDocument" /> com base em uma cadeia de caracteres.</summary>
      <param name="text">Uma cadeia de caracteres que contém XML.</param>
      <returns>Um <see cref="T:System.Xml.Linq.XDocument" /> populado com base na cadeia de caracteres que contém o XML.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Parse(System.String,System.Xml.Linq.LoadOptions)">
      <summary>Cria um novo <see cref="T:System.Xml.Linq.XDocument" /> de uma cadeia de caracteres, com a opção de preservar espaços em branco, definir o URI base e reter as informações de linha.</summary>
      <param name="text">Uma cadeia de caracteres que contém XML.</param>
      <param name="options">
        <see cref="T:System.Xml.Linq.LoadOptions" /> que especificam o comportamento de espaço em branco e se serão carregadas as informações de linha e o URI base.</param>
      <returns>Um <see cref="T:System.Xml.Linq.XDocument" /> populado com base na cadeia de caracteres que contém o XML.</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocument.Root">
      <summary>Obtém o elemento raiz da Árvore XML desse documento.</summary>
      <returns>O <see cref="T:System.Xml.Linq.XElement" /> raiz da árvore XML.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.IO.Stream)">
      <summary>Gera este <see cref="T:System.Xml.Linq.XDocument" /> para o <see cref="T:System.IO.Stream" /> especificado.</summary>
      <param name="stream">O fluxo para o qual este <see cref="T:System.Xml.Linq.XDocument" /> será gerado.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
      <summary>Gera esse <see cref="T:System.Xml.Linq.XDocument" /> para o <see cref="T:System.IO.Stream" /> especificado, com a opção de especificar o comportamento de formatação.</summary>
      <param name="stream">O fluxo para o qual este <see cref="T:System.Xml.Linq.XDocument" /> será gerado.</param>
      <param name="options">Um <see cref="T:System.Xml.Linq.SaveOptions" /> que especifica o comportamento de formatação.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter)">
      <summary>Serialize este <see cref="T:System.Xml.Linq.XDocument" /> em um <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="textWriter">Um <see cref="T:System.IO.TextWriter" /> no qual o <see cref="T:System.Xml.Linq.XDocument" /> será gravado.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
      <summary>Serialize <see cref="T:System.Xml.Linq.XDocument" /> em <see cref="T:System.IO.TextWriter" />, desabilitando a formatação de forma opcional.</summary>
      <param name="textWriter">O <see cref="T:System.IO.TextWriter" /> para a saída do XML.</param>
      <param name="options">Um <see cref="T:System.Xml.Linq.SaveOptions" /> que especifica o comportamento de formatação.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.String)">
      <summary>Serializar este <see cref="T:System.Xml.Linq.XDocument" /> em um arquivo, substituindo um arquivo existente, se ele existir.</summary>
      <param name="fileName">Uma cadeia de caracteres que contém o nome do arquivo.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.String,System.Xml.Linq.SaveOptions)">
      <summary>Serialize este <see cref="T:System.Xml.Linq.XDocument" /> em um arquivo, desabilitando a formatação de forma opcional.</summary>
      <param name="fileName">Uma cadeia de caracteres que contém o nome do arquivo.</param>
      <param name="options">Um <see cref="T:System.Xml.Linq.SaveOptions" /> que especifica o comportamento de formatação.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.Xml.XmlWriter)">
      <summary>Serializar esse <see cref="T:System.Xml.Linq.XDocument" /> para um <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Um <see cref="T:System.Xml.XmlWriter" /> no qual o <see cref="T:System.Xml.Linq.XDocument" /> será gravado.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.SaveAsync(System.IO.Stream,System.Xml.Linq.SaveOptions,System.Threading.CancellationToken)">
      <param name="stream" />
      <param name="options" />
      <param name="cancellationToken" />
    </member>
    <member name="M:System.Xml.Linq.XDocument.SaveAsync(System.IO.TextWriter,System.Xml.Linq.SaveOptions,System.Threading.CancellationToken)">
      <param name="textWriter" />
      <param name="options" />
      <param name="cancellationToken" />
    </member>
    <member name="M:System.Xml.Linq.XDocument.SaveAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <param name="writer" />
      <param name="cancellationToken" />
    </member>
    <member name="M:System.Xml.Linq.XDocument.WriteTo(System.Xml.XmlWriter)">
      <summary>Gravar este documento em um <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Um <see cref="T:System.Xml.XmlWriter" /> no qual esse método gravará.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <param name="writer" />
      <param name="cancellationToken" />
    </member>
    <member name="T:System.Xml.Linq.XDocumentType">
      <summary>Representa um DTD (definição de tipo de documento) de XML.</summary>
    </member>
    <member name="M:System.Xml.Linq.XDocumentType.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Inicializa uma instância da classe <see cref="T:System.Xml.Linq.XDocumentType" />.</summary>
      <param name="name">Um <see cref="T:System.String" /> que contém o nome qualificado do DTD, que é o mesmo que o nome qualificado do elemento raiz do documento XML.</param>
      <param name="publicId">Um <see cref="T:System.String" /> que contém o identificador público de DTD público externo.</param>
      <param name="systemId">Um <see cref="T:System.String" /> que contém o identificador do sistema de um DTD privado externo.</param>
      <param name="internalSubset">Um <see cref="T:System.String" /> que contém o subconjunto interno para um DTD interno.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocumentType.#ctor(System.Xml.Linq.XDocumentType)">
      <summary>Inicializa uma instância da classe <see cref="T:System.Xml.Linq.XDocumentType" /> com base em outro objeto <see cref="T:System.Xml.Linq.XDocumentType" />.</summary>
      <param name="other">Um objeto <see cref="T:System.Xml.Linq.XDocumentType" /> do qual copiar.</param>
    </member>
    <member name="P:System.Xml.Linq.XDocumentType.InternalSubset">
      <summary>Obtém ou define o subconjunto interno para esta DTD (definição de tipo de documento).</summary>
      <returns>Um <see cref="T:System.String" /> que contém o subconjunto interno para esta definição de tipo de documento (DTD).</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocumentType.Name">
      <summary>Obtém ou define o nome para esta DTD (definição de tipo de documento).</summary>
      <returns>Um <see cref="T:System.String" /> que contém o nome para esta definição de tipo de documento (DTD).</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocumentType.NodeType">
      <summary>Obtém o tipo de nó para este nó.</summary>
      <returns>O tipo de nó. Para objetos <see cref="T:System.Xml.Linq.XDocumentType" />, esse valor é <see cref="F:System.Xml.XmlNodeType.DocumentType" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocumentType.PublicId">
      <summary>Obtém ou define o identificador público para esta DTD (definição de tipo de documento).</summary>
      <returns>Um <see cref="T:System.String" /> que contém o identificador público para esta definição de tipo de documento (DTD).</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocumentType.SystemId">
      <summary>Obtém ou define o identificador do sistema para essa DTD (definição de tipo de documento).</summary>
      <returns>Um <see cref="T:System.String" /> que contém o identificador do sistema para esta definição de tipo de documento (DTD).</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocumentType.WriteTo(System.Xml.XmlWriter)">
      <summary>Gravar esse <see cref="T:System.Xml.Linq.XDocumentType" /> em um <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Um <see cref="T:System.Xml.XmlWriter" /> no qual esse método gravará.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocumentType.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <param name="writer" />
      <param name="cancellationToken" />
    </member>
    <member name="T:System.Xml.Linq.XElement">
      <summary>Representa um elemento XML.  Consulte Visão geral da classe XElement e a seção Comentários nesta página para ver informações de uso e exemplos.</summary>
    </member>
    <member name="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XElement)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Linq.XElement" /> de outro objeto <see cref="T:System.Xml.Linq.XElement" />.</summary>
      <param name="other">Um objeto <see cref="T:System.Xml.Linq.XElement" /> do qual copiar.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Linq.XElement" /> com o nome especificado.</summary>
      <param name="name">Um <see cref="T:System.Xml.Linq.XName" /> que contém o nome do elemento.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Linq.XElement" /> com o nome e conteúdo especificados.</summary>
      <param name="name">Um <see cref="T:System.Xml.Linq.XName" /> que contém o nome do elemento.</param>
      <param name="content">O conteúdo do elemento.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Linq.XElement" /> com o nome e conteúdo especificados.</summary>
      <param name="name">Um <see cref="T:System.Xml.Linq.XName" /> que contém o nome do elemento.</param>
      <param name="content">O conteúdo inicial do elemento.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XStreamingElement)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Linq.XElement" /> de um objeto <see cref="T:System.Xml.Linq.XStreamingElement" />.</summary>
      <param name="other">Um <see cref="T:System.Xml.Linq.XStreamingElement" /> que contém consultas não avaliadas que serão iteradas para o conteúdo deste <see cref="T:System.Xml.Linq.XElement" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.AncestorsAndSelf">
      <summary>Retorna uma coleção de elementos que contêm esse elemento e os ancestrais desse elemento.</summary>
      <returns>Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> de elementos que contêm esse elemento e os ancestrais dele.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.AncestorsAndSelf(System.Xml.Linq.XName)">
      <summary>Retorna uma coleção filtrada de elementos que contêm esse elemento e os ancestrais dele. Somente os elementos que têm um <see cref="T:System.Xml.Linq.XName" /> correspondente são incluídos na coleção.</summary>
      <param name="name">O <see cref="T:System.Xml.Linq.XName" /> correspondente.</param>
      <returns>Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> que contêm esse elemento e os ancestrais dele. Somente os elementos que têm um <see cref="T:System.Xml.Linq.XName" /> correspondente são incluídos na coleção.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Attribute(System.Xml.Linq.XName)">
      <summary>Retorna o <see cref="T:System.Xml.Linq.XAttribute" /> desse <see cref="T:System.Xml.Linq.XElement" /> que tem o <see cref="T:System.Xml.Linq.XName" /> especificado.</summary>
      <param name="name">O <see cref="T:System.Xml.Linq.XName" /> do <see cref="T:System.Xml.Linq.XAttribute" /> a ser obtido.</param>
      <returns>Um <see cref="T:System.Xml.Linq.XAttribute" /> que tem o <see cref="T:System.Xml.Linq.XName" /> especificado, <see langword="null" /> se não houver nenhum atributo com o nome especificado.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Attributes">
      <summary>Retorna uma coleção de atributos desse elemento.</summary>
      <returns>Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> do <see cref="T:System.Xml.Linq.XAttribute" /> de atributos desse elemento.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Attributes(System.Xml.Linq.XName)">
      <summary>Retorna uma coleção filtrada de atributos desse elemento. Somente os elementos que têm um <see cref="T:System.Xml.Linq.XName" /> correspondente são incluídos na coleção.</summary>
      <param name="name">O <see cref="T:System.Xml.Linq.XName" /> correspondente.</param>
      <returns>Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> do <see cref="T:System.Xml.Linq.XAttribute" /> que contém os atributos deste elemento. Somente os elementos que têm um <see cref="T:System.Xml.Linq.XName" /> correspondente são incluídos na coleção.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.DescendantNodesAndSelf">
      <summary>Retorna uma coleção de nós que contêm esse elemento e todos os nós descendentes desse elemento, na ordem do documento.</summary>
      <returns>Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XNode" /> que contêm esse elemento e todos os nós descendentes desse elemento, na ordem do documento.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.DescendantsAndSelf">
      <summary>Retorna uma coleção de elementos que contêm esse elemento e todos os elementos descendentes desse elemento, na ordem do documento.</summary>
      <returns>Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> de elementos que contêm esse elemento e todos os elementos descendentes desse elemento, na ordem do documento.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.DescendantsAndSelf(System.Xml.Linq.XName)">
      <summary>Retorna uma coleção filtrada de elementos que contêm esse elemento e todos os elementos descendentes dele, na ordem do documento. Somente os elementos que têm um <see cref="T:System.Xml.Linq.XName" /> correspondente são incluídos na coleção.</summary>
      <param name="name">O <see cref="T:System.Xml.Linq.XName" /> correspondente.</param>
      <returns>Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> que contêm esse elemento e todos os elementos descendentes dele, na ordem do documento. Somente os elementos que têm um <see cref="T:System.Xml.Linq.XName" /> correspondente são incluídos na coleção.</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.EmptySequence">
      <summary>Obtém uma coleção vazia de elementos.</summary>
      <returns>Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> de<see cref="T:System.Xml.Linq.XElement" /> que contém uma coleção vazia.</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.FirstAttribute">
      <summary>Obtém o primeiro atributo desse elemento.</summary>
      <returns>Um <see cref="T:System.Xml.Linq.XAttribute" /> que contém o primeiro atributo desse elemento.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.GetDefaultNamespace">
      <summary>Obtém o <see cref="T:System.Xml.Linq.XNamespace" /> padrão deste <see cref="T:System.Xml.Linq.XElement" />.</summary>
      <returns>Um <see cref="T:System.Xml.Linq.XNamespace" /> que contém o namespace padrão deste <see cref="T:System.Xml.Linq.XElement" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.GetNamespaceOfPrefix(System.String)">
      <summary>Obtém o namespace associado a um prefixo específico para este <see cref="T:System.Xml.Linq.XElement" />.</summary>
      <param name="prefix">Uma cadeia de caracteres que contém o prefixo de namespace para pesquisar.</param>
      <returns>Um <see cref="T:System.Xml.Linq.XNamespace" /> para o namespace associado ao prefixo para esse <see cref="T:System.Xml.Linq.XElement" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.GetPrefixOfNamespace(System.Xml.Linq.XNamespace)">
      <summary>Obtém o prefixo associado a um namespace para este <see cref="T:System.Xml.Linq.XElement" />.</summary>
      <param name="ns">Um <see cref="T:System.Xml.Linq.XNamespace" /> para pesquisar.</param>
      <returns>Um <see cref="T:System.String" /> que contém o prefixo de namespace.</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.HasAttributes">
      <summary>Obtém um valor que indica se esse elemento tem pelo menos um atributo.</summary>
      <returns>
        <see langword="true" /> se esse elemento tiver pelo menos um atributo; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.HasElements">
      <summary>Obtém um valor que indica se esse elemento tem pelo menos um elemento filho.</summary>
      <returns>
        <see langword="true" /> se esse elemento tiver pelo menos um elemento filho; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.IsEmpty">
      <summary>Obtém um valor que indica se esse elemento não contém nenhum conteúdo.</summary>
      <returns>
        <see langword="true" /> se esse elemento não contiver nenhum conteúdo; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.LastAttribute">
      <summary>Obtém o último atributo desse elemento.</summary>
      <returns>Um <see cref="T:System.Xml.Linq.XAttribute" /> que contém o último atributo deste elemento.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.IO.Stream)">
      <summary>Cria uma nova instância <see cref="T:System.Xml.Linq.XElement" /> usando o fluxo especificado.</summary>
      <param name="stream">O fluxo que contém os dados XML.</param>
      <returns>Um objeto <see cref="T:System.Xml.Linq.XElement" /> usado para ler os dados contidos em um fluxo.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
      <summary>Cria uma nova instância de <see cref="T:System.Xml.Linq.XElement" /> usando o fluxo especificado, com a opção de preservar espaços em branco, definir o URI base e reter informações de linha.</summary>
      <param name="stream">O fluxo que contém os dados XML.</param>
      <param name="options">Um objeto <see cref="T:System.Xml.Linq.LoadOptions" /> que especifica se o URI base e as informações de linha devem ser carregados.</param>
      <returns>Um objeto <see cref="T:System.Xml.Linq.XElement" /> usado para ler os dados contidos no fluxo.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.IO.TextReader)">
      <summary>Carrega um <see cref="T:System.Xml.Linq.XElement" /> de um <see cref="T:System.IO.TextReader" />.</summary>
      <param name="textReader">Um <see cref="T:System.IO.TextReader" /> que será lido para o conteúdo de <see cref="T:System.Xml.Linq.XElement" />.</param>
      <returns>Um <see cref="T:System.Xml.Linq.XElement" /> que contém o XML que foi lido do <see cref="T:System.IO.TextReader" /> especificado.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
      <summary>Carrega um <see cref="T:System.Xml.Linq.XElement" /> de um <see cref="T:System.IO.TextReader" />, opcionalmente, preservando os espaços em branco e retendo as informações de linha.</summary>
      <param name="textReader">Um <see cref="T:System.IO.TextReader" /> que será lido para o conteúdo de <see cref="T:System.Xml.Linq.XElement" />.</param>
      <param name="options">
        <see cref="T:System.Xml.Linq.LoadOptions" /> que especificam o comportamento de espaço em branco e se serão carregadas as informações de linha e o URI base.</param>
      <returns>Um <see cref="T:System.Xml.Linq.XElement" /> que contém o XML que foi lido do <see cref="T:System.IO.TextReader" /> especificado.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.String)">
      <summary>Carrega um <see cref="T:System.Xml.Linq.XElement" /> de um arquivo.</summary>
      <param name="uri">Uma cadeia de caracteres do URI que faz referência ao arquivo a ser carregado em um novo <see cref="T:System.Xml.Linq.XElement" />.</param>
      <returns>Um <see cref="T:System.Xml.Linq.XElement" /> que contém o conteúdo do arquivo especificado.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
      <summary>Carrega um <see cref="T:System.Xml.Linq.XElement" /> de um arquivo, opcionalmente preservando espaço em branco, definindo o URI de base e retendo informações de linha.</summary>
      <param name="uri">Uma cadeia de caracteres do URI que faz referência ao arquivo a ser carregado em um <see cref="T:System.Xml.Linq.XElement" />.</param>
      <param name="options">
        <see cref="T:System.Xml.Linq.LoadOptions" /> que especificam o comportamento de espaço em branco e se serão carregadas as informações de linha e o URI base.</param>
      <returns>Um <see cref="T:System.Xml.Linq.XElement" /> que contém o conteúdo do arquivo especificado.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader)">
      <summary>Carrega um <see cref="T:System.Xml.Linq.XElement" /> de um <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">Um <see cref="T:System.Xml.XmlReader" /> que será lido para o conteúdo do <see cref="T:System.Xml.Linq.XElement" />.</param>
      <returns>Um <see cref="T:System.Xml.Linq.XElement" /> que contém o XML que foi lido do <see cref="T:System.Xml.XmlReader" /> especificado.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
      <summary>Carrega um <see cref="T:System.Xml.Linq.XElement" /> de um <see cref="T:System.Xml.XmlReader" />, opcionalmente preservando o espaço em branco, definindo o URI de base e retendo informações de linha.</summary>
      <param name="reader">Um <see cref="T:System.Xml.XmlReader" /> que será lido para o conteúdo do <see cref="T:System.Xml.Linq.XElement" />.</param>
      <param name="options">
        <see cref="T:System.Xml.Linq.LoadOptions" /> que especificam o comportamento de espaço em branco e se serão carregadas as informações de linha e o URI base.</param>
      <returns>Um <see cref="T:System.Xml.Linq.XElement" /> que contém o XML que foi lido do <see cref="T:System.Xml.XmlReader" /> especificado.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.LoadAsync(System.IO.Stream,System.Xml.Linq.LoadOptions,System.Threading.CancellationToken)">
      <param name="stream" />
      <param name="options" />
      <param name="cancellationToken" />
    </member>
    <member name="M:System.Xml.Linq.XElement.LoadAsync(System.IO.TextReader,System.Xml.Linq.LoadOptions,System.Threading.CancellationToken)">
      <param name="textReader" />
      <param name="options" />
      <param name="cancellationToken" />
    </member>
    <member name="M:System.Xml.Linq.XElement.LoadAsync(System.Xml.XmlReader,System.Xml.Linq.LoadOptions,System.Threading.CancellationToken)">
      <param name="reader" />
      <param name="options" />
      <param name="cancellationToken" />
    </member>
    <member name="P:System.Xml.Linq.XElement.Name">
      <summary>Obtém ou define o nome deste elemento.</summary>
      <returns>Um <see cref="T:System.Xml.Linq.XName" /> que contém o nome deste elemento.</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.NodeType">
      <summary>Obtém o tipo de nó para este nó.</summary>
      <returns>O tipo de nó. Para objetos <see cref="T:System.Xml.Linq.XElement" />, esse valor é <see cref="F:System.Xml.XmlNodeType.Element" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Boolean">
      <summary>Converta o valor deste <see cref="T:System.Xml.Linq.XElement" /> em um <see cref="T:System.Boolean" />.</summary>
      <param name="element">O <see cref="T:System.Xml.Linq.XElement" /> a ser convertido em <see cref="T:System.Boolean" />.</param>
      <returns>Um <see cref="T:System.Boolean" /> que contém o conteúdo deste <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException">O elemento não contém um valor <see cref="T:System.Boolean" /> válido.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="element" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTime">
      <summary>Converta o valor deste <see cref="T:System.Xml.Linq.XElement" /> em um <see cref="T:System.DateTime" />.</summary>
      <param name="element">O <see cref="T:System.Xml.Linq.XElement" /> a ser convertido em <see cref="T:System.DateTime" />.</param>
      <returns>Um <see cref="T:System.DateTime" /> que contém o conteúdo deste <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException">O elemento não contém um valor <see cref="T:System.DateTime" /> válido.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="element" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTimeOffset">
      <summary>Converta o valor deste <see cref="T:System.Xml.Linq.XAttribute" /> em um <see cref="T:System.DateTimeOffset" />.</summary>
      <param name="element">O <see cref="T:System.Xml.Linq.XElement" /> a ser convertido em <see cref="T:System.DateTimeOffset" />.</param>
      <returns>Um <see cref="T:System.DateTimeOffset" /> que contém o conteúdo deste <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException">O elemento não contém um valor <see cref="T:System.DateTimeOffset" /> válido.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="element" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Decimal">
      <summary>Converta o valor deste <see cref="T:System.Xml.Linq.XElement" /> em um <see cref="T:System.Decimal" />.</summary>
      <param name="element">O <see cref="T:System.Xml.Linq.XElement" /> a ser convertido em <see cref="T:System.Decimal" />.</param>
      <returns>Um <see cref="T:System.Decimal" /> que contém o conteúdo deste <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException">O elemento não contém um valor <see cref="T:System.Decimal" /> válido.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="element" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Double">
      <summary>Converta o valor deste <see cref="T:System.Xml.Linq.XElement" /> em um <see cref="T:System.Double" />.</summary>
      <param name="element">O <see cref="T:System.Xml.Linq.XElement" /> a ser convertido em <see cref="T:System.Double" />.</param>
      <returns>Um <see cref="T:System.Double" /> que contém o conteúdo deste <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException">O elemento não contém um valor <see cref="T:System.Double" /> válido.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="element" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Guid">
      <summary>Converta o valor deste <see cref="T:System.Xml.Linq.XElement" /> em um <see cref="T:System.Guid" />.</summary>
      <param name="element">O <see cref="T:System.Xml.Linq.XElement" /> a ser convertido em <see cref="T:System.Guid" />.</param>
      <returns>Um <see cref="T:System.Guid" /> que contém o conteúdo deste <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException">O elemento não contém um valor <see cref="T:System.Guid" /> válido.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="element" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int32">
      <summary>Converta o valor deste <see cref="T:System.Xml.Linq.XElement" /> em um <see cref="T:System.Int32" />.</summary>
      <param name="element">O <see cref="T:System.Xml.Linq.XElement" /> a ser convertido em <see cref="T:System.Int32" />.</param>
      <returns>Um <see cref="T:System.Int32" /> que contém o conteúdo deste <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException">O elemento não contém um valor <see cref="T:System.Int32" /> válido.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="element" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int64">
      <summary>Converta o valor deste <see cref="T:System.Xml.Linq.XElement" /> em um <see cref="T:System.Int64" />.</summary>
      <param name="element">O <see cref="T:System.Xml.Linq.XElement" /> a ser convertido em <see cref="T:System.Int64" />.</param>
      <returns>Um <see cref="T:System.Int64" /> que contém o conteúdo deste <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException">O elemento não contém um valor <see cref="T:System.Int64" /> válido.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="element" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Boolean}">
      <summary>Converte o valor deste <see cref="T:System.Xml.Linq.XElement" /> em um <see cref="T:System.Nullable`1" /> de <see cref="T:System.Boolean" />.</summary>
      <param name="element">O <see cref="T:System.Xml.Linq.XElement" /> a ser convertido para <see cref="T:System.Nullable`1" /> de <see cref="T:System.Boolean" />.</param>
      <returns>Um <see cref="T:System.Nullable`1" /> de <see cref="T:System.Boolean" /> que retém o conteúdo deste <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException">O elemento não é <see langword="null" /> e não contém um valor <see cref="T:System.Boolean" /> válido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTime}">
      <summary>Converte o valor deste <see cref="T:System.Xml.Linq.XElement" /> em um <see cref="T:System.Nullable`1" /> de <see cref="T:System.DateTime" />.</summary>
      <param name="element">O <see cref="T:System.Xml.Linq.XElement" /> a ser convertido para <see cref="T:System.Nullable`1" /> de <see cref="T:System.DateTime" />.</param>
      <returns>Um <see cref="T:System.Nullable`1" /> de <see cref="T:System.DateTime" /> que retém o conteúdo deste <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException">O elemento não é <see langword="null" /> e não contém um valor <see cref="T:System.DateTime" /> válido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTimeOffset}">
      <summary>Converte o valor deste <see cref="T:System.Xml.Linq.XElement" /> em um <see cref="T:System.Nullable`1" /> de <see cref="T:System.DateTimeOffset" />.</summary>
      <param name="element">O <see cref="T:System.Xml.Linq.XElement" /> a ser convertido para um <see cref="T:System.Nullable`1" /> de <see cref="T:System.DateTimeOffset" />.</param>
      <returns>Um <see cref="T:System.Nullable`1" /> de <see cref="T:System.DateTimeOffset" /> que retém o conteúdo deste <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException">O elemento não é <see langword="null" /> e não contém um valor <see cref="T:System.DateTimeOffset" /> válido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Decimal}">
      <summary>Converte o valor deste <see cref="T:System.Xml.Linq.XElement" /> em um <see cref="T:System.Nullable`1" /> de <see cref="T:System.Decimal" />.</summary>
      <param name="element">O <see cref="T:System.Xml.Linq.XElement" /> a ser convertido para <see cref="T:System.Nullable`1" /> de <see cref="T:System.Decimal" />.</param>
      <returns>Um <see cref="T:System.Nullable`1" /> de <see cref="T:System.Decimal" /> que retém o conteúdo deste <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException">O elemento não é <see langword="null" /> e não contém um valor <see cref="T:System.Decimal" /> válido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Double}">
      <summary>Converte o valor deste <see cref="T:System.Xml.Linq.XElement" /> em um <see cref="T:System.Nullable`1" /> de <see cref="T:System.Double" />.</summary>
      <param name="element">O <see cref="T:System.Xml.Linq.XElement" /> a ser convertido para <see cref="T:System.Nullable`1" /> de <see cref="T:System.Double" />.</param>
      <returns>Um <see cref="T:System.Nullable`1" /> de <see cref="T:System.Double" /> que retém o conteúdo deste <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException">O elemento não é <see langword="null" /> e não contém um valor <see cref="T:System.Double" /> válido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Guid}">
      <summary>Converte o valor deste <see cref="T:System.Xml.Linq.XElement" /> em um <see cref="T:System.Nullable`1" /> de <see cref="T:System.Guid" />.</summary>
      <param name="element">O <see cref="T:System.Xml.Linq.XElement" /> a ser convertido para <see cref="T:System.Nullable`1" /> de <see cref="T:System.Guid" />.</param>
      <returns>Um <see cref="T:System.Nullable`1" /> de <see cref="T:System.Guid" /> que retém o conteúdo deste <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException">O elemento não é <see langword="null" /> e não contém um valor <see cref="T:System.Guid" /> válido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int32}">
      <summary>Converte o valor deste <see cref="T:System.Xml.Linq.XElement" /> em um <see cref="T:System.Nullable`1" /> de <see cref="T:System.Int32" />.</summary>
      <param name="element">O <see cref="T:System.Xml.Linq.XElement" /> a ser convertido para <see cref="T:System.Nullable`1" /> de <see cref="T:System.Int32" />.</param>
      <returns>Um <see cref="T:System.Nullable`1" /> de <see cref="T:System.Int32" /> que retém o conteúdo deste <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException">O elemento não é <see langword="null" /> e não contém um valor <see cref="T:System.Int32" /> válido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int64}">
      <summary>Converte o valor deste <see cref="T:System.Xml.Linq.XElement" /> em um <see cref="T:System.Nullable`1" /> de <see cref="T:System.Int64" />.</summary>
      <param name="element">O <see cref="T:System.Xml.Linq.XElement" /> a ser convertido para <see cref="T:System.Nullable`1" /> de <see cref="T:System.Int64" />.</param>
      <returns>Um <see cref="T:System.Nullable`1" /> de <see cref="T:System.Int64" /> que retém o conteúdo deste <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException">O elemento não é <see langword="null" /> e não contém um valor <see cref="T:System.Int64" /> válido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Single}">
      <summary>Converte o valor deste <see cref="T:System.Xml.Linq.XElement" /> em um <see cref="T:System.Nullable`1" /> de <see cref="T:System.Single" />.</summary>
      <param name="element">O <see cref="T:System.Xml.Linq.XElement" /> a ser convertido para <see cref="T:System.Nullable`1" /> de <see cref="T:System.Single" />.</param>
      <returns>Um <see cref="T:System.Nullable`1" /> de <see cref="T:System.Single" /> que retém o conteúdo deste <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException">O elemento não é <see langword="null" /> e não contém um valor <see cref="T:System.Single" /> válido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.TimeSpan}">
      <summary>Converte o valor deste <see cref="T:System.Xml.Linq.XElement" /> em um <see cref="T:System.Nullable`1" /> de <see cref="T:System.TimeSpan" />.</summary>
      <param name="element">O <see cref="T:System.Xml.Linq.XElement" /> a ser convertido para <see cref="T:System.Nullable`1" /> de <see cref="T:System.TimeSpan" />.</param>
      <returns>Um <see cref="T:System.Nullable`1" /> de <see cref="T:System.TimeSpan" /> que retém o conteúdo deste <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException">O elemento não é <see langword="null" /> e não contém um valor <see cref="T:System.TimeSpan" /> válido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt32}">
      <summary>Converte o valor deste <see cref="T:System.Xml.Linq.XElement" /> em um <see cref="T:System.Nullable`1" /> de <see cref="T:System.UInt32" />.</summary>
      <param name="element">O <see cref="T:System.Xml.Linq.XElement" /> a ser convertido para <see cref="T:System.Nullable`1" /> de <see cref="T:System.UInt32" />.</param>
      <returns>Um <see cref="T:System.Nullable`1" /> de <see cref="T:System.UInt32" /> que retém o conteúdo deste <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException">O elemento não é <see langword="null" /> e não contém um valor <see cref="T:System.UInt32" /> válido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt64}">
      <summary>Converte o valor deste <see cref="T:System.Xml.Linq.XElement" /> em um <see cref="T:System.Nullable`1" /> de <see cref="T:System.UInt64" />.</summary>
      <param name="element">O <see cref="T:System.Xml.Linq.XElement" /> a ser convertido para <see cref="T:System.Nullable`1" /> de <see cref="T:System.UInt64" />.</param>
      <returns>Um <see cref="T:System.Nullable`1" /> de <see cref="T:System.UInt64" /> que retém o conteúdo deste <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException">O elemento não é <see langword="null" /> e não contém um valor <see cref="T:System.UInt64" /> válido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Single">
      <summary>Converta o valor deste <see cref="T:System.Xml.Linq.XElement" /> em um <see cref="T:System.Single" />.</summary>
      <param name="element">O <see cref="T:System.Xml.Linq.XElement" /> a ser convertido em <see cref="T:System.Single" />.</param>
      <returns>Um <see cref="T:System.Single" /> que contém o conteúdo deste <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException">O elemento não contém um valor <see cref="T:System.Single" /> válido.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="element" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.String">
      <summary>Converta o valor deste <see cref="T:System.Xml.Linq.XElement" /> em um <see cref="T:System.String" />.</summary>
      <param name="element">O <see cref="T:System.Xml.Linq.XElement" /> a ser convertido em <see cref="T:System.String" />.</param>
      <returns>Um <see cref="T:System.String" /> que contém o conteúdo deste <see cref="T:System.Xml.Linq.XElement" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.TimeSpan">
      <summary>Converta o valor deste <see cref="T:System.Xml.Linq.XElement" /> em um <see cref="T:System.TimeSpan" />.</summary>
      <param name="element">O <see cref="T:System.Xml.Linq.XElement" /> a ser convertido em <see cref="T:System.TimeSpan" />.</param>
      <returns>Um <see cref="T:System.TimeSpan" /> que contém o conteúdo deste <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException">O elemento não contém um valor <see cref="T:System.TimeSpan" /> válido.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="element" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt32">
      <summary>Converta o valor deste <see cref="T:System.Xml.Linq.XElement" /> em um <see cref="T:System.UInt32" />.</summary>
      <param name="element">O <see cref="T:System.Xml.Linq.XElement" /> a ser convertido em <see cref="T:System.UInt32" />.</param>
      <returns>Um <see cref="T:System.UInt32" /> que contém o conteúdo deste <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException">O elemento não contém um valor <see cref="T:System.UInt32" /> válido.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="element" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt64">
      <summary>Converta o valor deste <see cref="T:System.Xml.Linq.XElement" /> em um <see cref="T:System.UInt64" />.</summary>
      <param name="element">O <see cref="T:System.Xml.Linq.XElement" /> a ser convertido em <see cref="T:System.UInt64" />.</param>
      <returns>Um <see cref="T:System.UInt64" /> que contém o conteúdo deste <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException">O elemento não contém um valor <see cref="T:System.UInt64" /> válido.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="element" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.Parse(System.String)">
      <summary>Carrega um <see cref="T:System.Xml.Linq.XElement" /> de uma cadeia de caracteres que contém XML.</summary>
      <param name="text">Um <see cref="T:System.String" /> que contém o XML.</param>
      <returns>Um <see cref="T:System.Xml.Linq.XElement" /> populado com base na cadeia de caracteres que contém o XML.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
      <summary>Carrega um <see cref="T:System.Xml.Linq.XElement" /> de uma cadeia de caracteres que contém XML, opcionalmente preservando espaço em branco e retendo informações de linha.</summary>
      <param name="text">Um <see cref="T:System.String" /> que contém o XML.</param>
      <param name="options">
        <see cref="T:System.Xml.Linq.LoadOptions" /> que especificam o comportamento de espaço em branco e se serão carregadas as informações de linha e o URI base.</param>
      <returns>Um <see cref="T:System.Xml.Linq.XElement" /> populado com base na cadeia de caracteres que contém o XML.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.RemoveAll">
      <summary>Remove nós e atributos deste <see cref="T:System.Xml.Linq.XElement" />.</summary>
    </member>
    <member name="M:System.Xml.Linq.XElement.RemoveAttributes">
      <summary>Remove os atributos deste <see cref="T:System.Xml.Linq.XElement" />.</summary>
    </member>
    <member name="M:System.Xml.Linq.XElement.ReplaceAll(System.Object)">
      <summary>Substitui os nós filho e os atributos desse elemento com o conteúdo especificado.</summary>
      <param name="content">O conteúdo que substituirá os nós filho e os atributos desse elemento.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.ReplaceAll(System.Object[])">
      <summary>Substitui os nós filho e os atributos desse elemento com o conteúdo especificado.</summary>
      <param name="content">Uma lista de parâmetros de objetos de conteúdo.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object)">
      <summary>Substitui os atributos desse elemento pelo conteúdo especificado.</summary>
      <param name="content">O conteúdo que substituirá os atributos deste elemento.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object[])">
      <summary>Substitui os atributos desse elemento pelo conteúdo especificado.</summary>
      <param name="content">Uma lista de parâmetros de objetos de conteúdo.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.IO.Stream)">
      <summary>Gera este <see cref="T:System.Xml.Linq.XElement" /> para o <see cref="T:System.IO.Stream" /> especificado.</summary>
      <param name="stream">O fluxo para o qual este <see cref="T:System.Xml.Linq.XElement" /> será gerado.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
      <summary>Gera esse <see cref="T:System.Xml.Linq.XElement" /> para o <see cref="T:System.IO.Stream" /> especificado, com a opção de especificar o comportamento de formatação.</summary>
      <param name="stream">O fluxo para o qual este <see cref="T:System.Xml.Linq.XElement" /> será gerado.</param>
      <param name="options">Um objeto <see cref="T:System.Xml.Linq.SaveOptions" /> que especifica o comportamento de formatação.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter)">
      <summary>Serialize esse elemento para um <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="textWriter">Um <see cref="T:System.IO.TextWriter" /> no qual o <see cref="T:System.Xml.Linq.XElement" /> será gravado.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
      <summary>Serializa esse elemento para um <see cref="T:System.IO.TextWriter" />, opcionalmente desabilitando a formatação.</summary>
      <param name="textWriter">O <see cref="T:System.IO.TextWriter" /> para a saída do XML.</param>
      <param name="options">Um <see cref="T:System.Xml.Linq.SaveOptions" /> que especifica o comportamento de formatação.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.String)">
      <summary>Serialize esse elemento em um arquivo.</summary>
      <param name="fileName">Um <see cref="T:System.String" /> que contém o nome do arquivo.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.String,System.Xml.Linq.SaveOptions)">
      <summary>Serialize esse elemento em um arquivo, opcionalmente, desabilitando a formatação.</summary>
      <param name="fileName">Um <see cref="T:System.String" /> que contém o nome do arquivo.</param>
      <param name="options">Um <see cref="T:System.Xml.Linq.SaveOptions" /> que especifica o comportamento de formatação.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.Xml.XmlWriter)">
      <summary>Serialize esse elemento em um <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Um <see cref="T:System.Xml.XmlWriter" /> no qual o <see cref="T:System.Xml.Linq.XElement" /> será gravado.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.SaveAsync(System.IO.Stream,System.Xml.Linq.SaveOptions,System.Threading.CancellationToken)">
      <param name="stream" />
      <param name="options" />
      <param name="cancellationToken" />
    </member>
    <member name="M:System.Xml.Linq.XElement.SaveAsync(System.IO.TextWriter,System.Xml.Linq.SaveOptions,System.Threading.CancellationToken)">
      <param name="textWriter" />
      <param name="options" />
      <param name="cancellationToken" />
    </member>
    <member name="M:System.Xml.Linq.XElement.SaveAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <param name="writer" />
      <param name="cancellationToken" />
    </member>
    <member name="M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)">
      <summary>Define o valor de um atributo, adiciona um atributo ou remove um atributo.</summary>
      <param name="name">Um <see cref="T:System.Xml.Linq.XName" /> que contém o nome do atributo a ser alterado.</param>
      <param name="value">O valor a ser atribuído ao atributo. O atributo é removido se o valor for <see langword="null" />. Caso contrário, o valor será convertido em sua representação de cadeia de caracteres e atribuído à propriedade <see cref="P:System.Xml.Linq.XAttribute.Value" /> do atributo.</param>
      <exception cref="T:System.ArgumentException">O <paramref name="value" /> é uma instância de <see cref="T:System.Xml.Linq.XObject" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)">
      <summary>Define o valor de um elemento filho e adiciona ou remove um elemento filho.</summary>
      <param name="name">Um <see cref="T:System.Xml.Linq.XName" /> que contém o nome do elemento filho a ser alterado.</param>
      <param name="value">O valor a ser atribuído ao elemento filho. O elemento filho será removido se o valor for <see langword="null" />. Caso contrário, o valor será convertido em sua representação de cadeia de caracteres e atribuído à propriedade <see cref="P:System.Xml.Linq.XElement.Value" /> do elemento filho.</param>
      <exception cref="T:System.ArgumentException">O <paramref name="value" /> é uma instância de <see cref="T:System.Xml.Linq.XObject" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.SetValue(System.Object)">
      <summary>Define o valor desse elemento.</summary>
      <param name="value">O valor a ser atribuído a esse elemento. O valor é convertido em sua representação de cadeia de caracteres e é atribuído à propriedade <see cref="P:System.Xml.Linq.XElement.Value" />.</param>
      <exception cref="T:System.ArgumentNullException">O <paramref name="value" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O <paramref name="value" /> é um <see cref="T:System.Xml.Linq.XObject" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Obtém uma definição de esquema XML que descreve a representação XML deste objeto.</summary>
      <returns>Um <see cref="T:System.Xml.Schema.XmlSchema" /> que descreve a representação XML do objeto produzido pelo método <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> e consumido pelo método <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Gera um objeto de sua representação XML.</summary>
      <param name="reader">O <see cref="T:System.Xml.XmlReader" /> do qual o objeto é desserializado.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Converte um objeto em sua representação XML.</summary>
      <param name="writer">O <see cref="T:System.Xml.XmlWriter" /> para o qual este objeto é serializado.</param>
    </member>
    <member name="P:System.Xml.Linq.XElement.Value">
      <summary>Obtém ou define os conteúdos de texto concatenados desse elemento.</summary>
      <returns>Um <see cref="T:System.String" /> que contém todo o conteúdo de texto desse elemento. Se houver vários nós de texto, eles serão concatenados.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.WriteTo(System.Xml.XmlWriter)">
      <summary>Grava esse elemento em um <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Um <see cref="T:System.Xml.XmlWriter" /> no qual esse método gravará.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <param name="writer" />
      <param name="cancellationToken" />
    </member>
    <member name="T:System.Xml.Linq.XName">
      <summary>Representa um nome de um elemento ou atributo XML.</summary>
    </member>
    <member name="M:System.Xml.Linq.XName.Equals(System.Object)">
      <summary>Determina se o <see cref="T:System.Xml.Linq.XName" /> especificado é igual a este <see cref="T:System.Xml.Linq.XName" />.</summary>
      <param name="obj">O <see cref="T:System.Xml.Linq.XName" /> a ser comparado com o <see cref="T:System.Xml.Linq.XName" /> atual.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Xml.Linq.XName" /> especificado é igual o <see cref="T:System.Xml.Linq.XName" /> atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.Get(System.String)">
      <summary>Obtém um objeto <see cref="T:System.Xml.Linq.XName" /> de um nome expandido.</summary>
      <param name="expandedName">Um <see cref="T:System.String" /> que contém um nome XML expandido no formato <c>{namespace} localname</c>.</param>
      <returns>Um objeto <see cref="T:System.Xml.Linq.XName" /> construído com base no nome expandido.</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.Get(System.String,System.String)">
      <summary>Obtém um objeto <see cref="T:System.Xml.Linq.XName" /> de um namespace e um nome local.</summary>
      <param name="localName">Um nome local (não qualificado).</param>
      <param name="namespaceName">Um namespace de XML.</param>
      <returns>Um objeto <see cref="T:System.Xml.Linq.XName" /> criado no namespace e do nome local especificados.</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.GetHashCode">
      <summary>Obtém o código hash para esse <see cref="T:System.Xml.Linq.XName" />.</summary>
      <returns>Um <see cref="T:System.Int32" /> que contém o código hash para o <see cref="T:System.Xml.Linq.XName" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XName.LocalName">
      <summary>Obtém a parte local (não qualificada) do nome.</summary>
      <returns>Um <see cref="T:System.String" /> que contém a parte local (não qualificada) do nome.</returns>
    </member>
    <member name="P:System.Xml.Linq.XName.Namespace">
      <summary>Obtém a parte do namespace do nome totalmente qualificado.</summary>
      <returns>Um <see cref="T:System.Xml.Linq.XNamespace" /> que contém a parte do namespace do nome.</returns>
    </member>
    <member name="P:System.Xml.Linq.XName.NamespaceName">
      <summary>Retorna o URI do <see cref="T:System.Xml.Linq.XNamespace" /> para este <see cref="T:System.Xml.Linq.XName" />.</summary>
      <returns>O URI do <see cref="T:System.Xml.Linq.XNamespace" /> para isso <see cref="T:System.Xml.Linq.XName" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.op_Equality(System.Xml.Linq.XName,System.Xml.Linq.XName)">
      <summary>Retorna um valor que indica se duas instâncias de <see cref="T:System.Xml.Linq.XName" /> são iguais.</summary>
      <param name="left">O primeiro <see cref="T:System.Xml.Linq.XName" /> a ser comparado.</param>
      <param name="right">O segundo <see cref="T:System.Xml.Linq.XName" /> a ser comparado.</param>
      <returns>
        <see langword="true" /> se <paramref name="left" /> e <paramref name="right" /> forem iguais; caso contrário <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.op_Implicit(System.String)~System.Xml.Linq.XName">
      <summary>Converte uma cadeia de caracteres formatada como um nome XML expandido (isto é,<c>{namespace}localname</c>) em um objeto <see cref="T:System.Xml.Linq.XName" />.</summary>
      <param name="expandedName">Uma cadeia de caracteres que contém um nome XML expandido no formato <c>{namespace} localname</c>.</param>
      <returns>Um objeto <see cref="T:System.Xml.Linq.XName" /> construído com base no nome expandido.</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.op_Inequality(System.Xml.Linq.XName,System.Xml.Linq.XName)">
      <summary>Retorna um valor que indica se duas instâncias de <see cref="T:System.Xml.Linq.XName" /> não são iguais.</summary>
      <param name="left">O primeiro <see cref="T:System.Xml.Linq.XName" /> a ser comparado.</param>
      <param name="right">O segundo <see cref="T:System.Xml.Linq.XName" /> a ser comparado.</param>
      <returns>
        <see langword="true" /> se <paramref name="left" /> e <paramref name="right" /> não forem iguais; caso contrário <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.System#IEquatable{System#Xml#Linq#XName}#Equals(System.Xml.Linq.XName)">
      <summary>Indica se o <see cref="T:System.Xml.Linq.XName" /> atual é igual ao <see cref="T:System.Xml.Linq.XName" /> especificado.</summary>
      <param name="other">O <see cref="T:System.Xml.Linq.XName" /> a ser comparado com este <see cref="T:System.Xml.Linq.XName" />.</param>
      <returns>
        <see langword="true" /> se este <see cref="T:System.Xml.Linq.XName" /> é igual ao <see cref="T:System.Xml.Linq.XName" /> especificado, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Popula um <see cref="T:System.Runtime.Serialization.SerializationInfo" /> com os dados necessários para serializar o objeto de destino.</summary>
      <param name="info">O <see cref="T:System.Runtime.Serialization.SerializationInfo" /> a ser preenchido com dados.</param>
      <param name="context">O destino (consulte <see cref="T:System.Runtime.Serialization.StreamingContext" />) dessa serialização.</param>
    </member>
    <member name="M:System.Xml.Linq.XName.ToString">
      <summary>Retorna o nome expandido XML no formato <c>{namespace}localname</c>.</summary>
      <returns>Um <see cref="T:System.String" /> que contém o nome XML expandido no formato <c>{namespace} localname</c>.</returns>
    </member>
    <member name="T:System.Xml.Linq.XNamespace">
      <summary>Representa um namespace de XML. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.Equals(System.Object)">
      <summary>Determina se o <see cref="T:System.Xml.Linq.XNamespace" /> especificado é igual ao <see cref="T:System.Xml.Linq.XNamespace" /> atual.</summary>
      <param name="obj">O <see cref="T:System.Xml.Linq.XNamespace" /> a ser comparado com o <see cref="T:System.Xml.Linq.XNamespace" /> atual.</param>
      <returns>Um <see cref="T:System.Boolean" /> que indica se o <see cref="T:System.Xml.Linq.XNamespace" /> especificado é igual ao <see cref="T:System.Xml.Linq.XNamespace" /> atual.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.Get(System.String)">
      <summary>Obtém um <see cref="T:System.Xml.Linq.XNamespace" /> para o URI (Uniform Resource Identifier) especificado.</summary>
      <param name="namespaceName">Um <see cref="T:System.String" /> que contém um URI de namespace.</param>
      <returns>Um <see cref="T:System.Xml.Linq.XNamespace" /> criado com base no URI especificado.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.GetHashCode">
      <summary>Obtém o código hash para esse <see cref="T:System.Xml.Linq.XNamespace" />.</summary>
      <returns>Um <see cref="T:System.Int32" /> que contém o código hash para o <see cref="T:System.Xml.Linq.XNamespace" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.GetName(System.String)">
      <summary>Retorna um objeto <see cref="T:System.Xml.Linq.XName" /> criado com base neste <see cref="T:System.Xml.Linq.XNamespace" /> e o nome do local especificado.</summary>
      <param name="localName">Um <see cref="T:System.String" /> que contém um nome local.</param>
      <returns>Um <see cref="T:System.Xml.Linq.XName" /> criado com base neste <see cref="T:System.Xml.Linq.XNamespace" /> e o nome do local especificado.</returns>
    </member>
    <member name="P:System.Xml.Linq.XNamespace.NamespaceName">
      <summary>Obtém o URI (Uniform Resource Identifier) deste namespace.</summary>
      <returns>Um <see cref="T:System.String" /> que contém o URI do namespace.</returns>
    </member>
    <member name="P:System.Xml.Linq.XNamespace.None">
      <summary>Obtém o objeto <see cref="T:System.Xml.Linq.XNamespace" /> que não corresponde a nenhum namespace.</summary>
      <returns>O <see cref="T:System.Xml.Linq.XNamespace" /> que corresponde a nenhum namespace.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.op_Addition(System.Xml.Linq.XNamespace,System.String)">
      <summary>Combina um objeto <see cref="T:System.Xml.Linq.XNamespace" /> com um nome local para criar um <see cref="T:System.Xml.Linq.XName" />.</summary>
      <param name="ns">Um <see cref="T:System.Xml.Linq.XNamespace" /> que contém o namespace.</param>
      <param name="localName">Um <see cref="T:System.String" /> que contém o nome local.</param>
      <returns>O novo <see cref="T:System.Xml.Linq.XName" /> construído com base no namespace e no nome local.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.op_Equality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)">
      <summary>Retorna um valor que indica se duas instâncias de <see cref="T:System.Xml.Linq.XNamespace" /> são iguais.</summary>
      <param name="left">O primeiro <see cref="T:System.Xml.Linq.XNamespace" /> a ser comparado.</param>
      <param name="right">O segundo <see cref="T:System.Xml.Linq.XNamespace" /> a ser comparado.</param>
      <returns>Um <see cref="T:System.Boolean" /> que indica se <paramref name="left" /> e <paramref name="right" /> são iguais.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.op_Implicit(System.String)~System.Xml.Linq.XNamespace">
      <summary>Converte uma cadeia de caracteres que contém um URI (Uniform Resource Identifier) em um <see cref="T:System.Xml.Linq.XNamespace" />.</summary>
      <param name="namespaceName">Um <see cref="T:System.String" /> que contém o URI do namespace.</param>
      <returns>Um <see cref="T:System.Xml.Linq.XNamespace" /> construído com base na cadeia de caracteres do URI.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.op_Inequality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)">
      <summary>Retorna um valor que indica se duas instâncias de <see cref="T:System.Xml.Linq.XNamespace" /> não são iguais.</summary>
      <param name="left">O primeiro <see cref="T:System.Xml.Linq.XNamespace" /> a ser comparado.</param>
      <param name="right">O segundo <see cref="T:System.Xml.Linq.XNamespace" /> a ser comparado.</param>
      <returns>Um <see cref="T:System.Boolean" /> que indica se <paramref name="left" /> e <paramref name="right" /> não são iguais.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.ToString">
      <summary>Retorna o URI desse <see cref="T:System.Xml.Linq.XNamespace" />.</summary>
      <returns>O URI deste <see cref="T:System.Xml.Linq.XNamespace" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XNamespace.Xml">
      <summary>Obtém o objeto <see cref="T:System.Xml.Linq.XNamespace" /> correspondente ao URI do XML (<c></c>).</summary>
      <returns>O <see cref="T:System.Xml.Linq.XNamespace" /> que corresponde ao URI do XML (<c></c>).</returns>
    </member>
    <member name="P:System.Xml.Linq.XNamespace.Xmlns">
      <summary>Obtém o objeto <see cref="T:System.Xml.Linq.XNamespace" /> que corresponde ao URI do xmlns (<c></c>).</summary>
      <returns>O <see cref="T:System.Xml.Linq.XNamespace" /> que corresponde ao xmlns URI (<c></c>).</returns>
    </member>
    <member name="T:System.Xml.Linq.XNode">
      <summary>Representa o conceito abstrato de um nó (elemento, comentário, tipo de documento, instrução de processamento ou nó de texto) na árvore XML.</summary>
    </member>
    <member name="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object)">
      <summary>Adiciona o conteúdo especificado imediatamente após esse nó.</summary>
      <param name="content">Um objeto de conteúdo que contém o conteúdo simples ou uma coleção de objetos de conteúdo a ser adicionada após esse nó.</param>
      <exception cref="T:System.InvalidOperationException">O pai é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object[])">
      <summary>Adiciona o conteúdo especificado imediatamente após esse nó.</summary>
      <param name="content">Uma lista de parâmetros de objetos de conteúdo.</param>
      <exception cref="T:System.InvalidOperationException">O pai é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object)">
      <summary>Adiciona o conteúdo especificado imediatamente antes deste nó.</summary>
      <param name="content">Um objeto de conteúdo que contém conteúdo simples ou uma coleção de objetos de conteúdo a ser adicionada antes deste nó.</param>
      <exception cref="T:System.InvalidOperationException">O pai é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])">
      <summary>Adiciona o conteúdo especificado imediatamente antes deste nó.</summary>
      <param name="content">Uma lista de parâmetros de objetos de conteúdo.</param>
      <exception cref="T:System.InvalidOperationException">O pai é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.Ancestors">
      <summary>Retorna uma coleção dos elementos ancestrais deste nó.</summary>
      <returns>Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> dos elementos ancestrais deste nó.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)">
      <summary>Retorna uma coleção filtrada dos elementos ancestrais deste nó. Somente os elementos que têm um <see cref="T:System.Xml.Linq.XName" /> correspondente são incluídos na coleção.</summary>
      <param name="name">O <see cref="T:System.Xml.Linq.XName" /> correspondente.</param>
      <returns>Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> dos elementos ancestrais deste nó. Somente os elementos que têm um <see cref="T:System.Xml.Linq.XName" /> correspondente são incluídos na coleção.  
Os nós na coleção retornada estão na ordem de documento inversa.  
Este método utiliza execução adiada.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.CompareDocumentOrder(System.Xml.Linq.XNode,System.Xml.Linq.XNode)">
      <summary>Compara dois nós para determinar sua ordem de documento XML relativa.</summary>
      <param name="n1">Primeiro <see cref="T:System.Xml.Linq.XNode" /> a ser comparado.</param>
      <param name="n2">Segundo <see cref="T:System.Xml.Linq.XNode" /> de comparação.</param>
      <returns>Um <see langword="int" /> contendo 0 se os nós forem iguais; -1 se <paramref name="n1" /> vier antes de <paramref name="n2" />; 1 se <paramref name="n1" /> vier depois de <paramref name="n2" />.</returns>
      <exception cref="T:System.InvalidOperationException">Os dois nós não compartilham um ancestral comum.</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.CreateReader">
      <summary>Cria um <see cref="T:System.Xml.XmlReader" /> para este nó.</summary>
      <returns>Um <see cref="T:System.Xml.XmlReader" /> que pode ser usado para ler esse nó e seus descendentes.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)">
      <summary>Cria um <see cref="T:System.Xml.XmlReader" /> com as opções especificadas pelo parâmetro <paramref name="readerOptions" />.</summary>
      <param name="readerOptions">Um objeto <see cref="T:System.Xml.Linq.ReaderOptions" /> que especifica se os namespaces duplicados devem ser omitidos.</param>
      <returns>Um objeto <see cref="T:System.Xml.XmlReader" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.DeepEquals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)">
      <summary>Compara os valores de dois nós, incluindo os valores de todos os nós descendentes.</summary>
      <param name="n1">O primeiro <see cref="T:System.Xml.Linq.XNode" /> a ser comparado.</param>
      <param name="n2">O segundo <see cref="T:System.Xml.Linq.XNode" /> a ser comparado.</param>
      <returns>
        <see langword="true" /> se os nós forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XNode.DocumentOrderComparer">
      <summary>Obtém um comparador que pode comparar a posição relativa de dois nós.</summary>
      <returns>Um <see cref="T:System.Xml.Linq.XNodeDocumentOrderComparer" /> que pode comparar a posição relativa de dois nós.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.ElementsAfterSelf">
      <summary>Retorna uma coleção dos elementos irmão após esse nó, na ordem do documento.</summary>
      <returns>Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> dos elementos irmãos após esse nó, na ordem do documento.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)">
      <summary>Retorna uma coleção filtrada dos elementos irmãos após esse nó, na ordem do documento. Somente os elementos que têm um <see cref="T:System.Xml.Linq.XName" /> correspondente são incluídos na coleção.</summary>
      <param name="name">O <see cref="T:System.Xml.Linq.XName" /> correspondente.</param>
      <returns>Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> dos elementos irmãos após esse nó, na ordem do documento. Somente os elementos que têm um <see cref="T:System.Xml.Linq.XName" /> correspondente são incluídos na coleção.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.ElementsBeforeSelf">
      <summary>Retorna uma coleção dos elementos irmãos antes desse nó, na ordem do documento.</summary>
      <returns>Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> dos elementos irmãos antes desse nó, na ordem do documento.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)">
      <summary>Retorna uma coleção filtrada dos elementos irmãos antes desse nó, na ordem do documento. Somente os elementos que têm um <see cref="T:System.Xml.Linq.XName" /> correspondente são incluídos na coleção.</summary>
      <param name="name">O <see cref="T:System.Xml.Linq.XName" /> correspondente.</param>
      <returns>Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> dos elementos irmãos antes desse nó, na ordem do documento. Somente os elementos que têm um <see cref="T:System.Xml.Linq.XName" /> correspondente são incluídos na coleção.</returns>
    </member>
    <member name="P:System.Xml.Linq.XNode.EqualityComparer">
      <summary>Obtém um comparador que pode comparar a igualdade de valor de dois nós.</summary>
      <returns>Um <see cref="T:System.Xml.Linq.XNodeEqualityComparer" /> que pode comparar dois nós para igualdade de valor.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)">
      <summary>Determina se o nó atual aparece depois de um nó especificado com relação à ordem do documento.</summary>
      <param name="node">O <see cref="T:System.Xml.Linq.XNode" /> a ser comparado quanto à ordem do documento.</param>
      <returns>
        <see langword="true" /> se esse nó aparece após o nó especificado; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)">
      <summary>Determina se o nó atual aparece antes de um nó especificado com relação à ordem do documento.</summary>
      <param name="node">O <see cref="T:System.Xml.Linq.XNode" /> a ser comparado quanto à ordem do documento.</param>
      <returns>
        <see langword="true" /> se esse nó aparece antes do nó especificado; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XNode.NextNode">
      <summary>Obtém o próximo nó irmão desse nó.</summary>
      <returns>O <see cref="T:System.Xml.Linq.XNode" /> que contém o próximo nó irmão.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.NodesAfterSelf">
      <summary>Retorna uma coleção de nós irmãos após esse nó, na ordem do documento.</summary>
      <returns>Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XNode" /> de nós irmãos após esse nó, na ordem do documento.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.NodesBeforeSelf">
      <summary>Retorna uma coleção de nós irmãos antes deste nó, na ordem do documento.</summary>
      <returns>Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XNode" /> de nós irmãos antes desse nó, na ordem do documento.</returns>
    </member>
    <member name="P:System.Xml.Linq.XNode.PreviousNode">
      <summary>Obtém o nó irmão anterior desse nó.</summary>
      <returns>O <see cref="T:System.Xml.Linq.XNode" /> que contém o nó irmão anterior.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.ReadFrom(System.Xml.XmlReader)">
      <summary>Cria um <see cref="T:System.Xml.Linq.XNode" /> de um <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">Um <see cref="T:System.Xml.XmlReader" /> posicionado no nó para ler nesse <see cref="T:System.Xml.Linq.XNode" />.</param>
      <returns>Um <see cref="T:System.Xml.Linq.XNode" /> que contém o nó e seus nós descendentes que foram lidos do leitor. O tipo de tempo de execução do nó é determinado pelo tipo de nó (<see cref="P:System.Xml.Linq.XObject.NodeType" />) do primeiro nó encontrado no leitor.</returns>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Xml.XmlReader" /> não está posicionado em um tipo de nó reconhecido.</exception>
      <exception cref="T:System.Xml.XmlException">O <see cref="T:System.Xml.XmlReader" /> subjacente gera uma exceção.</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.ReadFromAsync(System.Xml.XmlReader,System.Threading.CancellationToken)">
      <param name="reader" />
      <param name="cancellationToken" />
    </member>
    <member name="M:System.Xml.Linq.XNode.Remove">
      <summary>Remove este nó de seu pai.</summary>
      <exception cref="T:System.InvalidOperationException">O pai é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.ReplaceWith(System.Object)">
      <summary>Substitui esse nó pelo conteúdo especificado.</summary>
      <param name="content">Conteúdo que substitui esse nó.</param>
    </member>
    <member name="M:System.Xml.Linq.XNode.ReplaceWith(System.Object[])">
      <summary>Substitui esse nó pelo conteúdo especificado.</summary>
      <param name="content">Uma lista de parâmetros do novo conteúdo.</param>
    </member>
    <member name="M:System.Xml.Linq.XNode.ToString">
      <summary>Retorna o XML recuado para este nó.</summary>
      <returns>Uma <see cref="T:System.String" /> que contém o XML recuado.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)">
      <summary>Retorna o XML para esse nó, com a opção de desabilitar a formatação.</summary>
      <param name="options">Um <see cref="T:System.Xml.Linq.SaveOptions" /> que especifica o comportamento de formatação.</param>
      <returns>Um <see cref="T:System.String" /> que contém o XML.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.WriteTo(System.Xml.XmlWriter)">
      <summary>Grava esse nó em um <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Um <see cref="T:System.Xml.XmlWriter" /> no qual esse método gravará.</param>
    </member>
    <member name="M:System.Xml.Linq.XNode.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <param name="writer" />
      <param name="cancellationToken" />
    </member>
    <member name="T:System.Xml.Linq.XNodeDocumentOrderComparer">
      <summary>Contém a funcionalidade para comparar a ordem do documento dos nós. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Xml.Linq.XNodeDocumentOrderComparer.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Linq.XNodeDocumentOrderComparer" />.</summary>
    </member>
    <member name="M:System.Xml.Linq.XNodeDocumentOrderComparer.Compare(System.Xml.Linq.XNode,System.Xml.Linq.XNode)">
      <summary>Compara dois nós para determinar sua ordem de documento relativa.</summary>
      <param name="x">O primeiro <see cref="T:System.Xml.Linq.XNode" /> a ser comparado.</param>
      <param name="y">O segundo <see cref="T:System.Xml.Linq.XNode" /> a ser comparado.</param>
      <returns>Um <see cref="T:System.Int32" /> que conterá 0 se os nós forem iguais;-1 se <paramref name="x" /> vier antes de <paramref name="y" />; 1 se <paramref name="x" /> vier depois de <paramref name="y" />.</returns>
      <exception cref="T:System.InvalidOperationException">Os dois nós não compartilham um ancestral comum.</exception>
    </member>
    <member name="M:System.Xml.Linq.XNodeDocumentOrderComparer.System#Collections#IComparer#Compare(System.Object,System.Object)">
      <summary>Compara dois nós para determinar sua ordem de documento relativa.</summary>
      <param name="x">O primeiro <see cref="T:System.Xml.Linq.XNode" /> a ser comparado.</param>
      <param name="y">O segundo <see cref="T:System.Xml.Linq.XNode" /> a ser comparado.</param>
      <returns>Um <see cref="T:System.Int32" /> que conterá 0 se os nós forem iguais;-1 se <paramref name="x" /> vier antes de <paramref name="y" />; 1 se <paramref name="x" /> vier depois de <paramref name="y" />.</returns>
      <exception cref="T:System.InvalidOperationException">Os dois nós não compartilham um ancestral comum.</exception>
      <exception cref="T:System.ArgumentException">Os dois nós não são derivados de <see cref="T:System.Xml.Linq.XNode" />.</exception>
    </member>
    <member name="T:System.Xml.Linq.XNodeEqualityComparer">
      <summary>Compara nós para determinar se eles são iguais. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Xml.Linq.XNodeEqualityComparer.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Linq.XNodeEqualityComparer" />.</summary>
    </member>
    <member name="M:System.Xml.Linq.XNodeEqualityComparer.Equals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)">
      <summary>Compara os valores de dois nós.</summary>
      <param name="x">O primeiro <see cref="T:System.Xml.Linq.XNode" /> a ser comparado.</param>
      <param name="y">O segundo <see cref="T:System.Xml.Linq.XNode" /> a ser comparado.</param>
      <returns>Um <see cref="T:System.Boolean" /> que indica se os nós são iguais.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNodeEqualityComparer.GetHashCode(System.Xml.Linq.XNode)">
      <summary>Retorna um código hash com base em um <see cref="T:System.Xml.Linq.XNode" />.</summary>
      <param name="obj">O <see cref="T:System.Xml.Linq.XNode" /> de hash.</param>
      <returns>Um <see cref="T:System.Int32" /> que contém um código hash baseado no valor do nó.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNodeEqualityComparer.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)">
      <summary>Compara os valores de dois nós.</summary>
      <param name="x">O primeiro <see cref="T:System.Xml.Linq.XNode" /> a ser comparado.</param>
      <param name="y">O segundo <see cref="T:System.Xml.Linq.XNode" /> a ser comparado.</param>
      <returns>
        <see langword="true" /> se os nós forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNodeEqualityComparer.System#Collections#IEqualityComparer#GetHashCode(System.Object)">
      <summary>Retorna um código hash com base no valor de um nó.</summary>
      <param name="obj">O nó de hash.</param>
      <returns>Um <see cref="T:System.Int32" /> que contém um código hash baseado no valor do nó.</returns>
    </member>
    <member name="T:System.Xml.Linq.XObject">
      <summary>Representa um nó ou um atributo em uma árvore XML.</summary>
    </member>
    <member name="M:System.Xml.Linq.XObject.AddAnnotation(System.Object)">
      <summary>Adiciona um objeto à lista de anotação deste <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <param name="annotation">Um objeto que contém a anotação a ser adicionada.</param>
    </member>
    <member name="M:System.Xml.Linq.XObject.Annotation(System.Type)">
      <summary>Obtém o primeiro objeto de anotação do tipo especificado desse <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <param name="type">O tipo da anotação a ser recuperada.</param>
      <returns>O <see cref="T:System.Object" /> que contém o primeiro objeto de anotação que corresponde ao tipo especificado ou <see langword="null" /> se nenhuma anotação for do tipo especificado.</returns>
    </member>
    <member name="M:System.Xml.Linq.XObject.Annotation``1">
      <summary>Obtém o primeiro objeto de anotação do tipo especificado desse <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <typeparam name="T">O tipo da anotação a ser recuperada.</typeparam>
      <returns>O primeiro objeto de anotação que corresponde ao tipo especificado ou <see langword="null" /> se nenhuma anotação for do tipo especificado.</returns>
    </member>
    <member name="M:System.Xml.Linq.XObject.Annotations(System.Type)">
      <summary>Obtém uma coleção de anotações do tipo especificado para este <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <param name="type">O tipo das anotações a serem recuperadas.</param>
      <returns>Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Object" /> que contém as anotações que correspondem ao tipo especificado para este <see cref="T:System.Xml.Linq.XObject" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XObject.Annotations``1">
      <summary>Obtém uma coleção de anotações do tipo especificado para este <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <typeparam name="T">O tipo das anotações a serem recuperadas.</typeparam>
      <returns>Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> que contém as anotações para este <see cref="T:System.Xml.Linq.XObject" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XObject.BaseUri">
      <summary>Obtém o URI de base para este <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <returns>Um <see cref="T:System.String" /> que contém o URI de base para este <see cref="T:System.Xml.Linq.XObject" />.</returns>
    </member>
    <member name="E:System.Xml.Linq.XObject.Changed">
      <summary>Gerado quando esse <see cref="T:System.Xml.Linq.XObject" /> ou qualquer um de seus descendentes foi alterado.</summary>
    </member>
    <member name="E:System.Xml.Linq.XObject.Changing">
      <summary>Acionado quando esse <see cref="T:System.Xml.Linq.XObject" /> ou um de seus descendentes está prestes a mudar.</summary>
    </member>
    <member name="P:System.Xml.Linq.XObject.Document">
      <summary>Obtém o <see cref="T:System.Xml.Linq.XDocument" /> para este <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <returns>O <see cref="T:System.Xml.Linq.XDocument" /> para <see cref="T:System.Xml.Linq.XObject" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XObject.NodeType">
      <summary>Obtém o tipo de nó para esse <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <returns>O tipo de nó para esse <see cref="T:System.Xml.Linq.XObject" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XObject.Parent">
      <summary>Obtém o pai <see cref="T:System.Xml.Linq.XElement" /> desse <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <returns>O pai <see cref="T:System.Xml.Linq.XElement" /> desse <see cref="T:System.Xml.Linq.XObject" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XObject.RemoveAnnotations(System.Type)">
      <summary>Remove as anotações do tipo especificado deste <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <param name="type">O tipo de anotações a serem removidas.</param>
    </member>
    <member name="M:System.Xml.Linq.XObject.RemoveAnnotations``1">
      <summary>Remove as anotações do tipo especificado deste <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <typeparam name="T">O tipo de anotações a serem removidas.</typeparam>
    </member>
    <member name="M:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo">
      <summary>Obtém um valor que indica se este <see cref="T:System.Xml.Linq.XObject" /> tem informações de linha ou não.</summary>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Xml.Linq.XObject" /> tiver informações de linha, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LineNumber">
      <summary>Obtém o número de linha que o <see cref="T:System.Xml.XmlReader" /> subjacente relatou para este <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <returns>Um <see cref="T:System.Int32" /> que contém o número de linha relatado <see cref="T:System.Xml.XmlReader" /> pelo para isso <see cref="T:System.Xml.Linq.XObject" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LinePosition">
      <summary>Obtém a posição de linha que o <see cref="T:System.Xml.XmlReader" /> subjacente relatou para este <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <returns>Um <see cref="T:System.Int32" /> que contém a posição da linha relatada <see cref="T:System.Xml.XmlReader" /> pelo <see cref="T:System.Xml.Linq.XObject" />para isso.</returns>
    </member>
    <member name="T:System.Xml.Linq.XObjectChange">
      <summary>Especifica o tipo de evento quando um evento é gerado para <see cref="T:System.Xml.Linq.XObject" />.</summary>
    </member>
    <member name="F:System.Xml.Linq.XObjectChange.Add">
      <summary>Um <see cref="T:System.Xml.Linq.XObject" /> foi ou será adicionado a um <see cref="T:System.Xml.Linq.XContainer" />.</summary>
    </member>
    <member name="F:System.Xml.Linq.XObjectChange.Name">
      <summary>Um <see cref="T:System.Xml.Linq.XObject" /> foi ou será renomeado.</summary>
    </member>
    <member name="F:System.Xml.Linq.XObjectChange.Remove">
      <summary>Um <see cref="T:System.Xml.Linq.XObject" /> foi ou será removido de um <see cref="T:System.Xml.Linq.XContainer" />.</summary>
    </member>
    <member name="F:System.Xml.Linq.XObjectChange.Value">
      <summary>O valor de um <see cref="T:System.Xml.Linq.XObject" /> foi ou será alterado. Além disso, uma alteração na serialização de um elemento vazio (seja de uma marca vazia para um par de marcas de início/fim ou vice-versa) gera esse evento.</summary>
    </member>
    <member name="T:System.Xml.Linq.XObjectChangeEventArgs">
      <summary>Fornece dados para os eventos de <see cref="E:System.Xml.Linq.XObject.Changing" /> e de <see cref="E:System.Xml.Linq.XObject.Changed" /> .</summary>
    </member>
    <member name="M:System.Xml.Linq.XObjectChangeEventArgs.#ctor(System.Xml.Linq.XObjectChange)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Linq.XObjectChangeEventArgs" />.</summary>
      <param name="objectChange">Um <see cref="T:System.Xml.Linq.XObjectChange" /> que contém os argumentos de evento para eventos LINQ to XML.</param>
    </member>
    <member name="F:System.Xml.Linq.XObjectChangeEventArgs.Add">
      <summary>Argumento do evento para um evento de alteração <see cref="F:System.Xml.Linq.XObjectChange.Add" />.</summary>
    </member>
    <member name="F:System.Xml.Linq.XObjectChangeEventArgs.Name">
      <summary>Argumento do evento para um evento de alteração <see cref="F:System.Xml.Linq.XObjectChange.Name" />.</summary>
    </member>
    <member name="P:System.Xml.Linq.XObjectChangeEventArgs.ObjectChange">
      <summary>Obtém o tipo de alteração.</summary>
      <returns>Um <see cref="T:System.Xml.Linq.XObjectChange" /> que contém o tipo de alteração.</returns>
    </member>
    <member name="F:System.Xml.Linq.XObjectChangeEventArgs.Remove">
      <summary>Argumento do evento para um evento de alteração <see cref="F:System.Xml.Linq.XObjectChange.Remove" />.</summary>
    </member>
    <member name="F:System.Xml.Linq.XObjectChangeEventArgs.Value">
      <summary>Argumento do evento para um evento de alteração <see cref="F:System.Xml.Linq.XObjectChange.Value" />.</summary>
    </member>
    <member name="T:System.Xml.Linq.XProcessingInstruction">
      <summary>Representa uma instrução de processamento XML.</summary>
    </member>
    <member name="M:System.Xml.Linq.XProcessingInstruction.#ctor(System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Linq.XProcessingInstruction" />.</summary>
      <param name="target">Um <see cref="T:System.String" /> que contém o aplicativo de destino para este <see cref="T:System.Xml.Linq.XProcessingInstruction" />.</param>
      <param name="data">Os dados de cadeia de caracteres para este <see cref="T:System.Xml.Linq.XProcessingInstruction" />.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="target" /> ou <paramref name="data" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O <paramref name="target" /> não segue as restrições de um nome XML.</exception>
    </member>
    <member name="M:System.Xml.Linq.XProcessingInstruction.#ctor(System.Xml.Linq.XProcessingInstruction)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Linq.XProcessingInstruction" />.</summary>
      <param name="other">O nó <see cref="T:System.Xml.Linq.XProcessingInstruction" /> em que a cópia ocorrerá.</param>
    </member>
    <member name="P:System.Xml.Linq.XProcessingInstruction.Data">
      <summary>Obtém ou define o valor de cadeia de caracteres da instrução de processamento.</summary>
      <returns>Uma <see cref="T:System.String" /> que contém o valor da cadeia de caracteres desta instrução de processamento.</returns>
      <exception cref="T:System.ArgumentNullException">A cadeia de caracteres <paramref name="value" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.Linq.XProcessingInstruction.NodeType">
      <summary>Obtém o tipo de nó para este nó.</summary>
      <returns>O tipo de nó. Para objetos <see cref="T:System.Xml.Linq.XProcessingInstruction" />, esse valor é <see cref="F:System.Xml.XmlNodeType.ProcessingInstruction" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XProcessingInstruction.Target">
      <summary>Obtém ou define uma cadeia de caracteres que contém o aplicativo de destino para essa instrução de processamento.</summary>
      <returns>Um <see cref="T:System.String" /> que contém o aplicativo de destino para esta instrução de processamento.</returns>
      <exception cref="T:System.ArgumentNullException">A cadeia de caracteres <paramref name="value" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O <paramref name="target" /> não segue as restrições de um nome XML.</exception>
    </member>
    <member name="M:System.Xml.Linq.XProcessingInstruction.WriteTo(System.Xml.XmlWriter)">
      <summary>Grava essa instrução de processamento em um <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">O <see cref="T:System.Xml.XmlWriter" /> no qual essa instrução de processamento será gravada.</param>
    </member>
    <member name="M:System.Xml.Linq.XProcessingInstruction.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <param name="writer" />
      <param name="cancellationToken" />
    </member>
    <member name="T:System.Xml.Linq.XStreamingElement">
      <summary>Representa os elementos em uma árvore XML que dá suporte à saída de transmissão adiada.</summary>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.#ctor(System.Xml.Linq.XName)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Linq.XElement" /> do <see cref="T:System.Xml.Linq.XName" /> especificado.</summary>
      <param name="name">Um <see cref="T:System.Xml.Linq.XName" /> que contém o nome do elemento.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.#ctor(System.Xml.Linq.XName,System.Object)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Linq.XStreamingElement" /> com o nome e conteúdo especificados.</summary>
      <param name="name">Um <see cref="T:System.Xml.Linq.XName" /> que contém o nome do elemento.</param>
      <param name="content">O conteúdo do elemento.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.#ctor(System.Xml.Linq.XName,System.Object[])">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Linq.XStreamingElement" /> com o nome e conteúdo especificados.</summary>
      <param name="name">Um <see cref="T:System.Xml.Linq.XName" /> que contém o nome do elemento.</param>
      <param name="content">O conteúdo do elemento.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Add(System.Object)">
      <summary>Adiciona o conteúdo especificado como filhos deste <see cref="T:System.Xml.Linq.XStreamingElement" />.</summary>
      <param name="content">Conteúdo a ser adicionado ao elemento de streaming.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Add(System.Object[])">
      <summary>Adiciona o conteúdo especificado como filhos deste <see cref="T:System.Xml.Linq.XStreamingElement" />.</summary>
      <param name="content">Conteúdo a ser adicionado ao elemento de streaming.</param>
    </member>
    <member name="P:System.Xml.Linq.XStreamingElement.Name">
      <summary>Obtém ou define o nome deste elemento de streaming.</summary>
      <returns>Um <see cref="T:System.Xml.Linq.XName" /> que contém o nome deste elemento de streaming.</returns>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.IO.Stream)">
      <summary>Gera este <see cref="T:System.Xml.Linq.XStreamingElement" /> para o <see cref="T:System.IO.Stream" /> especificado.</summary>
      <param name="stream">O fluxo para o qual este <see cref="T:System.Xml.Linq.XDocument" /> será gerado.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
      <summary>Gera esse <see cref="T:System.Xml.Linq.XStreamingElement" /> para o <see cref="T:System.IO.Stream" /> especificado, com a opção de especificar o comportamento de formatação.</summary>
      <param name="stream">O fluxo para o qual este <see cref="T:System.Xml.Linq.XDocument" /> será gerado.</param>
      <param name="options">Um objeto <see cref="T:System.Xml.Linq.SaveOptions" /> que especifica o comportamento de formatação.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.IO.TextWriter)">
      <summary>Serialize este elemento de streaming para um <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="textWriter">Um <see cref="T:System.IO.TextWriter" /> no qual o <see cref="T:System.Xml.Linq.XStreamingElement" /> será gravado.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
      <summary>Serializar este elemento de streaming para um <see cref="T:System.IO.TextWriter" />, se desejar desabilitar a formatação.</summary>
      <param name="textWriter">O <see cref="T:System.IO.TextWriter" /> para a saída do XML.</param>
      <param name="options">Um <see cref="T:System.Xml.Linq.SaveOptions" /> que especifica o comportamento de formatação.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.String)">
      <summary>Serialize este elemento de streaming para um arquivo.</summary>
      <param name="fileName">Um <see cref="T:System.String" /> que contém o nome do arquivo.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.String,System.Xml.Linq.SaveOptions)">
      <summary>Serialize este elemento de streaming em um arquivo, se desejar desabilitar a formatação.</summary>
      <param name="fileName">Um <see cref="T:System.String" /> que contém o nome do arquivo.</param>
      <param name="options">Um objeto <see cref="T:System.Xml.Linq.SaveOptions" /> que especifica o comportamento de formatação.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.Xml.XmlWriter)">
      <summary>Serialize este elemento de streaming para um <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Um <see cref="T:System.Xml.XmlWriter" /> no qual o <see cref="T:System.Xml.Linq.XElement" /> será gravado.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.ToString">
      <summary>Retorna o XML formatado (recuado) para este elemento de streaming.</summary>
      <returns>Uma <see cref="T:System.String" /> que contém o XML recuado.</returns>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.ToString(System.Xml.Linq.SaveOptions)">
      <summary>Retorna o XML para este elemento de streaming, se desejar desabilitar a formatação.</summary>
      <param name="options">Um <see cref="T:System.Xml.Linq.SaveOptions" /> que especifica o comportamento de formatação.</param>
      <returns>Um <see cref="T:System.String" /> que contém o XML.</returns>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.WriteTo(System.Xml.XmlWriter)">
      <summary>Grava este elemento de streaming em um <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Um <see cref="T:System.Xml.XmlWriter" /> no qual esse método gravará.</param>
    </member>
    <member name="T:System.Xml.Linq.XText">
      <summary>Representa um nó de texto.</summary>
    </member>
    <member name="M:System.Xml.Linq.XText.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Linq.XText" />.</summary>
      <param name="value">O <see cref="T:System.String" /> que contém o valor do nó <see cref="T:System.Xml.Linq.XText" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XText.#ctor(System.Xml.Linq.XText)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Linq.XText" /> de outro objeto <see cref="T:System.Xml.Linq.XText" />.</summary>
      <param name="other">O nó <see cref="T:System.Xml.Linq.XText" /> em que a cópia ocorrerá.</param>
    </member>
    <member name="P:System.Xml.Linq.XText.NodeType">
      <summary>Obtém o tipo de nó para este nó.</summary>
      <returns>O tipo de nó. Para objetos <see cref="T:System.Xml.Linq.XText" />, esse valor é <see cref="F:System.Xml.XmlNodeType.Text" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XText.Value">
      <summary>Obtém ou define o valor deste nó.</summary>
      <returns>Uma <see cref="T:System.String" /> que contém o valor deste nó.</returns>
    </member>
    <member name="M:System.Xml.Linq.XText.WriteTo(System.Xml.XmlWriter)">
      <summary>Grava esse nó em um <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Um <see cref="T:System.Xml.XmlWriter" /> no qual esse método gravará.</param>
    </member>
    <member name="M:System.Xml.Linq.XText.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <param name="writer" />
      <param name="cancellationToken" />
    </member>
    <member name="T:System.Xml.Schema.Extensions">
      <summary>Essa classe contém os métodos de extensão LINQ to XML para validação de XSD.</summary>
    </member>
    <member name="M:System.Xml.Schema.Extensions.GetSchemaInfo(System.Xml.Linq.XAttribute)">
      <summary>Obtém o PSVI (infoset de validação pós-esquema) de um atributo validado.</summary>
      <param name="source">Um <see cref="T:System.Xml.Linq.XAttribute" /> que foi validado anteriormente.</param>
      <returns>Um <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> que contém o infoset de validação pós-esquema para um <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.Extensions.GetSchemaInfo(System.Xml.Linq.XElement)">
      <summary>Obtém o PSVI (post-schema-validation infoset) de um elemento validado.</summary>
      <param name="source">Um <see cref="T:System.Xml.Linq.XElement" /> que foi validado anteriormente.</param>
      <returns>Uma <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> que contém o PSVI (post-schema-validation infoset) para um <see cref="T:System.Xml.Linq.XElement" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
      <summary>Esse método valida que um <see cref="T:System.Xml.Linq.XAttribute" /> está em conformidade com um <see cref="T:System.Xml.Schema.XmlSchemaObject" /> e um <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificados.</summary>
      <param name="source">O <see cref="T:System.Xml.Linq.XAttribute" /> a ser validado.</param>
      <param name="partialValidationType">Um <see cref="T:System.Xml.Schema.XmlSchemaObject" /> que especifica a subárvore a ser validada.</param>
      <param name="schemas">Um <see cref="T:System.Xml.Schema.XmlSchemaSet" /> em relação ao qual validar.</param>
      <param name="validationEventHandler">Um <see cref="T:System.Xml.Schema.ValidationEventHandler" /> para um evento que ocorre quando o leitor encontra erros de validação. Se <see langword="null" />, gera uma exceção nos erros de validação.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Gerado para erros de validação de XSD (linguagem de definição de esquema XML).</exception>
    </member>
    <member name="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
      <summary>Valida se um <see cref="T:System.Xml.Linq.XAttribute" /> está em conformidade com um <see cref="T:System.Xml.Schema.XmlSchemaObject" /> e <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificados, opcionalmente, populando a árvore XML com o PSVI (infoset de validação pós-esquema).</summary>
      <param name="source">O <see cref="T:System.Xml.Linq.XAttribute" /> a ser validado.</param>
      <param name="partialValidationType">Um <see cref="T:System.Xml.Schema.XmlSchemaObject" /> que especifica a subárvore a ser validada.</param>
      <param name="schemas">Um <see cref="T:System.Xml.Schema.XmlSchemaSet" /> em relação ao qual validar.</param>
      <param name="validationEventHandler">Um <see cref="T:System.Xml.Schema.ValidationEventHandler" /> para um evento que ocorre quando o leitor encontra erros de validação. Se <see langword="null" />, gera uma exceção nos erros de validação.</param>
      <param name="addSchemaInfo">Um <see cref="T:System.Boolean" /> indicando se deve popular o PSVI (post-schema-validation infoset).</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Gerado para erros de validação de XSD (linguagem de definição de esquema XML).</exception>
    </member>
    <member name="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
      <summary>Esse método valida se um <see cref="T:System.Xml.Linq.XDocument" /> está em conformidade com um XSD em um <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="source">O <see cref="T:System.Xml.Linq.XDocument" /> a ser validado.</param>
      <param name="schemas">Um <see cref="T:System.Xml.Schema.XmlSchemaSet" /> em relação ao qual validar.</param>
      <param name="validationEventHandler">Um <see cref="T:System.Xml.Schema.ValidationEventHandler" /> para um evento que ocorre quando o leitor encontra erros de validação. Se <see langword="null" />, gera uma exceção nos erros de validação.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Gerado para erros de validação de XSD (linguagem de definição de esquema XML).</exception>
    </member>
    <member name="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
      <summary>Valida que um <see cref="T:System.Xml.Linq.XDocument" /> está em conformidade com um XSD em um <see cref="T:System.Xml.Schema.XmlSchemaSet" />, opcionalmente, preenchendo a árvore XML com o PSVI (post-schema-validation infoset).</summary>
      <param name="source">O <see cref="T:System.Xml.Linq.XDocument" /> a ser validado.</param>
      <param name="schemas">Um <see cref="T:System.Xml.Schema.XmlSchemaSet" /> em relação ao qual validar.</param>
      <param name="validationEventHandler">Um <see cref="T:System.Xml.Schema.ValidationEventHandler" /> para um evento que ocorre quando o leitor encontra erros de validação. Se <see langword="null" />, gera uma exceção nos erros de validação.</param>
      <param name="addSchemaInfo">Um <see cref="T:System.Boolean" /> indicando se deve popular o PSVI (post-schema-validation infoset).</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Gerado para erros de validação de XSD (linguagem de definição de esquema XML).</exception>
    </member>
    <member name="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
      <summary>Esse método valida que uma subárvore <see cref="T:System.Xml.Linq.XElement" /> está em conformidade com um <see cref="T:System.Xml.Schema.XmlSchemaObject" /> e um <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificados.</summary>
      <param name="source">O <see cref="T:System.Xml.Linq.XElement" /> a ser validado.</param>
      <param name="partialValidationType">Um <see cref="T:System.Xml.Schema.XmlSchemaObject" /> que especifica a subárvore a ser validada.</param>
      <param name="schemas">Um <see cref="T:System.Xml.Schema.XmlSchemaSet" /> em relação ao qual validar.</param>
      <param name="validationEventHandler">Um <see cref="T:System.Xml.Schema.ValidationEventHandler" /> para um evento que ocorre quando o leitor encontra erros de validação. Se <see langword="null" />, gera uma exceção nos erros de validação.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Gerado para erros de validação de XSD (linguagem de definição de esquema XML).</exception>
    </member>
    <member name="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
      <summary>Valida se uma subárvore <see cref="T:System.Xml.Linq.XElement" /> está em conformidade com um <see cref="T:System.Xml.Schema.XmlSchemaObject" /> e <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificados, opcionalmente, populando a árvore XML com o PSVI (infoset de validação pós-esquema).</summary>
      <param name="source">O <see cref="T:System.Xml.Linq.XElement" /> a ser validado.</param>
      <param name="partialValidationType">Um <see cref="T:System.Xml.Schema.XmlSchemaObject" /> que especifica a subárvore a ser validada.</param>
      <param name="schemas">Um <see cref="T:System.Xml.Schema.XmlSchemaSet" /> em relação ao qual validar.</param>
      <param name="validationEventHandler">Um <see cref="T:System.Xml.Schema.ValidationEventHandler" /> para um evento que ocorre quando o leitor encontra erros de validação. Se <see langword="null" />, gera uma exceção nos erros de validação.</param>
      <param name="addSchemaInfo">Um <see cref="T:System.Boolean" /> indicando se deve popular o PSVI (post-schema-validation infoset).</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Gerado para erros de validação de XSD (linguagem de definição de esquema XML).</exception>
    </member>
  </members>
</doc>