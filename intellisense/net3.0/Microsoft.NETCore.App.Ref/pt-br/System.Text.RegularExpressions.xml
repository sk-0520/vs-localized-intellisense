<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Text.RegularExpressions</name>
  </assembly>
  <members>
    <member name="T:System.Text.RegularExpressions.Capture">
      <summary>Representa os resultados de uma única captura de subexpressão bem-sucedida.</summary>
    </member>
    <member name="P:System.Text.RegularExpressions.Capture.Index">
      <summary>A posição na cadeia de caracteres original em que foi encontrado o primeiro caractere da subcadeia capturada.</summary>
      <returns>A posição inicial baseada em zero da cadeia de caracteres original em que a subcadeia foi encontrada.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Capture.Length">
      <summary>Obtém o comprimento da subcadeia de caracteres capturada.</summary>
      <returns>O comprimento da subcadeia de caracteres capturada.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Capture.ToString">
      <summary>Recupera a subcadeia de caracteres capturada da cadeia de entrada chamando a propriedade <see cref="P:System.Text.RegularExpressions.Capture.Value" />.</summary>
      <returns>A subcadeia de caracteres que foi capturada pela correspondência.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Capture.Value">
      <summary>Obtém a subcadeia de caracteres capturada da cadeia de caracteres de entrada.</summary>
      <returns>A subcadeia de caracteres capturada pela correspondência.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.CaptureCollection">
      <summary>Representa o conjunto de capturas realizadas por um único grupo de captura.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copia todos os elementos da coleção para a matriz especificada, começando pelo índice especificado.</summary>
      <param name="array">A matriz para a qual a coleção deverá ser copiada.</param>
      <param name="arrayIndex">A posição na matriz de destino em que a cópia deverá começar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> está fora dos limites de <paramref name="array" />.  

ou - 
<paramref name="arrayIndex" /> mais <see cref="P:System.Text.RegularExpressions.CaptureCollection.Count" /> está fora dos limites de <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Text.RegularExpressions.Capture[],System.Int32)">
      <param name="array" />
      <param name="arrayIndex" />
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.Count">
      <summary>Obtém o número de subcadeias de caracteres capturadas pelo grupo.</summary>
      <returns>O número de itens no <see cref="T:System.Text.RegularExpressions.CaptureCollection" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.GetEnumerator">
      <summary>Fornece um enumerador iterado por meio da coleção.</summary>
      <returns>Um objeto que contém todos os objetos <see cref="T:System.Text.RegularExpressions.Capture" /> dentro do <see cref="T:System.Text.RegularExpressions.CaptureCollection" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.IsReadOnly">
      <summary>Obtém um valor que indica se a coleção é somente leitura.</summary>
      <returns>
        <see langword="true" /> em todos os casos.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.IsSynchronized">
      <summary>Obtém um valor que indica se o acesso à coleção é sincronizado (thread-safe).</summary>
      <returns>
        <see langword="false" /> em todos os casos.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.Item(System.Int32)">
      <summary>Obtém um membro individual da coleção.</summary>
      <param name="i">Índice na coleção de captura.</param>
      <returns>A subcadeia de caracteres capturada na posição <paramref name="i" /> da coleção.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="i" /> é menor que 0 ou maior que <see cref="P:System.Text.RegularExpressions.CaptureCollection.Count" />.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.SyncRoot">
      <summary>Obtém um objeto que pode ser usado para sincronizar o acesso à coleção.</summary>
      <returns>Um objeto que pode ser usado para sincronizar o acesso à coleção.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Add(System.Text.RegularExpressions.Capture)">
      <param name="item" />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Clear" />
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Contains(System.Text.RegularExpressions.Capture)">
      <param name="item" />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Remove(System.Text.RegularExpressions.Capture)">
      <param name="item" />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IEnumerable{System#Text#RegularExpressions#Capture}#GetEnumerator" />
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#IndexOf(System.Text.RegularExpressions.Capture)">
      <param name="item" />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#Insert(System.Int32,System.Text.RegularExpressions.Capture)">
      <param name="index" />
      <param name="item" />
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#Item(System.Int32)">
      <param name="index" />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#RemoveAt(System.Int32)">
      <param name="index" />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Add(System.Object)">
      <param name="value" />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Clear" />
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Contains(System.Object)">
      <param name="value" />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#IndexOf(System.Object)">
      <param name="value" />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <param name="index" />
      <param name="value" />
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#IsFixedSize" />
    <member name="P:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Item(System.Int32)">
      <param name="index" />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Remove(System.Object)">
      <param name="value" />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <param name="index" />
    </member>
    <member name="T:System.Text.RegularExpressions.Group">
      <summary>Representa os resultados de um único grupo de captura.</summary>
    </member>
    <member name="P:System.Text.RegularExpressions.Group.Captures">
      <summary>Obtém uma coleção de todas as capturas correspondida pelo grupo de captura, na primeira ordem interna mais à esquerda (ou primeira ordem interna mais à direita se a expressão regular for modificada com a opção <see cref="F:System.Text.RegularExpressions.RegexOptions.RightToLeft" />). A coleção pode ter zero ou mais itens.</summary>
      <returns>A coleção de subcadeias de caracteres correspondida pelo grupo.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Group.Name">
      <summary>Retorna o nome do grupo de captura representado pela instância atual.</summary>
      <returns>O nome do grupo de captura representado pela instância atual.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Group.Success">
      <summary>Obtém um valor que indica se a correspondência foi bem-sucedida.</summary>
      <returns>
        <see langword="true" /> se a correspondência for bem-sucedida, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Group.Synchronized(System.Text.RegularExpressions.Group)">
      <summary>Retorna um <see langword="Group" /> objeto equivalente àquele fornecido e que é seguro compartilhar entre vários threads.</summary>
      <param name="inner">O objeto <see cref="T:System.Text.RegularExpressions.Group" /> de entrada.</param>
      <returns>Um objeto <see langword="Group" /> de expressão regular.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inner" /> é <see langword="null" />.</exception>
    </member>
    <member name="T:System.Text.RegularExpressions.GroupCollection">
      <summary>Retorna o conjunto de grupos capturados em um única correspondência.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.ContainsKey(System.String)">
      <summary>Determina se a coleção de grupos contém um grupo capturado identificado pelo nome especificado.</summary>
      <param name="key">Uma cadeia de caracteres com o nome do grupo capturado a ser localizado.</param>
      <returns>
        <see langword="true" /> se a coleção de grupos contiver um grupo capturado identificado por <paramref name="key" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copia todos os elementos da coleção para a matriz especificada, começando pelo índice especificado.</summary>
      <param name="array">A matriz para a qual a coleção deverá ser copiada.</param>
      <param name="arrayIndex">A posição na matriz de destino em que a cópia deverá começar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="arrayIndex" /> está fora dos limites de <paramref name="array" />.

ou -

<paramref name="arrayIndex" /> mais <see cref="P:System.Text.RegularExpressions.GroupCollection.Count" /> está fora dos limites de <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Text.RegularExpressions.Group[],System.Int32)">
      <summary>Copia os elementos da coleção de grupos para uma matriz <see cref="System.Text.RegularExpressions.Group[]" />, começando em um índice de matriz específico.</summary>
      <param name="array">A matriz unidimensional que é o destino dos elementos copiados da coleção de grupos. A matriz deve ter indexação com base em zero.</param>
      <param name="arrayIndex">O índice com base em zero em <paramref name="array" /> no qual a cópia começa.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é nulo.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> é menor que zero.

ou -

<paramref name="arrayIndex" /> é maior que o comprimento do <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentException">O comprimento de <paramref name="array" /> - <paramref name="arrayIndex" /> é menor que a contagem da coleção de grupos.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Count">
      <summary>Retorna o número de grupos na coleção.</summary>
      <returns>O número de grupos na coleção.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.GetEnumerator">
      <summary>Fornece um enumerador iterado por meio da coleção.</summary>
      <returns>Um enumerador que contém todos os objetos <see cref="T:System.Text.RegularExpressions.Group" /> na <see cref="T:System.Text.RegularExpressions.GroupCollection" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.IsReadOnly">
      <summary>Obtém um valor que indica se a coleção é somente leitura.</summary>
      <returns>
        <see langword="true" /> em todos os casos.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.IsSynchronized">
      <summary>Obtém um valor que indica se o acesso a <see cref="T:System.Text.RegularExpressions.GroupCollection" /> é sincronizado (thread-safe).</summary>
      <returns>
        <see langword="false" /> em todos os casos.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
      <summary>Permite acesso a um membro da coleção pelo índice de inteiros.</summary>
      <param name="groupnum">O índice baseado em zero do membro da coleção a ser recuperado.</param>
      <returns>O membro da coleção especificado pelo <paramref name="groupnum" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
      <summary>Habilita o acesso a um membro da coleção pelo índice de cadeia de caracteres.</summary>
      <param name="groupname">O nome de um grupo de captura.</param>
      <returns>O membro da coleção especificado pelo <paramref name="groupname" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Keys">
      <summary>Obtém uma enumeração de cadeia de caracteres que contém as chaves de nome da coleção de grupos.</summary>
      <returns>As chaves de nome da coleção de grupos.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.SyncRoot">
      <summary>Obtém um objeto que pode ser usado para sincronizar o acesso ao <see cref="T:System.Text.RegularExpressions.GroupCollection" />.</summary>
      <returns>Uma cópia do <see cref="T:System.Text.RegularExpressions.Match" /> objeto a ser sincronizado.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Group}#Add(System.Text.RegularExpressions.Group)">
      <summary>Adiciona um <see cref="T:System.Text.RegularExpressions.Group" /> à coleção. A chamada desse método sempre lança <see cref="T:System.NotSupportedException" />.</summary>
      <param name="item">O grupo a ser adicionado à coleção.</param>
      <exception cref="T:System.NotSupportedException">Não há suporte para o método. Esta é uma coleção somente leitura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Group}#Clear">
      <summary>Limpa a coleção. A chamada desse método sempre lança <see cref="T:System.NotSupportedException" />.</summary>
      <exception cref="T:System.NotSupportedException">Não há suporte para o método. Esta é uma coleção somente leitura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Group}#Contains(System.Text.RegularExpressions.Group)">
      <summary>Determina se a coleção de grupos contém um item de grupo específico.</summary>
      <param name="item">O grupo a ser localizado na coleção de grupos.</param>
      <returns>
        <see langword="true" /> se o item de grupo for encontrado na coleção de grupos; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Group}#Remove(System.Text.RegularExpressions.Group)">
      <summary>Remove um <see cref="T:System.Text.RegularExpressions.Group" /> da coleção. A chamada desse método sempre lança <see cref="T:System.NotSupportedException" />.</summary>
      <param name="item">O grupo a ser removido.</param>
      <returns>Não há suporte para o método. Nenhum valor é retornado.</returns>
      <exception cref="T:System.NotSupportedException">Não há suporte para o método. Esta é uma coleção somente leitura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String@System#Text#RegularExpressions#Group}}#GetEnumerator">
      <summary>Fornece um enumerador iterado por meio da coleção de grupos.</summary>
      <returns>Um enumerador que contém todos os nomes e objetos na coleção <see cref="T:System.Text.RegularExpressions.Group" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IEnumerable{System#Text#RegularExpressions#Group}#GetEnumerator">
      <summary>Fornece um enumerador iterado por meio da coleção de grupos.</summary>
      <returns>Um enumerador que contém todos os objetos <see cref="T:System.Text.RegularExpressions.Group" /> na coleção de grupos.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Group}#IndexOf(System.Text.RegularExpressions.Group)">
      <summary>Determina o índice de um grupo específico na coleção de grupos.</summary>
      <param name="item">O grupo a ser localizado na coleção de grupos.</param>
      <returns>O índice do &lt;paramref. name="item"&gt;&lt;/paramref.&gt; se encontrado; caso contrário, -1.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Group}#Insert(System.Int32,System.Text.RegularExpressions.Group)">
      <summary>Insere um <see cref="T:System.Text.RegularExpressions.Group" /> na coleção. A chamada desse método sempre lança <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index">A posição na qual inserir o grupo.</param>
      <param name="item">O grupo a ser inserido.</param>
      <exception cref="T:System.NotSupportedException">Não há suporte para o método. Esta é uma coleção somente leitura.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Group}#Item(System.Int32)">
      <summary>Obtém o grupo na posição especificada na coleção.</summary>
      <param name="index">O índice baseado em zero do grupo na coleção de grupos.</param>
      <returns>O grupo na posição desejada.</returns>
      <exception cref="T:System.NotSupportedException">Não é possível definir um item. Esta é uma coleção somente leitura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Group}#RemoveAt(System.Int32)">
      <summary>Remove o <see cref="T:System.Text.RegularExpressions.Group" /> da coleção no índice especificado. A chamada desse método sempre lança <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index">O índice baseado em zero do grupo a ser removido.</param>
      <exception cref="T:System.NotSupportedException">Não há suporte para o método. Esta é uma coleção somente leitura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Add(System.Object)">
      <summary>Adiciona um objeto à coleção de grupos. A chamada desse método sempre lança <see cref="T:System.NotSupportedException" />.</summary>
      <param name="value">O objeto a ser adicionado à coleção de grupos.</param>
      <exception cref="T:System.NotSupportedException">Não há suporte para o método. Esta é uma coleção somente leitura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Clear">
      <summary>Limpa a coleção. A chamada desse método sempre lança <see cref="T:System.NotSupportedException" />.</summary>
      <exception cref="T:System.NotSupportedException">Não há suporte para o método. Esta é uma coleção somente leitura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Contains(System.Object)">
      <summary>Determina se a coleção de grupos contém um item de grupo específico.</summary>
      <param name="value">O grupo a ser localizado na coleção de grupos.</param>
      <returns>
        <see langword="true" /> se o item de grupo for encontrado na coleção de grupos; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>Determina o índice de um grupo específico na coleção de grupos.</summary>
      <param name="value">O grupo a ser localizado na coleção de grupos.</param>
      <returns>O índice do &lt;paramref. name="item"&gt;&lt;/paramref.&gt; se encontrado; caso contrário, -1.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Insere um <see cref="T:System.Text.RegularExpressions.Group" /> na coleção. A chamada desse método sempre lança <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index">A posição na qual inserir o grupo.</param>
      <param name="value">O grupo a ser inserido.</param>
      <exception cref="T:System.NotSupportedException">Não há suporte para o método. Esta é uma coleção somente leitura.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#IsFixedSize">
      <summary>Obtém um valor que indica se a coleção de grupos tem um tamanho fixo.</summary>
      <returns>
        <see langword="true" /> sempre.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Item(System.Int32)">
      <summary>Obtém o grupo na posição desejada.</summary>
      <param name="index">A posição baseada em zero do grupo na coleção de grupos.</param>
      <returns>O grupo na posição desejada.</returns>
      <exception cref="T:System.NotSupportedException">Não é possível definir um item. Esta é uma coleção somente leitura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Remove(System.Object)">
      <summary>Remove um <see cref="T:System.Text.RegularExpressions.Group" /> da coleção. A chamada desse método sempre lança <see cref="T:System.NotSupportedException" />.</summary>
      <param name="value">O grupo a ser removido.</param>
      <exception cref="T:System.NotSupportedException">Não há suporte para o método. Esta é uma coleção somente leitura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>Remove o <see cref="T:System.Text.RegularExpressions.Group" /> da coleção no índice especificado. A chamada desse método sempre lança <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index">O índice baseado em zero do grupo a ser removido.</param>
      <exception cref="T:System.NotSupportedException">Não há suporte para o método. Esta é uma coleção somente leitura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.TryGetValue(System.String,System.Text.RegularExpressions.Group@)">
      <summary>Tenta recuperar um grupo identificado pela chave de nome fornecida, se existir, na coleção de grupos.</summary>
      <param name="key">Uma cadeia de caracteres com a chave de nome do grupo a ser procurada.</param>
      <param name="value">Quando o método é retornado, o grupo cujo nome é <paramref name="key" />, caso seja encontrado; caso contrário, <see langword="null" />, caso não seja encontrado.</param>
      <returns>
        <see langword="true" /> se um grupo identificado pela chave de nome fornecida existir; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Values">
      <summary>Obtém uma enumeração de grupo com todos os grupos na coleção de grupos.</summary>
      <returns>Uma enumeração de grupo.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.Match">
      <summary>Representa os resultados de correspondência de uma única expressão regular.</summary>
    </member>
    <member name="P:System.Text.RegularExpressions.Match.Empty">
      <summary>Obtém o grupo vazio. Todas as correspondências com falha retornam essa correspondência vazia.</summary>
      <returns>Uma correspondência vazia.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Match.Groups">
      <summary>Obtém uma coleção de grupos correspondentes à expressão regular.</summary>
      <returns>Os grupos de caracteres que correspondem ao padrão.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Match.NextMatch">
      <summary>Retorna um novo objeto <see cref="T:System.Text.RegularExpressions.Match" /> com os resultados para a próxima correspondência, começando na posição em que a última correspondência terminou (no caractere após o último caractere correspondente).</summary>
      <returns>A próxima expressão regular de correspondência.</returns>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Ocorreu um tempo limite.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Match.Result(System.String)">
      <summary>Retorna a expansão do padrão de substituição especificado.</summary>
      <param name="replacement">O padrão de substituição a ser usado.</param>
      <returns>A versão expandida do parâmetro <paramref name="replacement" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="replacement" /> é <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">A expansão não é permitida para este padrão.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Match.Synchronized(System.Text.RegularExpressions.Match)">
      <summary>Retorna um instância <see cref="T:System.Text.RegularExpressions.Match" /> equivalente a uma fornecida que é adequada para compartilhar entre vários threads.</summary>
      <param name="inner">Uma expressão regular corresponde ao equivalente da esperada.</param>
      <returns>Uma correspondência da expressão regular que é adequada para compartilhar entre vários threads.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inner" /> é <see langword="null" />.</exception>
    </member>
    <member name="T:System.Text.RegularExpressions.MatchCollection">
      <summary>Representa o conjunto de correspondências de sucesso encontrado iterativamente aplicando um padrão de expressão regular à cadeia de caracteres de entrada.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copia todos os elementos da coleção para a matriz especificada, começando pelo índice especificado.</summary>
      <param name="array">A matriz para a qual a coleção deverá ser copiada.</param>
      <param name="arrayIndex">A posição na matriz em que a cópia deve começar.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> é uma matriz multidimensional.</exception>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="arrayIndex" /> está fora dos limites de <paramref name="array" />.  

ou - 
<paramref name="arrayIndex" /> mais <see cref="P:System.Text.RegularExpressions.MatchCollection.Count" /> está fora dos limites de <paramref name="array" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Ocorreu um tempo limite.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Text.RegularExpressions.Match[],System.Int32)">
      <param name="array" />
      <param name="arrayIndex" />
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.Count">
      <summary>Obtém o número de correspondências.</summary>
      <returns>O número de correspondências.</returns>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Ocorreu um tempo limite.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.GetEnumerator">
      <summary>Fornece um enumerador iterado por meio da coleção.</summary>
      <returns>Um objeto que contém todos os objetos <see cref="T:System.Text.RegularExpressions.Match" /> dentro do <see cref="T:System.Text.RegularExpressions.MatchCollection" />.</returns>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Ocorreu um tempo limite.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.IsReadOnly">
      <summary>Obtém um valor que indica se a coleção é somente leitura.</summary>
      <returns>
        <see langword="true" /> em todos os casos.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.IsSynchronized">
      <summary>Obtém um valor que indica se o acesso à coleção é sincronizado (thread-safe).</summary>
      <returns>
        <see langword="false" /> em todos os casos.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.Item(System.Int32)">
      <summary>Obtém um membro individual da coleção.</summary>
      <param name="i">Índice na coleção <see cref="T:System.Text.RegularExpressions.Match" />.</param>
      <returns>A subcadeia de caracteres capturada na posição <paramref name="i" /> da coleção.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="i" /> é menor que 0 ou maior ou igual a <see cref="P:System.Text.RegularExpressions.MatchCollection.Count" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Ocorreu um tempo limite.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.SyncRoot">
      <summary>Obtém um objeto que pode ser usado para sincronizar o acesso à coleção.</summary>
      <returns>Um objeto que pode ser usado para sincronizar o acesso à coleção. Essa propriedade sempre retorna o próprio objeto.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Match}#Add(System.Text.RegularExpressions.Match)">
      <param name="item" />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Match}#Clear" />
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Match}#Contains(System.Text.RegularExpressions.Match)">
      <param name="item" />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Match}#Remove(System.Text.RegularExpressions.Match)">
      <param name="item" />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IEnumerable{System#Text#RegularExpressions#Match}#GetEnumerator" />
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Match}#IndexOf(System.Text.RegularExpressions.Match)">
      <param name="item" />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Match}#Insert(System.Int32,System.Text.RegularExpressions.Match)">
      <param name="index" />
      <param name="item" />
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Match}#Item(System.Int32)">
      <param name="index" />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Match}#RemoveAt(System.Int32)">
      <param name="index" />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Add(System.Object)">
      <param name="value" />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Clear" />
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Contains(System.Object)">
      <param name="value" />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#IndexOf(System.Object)">
      <param name="value" />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <param name="index" />
      <param name="value" />
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#IsFixedSize" />
    <member name="P:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Item(System.Int32)">
      <param name="index" />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Remove(System.Object)">
      <param name="value" />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <param name="index" />
    </member>
    <member name="T:System.Text.RegularExpressions.MatchEvaluator">
      <summary>Representa o método que é chamado sempre que uma correspondência da expressão regular é encontrada durante uma operação de método de <see cref="Overload:System.Text.RegularExpressions.Regex.Replace" />.</summary>
      <param name="match">O objeto <see cref="T:System.Text.RegularExpressions.Match" /> que representa uma correspondência da expressão regular única durante uma operação do método de <see cref="Overload:System.Text.RegularExpressions.Regex.Replace" />.</param>
      <returns>Uma cadeia de caracteres retornada pelo método que é representada pelo delegado <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.Regex">
      <summary>Representa uma expressão regular imutável.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Text.RegularExpressions.Regex" /> utilizando dados serializados.</summary>
      <param name="info">O objeto que contém um padrão serializado e informações da <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</param>
      <param name="context">O destino dessa serialização. (Este parâmetro não é usado; especifique <see langword="null" />.)</param>
      <exception cref="T:System.ArgumentException">Ocorreu um erro de análise da expressão regular.</exception>
      <exception cref="T:System.ArgumentNullException">O padrão que <paramref name="info" /> contém é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="info" /> contém um sinalizador <see cref="T:System.Text.RegularExpressions.RegexOptions" /> inválido.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Text.RegularExpressions.Regex" /> para a expressão regular especificada.</summary>
      <param name="pattern">O padrão de expressão regular para correspondência.</param>
      <exception cref="T:System.ArgumentException">Ocorreu um erro de análise da expressão regular.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pattern" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Text.RegularExpressions.Regex" /> para a expressão regular especificada, com opções que modifiquem o padrão.</summary>
      <param name="pattern">O padrão de expressão regular para correspondência.</param>
      <param name="options">Uma combinação bit a bit dos valores de enumeração que modificam a expressão regular.</param>
      <exception cref="T:System.ArgumentException">Ocorreu um erro de análise da expressão regular.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pattern" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> contém um sinalizador inválido.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Text.RegularExpressions.Regex" /> para a expressão regular especificada, com opções que modificam o padrão e um valor que especifica quanto tempo um padrão que corresponde ao método deve tentar uma correspondência antes de atingir o tempo limite.</summary>
      <param name="pattern">O padrão de expressão regular para correspondência.</param>
      <param name="options">Uma combinação bit a bit dos valores de enumeração que modificam a expressão regular.</param>
      <param name="matchTimeout">Um intervalo de tempo limite ou <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> para indicar que o método não deve atingir o tempo limite.</param>
      <exception cref="T:System.ArgumentException">Ocorreu um erro de análise da expressão regular.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pattern" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> não é um valor <see cref="T:System.Text.RegularExpressions.RegexOptions" /> válido.  

ou - 
<paramref name="matchTimeout" /> é negativo, zero ou maior que aproximadamente 24 dias.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.CacheSize">
      <summary>Obtém ou define o número máximo de entradas no cache estático atual de expressões regulares compiladas.</summary>
      <returns>O número máximo de entradas no cache estático.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">O valor em uma operação de conjuntos é menor que zero.</exception>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.capnames">
      <summary>Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.CapNames">
      <summary>Obtém ou define um dicionário que mapeia grupos de captura nomeados para seus valores de índice.</summary>
      <returns>Um dicionário que mapeia grupos de captura nomeados para seus valores de índice.</returns>
      <exception cref="T:System.ArgumentNullException">O valor atribuído à propriedade <see cref="P:System.Text.RegularExpressions.Regex.CapNames" /> em uma operação de conjuntos é <see langword="null" />.</exception>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.caps">
      <summary>Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.Caps">
      <summary>Obtém ou define um dicionário que mapeia grupos de captura numerados para seus valores de índice.</summary>
      <returns>Um dicionário que mapeia grupos de captura numerados para seus valores de índice.</returns>
      <exception cref="T:System.ArgumentNullException">O valor atribuído à propriedade <see cref="P:System.Text.RegularExpressions.Regex.Caps" /> em uma operação de conjuntos é <see langword="null" />.</exception>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.capsize">
      <summary>Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.capslist">
      <summary>Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)">
      <summary>Compila um ou mais objetos <see cref="T:System.Text.RegularExpressions.Regex" /> especificados para um assembly nomeado.</summary>
      <param name="regexinfos">Uma matriz que descreve as expressões regulares a compilar.</param>
      <param name="assemblyname">O nome do arquivo do assembly.</param>
      <exception cref="T:System.ArgumentException">O valor da propriedade <see cref="P:System.Reflection.AssemblyName.Name" /> do parâmetro <paramref name="assemblyname" /> é uma cadeia de caracteres vazia ou nula.  

ou - 
O padrão de expressão regular de um ou mais objetos em <paramref name="regexinfos" /> contém sintaxe inválida.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyname" /> ou <paramref name="regexinfos" /> é <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Somente .NET Core: Não há suporte para a criação de um assembly de expressões regulares compiladas.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder[])">
      <summary>Compila um ou mais objetos <see cref="T:System.Text.RegularExpressions.Regex" /> especificados para um assembly nomeado com os atributos especificados.</summary>
      <param name="regexinfos">Uma matriz que descreve as expressões regulares a compilar.</param>
      <param name="assemblyname">O nome do arquivo do assembly.</param>
      <param name="attributes">Uma matriz que define os atributos a serem aplicados ao assembly.</param>
      <exception cref="T:System.ArgumentException">O valor da propriedade <see cref="P:System.Reflection.AssemblyName.Name" /> do parâmetro <paramref name="assemblyname" /> é uma cadeia de caracteres vazia ou nula.  

ou - 
O padrão de expressão regular de um ou mais objetos em <paramref name="regexinfos" /> contém sintaxe inválida.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyname" /> ou <paramref name="regexinfos" /> é <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Somente .NET Core: Não há suporte para a criação de um assembly de expressões regulares compiladas.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder[],System.String)">
      <summary>Compila um ou mais objetos <see cref="T:System.Text.RegularExpressions.Regex" /> especificados e um arquivo de recurso especificado para um assembly nomeado com os atributos especificados.</summary>
      <param name="regexinfos">Uma matriz que descreve as expressões regulares a compilar.</param>
      <param name="assemblyname">O nome do arquivo do assembly.</param>
      <param name="attributes">Uma matriz que define os atributos a serem aplicados ao assembly.</param>
      <param name="resourceFile">O nome do arquivo de recurso Win32 a ser incluído no assembly.</param>
      <exception cref="T:System.ArgumentException">O valor da propriedade <see cref="P:System.Reflection.AssemblyName.Name" /> do parâmetro <paramref name="assemblyname" /> é uma cadeia de caracteres vazia ou nula.  

ou - 
O padrão de expressão regular de um ou mais objetos em <paramref name="regexinfos" /> contém sintaxe inválida.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyname" /> ou <paramref name="regexinfos" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">O parâmetro <paramref name="resourceFile" /> designa um arquivo de recurso Win32 inválido.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo designado pelo parâmetro <paramref name="resourceFile" /> não pôde ser encontrado.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Somente .NET Core: Não há suporte para a criação de um assembly de expressões regulares compiladas.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Escape(System.String)">
      <summary>Faz escape de um conjunto mínimo de caracteres (\, *, +, ?, |, {, [, (,), ^, $, ., #, e espaço em branco) substituindo-os por seus códigos de escape. Isso instrui o mecanismo de expressões regulares para interpretar esses caracteres literalmente em vez de metacaracteres.</summary>
      <param name="str">A cadeia de caracteres de entrada que contém o texto a ser convertido.</param>
      <returns>Uma cadeia de caracteres com metacaracteres convertidos em sua forma de escape.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="str" /> é <see langword="null" />.</exception>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.factory">
      <summary>Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GetGroupNames">
      <summary>Retorna uma matriz de nomes de grupo de captura para a expressão regular.</summary>
      <returns>Uma matriz de cadeia de caracteres de nomes de grupo.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GetGroupNumbers">
      <summary>Retorna uma matriz de números de grupo de captura que correspondem aos nomes de grupos em uma matriz.</summary>
      <returns>Uma matriz de inteiros de números de grupo.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GroupNameFromNumber(System.Int32)">
      <summary>Obtém o nome do grupo que corresponde ao número do grupo especificado.</summary>
      <param name="i">O número do grupo a ser convertido para o nome de grupo correspondente.</param>
      <returns>Uma cadeia de caracteres que contém o nome de grupo associado ao número de grupo especificado. Se não houver nenhum nome de grupo que corresponda a <paramref name="i" />, o método retornará <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GroupNumberFromName(System.String)">
      <summary>Retorna o número do grupo que corresponde ao nome do grupo especificado.</summary>
      <param name="name">O nome do grupo a ser convertido para o número de grupo correspondente.</param>
      <returns>O número do grupo que corresponde ao nome do grupo especificado ou -1 se <paramref name="name" /> não for um nome de grupo válido.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> é <see langword="null" />.</exception>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout">
      <summary>Especifica que uma operação de correspondência de padrões não deve atingir o tempo limite.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.InitializeReferences">
      <summary>Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <exception cref="T:System.NotSupportedException">As referências já foram inicializadas.</exception>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.internalMatchTimeout">
      <summary>A quantidade de tempo máxima que pode decorrer em uma operação de correspondência de padrões antes que a operação atinja o tempo limite.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String)">
      <summary>Indica se a expressão regular especificada no construtor <see cref="T:System.Text.RegularExpressions.Regex" /> encontra uma correspondência em uma cadeia de caracteres de entrada especificada.</summary>
      <param name="input">A cadeia de caracteres na qual será pesquisada uma correspondência.</param>
      <returns>
        <see langword="true" /> se a expressão regular encontrar uma correspondência; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Ocorreu um tempo limite. Para obter mais informações sobre tempos limite, consulte a seção Comentários.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.Int32)">
      <summary>Indica se a expressão regular especificada no construtor <see cref="T:System.Text.RegularExpressions.Regex" /> encontra uma correspondência na cadeia de caracteres de entrada especificada, começando na posição inicial especificada na cadeia de caracteres.</summary>
      <param name="input">A cadeia de caracteres na qual será pesquisada uma correspondência.</param>
      <param name="startat">A posição do caractere em que a pesquisa será iniciada.</param>
      <returns>
        <see langword="true" /> se a expressão regular encontrar uma correspondência; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startat" /> é menor que zero ou maior que o tamanho de <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Ocorreu um tempo limite. Para obter mais informações sobre tempos limite, consulte a seção Comentários.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String)">
      <summary>Indica se a expressão regular especificada encontra uma correspondência na cadeia de caracteres de entrada especificada.</summary>
      <param name="input">A cadeia de caracteres na qual será pesquisada uma correspondência.</param>
      <param name="pattern">O padrão de expressão regular para correspondência.</param>
      <returns>
        <see langword="true" /> se a expressão regular encontrar uma correspondência; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Ocorreu um erro de análise da expressão regular.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ou <paramref name="pattern" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Ocorreu um tempo limite. Para obter mais informações sobre tempos limite, consulte a seção Comentários.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>Indica se a expressão regular especificada encontra uma correspondência na cadeia de caracteres de entrada especificada, usando as opções de correspondência especificadas.</summary>
      <param name="input">A cadeia de caracteres na qual será pesquisada uma correspondência.</param>
      <param name="pattern">O padrão de expressão regular para correspondência.</param>
      <param name="options">Uma combinação bit a bit dos valores de enumeração que fornece opções para correspondência.</param>
      <returns>
        <see langword="true" /> se a expressão regular encontrar uma correspondência; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Ocorreu um erro de análise da expressão regular.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ou <paramref name="pattern" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> não é um valor <see cref="T:System.Text.RegularExpressions.RegexOptions" /> válido.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Ocorreu um tempo limite. Para obter mais informações sobre tempos limite, consulte a seção Comentários.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary>Indica se a expressão regular especificada encontra uma correspondência na cadeia de caracteres de entrada especificada, usando as opções de correspondência e intervalo de tempo limite especificados.</summary>
      <param name="input">A cadeia de caracteres na qual será pesquisada uma correspondência.</param>
      <param name="pattern">O padrão de expressão regular para correspondência.</param>
      <param name="options">Uma combinação bit a bit dos valores de enumeração que fornece opções para correspondência.</param>
      <param name="matchTimeout">Um intervalo de tempo limite ou <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> para indicar que o método não deve atingir o tempo limite.</param>
      <returns>
        <see langword="true" /> se a expressão regular encontrar uma correspondência; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Ocorreu um erro de análise da expressão regular.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ou <paramref name="pattern" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> não é um valor <see cref="T:System.Text.RegularExpressions.RegexOptions" /> válido.  

ou - 
<paramref name="matchTimeout" /> é negativo, zero ou maior que aproximadamente 24 dias.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Ocorreu um tempo limite.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String)">
      <summary>Pesquisa a primeira ocorrência da expressão regular especificada na cadeia de caracteres de entrada especificada no construtor <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
      <param name="input">A cadeia de caracteres na qual será pesquisada uma correspondência.</param>
      <returns>Um objeto que contém informações sobre a correspondência.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Ocorreu um tempo limite. Para obter mais informações sobre tempos limite, consulte a seção Comentários.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.Int32)">
      <summary>Procura a cadeia de caracteres de entrada para a primeira ocorrência de uma expressão regular, começando na posição inicial especificada na cadeia de caracteres.</summary>
      <param name="input">A cadeia de caracteres na qual será pesquisada uma correspondência.</param>
      <param name="startat">A posição do caractere baseada em zero na qual iniciar a pesquisa.</param>
      <returns>Um objeto que contém informações sobre a correspondência.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startat" /> é menor que zero ou maior que o tamanho de <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Ocorreu um tempo limite. Para obter mais informações sobre tempos limite, consulte a seção Comentários.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.Int32,System.Int32)">
      <summary>Pesquisa a primeira ocorrência de uma expressão regular na cadeia de entrada, começando na posição inicial especificada e pesquisando apenas o número especificado de caracteres.</summary>
      <param name="input">A cadeia de caracteres na qual será pesquisada uma correspondência.</param>
      <param name="beginning">A posição do caractere baseado em zero na cadeia de caracteres de entrada que define a posição mais à esquerda a ser pesquisada.</param>
      <param name="length">O número de caracteres na subcadeia de caracteres a ser incluído na pesquisa.</param>
      <returns>Um objeto que contém informações sobre a correspondência.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="beginning" /> é menor que zero ou maior que o tamanho de <paramref name="input" />.  

ou - 
<paramref name="length" /> é menor que zero ou maior que o tamanho de <paramref name="input" />.  

ou - 
<paramref name="beginning" /><see langword="+" /><paramref name="length" /><see langword="-1" /> identifica uma posição que está fora do intervalo de <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Ocorreu um tempo limite. Para obter mais informações sobre tempos limite, consulte a seção Comentários.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String)">
      <summary>Pesquisa a primeira ocorrência da expressão regular especificada na cadeia de caracteres de entrada especificada.</summary>
      <param name="input">A cadeia de caracteres na qual será pesquisada uma correspondência.</param>
      <param name="pattern">O padrão de expressão regular para correspondência.</param>
      <returns>Um objeto que contém informações sobre a correspondência.</returns>
      <exception cref="T:System.ArgumentException">Ocorreu um erro de análise da expressão regular.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ou <paramref name="pattern" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Ocorreu um tempo limite. Para obter mais informações sobre tempos limite, consulte a seção Comentários.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>Procura a cadeia de caracteres de entrada para a primeira ocorrência da expressão regular especificada, usando as opções especificadas de correspondência.</summary>
      <param name="input">A cadeia de caracteres na qual será pesquisada uma correspondência.</param>
      <param name="pattern">O padrão de expressão regular para correspondência.</param>
      <param name="options">Uma combinação bit a bit dos valores de enumeração que fornece opções para correspondência.</param>
      <returns>Um objeto que contém informações sobre a correspondência.</returns>
      <exception cref="T:System.ArgumentException">Ocorreu um erro de análise da expressão regular.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ou <paramref name="pattern" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> não é uma combinação bit a bit válida de valores de <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Ocorreu um tempo limite. Para obter mais informações sobre tempos limite, consulte a seção Comentários.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary>Pesquisa a cadeia de caracteres de entrada da primeira ocorrência da expressão regular especificada, usando as opções de correspondência e intervalo de tempo limite especificados.</summary>
      <param name="input">A cadeia de caracteres na qual será pesquisada uma correspondência.</param>
      <param name="pattern">O padrão de expressão regular para correspondência.</param>
      <param name="options">Uma combinação bit a bit dos valores de enumeração que fornece opções para correspondência.</param>
      <param name="matchTimeout">Um intervalo de tempo limite ou <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> para indicar que o método não deve atingir o tempo limite.</param>
      <returns>Um objeto que contém informações sobre a correspondência.</returns>
      <exception cref="T:System.ArgumentException">Ocorreu um erro de análise da expressão regular.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ou <paramref name="pattern" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> não é uma combinação bit a bit válida de valores de <see cref="T:System.Text.RegularExpressions.RegexOptions" />.  

ou - 
<paramref name="matchTimeout" /> é negativo, zero ou maior que aproximadamente 24 dias.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Ocorreu um tempo limite. Para obter mais informações sobre tempos limite, consulte a seção Comentários.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String)">
      <summary>Pesquisa todas as ocorrências de uma expressão regular na cadeia de caracteres de entrada especificada.</summary>
      <param name="input">A cadeia de caracteres na qual será pesquisada uma correspondência.</param>
      <returns>Uma coleção dos objetos <see cref="T:System.Text.RegularExpressions.Match" /> encontrados pela pesquisa. Se nenhuma correspondência for encontrada, o método retornará um objeto de coleção vazio.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.Int32)">
      <summary>Pesquisa a cadeia de caracteres de entrada especificada para todas as ocorrências de uma expressão regular, começando na posição inicial especificada na cadeia de caracteres.</summary>
      <param name="input">A cadeia de caracteres na qual será pesquisada uma correspondência.</param>
      <param name="startat">A posição do caractere na cadeia de caracteres de entrada na qual a pesquisa será iniciada.</param>
      <returns>Uma coleção dos objetos <see cref="T:System.Text.RegularExpressions.Match" /> encontrados pela pesquisa. Se nenhuma correspondência for encontrada, o método retornará um objeto de coleção vazio.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startat" /> é menor que zero ou maior que o tamanho de <paramref name="input" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String)">
      <summary>Pesquisa todas as ocorrências de uma expressão regular especificada na cadeia de entrada especificada.</summary>
      <param name="input">A cadeia de caracteres na qual será pesquisada uma correspondência.</param>
      <param name="pattern">O padrão de expressão regular para correspondência.</param>
      <returns>Uma coleção dos objetos <see cref="T:System.Text.RegularExpressions.Match" /> encontrados pela pesquisa. Se nenhuma correspondência for encontrada, o método retornará um objeto de coleção vazio.</returns>
      <exception cref="T:System.ArgumentException">Ocorreu um erro de análise da expressão regular.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ou <paramref name="pattern" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>Pesquisa todas as ocorrências de uma expressão regular especificada na cadeia de caracteres de entrada especificada, usando as opções de correspondência especificadas.</summary>
      <param name="input">A cadeia de caracteres na qual será pesquisada uma correspondência.</param>
      <param name="pattern">O padrão de expressão regular para correspondência.</param>
      <param name="options">Uma combinação bit a bit dos valores de enumeração que especifica opções para correspondência.</param>
      <returns>Uma coleção dos objetos <see cref="T:System.Text.RegularExpressions.Match" /> encontrados pela pesquisa. Se nenhuma correspondência for encontrada, o método retornará um objeto de coleção vazio.</returns>
      <exception cref="T:System.ArgumentException">Ocorreu um erro de análise da expressão regular.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ou <paramref name="pattern" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> não é uma combinação bit a bit válida de valores de <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary>Pesquisa todas as ocorrências de uma expressão regular especificada na cadeia de caracteres de entrada especificada, usando as opções de correspondência especificadas e o intervalo de tempo limite.</summary>
      <param name="input">A cadeia de caracteres na qual será pesquisada uma correspondência.</param>
      <param name="pattern">O padrão de expressão regular para correspondência.</param>
      <param name="options">Uma combinação bit a bit dos valores de enumeração que especifica opções para correspondência.</param>
      <param name="matchTimeout">Um intervalo de tempo limite ou <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> para indicar que o método não deve atingir o tempo limite.</param>
      <returns>Uma coleção dos objetos <see cref="T:System.Text.RegularExpressions.Match" /> encontrados pela pesquisa. Se nenhuma correspondência for encontrada, o método retornará um objeto de coleção vazio.</returns>
      <exception cref="T:System.ArgumentException">Ocorreu um erro de análise da expressão regular.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ou <paramref name="pattern" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> não é uma combinação bit a bit válida de valores de <see cref="T:System.Text.RegularExpressions.RegexOptions" />.  

ou - 
<paramref name="matchTimeout" /> é negativo, zero ou maior que aproximadamente 24 dias.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.MatchTimeout">
      <summary>Obtém o intervalo de tempo limite da instância atual.</summary>
      <returns>O intervalo de tempo máximo que pode decorrer em uma operação de correspondência de padrão antes que uma <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> seja lançada ou <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> se os tempos limite estão desabilitados.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.Options">
      <summary>Obtém as opções que foram passadas para o construtor <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
      <returns>Um ou mais membros da enumeração <see cref="T:System.Text.RegularExpressions.RegexOptions" /> que representa as opções que foram passadas para o construtor <see cref="T:System.Text.RegularExpressions.Regex" /></returns>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.pattern">
      <summary>Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String)">
      <summary>Em uma cadeia de caracteres de entrada especificada, substitui todas as cadeias de caracteres que correspondem a um padrão de expressão regular por uma cadeia de caracteres de substituição especificada.</summary>
      <param name="input">A cadeia de caracteres na qual será pesquisada uma correspondência.</param>
      <param name="replacement">A cadeia de caracteres substituta.</param>
      <returns>Uma nova cadeia de caracteres idêntica à cadeia de caracteres de entrada, com exceção de que a cadeia de caracteres de substituição substitui cada cadeia de caracteres correspondente. Se o padrão de expressão regular não tiver uma correspondência na instância atual, o método retornará a instância atual inalterada.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ou <paramref name="replacement" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Ocorreu um tempo limite. Para obter mais informações sobre tempos limite, consulte a seção Comentários.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32)">
      <summary>Em uma cadeia de caracteres de entrada especificada, substitui um número máximo especificado de cadeias de caracteres que correspondem a um padrão de expressão regular com uma cadeia de caracteres substituta especificada.</summary>
      <param name="input">A cadeia de caracteres na qual será pesquisada uma correspondência.</param>
      <param name="replacement">A cadeia de caracteres substituta.</param>
      <param name="count">O número máximo de vezes que a substituição pode ocorrer.</param>
      <returns>Uma nova cadeia de caracteres idêntica à cadeia de caracteres de entrada, com exceção de que a cadeia de caracteres de substituição substitui cada cadeia de caracteres correspondente. Se o padrão de expressão regular não tiver uma correspondência na instância atual, o método retornará a instância atual inalterada.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ou <paramref name="replacement" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Ocorreu um tempo limite. Para obter mais informações sobre tempos limite, consulte a seção Comentários.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32,System.Int32)">
      <summary>Em uma subcadeia de caracteres de entrada especificada, substitui um número máximo especificado de cadeias de caracteres que correspondem a um padrão de expressão regular com uma cadeia de caracteres substituta especificada.</summary>
      <param name="input">A cadeia de caracteres na qual será pesquisada uma correspondência.</param>
      <param name="replacement">A cadeia de caracteres substituta.</param>
      <param name="count">Número máximo de vezes que a substituição pode ocorrer.</param>
      <param name="startat">A posição do caractere na cadeia de caracteres de entrada na qual a pesquisa começa.</param>
      <returns>Uma nova cadeia de caracteres idêntica à cadeia de caracteres de entrada, com exceção de que a cadeia de caracteres de substituição substitui cada cadeia de caracteres correspondente. Se o padrão de expressão regular não tiver uma correspondência na instância atual, o método retornará a instância atual inalterada.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ou <paramref name="replacement" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startat" /> é menor que zero ou maior que o tamanho de <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Ocorreu um tempo limite. Para obter mais informações sobre tempos limite, consulte a seção Comentários.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String)">
      <summary>Em uma cadeia de caracteres de entrada especificada, substitui todas as cadeias de caracteres que correspondem a uma expressão regular especificada por uma cadeia de caracteres de substituição especificada.</summary>
      <param name="input">A cadeia de caracteres na qual será pesquisada uma correspondência.</param>
      <param name="pattern">O padrão de expressão regular para correspondência.</param>
      <param name="replacement">A cadeia de caracteres substituta.</param>
      <returns>Uma nova cadeia de caracteres idêntica à cadeia de caracteres de entrada, com exceção de que a cadeia de caracteres de substituição substitui cada cadeia de caracteres correspondente. Se <paramref name="pattern" /> não tiver uma correspondência na instância atual, o método retornará a instância atual inalterada.</returns>
      <exception cref="T:System.ArgumentException">Ocorreu um erro de análise da expressão regular.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" />, <paramref name="pattern" /> ou <paramref name="replacement" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Ocorreu um tempo limite. Para obter mais informações sobre tempos limite, consulte a seção Comentários.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>Em uma cadeia de caracteres de entrada especificada, substitui todas as cadeias de caracteres que correspondem a uma expressão regular especificada por uma cadeia de caracteres de substituição especificada. As opções especificadas modificam a operação de correspondência.</summary>
      <param name="input">A cadeia de caracteres na qual será pesquisada uma correspondência.</param>
      <param name="pattern">O padrão de expressão regular para correspondência.</param>
      <param name="replacement">A cadeia de caracteres substituta.</param>
      <param name="options">Uma combinação bit a bit dos valores de enumeração que fornece opções para correspondência.</param>
      <returns>Uma nova cadeia de caracteres idêntica à cadeia de caracteres de entrada, com exceção de que a cadeia de caracteres de substituição substitui cada cadeia de caracteres correspondente. Se <paramref name="pattern" /> não tiver uma correspondência na instância atual, o método retornará a instância atual inalterada.</returns>
      <exception cref="T:System.ArgumentException">Ocorreu um erro de análise da expressão regular.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" />, <paramref name="pattern" />ou <paramref name="replacement" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> não é uma combinação bit a bit válida de valores de <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Ocorreu um tempo limite. Para obter mais informações sobre tempos limite, consulte a seção Comentários.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary>Em uma cadeia de caracteres de entrada especificada, substitui todas as cadeias de caracteres que correspondem a uma expressão regular especificada por uma cadeia de caracteres de substituição especificada. Os parâmetros adicionais especificam opções que modificam a operação de correspondência e um intervalo de tempo limite se nenhuma correspondência é encontrada.</summary>
      <param name="input">A cadeia de caracteres na qual será pesquisada uma correspondência.</param>
      <param name="pattern">O padrão de expressão regular para correspondência.</param>
      <param name="replacement">A cadeia de caracteres substituta.</param>
      <param name="options">Uma combinação bit a bit dos valores de enumeração que fornece opções para correspondência.</param>
      <param name="matchTimeout">Um intervalo de tempo limite ou <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> para indicar que o método não deve atingir o tempo limite.</param>
      <returns>Uma nova cadeia de caracteres idêntica à cadeia de caracteres de entrada, com exceção de que a cadeia de caracteres de substituição substitui cada cadeia de caracteres correspondente. Se <paramref name="pattern" /> não tiver uma correspondência na instância atual, o método retornará a instância atual inalterada.</returns>
      <exception cref="T:System.ArgumentException">Ocorreu um erro de análise da expressão regular.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" />, <paramref name="pattern" />ou <paramref name="replacement" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> não é uma combinação bit a bit válida de valores de <see cref="T:System.Text.RegularExpressions.RegexOptions" />.  

ou - 
<paramref name="matchTimeout" /> é negativo, zero ou maior que aproximadamente 24 dias.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Ocorreu um tempo limite. Para obter mais informações sobre tempos limite, consulte a seção Comentários.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator)">
      <summary>Em uma cadeia de caracteres de entrada especificada, substitui todas as cadeias de caracteres que correspondem a uma expressão regular especificada por uma cadeia de caracteres retornada por um delegado <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />.</summary>
      <param name="input">A cadeia de caracteres na qual será pesquisada uma correspondência.</param>
      <param name="pattern">O padrão de expressão regular para correspondência.</param>
      <param name="evaluator">Um método personalizado que examina cada correspondência e retorna a cadeia de caracteres correspondida original ou uma cadeia de caracteres de substituição.</param>
      <returns>Uma nova cadeia de caracteres é idêntica à cadeia de entrada, com exceção de que a cadeia de substituição substitui cada cadeia de caracteres correspondente. Se <paramref name="pattern" /> não tiver uma correspondência na instância atual, o método retornará a instância atual inalterada.</returns>
      <exception cref="T:System.ArgumentException">Ocorreu um erro de análise da expressão regular.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" />, <paramref name="pattern" /> ou <paramref name="evaluator" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Ocorreu um tempo limite. Para obter mais informações sobre tempos limite, consulte a seção Comentários.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions)">
      <summary>Em uma cadeia de caracteres de entrada especificada, substitui todas as cadeias de caracteres que correspondem a uma expressão regular especificada por uma cadeia de caracteres retornada por um delegado <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />. As opções especificadas modificam a operação de correspondência.</summary>
      <param name="input">A cadeia de caracteres na qual será pesquisada uma correspondência.</param>
      <param name="pattern">O padrão de expressão regular para correspondência.</param>
      <param name="evaluator">Um método personalizado que examina cada correspondência e retorna a cadeia de caracteres correspondida original ou uma cadeia de caracteres de substituição.</param>
      <param name="options">Uma combinação bit a bit dos valores de enumeração que fornece opções para correspondência.</param>
      <returns>Uma nova cadeia de caracteres é idêntica à cadeia de entrada, com exceção de que a cadeia de substituição substitui cada cadeia de caracteres correspondente. Se <paramref name="pattern" /> não tiver uma correspondência na instância atual, o método retornará a instância atual inalterada.</returns>
      <exception cref="T:System.ArgumentException">Ocorreu um erro de análise da expressão regular.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" />, <paramref name="pattern" />ou <paramref name="evaluator" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> não é uma combinação bit a bit válida de valores de <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Ocorreu um tempo limite. Para obter mais informações sobre tempos limite, consulte a seção Comentários.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary>Em uma cadeia de caracteres de entrada especificada, substitui todas as subcadeias de caracteres que correspondem a uma expressão regular especificada por uma cadeia de caracteres retornada por um delegado <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />. Os parâmetros adicionais especificam opções que modificam a operação de correspondência e um intervalo de tempo limite se nenhuma correspondência é encontrada.</summary>
      <param name="input">A cadeia de caracteres na qual será pesquisada uma correspondência.</param>
      <param name="pattern">O padrão de expressão regular para correspondência.</param>
      <param name="evaluator">Um método personalizado que examina cada correspondência e retorna a cadeia de caracteres correspondida original ou uma cadeia de caracteres de substituição.</param>
      <param name="options">Uma combinação bit a bit dos valores de enumeração que fornecem opções para correspondência.</param>
      <param name="matchTimeout">Um intervalo de tempo limite ou <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> para indicar que o método não deve atingir o tempo limite.</param>
      <returns>Uma nova cadeia de caracteres idêntica à cadeia de caracteres de entrada, com exceção de que a cadeia de caracteres de substituição substitui cada cadeia de caracteres correspondente. Se <paramref name="pattern" /> não tiver uma correspondência na instância atual, o método retornará a instância atual inalterada.</returns>
      <exception cref="T:System.ArgumentException">Ocorreu um erro de análise da expressão regular.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" />, <paramref name="pattern" />ou <paramref name="evaluator" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> não é uma combinação bit a bit válida de valores de <see cref="T:System.Text.RegularExpressions.RegexOptions" />.  

ou - 
<paramref name="matchTimeout" /> é negativo, zero ou maior que aproximadamente 24 dias.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Ocorreu um tempo limite. Para obter mais informações sobre tempos limite, consulte a seção Comentários.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator)">
      <summary>Em uma cadeia de caracteres de entrada especificada, substitui todas as cadeias de caracteres que correspondem a uma expressão regular especificada por uma cadeia de caracteres retornada por um delegado <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />.</summary>
      <param name="input">A cadeia de caracteres na qual será pesquisada uma correspondência.</param>
      <param name="evaluator">Um método personalizado que examina cada correspondência e retorna a cadeia de caracteres correspondida original ou uma cadeia de caracteres de substituição.</param>
      <returns>Uma nova cadeia de caracteres é idêntica à cadeia de entrada, com exceção de que a cadeia de substituição substitui cada cadeia de caracteres correspondente. Se o padrão de expressão regular não tiver uma correspondência na instância atual, o método retornará a instância atual inalterada.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ou <paramref name="evaluator" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Ocorreu um tempo limite. Para obter mais informações sobre tempos limite, consulte a seção Comentários.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32)">
      <summary>Em uma cadeia de caracteres de entrada especificada, substitui um número máximo especificado de cadeias de caracteres que correspondem a um padrão de expressão regular por uma cadeia de caracteres retornada por um delegado <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />.</summary>
      <param name="input">A cadeia de caracteres na qual será pesquisada uma correspondência.</param>
      <param name="evaluator">Um método personalizado que examina cada correspondência e retorna a cadeia de caracteres correspondida original ou uma cadeia de caracteres de substituição.</param>
      <param name="count">O número máximo de vezes que a substituição ocorrerá.</param>
      <returns>Uma nova cadeia de caracteres é idêntica à cadeia de entrada, com exceção de que a cadeia de substituição substitui cada cadeia de caracteres correspondente. Se o padrão de expressão regular não tiver uma correspondência na instância atual, o método retornará a instância atual inalterada.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ou <paramref name="evaluator" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Ocorreu um tempo limite. Para obter mais informações sobre tempos limite, consulte a seção Comentários.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32,System.Int32)">
      <summary>Em uma subcadeia de caracteres de entrada especificada, substitui um número máximo especificado de cadeias de caracteres que correspondem a um padrão de expressão regular por uma cadeia de caracteres retornada por um delegado <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />.</summary>
      <param name="input">A cadeia de caracteres na qual será pesquisada uma correspondência.</param>
      <param name="evaluator">Um método personalizado que examina cada correspondência e retorna a cadeia de caracteres correspondida original ou uma cadeia de caracteres de substituição.</param>
      <param name="count">O número máximo de vezes que a substituição ocorrerá.</param>
      <param name="startat">A posição do caractere na cadeia de caracteres de entrada na qual a pesquisa começa.</param>
      <returns>Uma nova cadeia de caracteres é idêntica à cadeia de entrada, com exceção de que a cadeia de substituição substitui cada cadeia de caracteres correspondente. Se o padrão de expressão regular não tiver uma correspondência na instância atual, o método retornará a instância atual inalterada.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ou <paramref name="evaluator" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startat" /> é menor que zero ou maior que o tamanho de <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Ocorreu um tempo limite. Para obter mais informações sobre tempos limite, consulte a seção Comentários.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.RightToLeft">
      <summary>Obtém um valor que indica se a expressão regular pesquisa da direita para a esquerda.</summary>
      <returns>
        <see langword="true" />se a expressão regular for pesquisada da direita para a esquerda; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.roptions">
      <summary>Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String)">
      <summary>Divide uma cadeia de caracteres de entrada em uma matriz de subcadeias de caracteres nas posições definidas por um padrão de expressão regular especificado no construtor <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
      <param name="input">A cadeia de caracteres a ser dividida.</param>
      <returns>Uma matriz de cadeias de caracteres.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Ocorreu um tempo limite. Para obter mais informações sobre tempos limite, consulte a seção Comentários.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.Int32)">
      <summary>Divide uma cadeia de entrada no número de vezes máximo especificado em uma matriz de subcadeias de caracteres, nas posições definidas por uma expressão regular especificada no construtor <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
      <param name="input">A cadeia de caracteres a ser dividida.</param>
      <param name="count">O número máximo de vezes que a divisão pode ocorrer.</param>
      <returns>Uma matriz de cadeias de caracteres.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Ocorreu um tempo limite. Para obter mais informações sobre tempos limite, consulte a seção Comentários.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.Int32,System.Int32)">
      <summary>Divide uma cadeia de entrada no número de vezes máximo especificado em uma matriz de subcadeias de caracteres, nas posições definidas por uma expressão regular especificada no construtor <see cref="T:System.Text.RegularExpressions.Regex" />. A pesquisa do padrão de expressão regular é iniciada em uma posição de caractere especificada na cadeia de entrada.</summary>
      <param name="input">A cadeia de caracteres a ser dividida.</param>
      <param name="count">O número máximo de vezes que a divisão pode ocorrer.</param>
      <param name="startat">A posição do caractere na cadeia de caracteres de entrada em que a pesquisa será iniciada.</param>
      <returns>Uma matriz de cadeias de caracteres.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startat" /> é menor que zero ou maior que o tamanho de <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Ocorreu um tempo limite. Para obter mais informações sobre tempos limite, consulte a seção Comentários.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String)">
      <summary>Divide uma cadeia de caracteres de entrada em uma matriz de subcadeias de caracteres nas posições definidas por um padrão de expressão regular.</summary>
      <param name="input">A cadeia de caracteres a ser dividida.</param>
      <param name="pattern">O padrão de expressão regular para correspondência.</param>
      <returns>Uma matriz de cadeias de caracteres.</returns>
      <exception cref="T:System.ArgumentException">Ocorreu um erro de análise da expressão regular.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ou <paramref name="pattern" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Ocorreu um tempo limite. Para obter mais informações sobre tempos limite, consulte a seção Comentários.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>Divide uma cadeia de caracteres de entrada em uma matriz de subcadeias de caracteres nas posições definidas por um padrão de expressão regular especificado. As opções especificadas modificam a operação de correspondência.</summary>
      <param name="input">A cadeia de caracteres a ser dividida.</param>
      <param name="pattern">O padrão de expressão regular para correspondência.</param>
      <param name="options">Uma combinação bit a bit dos valores de enumeração que fornece opções para correspondência.</param>
      <returns>Uma matriz de cadeias de caracteres.</returns>
      <exception cref="T:System.ArgumentException">Ocorreu um erro de análise da expressão regular.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ou <paramref name="pattern" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> não é uma combinação bit a bit válida de valores de <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Ocorreu um tempo limite. Para obter mais informações sobre tempos limite, consulte a seção Comentários.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary>Divide uma cadeia de caracteres de entrada em uma matriz de subcadeias de caracteres nas posições definidas por um padrão de expressão regular especificado. Os parâmetros adicionais especificam opções que modificam a operação de correspondência e um intervalo de tempo limite se nenhuma correspondência é encontrada.</summary>
      <param name="input">A cadeia de caracteres a ser dividida.</param>
      <param name="pattern">O padrão de expressão regular para correspondência.</param>
      <param name="options">Uma combinação bit a bit dos valores de enumeração que fornece opções para correspondência.</param>
      <param name="matchTimeout">Um intervalo de tempo limite ou <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> para indicar que o método não deve atingir o tempo limite.</param>
      <returns>Uma matriz de cadeia de caracteres.</returns>
      <exception cref="T:System.ArgumentException">Ocorreu um erro de análise da expressão regular.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ou <paramref name="pattern" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> não é uma combinação bit a bit válida de valores de <see cref="T:System.Text.RegularExpressions.RegexOptions" />.  

ou - 
<paramref name="matchTimeout" /> é negativo, zero ou maior que aproximadamente 24 dias.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Ocorreu um tempo limite. Para obter mais informações sobre tempos limite, consulte a seção Comentários.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Popula um objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> com os dados necessários para desserializar o objeto <see cref="T:System.Text.RegularExpressions.Regex" /> atual.</summary>
      <param name="si">O objeto a ser preenchido com informações de serialização.</param>
      <param name="context">O local para armazenar e recuperar dados serializados. Esse parâmetro está reservado para uso futuro.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.ToString">
      <summary>Retorna o padrão de expressão regular que foi passado para o construtor <see langword="Regex" />.</summary>
      <returns>O parâmetro <paramref name="pattern" /> passado para o construtor <see langword="Regex" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Unescape(System.String)">
      <summary>Converte qualquer caractere de escape na cadeia de caracteres de entrada.</summary>
      <param name="str">A cadeia de caracteres de entrada que contém o texto a ser convertido.</param>
      <returns>Uma cadeia de caracteres com qualquer caractere de escape convertido em sua forma sem escape.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="str" /> inclui uma sequência de escape não reconhecida.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="str" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.UseOptionC">
      <summary>Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <returns>
        <see langword="true" /> se a propriedade <see cref="P:System.Text.RegularExpressions.Regex.Options" /> contiver a opção <see cref="F:System.Text.RegularExpressions.RegexOptions.Compiled" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.UseOptionR">
      <summary>Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <returns>
        <see langword="true" /> se a propriedade <see cref="P:System.Text.RegularExpressions.Regex.Options" /> contiver a opção <see cref="F:System.Text.RegularExpressions.RegexOptions.RightToLeft" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.ValidateMatchTimeout(System.TimeSpan)">
      <summary>Verifique se o intervalo de tempo limite está dentro de um intervalo aceitável.</summary>
      <param name="matchTimeout">O intervalo de tempo limite a ser verificado.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">O tempo limite especificado não está dentro de um intervalo válido.</exception>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexCompilationInfo">
      <summary>Fornece informações sobre uma expressão regular usada para compilar uma expressão regular para um assembly autônomo.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> que contém informações sobre uma expressão regular a ser incluída em um assembly.</summary>
      <param name="pattern">A expressão regular a ser compilada.</param>
      <param name="options">As opções de expressão regular a serem usadas ao compilar a expressão regular.</param>
      <param name="name">O nome do tipo que representa a expressão regular compilada.</param>
      <param name="fullnamespace">O namespace ao qual o novo tipo pertence.</param>
      <param name="ispublic">
        <see langword="true" /> para tornar a expressão regular compilada publicamente visível; caso contrário, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> é <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pattern" /> é <see langword="null" />.  

ou - 
<paramref name="name" /> é <see langword="null" />.  

ou - 
<paramref name="fullnamespace" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> que contém informações sobre uma expressão regular com um valor de tempo limite especificado a ser incluído em um assembly.</summary>
      <param name="pattern">A expressão regular a ser compilada.</param>
      <param name="options">As opções de expressão regular a serem usadas ao compilar a expressão regular.</param>
      <param name="name">O nome do tipo que representa a expressão regular compilada.</param>
      <param name="fullnamespace">O namespace ao qual o novo tipo pertence.</param>
      <param name="ispublic">
        <see langword="true" /> para tornar a expressão regular compilada publicamente visível; caso contrário, <see langword="false" />.</param>
      <param name="matchTimeout">O intervalo de tempo limite padrão para a expressão regular.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> é <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pattern" /> é <see langword="null" />.  

ou - 
<paramref name="name" /> é <see langword="null" />.  

ou - 
<paramref name="fullnamespace" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="matchTimeout" /> é negativo, zero ou maior que aproximadamente 24 dias.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.IsPublic">
      <summary>Obtém ou define um valor que indica se a expressão regular compilada tem visibilidade pública.</summary>
      <returns>
        <see langword="true" />se a expressão regular tiver visibilidade pública; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
      <summary>Obtém ou define o intervalo de tempo limite padrão da expressão regular.</summary>
      <returns>O intervalo de tempo máximo padrão que pode decorrer em uma operação de correspondência de <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> padrões antes que um <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> seja gerado, ou se os tempos limite estiverem desabilitados.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.Name">
      <summary>Obtém ou define o nome do tipo que representa a expressão regular compilada.</summary>
      <returns>O nome do novo tipo.</returns>
      <exception cref="T:System.ArgumentNullException">O valor dessa propriedade é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O valor dessa propriedade é uma cadeia de caracteres vazia.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.Namespace">
      <summary>Obtém ou define o namespace ao qual o novo tipo pertence.</summary>
      <returns>O namespace do novo tipo.</returns>
      <exception cref="T:System.ArgumentNullException">O valor dessa propriedade é <see langword="null" />.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.Options">
      <summary>Obtém ou define as opções a serem usadas ao compilar a expressão regular.</summary>
      <returns>Um combinação bit a bit dos valores de enumeração.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.Pattern">
      <summary>Obtém ou define a expressão regular a ser compilada.</summary>
      <returns>A expressão regular a ser compilada.</returns>
      <exception cref="T:System.ArgumentNullException">O valor dessa propriedade é <see langword="null" />.</exception>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
      <summary>A exceção que é gerada quando o tempo de execução de um método de correspondência de padrão de expressão regular excede o intervalo de tempo limite.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> com uma mensagem fornecida pelo sistema.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> com dados serializados.</summary>
      <param name="info">O objeto que contém os dados serializados.</param>
      <param name="context">O fluxo que contém os dados serializados.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> com a cadeia de caracteres de mensagem especificada.</summary>
      <param name="message">Uma cadeia de caracteres que descreve a exceção.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message">Uma cadeia de caracteres que descreve a exceção.</param>
      <param name="inner">A exceção que é a causa da exceção atual.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.String,System.TimeSpan)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> com informações sobre o padrão de expressão regular, o texto de entrada e o intervalo de tempo limite.</summary>
      <param name="regexInput">O texto de entrada processado pelo mecanismo de expressão regular quando o tempo limite ocorreu.</param>
      <param name="regexPattern">O padrão usado pelo mecanismo de expressão regular quando o tempo limite ocorreu.</param>
      <param name="matchTimeout">O intervalo de tempo limite.</param>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexMatchTimeoutException.Input">
      <summary>Obtém o texto de entrada que o mecanismo de expressão regular estava processando quando o tempo limite ocorreu.</summary>
      <returns>O texto de entrada da expressão regular.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout">
      <summary>Obtém o intervalo de tempo limite para uma correspondência de expressão regular.</summary>
      <returns>O intervalo de tempo limite.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexMatchTimeoutException.Pattern">
      <summary>Obtém o padrão de expressão regular que era usado na operação de correspondência quando o tempo limite ocorreu.</summary>
      <returns>O padrão de expressão regular.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Popula um objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> com os dados necessários para serializar um objeto <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" />.</summary>
      <param name="si">O objeto a ser preenchido com dados.</param>
      <param name="context">O destino dessa serialização.</param>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexOptions">
      <summary>Fornece valores enumerados para definir opções de expressão regular.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.Compiled">
      <summary>Especifica que a expressão regular será compilada em um assembly. Isso leva a uma execução mais rápida, mas aumenta o tempo de inicialização. Esse valor não deve ser atribuído à propriedade <see cref="P:System.Text.RegularExpressions.RegexCompilationInfo.Options" /> ao chamar o método <see cref="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" />. Para obter mais informações, consulte a seção "Expressões regulares compiladas" no tópico Opções de expressão regular.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.CultureInvariant">
      <summary>Especifica que as diferenças culturais no idioma serão ignoradas. Para obter mais informações, consulte a seção "Comparação usando a cultura invariável" no tópico Opções de expressão regular.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.ECMAScript">
      <summary>Habilita o comportamento em conformidad com ECMAScript para a expressão. Esse valor pode ser usado somente em conjunto com os valores <see cref="F:System.Text.RegularExpressions.RegexOptions.IgnoreCase" />, <see cref="F:System.Text.RegularExpressions.RegexOptions.Multiline" /> e <see cref="F:System.Text.RegularExpressions.RegexOptions.Compiled" />. O uso deste valor com qualquer outro valor resulta em uma exceção.  
Para obter mais informações sobre a opção <see cref="F:System.Text.RegularExpressions.RegexOptions.ECMAScript" />, consulte a seção "Comportamento de correspondência ECMAScript" no tópico Opções de expressão regular.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.ExplicitCapture">
      <summary>Especifica que as únicas capturas válidas são grupos explicitamente nomeados ou numerados do formato (?&lt;name&gt;…). Isso permite que parênteses sem nome funcionem como grupos que não são de captura, sem a confusão sintática da expressão (?:...). Para obter mais informações, consulte a seção "Apenas capturas explícitas" no tópico Opções de expressão regular.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.IgnoreCase">
      <summary>Especifica a correspondência sem diferenciação de maiúsculas e minúsculas. Para obter mais informações, consulte a seção "Correspondência sem diferenciação de maiúsculas e minúsculas" no tópico Opções de expressão regular.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.IgnorePatternWhitespace">
      <summary>Elimina um espaço em branco sem escape do padrão e habilita comentários marcados por #. No entanto, esse valor não afeta nem elimina espaços em branco em classes de caracteres, em quantificadores numéricos nem em tokens que marcam o início dos elementos de idioma de expressão regular individuais. Para obter mais informações, consulte a seção "Ignorar espaço em branco" no tópico Opções de expressão regular.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.Multiline">
      <summary>Modo multilinha. Altera o significado de ^ e $ de modo que eles correspondam ao início e ao final, respectivamente, de qualquer linha, e não apenas ao início e ao final da cadeia de caracteres inteira. Para obter mais informações, consulte a seção "Modo multilinha" no tópico Opções de expressão regular.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.None">
      <summary>Especifica que nenhuma opção será definida. Para obter mais informações sobre o comportamento padrão do mecanismo de expressão regular, consulte a seção "Opções padrão" no tópico Opções de expressão regular.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.RightToLeft">
      <summary>Especifica que a pesquisa se moverá da direita para a esquerda, em vez de se mover da esquerda para a direita. Para obter mais informações, consulte a seção "Modo da direita para esquerda" no tópico Opções de expressão regular.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.Singleline">
      <summary>Especifica o modo de linha única. Altera o significado do ponto (.) para que coincida com cada caractere (em vez de cada caractere exceto \n). Para obter mais informações, consulte a seção "Modo de linha única" no tópico Opções de expressão regular.</summary>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexRunner">
      <summary>A classe <see cref="T:System.Text.RegularExpressions.RegexRunner" /> é a classe base par expressões regulares compiladas.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Text.RegularExpressions.RegexRunner" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Capture(System.Int32,System.Int32,System.Int32)">
      <summary>Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="capnum">Um número de captura.</param>
      <param name="start">A posição inicial da captura.</param>
      <param name="end">A posição final da captura.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.CharInClass(System.Char,System.String)">
      <summary>Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />. Determina se um caractere está em uma classe de caractere.</summary>
      <param name="ch">Um caractere a ser testado.</param>
      <param name="charClass">O nome interno de uma classe de caractere.</param>
      <returns>
        <see langword="true" /> se o parâmetro <paramref name="ch" /> está na classe de caractere especificada pelo parâmetro <paramref name="charClass" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.CharInSet(System.Char,System.String,System.String)">
      <summary>Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="ch">Um caractere.</param>
      <param name="set">O conjunto de caracteres.</param>
      <param name="category">A categoria do caractere.</param>
      <returns>Retorna <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.CheckTimeout">
      <summary>Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Crawl(System.Int32)">
      <summary>Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="i">Um número a ser salvo.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Crawlpos">
      <summary>Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <returns>Retorna <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.DoubleCrawl">
      <summary>Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.DoubleStack">
      <summary>Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.DoubleTrack">
      <summary>Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.EnsureStorage">
      <summary>Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.FindFirstChar">
      <summary>Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <returns>Retorna <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Go">
      <summary>Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.InitTrackCount">
      <summary>Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.IsBoundary(System.Int32,System.Int32,System.Int32)">
      <summary>Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="index">A posição de limite possível.</param>
      <param name="startpos">A posição inicial.</param>
      <param name="endpos">A posição final.</param>
      <returns>Retorna <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.IsECMABoundary(System.Int32,System.Int32,System.Int32)">
      <summary>Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="index">A posição de limite ECMA possível.</param>
      <param name="startpos">A posição inicial.</param>
      <param name="endpos">A posição final.</param>
      <returns>Retorna <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.IsMatched(System.Int32)">
      <summary>Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="cap">O número de captura.</param>
      <returns>Retorna <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.MatchIndex(System.Int32)">
      <summary>Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="cap">O número de captura.</param>
      <returns>Retorna <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.MatchLength(System.Int32)">
      <summary>Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="cap">O número de captura.</param>
      <returns>Retorna <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Popcrawl">
      <summary>Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <returns>Retorna <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runcrawl">
      <summary>Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runcrawlpos">
      <summary>Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runmatch">
      <summary>Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runregex">
      <summary>Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runstack">
      <summary>Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runstackpos">
      <summary>Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtext">
      <summary>Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtextbeg">
      <summary>Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtextend">
      <summary>Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtextpos">
      <summary>Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtextstart">
      <summary>Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtrack">
      <summary>Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtrackcount">
      <summary>Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtrackpos">
      <summary>Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Scan(System.Text.RegularExpressions.Regex,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="regex">Uma instância do mecanismo de expressão regular.</param>
      <param name="text">O texto a ser examinado para uma correspondência de padrões.</param>
      <param name="textbeg">A posição inicial com base zero no <paramref name="text" /> em que o mecanismo de expressão regular procura uma correspondência.</param>
      <param name="textend">A posição final com base zero no <paramref name="text" /> em que o mecanismo de expressão regular procura uma correspondência.</param>
      <param name="textstart">A posição inicial com base zero para procurar essa correspondência.</param>
      <param name="prevlen">O número de caracteres na correspondência anterior.</param>
      <param name="quick">
        <see langword="true" /> para pesquisar uma correspondência no modo rápido; caso contrário, <see langword="false" />.</param>
      <returns>Uma correspondência.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Scan(System.Text.RegularExpressions.Regex,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.TimeSpan)">
      <summary>Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="regex">Uma instância do mecanismo de expressão regular.</param>
      <param name="text">O texto a ser examinado para uma correspondência de padrões.</param>
      <param name="textbeg">A posição inicial com base zero no <paramref name="text" /> em que o mecanismo de expressão regular procura uma correspondência.</param>
      <param name="textend">A posição final com base zero no <paramref name="text" /> em que o mecanismo de expressão regular procura uma correspondência.</param>
      <param name="textstart">A posição inicial com base zero para procurar essa correspondência.</param>
      <param name="prevlen">O número de caracteres na correspondência anterior.</param>
      <param name="quick">
        <see langword="true" /> para pesquisar uma correspondência no modo rápido; caso contrário, <see langword="false" />.</param>
      <param name="timeout">O intervalo de tempo limite.</param>
      <returns>Uma correspondência.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.TransferCapture(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="capnum">Um número de captura.</param>
      <param name="uncapnum">Um número de captura salvo.</param>
      <param name="start">A posição inicial.</param>
      <param name="end">A posição final.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Uncapture">
      <summary>Usado por um objeto <see cref="T:System.Text.RegularExpressions.Regex" /> gerado pelo método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexRunnerFactory">
      <summary>Cria uma classe <see cref="T:System.Text.RegularExpressions.RegexRunner" /> para uma expressão regular compilada.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunnerFactory.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Text.RegularExpressions.RegexRunnerFactory" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunnerFactory.CreateInstance">
      <summary>Quando substituído em uma classe derivada, cria um objeto <see cref="T:System.Text.RegularExpressions.RegexRunner" /> para uma expressão regular compilada específica.</summary>
      <returns>Um objeto <see cref="T:System.Text.RegularExpressions.RegexRunner" /> criado para executar um objeto de expressão regular compilada especificada.</returns>
    </member>
  </members>
</doc>