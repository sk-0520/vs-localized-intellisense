<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net.Sockets</name>
  </assembly>
  <members>
    <member name="T:System.Net.Sockets.IOControlCode">
      <summary>Especifica os códigos de controle de E/S com suporte pelo método <see cref="M:System.Net.Sockets.Socket.IOControl(System.Int32,System.Byte[],System.Byte[])" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AbsorbRouterAlert">
      <summary>Esse valor é igual à constante Winsock 2 SIO_ABSORB_RTRALERT.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AddMulticastGroupOnInterface">
      <summary>Ingressar em um grupo de multicast usando uma interface identificada por seu índice. Este código de controle tem suporte nos sistemas operacionais Windows 2000 e posteriores. Esse valor é igual à constante Winsock 2 SIO_INDEX_ADD_MCAST.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AddressListChange">
      <summary>Habilita receber notificação quando a lista de interfaces locais para a família de protocolo do soquete se altera. Este código de controle tem suporte nos sistemas operacionais Windows 2000 e posteriores. Esse valor é igual à constante Winsock 2 SIO_ADDRESS_LIST_CHANGE.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AddressListQuery">
      <summary>Retorna a lista de interfaces locais que pode se associar ao soquete. Este código de controle tem suporte nos sistemas operacionais Windows 2000 e posteriores. Esse valor é igual à constante Winsock 2 SIO_ADDRESS_LIST_QUERY.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AddressListSort">
      <summary>Classifica a estrutura retornada pelo campo <see cref="F:System.Net.Sockets.IOControlCode.AddressListQuery" /> e adicionar informações de identificação de escopo para endereços IPv6. Este código de controle tem suporte nos sistemas operacionais Windows XP e posteriores. Esse valor é igual à constante Winsock 2 SIO_ADDRESS_LIST_SORT.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AssociateHandle">
      <summary>Associe esse soquete com o identificador especificado de uma interface de assistente. Consulte o anexo específico de protocolo apropriado na referência do Winsock 2 ou documentação para a interface particular complementar para obter detalhes adicionais. É recomendável que o modelo de objeto de componente (COM) seja usado em vez deste IOCTL, para descobrir e controlar outras interfaces que possam ter suporte por um soquete. Esse código de controle está presente para fins de compatibilidade com sistemas em que COM não está disponível ou não pode ser usado por algum outro motivo. Esse valor é igual à constante Winsock 2 SIO_ASSOCIATE_HANDLE.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AsyncIO">
      <summary>Habilitar a notificação para quando os dados estão aguardando para serem recebidos. Esse valor é igual à constante Winsock 2 FIOASYNC.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.BindToInterface">
      <summary>Associar o soquete à um índice de interface especificada. Este código de controle tem suporte nos sistemas operacionais Windows 2000 e posteriores. Esse valor é igual à constante Winsock 2 SIO_INDEX_BIND.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.DataToRead">
      <summary>Retorna o número de bytes disponível para leitura. Esse valor é igual à constante Winsock 2 FIONREAD.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.DeleteMulticastGroupFromInterface">
      <summary>Remova o soquete de um grupo de multicast. Este código de controle tem suporte nos sistemas operacionais Windows 2000 e posteriores. Esse valor é igual à constante Winsock 2 SIO_INDEX_ADD_MCAST.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.EnableCircularQueuing">
      <summary>Substitui o datagrama na fila mais antigo com um datagrama de entrada quando as filas de mensagens de entrada estão cheias. Esse valor é igual à constante Winsock 2 SIO_ENABLE_CIRCULAR_QUEUEING.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.Flush">
      <summary>Descarta o conteúdo da fila de envio. Esse valor é igual à constante Winsock 2 SIO_FLUSH.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.GetBroadcastAddress">
      <summary>Retorna uma estrutura SOCKADDR que contém o endereço de difusão da família de endereços de soquete atual. O endereço retornado pode ser usado com o método <see cref="Overload:System.Net.Sockets.Socket.SendTo" />. Esse valor é igual à constante Winsock 2 SIO_GET_BROADCAST_ADDRESS. Esse valor pode ser usado apenas em soquetes do protocolo UDP.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.GetExtensionFunctionPointer">
      <summary>Obter funções específicas do provedor que não fazem parte da especificação do Winsock. Funções são especificadas usando o GUID atribuído pelo provedor. Esse valor é igual à constante Winsock 2 SIO_GET_EXTENSION_FUNCTION_POINTER.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.GetGroupQos">
      <summary>Retorna os atributos de qualidade de serviço (QoS) para o grupo de soquete. Este valor é reservado para uso futuro e é igual à constante Winsock 2 SIO_GET_GROUP_QOS.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.GetQos">
      <summary>Recupere a estrutura QoS associada ao soquete. Esse controle só tem suporte em plataformas que fornecem um transporte compatível com QoS (Windows Me, Windows 2000 e posterior). Esse valor é igual à constante Winsock 2 SIO_GET_QOS.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.KeepAliveValues">
      <summary>Controla envio de pacotes keep-alive do TCP e o intervalo em que eles são enviados. Este código de controle tem suporte nos sistemas operacionais Windows 2000 e posteriores. Para obter mais informações, consulte RFC 1122 seção 4.2.3.6. Esse valor é igual à constante Winsock 2 SIO_KEEPALIVE_VALS.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.LimitBroadcasts">
      <summary>Esse valor é igual à constante Winsock 2 SIO_LIMIT_BROADCASTS.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.MulticastInterface">
      <summary>Define a interface usada para pacotes multicast de saída. A interface é identificada por seu índice. Este código de controle tem suporte nos sistemas operacionais Windows 2000 e posteriores.  Esse valor é igual à constante Winsock 2 SIO_INDEX_MCASTIF.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.MulticastScope">
      <summary>Controla o número de vezes que um pacote de multicast pode ser encaminhado por um roteador, também conhecido como vida útil (TTL) ou a contagem de saltos. Esse valor é igual à constante Winsock 2 SIO_MULTICAST_SCOPE.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.MultipointLoopback">
      <summary>Controla se dados de multicast enviados por soquete aparecem como dados de entrada nos soquetes fila de recebimento. Esse valor é igual à constante Winsock 2 SIO_MULTIPOINT_LOOPBACK.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.NamespaceChange">
      <summary>Controla se o soquete recebe notificação quando uma consulta de namespace se torna inválida. Este código de controle tem suporte nos sistemas operacionais Windows XP e posteriores. Esse valor é igual à constante Winsock 2 SIO_NSP_NOTIFY_CHANGE.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.NonBlockingIO">
      <summary>Controlar o comportamento de bloqueio do soquete. Se o argumento especificado com esse código de controle for zero, o soquete é colocado no modo de bloqueio. Se o argumento for diferente de zero, o soquete será colocado no modo sem bloqueio. Esse valor é igual à constante Winsock 2 FIONBIO.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.OobDataRead">
      <summary>Retorna informações sobre dados out-of-band aguardando para serem recebidos. Ao usar esse código de controle em soquetes de fluxo, o valor retornado indica o número de bytes disponíveis.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.QueryTargetPnpHandle">
      <summary>Recupera o identificador de SOQUETE do provedor subjacente. Esse identificador pode ser usado para receber uma notificação de evento de plug-and-play. Este código de controle tem suporte nos sistemas operacionais Windows 2000 e posteriores. Esse valor é igual à constante Winsock 2 SIO_QUERY_TARGET_PNP_HANDLE.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.ReceiveAll">
      <summary>Habilita o recebimento de todos os pacotes IPv4 na rede. O soquete deve ter a família de endereço <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />, o tipo de soquete deve ser <see cref="F:System.Net.Sockets.SocketType.Raw" /> e o tipo de protocolo deve ser <see cref="F:System.Net.Sockets.ProtocolType.IP" />. O usuário atual deve pertencer ao grupo Administradores no computador local e o soquete deve ser associado a uma porta específica. Este código de controle tem suporte nos sistemas operacionais Windows 2000 e posteriores. Esse valor é igual à constante Winsock 2 SIO_RCVALL.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.ReceiveAllIgmpMulticast">
      <summary>Habilita o recebimento de todos os pacotes de Internet Group Management Protocol (IGMP) na rede. O soquete deve ter a família de endereço <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />, o tipo de soquete deve ser <see cref="F:System.Net.Sockets.SocketType.Raw" />e o tipo de protocolo deve ser <see cref="F:System.Net.Sockets.ProtocolType.Igmp" />. O usuário atual deve pertencer ao grupo Administradores no computador local e o soquete deve ser associado a uma porta específica. Este código de controle tem suporte nos sistemas operacionais Windows 2000 e posteriores. Esse valor é igual à constante Winsock 2 SIO_RCVALL_IGMPMCAST.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.ReceiveAllMulticast">
      <summary>Habilita o recebimento de todos os pacotes IPv4 multicast na rede. Estes são os pacotes com endereços de destino no intervalo de 224.0.0.0 a 239.255.255.255. O soquete deve ter a família de endereço <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />, o tipo de soquete deve ser <see cref="F:System.Net.Sockets.SocketType.Raw" /> e o tipo de protocolo deve ser <see cref="F:System.Net.Sockets.ProtocolType.Udp" />. O usuário atual deve pertencer ao grupo Administradores no computador local e o soquete deve ser associado a uma porta específica. Este código de controle tem suporte nos sistemas operacionais Windows 2000 e posteriores. Esse valor é igual à constante Winsock 2 SIO_RCVALL_MCAST.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.RoutingInterfaceChange">
      <summary>Habilita o recebimento de notificações quando a interface local usada para acessar um alterações de ponto de extremidade remoto. Esse valor é igual à constante Winsock 2 SIO_ROUTING_INTERFACE_CHANGE.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.RoutingInterfaceQuery">
      <summary>Retorna os endereços de interface que podem ser usados para se conectar ao endereço remoto especificado. Esse valor é igual à constante Winsock 2 SIO_ROUTING_INTERFACE_QUERY.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.SetGroupQos">
      <summary>Define os atributos de qualidade de serviço (QoS) para o grupo de soquete. Esse valor é reservado para uso futuro e é igual à constante Winsock 2 SIO_SET_GROUP_QOS.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.SetQos">
      <summary>Define os atributos de qualidade de serviço (QoS) para o soquete. QoS define os requisitos de largura de banda para o soquete. Este código de controle tem suporte nos sistemas operacionais Windows 2000, Me e posteriores. Esse valor é igual à constante Winsock 2 SIO_SET_QOS.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.TranslateHandle">
      <summary>Retorna um identificador para o soquete que é válido no contexto de uma interface de assistente. Esse valor é igual à constante Winsock 2 SIO_TRANSLATE_HANDLE.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.UnicastInterface">
      <summary>Defina a interface usada para pacotes unicast de saída. Esse valor é igual à constante Winsock 2 SIO_UCAST_IF.</summary>
    </member>
    <member name="T:System.Net.Sockets.IPPacketInformation">
      <summary>Apresenta as informações de pacote de uma chamada para <see cref="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> ou <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" />.</summary>
    </member>
    <member name="P:System.Net.Sockets.IPPacketInformation.Address">
      <summary>Obtém as informações de origem do pacote recebido como resultado de chamar o método <see cref="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> ou o método <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" />.</summary>
      <returns>Um <see cref="T:System.Net.IPAddress" /> que indica as informações de origem do pacote que foi recebido como resultado da chamada do <see cref="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> método ou <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> do método. Para pacotes que foram enviados de um endereço unicast, <see cref="P:System.Net.Sockets.IPPacketInformation.Address" /> a propriedade retornará o <see cref="T:System.Net.IPAddress" /> do remetente; para pacotes multicast ou broadcast, a <see cref="P:System.Net.Sockets.IPPacketInformation.Address" /> propriedade retornará o multicast ou a difusão <see cref="T:System.Net.IPAddress" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.IPPacketInformation.Equals(System.Object)">
      <summary>Retorna um valor que indica se essa instância é igual a um objeto especificado.</summary>
      <param name="comparand">O objeto a ser comparado com essa instância.</param>
      <returns>
        <see langword="true" /> se <paramref name="comparand" /> é uma instância de <see cref="T:System.Net.Sockets.IPPacketInformation" /> e é igual ao valor da instância; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.IPPacketInformation.GetHashCode">
      <summary>Retorna o código hash para essa instância.</summary>
      <returns>Um código hash Int32.</returns>
    </member>
    <member name="P:System.Net.Sockets.IPPacketInformation.Interface">
      <summary>Obtém as informações do adaptador de rede que estão associadas uma chamada para <see cref="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> ou <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" />.</summary>
      <returns>Um <see cref="T:System.Int32" /> valor, que representa o índice da interface de rede. Você pode usar esse índice com <see cref="M:System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces" /> para obter mais informações sobre a interface relevante.</returns>
    </member>
    <member name="M:System.Net.Sockets.IPPacketInformation.op_Equality(System.Net.Sockets.IPPacketInformation,System.Net.Sockets.IPPacketInformation)">
      <summary>Testa se duas instâncias de <see cref="T:System.Net.Sockets.IPPacketInformation" /> especificadas são equivalentes.</summary>
      <param name="packetInformation1">A instância de <see cref="T:System.Net.Sockets.IPPacketInformation" /> que está à esquerda do operador de igualdade.</param>
      <param name="packetInformation2">A instância de <see cref="T:System.Net.Sockets.IPPacketInformation" /> que está à direita do operador de igualdade.</param>
      <returns>
        <see langword="true" /> se <paramref name="packetInformation1" /> e <paramref name="packetInformation2" /> forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.IPPacketInformation.op_Inequality(System.Net.Sockets.IPPacketInformation,System.Net.Sockets.IPPacketInformation)">
      <summary>Testa se duas instâncias de <see cref="T:System.Net.Sockets.IPPacketInformation" /> especificadas não são iguais.</summary>
      <param name="packetInformation1">A instância de <see cref="T:System.Net.Sockets.IPPacketInformation" /> que está à esquerda do operador de desigualdade.</param>
      <param name="packetInformation2">A instância de <see cref="T:System.Net.Sockets.IPPacketInformation" /> que está à direita do operador de desigualdade.</param>
      <returns>
        <see langword="true" /> se <paramref name="packetInformation1" /> e <paramref name="packetInformation2" /> forem diferentes; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Sockets.IPProtectionLevel">
      <summary>Um valor que permite que a restrição de um soquete IPv6 a um escopo especificado, tal como endereços com o mesmo prefixo link-local ou site-local.</summary>
    </member>
    <member name="F:System.Net.Sockets.IPProtectionLevel.EdgeRestricted">
      <summary>O nível de proteção de IP tem restrição de borda. Esse valor seria usado por aplicativos projetados para operar pela Internet. Essa configuração não permite a passagem de NAT (conversão de endereços de rede) usando a implementação do Windows Teredo. Esses aplicativos podem ignorar firewalls IPv4, de modo que os aplicativos devem ser protegidos contra ataques de Internet direcionados à porta aberta. No Windows Server 2003 e Windows XP, o valor padrão para o nível de proteção de IP em um soquete tem restrição de borda.</summary>
    </member>
    <member name="F:System.Net.Sockets.IPProtectionLevel.Restricted">
      <summary>O nível de proteção de IP é restrito. Esse valor será usado por aplicativos de intranet que não implementam cenários de Internet. Esses aplicativos geralmente não são testados nem protegidos contra ataques do estilo usado na Internet. Essa configuração limitará o tráfego recebido para apenas link-local.</summary>
    </member>
    <member name="F:System.Net.Sockets.IPProtectionLevel.Unrestricted">
      <summary>O nível de proteção de IP é irrestrito. Esse valor seria usado por aplicativos projetados para operar com a Internet, incluindo os aplicativos que aproveitam os recursos de passagem NAT IPv6 internos no Windows (Teredo, por exemplo). Esses aplicativos podem ignorar firewalls IPv4, de modo que os aplicativos devem ser protegidos contra ataques de Internet direcionados à porta aberta. No Windows Server 2008 R2 e Windows Vista, o valor padrão para o nível de proteção de IP em um soquete é irrestrito.</summary>
    </member>
    <member name="F:System.Net.Sockets.IPProtectionLevel.Unspecified">
      <summary>O nível de proteção de IP não é especificado. No Windows 7 e Windows Server 2008 R2, o valor padrão para o nível de proteção de IP em um soquete é não especificado.</summary>
    </member>
    <member name="T:System.Net.Sockets.IPv6MulticastOption">
      <summary>Contém valores de opção para ingressar em um grupo de multicast IPv6.</summary>
    </member>
    <member name="M:System.Net.Sockets.IPv6MulticastOption.#ctor(System.Net.IPAddress)">
      <summary>Inicializa uma nova versão da classe <see cref="T:System.Net.Sockets.IPv6MulticastOption" /> para o grupo de multicast do IP especificado.</summary>
      <param name="group">O <see cref="T:System.Net.IPAddress" /> do grupo de multicast.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="group" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.IPv6MulticastOption.#ctor(System.Net.IPAddress,System.Int64)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Sockets.IPv6MulticastOption" /> com o grupo de multicast de IP especificado e o endereço da interface local.</summary>
      <param name="group">O <see cref="T:System.Net.IPAddress" /> do grupo.</param>
      <param name="ifindex">O endereço da interface local.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ifindex" /> é menor que 0.  

ou - 
<paramref name="ifindex" /> é maior que 0x00000000FFFFFFFF.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="group" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.Net.Sockets.IPv6MulticastOption.Group">
      <summary>Obtém ou define o endereço IP de um grupo de multicast.</summary>
      <returns>Um <see cref="T:System.Net.IPAddress" /> que contém o endereço de Internet de um grupo de multicast.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="group" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.Net.Sockets.IPv6MulticastOption.InterfaceIndex">
      <summary>Obtém ou define o índice de interface que está associado a um grupo de multicast.</summary>
      <returns>Um <see cref="T:System.UInt64" /> valor que especifica o endereço da interface.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">O valor especificado para uma operação de conjuntos é menor que 0 ou maior que 0x00000000FFFFFFFF.</exception>
    </member>
    <member name="T:System.Net.Sockets.LingerOption">
      <summary>Especifica se um <see cref="T:System.Net.Sockets.Socket" /> permanecerá conectado após chamar os métodos <see cref="M:System.Net.Sockets.Socket.Close" /> ou <see cref="M:System.Net.Sockets.TcpClient.Close" /> e o período de tempo que ele permanecerá conectado, se ainda houver dados para serem enviados.</summary>
    </member>
    <member name="M:System.Net.Sockets.LingerOption.#ctor(System.Boolean,System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Sockets.LingerOption" />.</summary>
      <param name="enable">
        <see langword="true" /> para permanecer conectado após o método <see cref="M:System.Net.Sockets.Socket.Close" /> ser chamado; caso contrário, <see langword="false" />.</param>
      <param name="seconds">O número de segundos a permanecer conectado após o método <see cref="M:System.Net.Sockets.Socket.Close" /> ser chamado.</param>
    </member>
    <member name="P:System.Net.Sockets.LingerOption.Enabled">
      <summary>Obtém ou define um valor que indica se é necessário permanecer após o <see cref="T:System.Net.Sockets.Socket" /> ser fechado.</summary>
      <returns>
        <see langword="true" />Se o <see cref="T:System.Net.Sockets.Socket" /> for remanescente <see cref="M:System.Net.Sockets.Socket.Close" /> após ser chamado; caso <see langword="false" />contrário,.</returns>
    </member>
    <member name="P:System.Net.Sockets.LingerOption.LingerTime">
      <summary>Obtém ou define a quantidade de tempo para permanecer conectado após a chamada ao método <see cref="M:System.Net.Sockets.Socket.Close" /> se os dados ainda precisam ser enviados.</summary>
      <returns>O tempo, em segundos, para permanecer conectado depois de chamar <see cref="M:System.Net.Sockets.Socket.Close" />.</returns>
    </member>
    <member name="T:System.Net.Sockets.MulticastOption">
      <summary>Contém valores <see cref="T:System.Net.IPAddress" /> usados para unir e soltar grupos de multicast.</summary>
    </member>
    <member name="M:System.Net.Sockets.MulticastOption.#ctor(System.Net.IPAddress)">
      <summary>Inicializa uma nova versão da classe <see cref="T:System.Net.Sockets.MulticastOption" /> para o grupo de multicast do IP especificado.</summary>
      <param name="group">O <see cref="T:System.Net.IPAddress" /> do grupo de multicast.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="group" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.MulticastOption.#ctor(System.Net.IPAddress,System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Sockets.MulticastOption" /> com o endereço de grupo de multicast IP e índice de interface especificados.</summary>
      <param name="group">O <see cref="T:System.Net.IPAddress" /> do grupo de multicast.</param>
      <param name="interfaceIndex">O índice da interface que é usada para enviar e receber pacotes multicast.</param>
    </member>
    <member name="M:System.Net.Sockets.MulticastOption.#ctor(System.Net.IPAddress,System.Net.IPAddress)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Sockets.MulticastOption" /> com o endereço de grupo de multicast IP especificado e o endereço IP local associado a um adaptador de rede.</summary>
      <param name="group">O <see cref="T:System.Net.IPAddress" /> do grupo.</param>
      <param name="mcint">O <see cref="T:System.Net.IPAddress" /> local.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="group" /> é <see langword="null" />.  

ou - 
<paramref name="mcint" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.Net.Sockets.MulticastOption.Group">
      <summary>Obtém ou define o endereço IP de um grupo de multicast.</summary>
      <returns>Um <see cref="T:System.Net.IPAddress" /> que contém o endereço de Internet de um grupo de multicast.</returns>
    </member>
    <member name="P:System.Net.Sockets.MulticastOption.InterfaceIndex">
      <summary>Obtém ou define o índice da interface que é usada para enviar e receber pacotes multicast.</summary>
      <returns>Um inteiro que representa o índice de um <see cref="T:System.Net.NetworkInformation.NetworkInterface" /> elemento de matriz.</returns>
    </member>
    <member name="P:System.Net.Sockets.MulticastOption.LocalAddress">
      <summary>Obtém ou define o endereço local associado a um grupo de multicast.</summary>
      <returns>Um <see cref="T:System.Net.IPAddress" /> que contém o endereço local associado a um grupo de multicast.</returns>
    </member>
    <member name="T:System.Net.Sockets.NetworkStream">
      <summary>Fornece o fluxo de dados subjacente para acesso à rede.</summary>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket)">
      <summary>Cria uma nova instância da classe <see cref="T:System.Net.Sockets.NetworkStream" /> para o <see cref="T:System.Net.Sockets.Socket" /> especificado.</summary>
      <param name="socket">O <see cref="T:System.Net.Sockets.Socket" /> que o <see cref="T:System.Net.Sockets.NetworkStream" /> usará para enviar e receber dados.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="socket" /> é <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException">O parâmetro <paramref name="socket" /> não está conectado.  

ou - 
A propriedade <see cref="P:System.Net.Sockets.Socket.SocketType" /> do parâmetro <paramref name="socket" /> não é <see cref="F:System.Net.Sockets.SocketType.Stream" />.  

ou - 
O parâmetro <paramref name="socket" /> está em um estado sem bloqueio.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Sockets.NetworkStream" /> para o <see cref="T:System.Net.Sockets.Socket" /> especificado com a propriedade <see cref="T:System.Net.Sockets.Socket" /> especificada.</summary>
      <param name="socket">O <see cref="T:System.Net.Sockets.Socket" /> que o <see cref="T:System.Net.Sockets.NetworkStream" /> usará para enviar e receber dados.</param>
      <param name="ownsSocket">Defina como <see langword="true" /> para indicar que o <see cref="T:System.Net.Sockets.NetworkStream" /> assumirá a propriedade do <see cref="T:System.Net.Sockets.Socket" />; caso contrário, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="socket" /> é <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException">O parâmetro <paramref name="socket" /> não está conectado.  

ou - 
O valor da propriedade <see cref="P:System.Net.Sockets.Socket.SocketType" /> do parâmetro <paramref name="socket" /> não é <see cref="F:System.Net.Sockets.SocketType.Stream" />.  

ou - 
O parâmetro <paramref name="socket" /> está em um estado sem bloqueio.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.IO.FileAccess)">
      <summary>Cria uma nova instância da classe <see cref="T:System.Net.Sockets.NetworkStream" /> para o <see cref="T:System.Net.Sockets.Socket" /> especificado com os direitos de acesso especificados.</summary>
      <param name="socket">O <see cref="T:System.Net.Sockets.Socket" /> que o <see cref="T:System.Net.Sockets.NetworkStream" /> usará para enviar e receber dados.</param>
      <param name="access">Uma combinação bit a bit dos valores <see cref="T:System.IO.FileAccess" /> que especificam o tipo de acesso fornecido ao <see cref="T:System.Net.Sockets.NetworkStream" /> no <see cref="T:System.Net.Sockets.Socket" /> fornecido.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="socket" /> é <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException">O parâmetro <paramref name="socket" /> não está conectado.  

ou - 
A propriedade <see cref="P:System.Net.Sockets.Socket.SocketType" /> do parâmetro <paramref name="socket" /> não é <see cref="F:System.Net.Sockets.SocketType.Stream" />.  

ou - 
O parâmetro <paramref name="socket" /> está em um estado sem bloqueio.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.IO.FileAccess,System.Boolean)">
      <summary>Cria uma nova instância da classe <see cref="T:System.Net.Sockets.NetworkStream" /> para o <see cref="T:System.Net.Sockets.Socket" /> especificado com os direitos de acesso e a propriedade <see cref="T:System.Net.Sockets.Socket" /> especificados.</summary>
      <param name="socket">O <see cref="T:System.Net.Sockets.Socket" /> que o <see cref="T:System.Net.Sockets.NetworkStream" /> usará para enviar e receber dados.</param>
      <param name="access">Uma combinação bit a bit dos valores <see cref="T:System.IO.FileAccess" /> que especificam o tipo de acesso fornecido ao <see cref="T:System.Net.Sockets.NetworkStream" /> no <see cref="T:System.Net.Sockets.Socket" /> fornecido.</param>
      <param name="ownsSocket">Defina como <see langword="true" /> para indicar que o <see cref="T:System.Net.Sockets.NetworkStream" /> assumirá a propriedade do <see cref="T:System.Net.Sockets.Socket" />; caso contrário, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="socket" /> é <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException">O parâmetro <paramref name="socket" /> não está conectado.  

ou - 
A propriedade <see cref="P:System.Net.Sockets.Socket.SocketType" /> do parâmetro <paramref name="socket" /> não é <see cref="F:System.Net.Sockets.SocketType.Stream" />.  

ou - 
O parâmetro <paramref name="socket" /> está em um estado sem bloqueio.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Inicia uma leitura assíncrona do <see cref="T:System.Net.Sockets.NetworkStream" />.</summary>
      <param name="buffer">Uma matriz do tipo <see cref="T:System.Byte" /> que é o local na memória onde os dados lidos de <see cref="T:System.Net.Sockets.NetworkStream" /> serão armazenados.</param>
      <param name="offset">O local em <paramref name="buffer" /> para começar a armazenar os dados.</param>
      <param name="size">O número de bytes a serem lidos de <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
      <param name="callback">O delegado <see cref="T:System.AsyncCallback" /> que é executado quando <see cref="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> é concluído.</param>
      <param name="state">Um objeto que contém dados adicionais definidos pelo usuário.</param>
      <returns>Um <see cref="T:System.IAsyncResult" /> que representa a chamada assíncrona.</returns>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O parâmetro <paramref name="offset" /> é menor que 0.  

ou - 
O parâmetro <paramref name="offset" /> é maior que o tamanho do parâmetro <paramref name="buffer" />.  

ou - 
O <paramref name="size" /> é menor que 0.  

ou - 
O <paramref name="size" /> é maior que o tamanho da subtração de <paramref name="buffer" /> e do valor do parâmetro <paramref name="offset" />.</exception>
      <exception cref="T:System.IO.IOException">O <see cref="T:System.Net.Sockets.Socket" /> subjacente está fechado.  

ou - 
Houve uma falha durante a leitura da rede.  

ou - 
Ocorreu um erro ao acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.NetworkStream" /> está fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Inicia uma gravação assíncrona em um fluxo.</summary>
      <param name="buffer">Uma matriz do tipo <see cref="T:System.Byte" /> que contém os dados a serem gravados no <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
      <param name="offset">O local em <paramref name="buffer" /> para onde começar a enviar os dados.</param>
      <param name="size">O número de bytes a serem gravados no <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
      <param name="callback">O delegado <see cref="T:System.AsyncCallback" /> que é executado quando <see cref="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> é concluído.</param>
      <param name="state">Um objeto que contém dados adicionais definidos pelo usuário.</param>
      <returns>Um <see cref="T:System.IAsyncResult" /> que representa a chamada assíncrona.</returns>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O parâmetro <paramref name="offset" /> é menor que 0.  

ou - 
O parâmetro <paramref name="offset" /> é maior que o tamanho de <paramref name="buffer" />.  

ou - 
O parâmetro <paramref name="size" /> é menor que 0.  

ou - 
O parâmetro <paramref name="size" /> é maior que o tamanho de <paramref name="buffer" /> subtraído do valor do parâmetro <paramref name="offset" />.</exception>
      <exception cref="T:System.IO.IOException">O <see cref="T:System.Net.Sockets.Socket" /> subjacente está fechado.  

ou - 
Houve uma falha durante a gravação na rede.  

ou - 
Ocorreu um erro ao acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.NetworkStream" /> está fechado.</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.CanRead">
      <summary>Obtém um valor que indica se o <see cref="T:System.Net.Sockets.NetworkStream" /> dá suporte à leitura.</summary>
      <returns>
        <see langword="true" /> se os dados puderem ser lidos do fluxo; caso contrário, <see langword="false" />. O valor padrão é <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.CanSeek">
      <summary>Obtém um valor que indica se o fluxo dá suporte à busca. Atualmente, não há suporte para essa propriedade. Essa propriedade sempre retorna <see langword="false" />.</summary>
      <returns>
        <see langword="false" />em todos os casos, para <see cref="T:System.Net.Sockets.NetworkStream" /> indicar que o não pode buscar um local específico no fluxo.</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.CanTimeout">
      <summary>Indica se as propriedades de tempo limite são utilizáveis para <see cref="T:System.Net.Sockets.NetworkStream" />.</summary>
      <returns>
        <see langword="true" /> em todos os casos.</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.CanWrite">
      <summary>Obtém um valor que indica se o <see cref="T:System.Net.Sockets.NetworkStream" /> dá suporte à gravação.</summary>
      <returns>
        <see langword="true" /> se os dados puderem ser gravados no <see cref="T:System.Net.Sockets.NetworkStream" />; caso contrário, <see langword="false" />. O valor padrão é <see langword="true" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Close(System.Int32)">
      <summary>Fecha o <see cref="T:System.Net.Sockets.NetworkStream" /> após aguardar o tempo especificado para permitir que os dados sejam enviados.</summary>
      <param name="timeout">Um inteiro com sinal de 32 bits que especifica o número de milissegundos para aguardar o envio dos dados restantes antes de fechar.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">O parâmetro <paramref name="timeout" /> é menor que -1.</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.DataAvailable">
      <summary>Obtém um valor que indica se há dados disponíveis no <see cref="T:System.Net.Sockets.NetworkStream" /> a ser lido.</summary>
      <returns>
        <see langword="true" /> se houver dados disponíveis no fluxo a ser lido; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.NetworkStream" /> está fechado.</exception>
      <exception cref="T:System.IO.IOException">O <see cref="T:System.Net.Sockets.Socket" /> subjacente está fechado.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Use a propriedade <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> para obter o código de erro específico e confira a documentação de códigos de erro da API da versão 2 do Windows Sockets para obter uma descrição detalhada do erro.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados usados pelo <see cref="T:System.Net.Sockets.NetworkStream" /> e opcionalmente libera os recursos gerenciados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.EndRead(System.IAsyncResult)">
      <summary>Manipula o final de uma leitura assíncrona.</summary>
      <param name="asyncResult">Um <see cref="T:System.IAsyncResult" /> que representa uma chamada assíncrona.</param>
      <returns>O número de bytes lidos de <see cref="T:System.Net.Sockets.NetworkStream" />.</returns>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="asyncResult" /> é <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException">O <see cref="T:System.Net.Sockets.Socket" /> subjacente está fechado.  

ou - 
Ocorreu um erro ao acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.NetworkStream" /> está fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.EndWrite(System.IAsyncResult)">
      <summary>Manipula o final de uma gravação assíncrona.</summary>
      <param name="asyncResult">O <see cref="T:System.IAsyncResult" /> que representa a chamada assíncrona.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="asyncResult" /> é <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException">O <see cref="T:System.Net.Sockets.Socket" /> subjacente está fechado.  

ou - 
Ocorreu um erro ao gravar na rede.  

ou - 
Ocorreu um erro ao acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.NetworkStream" /> está fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Finalize">
      <summary>Libera todos os recursos usados pelo <see cref="T:System.Net.Sockets.NetworkStream" />.</summary>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Flush">
      <summary>Libera os dados do fluxo. Este método está reservado para uso futuro.</summary>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.FlushAsync(System.Threading.CancellationToken)">
      <summary>Libera os dados do fluxo como uma operação assíncrona.</summary>
      <param name="cancellationToken">Um token de cancelamento usado para propagar a notificação de que essa operação deve ser cancelada.</param>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.Length">
      <summary>Obtém o tamanho dos dados disponíveis no fluxo. Atualmente, esta propriedade não tem suporte e sempre gera um <see cref="T:System.NotSupportedException" />.</summary>
      <returns>O tamanho dos dados disponíveis no fluxo.</returns>
      <exception cref="T:System.NotSupportedException">Qualquer uso dessa propriedade.</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.Position">
      <summary>Obtém ou define a posição atual no fluxo. Atualmente, esta propriedade não tem suporte e sempre gera um <see cref="T:System.NotSupportedException" />.</summary>
      <returns>A posição atual no fluxo.</returns>
      <exception cref="T:System.NotSupportedException">Qualquer uso dessa propriedade.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>Lê dados do <see cref="T:System.Net.Sockets.NetworkStream" /> e os armazena em uma matriz de bytes.</summary>
      <param name="buffer">Uma matriz do tipo <see cref="T:System.Byte" /> que é o local na memória onde os dados lidos de <see cref="T:System.Net.Sockets.NetworkStream" /> serão armazenados.</param>
      <param name="offset">O local em <paramref name="buffer" /> onde os dados começarão a ser armazenados.</param>
      <param name="size">O número de bytes a serem lidos de <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
      <returns>O número de bytes lidos de <see cref="T:System.Net.Sockets.NetworkStream" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> é menor que 0.  

ou - 
<paramref name="offset" /> é maior que o comprimento do <paramref name="buffer" />.  

ou - 
<paramref name="size" /> é menor que 0.  

ou - 
<paramref name="size" /> é maior que o tamanho de <paramref name="buffer" /> menos <paramref name="offset" />.</exception>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Net.Sockets.NetworkStream" /> não dá suporte à leitura.</exception>
      <exception cref="">Ocorreu um erro ao acessar o soquete.

ou -

Ocorreu uma falha de leitura da rede.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.NetworkStream" /> está fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Read(System.Span{System.Byte})">
      <summary>Lê dados do <see cref="T:System.Net.Sockets.NetworkStream" /> e os armazena em um intervalo de bytes na memória.</summary>
      <param name="buffer">Uma região de memória para armazenar dados lidos do <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
      <returns>O número de bytes lidos de <see cref="T:System.Net.Sockets.NetworkStream" />.</returns>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Net.Sockets.NetworkStream" /> não dá suporte à leitura.</exception>
      <exception cref="">Ocorreu um erro ao acessar o soquete.

ou -

Ocorreu uma falha de leitura da rede.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.NetworkStream" /> está fechado.</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.Readable">
      <summary>Obtém ou define um valor que indica se o <see cref="T:System.Net.Sockets.NetworkStream" /> pode ser lido.</summary>
      <returns>
        <see langword="true" /> para indicar que o <see cref="T:System.Net.Sockets.NetworkStream" /> pode ser lido; caso contrário, <see langword="false" />. O valor padrão é <see langword="true" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>Lê dados do <see cref="T:System.Net.Sockets.NetworkStream" /> e os armazena em um intervalo especificado de uma matriz de bytes como uma operação assíncrona.</summary>
      <param name="buffer">O buffer no qual os dados serão gravados.</param>
      <param name="offset">O local em <paramref name="buffer" /> onde os dados começarão a ser armazenados.</param>
      <param name="size">O número de bytes a serem lidos de <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
      <param name="cancellationToken">O token a se monitorar para solicitações de cancelamento.</param>
      <returns>Uma tarefa que representa a operação de leitura assíncrona. O valor de sua propriedade <see cref="P:System.Threading.Tasks.Task`1.Result" /> contém o número total de bytes lidos no <paramref name="buffer" />.</returns>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Net.Sockets.NetworkStream" /> não dá suporte à leitura.</exception>
      <exception cref="">Ocorreu um erro ao acessar o soquete.

ou -

Ocorreu uma falha de leitura da rede.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.NetworkStream" /> está fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <summary>Lê dados do <see cref="T:System.Net.Sockets.NetworkStream" /> e os armazena em um intervalo de memória de bytes como uma operação assíncrona.</summary>
      <param name="buffer">O buffer no qual os dados serão gravados.</param>
      <param name="cancellationToken">O token a se monitorar para solicitações de cancelamento.</param>
      <returns>Um <see cref="T:System.Threading.Tasks.ValueTask`1" /> que representa a operação de leitura assíncrona. O valor de sua propriedade <see cref="P:System.Threading.Tasks.ValueTask`1.Result" /> contém o número total de bytes lidos no <paramref name="buffer" />.</returns>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Net.Sockets.NetworkStream" /> não dá suporte à leitura.</exception>
      <exception cref="">Ocorreu um erro ao acessar o soquete.

ou -

Ocorreu uma falha de leitura da rede.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.NetworkStream" /> está fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.ReadByte">
      <summary>Lê um byte do <see cref="T:System.Net.Sockets.NetworkStream" /> e avança a posição no fluxo em um byte ou retorna -1 caso esteja no final do fluxo.</summary>
      <returns>O byte sem sinal convertido em um <see langword="Int32" /> ou -1 se o final do fluxo for atingido.</returns>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Net.Sockets.NetworkStream" /> não dá suporte à leitura.</exception>
      <exception cref="">Ocorreu um erro ao acessar o soquete.

ou -

Ocorreu uma falha de leitura da rede.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.NetworkStream" /> está fechado.</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.ReadTimeout">
      <summary>Obtém ou define a quantidade de tempo que uma operação de leitura é bloqueada aguardando dados.</summary>
      <returns>Um <see cref="T:System.Int32" /> que especifica o período, em milissegundos, que decorrerá antes da falha de uma operação de leitura. O valor padrão, <see cref="F:System.Threading.Timeout.Infinite" />, especifica que a operação de leitura não atinge o tempo limite.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">O valor especificado é menor ou igual a zero e não é <see cref="F:System.Threading.Timeout.Infinite" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>Define a posição atual do fluxo para o valor especificado. Atualmente, este método não tem suporte e sempre gera um <see cref="T:System.NotSupportedException" />.</summary>
      <param name="offset">Este parâmetro não é usado.</param>
      <param name="origin">Este parâmetro não é usado.</param>
      <returns>A posição no fluxo.</returns>
      <exception cref="T:System.NotSupportedException">Qualquer uso dessa propriedade.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.SetLength(System.Int64)">
      <summary>Define o comprimento do fluxo. Esse método sempre gera um <see cref="T:System.NotSupportedException" />.</summary>
      <param name="value">Este parâmetro não é usado.</param>
      <exception cref="T:System.NotSupportedException">Qualquer uso dessa propriedade.</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.Socket">
      <summary>Obtém o <see cref="T:System.Net.Sockets.Socket" /> subjacente.</summary>
      <returns>Um <see cref="T:System.Net.Sockets.Socket" /> que representa a conexão de rede subjacente.</returns>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>Grava dados no <see cref="T:System.Net.Sockets.NetworkStream" /> de um intervalo especificado de uma matriz de bytes.</summary>
      <param name="buffer">Uma matriz do tipo <see cref="T:System.Byte" /> que contém os dados a serem gravados no <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
      <param name="offset">O local no <paramref name="buffer" /> do qual a gravação de dados será iniciada.</param>
      <param name="size">O número de bytes a serem gravados no <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O parâmetro <paramref name="offset" /> é menor que 0.  

ou - 
O parâmetro <paramref name="offset" /> é maior que o tamanho de <paramref name="buffer" />.  

ou - 
O parâmetro <paramref name="size" /> é menor que 0.  

ou - 
O parâmetro <paramref name="size" /> é maior que o tamanho de <paramref name="buffer" /> subtraído do valor do parâmetro <paramref name="offset" />.</exception>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Net.Sockets.NetworkStream" /> não dá suporte à gravação.</exception>
      <exception cref="T:System.IO.IOException">Ocorreu um erro ao acessar o soquete.

ou -

Houve uma falha durante a gravação na rede.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.NetworkStream" /> está fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Write(System.ReadOnlySpan{System.Byte})">
      <summary>Grava dados no <see cref="T:System.Net.Sockets.NetworkStream" /> de um intervalo de bytes somente leitura.</summary>
      <param name="buffer">Os dados a serem gravados em <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Net.Sockets.NetworkStream" /> não dá suporte à gravação.</exception>
      <exception cref="T:System.IO.IOException">Ocorreu um erro ao acessar o soquete.

ou -

Houve uma falha durante a gravação na rede.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.NetworkStream" /> está fechado.</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.Writeable">
      <summary>Obtém um valor que indica se o <see cref="T:System.Net.Sockets.NetworkStream" /> é gravável.</summary>
      <returns>
        <see langword="true" /> se os dados puderem ser gravados no fluxo; caso contrário, <see langword="false" />. O valor padrão é <see langword="true" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>Grava dados no <see cref="T:System.Net.Sockets.NetworkStream" /> do intervalo especificado de uma matriz de bytes como uma operação assíncrona.</summary>
      <param name="buffer">Uma matriz de bytes que contém os dados a serem gravados no <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
      <param name="offset">O local no <paramref name="buffer" /> do qual a gravação de dados será iniciada.</param>
      <param name="size">O número de bytes a serem gravados no <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
      <param name="cancellationToken">O token a se monitorar para solicitações de cancelamento.</param>
      <returns>Uma tarefa que representa a operação de gravação assíncrona.</returns>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O parâmetro <paramref name="offset" /> é menor que 0.  

ou - 
O parâmetro <paramref name="offset" /> é maior que o tamanho de <paramref name="buffer" />.  

ou - 
O parâmetro <paramref name="size" /> é menor que 0.  

ou - 
O parâmetro <paramref name="size" /> é maior que o tamanho de <paramref name="buffer" /> subtraído do valor do parâmetro <paramref name="offset" />.</exception>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Net.Sockets.NetworkStream" /> não dá suporte à gravação.</exception>
      <exception cref="T:System.IO.IOException">Houve uma falha durante a gravação na rede.  

ou -  

 Ocorreu um erro ao acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.NetworkStream" /> está fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
      <summary>Grava dados no <see cref="T:System.Net.Sockets.NetworkStream" /> de um intervalo de memória de bytes de memória ROM como uma operação assíncrona.</summary>
      <param name="buffer">Uma região de memória que contém os dados a serem gravados no <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
      <param name="cancellationToken">O token a se monitorar para solicitações de cancelamento.</param>
      <returns>Uma tarefa que representa a operação de gravação assíncrona.</returns>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Net.Sockets.NetworkStream" /> não dá suporte à gravação.</exception>
      <exception cref="T:System.IO.IOException">Ocorreu um erro ao acessar o soquete.

ou -

Houve uma falha durante a gravação na rede.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.NetworkStream" /> está fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.WriteByte(System.Byte)">
      <summary>Grava um byte na posição atual no <see cref="T:System.Net.Sockets.NetworkStream" /> e avança a posição dentro no fluxo em um byte.</summary>
      <param name="value">O byte a ser gravado no fluxo.</param>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Net.Sockets.NetworkStream" /> não dá suporte à gravação.</exception>
      <exception cref="T:System.IO.IOException">Ocorreu um erro ao acessar o soquete.

ou -

Houve uma falha durante a gravação na rede.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.NetworkStream" /> está fechado.</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.WriteTimeout">
      <summary>Obtém ou define a quantidade de tempo que uma operação de gravação fica bloqueada aguardando dados.</summary>
      <returns>Um <see cref="T:System.Int32" /> que especifica a quantidade de tempo, em milissegundos, que decorrerá antes da falha de uma operação de gravação. O valor padrão, <see cref="F:System.Threading.Timeout.Infinite" />, especifica que a operação de gravação não atinge o tempo limite.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">O valor especificado é menor ou igual a zero e não é <see cref="F:System.Threading.Timeout.Infinite" />.</exception>
    </member>
    <member name="T:System.Net.Sockets.ProtocolFamily">
      <summary>Especifica o tipo de protocolo que uma instância da classe <see cref="T:System.Net.Sockets.Socket" /> pode usar.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.AppleTalk">
      <summary>Protocolo AppleTalk.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Atm">
      <summary>Protocolo de serviços de ATM nativos.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Banyan">
      <summary>Protocolo Banyan.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Ccitt">
      <summary>Protocolo CCITT, como X.25.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Chaos">
      <summary>Protocolo de MIT CHAOS.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Cluster">
      <summary>Protocolo de produtos de cluster da Microsoft.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.ControllerAreaNetwork">
      <summary>Protocolo de rede da área do controlador.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.DataKit">
      <summary>Protocolo DataKit.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.DataLink">
      <summary>Protocolo de link de dados direto.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.DecNet">
      <summary>Protocolo DECNet.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Ecma">
      <summary>Protocolo ECMA (European Computer Manufacturers Association).</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.FireFox">
      <summary>Protocolo do FireFox.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.HyperChannel">
      <summary>Protocolo NSC HyperChannel.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Ieee12844">
      <summary>Protocolo de grupo de trabalho IEEE 1284.4.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.ImpLink">
      <summary>Protocolo ARPANET IMP.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.InterNetwork">
      <summary>Protocolo do IP versão 4.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.InterNetworkV6">
      <summary>Protocolo do IP versão 6.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Ipx">
      <summary>Protocolo IPX ou SPX.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Irda">
      <summary>Protocolo IrDA.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Iso">
      <summary>Protocolo ISO.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Lat">
      <summary>Protocolo LAT.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Max">
      <summary>Protocolo MAX.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.NetBios">
      <summary>Protocolo NetBIOS.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Netlink">
      <summary>Protocolo NetLink.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.NetworkDesigners">
      <summary>Protocolo habilitado de gateway OSI para designers de rede.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.NS">
      <summary>Protocolo Xerox NS.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Osi">
      <summary>Protocolo OSI.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Packet">
      <summary>Protocolo do pacote de baixo nível.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Pup">
      <summary>Protocolo PUP.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Sna">
      <summary>Protocolo IBM SNA.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Unix">
      <summary>Protocolo local para host do Unix.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Unknown">
      <summary>Protocolo desconhecido.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Unspecified">
      <summary>Protocolo não especificado.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.VoiceView">
      <summary>Protocolo VoiceView.</summary>
    </member>
    <member name="T:System.Net.Sockets.ProtocolType">
      <summary>Especifica os protocolos a que a classe <see cref="T:System.Net.Sockets.Socket" /> dá suporte.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Ggp">
      <summary>Protocolo de gateway para gateway.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Icmp">
      <summary>Protocolo ICMP.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IcmpV6">
      <summary>Protocolo ICMP para IPv6.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Idp">
      <summary>Protocolo IDP.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Igmp">
      <summary>Protocolo IGMP.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IP">
      <summary>Protocolo IP.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPSecAuthenticationHeader">
      <summary>Cabeçalho de autenticação IPv6. Para obter detalhes, consulte RFC 2292 seção 2.2.1, disponível em https://www.ietf.org.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPSecEncapsulatingSecurityPayload">
      <summary>Cabeçalho de protocolo ESP IPv6.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv4">
      <summary>Protocolo IP versão 4.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6">
      <summary>IPv6 (protocolo IP versão 6).</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6DestinationOptions">
      <summary>Cabeçalho de opções de destino IPv6.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6FragmentHeader">
      <summary>Cabeçalho de fragmento IPv6.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6HopByHopOptions">
      <summary>Cabeçalho de opções Hop by Hop do IPv6.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6NoNextHeader">
      <summary>Não há próximo cabeçalho no IPv6.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6RoutingHeader">
      <summary>Cabeçalho de roteamento IPv6.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Ipx">
      <summary>Protocolo IPEP.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.ND">
      <summary>Protocolo de disco de rede (não oficial).</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Pup">
      <summary>Protocolo de pacote universal PARC.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Raw">
      <summary>Protocolo de pacote IP bruto.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Spx">
      <summary>Protocolo SPX.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.SpxII">
      <summary>Protocolo SPX versão 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Tcp">
      <summary>Protocolo TCP.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Udp">
      <summary>Protocolo UDP.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Unknown">
      <summary>Protocolo desconhecido.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Unspecified">
      <summary>Protocolo não especificado.</summary>
    </member>
    <member name="T:System.Net.Sockets.SafeSocketHandle">
      <summary>Representa uma classe wrapper para um identificador de soquete.</summary>
    </member>
    <member name="M:System.Net.Sockets.SafeSocketHandle.#ctor(System.IntPtr,System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Sockets.SafeSocketHandle" />.</summary>
      <param name="preexistingHandle">O identificador pré-existente a ser usado.</param>
      <param name="ownsHandle">
        <see langword="true" /> para liberar de forma confiável o identificador durante a fase de finalização; <see langword="false" /> para impedir a liberação confiável (não recomendado).</param>
    </member>
    <member name="T:System.Net.Sockets.SelectMode">
      <summary>Define os modos de sondagem para o método <see cref="M:System.Net.Sockets.Socket.Poll(System.Int32,System.Net.Sockets.SelectMode)" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SelectMode.SelectError">
      <summary>Modo de status de erro.</summary>
    </member>
    <member name="F:System.Net.Sockets.SelectMode.SelectRead">
      <summary>Modo de status de leitura.</summary>
    </member>
    <member name="F:System.Net.Sockets.SelectMode.SelectWrite">
      <summary>Modo de status de gravação.</summary>
    </member>
    <member name="T:System.Net.Sockets.SendPacketsElement">
      <summary>Representa um elemento em uma matriz <see cref="T:System.Net.Sockets.SendPacketsElement" />.</summary>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[])">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Sockets.SendPacketsElement" /> usando o buffer especificado.</summary>
      <param name="buffer">Uma matriz de bytes de dados a serem enviados usando o método <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="buffer" /> não pode ser nulo</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Sockets.SendPacketsElement" /> usando o intervalo especificado do buffer.</summary>
      <param name="buffer">Uma matriz de bytes de dados a serem enviados usando o método <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</param>
      <param name="offset">O deslocamento, em bytes, do início do <paramref name="buffer" /> até a localização no <paramref name="buffer" /> para começar a enviar os dados especificados no parâmetro <paramref name="buffer" />.</param>
      <param name="count">O número de bytes a serem enviados do parâmetro <paramref name="offset" />. Se <paramref name="count" /> for zero, nenhum byte será enviado.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="buffer" /> não pode ser nulo</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Os parâmetros <paramref name="offset" /> e <paramref name="count" /> devem ser maiores ou iguais a zero.  
O <paramref name="offset" /> e o <paramref name="count" /> devem ser menores que o tamanho do buffer</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Sockets.SendPacketsElement" /> usando o intervalo especificado do buffer com uma opção para combinar esse elemento com o elemento seguinte em uma solicitação de envio único da camada de soquetes para o transporte.</summary>
      <param name="buffer">Uma matriz de bytes de dados a serem enviados usando o método <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</param>
      <param name="offset">O deslocamento, em bytes, do início do <paramref name="buffer" /> até a localização no <paramref name="buffer" /> para começar a enviar os dados especificados no parâmetro <paramref name="buffer" />.</param>
      <param name="count">O número de bytes a serem enviados do parâmetro <paramref name="offset" />. Se <paramref name="count" /> for zero, nenhum byte será enviado.</param>
      <param name="endOfPacket">Um valor booliano que especifica que este elemento não deve ser combinado com o próximo elemento em uma solicitação única de envio da camada de soquetes até o transporte. Este sinalizador é usado para controle granular do conteúdo de cada mensagem em um diagrama ou soquete orientado a mensagens.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="buffer" /> não pode ser nulo</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Os parâmetros <paramref name="offset" /> e <paramref name="count" /> devem ser maiores ou iguais a zero.  
O <paramref name="offset" /> e o <paramref name="count" /> devem ser menores que o tamanho do buffer</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.IO.FileStream)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Sockets.SendPacketsElement" /> usando o objeto <see cref="T:System.IO.FileStream" /> especificado.</summary>
      <param name="fileStream">O arquivo a ser transmitido usando o método <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="fileStream" /> não está aberto para leitura e gravação assíncrona.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileStream" /> não pode ser nulo.</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.IO.FileStream,System.Int64,System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Sockets.SendPacketsElement" /> usando o intervalo especificado de um objeto <see cref="T:System.IO.FileStream" />.</summary>
      <param name="fileStream">O arquivo a ser transmitido usando o método <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</param>
      <param name="offset">O deslocamento, em bytes, do início do arquivo até a localização no arquivo para iniciar o envio dos bytes no arquivo.</param>
      <param name="count">O número de bytes a serem enviados começando por <paramref name="offset" />. Se <paramref name="count" /> for zero, o arquivo inteiro será enviado.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="fileStream" /> deve ter sido aberto para leitura e gravação assíncrona.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="fileStream" /> não pode ser <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Os parâmetros <paramref name="offset" /> e <paramref name="count" /> devem ser maiores ou iguais a zero.</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.IO.FileStream,System.Int64,System.Int32,System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Sockets.SendPacketsElement" /> usando o intervalo especificado de um objeto <see cref="T:System.IO.FileStream" />, com uma opção para combinar esse elemento com o elemento seguinte em uma solicitação de envio único da camada de soquetes para o transporte.</summary>
      <param name="fileStream">O arquivo a ser transmitido usando o método <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</param>
      <param name="offset">O deslocamento, em bytes, do início do arquivo até a localização no arquivo para iniciar o envio dos bytes no arquivo.</param>
      <param name="count">O número de bytes a serem enviados do parâmetro offset. Se a contagem for zero, o arquivo inteiro será enviado.</param>
      <param name="endOfPacket">Especifica que este elemento não deve ser combinado com o próximo elemento em uma solicitação única de envio da camada de soquetes até o transporte. Este sinalizador é usado para controle granular do conteúdo de cada mensagem em um diagrama ou soquete orientado a mensagens.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="fileStream" /> deve ter sido aberto para leitura e gravação assíncrona.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="fileStream" /> não pode ser <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Os parâmetros <paramref name="offset" /> e <paramref name="count" /> devem ser maiores ou iguais a zero.</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Sockets.SendPacketsElement" /> usando o arquivo especificado.</summary>
      <param name="filepath">O nome do arquivo a ser transmitido usando o método <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="filepath" /> não pode ser nulo</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Sockets.SendPacketsElement" /> usando o intervalo especificado do arquivo.</summary>
      <param name="filepath">O nome do arquivo a ser transmitido usando o método <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</param>
      <param name="offset">O deslocamento, em bytes, do início do arquivo até a localização no arquivo para iniciar o envio do arquivo especificado no parâmetro <paramref name="filepath" />.</param>
      <param name="count">O número de bytes a serem enviados do parâmetro <paramref name="offset" />. Se <paramref name="count" /> for zero, o arquivo inteiro será enviado.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="filepath" /> não pode ser nulo</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Os parâmetros <paramref name="offset" /> e <paramref name="count" /> devem ser maiores ou iguais a zero.</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32,System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Sockets.SendPacketsElement" /> usando o intervalo especificado do arquivo, com uma opção para combinar esse elemento com o elemento seguinte em uma solicitação de envio único da camada de soquetes para o transporte.</summary>
      <param name="filepath">O nome do arquivo a ser transmitido usando o método <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</param>
      <param name="offset">O deslocamento, em bytes, do início do arquivo até a localização no arquivo para iniciar o envio do arquivo especificado no parâmetro <paramref name="filepath" />.</param>
      <param name="count">O número de bytes a serem enviados do parâmetro <paramref name="offset" />. Se <paramref name="count" /> for zero, o arquivo inteiro será enviado.</param>
      <param name="endOfPacket">Um valor booliano que especifica que este elemento não deve ser combinado com o próximo elemento em uma solicitação única de envio da camada de soquetes até o transporte. Este sinalizador é usado para controle granular do conteúdo de cada mensagem em um diagrama ou soquete orientado a mensagens.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="filepath" /> não pode ser nulo</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Os parâmetros <paramref name="offset" /> e <paramref name="count" /> devem ser maiores ou iguais a zero.</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int64,System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Sockets.SendPacketsElement" /> usando o intervalo especificado do arquivo.</summary>
      <param name="filepath">O nome do arquivo a ser transmitido usando o método <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</param>
      <param name="offset">O deslocamento, em bytes, do início do arquivo até a localização no arquivo para iniciar o envio do arquivo especificado no parâmetro <paramref name="filepath" />.</param>
      <param name="count">O número de bytes a serem enviados começando por <paramref name="offset" />. Se <paramref name="count" /> for zero, o arquivo inteiro será enviado.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="filepath" /> não pode ser <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Os parâmetros <paramref name="offset" /> e <paramref name="count" /> devem ser maiores ou iguais a zero.</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int64,System.Int32,System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Sockets.SendPacketsElement" /> usando o intervalo especificado do arquivo, com uma opção para combinar esse elemento com o elemento seguinte em uma solicitação de envio único da camada de soquetes para o transporte.</summary>
      <param name="filepath">O nome do arquivo a ser transmitido usando o método <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</param>
      <param name="offset">O deslocamento, em bytes, do início do arquivo até a localização no arquivo para iniciar o envio do arquivo especificado no parâmetro <paramref name="filepath" />.</param>
      <param name="count">O número de bytes a serem enviados do parâmetro <paramref name="offset" />. Se <paramref name="count" /> for zero, o arquivo inteiro será enviado.</param>
      <param name="endOfPacket">Especifica que este elemento não deve ser combinado com o próximo elemento em uma solicitação única de envio da camada de soquetes até o transporte. Este sinalizador é usado para controle granular do conteúdo de cada mensagem em um diagrama ou soquete orientado a mensagens.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="filepath" /> não pode ser <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Os parâmetros <paramref name="offset" /> e <paramref name="count" /> devem ser maiores ou iguais a zero.</exception>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.Buffer">
      <summary>Obtém o buffer a ser enviado se o objeto <see cref="T:System.Net.Sockets.SendPacketsElement" /> foi inicializado com um parâmetro <paramref name="buffer" />.</summary>
      <returns>O buffer de bytes a ser enviado <see cref="T:System.Net.Sockets.SendPacketsElement" /> se o objeto tiver sido <paramref name="buffer" /> inicializado com um parâmetro.</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.Count">
      <summary>Obtém a contagem de bytes a serem enviados.</summary>
      <returns>A contagem de bytes a serem enviados se <see cref="T:System.Net.Sockets.SendPacketsElement" /> a classe tiver sido inicializada com um <paramref name="count" /> parâmetro.</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.EndOfPacket">
      <summary>Obtém um valor booliano que indica se este elemento não deve ser combinado com o próximo elemento em uma solicitação única de envio da camada de soquetes até o transporte.</summary>
      <returns>Um valor booliano que indica se esse elemento não deve ser combinado com o próximo elemento em uma única solicitação de envio.</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.FilePath">
      <summary>Obterá o nome do arquivo a ser enviado se o objeto <see cref="T:System.Net.Sockets.SendPacketsElement" /> tiver sido inicializado com um parâmetro <paramref name="filepath" />.</summary>
      <returns>O nome do arquivo a ser enviado se o <see cref="T:System.Net.Sockets.SendPacketsElement" /> objeto foi inicializado com <paramref name="filepath" /> um parâmetro.</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.FileStream">
      <summary>Obtém a representação do objeto do arquivo a ser enviado se o objeto <see cref="T:System.Net.Sockets.SendPacketsElement" /> foi inicializado com um parâmetro <see cref="T:System.IO.FileStream" />.</summary>
      <returns>Uma representação de objeto do arquivo a ser enviada se <see cref="T:System.Net.Sockets.SendPacketsElement" /> o objeto foi inicializado <see cref="T:System.IO.FileStream" /> com um parâmetro.</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.Offset">
      <summary>Obtém o deslocamento, em bytes, do início do arquivo ou do buffer de dados até o local no buffer ou no arquivo para começar a enviar os dados.</summary>
      <returns>O deslocamento, em bytes, desde o início do buffer de dados ou do arquivo até o local no buffer ou arquivo para começar a enviar os dados.</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.OffsetLong">
      <summary>Obtém o deslocamento, em bytes, do início do arquivo ou do buffer de dados até o local no buffer ou no arquivo para começar a enviar os dados.</summary>
      <returns>O deslocamento, em bytes, desde o início do buffer de dados ou do arquivo até o local no buffer ou arquivo para começar a enviar os dados.</returns>
    </member>
    <member name="T:System.Net.Sockets.Socket">
      <summary>Implementa a interface de soquetes Berkeley.</summary>
    </member>
    <member name="M:System.Net.Sockets.Socket.#ctor(System.Net.Sockets.AddressFamily,System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Sockets.Socket" /> usando a família de endereços, o tipo de soquete e o protocolo especificados.</summary>
      <param name="addressFamily">Um dos valores de <see cref="T:System.Net.Sockets.AddressFamily" />.</param>
      <param name="socketType">Um dos valores de <see cref="T:System.Net.Sockets.SocketType" />.</param>
      <param name="protocolType">Um dos valores de <see cref="T:System.Net.Sockets.ProtocolType" />.</param>
      <exception cref="T:System.Net.Sockets.SocketException">A combinação de <paramref name="addressFamily" />, <paramref name="socketType" /> e <paramref name="protocolType" /> resulta em um soquete inválido.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.#ctor(System.Net.Sockets.SocketInformation)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Sockets.Socket" />, usando o valor especificado de <see cref="M:System.Net.Sockets.Socket.DuplicateAndClose(System.Int32)" />.</summary>
      <param name="socketInformation">As informações de soquete retornadas por <see cref="M:System.Net.Sockets.Socket.DuplicateAndClose(System.Int32)" />.</param>
    </member>
    <member name="M:System.Net.Sockets.Socket.#ctor(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Sockets.Socket" /> usando o tipo de soquete e o protocolo especificados.</summary>
      <param name="socketType">Um dos valores de <see cref="T:System.Net.Sockets.SocketType" />.</param>
      <param name="protocolType">Um dos valores de <see cref="T:System.Net.Sockets.ProtocolType" />.</param>
      <exception cref="T:System.Net.Sockets.SocketException">A combinação de <paramref name="socketType" /> e <paramref name="protocolType" /> resulta em um soquete inválido.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Accept">
      <summary>Cria um novo <see cref="T:System.Net.Sockets.Socket" /> para uma conexão recém-criada.</summary>
      <returns>Um <see cref="T:System.Net.Sockets.Socket" /> para uma conexão recém-criada.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.InvalidOperationException">O soquete de aceitação não está escutando conexões. É necessário chamar <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> e <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> antes de chamar <see cref="M:System.Net.Sockets.Socket.Accept" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Inicia uma operação assíncrona para aceitar uma tentativa de conexão de entrada.</summary>
      <param name="e">O objeto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> a ser usado nessa operação de soquete assíncrono.</param>
      <returns>
        <see langword="true" /> se a operação de E/S está pendente. O evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> no parâmetro <paramref name="e" /> será acionado após a conclusão da operação.  
 <see langword="false" /> se a operação de E/S foi concluída de forma síncrona. O evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> no parâmetro <paramref name="e" /> não será acionado e o objeto <paramref name="e" /> passado como um parâmetro poderá ser examinado imediatamente depois que a chamada do método for retornada para recuperar o resultado da operação.</returns>
      <exception cref="T:System.ArgumentException">Um argumento não é válido. Essa exceção ocorre se o buffer fornecido não for grande o suficiente. O buffer deve ter pelo menos 2 * (sizeof(SOCKADDR_STORAGE + 16) bytes.  
Essa exceção também ocorre se vários buffers forem especificados e a propriedade <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> não for nula.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Um argumento está fora do intervalo. A exceção ocorre se o <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Count" /> for menor que 0.</exception>
      <exception cref="T:System.InvalidOperationException">Uma operação inválida foi solicitada. Essa exceção ocorre se o <see cref="T:System.Net.Sockets.Socket" /> aceito não estiver escutando conexões ou se o soquete aceito estiver associado.  
Você deve chamar o método <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> e <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> antes de chamar o método <see cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.  
Essa exceção também ocorre se o soquete já estiver conectado ou se uma operação de soquete já estivesse em andamento usando o parâmetro <paramref name="e" /> especificado.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.NotSupportedException">É necessário o Windows XP ou posterior para esse método.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.AddressFamily">
      <summary>Obtém a família de endereços do <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>Um dos valores de <see cref="T:System.Net.Sockets.AddressFamily" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.Available">
      <summary>Obtém a quantidade de dados recebidos da rede e disponíveis para leitura.</summary>
      <returns>O número de bytes de dados recebidos da rede e disponíveis para serem lidos.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)">
      <summary>Inicia uma operação assíncrona para aceitar uma tentativa de conexão de entrada.</summary>
      <param name="callback">O delegado <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Um objeto que contém informações de estado para essa solicitação.</param>
      <returns>Um <see cref="T:System.IAsyncResult" /> que faz referência à criação assíncrona do <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.ObjectDisposedException">O objeto <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.NotSupportedException">Windows NT é necessário para esse método.</exception>
      <exception cref="T:System.InvalidOperationException">O soquete de aceitação não está escutando conexões. É necessário chamar <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> e <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> antes de chamar <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />.  

ou - 
O soquete aceito está associado.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="receiveSize" /> é menor que 0.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginAccept(System.Int32,System.AsyncCallback,System.Object)">
      <summary>Inicia uma operação assíncrona para aceitar uma tentativa de conexão de entrada e recebe o primeiro bloco de dados enviado pelo aplicativo cliente.</summary>
      <param name="receiveSize">O número de bytes a serem aceitos do remetente.</param>
      <param name="callback">O delegado <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Um objeto que contém informações de estado para essa solicitação.</param>
      <returns>Um <see cref="T:System.IAsyncResult" /> que faz referência à criação assíncrona do <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.ObjectDisposedException">O objeto <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.NotSupportedException">Windows NT é necessário para esse método.</exception>
      <exception cref="T:System.InvalidOperationException">O soquete de aceitação não está escutando conexões. É necessário chamar <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> e <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> antes de chamar <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />.  

ou - 
O soquete aceito está associado.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="receiveSize" /> é menor que 0.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginAccept(System.Net.Sockets.Socket,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Inicia uma operação assíncrona para aceitar uma tentativa de conexão de entrada de um soquete especificado e recebe o primeiro bloco de dados enviado pelo aplicativo cliente.</summary>
      <param name="acceptSocket">O objeto <see cref="T:System.Net.Sockets.Socket" /> aceito. Este valor pode ser <see langword="null" />.</param>
      <param name="receiveSize">O número máximo de bytes a serem recebidos.</param>
      <param name="callback">O delegado <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Um objeto que contém informações de estado para essa solicitação.</param>
      <returns>Um objeto <see cref="T:System.IAsyncResult" /> que faz referência à criação do objeto <see cref="T:System.Net.Sockets.Socket" /> assíncrono.</returns>
      <exception cref="T:System.ObjectDisposedException">O objeto <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.NotSupportedException">Windows NT é necessário para esse método.</exception>
      <exception cref="T:System.InvalidOperationException">O soquete de aceitação não está escutando conexões. É necessário chamar <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> e <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> antes de chamar <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />.  

ou - 
O soquete aceito está associado.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="receiveSize" /> é menor que 0.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginConnect(System.Net.EndPoint,System.AsyncCallback,System.Object)">
      <summary>Inicia uma solicitação assíncrona para uma conexão de host remoto.</summary>
      <param name="remoteEP">Um <see cref="T:System.Net.EndPoint" /> que representa o host remoto.</param>
      <param name="callback">O delegado <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Um objeto que contém informações de estado para essa solicitação.</param>
      <returns>Um <see cref="T:System.IAsyncResult" /> que faz referência à conexão assíncrona.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="remoteEP" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.Security.SecurityException">Um chamador mais alto na pilha de chamadas não tem permissão para a operação solicitada.</exception>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Net.Sockets.Socket" /> foi colocado em um estado de escuta chamando <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> ou uma operação assíncrona já está em andamento.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Inicia uma solicitação assíncrona para uma conexão de host remoto. O host é especificado por um <see cref="T:System.Net.IPAddress" /> e um número da porta.</summary>
      <param name="address">O <see cref="T:System.Net.IPAddress" /> do host remoto.</param>
      <param name="port">O número da porta do host remoto.</param>
      <param name="requestCallback">Um delegado <see cref="T:System.AsyncCallback" /> que faz referência ao método a ser invocado quando a operação de conexão for concluída.</param>
      <param name="state">Um objeto definido pelo usuário que contém informações sobre a operação de conexão. Esse objeto é passado para o delegado <paramref name="requestCallback" /> quando a operação é concluída.</param>
      <returns>Um <see cref="T:System.IAsyncResult" /> que faz referência à conexão assíncrona.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Net.Sockets.Socket" /> não está na família do soquete.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O número da porta é inválido.</exception>
      <exception cref="T:System.ArgumentException">O comprimento de <paramref name="address" /> é zero.</exception>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Net.Sockets.Socket" /> foi colocado em um estado de escuta chamando <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> ou uma operação assíncrona já está em andamento.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
      <summary>Inicia uma solicitação assíncrona para uma conexão de host remoto. O host é especificado por uma matriz <see cref="T:System.Net.IPAddress" /> e um número da porta.</summary>
      <param name="addresses">Pelo menos um <see cref="T:System.Net.IPAddress" />, designando o host remoto.</param>
      <param name="port">O número da porta do host remoto.</param>
      <param name="requestCallback">Um delegado <see cref="T:System.AsyncCallback" /> que faz referência ao método a ser invocado quando a operação de conexão for concluída.</param>
      <param name="state">Um objeto definido pelo usuário que contém informações sobre a operação de conexão. Esse objeto é passado para o delegado <paramref name="requestCallback" /> quando a operação é concluída.</param>
      <returns>Um <see cref="T:System.IAsyncResult" /> que faz referência a conexões assíncronas.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="addresses" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.NotSupportedException">Este método é válido para soquetes que usam <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> ou <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O número da porta é inválido.</exception>
      <exception cref="T:System.ArgumentException">O comprimento de <paramref name="address" /> é zero.</exception>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Net.Sockets.Socket" /> foi colocado em um estado de escuta chamando <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> ou uma operação assíncrona já está em andamento.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Inicia uma solicitação assíncrona para uma conexão de host remoto. O host é especificado por um nome do host e um número da porta.</summary>
      <param name="host">O nome do host remoto.</param>
      <param name="port">O número da porta do host remoto.</param>
      <param name="requestCallback">Um delegado <see cref="T:System.AsyncCallback" /> que faz referência ao método a ser invocado quando a operação de conexão for concluída.</param>
      <param name="state">Um objeto definido pelo usuário que contém informações sobre a operação de conexão. Esse objeto é passado para o delegado <paramref name="requestCallback" /> quando a operação é concluída.</param>
      <returns>Um <see cref="T:System.IAsyncResult" /> que faz referência à conexão assíncrona.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="host" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.NotSupportedException">Este método é válido para soquetes nas famílias <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> ou <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> .</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O número da porta é inválido.</exception>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Net.Sockets.Socket" /> foi colocado em um estado de escuta chamando <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> ou uma operação assíncrona já está em andamento.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginDisconnect(System.Boolean,System.AsyncCallback,System.Object)">
      <summary>Inicia uma solicitação assíncrona para se desconectar de um ponto de extremidade remoto.</summary>
      <param name="reuseSocket">
        <see langword="true" /> se o soquete puder ser reutilizado após a conexão ser fechada; caso contrário, <see langword="false" />.</param>
      <param name="callback">O delegado <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Um objeto que contém informações de estado para essa solicitação.</param>
      <returns>Um objeto <see cref="T:System.IAsyncResult" /> que faz referência à operação assíncrona.</returns>
      <exception cref="T:System.NotSupportedException">O sistema operacional é o Windows 2000 ou anterior e esse método requer o Windows XP.</exception>
      <exception cref="T:System.ObjectDisposedException">O objeto <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)">
      <summary>Começa a receber de maneira assíncrona dados de um <see cref="T:System.Net.Sockets.Socket" /> conectado.</summary>
      <param name="buffer">Uma matriz do tipo <see cref="T:System.Byte" /> que é o local de armazenamento dos dados recebidos.</param>
      <param name="offset">A posição de base zero no parâmetro <paramref name="buffer" /> no qual armazenar os dados recebidos.</param>
      <param name="size">O número de bytes a serem recebidos.</param>
      <param name="socketFlags">Uma combinação bit a bit dos valores <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="callback">Um delegado <see cref="T:System.AsyncCallback" /> que faz referência ao método a ser invocado quando a operação é concluída.</param>
      <param name="state">Um objeto definido pelo usuário que contém informações sobre a operação de recebimento. Esse objeto é passado para o delegado <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> quando a operação é concluída.</param>
      <returns>Um <see cref="T:System.IAsyncResult" /> que faz referência à leitura assíncrona.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> é menor que 0.  

ou - 
<paramref name="offset" /> é maior que o comprimento do <paramref name="buffer" />.  

ou - 
<paramref name="size" /> é menor que 0.  

ou - 
<paramref name="size" /> é maior que o comprimento da subtração de <paramref name="buffer" /> e do valor do parâmetro <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@,System.AsyncCallback,System.Object)">
      <summary>Começa a receber de maneira assíncrona dados de um <see cref="T:System.Net.Sockets.Socket" /> conectado.</summary>
      <param name="buffer">Uma matriz do tipo <see cref="T:System.Byte" /> que é o local de armazenamento dos dados recebidos.</param>
      <param name="offset">O local no <paramref name="buffer" /> para armazenar os dados recebidos.</param>
      <param name="size">O número de bytes a serem recebidos.</param>
      <param name="socketFlags">Uma combinação bit a bit dos valores <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="errorCode">Um objeto <see cref="T:System.Net.Sockets.SocketError" /> que armazena o erro de soquete.</param>
      <param name="callback">Um delegado <see cref="T:System.AsyncCallback" /> que faz referência ao método a ser invocado quando a operação é concluída.</param>
      <param name="state">Um objeto definido pelo usuário que contém informações sobre a operação de recebimento. Esse objeto é passado para o delegado <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> quando a operação é concluída.</param>
      <returns>Um <see cref="T:System.IAsyncResult" /> que faz referência à leitura assíncrona.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> é menor que 0.  

ou - 
<paramref name="offset" /> é maior que o comprimento do <paramref name="buffer" />.  

ou - 
<paramref name="size" /> é menor que 0.  

ou - 
<paramref name="size" /> é maior que o comprimento da subtração de <paramref name="buffer" /> e do valor do parâmetro <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)">
      <summary>Começa a receber de maneira assíncrona dados de um <see cref="T:System.Net.Sockets.Socket" /> conectado.</summary>
      <param name="buffers">Uma matriz do tipo <see cref="T:System.Byte" /> que é o local de armazenamento dos dados recebidos.</param>
      <param name="socketFlags">Uma combinação bit a bit dos valores <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="callback">Um delegado <see cref="T:System.AsyncCallback" /> que faz referência ao método a ser invocado quando a operação é concluída.</param>
      <param name="state">Um objeto definido pelo usuário que contém informações sobre a operação de recebimento. Esse objeto é passado para o delegado <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> quando a operação é concluída.</param>
      <returns>Um <see cref="T:System.IAsyncResult" /> que faz referência à leitura assíncrona.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@,System.AsyncCallback,System.Object)">
      <summary>Começa a receber de maneira assíncrona dados de um <see cref="T:System.Net.Sockets.Socket" /> conectado.</summary>
      <param name="buffers">Uma matriz do tipo <see cref="T:System.Byte" /> que é o local de armazenamento dos dados recebidos.</param>
      <param name="socketFlags">Uma combinação bit a bit dos valores <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="errorCode">Um objeto <see cref="T:System.Net.Sockets.SocketError" /> que armazena o erro de soquete.</param>
      <param name="callback">Um delegado <see cref="T:System.AsyncCallback" /> que faz referência ao método a ser invocado quando a operação é concluída.</param>
      <param name="state">Um objeto definido pelo usuário que contém informações sobre a operação de recebimento. Esse objeto é passado para o delegado <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> quando a operação é concluída.</param>
      <returns>Um <see cref="T:System.IAsyncResult" /> que faz referência à leitura assíncrona.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)">
      <summary>Começa a receber dados de um dispositivo de rede especificado de maneira assíncrona.</summary>
      <param name="buffer">Uma matriz do tipo <see cref="T:System.Byte" /> que é o local de armazenamento dos dados recebidos.</param>
      <param name="offset">A posição de base zero no parâmetro <paramref name="buffer" /> no qual armazenar os dados.</param>
      <param name="size">O número de bytes a serem recebidos.</param>
      <param name="socketFlags">Uma combinação bit a bit dos valores <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="remoteEP">Um <see cref="T:System.Net.EndPoint" /> que representa a fonte de dados.</param>
      <param name="callback">O delegado <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Um objeto que contém informações de estado para essa solicitação.</param>
      <returns>Um <see cref="T:System.IAsyncResult" /> que faz referência à leitura assíncrona.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.  

ou - 
<paramref name="remoteEP" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> é menor que 0.  

ou - 
<paramref name="offset" /> é maior que o comprimento do <paramref name="buffer" />.  

ou - 
<paramref name="size" /> é menor que 0.  

ou - 
<paramref name="size" /> é maior que o comprimento da subtração de <paramref name="buffer" /> e do valor do parâmetro <paramref name="offset" />.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.Security.SecurityException">Um chamador mais alto na pilha de chamadas não tem permissão para a operação solicitada.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)">
      <summary>Inicia o recebimento de forma assíncrona do número especificado de bytes de dados no local especificado do buffer de dados, usando o <see cref="T:System.Net.Sockets.SocketFlags" /> especificado e armazena as informações de ponto de extremidade e de pacote.</summary>
      <param name="buffer">Uma matriz do tipo <see cref="T:System.Byte" /> que é o local de armazenamento dos dados recebidos.</param>
      <param name="offset">A posição de base zero no parâmetro <paramref name="buffer" /> no qual armazenar os dados.</param>
      <param name="size">O número de bytes a serem recebidos.</param>
      <param name="socketFlags">Uma combinação bit a bit dos valores <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="remoteEP">Um <see cref="T:System.Net.EndPoint" /> que representa a fonte de dados.</param>
      <param name="callback">O delegado <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Um objeto que contém informações de estado para essa solicitação.</param>
      <returns>Um <see cref="T:System.IAsyncResult" /> que faz referência à leitura assíncrona.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.  

ou - 
<paramref name="remoteEP" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> é menor que 0.  

ou - 
<paramref name="offset" /> é maior que o comprimento do <paramref name="buffer" />.  

ou - 
<paramref name="size" /> é menor que 0.  

ou - 
<paramref name="size" /> é maior que o comprimento da subtração de <paramref name="buffer" /> e do valor do parâmetro <paramref name="offset" />.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.NotSupportedException">O sistema operacional é o Windows 2000 ou anterior e esse método requer o Windows XP.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)">
      <summary>Envia dados de forma assíncrona para um <see cref="T:System.Net.Sockets.Socket" /> conectado.</summary>
      <param name="buffer">Uma matriz do tipo <see cref="T:System.Byte" /> que contém os dados a serem enviados.</param>
      <param name="offset">A posição de base zero no parâmetro <paramref name="buffer" /> no qual começar a enviar dados.</param>
      <param name="size">O número de bytes a serem enviados.</param>
      <param name="socketFlags">Uma combinação bit a bit dos valores <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="callback">O delegado <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Um objeto que contém informações de estado para essa solicitação.</param>
      <returns>Um <see cref="T:System.IAsyncResult" /> que faz referência ao envio assíncrono.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete. Consulte a seção Comentários abaixo.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> é menor que 0.  

ou - 
<paramref name="offset" /> é menor que o tamanho de <paramref name="buffer" />.  

ou - 
<paramref name="size" /> é menor que 0.  

ou - 
<paramref name="size" /> é maior que o comprimento da subtração de <paramref name="buffer" /> e do valor do parâmetro <paramref name="offset" />.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@,System.AsyncCallback,System.Object)">
      <summary>Envia dados de forma assíncrona para um <see cref="T:System.Net.Sockets.Socket" /> conectado.</summary>
      <param name="buffer">Uma matriz do tipo <see cref="T:System.Byte" /> que contém os dados a serem enviados.</param>
      <param name="offset">A posição de base zero no parâmetro <paramref name="buffer" /> no qual começar a enviar dados.</param>
      <param name="size">O número de bytes a serem enviados.</param>
      <param name="socketFlags">Uma combinação bit a bit dos valores <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="errorCode">Um objeto <see cref="T:System.Net.Sockets.SocketError" /> que armazena o erro de soquete.</param>
      <param name="callback">O delegado <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Um objeto que contém informações de estado para essa solicitação.</param>
      <returns>Um <see cref="T:System.IAsyncResult" /> que faz referência ao envio assíncrono.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete. Consulte a seção Comentários abaixo.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> é menor que 0.  

ou - 
<paramref name="offset" /> é menor que o tamanho de <paramref name="buffer" />.  

ou - 
<paramref name="size" /> é menor que 0.  

ou - 
<paramref name="size" /> é maior que o comprimento da subtração de <paramref name="buffer" /> e do valor do parâmetro <paramref name="offset" />.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)">
      <summary>Envia dados de forma assíncrona para um <see cref="T:System.Net.Sockets.Socket" /> conectado.</summary>
      <param name="buffers">Uma matriz do tipo <see cref="T:System.Byte" /> que contém os dados a serem enviados.</param>
      <param name="socketFlags">Uma combinação bit a bit dos valores <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="callback">O delegado <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Um objeto que contém informações de estado para essa solicitação.</param>
      <returns>Um <see cref="T:System.IAsyncResult" /> que faz referência ao envio assíncrono.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffers" /> está vazio.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete. Consulte a seção Comentários abaixo.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@,System.AsyncCallback,System.Object)">
      <summary>Envia dados de forma assíncrona para um <see cref="T:System.Net.Sockets.Socket" /> conectado.</summary>
      <param name="buffers">Uma matriz do tipo <see cref="T:System.Byte" /> que contém os dados a serem enviados.</param>
      <param name="socketFlags">Uma combinação bit a bit dos valores <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="errorCode">Um objeto <see cref="T:System.Net.Sockets.SocketError" /> que armazena o erro de soquete.</param>
      <param name="callback">O delegado <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Um objeto que contém informações de estado para essa solicitação.</param>
      <returns>Um <see cref="T:System.IAsyncResult" /> que faz referência ao envio assíncrono.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffers" /> está vazio.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete. Consulte a seção Comentários abaixo.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.AsyncCallback,System.Object)">
      <summary>Envia o arquivo <paramref name="fileName" /> para um objeto <see cref="T:System.Net.Sockets.Socket" /> conectado usando o sinalizador <see cref="F:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread" />.</summary>
      <param name="fileName">Uma cadeia de caracteres que contém o caminho e o nome do arquivo a ser enviado. Esse parâmetro pode ser <see langword="null" />.</param>
      <param name="callback">O delegado <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Um objeto que contém informações de estado para essa solicitação.</param>
      <returns>Um objeto <see cref="T:System.IAsyncResult" /> que representa o envio assíncrono.</returns>
      <exception cref="T:System.ObjectDisposedException">O objeto <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.NotSupportedException">O soquete não está conectado a um host remoto.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo <paramref name="fileName" /> não foi encontrado.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete. Consulte a seção Comentários abaixo.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.Byte[],System.Byte[],System.Net.Sockets.TransmitFileOptions,System.AsyncCallback,System.Object)">
      <summary>Envia um arquivo e buffers de dados de forma assíncrona para um objeto <see cref="T:System.Net.Sockets.Socket" /> conectado.</summary>
      <param name="fileName">Uma cadeia de caracteres que contém o caminho e o nome do arquivo a ser enviado. Esse parâmetro pode ser <see langword="null" />.</param>
      <param name="preBuffer">Uma matriz <see cref="T:System.Byte" /> que contém dados a serem enviados antes de o arquivo ser enviado. Esse parâmetro pode ser <see langword="null" />.</param>
      <param name="postBuffer">Uma matriz <see cref="T:System.Byte" /> que contém dados a serem enviados depois de o arquivo ser enviado. Esse parâmetro pode ser <see langword="null" />.</param>
      <param name="flags">Uma combinação bit a bit dos valores <see cref="T:System.Net.Sockets.TransmitFileOptions" />.</param>
      <param name="callback">Um delegado <see cref="T:System.AsyncCallback" /> a ser invocado quando a operação for concluída. Esse parâmetro pode ser <see langword="null" />.</param>
      <param name="state">Um objeto definido pelo usuário que contém informações de estado para essa solicitação. Esse parâmetro pode ser <see langword="null" />.</param>
      <returns>Um objeto <see cref="T:System.IAsyncResult" /> que representa a operação assíncrona.</returns>
      <exception cref="T:System.ObjectDisposedException">O objeto <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete. Consulte a seção Comentários abaixo.</exception>
      <exception cref="T:System.NotSupportedException">O sistema operacional não é o Windows NT ou posterior.  

ou -

 O soquete não está conectado a um host remoto.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo <paramref name="fileName" /> não foi encontrado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint,System.AsyncCallback,System.Object)">
      <summary>Envia dados de maneira assíncrona para um host remoto específico.</summary>
      <param name="buffer">Uma matriz do tipo <see cref="T:System.Byte" /> que contém os dados a serem enviados.</param>
      <param name="offset">A posição de base zero no <paramref name="buffer" /> na qual começar a enviar dados.</param>
      <param name="size">O número de bytes a serem enviados.</param>
      <param name="socketFlags">Uma combinação bit a bit dos valores <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="remoteEP">Um <see cref="T:System.Net.EndPoint" /> que representa o dispositivo remoto.</param>
      <param name="callback">O delegado <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Um objeto que contém informações de estado para essa solicitação.</param>
      <returns>Um <see cref="T:System.IAsyncResult" /> que faz referência ao envio assíncrono.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.  

ou - 
<paramref name="remoteEP" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> é menor que 0.  

ou - 
<paramref name="offset" /> é maior que o comprimento do <paramref name="buffer" />.  

ou - 
<paramref name="size" /> é menor que 0.  

ou - 
<paramref name="size" /> é maior que o comprimento da subtração de <paramref name="buffer" /> e do valor do parâmetro <paramref name="offset" />.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.Security.SecurityException">Um chamador mais alto na pilha de chamadas não tem permissão para a operação solicitada.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)">
      <summary>Associa um <see cref="T:System.Net.Sockets.Socket" /> a um ponto de extremidade local.</summary>
      <param name="localEP">O local <see cref="T:System.Net.EndPoint" /> para associar ao <see cref="T:System.Net.Sockets.Socket" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localEP" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.Security.SecurityException">Um chamador mais alto na pilha de chamadas não tem permissão para a operação solicitada.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.Blocking">
      <summary>Obtém ou define um valor que indica se o <see cref="T:System.Net.Sockets.Socket" /> está no modo de bloqueio.</summary>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Net.Sockets.Socket" /> for bloqueado; caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.CancelConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Cancela uma solicitação assíncrona de uma conexão de host remoto.</summary>
      <param name="e">O objeto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> usado para solicitar a conexão com o host remoto chamando um dos métodos <see cref="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType,System.Net.Sockets.SocketAsyncEventArgs)" />.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="e" /> e o <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> não podem ser nulos.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.Security.SecurityException">Um chamador mais alto na pilha de chamadas não tem permissão para a operação solicitada.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Close">
      <summary>Fecha a conexão <see cref="T:System.Net.Sockets.Socket" /> e libera todos os recursos associados.</summary>
    </member>
    <member name="M:System.Net.Sockets.Socket.Close(System.Int32)">
      <summary>Fecha a conexão de <see cref="T:System.Net.Sockets.Socket" /> e libera todos os recursos associados com um tempo limite especificado para permitir que os dados em fila sejam enviados.</summary>
      <param name="timeout">Aguardar até <paramref name="timeout" /> segundos para enviar os dados restantes e, em seguida, fechar o soquete.</param>
    </member>
    <member name="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)">
      <summary>Estabelece uma conexão com o host remoto.</summary>
      <param name="remoteEP">Um <see cref="T:System.Net.EndPoint" /> que representa o dispositivo remoto.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="remoteEP" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.Security.SecurityException">Um chamador mais alto na pilha de chamadas não tem permissão para a operação solicitada.</exception>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Net.Sockets.Socket" /> foi colocado em um estado de escuta chamando <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Connect(System.Net.IPAddress,System.Int32)">
      <summary>Estabelece uma conexão com o host remoto. O host é especificado por um endereço IP e um número da porta.</summary>
      <param name="address">O endereço IP do host remoto.</param>
      <param name="port">O número da porta do host remoto.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O número da porta é inválido.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.NotSupportedException">Este método é válido para soquetes nas famílias <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> ou <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
      <exception cref="T:System.ArgumentException">O comprimento de <paramref name="address" /> é zero.</exception>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Net.Sockets.Socket" /> foi colocado em um estado de escuta chamando <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Connect(System.Net.IPAddress[],System.Int32)">
      <summary>Estabelece uma conexão com o host remoto. O host é especificado por uma matriz de endereços IP e um número da porta.</summary>
      <param name="addresses">Os endereços IP do host remoto.</param>
      <param name="port">O número da porta do host remoto.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="addresses" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O número da porta é inválido.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.NotSupportedException">Este método é válido para soquetes nas famílias <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> ou <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
      <exception cref="T:System.ArgumentException">O comprimento de <paramref name="address" /> é zero.</exception>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Net.Sockets.Socket" /> foi colocado em um estado de escuta chamando <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Connect(System.String,System.Int32)">
      <summary>Estabelece uma conexão com o host remoto. O host é especificado por um nome do host e um número da porta.</summary>
      <param name="host">O nome do host remoto.</param>
      <param name="port">O número da porta do host remoto.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="host" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O número da porta é inválido.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.NotSupportedException">Este método é válido para soquetes nas famílias <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> ou <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Net.Sockets.Socket" /> foi colocado em um estado de escuta chamando <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Inicia uma solicitação assíncrona para uma conexão com um host remoto.</summary>
      <param name="e">O objeto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> a ser usado nessa operação de soquete assíncrono.</param>
      <returns>
        <see langword="true" /> se a operação de E/S está pendente. O evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> no parâmetro <paramref name="e" /> será acionado após a conclusão da operação.  
 <see langword="false" /> se a operação de E/S foi concluída de forma síncrona. Nesse caso, o evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> no parâmetro <paramref name="e" /> não será gerado e o objeto <paramref name="e" /> passado como um parâmetro poderá ser examinado imediatamente depois que a chamada do método for retornada para recuperar o resultado da operação.</returns>
      <exception cref="T:System.ArgumentException">Um argumento não é válido. Essa exceção ocorrerá se vários buffers forem especificados e a propriedade <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> não for nula.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="e" /> e o <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> não podem ser nulos.</exception>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Net.Sockets.Socket" /> está escutando ou uma operação de soquete já estava em andamento usando o objeto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> especificado no parâmetro <paramref name="e" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.NotSupportedException">É necessário o Windows XP ou posterior para esse método. Essa exceção também ocorrerá se o ponto de extremidade local e o <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> não forem da mesma família de endereços.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.Security.SecurityException">Um chamador mais alto na pilha de chamadas não tem permissão para a operação solicitada.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType,System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Inicia uma solicitação assíncrona para uma conexão com um host remoto.</summary>
      <param name="socketType">Um dos valores de <see cref="T:System.Net.Sockets.SocketType" />.</param>
      <param name="protocolType">Um dos valores de <see cref="T:System.Net.Sockets.ProtocolType" />.</param>
      <param name="e">O objeto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> a ser usado nessa operação de soquete assíncrono.</param>
      <returns>
        <see langword="true" /> se a operação de E/S está pendente. O evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> no parâmetro <paramref name="e" /> será acionado após a conclusão da operação.  
 <see langword="false" /> se a operação de E/S foi concluída de forma síncrona. Nesse caso, o evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> no parâmetro <paramref name="e" /> não será gerado e o objeto <paramref name="e" /> passado como um parâmetro poderá ser examinado imediatamente depois que a chamada do método for retornada para recuperar o resultado da operação.</returns>
      <exception cref="T:System.ArgumentException">Um argumento não é válido. Essa exceção ocorrerá se vários buffers forem especificados e a propriedade <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> não for nula.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="e" /> e o <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> não podem ser nulos.</exception>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Net.Sockets.Socket" /> está escutando ou uma operação de soquete já estava em andamento usando o objeto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> especificado no parâmetro <paramref name="e" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.NotSupportedException">É necessário o Windows XP ou posterior para esse método. Essa exceção também ocorrerá se o ponto de extremidade local e o <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> não forem da mesma família de endereços.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.Security.SecurityException">Um chamador mais alto na pilha de chamadas não tem permissão para a operação solicitada.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.Connected">
      <summary>Obtém um valor que indica se um <see cref="T:System.Net.Sockets.Socket" /> está conectado a um host remoto desde a última operação <see cref="Overload:System.Net.Sockets.Socket.Send" /> ou <see cref="Overload:System.Net.Sockets.Socket.Receive" />.</summary>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Net.Sockets.Socket" /> tiver sido conectado a um recurso remoto desde a operação mais recente; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Disconnect(System.Boolean)">
      <summary>Fecha a conexão de soquete e permite a reutilização do soquete.</summary>
      <param name="reuseSocket">
        <see langword="true" /> se o soquete puder ser reutilizado após a conexão atual ser fechada; caso contrário, <see langword="false" />.</param>
      <exception cref="T:System.PlatformNotSupportedException">Esse método requer o Windows 2000 ou anterior, ou a exceção será gerada.</exception>
      <exception cref="T:System.ObjectDisposedException">O objeto <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.DisconnectAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Inicia uma solicitação assíncrona para se desconectar de um ponto de extremidade remoto.</summary>
      <param name="e">O objeto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> a ser usado nessa operação de soquete assíncrono.</param>
      <returns>
        <see langword="true" /> se a operação de E/S está pendente. O evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> no parâmetro <paramref name="e" /> será acionado após a conclusão da operação.  
 <see langword="false" /> se a operação de E/S foi concluída de forma síncrona. Nesse caso, o evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> no parâmetro <paramref name="e" /> não será gerado e o objeto <paramref name="e" /> passado como um parâmetro poderá ser examinado imediatamente depois que a chamada do método for retornada para recuperar o resultado da operação.</returns>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="e" /> não pode ser nulo.</exception>
      <exception cref="T:System.InvalidOperationException">Uma operação de soquete já estava em andamento com o objeto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> especificado no parâmetro <paramref name="e" />.</exception>
      <exception cref="T:System.NotSupportedException">É necessário o Windows XP ou posterior para esse método.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Dispose">
      <summary>Libera todos os recursos usados pela instância atual da classe <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="M:System.Net.Sockets.Socket.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados usados pelo <see cref="T:System.Net.Sockets.Socket" /> e, opcionalmente, descarta os recursos gerenciados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="P:System.Net.Sockets.Socket.DontFragment">
      <summary>Obtém ou define um valor <see cref="T:System.Boolean" /> que especifica se o <see cref="T:System.Net.Sockets.Socket" /> permite que datagramas de protocolo IP sejam fragmentados.</summary>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Net.Sockets.Socket" /> permite a fragmentação de datagramas; caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</returns>
      <exception cref="T:System.NotSupportedException">Essa propriedade pode ser definida apenas para soquetes nas famílias <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> ou <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.DualMode">
      <summary>Obtém ou define um valor de <see cref="T:System.Boolean" /> que especifica se o <see cref="T:System.Net.Sockets.Socket" /> é um soquete de modo duplo, usado para IPv4 e IPv6.</summary>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Net.Sockets.Socket" /> for um soquete de modo duplo; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.DuplicateAndClose(System.Int32)">
      <summary>Duplica a referência de soquete para o processo de destino e fecha o soquete para esse processo.</summary>
      <param name="targetProcessId">A ID do processo de destino em que uma duplicata da referência de soquete é criada.</param>
      <returns>A referência de soquete a ser passada para o processo de destino.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="targetProcessID" /> não é uma ID de processo válida. 

ou - 
Falha na duplicação de referência do soquete.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.EnableBroadcast">
      <summary>Obtém ou define um valor <see cref="T:System.Boolean" /> que especifica se o <see cref="T:System.Net.Sockets.Socket" /> pode enviar ou receber pacotes de difusão.</summary>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Net.Sockets.Socket" /> permitir pacotes de difusão; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Essa opção é válida apenas para um soquete de datagrama.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndAccept(System.Byte[]@,System.IAsyncResult)">
      <summary>Aceita de forma assíncrona uma tentativa de conexão de entrada e cria um novo objeto <see cref="T:System.Net.Sockets.Socket" /> para manipular as comunicações de host remoto. Esse método retorna um buffer que contém os dados iniciais transferidos.</summary>
      <param name="buffer">Uma matriz do tipo <see cref="T:System.Byte" /> que contém os bytes transferidos.</param>
      <param name="asyncResult">Um objeto <see cref="T:System.IAsyncResult" /> que armazena as informações de estado dessa operação assíncrona, bem como os dados definidos pelo usuário.</param>
      <returns>Um objeto <see cref="T:System.Net.Sockets.Socket" /> para manipular as comunicações com o host remoto.</returns>
      <exception cref="T:System.NotSupportedException">Windows NT é necessário para esse método.</exception>
      <exception cref="T:System.ObjectDisposedException">O objeto <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> está vazio.</exception>
      <exception cref="T:System.ArgumentException">O <paramref name="asyncResult" /> não foi criado por uma chamada a <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">O método <see cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" /> foi chamado anteriormente.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o <see cref="T:System.Net.Sockets.Socket" /></exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndAccept(System.Byte[]@,System.Int32@,System.IAsyncResult)">
      <summary>Aceita de forma assíncrona uma tentativa de conexão de entrada e cria um novo objeto <see cref="T:System.Net.Sockets.Socket" /> para manipular as comunicações de host remoto. Esse método retorna um buffer que contém os dados iniciais e o número de bytes transferidos.</summary>
      <param name="buffer">Uma matriz do tipo <see cref="T:System.Byte" /> que contém os bytes transferidos.</param>
      <param name="bytesTransferred">O número de bytes transferidos.</param>
      <param name="asyncResult">Um objeto <see cref="T:System.IAsyncResult" /> que armazena as informações de estado dessa operação assíncrona, bem como os dados definidos pelo usuário.</param>
      <returns>Um objeto <see cref="T:System.Net.Sockets.Socket" /> para manipular as comunicações com o host remoto.</returns>
      <exception cref="T:System.NotSupportedException">Windows NT é necessário para esse método.</exception>
      <exception cref="T:System.ObjectDisposedException">O objeto <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> está vazio.</exception>
      <exception cref="T:System.ArgumentException">O <paramref name="asyncResult" /> não foi criado por uma chamada a <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">O método <see cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" /> foi chamado anteriormente.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o <see cref="T:System.Net.Sockets.Socket" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)">
      <summary>Aceita de forma assíncrona uma tentativa de conexão de entrada e cria um novo <see cref="T:System.Net.Sockets.Socket" /> para manipular as comunicações com o host remoto.</summary>
      <param name="asyncResult">Um <see cref="T:System.IAsyncResult" /> que armazena informações de estado dessa operação assíncrona, além de quaisquer dados definidos pelo usuário.</param>
      <returns>Um <see cref="T:System.Net.Sockets.Socket" /> para manipular as comunicações com o host remoto.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O <paramref name="asyncResult" /> não foi criado por uma chamada para <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete. Consulte a seção Comentários para obter mais informações.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.InvalidOperationException">O método <see cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" /> foi chamado anteriormente.</exception>
      <exception cref="T:System.NotSupportedException">Windows NT é necessário para esse método.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndConnect(System.IAsyncResult)">
      <summary>Encerra uma solicitação de conexão assíncrona pendente.</summary>
      <param name="asyncResult">Um <see cref="T:System.IAsyncResult" /> que armazena informações de estado e dados definidos pelo usuário para essa operação assíncrona.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> não foi retornado por uma chamada ao método <see cref="M:System.Net.Sockets.Socket.BeginConnect(System.Net.EndPoint,System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndConnect(System.IAsyncResult)" /> foi chamado anteriormente para a conexão assíncrona.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndDisconnect(System.IAsyncResult)">
      <summary>Encerra uma solicitação de desconexão assíncrona pendente.</summary>
      <param name="asyncResult">Um objeto <see cref="T:System.IAsyncResult" /> que armazena as informações de estado e os dados definidos pelo usuário para esta operação assíncrona.</param>
      <exception cref="T:System.NotSupportedException">O sistema operacional é o Windows 2000 ou anterior e esse método requer o Windows XP.</exception>
      <exception cref="T:System.ObjectDisposedException">O objeto <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> não foi retornado por uma chamada ao método <see cref="M:System.Net.Sockets.Socket.BeginDisconnect(System.Boolean,System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndDisconnect(System.IAsyncResult)" /> foi chamado anteriormente para a conexão assíncrona.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.Net.WebException">A solicitação de desconexão atingiu o tempo limite.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)">
      <summary>Encerra uma leitura assíncrona pendente.</summary>
      <param name="asyncResult">Um <see cref="T:System.IAsyncResult" /> que armazena informações de estado e dados definidos pelo usuário para essa operação assíncrona.</param>
      <returns>O número de bytes recebidos.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> não foi retornado por uma chamada ao método <see cref="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">O <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> foi chamado anteriormente para a leitura assíncrona.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult,System.Net.Sockets.SocketError@)">
      <summary>Encerra uma leitura assíncrona pendente.</summary>
      <param name="asyncResult">Um <see cref="T:System.IAsyncResult" /> que armazena informações de estado e dados definidos pelo usuário para essa operação assíncrona.</param>
      <param name="errorCode">Um objeto <see cref="T:System.Net.Sockets.SocketError" /> que armazena o erro de soquete.</param>
      <returns>O número de bytes recebidos.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> não foi retornado por uma chamada ao método <see cref="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">O <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> foi chamado anteriormente para a leitura assíncrona.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndReceiveFrom(System.IAsyncResult,System.Net.EndPoint@)">
      <summary>Termina uma leitura assíncrona pendente de um ponto de extremidade específico.</summary>
      <param name="asyncResult">Um <see cref="T:System.IAsyncResult" /> que armazena informações de estado e dados definidos pelo usuário para essa operação assíncrona.</param>
      <param name="endPoint">A fonte de <see cref="T:System.Net.EndPoint" />.</param>
      <returns>Se tiver êxito, o número de bytes recebidos. Caso contrário, retornará 0.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> não foi retornado por uma chamada ao método <see cref="M:System.Net.Sockets.Socket.BeginReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">O <see cref="M:System.Net.Sockets.Socket.EndReceiveFrom(System.IAsyncResult,System.Net.EndPoint@)" /> foi chamado anteriormente para a leitura assíncrona.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)">
      <summary>Termina uma leitura assíncrona pendente de um ponto de extremidade específico. Esse método também revela mais informações sobre o pacote que <see cref="M:System.Net.Sockets.Socket.EndReceiveFrom(System.IAsyncResult,System.Net.EndPoint@)" />.</summary>
      <param name="asyncResult">Um <see cref="T:System.IAsyncResult" /> que armazena informações de estado e dados definidos pelo usuário para essa operação assíncrona.</param>
      <param name="socketFlags">Uma combinação bit a bit dos valores <see cref="T:System.Net.Sockets.SocketFlags" /> para o pacote recebido.</param>
      <param name="endPoint">A fonte de <see cref="T:System.Net.EndPoint" />.</param>
      <param name="ipPacketInformation">O <see cref="T:System.Net.IPAddress" /> e a interface do pacote recebido.</param>
      <returns>Se tiver êxito, o número de bytes recebidos. Caso contrário, retornará 0.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> é <see langword="null" />  

ou - 
<paramref name="endPoint" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> não foi retornado por uma chamada ao método <see cref="M:System.Net.Sockets.Socket.BeginReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">O <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> foi chamado anteriormente para a leitura assíncrona.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)">
      <summary>Encerra um envio assíncrono pendente.</summary>
      <param name="asyncResult">Um <see cref="T:System.IAsyncResult" /> que armazena as informações de estado dessa operação assíncrona.</param>
      <returns>Se for bem-sucedido, o número de bytes enviados para o <see cref="T:System.Net.Sockets.Socket" />; caso contrário, um erro <see cref="T:System.Net.Sockets.Socket" /> inválido.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> não foi retornado por uma chamada ao método <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">O <see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /> foi chamado anteriormente para o envio assíncrono.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult,System.Net.Sockets.SocketError@)">
      <summary>Encerra um envio assíncrono pendente.</summary>
      <param name="asyncResult">Um <see cref="T:System.IAsyncResult" /> que armazena as informações de estado dessa operação assíncrona.</param>
      <param name="errorCode">Um objeto <see cref="T:System.Net.Sockets.SocketError" /> que armazena o erro de soquete.</param>
      <returns>Se for bem-sucedido, o número de bytes enviados para o <see cref="T:System.Net.Sockets.Socket" />; caso contrário, um erro <see cref="T:System.Net.Sockets.Socket" /> inválido.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> não foi retornado por uma chamada ao método <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">O <see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /> foi chamado anteriormente para o envio assíncrono.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndSendFile(System.IAsyncResult)">
      <summary>Encerra um envio assíncrono pendente de um arquivo.</summary>
      <param name="asyncResult">Um objeto <see cref="T:System.IAsyncResult" /> que armazena informações de estado para essa operação assíncrona.</param>
      <exception cref="T:System.NotSupportedException">Windows NT é necessário para esse método.</exception>
      <exception cref="T:System.ObjectDisposedException">O objeto <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> está vazio.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> não foi retornado por uma chamada ao método <see cref="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndSendFile(System.IAsyncResult)" /> foi chamado anteriormente para o <see cref="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.AsyncCallback,System.Object)" /> assíncrono.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete. Consulte a seção Comentários abaixo.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndSendTo(System.IAsyncResult)">
      <summary>Encerra um envio assíncrono pendente para um local específico.</summary>
      <param name="asyncResult">Um <see cref="T:System.IAsyncResult" /> que armazena informações de estado e dados definidos pelo usuário para essa operação assíncrona.</param>
      <returns>Se for bem-sucedido, o número de bytes enviados; caso contrário, um erro <see cref="T:System.Net.Sockets.Socket" /> inválido.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> não foi retornado por uma chamada ao método <see cref="M:System.Net.Sockets.Socket.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint,System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">O <see cref="M:System.Net.Sockets.Socket.EndSendTo(System.IAsyncResult)" /> foi chamado anteriormente para o envio assíncrono.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.ExclusiveAddressUse">
      <summary>Obtém ou define um valor <see cref="T:System.Boolean" /> que especifica se o <see cref="T:System.Net.Sockets.Socket" /> permite que um único processo se associe a uma porta.</summary>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Net.Sockets.Socket" /> permitir que apenas um soquete se associe a uma porta específica; caso contrário, <see langword="false" />. O padrão é <see langword="true" /> para o Windows Server 2003 e Windows XP Service Pack 2 e <see langword="false" /> para todas as outras versões.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> foi chamado para este <see cref="T:System.Net.Sockets.Socket" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Finalize">
      <summary>Libera os recursos usados pela classe <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName)">
      <summary>Retorna o valor de uma opção <see cref="T:System.Net.Sockets.Socket" /> especificada, representada como um objeto.</summary>
      <param name="optionLevel">Um dos valores de <see cref="T:System.Net.Sockets.SocketOptionLevel" />.</param>
      <param name="optionName">Um dos valores de <see cref="T:System.Net.Sockets.SocketOptionName" />.</param>
      <returns>Um objeto que representa o valor da opção. Quando o parâmetro <paramref name="optionName" /> for definido como <see cref="F:System.Net.Sockets.SocketOptionName.Linger" />, o valor retornado é uma instância da classe <see cref="T:System.Net.Sockets.LingerOption" />. Quando <paramref name="optionName" /> for definido como <see cref="F:System.Net.Sockets.SocketOptionName.AddMembership" /> ou <see cref="F:System.Net.Sockets.SocketOptionName.DropMembership" />, o valor retornado é uma instância da classe <see cref="T:System.Net.Sockets.MulticastOption" />. Quando <paramref name="optionName" /> for qualquer outro valor, o valor retornado é um inteiro.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.  

ou - 
<paramref name="optionName" /> foi definido para o valor sem suporte <see cref="F:System.Net.Sockets.SocketOptionName.MaxConnections" />.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Byte[])">
      <summary>Retorna a opção da configuração <see cref="T:System.Net.Sockets.Socket" /> especificada, representada como uma matriz de bytes.</summary>
      <param name="optionLevel">Um dos valores de <see cref="T:System.Net.Sockets.SocketOptionLevel" />.</param>
      <param name="optionName">Um dos valores de <see cref="T:System.Net.Sockets.SocketOptionName" />.</param>
      <param name="optionValue">Uma matriz do tipo <see cref="T:System.Byte" /> que receberá a configuração da opção.</param>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.  

ou - 
Em aplicativos do .NET Compact Framework, o espaço do buffer padrão do Windows CE é definido como 32768 bytes. É possível alterar o espaço do buffer por soquete chamando <see cref="Overload:System.Net.Sockets.Socket.SetSocketOption" />.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)">
      <summary>Retorna o valor da opção <see cref="T:System.Net.Sockets.Socket" /> especificada em uma matriz.</summary>
      <param name="optionLevel">Um dos valores de <see cref="T:System.Net.Sockets.SocketOptionLevel" />.</param>
      <param name="optionName">Um dos valores de <see cref="T:System.Net.Sockets.SocketOptionName" />.</param>
      <param name="optionLength">O comprimento, em bytes, do valor retornado esperado.</param>
      <returns>Uma matriz do tipo <see cref="T:System.Byte" /> que contém o valor da opção de soquete.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.  

ou - 
Em aplicativos do .NET Compact Framework, o espaço do buffer padrão do Windows CE é definido como 32768 bytes. É possível alterar o espaço do buffer por soquete chamando <see cref="Overload:System.Net.Sockets.Socket.SetSocketOption" />.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.Handle">
      <summary>Obtém o identificador de sistema operacional do <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>Um <see cref="T:System.IntPtr" /> que representa o identificador de sistema operacional do <see cref="T:System.Net.Sockets.Socket" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.IOControl(System.Int32,System.Byte[],System.Byte[])">
      <summary>Define os modos de operação de nível inferior do <see cref="T:System.Net.Sockets.Socket" /> usando códigos de controle numéricos.</summary>
      <param name="ioControlCode">Um valor <see cref="T:System.Int32" /> que especifica o código de controle da operação a ser executado.</param>
      <param name="optionInValue">Uma matriz <see cref="T:System.Byte" /> que contém os dados de entrada necessários para a operação.</param>
      <param name="optionOutValue">Uma matriz <see cref="T:System.Byte" /> que contém os dados de saída retornados para a operação.</param>
      <returns>O número de bytes no parâmetro <paramref name="optionOutValue" />.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.InvalidOperationException">Foi feita uma tentativa de alterar o modo de bloqueio sem usar a propriedade <see cref="P:System.Net.Sockets.Socket.Blocking" />.</exception>
      <exception cref="T:System.Security.SecurityException">Um chamador na pilha de chamadas não tem as permissões necessárias.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.IOControl(System.Net.Sockets.IOControlCode,System.Byte[],System.Byte[])">
      <summary>Define modos de operação de nível inferior do <see cref="T:System.Net.Sockets.Socket" /> usando a enumeração <see cref="T:System.Net.Sockets.IOControlCode" /> para especificar códigos de controle.</summary>
      <param name="ioControlCode">Um valor <see cref="T:System.Net.Sockets.IOControlCode" /> que especifica o código de controle da operação a ser executada.</param>
      <param name="optionInValue">Uma matriz do tipo <see cref="T:System.Byte" /> que contém os dados de entrada necessários para a operação.</param>
      <param name="optionOutValue">Uma matriz do tipo <see cref="T:System.Byte" /> que contém os dados de saída retornados pela operação.</param>
      <returns>O número de bytes no parâmetro <paramref name="optionOutValue" />.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.InvalidOperationException">Foi feita uma tentativa de alterar o modo de bloqueio sem usar a propriedade <see cref="P:System.Net.Sockets.Socket.Blocking" />.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.IsBound">
      <summary>Obtém um valor que indica se o <see cref="T:System.Net.Sockets.Socket" /> está associado a uma porta local específica.</summary>
      <returns>
        <see langword="true" /> e o <see cref="T:System.Net.Sockets.Socket" /> for associado a uma porta local; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.LingerState">
      <summary>Obtém ou define um valor que especifica se o <see cref="T:System.Net.Sockets.Socket" /> atrasará ao fechar um soquete em uma tentativa de enviar todos os dados pendentes.</summary>
      <returns>Um <see cref="T:System.Net.Sockets.LingerOption" /> que especifica como perdurar ao fechar um soquete.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Listen(System.Int32)">
      <summary>Coloca um <see cref="T:System.Net.Sockets.Socket" /> em um estado de escuta.</summary>
      <param name="backlog">O comprimento máximo da fila de conexões pendentes.</param>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.LocalEndPoint">
      <summary>Obtém o ponto de extremidade local.</summary>
      <returns>O <see cref="T:System.Net.EndPoint" /> que o <see cref="T:System.Net.Sockets.Socket" /> está usando para comunicações.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.MulticastLoopback">
      <summary>Obtém ou define um valor que especifica se os pacotes de multicast de saída são entregues para o aplicativo de envio.</summary>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Net.Sockets.Socket" /> receber pacotes de multicast de saída; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.NoDelay">
      <summary>Obtém ou define um valor <see cref="T:System.Boolean" /> que especifica se o <see cref="T:System.Net.Sockets.Socket" /> do fluxo está usando o Algoritmo de Nagle.</summary>
      <returns>
        <see langword="false" /> se o <see cref="T:System.Net.Sockets.Socket" /> usa o algoritmo de Nagle; caso contrário, <see langword="true" />. O padrão é <see langword="false" />.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o <see cref="T:System.Net.Sockets.Socket" />.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.OSSupportsIPv4">
      <summary>Indica se o sistema operacional subjacente e os adaptadores de rede dão suporte ao IPv4 (protocolo IP versão 4).</summary>
      <returns>
        <see langword="true" /> se o sistema operacional e os adaptadores de rede derem suporte ao protocolo IPv4; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.OSSupportsIPv6">
      <summary>Indica se o sistema operacional subjacente e os adaptadores de rede dão suporte ao IPv6 (protocolo IP versão 6).</summary>
      <returns>
        <see langword="true" /> se o sistema operacional e os adaptadores de rede derem suporte ao protocolo IPv6; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Poll(System.Int32,System.Net.Sockets.SelectMode)">
      <summary>Determina o status do <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <param name="microSeconds">O tempo de espera por uma resposta, em microssegundos.</param>
      <param name="mode">Um dos valores de <see cref="T:System.Net.Sockets.SelectMode" />.</param>
      <returns>O status do <see cref="T:System.Net.Sockets.Socket" /> com base no valor de modo de sondagem passado no parâmetro <paramref name="mode" />.  
  Modo 
  Valor de Retorno 
 <see cref="F:System.Net.Sockets.SelectMode.SelectRead" /><see langword="true" /> se <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> foi chamado e uma conexão estiver pendente; 
- ou - 
 <see langword="true" /> se os dados estiverem disponíveis para leitura; 
- ou - 
 <see langword="true" /> se a conexão foi fechada, redefinida ou terminada; 
caso contrário, retornará <see langword="false" />.  

 <see cref="F:System.Net.Sockets.SelectMode.SelectWrite" /><see langword="true" />, se houver processamento de um <see cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" /> e a conexão foi bem-sucedida; 
- ou - 
 <see langword="true" /> se for possível enviar os dados; 
caso contrário, retornará <see langword="false" />.  

 <see cref="F:System.Net.Sockets.SelectMode.SelectError" /><see langword="true" /> se o processamento de um <see cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" /> que não é bloqueado e a conexão tiver falhado; 
- ou - 
 <see langword="true" /> se <see cref="F:System.Net.Sockets.SocketOptionName.OutOfBandInline" /> não estiver definido e dados fora de banda estiverem disponíveis; 
caso contrário, retornará <see langword="false" />.</returns>
      <exception cref="T:System.NotSupportedException">O parâmetro <paramref name="mode" /> não é um dos valores <see cref="T:System.Net.Sockets.SelectMode" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete. Consulte os comentários abaixo.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.ProtocolType">
      <summary>Obtém o tipo de protocolo do <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>Um dos valores de <see cref="T:System.Net.Sockets.ProtocolType" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[])">
      <summary>Recebe dados de um <see cref="T:System.Net.Sockets.Socket" /> associado em um buffer de recepção.</summary>
      <param name="buffer">Uma matriz do tipo <see cref="T:System.Byte" /> que é o local de armazenamento dos dados recebidos.</param>
      <returns>O número de bytes recebidos.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.Security.SecurityException">Um chamador na pilha de chamadas não tem as permissões necessárias.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)">
      <summary>Recebe o número de bytes especificado de um <see cref="T:System.Net.Sockets.Socket" /> associado na posição de deslocamento especificada do buffer de recepção usando o <see cref="T:System.Net.Sockets.SocketFlags" /> especificado.</summary>
      <param name="buffer">Uma matriz do tipo <see cref="T:System.Byte" /> que é o local de armazenamento dos dados recebidos.</param>
      <param name="offset">O local no <paramref name="buffer" /> para armazenar os dados recebidos.</param>
      <param name="size">O número de bytes a serem recebidos.</param>
      <param name="socketFlags">Uma combinação bit a bit dos valores <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <returns>O número de bytes recebidos.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> é menor que 0.  

ou - 
<paramref name="offset" /> é maior que o comprimento do <paramref name="buffer" />.  

ou - 
<paramref name="size" /> é menor que 0.  

ou - 
<paramref name="size" /> é maior que o comprimento da subtração de <paramref name="buffer" /> e do valor do parâmetro <paramref name="offset" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> não é uma combinação válida de valores.  

ou - 
A propriedade <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> não foi definida.  

ou - 
Ocorre um erro de sistema operacional ao acessar o <see cref="T:System.Net.Sockets.Socket" />.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.Security.SecurityException">Um chamador na pilha de chamadas não tem as permissões necessárias.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <summary>Recebe dados de um <see cref="T:System.Net.Sockets.Socket" /> associado em um buffer de recepção, usando o <see cref="T:System.Net.Sockets.SocketFlags" /> especificado.</summary>
      <param name="buffer">Uma matriz do tipo <see cref="T:System.Byte" /> que é o local de armazenamento dos dados recebidos.</param>
      <param name="offset">A posição no parâmetro <paramref name="buffer" /> para armazenar os dados recebidos.</param>
      <param name="size">O número de bytes a serem recebidos.</param>
      <param name="socketFlags">Uma combinação bit a bit dos valores <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="errorCode">Um objeto <see cref="T:System.Net.Sockets.SocketError" /> que armazena o erro de soquete.</param>
      <returns>O número de bytes recebidos.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> é menor que 0.  

ou - 
<paramref name="offset" /> é maior que o comprimento do <paramref name="buffer" />.  

ou - 
<paramref name="size" /> é menor que 0.  

ou - 
<paramref name="size" /> é maior que o comprimento da subtração de <paramref name="buffer" /> e do valor do parâmetro <paramref name="offset" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> não é uma combinação válida de valores.  

ou - 
A propriedade <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> não foi definida.  

ou - 
Ocorre um erro de sistema operacional ao acessar o <see cref="T:System.Net.Sockets.Socket" />.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.Security.SecurityException">Um chamador na pilha de chamadas não tem as permissões necessárias.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)">
      <summary>Recebe o número de bytes especificado de dados de um <see cref="T:System.Net.Sockets.Socket" /> associado em um buffer de recepção, usando o <see cref="T:System.Net.Sockets.SocketFlags" /> especificado.</summary>
      <param name="buffer">Uma matriz do tipo <see cref="T:System.Byte" /> que é o local de armazenamento dos dados recebidos.</param>
      <param name="size">O número de bytes a serem recebidos.</param>
      <param name="socketFlags">Uma combinação bit a bit dos valores <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <returns>O número de bytes recebidos.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="buffer" /> excede o tamanho de <paramref name="size" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.Security.SecurityException">Um chamador na pilha de chamadas não tem as permissões necessárias.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Net.Sockets.SocketFlags)">
      <summary>Recebe dados de um <see cref="T:System.Net.Sockets.Socket" /> associado em um buffer de recepção, usando o <see cref="T:System.Net.Sockets.SocketFlags" /> especificado.</summary>
      <param name="buffer">Uma matriz do tipo <see cref="T:System.Byte" /> que é o local de armazenamento dos dados recebidos.</param>
      <param name="socketFlags">Uma combinação bit a bit dos valores <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <returns>O número de bytes recebidos.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.Security.SecurityException">Um chamador na pilha de chamadas não tem as permissões necessárias.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})">
      <summary>Recebe dados de um <see cref="T:System.Net.Sockets.Socket" /> associado na lista de buffers de recepção.</summary>
      <param name="buffers">Uma lista de <see cref="T:System.ArraySegment`1" />s do tipo <see cref="T:System.Byte" /> que contém os dados recebidos.</param>
      <returns>O número de bytes recebidos.</returns>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
      <summary>Recebe dados de um <see cref="T:System.Net.Sockets.Socket" /> associado na lista de buffers de recepção, usando o <see cref="T:System.Net.Sockets.SocketFlags" /> especificado.</summary>
      <param name="buffers">Uma lista de <see cref="T:System.ArraySegment`1" />s do tipo <see cref="T:System.Byte" /> que contém os dados recebidos.</param>
      <param name="socketFlags">Uma combinação bit a bit dos valores <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <returns>O número de bytes recebidos.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" /> é <see langword="null" />.  

ou - 
<paramref name="buffers" />.Count é zero.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <summary>Recebe dados de um <see cref="T:System.Net.Sockets.Socket" /> associado na lista de buffers de recepção, usando o <see cref="T:System.Net.Sockets.SocketFlags" /> especificado.</summary>
      <param name="buffers">Uma lista de <see cref="T:System.ArraySegment`1" />s do tipo <see cref="T:System.Byte" /> que contém os dados recebidos.</param>
      <param name="socketFlags">Uma combinação bit a bit dos valores <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="errorCode">Um objeto <see cref="T:System.Net.Sockets.SocketError" /> que armazena o erro de soquete.</param>
      <returns>O número de bytes recebidos.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" /> é <see langword="null" />.  

ou - 
<paramref name="buffers" />.Count é zero.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Span{System.Byte})">
      <param name="buffer" />
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Span{System.Byte},System.Net.Sockets.SocketFlags)">
      <param name="buffer" />
      <param name="socketFlags" />
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Span{System.Byte},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <param name="buffer" />
      <param name="socketFlags" />
      <param name="errorCode" />
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Inicia uma solicitação assíncrona para receber dados de um objeto <see cref="T:System.Net.Sockets.Socket" /> conectado.</summary>
      <param name="e">O objeto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> a ser usado nessa operação de soquete assíncrono.</param>
      <returns>
        <see langword="true" /> se a operação de E/S está pendente. O evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> no parâmetro <paramref name="e" /> será acionado após a conclusão da operação.  
 <see langword="false" /> se a operação de E/S foi concluída de forma síncrona. Nesse caso, o evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> no parâmetro <paramref name="e" /> não será gerado e o objeto <paramref name="e" /> passado como um parâmetro poderá ser examinado imediatamente depois que a chamada do método for retornada para recuperar o resultado da operação.</returns>
      <exception cref="T:System.ArgumentException">Um argumento era inválido. As propriedades <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> ou <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> no parâmetro <paramref name="e" /> devem referenciar buffers válidos. Uma ou a outra dessas propriedades poderá ser definida, mas não ambas ao mesmo tempo.</exception>
      <exception cref="T:System.InvalidOperationException">Uma operação de soquete já estava em andamento com o objeto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> especificado no parâmetro <paramref name="e" />.</exception>
      <exception cref="T:System.NotSupportedException">É necessário o Windows XP ou posterior para esse método.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.ReceiveBufferSize">
      <summary>Obtém ou define um valor que especifica o tamanho do buffer de recepção do <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>Um <see cref="T:System.Int32" /> que contém o tamanho, em bytes, do buffer de recepção. O padrão é 8192.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O valor especificado para uma operação de definição é menor que 0.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)">
      <summary>Recebe o número de bytes de dados no local especificado no buffer de dados usando o <see cref="T:System.Net.Sockets.SocketFlags" /> especificado e armazena o ponto de extremidade.</summary>
      <param name="buffer">Uma matriz do tipo <see cref="T:System.Byte" /> que é o local de armazenamento dos dados recebidos.</param>
      <param name="offset">A posição no parâmetro <paramref name="buffer" /> para armazenar os dados recebidos.</param>
      <param name="size">O número de bytes a serem recebidos.</param>
      <param name="socketFlags">Uma combinação bit a bit dos valores <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="remoteEP">Um <see cref="T:System.Net.EndPoint" />, passado por referência, que representa o servidor remoto.</param>
      <returns>O número de bytes recebidos.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.  

ou - 
<paramref name="remoteEP" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> é menor que 0.  

ou - 
<paramref name="offset" /> é maior que o comprimento do <paramref name="buffer" />.  

ou - 
<paramref name="size" /> é menor que 0.  

ou - 
<paramref name="size" /> é maior que o comprimento de <paramref name="buffer" /> menos o valor do parâmetro de deslocamento.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> não é uma combinação válida de valores.  

ou - 
A propriedade <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> não foi definida.  

ou - 
Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)">
      <summary>Recebe o número especificado de bytes no buffer de dados usando o <see cref="T:System.Net.Sockets.SocketFlags" /> especificado e armazena o ponto de extremidade.</summary>
      <param name="buffer">Uma matriz do tipo <see cref="T:System.Byte" /> que é o local de armazenamento dos dados recebidos.</param>
      <param name="size">O número de bytes a serem recebidos.</param>
      <param name="socketFlags">Uma combinação bit a bit dos valores <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="remoteEP">Um <see cref="T:System.Net.EndPoint" />, passado por referência, que representa o servidor remoto.</param>
      <returns>O número de bytes recebidos.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.  

ou - 
<paramref name="remoteEP" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="size" /> é menor que 0.  

ou - 
<paramref name="size" /> é maior que o comprimento do <paramref name="buffer" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> não é uma combinação válida de valores.  

ou - 
A propriedade <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> não foi definida.  

ou - 
Ocorre um erro de sistema operacional ao acessar o <see cref="T:System.Net.Sockets.Socket" />.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.Security.SecurityException">Um chamador na pilha de chamadas não tem as permissões necessárias.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Net.EndPoint@)">
      <summary>Recebe um datagrama no buffer de dados e armazena o ponto de extremidade.</summary>
      <param name="buffer">Uma matriz do tipo <see cref="T:System.Byte" /> que é o local de armazenamento dos dados recebidos.</param>
      <param name="remoteEP">Um <see cref="T:System.Net.EndPoint" />, passado por referência, que representa o servidor remoto.</param>
      <returns>O número de bytes recebidos.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.  

ou - 
<paramref name="remoteEP" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.Security.SecurityException">Um chamador na pilha de chamadas não tem as permissões necessárias.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Net.Sockets.SocketFlags,System.Net.EndPoint@)">
      <summary>Recebe um datagrama no buffer de dados, usando o <see cref="T:System.Net.Sockets.SocketFlags" /> especificado e armazena o ponto de extremidade.</summary>
      <param name="buffer">Uma matriz do tipo <see cref="T:System.Byte" /> que é o local de armazenamento dos dados recebidos.</param>
      <param name="socketFlags">Uma combinação bit a bit dos valores <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="remoteEP">Um <see cref="T:System.Net.EndPoint" />, passado por referência, que representa o servidor remoto.</param>
      <returns>O número de bytes recebidos.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.  

ou - 
<paramref name="remoteEP" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.Security.SecurityException">Um chamador na pilha de chamadas não tem as permissões necessárias.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Começa a receber dados de um dispositivo de rede especificado de maneira assíncrona.</summary>
      <param name="e">O objeto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> a ser usado nessa operação de soquete assíncrono.</param>
      <returns>
        <see langword="true" /> se a operação de E/S está pendente. O evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> no parâmetro <paramref name="e" /> será acionado após a conclusão da operação.  
 <see langword="false" /> se a operação de E/S foi concluída de forma síncrona. Nesse caso, o evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> no parâmetro <paramref name="e" /> não será gerado e o objeto <paramref name="e" /> passado como um parâmetro poderá ser examinado imediatamente depois que a chamada do método for retornada para recuperar o resultado da operação.</returns>
      <exception cref="T:System.ArgumentNullException">O <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> não pode ser nulo.</exception>
      <exception cref="T:System.InvalidOperationException">Uma operação de soquete já estava em andamento com o objeto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> especificado no parâmetro <paramref name="e" />.</exception>
      <exception cref="T:System.NotSupportedException">É necessário o Windows XP ou posterior para esse método.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)">
      <summary>Recebe o número de bytes de dados no local especificado no buffer de dados usando o <see cref="T:System.Net.Sockets.SocketFlags" /> especificado e armazena as informações de ponto de extremidade e pacote.</summary>
      <param name="buffer">Uma matriz do tipo <see cref="T:System.Byte" /> que é o local de armazenamento dos dados recebidos.</param>
      <param name="offset">A posição no parâmetro <paramref name="buffer" /> para armazenar os dados recebidos.</param>
      <param name="size">O número de bytes a serem recebidos.</param>
      <param name="socketFlags">Uma combinação bit a bit dos valores <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="remoteEP">Um <see cref="T:System.Net.EndPoint" />, passado por referência, que representa o servidor remoto.</param>
      <param name="ipPacketInformation">Um <see cref="T:System.Net.Sockets.IPPacketInformation" /> que contém informações de endereço e de interface.</param>
      <returns>O número de bytes recebidos.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.  
- ou- 
 <paramref name="remoteEP" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> é menor que 0.  

ou - 
<paramref name="offset" /> é maior que o comprimento do <paramref name="buffer" />.  

ou - 
<paramref name="size" /> é menor que 0.  

ou - 
<paramref name="size" /> é maior que o comprimento de <paramref name="buffer" /> menos o valor do parâmetro de deslocamento.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> não é uma combinação válida de valores.  

ou - 
A propriedade <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> não foi definida.  

ou - 
O .NET Framework está em execução em um processador AMD 64 bits.  

ou - 
Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.NotSupportedException">O sistema operacional é o Windows 2000 ou anterior e esse método requer o Windows XP.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Inicia o recebimento de forma assíncrona do número especificado de bytes de dados no local especificado do buffer de dados, usando o <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.SocketFlags" /> especificado e armazena as informações de ponto de extremidade e de pacote.</summary>
      <param name="e">O objeto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> a ser usado nessa operação de soquete assíncrono.</param>
      <returns>
        <see langword="true" /> se a operação de E/S está pendente. O evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> no parâmetro <paramref name="e" /> será acionado após a conclusão da operação.  
 <see langword="false" /> se a operação de E/S foi concluída de forma síncrona. Nesse caso, o evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> no parâmetro <paramref name="e" /> não será gerado e o objeto <paramref name="e" /> passado como um parâmetro poderá ser examinado imediatamente depois que a chamada do método for retornada para recuperar o resultado da operação.</returns>
      <exception cref="T:System.ArgumentNullException">O <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> não pode ser nulo.</exception>
      <exception cref="T:System.NotSupportedException">É necessário o Windows XP ou posterior para esse método.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.ReceiveTimeout">
      <summary>Obtém ou define um valor que especifica o tempo após o qual uma chamada <see cref="Overload:System.Net.Sockets.Socket.Receive" /> síncrona atingirá o tempo limite.</summary>
      <returns>O valor de tempo limite, em milissegundos. O valor padrão é 0, que indica um período de tempo limite infinito. Especificar -1 também indica um período de tempo limite infinito.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O valor especificado para uma operação de definição é menor que -1.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.RemoteEndPoint">
      <summary>Obtém o ponto de extremidade remoto.</summary>
      <returns>O <see cref="T:System.Net.EndPoint" /> com o qual o <see cref="T:System.Net.Sockets.Socket" /> está se comunicando.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.SafeHandle">
      <summary>Obtém um <see cref="T:System.Net.Sockets.SafeSocketHandle" /> que representa o identificador do soquete que o objeto <see cref="T:System.Net.Sockets.Socket" /> atual encapsula.</summary>
      <returns>Um identificador de soquete exposto de forma segura para o soquete que o objeto <see cref="T:System.Net.Sockets.Socket" /> atual encapsula.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Select(System.Collections.IList,System.Collections.IList,System.Collections.IList,System.Int32)">
      <summary>Determina o status de um ou mais soquetes.</summary>
      <param name="checkRead">Um <see cref="T:System.Collections.IList" /> de instâncias <see cref="T:System.Net.Sockets.Socket" /> a serem verificadas quanto à legibilidade.</param>
      <param name="checkWrite">Um <see cref="T:System.Collections.IList" /> de instâncias <see cref="T:System.Net.Sockets.Socket" /> a serem verificadas quanto à capacidade de gravação.</param>
      <param name="checkError">Um <see cref="T:System.Collections.IList" /> de instâncias <see cref="T:System.Net.Sockets.Socket" /> a serem verificadas quanto a erros.</param>
      <param name="microSeconds">O valor de tempo limite, em microssegundos. Um valor de -1 indica um tempo limite infinito.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="checkRead" /> é <see langword="null" /> ou está vazio.  
-e- 
O parâmetro <paramref name="checkWrite" /> é <see langword="null" /> ou está vazio 
-e- 
O parâmetro <paramref name="checkError" /> é <see langword="null" /> ou está vazio.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Byte[])">
      <summary>Envia dados para um <see cref="T:System.Net.Sockets.Socket" /> conectado.</summary>
      <param name="buffer">Uma matriz do tipo <see cref="T:System.Byte" /> que contém os dados a serem enviados.</param>
      <returns>O número de bytes enviados para o <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)">
      <summary>Envia o número especificado de bytes de dados para um <see cref="T:System.Net.Sockets.Socket" /> conectado, começando no deslocamento especificado e usando os <see cref="T:System.Net.Sockets.SocketFlags" /> especificados.</summary>
      <param name="buffer">Uma matriz do tipo <see cref="T:System.Byte" /> que contém os dados a serem enviados.</param>
      <param name="offset">A posição no buffer de dados na qual o envio de dados deve começar.</param>
      <param name="size">O número de bytes a serem enviados.</param>
      <param name="socketFlags">Uma combinação bit a bit dos valores <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <returns>O número de bytes enviados para o <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> é menor que 0.  

ou - 
<paramref name="offset" /> é maior que o comprimento do <paramref name="buffer" />.  

ou - 
<paramref name="size" /> é menor que 0.  

ou - 
<paramref name="size" /> é maior que o comprimento da subtração de <paramref name="buffer" /> e do valor do parâmetro <paramref name="offset" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> não é uma combinação válida de valores.  

ou - 
Ocorre um erro de sistema operacional ao acessar o <see cref="T:System.Net.Sockets.Socket" />.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <summary>Envia o número especificado de bytes de dados a um <see cref="T:System.Net.Sockets.Socket" /> conectado, iniciando no deslocamento especificado e usando o <see cref="T:System.Net.Sockets.SocketFlags" /> especificado</summary>
      <param name="buffer">Uma matriz do tipo <see cref="T:System.Byte" /> que contém os dados a serem enviados.</param>
      <param name="offset">A posição no buffer de dados na qual o envio de dados deve começar.</param>
      <param name="size">O número de bytes a serem enviados.</param>
      <param name="socketFlags">Uma combinação bit a bit dos valores <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="errorCode">Um objeto <see cref="T:System.Net.Sockets.SocketError" /> que armazena o erro de soquete.</param>
      <returns>O número de bytes enviados para o <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> é menor que 0.  

ou - 
<paramref name="offset" /> é maior que o comprimento do <paramref name="buffer" />.  

ou - 
<paramref name="size" /> é menor que 0.  

ou - 
<paramref name="size" /> é maior que o comprimento da subtração de <paramref name="buffer" /> e do valor do parâmetro <paramref name="offset" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> não é uma combinação válida de valores.  

ou - 
Ocorre um erro de sistema operacional ao acessar o <see cref="T:System.Net.Sockets.Socket" />.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)">
      <summary>Envia o número especificado de bytes de dados para um <see cref="T:System.Net.Sockets.Socket" /> conectado, usando o <see cref="T:System.Net.Sockets.SocketFlags" /> especificado.</summary>
      <param name="buffer">Uma matriz do tipo <see cref="T:System.Byte" /> que contém os dados a serem enviados.</param>
      <param name="size">O número de bytes a serem enviados.</param>
      <param name="socketFlags">Uma combinação bit a bit dos valores <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <returns>O número de bytes enviados para o <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="size" /> é menor que 0 ou excede o tamanho do buffer.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> não é uma combinação válida de valores.  

ou - 
Ocorre um erro de sistema operacional ao acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Net.Sockets.SocketFlags)">
      <summary>Envia dados para um <see cref="T:System.Net.Sockets.Socket" /> conectado usando o <see cref="T:System.Net.Sockets.SocketFlags" /> especificado.</summary>
      <param name="buffer">Uma matriz do tipo <see cref="T:System.Byte" /> que contém os dados a serem enviados.</param>
      <param name="socketFlags">Uma combinação bit a bit dos valores <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <returns>O número de bytes enviados para o <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})">
      <summary>Envia o conjunto de buffers na lista para um <see cref="T:System.Net.Sockets.Socket" /> conectado.</summary>
      <param name="buffers">Uma lista de <see cref="T:System.ArraySegment`1" />s do tipo <see cref="T:System.Byte" /> que contém os dados a serem enviados.</param>
      <returns>O número de bytes enviados para o <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffers" /> está vazio.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete. Consulte a seção Comentários abaixo.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
      <summary>Envia o conjunto de buffers na lista para um <see cref="T:System.Net.Sockets.Socket" /> conectado, usando o <see cref="T:System.Net.Sockets.SocketFlags" /> especificado.</summary>
      <param name="buffers">Uma lista de <see cref="T:System.ArraySegment`1" />s do tipo <see cref="T:System.Byte" /> que contém os dados a serem enviados.</param>
      <param name="socketFlags">Uma combinação bit a bit dos valores <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <returns>O número de bytes enviados para o <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffers" /> está vazio.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <summary>Envia o conjunto de buffers na lista para um <see cref="T:System.Net.Sockets.Socket" /> conectado, usando o <see cref="T:System.Net.Sockets.SocketFlags" /> especificado.</summary>
      <param name="buffers">Uma lista de <see cref="T:System.ArraySegment`1" />s do tipo <see cref="T:System.Byte" /> que contém os dados a serem enviados.</param>
      <param name="socketFlags">Uma combinação bit a bit dos valores <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="errorCode">Um objeto <see cref="T:System.Net.Sockets.SocketError" /> que armazena o erro de soquete.</param>
      <returns>O número de bytes enviados para o <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffers" /> está vazio.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.ReadOnlySpan{System.Byte})">
      <param name="buffer" />
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.ReadOnlySpan{System.Byte},System.Net.Sockets.SocketFlags)">
      <param name="buffer" />
      <param name="socketFlags" />
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.ReadOnlySpan{System.Byte},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <param name="buffer" />
      <param name="socketFlags" />
      <param name="errorCode" />
    </member>
    <member name="M:System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Envia dados de forma assíncrona para um objeto <see cref="T:System.Net.Sockets.Socket" /> conectado.</summary>
      <param name="e">O objeto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> a ser usado nessa operação de soquete assíncrono.</param>
      <returns>
        <see langword="true" /> se a operação de E/S está pendente. O evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> no parâmetro <paramref name="e" /> será acionado após a conclusão da operação.  
 <see langword="false" /> se a operação de E/S foi concluída de forma síncrona. Nesse caso, o evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> no parâmetro <paramref name="e" /> não será gerado e o objeto <paramref name="e" /> passado como um parâmetro poderá ser examinado imediatamente depois que a chamada do método for retornada para recuperar o resultado da operação.</returns>
      <exception cref="T:System.ArgumentException">As propriedades <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> ou <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> no parâmetro <paramref name="e" /> devem referenciar buffers válidos. Uma ou a outra dessas propriedades poderá ser definida, mas não ambas ao mesmo tempo.</exception>
      <exception cref="T:System.InvalidOperationException">Uma operação de soquete já estava em andamento com o objeto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> especificado no parâmetro <paramref name="e" />.</exception>
      <exception cref="T:System.NotSupportedException">É necessário o Windows XP ou posterior para esse método.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">O <see cref="T:System.Net.Sockets.Socket" /> ainda não está conectado ou não foi obtido por meio de um método <see cref="M:System.Net.Sockets.Socket.Accept" />, <see cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> ou <see cref="Overload:System.Net.Sockets.Socket.BeginAccept" />.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.SendBufferSize">
      <summary>Obtém ou define um valor que especifica o tamanho do buffer de envio do <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>Um <see cref="T:System.Int32" /> que contém o tamanho, em bytes, do buffer de envio. O padrão é 8192.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O valor especificado para uma operação de definição é menor que 0.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendFile(System.String)">
      <summary>Envia o arquivo <paramref name="fileName" /> para um objeto <see cref="T:System.Net.Sockets.Socket" /> conectado com o sinalizador de transmissão <see cref="F:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread" />.</summary>
      <param name="fileName">Um <see cref="T:System.String" /> que contém o caminho e o nome do arquivo a ser enviado. Esse parâmetro pode ser <see langword="null" />.</param>
      <exception cref="T:System.NotSupportedException">O soquete não está conectado a um host remoto.</exception>
      <exception cref="T:System.ObjectDisposedException">O objeto <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.InvalidOperationException">O objeto <see cref="T:System.Net.Sockets.Socket" /> não está no modo de bloqueio e não pode aceitar essa chamada síncrona.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo <paramref name="fileName" /> não foi encontrado.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendFile(System.String,System.Byte[],System.Byte[],System.Net.Sockets.TransmitFileOptions)">
      <summary>Envia o arquivo <paramref name="fileName" /> e buffers de dados a um <see cref="T:System.Net.Sockets.Socket" /> conectado usando o valor <see cref="T:System.Net.Sockets.TransmitFileOptions" /> especificado.</summary>
      <param name="fileName">Um <see cref="T:System.String" /> que contém o caminho e o nome do arquivo a ser enviado. Esse parâmetro pode ser <see langword="null" />.</param>
      <param name="preBuffer">Uma matriz <see cref="T:System.Byte" /> que contém dados a serem enviados antes de o arquivo ser enviado. Esse parâmetro pode ser <see langword="null" />.</param>
      <param name="postBuffer">Uma matriz <see cref="T:System.Byte" /> que contém dados a serem enviados depois de o arquivo ser enviado. Esse parâmetro pode ser <see langword="null" />.</param>
      <param name="flags">Um ou mais valores <see cref="T:System.Net.Sockets.TransmitFileOptions" />.</param>
      <exception cref="T:System.NotSupportedException">O sistema operacional não é o Windows NT ou posterior.  

ou -

 O soquete não está conectado a um host remoto.</exception>
      <exception cref="T:System.ObjectDisposedException">O objeto <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.InvalidOperationException">O objeto <see cref="T:System.Net.Sockets.Socket" /> não está no modo de bloqueio e não pode aceitar essa chamada síncrona.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo <paramref name="fileName" /> não foi encontrado.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Envia uma coleção de arquivos ou buffers de dados na memória assincronamente para um objeto <see cref="T:System.Net.Sockets.Socket" /> conectado.</summary>
      <param name="e">O objeto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> a ser usado nessa operação de soquete assíncrono.</param>
      <returns>
        <see langword="true" /> se a operação de E/S está pendente. O evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> no parâmetro <paramref name="e" /> será acionado após a conclusão da operação.  
 <see langword="false" /> se a operação de E/S foi concluída de forma síncrona. Nesse caso, o evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> no parâmetro <paramref name="e" /> não será gerado e o objeto <paramref name="e" /> passado como um parâmetro poderá ser examinado imediatamente depois que a chamada do método for retornada para recuperar o resultado da operação.</returns>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo especificado na propriedade <see cref="P:System.Net.Sockets.SendPacketsElement.FilePath" /> não foi encontrado.</exception>
      <exception cref="T:System.InvalidOperationException">Uma operação de soquete já estava em andamento com o objeto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> especificado no parâmetro <paramref name="e" />.</exception>
      <exception cref="T:System.NotSupportedException">É necessário o Windows XP ou posterior para esse método. Essa exceção também ocorre se o <see cref="T:System.Net.Sockets.Socket" /> não estiver conectado a um host remoto.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Um <see cref="T:System.Net.Sockets.Socket" /> sem conexão está sendo usado e o arquivo sendo enviado excede o tamanho máximo do pacote de transporte subjacente.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.SendTimeout">
      <summary>Obtém ou define um valor que especifica o tempo após o qual uma chamada <see cref="Overload:System.Net.Sockets.Socket.Send" /> síncrona atingirá o tempo limite.</summary>
      <returns>O valor de tempo limite, em milissegundos. Se você definir a propriedade com um valor entre 1 e 499, o valor será alterado para 500. O valor padrão é 0, que indica um período de tempo limite infinito. Especificar -1 também indica um período de tempo limite infinito.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O valor especificado para uma operação de definição é menor que -1.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary>Envia o número especificado de bytes de dados para o ponto de extremidade especificado, começando no local especificado no buffer e usando o <see cref="T:System.Net.Sockets.SocketFlags" /> especificado.</summary>
      <param name="buffer">Uma matriz do tipo <see cref="T:System.Byte" /> que contém os dados a serem enviados.</param>
      <param name="offset">A posição no buffer de dados na qual o envio de dados deve começar.</param>
      <param name="size">O número de bytes a serem enviados.</param>
      <param name="socketFlags">Uma combinação bit a bit dos valores <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="remoteEP">O <see cref="T:System.Net.EndPoint" /> que representa o local de destino dos dados.</param>
      <returns>O número de bytes enviados.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.  

ou - 
<paramref name="remoteEP" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> é menor que 0.  

ou - 
<paramref name="offset" /> é maior que o comprimento do <paramref name="buffer" />.  

ou - 
<paramref name="size" /> é menor que 0.  

ou - 
<paramref name="size" /> é maior que o comprimento da subtração de <paramref name="buffer" /> e do valor do parâmetro <paramref name="offset" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> não é uma combinação válida de valores.  

ou - 
Ocorre um erro de sistema operacional ao acessar o <see cref="T:System.Net.Sockets.Socket" />.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.Security.SecurityException">Um chamador na pilha de chamadas não tem as permissões necessárias.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary>Envia o número especificado de bytes de dados para um ponto de extremidade especificado usando o <see cref="T:System.Net.Sockets.SocketFlags" /> especificado.</summary>
      <param name="buffer">Uma matriz do tipo <see cref="T:System.Byte" /> que contém os dados a serem enviados.</param>
      <param name="size">O número de bytes a serem enviados.</param>
      <param name="socketFlags">Uma combinação bit a bit dos valores <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="remoteEP">O <see cref="T:System.Net.EndPoint" /> que representa o local de destino dos dados.</param>
      <returns>O número de bytes enviados.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.  

ou - 
<paramref name="remoteEP" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O <paramref name="size" /> especificado excede o tamanho de <paramref name="buffer" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Net.EndPoint)">
      <summary>Envia dados ao ponto de extremidade especificado.</summary>
      <param name="buffer">Uma matriz do tipo <see cref="T:System.Byte" /> que contém os dados a serem enviados.</param>
      <param name="remoteEP">O <see cref="T:System.Net.EndPoint" /> que representa o destino dos dados.</param>
      <returns>O número de bytes enviados.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.  

ou - 
<paramref name="remoteEP" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary>Envia dados para um ponto de extremidade específico usando o <see cref="T:System.Net.Sockets.SocketFlags" /> especificado.</summary>
      <param name="buffer">Uma matriz do tipo <see cref="T:System.Byte" /> que contém os dados a serem enviados.</param>
      <param name="socketFlags">Uma combinação bit a bit dos valores <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="remoteEP">O <see cref="T:System.Net.EndPoint" /> que representa o local de destino dos dados.</param>
      <returns>O número de bytes enviados.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.  

ou - 
<paramref name="remoteEP" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Envia dados de maneira assíncrona para um host remoto específico.</summary>
      <param name="e">O objeto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> a ser usado nessa operação de soquete assíncrono.</param>
      <returns>
        <see langword="true" /> se a operação de E/S está pendente. O evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> no parâmetro <paramref name="e" /> será acionado após a conclusão da operação.  
 <see langword="false" /> se a operação de E/S foi concluída de forma síncrona. Nesse caso, o evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> no parâmetro <paramref name="e" /> não será gerado e o objeto <paramref name="e" /> passado como um parâmetro poderá ser examinado imediatamente depois que a chamada do método for retornada para recuperar o resultado da operação.</returns>
      <exception cref="T:System.ArgumentNullException">O <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> não pode ser nulo.</exception>
      <exception cref="T:System.InvalidOperationException">Uma operação de soquete já estava em andamento com o objeto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> especificado no parâmetro <paramref name="e" />.</exception>
      <exception cref="T:System.NotSupportedException">É necessário o Windows XP ou posterior para esse método.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">O protocolo especificado é orientado para a conexão, mas o <see cref="T:System.Net.Sockets.Socket" /> ainda não está conectado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetIPProtectionLevel(System.Net.Sockets.IPProtectionLevel)">
      <summary>Defina o nível de proteção IP em um soquete.</summary>
      <param name="level">O nível de proteção IP a ser definido nesse soquete.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="level" /> não pode ser <see cref="F:System.Net.Sockets.IPProtectionLevel.Unspecified" />. O nível de proteção IP não pode ser definido como não especificado.</exception>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Net.Sockets.AddressFamily" /> do soquete deve ser <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> ou <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Boolean)">
      <summary>Define a opção <see cref="T:System.Net.Sockets.Socket" /> especificada para o valor especificado de <see cref="T:System.Boolean" />.</summary>
      <param name="optionLevel">Um dos valores de <see cref="T:System.Net.Sockets.SocketOptionLevel" />.</param>
      <param name="optionName">Um dos valores de <see cref="T:System.Net.Sockets.SocketOptionName" />.</param>
      <param name="optionValue">O valor da opção, representado como um <see cref="T:System.Boolean" />.</param>
      <exception cref="T:System.ObjectDisposedException">O objeto <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Byte[])">
      <summary>Define a opção <see cref="T:System.Net.Sockets.Socket" /> especificada para o valor especificado, representado como uma matriz de bytes.</summary>
      <param name="optionLevel">Um dos valores de <see cref="T:System.Net.Sockets.SocketOptionLevel" />.</param>
      <param name="optionName">Um dos valores de <see cref="T:System.Net.Sockets.SocketOptionName" />.</param>
      <param name="optionValue">Uma matriz do tipo <see cref="T:System.Byte" /> que representa o valor da opção.</param>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)">
      <summary>Define a opção <see cref="T:System.Net.Sockets.Socket" /> especificada para o valor inteiro especificado.</summary>
      <param name="optionLevel">Um dos valores de <see cref="T:System.Net.Sockets.SocketOptionLevel" />.</param>
      <param name="optionName">Um dos valores de <see cref="T:System.Net.Sockets.SocketOptionName" />.</param>
      <param name="optionValue">Um valor da opção.</param>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Object)">
      <summary>Define a opção <see cref="T:System.Net.Sockets.Socket" /> especificada com o valor especificado, representado como um objeto.</summary>
      <param name="optionLevel">Um dos valores de <see cref="T:System.Net.Sockets.SocketOptionLevel" />.</param>
      <param name="optionName">Um dos valores de <see cref="T:System.Net.Sockets.SocketOptionName" />.</param>
      <param name="optionValue">Uma <see cref="T:System.Net.Sockets.LingerOption" /> ou <see cref="T:System.Net.Sockets.MulticastOption" /> que contém o valor da opção.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="optionValue" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)">
      <summary>Desabilita envios e recebimentos em um <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <param name="how">Um dos valores <see cref="T:System.Net.Sockets.SocketShutdown" /> que especifica a operação que não será mais permitida.</param>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.SocketType">
      <summary>Obtém o tipo do <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>Um dos valores de <see cref="T:System.Net.Sockets.SocketType" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.SupportsIPv4">
      <summary>Obtém um valor que indica se o suporte para IPv4 está disponível e habilitado no host atual.</summary>
      <returns>
        <see langword="true" />Se o host atual oferecer suporte ao protocolo IPv4; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.SupportsIPv6">
      <summary>Obtém um valor que indica se o Framework dá suporte a IPv6 para determinados membros <see cref="T:System.Net.Dns" /> obsoletos.</summary>
      <returns>
        <see langword="true" />se a estrutura oferecer suporte a IPv6 para <see cref="T:System.Net.Dns" /> certos métodos obsoletos <see langword="false" />; caso contrário,.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.Ttl">
      <summary>Obtém ou define um valor que especifica o valor TTL (vida útil) de pacotes IP (Protocolo de Internet) enviados pelo <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>O valor TTL.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">O valor TTL não pode ser definido como um número negativo.</exception>
      <exception cref="T:System.NotSupportedException">Essa propriedade pode ser definida apenas para soquetes nas famílias <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> ou <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete. Esse erro também é retornado quando tiver sido feita uma tentativa para definir o TTL como um valor maior que 255.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.UseOnlyOverlappedIO">
      <summary>Especifica se o soquete deve usar apenas o modo de E/S Sobreposta.</summary>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Net.Sockets.Socket" /> usa apenas E/S sobreposta; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">O soquete foi associado a uma porta de conclusão.</exception>
    </member>
    <member name="T:System.Net.Sockets.SocketAsyncEventArgs">
      <summary>Representa uma operação de soquete assíncrono.</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.#ctor">
      <summary>Cria uma instância <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> vazia.</summary>
      <exception cref="T:System.NotSupportedException">Não há suporte para a plataforma.</exception>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket">
      <summary>Obtém ou define o soquete a ser usado ou o soquete criado para aceitar uma conexão com um método de soquete assíncrono.</summary>
      <returns>O <see cref="T:System.Net.Sockets.Socket" /> a ser usado ou o soquete criado para aceitar uma conexão com um método de soquete assíncrono.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer">
      <summary>Obtém o buffer de dados a ser usado com um método de soquete assíncrono.</summary>
      <returns>Uma matriz <see cref="T:System.Byte" /> que representa o buffer de dados a ser usado com um método de soquete assíncrono.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList">
      <summary>Obtém ou define uma matriz de buffers de dados a ser usada com um método de soquete assíncrono.</summary>
      <returns>Um <see cref="T:System.Collections.IList" /> que representa uma matriz de buffers de dados a serem usados com um método de soquete assíncrono.</returns>
      <exception cref="T:System.ArgumentException">Há buffers ambíguos especificados em uma operação de conjuntos. Essa exceção ocorre se a propriedade <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> foi definida para um valor não nulo e foi feita uma tentativa de definir a propriedade <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> como um valor não nulo.</exception>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.BytesTransferred">
      <summary>Obtém o número de bytes transferidos na operação de soquete.</summary>
      <returns>Um <see cref="T:System.Int32" /> que contém o número de bytes transferidos na operação de soquete.</returns>
    </member>
    <member name="E:System.Net.Sockets.SocketAsyncEventArgs.Completed">
      <summary>O evento usado para concluir uma operação assíncrona.</summary>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError">
      <summary>Obtém a exceção no caso de falha de conexão quando um <see cref="T:System.Net.DnsEndPoint" /> foi usado.</summary>
      <returns>Um <see cref="T:System.Exception" /> que indica a causa do erro de conexão quando um <see cref="T:System.Net.DnsEndPoint" /> foi especificado para a <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> propriedade.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.ConnectSocket">
      <summary>O objeto <see cref="T:System.Net.Sockets.Socket" /> criado e conectado após a conclusão bem-sucedida do método <see cref="Overload:System.Net.Sockets.Socket.ConnectAsync" />.</summary>
      <returns>O objeto <see cref="T:System.Net.Sockets.Socket" /> conectado.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.Count">
      <summary>Obtém a quantidade máxima de dados, em bytes, a ser enviada ou recebida em uma operação assíncrona.</summary>
      <returns>Um <see cref="T:System.Int32" /> que contém a quantidade máxima de dados, em bytes, a ser enviada ou recebida.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.DisconnectReuseSocket">
      <summary>Obtém ou define um valor que especifica se o soquete poderá ser reutilizado após uma operação de desconexão.</summary>
      <returns>Um <see cref="T:System.Boolean" /> que especifica se o soquete pode ser reutilizado após uma operação de desconexão.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.Dispose">
      <summary>Libera os recursos não gerenciados usados pela instância <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> e, opcionalmente, descarta os recursos gerenciados.</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.Finalize">
      <summary>Libera os recursos usados pela classe <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />.</summary>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.LastOperation">
      <summary>Obtém o tipo de operação de soquete executada mais recentemente com esse objeto de contexto.</summary>
      <returns>Uma <see cref="T:System.Net.Sockets.SocketAsyncOperation" /> instância que indica o tipo de operação de soquete executada mais recentemente com este objeto de contexto.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.MemoryBuffer" />
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.Offset">
      <summary>Obtém o deslocamento, em bytes, para o buffer de dados referenciado pela propriedade <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />.</summary>
      <returns>Um <see cref="T:System.Int32" /> que contém o deslocamento, em bytes, para o buffer de dados referenciado pela propriedade <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.OnCompleted(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Representa um método chamado quando uma operação assíncrona é concluída.</summary>
      <param name="e">O evento sinalizado.</param>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.ReceiveMessageFromPacketInfo">
      <summary>Obtém o endereço IP e a interface de um pacote recebido.</summary>
      <returns>Uma <see cref="T:System.Net.Sockets.IPPacketInformation" /> instância que contém o endereço IP de destino e a interface de um pacote recebido.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint">
      <summary>Obtém ou define o ponto de extremidade IP remoto para uma operação assíncrona.</summary>
      <returns>Um <see cref="T:System.Net.EndPoint" /> que representa o ponto de extremidade IP remoto para uma operação assíncrona.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements">
      <summary>Obtém ou define uma matriz de buffers a ser enviada para uma operação assíncrona usada pelo método <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</summary>
      <returns>Uma matriz de <see cref="T:System.Net.Sockets.SendPacketsElement" /> objetos que representa uma matriz de buffers a ser enviada.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsFlags">
      <summary>Obtém ou define uma combinação bit a bit de valores <see cref="T:System.Net.Sockets.TransmitFileOptions" /> para uma operação assíncrona usada pelo método <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</summary>
      <returns>Um <see cref="T:System.Net.Sockets.TransmitFileOptions" /> valor que contém uma combinação de bits de bit que é usada com uma operação assíncrona.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsSendSize">
      <summary>Obtém ou define o tamanho, em bytes, do bloco de dados usado na operação de envio.</summary>
      <returns>Um <see cref="T:System.Int32" /> que contém o tamanho, em bytes, do bloco de dados usado na operação de envio.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Byte[],System.Int32,System.Int32)">
      <summary>Define o buffer de dados a ser usado com um método de soquete assíncrono.</summary>
      <param name="buffer">O buffer de dados a ser usado com um método de soquete assíncrono.</param>
      <param name="offset">O deslocamento, em bytes, do buffer de dados em que a operação é iniciada.</param>
      <param name="count">A quantidade máxima de dados, em bytes, a ser enviada ou recebida no buffer.</param>
      <exception cref="T:System.ArgumentException">Há buffers ambíguos especificados. Essa exceção ocorre quando a propriedade <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> não é nula e a propriedade <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> também não é nula.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Um argumento estava fora do intervalo. Essa exceção ocorre quando o parâmetro <paramref name="offset" /> é menor que zero ou maior que o tamanho da matriz na propriedade <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />. Essa exceção também ocorre quando o parâmetro <paramref name="count" /> for menor que zero ou maior que o tamanho da matriz na propriedade <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> menos o parâmetro <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Int32,System.Int32)">
      <summary>Define o buffer de dados a ser usado com um método de soquete assíncrono.</summary>
      <param name="offset">O deslocamento, em bytes, no buffer de dados em que a operação é iniciada.</param>
      <param name="count">A quantidade máxima de dados, em bytes, a ser enviada ou recebida no buffer.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Um argumento estava fora do intervalo. Essa exceção ocorre quando o parâmetro <paramref name="offset" /> é menor que zero ou maior que o tamanho da matriz na propriedade <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />. Essa exceção também ocorre quando o parâmetro <paramref name="count" /> for menor que zero ou maior que o tamanho da matriz na propriedade <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> menos o parâmetro <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Memory{System.Byte})">
      <param name="buffer" />
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SocketError">
      <summary>Obtém ou define o resultado da operação de soquete assíncrona.</summary>
      <returns>Um <see cref="T:System.Net.Sockets.SocketError" /> que representa o resultado da operação de soquete assíncrona.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SocketFlags">
      <summary>Obtém os resultados de uma operação de soquete assíncrona ou define o comportamento de uma operação assíncrona.</summary>
      <returns>Um <see cref="T:System.Net.Sockets.SocketFlags" /> que representa os resultados de uma operação assíncrona.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.UserToken">
      <summary>Obtém ou define um objeto de usuário ou de aplicativo associado a essa operação de soquete assíncrona.</summary>
      <returns>Um objeto que representa o usuário ou o objeto de aplicativo associado a essa operação de soquete assíncrona.</returns>
    </member>
    <member name="T:System.Net.Sockets.SocketAsyncOperation">
      <summary>O tipo de operação de soquete assíncrono executada mais recentemente com esse objeto de contexto.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Accept">
      <summary>Um operação Accept de soquete.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Connect">
      <summary>Um operação Connect de soquete.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Disconnect">
      <summary>Um operação Disconnect de soquete.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.None">
      <summary>Nenhuma das operações de soquete.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Receive">
      <summary>Um operação Receive de soquete.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.ReceiveFrom">
      <summary>Um operação ReceiveFrom de soquete.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.ReceiveMessageFrom">
      <summary>Um operação ReceiveMessageFrom de soquete.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Send">
      <summary>Um operação Send de soquete.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.SendPackets">
      <summary>Um operação SendPackets de soquete.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.SendTo">
      <summary>Um operação SendTo de soquete.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketFlags">
      <summary>Especifica os comportamentos de envio e recebimento do soquete.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.Broadcast">
      <summary>Indica um pacote de difusão.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.ControlDataTruncated">
      <summary>Indica que os dados de controle não couberam em um buffer interno de 64 KB e foram truncados.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.DontRoute">
      <summary>Enviar sem usar tabelas de roteamento.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.Multicast">
      <summary>Indica um pacote de multicast.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.None">
      <summary>Não usar sinalizadores para essa chamada.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.OutOfBand">
      <summary>Processar dados fora de banda.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.Partial">
      <summary>Envio ou recebimento parcial da mensagem.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.Peek">
      <summary>Inspecionar a mensagem de entrada.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.Truncated">
      <summary>A mensagem era muito grande para caber no buffer especificado e foi truncada.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketInformation">
      <summary>Encapsula as informações necessárias para duplicar um <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="P:System.Net.Sockets.SocketInformation.Options">
      <summary>Obtém ou define as opções para um <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>Uma instância de <see cref="T:System.Net.Sockets.SocketInformationOptions" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketInformation.ProtocolInformation">
      <summary>Obtém ou define as informações de protocolo para um <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>Uma matriz do tipo <see cref="T:System.Byte" />.</returns>
    </member>
    <member name="T:System.Net.Sockets.SocketInformationOptions">
      <summary>Descreve os estados de um <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketInformationOptions.Connected">
      <summary>O <see cref="T:System.Net.Sockets.Socket" /> está conectado.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketInformationOptions.Listening">
      <summary>O <see cref="T:System.Net.Sockets.Socket" /> está escutando novas conexões.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketInformationOptions.NonBlocking">
      <summary>O <see cref="T:System.Net.Sockets.Socket" /> é sem bloqueio.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketInformationOptions.UseOnlyOverlappedIO">
      <summary>O <see cref="T:System.Net.Sockets.Socket" /> usa E/S sobreposta.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketOptionLevel">
      <summary>Define os níveis de opção de soquete para os métodos <see cref="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)" /> e <see cref="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName)" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionLevel.IP">
      <summary>As opções <see cref="T:System.Net.Sockets.Socket" /> se aplicam aos soquetes IP.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionLevel.IPv6">
      <summary>As opções <see cref="T:System.Net.Sockets.Socket" /> se aplicam aos soquetes IPv6.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionLevel.Socket">
      <summary>As opções <see cref="T:System.Net.Sockets.Socket" /> se aplicam a todos os soquetes.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionLevel.Tcp">
      <summary>As opções <see cref="T:System.Net.Sockets.Socket" /> se aplicam aos soquetes TCP.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionLevel.Udp">
      <summary>As opções <see cref="T:System.Net.Sockets.Socket" /> se aplicam aos soquetes UDP.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketOptionName">
      <summary>Define os nomes de opções de configuração.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.AcceptConnection">
      <summary>O soquete está escutando.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.AddMembership">
      <summary>Adiciona uma associação de grupo IP.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.AddSourceMembership">
      <summary>Ingressa em um grupo de origem.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.BlockSource">
      <summary>Bloqueia dados de uma fonte.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Broadcast">
      <summary>Permite o envio de mensagens de difusão no soquete.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.BsdUrgent">
      <summary>Usa dados urgentes conforme definido em RFC-1222. Essa opção pode ser definida apenas uma vez; depois de definida, ela não poderá ser desativada.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ChecksumCoverage">
      <summary>Define ou obtém a cobertura de soma de verificação UDP.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Debug">
      <summary>Registre informações de depuração.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.DontFragment">
      <summary>Não fragmenta os datagramas IP.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.DontLinger">
      <summary>Fecha o soquete normalmente sem demorar-se.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.DontRoute">
      <summary>Não faz roteamento; envia o pacote diretamente aos endereços de interface.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.DropMembership">
      <summary>Remove uma associação de grupo IP.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.DropSourceMembership">
      <summary>Remove um grupo de origem.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Error">
      <summary>Obtém o status de erro e limpa.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ExclusiveAddressUse">
      <summary>Permite limitar um soquete para acesso exclusivo.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Expedited">
      <summary>Use os dados expressos conforme definido em RFC-1222. Essa opção pode ser definida apenas uma vez; depois de definida, ela não poderá ser desativada.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.HeaderIncluded">
      <summary>Indica que o aplicativo fornece o cabeçalho IP para datagramas de saída.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.HopLimit">
      <summary>Especifica que o número máximo de saltos do roteador para um pacote IPv6 (Protocolo de Internet versão 6). Isso é semelhante à TTL (vida útil) para o protocolo IP versão 4.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.IPOptions">
      <summary>Especifica as opções IP a serem inseridas nos datagramas enviados.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.IPProtectionLevel">
      <summary>Habilita a restrição de um soquete de IPv6 para um escopo especificado, como endereços com o mesmo local de link ou o prefixo de local do site. Essa opção de soquete permite aos aplicativos impor restrições de acesso a soquetes IPv6. Essas restrições permitem que um aplicativo em execução em uma LAN privada proteja-se de modo simples e robusto contra ataques externos. Essa opção de soquete amplia ou reduz o escopo de um soquete de escuta, permitindo acesso irrestrito de usuários públicos e privados, quando apropriado, ou restringindo o acesso somente ao mesmo site, conforme necessário. Essa opção de soquete definiu os níveis de proteção especificados na enumeração <see cref="T:System.Net.Sockets.IPProtectionLevel" /> .</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.IpTimeToLive">
      <summary>Define o campo de Vida Útil do cabeçalho IP.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.IPv6Only">
      <summary>Indica se um soquete criado para a família de endereços AF_INET6 é restrito a apenas comunicações IPv6. Soquetes criados para a família de endereços AF_INET6 podem ser usados para comunicações IPv6 e IPv4. Alguns aplicativos podem querer restringir o uso de um soquete criado para a família de endereço AF_INET6 a apenas comunicações IPv6. Quando esse valor é diferente de zero (o padrão no Windows), um soquete criado para a família de endereço AF_INET6 pode ser usada para enviar e receber apenas os pacotes IPv6. Quando esse valor é zero, um soquete criado para a família de endereço AF_INET6 pode ser usado para enviar e receber pacotes para e de um endereço IPv6 ou um endereço IPv4. Observe que a capacidade de interagir com endereços IPv4 requer o uso dos endereços IPv4 mapeados. Essa opção de soquete tem suporte no Windows Vista ou posterior.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.KeepAlive">
      <summary>Usa os keep alives.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Linger">
      <summary>Demora no fechamento caso haja dados não enviados.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.MaxConnections">
      <summary>Não tem suporte; lança um <see cref="T:System.Net.Sockets.SocketException" />, se usado.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.MulticastInterface">
      <summary>Define a interface para pacotes multicast de saída.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.MulticastLoopback">
      <summary>Um loopback de multicast IP.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.MulticastTimeToLive">
      <summary>A vida útil de um multicast IP.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.NoChecksum">
      <summary>Envia datagramas UDP com soma de verificação definida como zero.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.NoDelay">
      <summary>Desabilita o algoritmo Nagle para união de envio.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.OutOfBandInline">
      <summary>Recebe dados fora de banda no fluxo de dados normal.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.PacketInformation">
      <summary>Retorna informações sobre pacotes recebidos.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ReceiveBuffer">
      <summary>Especifica o espaço de buffer por soquete total reservado para recebimentos. Isso não está relacionado ao tamanho máximo da mensagem ou ao tamanho de uma janela TCP.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ReceiveLowWater">
      <summary>Especifica a marca d'água inferior para operações <see cref="Overload:System.Net.Sockets.Socket.Receive" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ReceiveTimeout">
      <summary>Recebe um tempo limite. Essa opção se aplica apenas aos métodos síncronos; ela não tem nenhum efeito em métodos assíncronos, como o método <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ReuseAddress">
      <summary>Permite associar o soquete a um endereço que já está em uso.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ReuseUnicastPort">
      <summary>Indica que o sistema deve adiar a alocação de porta efêmera para conexões de saída. Isso é equivalente a usar a opção de soquete SO_REUSE_UNICASTPORT Winsock2.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.SendBuffer">
      <summary>Especifica o espaço de buffer por soquete total reservado para envios. Isso não está relacionado ao tamanho máximo da mensagem ou ao tamanho de uma janela TCP.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.SendLowWater">
      <summary>Especifica a marca d'água inferior para operações <see cref="Overload:System.Net.Sockets.Socket.Send" /> .</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.SendTimeout">
      <summary>Envia um tempo limite. Essa opção se aplica apenas aos métodos síncronos; ela não tem nenhum efeito em métodos assíncronos, como o método <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.TcpKeepAliveInterval">
      <summary>O número de segundos que uma conexão TCP aguardará por uma resposta de manutenção de atividade antes de enviar outra investigação de manutenção de atividade.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.TcpKeepAliveRetryCount">
      <summary>O número de investigações de manutenção de atividade de TCP que serão enviadas antes que a conexão seja encerrada.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.TcpKeepAliveTime">
      <summary>O número de segundos que uma conexão TCP permanecerá ativa/ociosa antes que investigações de manutenção de atividade sejam enviadas para o remoto.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Type">
      <summary>Obtém o tipo de soquete.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.TypeOfService">
      <summary>Altera o tipo de cabeçalho IP do campo de serviço.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.UnblockSource">
      <summary>Desbloqueia uma fonte bloqueada anteriormente.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.UpdateAcceptContext">
      <summary>Atualiza as propriedades de um soquete aceito usando aquelas de um soquete existente. Isso é equivalente a usar a opção de soquete SO_UPDATE_ACCEPT_CONTEXT Winsock2 e tem suporte apenas em soquetes orientados a conexão.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.UpdateConnectContext">
      <summary>Atualiza as propriedades de um soquete conectado usando aquelas de um soquete existente. Isso é equivalente a usar a opção de soquete SO_UPDATE_CONNECT_CONTEXT Winsock2 e tem suporte apenas em soquetes orientados a conexão.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.UseLoopback">
      <summary>Ignora o hardware quando possível.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketReceiveFromResult">
      <summary>O resultado de uma operação <see cref="M:System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketReceiveFromResult.ReceivedBytes">
      <summary>O número de bytes recebidos. Se a operação <see cref="M:System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)" /> for malsucedida, então 0.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketReceiveFromResult.RemoteEndPoint">
      <summary>A fonte de <see cref="T:System.Net.EndPoint" />.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketReceiveMessageFromResult">
      <summary>O resultado de uma operação <see cref="M:System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketReceiveMessageFromResult.PacketInformation">
      <summary>Um <see cref="T:System.Net.Sockets.IPPacketInformation" /> que contém informações de endereço e de interface.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketReceiveMessageFromResult.ReceivedBytes">
      <summary>O número de bytes recebidos. Se a operação <see cref="M:System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)" /> for malsucedida, esse valor será 0.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketReceiveMessageFromResult.RemoteEndPoint">
      <summary>A fonte de <see cref="T:System.Net.EndPoint" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketReceiveMessageFromResult.SocketFlags">
      <summary>Uma combinação bit a bit dos valores <see cref="T:System.Net.Sockets.SocketFlags" /> para o pacote recebido.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketShutdown">
      <summary>Define constantes usadas pelo método <see cref="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketShutdown.Both">
      <summary>Desabilita um <see cref="T:System.Net.Sockets.Socket" /> para envio e recebimento. Este campo é constante.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketShutdown.Receive">
      <summary>Desabilita um <see cref="T:System.Net.Sockets.Socket" /> para recebimento. Este campo é constante.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketShutdown.Send">
      <summary>Desabilita um <see cref="T:System.Net.Sockets.Socket" /> para envio. Este campo é constante.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketTaskExtensions">
      <summary>Essa classe contém métodos de extensão para a classe <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket)">
      <summary>Executa uma operação assíncrona para aceitar uma tentativa de conexão de entrada no soquete.</summary>
      <param name="socket">O soquete que está escutando conexões.</param>
      <returns>Uma tarefa assíncrona concluída com um <see cref="T:System.Net.Sockets.Socket" /> para lidar com a comunicação com o host remoto.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket,System.Net.Sockets.Socket)">
      <summary>Executa uma operação assíncrona para aceitar uma tentativa de conexão de entrada no soquete.</summary>
      <param name="socket">O soquete que está escutando conexões de entrada.</param>
      <param name="acceptSocket">O objeto <see cref="T:System.Net.Sockets.Socket" /> aceito. Este valor pode ser <see langword="null" />.</param>
      <returns>Uma tarefa assíncrona concluída com um <see cref="T:System.Net.Sockets.Socket" /> para lidar com a comunicação com o host remoto.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.EndPoint)">
      <summary>Estabelece uma conexão com o host remoto.</summary>
      <param name="socket">O soquete usado para estabelecer uma conexão.</param>
      <param name="remoteEP">Um EndPoint que representa o dispositivo remoto.</param>
      <returns>Uma tarefa assíncrona.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress,System.Int32)">
      <summary>Estabelece uma conexão com o host remoto. O host é especificado por um endereço IP e um número da porta.</summary>
      <param name="socket">O soquete no qual executar a operação de conexão.</param>
      <param name="address">O endereço IP do host remoto.</param>
      <param name="port">O número da porta do host remoto.</param>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress[],System.Int32)">
      <summary>Estabelece uma conexão com o host remoto. O host é especificado por uma matriz de endereços IP e um número da porta.</summary>
      <param name="socket">O soquete no qual a operação de conexão é executada.</param>
      <param name="addresses">Os endereços IP do host remoto.</param>
      <param name="port">O número da porta do host remoto.</param>
      <returns>Uma tarefa que representa a operação de conexão assíncrona.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.String,System.Int32)">
      <summary>Estabelece uma conexão com o host remoto. O host é especificado por um nome do host e um número da porta.</summary>
      <param name="socket">O soquete no qual executar a operação de conexão.</param>
      <param name="host">O nome do host remoto.</param>
      <param name="port">O número da porta do host remoto.</param>
      <returns>Uma tarefa assíncrona.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)">
      <summary>Recebe os dados de um soquete conectado.</summary>
      <param name="socket">O soquete no qual executar a operação de recebimento.</param>
      <param name="buffer">Uma matriz que é o local de armazenamento dos dados recebidos.</param>
      <param name="socketFlags">Uma combinação bit a bit dos valores <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <returns>Uma tarefa que representa a operação de recebimento assíncrona. O valor do parâmetro <paramref name="TResult" /> contém o número de bytes recebidos.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
      <summary>Recebe os dados de um soquete conectado.</summary>
      <param name="socket">O soquete no qual executar a operação de recebimento.</param>
      <param name="buffers">Uma matriz que é o local de armazenamento dos dados recebidos.</param>
      <param name="socketFlags">Uma combinação bit a bit dos valores <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <returns>Uma tarefa que representa a operação de recebimento assíncrona. O valor do parâmetro <paramref name="TResult" /> contém o número de bytes recebidos.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.Memory{System.Byte},System.Net.Sockets.SocketFlags,System.Threading.CancellationToken)">
      <param name="socket" />
      <param name="buffer" />
      <param name="socketFlags" />
      <param name="cancellationToken" />
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary>Recebe dados de um dispositivo de rede especificado.</summary>
      <param name="socket">O soquete no qual executar a operação ReceiveFrom.</param>
      <param name="buffer">Uma matriz do tipo Byte que é o local de armazenamento dos dados recebidos.</param>
      <param name="socketFlags">Uma combinação bit a bit dos valores <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="remoteEndPoint">Um EndPoint que representa a fonte dos dados.</param>
      <returns>Uma tarefa assíncrona concluída com um struct SocketReceiveFromResult.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary>Recebe o número de bytes de dados no local especificado no buffer de dados usando o <see cref="T:System.Net.Sockets.SocketFlags" /> especificado e armazena as informações de ponto de extremidade e pacote.</summary>
      <param name="socket">O soquete no qual executar a operação.</param>
      <param name="buffer">Uma matriz que é o local de armazenamento dos dados recebidos.</param>
      <param name="socketFlags">Uma combinação bit a bit dos valores <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="remoteEndPoint">Um <see cref="T:System.Net.EndPoint" /> que representa o servidor remoto.</param>
      <returns>Uma tarefa assíncrona concluída com um struct <see cref="T:System.Net.Sockets.SocketReceiveMessageFromResult" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)">
      <summary>Envia dados para um soquete conectado.</summary>
      <param name="socket">O soquete no qual executar a operação.</param>
      <param name="buffer">Uma matriz do tipo Byte que contém os dados a serem enviados.</param>
      <param name="socketFlags">Uma combinação bit a bit dos valores <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <returns>Uma tarefa assíncrona concluída com o número de bytes enviados ao soquete se a operação foi bem-sucedida. Caso contrário, a tarefa será concluída com um erro de soquete inválido.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
      <summary>Envia dados para um soquete conectado.</summary>
      <param name="socket">O soquete no qual executar a operação.</param>
      <param name="buffers">Uma matriz que contém os dados a serem enviados.</param>
      <param name="socketFlags">Uma combinação bit a bit dos valores <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <returns>Uma tarefa assíncrona concluída com o número de bytes enviados ao soquete se a operação foi bem-sucedida. Caso contrário, a tarefa será concluída com um erro de soquete inválido.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.ReadOnlyMemory{System.Byte},System.Net.Sockets.SocketFlags,System.Threading.CancellationToken)">
      <param name="socket" />
      <param name="buffer" />
      <param name="socketFlags" />
      <param name="cancellationToken" />
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.SendToAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary>Envia dados de maneira assíncrona para um host remoto específico.</summary>
      <param name="socket">O soquete no qual executar a operação.</param>
      <param name="buffer">Uma matriz que contém os dados a serem enviados.</param>
      <param name="socketFlags">Uma combinação bit a bit dos valores <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="remoteEP">Um <see cref="T:System.Net.EndPoint" /> que representa o dispositivo remoto.</param>
      <returns>Uma tarefa assíncrona concluída com o número de bytes enviados se a operação foi bem-sucedida. Caso contrário, a tarefa será concluída com um erro de soquete inválido.</returns>
    </member>
    <member name="T:System.Net.Sockets.SocketType">
      <summary>Especifica o tipo de soquete que uma instância da classe <see cref="T:System.Net.Sockets.Socket" /> representa.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Dgram">
      <summary>Dá suporte a datagramas, mensagens sem conexão e não confiáveis de um comprimento máximo fixo (normalmente pequeno). As mensagens podem ser perdidas ou duplicadas e podem chegar fora de ordem. Um <see cref="T:System.Net.Sockets.Socket" /> do tipo <see cref="F:System.Net.Sockets.SocketType.Dgram" /> não exige nenhuma conexão antes de enviar e receber dados e pode se comunicar com vários pares. <see cref="F:System.Net.Sockets.SocketType.Dgram" /> usa o Protocolo de Datagrama (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Udp" />) e o <see langword="AddressFamily" />.<see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> família de endereços.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Raw">
      <summary>Dá suporte ao acesso ao protocolo de transporte subjacente. Usando <see cref="F:System.Net.Sockets.SocketType.Raw" />, é possível se comunicar usando protocolos como o protocolo ICMP (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Icmp" />) e o Protocolo IGMP (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Igmp" />). Seu aplicativo deve fornecer um cabeçalho IP completo no envio. Datagramas recebidos retornam com o cabeçalho IP e opções intactas.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Rdm">
      <summary>Dá suporte a mensagens entregues com confiança, sem conexão e orientadas a mensagens e preserva os limites das mensagens em dados. Mensagens RDM (Mensagens Entregues com Confiança) chegam não duplicadas e em ordem. Além disso, o remetente será notificado se as mensagens forem perdidas. Se você inicializar um <see cref="T:System.Net.Sockets.Socket" /> usando <see cref="F:System.Net.Sockets.SocketType.Rdm" />, não será necessária uma conexão de host remoto antes de enviar e receber dados. Com <see cref="F:System.Net.Sockets.SocketType.Rdm" />, é possível se comunicar com vários pares.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Seqpacket">
      <summary>Fornece a transferência bidirecional confiável e orientada a conexões de fluxos de bytes ordenados em uma rede. <see cref="F:System.Net.Sockets.SocketType.Seqpacket" /> não duplica dados e preserva limites dentro do fluxo de dados. Um <see cref="T:System.Net.Sockets.Socket" /> de tipo <see cref="F:System.Net.Sockets.SocketType.Seqpacket" /> se comunica com um par único e requer uma conexão de host remoto antes de a comunicação começar.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Stream">
      <summary>Dá suporte a fluxos de bytes bidirecionais, confiáveis e baseados em conexão sem a duplicação de dados e sem a preservação de limites. Um <see cref="T:System.Net.Sockets.Socket" /> desse tipo se comunica com um par único e requer uma conexão de host remoto antes de a comunicação começar. <see cref="F:System.Net.Sockets.SocketType.Stream" /> usa o protocolo TCP (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Tcp" />) e o <see langword="AddressFamily" />.<see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> família de endereços.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Unknown">
      <summary>Especifica um tipo <see cref="T:System.Net.Sockets.Socket" /> desconhecido.</summary>
    </member>
    <member name="T:System.Net.Sockets.TcpClient">
      <summary>Fornece conexões do cliente de serviços de rede TCP.</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Sockets.TcpClient" />.</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Sockets.TcpClient" /> e a associa ao ponto de extremidade local especificado.</summary>
      <param name="localEP">O <see cref="T:System.Net.IPEndPoint" /> ao qual você associa o TCP <see cref="T:System.Net.Sockets.Socket" />.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="localEP" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Sockets.TcpClient" /> com a família especificada.</summary>
      <param name="family">O <see cref="P:System.Net.IPAddress.AddressFamily" /> do protocolo IP.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="family" /> não é igual a AddressFamily.InterNetwork 

ou - 
O parâmetro <paramref name="family" /> não é igual a AddressFamily.InterNetworkV6</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Sockets.TcpClient" /> e se conecta à porta especificada no host especificado.</summary>
      <param name="hostname">O nome DNS do host remoto ao qual você pretende se conectar.</param>
      <param name="port">O número da porta do host remoto ao qual você pretende se conectar.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="hostname" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O parâmetro <paramref name="port" /> não está entre <see cref="F:System.Net.IPEndPoint.MinPort" /> e <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao acessar o soquete.</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.Active">
      <summary>Obtém ou define um valor que indica se uma conexão foi estabelecida.</summary>
      <returns>
        <see langword="true" /> se a conexão tiver sido estabelecida; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.Available">
      <summary>Obtém a quantidade de dados recebidos da rede e disponíveis para leitura.</summary>
      <returns>O número de bytes de dados recebidos da rede e disponíveis para serem lidos.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Inicia uma solicitação assíncrona para uma conexão de host remoto. O host remoto é especificado por um <see cref="T:System.Net.IPAddress" /> e um número da porta (<see cref="T:System.Int32" />).</summary>
      <param name="address">O <see cref="T:System.Net.IPAddress" /> do host remoto.</param>
      <param name="port">O número da porta do host remoto.</param>
      <param name="requestCallback">Um delegado <see cref="T:System.AsyncCallback" /> que faz referência ao método a ser invocado quando a operação é concluída.</param>
      <param name="state">Um objeto definido pelo usuário que contém informações sobre a operação de conexão. Esse objeto é passado para o delegado <paramref name="requestCallback" /> quando a operação é concluída.</param>
      <returns>Um objeto <see cref="T:System.IAsyncResult" /> que faz referência à conexão assíncrona.</returns>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="address" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.Security.SecurityException">Um chamador mais alto na pilha de chamadas não tem permissão para a operação solicitada.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O número da porta é inválido.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
      <summary>Inicia uma solicitação assíncrona para uma conexão de host remoto. O host remoto é especificado por uma matriz <see cref="T:System.Net.IPAddress" /> e um número da porta (<see cref="T:System.Int32" />).</summary>
      <param name="addresses">Pelo menos um <see cref="T:System.Net.IPAddress" /> que designa os hosts remotos.</param>
      <param name="port">O número da porta dos hosts remotos.</param>
      <param name="requestCallback">Um delegado <see cref="T:System.AsyncCallback" /> que faz referência ao método a ser invocado quando a operação é concluída.</param>
      <param name="state">Um objeto definido pelo usuário que contém informações sobre a operação de conexão. Esse objeto é passado para o delegado <paramref name="requestCallback" /> quando a operação é concluída.</param>
      <returns>Um objeto <see cref="T:System.IAsyncResult" /> que faz referência à conexão assíncrona.</returns>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="addresses" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.Security.SecurityException">Um chamador mais alto na pilha de chamadas não tem permissão para a operação solicitada.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O número da porta é inválido.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Inicia uma solicitação assíncrona para uma conexão de host remoto. O host remoto é especificado por um nome do host (<see cref="T:System.String" />) e um número da porta (<see cref="T:System.Int32" />).</summary>
      <param name="host">O nome do host remoto.</param>
      <param name="port">O número da porta do host remoto.</param>
      <param name="requestCallback">Um delegado <see cref="T:System.AsyncCallback" /> que faz referência ao método a ser invocado quando a operação é concluída.</param>
      <param name="state">Um objeto definido pelo usuário que contém informações sobre a operação de conexão. Esse objeto é passado para o delegado <paramref name="requestCallback" /> quando a operação é concluída.</param>
      <returns>Um objeto <see cref="T:System.IAsyncResult" /> que faz referência à conexão assíncrona.</returns>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="host" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.Security.SecurityException">Um chamador mais alto na pilha de chamadas não tem permissão para a operação solicitada.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O número da porta é inválido.</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.Client">
      <summary>Obtém ou define o <see cref="T:System.Net.Sockets.Socket" /> subjacente.</summary>
      <returns>O <see cref="T:System.Net.Sockets.Socket" /> da rede subjacente.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Close">
      <summary>Descarta essa instância de <see cref="T:System.Net.Sockets.TcpClient" /> e solicita que a conexão TCP subjacente seja fechada.</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
      <summary>Conecta o cliente a um host TCP remoto usando o número da porta e o endereço IP especificados.</summary>
      <param name="address">O <see cref="T:System.Net.IPAddress" /> do host ao qual você pretende se conectar.</param>
      <param name="port">O número da porta à qual você pretende se conectar.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="address" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O <paramref name="port" /> não está entre o <see cref="F:System.Net.IPEndPoint.MinPort" /> e o <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.TcpClient" /> está fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
      <summary>Conecta o cliente a um host TCP remoto usando o número da porta e endereços IP especificados.</summary>
      <param name="ipAddresses">A matriz <see cref="T:System.Net.IPAddress" /> do host ao qual você pretende se conectar.</param>
      <param name="port">O número da porta à qual você pretende se conectar.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="ipAddresses" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O número da porta é inválido.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.Security.SecurityException">Um chamador mais alto na pilha de chamadas não tem permissão para a operação solicitada.</exception>
      <exception cref="T:System.NotSupportedException">Este método é válido para soquetes que usam o sinalizador <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> ou o sinalizador <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
      <summary>Conecta o cliente a um host TCP remoto usando o ponto de extremidade de rede remoto especificado.</summary>
      <param name="remoteEP">O <see cref="T:System.Net.IPEndPoint" /> ao qual você pretende se conectar.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="remoteEp" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.TcpClient" /> está fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
      <summary>Conecta o cliente à porta especificada no host especificado.</summary>
      <param name="hostname">O nome DNS do host remoto ao qual você pretende se conectar.</param>
      <param name="port">O número da porta do host remoto ao qual você pretende se conectar.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="hostname" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O parâmetro <paramref name="port" /> não está entre <see cref="F:System.Net.IPEndPoint.MinPort" /> e <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.TcpClient" /> está fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
      <summary>Conecta o cliente a um host TCP remoto usando o número da porta e o endereço IP especificados como uma operação assíncrona.</summary>
      <param name="address">O <see cref="T:System.Net.IPAddress" /> do host ao qual você pretende se conectar.</param>
      <param name="port">O número da porta à qual você pretende se conectar.</param>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="address" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O <paramref name="port" /> não está entre o <see cref="F:System.Net.IPEndPoint.MinPort" /> e o <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.TcpClient" /> está fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
      <summary>Conecta o cliente a um host de TCP remoto usando o número da porta e os endereços IP especificados como uma operação assíncrona.</summary>
      <param name="addresses">A matriz <see cref="T:System.Net.IPAddress" /> do host ao qual você pretende se conectar.</param>
      <param name="port">O número da porta à qual você pretende se conectar.</param>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="ipAddresses" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O número da porta é inválido.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
      <exception cref="T:System.Security.SecurityException">Um chamador mais alto na pilha de chamadas não tem permissão para a operação solicitada.</exception>
      <exception cref="T:System.NotSupportedException">Este método é válido para soquetes que usam o sinalizador <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> ou o sinalizador <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
      <summary>Conecta o cliente à porta TCP especificada no host especificado como uma operação assíncrona.</summary>
      <param name="host">O nome DNS do host remoto ao qual você pretende se conectar.</param>
      <param name="port">O número da porta do host remoto ao qual você pretende se conectar.</param>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="hostname" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O parâmetro <paramref name="port" /> não está entre <see cref="F:System.Net.IPEndPoint.MinPort" /> e <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.TcpClient" /> está fechado.</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.Connected">
      <summary>Obtém um valor que indica se o <see cref="T:System.Net.Sockets.Socket" /> subjacente de um <see cref="T:System.Net.Sockets.TcpClient" /> está conectado a um host remoto.</summary>
      <returns>
        <see langword="true" /> se o <see cref="P:System.Net.Sockets.TcpClient.Client" /> soquete tiver sido conectado a um recurso remoto desde a operação mais recente; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Dispose">
      <summary>Libera os recursos gerenciados e não gerenciados usados pelo <see cref="T:System.Net.Sockets.TcpClient" />.</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados usados pelo <see cref="T:System.Net.Sockets.TcpClient" /> e opcionalmente libera os recursos gerenciados.</summary>
      <param name="disposing">Definido como <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
      <summary>Encerra uma tentativa de conexão assíncrona pendente.</summary>
      <param name="asyncResult">Um objeto <see cref="T:System.IAsyncResult" /> retornado por uma chamada para <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" />.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="asyncResult" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="asyncResult" /> não retornado por uma chamada para o método <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" />.</exception>
      <exception cref="T:System.InvalidOperationException">O método <see cref="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" /> foi chamado anteriormente para a conexão assíncrona.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao tentar acessar o <see cref="T:System.Net.Sockets.Socket" />.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> subjacente foi fechado.</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
      <summary>Obtém ou define um valor <see cref="T:System.Boolean" /> que especifica se o <see cref="T:System.Net.Sockets.TcpClient" /> permite que um único cliente use uma porta.</summary>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Net.Sockets.TcpClient" /> permitir que apenas um cliente use uma porta específica; caso contrário, <see langword="false" />. O padrão é <see langword="true" /> para o Windows Server 2003 e Windows XP Service Pack 2 e posterior e <see langword="false" /> para todas as outras versões.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Erro ao tentar acessar o soquete subjacente.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> subjacente foi fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Finalize">
      <summary>Libera os recursos usados pela classe <see cref="T:System.Net.Sockets.TcpClient" />.</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.GetStream">
      <summary>Retorna o <see cref="T:System.Net.Sockets.NetworkStream" /> usado para enviar e receber dados.</summary>
      <returns>O <see cref="T:System.Net.Sockets.NetworkStream" /> subjacente.</returns>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Net.Sockets.TcpClient" /> não está conectado a um host remoto.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.TcpClient" /> foi fechado.</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.LingerState">
      <summary>Obtém ou define as informações sobre o estado remanescente do soquete associado.</summary>
      <returns>Um <see cref="T:System.Net.Sockets.LingerOption" />. Por padrão, a remanescência está desabilitada.</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.NoDelay">
      <summary>Obtém ou define um valor que desabilita um atraso ao enviar ou receber buffers que não estão cheios.</summary>
      <returns>
        <see langword="true" />Se o atraso estiver desabilitado; caso contrário <see langword="false" />,. O valor padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
      <summary>Obtém ou define o tamanho do buffer de recepção.</summary>
      <returns>O tamanho do buffer de recepção, em bytes. O valor padrão é de 8.192 bytes.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Erro ao definir o tamanho do buffer.  

ou -  

 Em aplicativos do .NET Compact Framework, não é possível definir essa propriedade. Para obter uma solução alternativa, consulte Comentários sobre a plataforma em Comentários.</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.ReceiveTimeout">
      <summary>Obtém ou define a quantidade de tempo que um <see cref="T:System.Net.Sockets.TcpClient" /> aguardará para receber dados depois que uma operação de leitura for iniciada.</summary>
      <returns>O valor de tempo limite da conexão em milissegundos. O valor padrão é 0.</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.SendBufferSize">
      <summary>Obtém ou define o tamanho do buffer de envio.</summary>
      <returns>O tamanho, em bytes, do buffer de envio. O valor padrão é de 8.192 bytes.</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.SendTimeout">
      <summary>Obtém ou define a quantidade de tempo que um <see cref="T:System.Net.Sockets.TcpClient" /> aguardará para que uma operação de envio seja concluída com êxito.</summary>
      <returns>O valor de tempo limite de envio, em milissegundos. O padrão é 0.</returns>
    </member>
    <member name="T:System.Net.Sockets.TcpListener">
      <summary>Escuta conexões de clientes de rede TCP.</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.#ctor(System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Sockets.TcpListener" /> que escuta na porta especificada.</summary>
      <param name="port">A porta na qual escutar tentativas de conexão de entrada.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> não está entre <see cref="F:System.Net.IPEndPoint.MinPort" /> e <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPAddress,System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Sockets.TcpListener" /> que escuta tentativas de conexões de entrada no endereço IP local e no número da porta especificados.</summary>
      <param name="localaddr">Um <see cref="T:System.Net.IPAddress" /> que representa o endereço IP local.</param>
      <param name="port">A porta na qual escutar tentativas de conexão de entrada.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localaddr" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> não está entre <see cref="F:System.Net.IPEndPoint.MinPort" /> e <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPEndPoint)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Sockets.TcpListener" /> com o ponto de extremidade local especificado.</summary>
      <param name="localEP">Um <see cref="T:System.Net.IPEndPoint" /> que representa o ponto de extremidade local ao qual o ouvinte <see cref="T:System.Net.Sockets.Socket" /> será associado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localEP" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.AcceptSocket">
      <summary>Aceita uma solicitação de conexão pendente.</summary>
      <returns>Um <see cref="T:System.Net.Sockets.Socket" /> usado para enviar e receber dados.</returns>
      <exception cref="T:System.InvalidOperationException">O ouvinte não foi iniciado com uma chamada para <see cref="M:System.Net.Sockets.TcpListener.Start" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.AcceptSocketAsync">
      <summary>Aceita uma solicitação de conexão pendente como uma operação assíncrona.</summary>
      <returns>O objeto de tarefa que representa a operação assíncrona. A propriedade <see cref="P:System.Threading.Tasks.Task`1.Result" /> no objeto da tarefa retorna um <see cref="T:System.Net.Sockets.Socket" /> usado para enviar e receber dados.</returns>
      <exception cref="T:System.InvalidOperationException">O ouvinte não foi iniciado com uma chamada para <see cref="M:System.Net.Sockets.TcpListener.Start" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.AcceptTcpClient">
      <summary>Aceita uma solicitação de conexão pendente.</summary>
      <returns>Um <see cref="T:System.Net.Sockets.TcpClient" /> usado para enviar e receber dados.</returns>
      <exception cref="T:System.InvalidOperationException">O ouvinte não foi iniciado com uma chamada para <see cref="M:System.Net.Sockets.TcpListener.Start" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Use a propriedade <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> para obter o código de erro específico. Quando tiver obtido esse código, você poderá consultar a documentação de códigos de erro da API da versão 2 do Windows Sockets para obter uma descrição detalhada do erro.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.AcceptTcpClientAsync">
      <summary>Aceita uma solicitação de conexão pendente como uma operação assíncrona.</summary>
      <returns>O objeto de tarefa que representa a operação assíncrona. A propriedade <see cref="P:System.Threading.Tasks.Task`1.Result" /> no objeto da tarefa retorna um <see cref="T:System.Net.Sockets.TcpClient" /> usado para enviar e receber dados.</returns>
      <exception cref="T:System.InvalidOperationException">O ouvinte não foi iniciado com uma chamada para <see cref="M:System.Net.Sockets.TcpListener.Start" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Use a propriedade <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> para obter o código de erro específico. Quando tiver obtido esse código, você poderá consultar a documentação de códigos de erro da API da versão 2 do Windows Sockets para obter uma descrição detalhada do erro.</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpListener.Active">
      <summary>Obtém um valor que indica se <see cref="T:System.Net.Sockets.TcpListener" /> está ouvindo ativamente as conexões de cliente.</summary>
      <returns>
        <see langword="true" /> se <see cref="T:System.Net.Sockets.TcpListener" /> estiver escutando ativamente; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)">
      <summary>Habilita ou desabilita a passagem de NAT (Conversão de Endereços de Rede) em uma instância de <see cref="T:System.Net.Sockets.TcpListener" />.</summary>
      <param name="allowed">Um valor booliano que especifica se a passagem de NAT deve ser habilitada ou desabilitada.</param>
      <exception cref="T:System.InvalidOperationException">O método <see cref="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)" /> foi chamado após chamar o método <see cref="M:System.Net.Sockets.TcpListener.Start" /></exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)">
      <summary>Inicia uma operação assíncrona para aceitar uma tentativa de conexão de entrada.</summary>
      <param name="callback">Um delegado <see cref="T:System.AsyncCallback" /> que faz referência ao método a ser invocado quando a operação é concluída.</param>
      <param name="state">Um objeto definido pelo usuário que contém informações sobre a operação de aceitação. Esse objeto é passado para o delegado <paramref name="callback" /> quando a operação é concluída.</param>
      <returns>Um <see cref="T:System.IAsyncResult" /> que faz referência à criação assíncrona do <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)">
      <summary>Inicia uma operação assíncrona para aceitar uma tentativa de conexão de entrada.</summary>
      <param name="callback">Um delegado <see cref="T:System.AsyncCallback" /> que faz referência ao método a ser invocado quando a operação é concluída.</param>
      <param name="state">Um objeto definido pelo usuário que contém informações sobre a operação de aceitação. Esse objeto é passado para o delegado <paramref name="callback" /> quando a operação é concluída.</param>
      <returns>Um <see cref="T:System.IAsyncResult" /> que faz referência à criação assíncrona do <see cref="T:System.Net.Sockets.TcpClient" />.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.Create(System.Int32)">
      <summary>Cria uma nova instância <see cref="T:System.Net.Sockets.TcpListener" /> para escutar na porta especificada.</summary>
      <param name="port">A porta na qual escutar tentativas de conexão de entrada.</param>
      <returns>Uma nova instância <see cref="T:System.Net.Sockets.TcpListener" /> para escutar na porta especificada.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)">
      <summary>Aceita de forma assíncrona uma tentativa de conexão de entrada e cria um novo <see cref="T:System.Net.Sockets.Socket" /> para manipular as comunicações com o host remoto.</summary>
      <param name="asyncResult">Um <see cref="T:System.IAsyncResult" /> retornado por uma chamada para o método <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" />.</param>
      <returns>Um <see cref="T:System.Net.Sockets.Socket" />.  
O <see cref="T:System.Net.Sockets.Socket" /> usado para enviar e receber dados.</returns>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> subjacente foi fechado.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="asyncResult" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="asyncResult" /> não foi criado por uma chamada para o método <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">O método <see cref="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)" /> foi chamado anteriormente.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Erro ao tentar acessar o <see cref="T:System.Net.Sockets.Socket" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.EndAcceptTcpClient(System.IAsyncResult)">
      <summary>Aceita de forma assíncrona uma tentativa de conexão de entrada e cria um novo <see cref="T:System.Net.Sockets.TcpClient" /> para manipular as comunicações com o host remoto.</summary>
      <param name="asyncResult">Um <see cref="T:System.IAsyncResult" /> retornado por uma chamada para o método <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)" />.</param>
      <returns>Um <see cref="T:System.Net.Sockets.TcpClient" />.  
O <see cref="T:System.Net.Sockets.TcpClient" /> usado para enviar e receber dados.</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpListener.ExclusiveAddressUse">
      <summary>Obtém ou define um valor <see cref="T:System.Boolean" /> que especifica se o <see cref="T:System.Net.Sockets.TcpListener" /> permite que apenas um soquete subjacente escute uma porta específica.</summary>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Net.Sockets.TcpListener" /> permitir apenas um <see cref="T:System.Net.Sockets.TcpListener" /> para escutar uma porta específica; caso contrário, <see langword="false" />. . O padrão é <see langword="true" /> para o Windows Server 2003 e Windows XP Service Pack 2 e posterior e <see langword="false" /> para todas as outras versões.</returns>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Net.Sockets.TcpListener" /> foi iniciado. Chame o método <see cref="M:System.Net.Sockets.TcpListener.Stop" /> e defina a propriedade <see cref="P:System.Net.Sockets.Socket.ExclusiveAddressUse" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Erro ao tentar acessar o soquete subjacente.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> subjacente foi fechado.</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpListener.LocalEndpoint">
      <summary>Obtém o <see cref="T:System.Net.EndPoint" /> subjacente do <see cref="T:System.Net.Sockets.TcpListener" /> atual.</summary>
      <returns>O <see cref="T:System.Net.EndPoint" /> ao qual o <see cref="T:System.Net.Sockets.Socket" /> está associado.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.Pending">
      <summary>Determina se há solicitações de conexão pendentes.</summary>
      <returns>
        <see langword="true" /> se houver conexões pendentes; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">O ouvinte não foi iniciado com uma chamada para <see cref="M:System.Net.Sockets.TcpListener.Start" />.</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpListener.Server">
      <summary>Obtém o <see cref="T:System.Net.Sockets.Socket" /> da rede subjacente.</summary>
      <returns>O <see cref="T:System.Net.Sockets.Socket" /> subjacente.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.Start">
      <summary>Começa a escutar as solicitações de conexão recebidas.</summary>
      <exception cref="T:System.Net.Sockets.SocketException">Use a propriedade <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> para obter o código de erro específico. Quando tiver obtido esse código, você poderá consultar a documentação de códigos de erro da API da versão 2 do Windows Sockets para obter uma descrição detalhada do erro.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.Start(System.Int32)">
      <summary>Começa a detectar solicitações de conexão recebidas com um número máximo conexões pendentes.</summary>
      <param name="backlog">O comprimento máximo da fila de conexões pendentes.</param>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao acessar o soquete.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O parâmetro <paramref name="backlog" /> é menor que zero ou excede o número máximo de conexões permitidas.</exception>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Net.Sockets.Socket" /> subjacente é nulo.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.Stop">
      <summary>Fecha o ouvinte.</summary>
      <exception cref="T:System.Net.Sockets.SocketException">Use a propriedade <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> para obter o código de erro específico. Quando tiver obtido esse código, você poderá consultar a documentação de códigos de erro da API da versão 2 do Windows Sockets para obter uma descrição detalhada do erro.</exception>
    </member>
    <member name="T:System.Net.Sockets.TransmitFileOptions">
      <summary>A enumeração <see cref="T:System.Net.Sockets.TransmitFileOptions" /> define os valores usados nas solicitações de transferência de arquivo.</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.Disconnect">
      <summary>Inicie uma desconexão de nível de transporte depois que todos os dados do arquivo forem colocados em fila para transmissão. Quando forem usados com <see cref="F:System.Net.Sockets.TransmitFileOptions.ReuseSocket" />, esses sinalizadores retornarão o soquete para um estado desconectado e reutilizável depois que o arquivo tiver sido transmitido.</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.ReuseSocket">
      <summary>O identificador de soquete poderá ser reutilizado quando a solicitação for concluída. Esse sinalizador apenas será válido se <see cref="F:System.Net.Sockets.TransmitFileOptions.Disconnect" /> também for especificado. Quando forem usados com <see cref="F:System.Net.Sockets.TransmitFileOptions.Disconnect" />, esses sinalizadores retornarão o soquete para um estado desconectado e reutilizável depois que o arquivo tiver sido transmitido.</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread">
      <summary>Use o thread padrão para processar solicitações de transferência de arquivo longas.</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.UseKernelApc">
      <summary>Use APCs (chamadas de procedimento assíncronas) de kernel em vez de threads de trabalho para processar solicitações de transferência de arquivo longas. Solicitações longas são definidas como solicitações que exigem mais de uma única leitura do arquivo ou de um cache; portanto, a solicitação depende do tamanho do arquivo e do tamanho especificado do pacote de envio.</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.UseSystemThread">
      <summary>Use threads do sistema para processar solicitações de transferência de arquivo longas.</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.WriteBehind">
      <summary>Conclua a solicitação de transferência de arquivo imediatamente, sem pendência. Se esse sinalizador for especificado e a transferência de arquivos for bem-sucedida, isso indica que os dados foram aceitos pelo sistema, mas não necessariamente reconhecidos pela extremidade remota. Não use esse sinalizador com os sinalizadores <see cref="F:System.Net.Sockets.TransmitFileOptions.Disconnect" /> e <see cref="F:System.Net.Sockets.TransmitFileOptions.ReuseSocket" />.</summary>
    </member>
    <member name="T:System.Net.Sockets.UdpClient">
      <summary>Fornece serviços de rede do protocolo UDP.</summary>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Sockets.UdpClient" />.</summary>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao acessar o soquete.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Sockets.UdpClient" /> e a associa ao número da porta local fornecido.</summary>
      <param name="port">O número da porta local do qual você pretende se comunicar.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">O parâmetro <paramref name="port" /> é maior que <see cref="F:System.Net.IPEndPoint.MaxPort" /> ou menor que <see cref="F:System.Net.IPEndPoint.MinPort" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao acessar o soquete.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Sockets.UdpClient" /> e a associa ao número da porta local fornecido.</summary>
      <param name="port">A porta na qual escutar tentativas de conexão de entrada.</param>
      <param name="family">Um dos valores <see cref="T:System.Net.Sockets.AddressFamily" /> que especifica o esquema de endereçamento do soquete.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="family" /> não é <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> ou <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> é maior que <see cref="F:System.Net.IPEndPoint.MaxPort" /> ou menor que <see cref="F:System.Net.IPEndPoint.MinPort" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao acessar o soquete.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Sockets.UdpClient" /> e a associa ao ponto de extremidade local especificado.</summary>
      <param name="localEP">Um <see cref="T:System.Net.IPEndPoint" /> que representa o ponto de extremidade local ao qual você associa a conexão UDP.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localEP" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao acessar o soquete.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Sockets.UdpClient" />.</summary>
      <param name="family">Um dos valores <see cref="T:System.Net.Sockets.AddressFamily" /> que especifica o esquema de endereçamento do soquete.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="family" /> não é <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> ou <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao acessar o soquete.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Sockets.UdpClient" /> e estabelece um host remoto padrão.</summary>
      <param name="hostname">O nome host DNS remoto ao qual você pretende se conectar.</param>
      <param name="port">O número da porta remota à qual você pretende se conectar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hostname" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> não está entre <see cref="F:System.Net.IPEndPoint.MinPort" /> e <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao acessar o soquete.</exception>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.Active">
      <summary>Obtém ou define um valor que indica se um host remoto padrão foi estabelecido.</summary>
      <returns>
        <see langword="true" /> se a conexão estiver ativa; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)">
      <summary>Habilita ou desabilita a passagem de NAT (Conversão de Endereços de Rede) em uma instância de <see cref="T:System.Net.Sockets.UdpClient" />.</summary>
      <param name="allowed">Um valor booliano que especifica se a passagem de NAT deve ser habilitada ou desabilitada.</param>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.Available">
      <summary>Obtém a quantidade de dados recebidos da rede e disponíveis para leitura.</summary>
      <returns>O número de bytes de dados recebidos da rede.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Erro ao tentar acessar o soquete.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
      <summary>Recebe um datagrama de um host remoto de forma assíncrona.</summary>
      <param name="requestCallback">Um delegado <see cref="T:System.AsyncCallback" /> que faz referência ao método a ser invocado quando a operação é concluída.</param>
      <param name="state">Um objeto definido pelo usuário que contém informações sobre a operação de recebimento. Esse objeto é passado para o delegado <paramref name="requestCallback" /> quando a operação é concluída.</param>
      <returns>Um objeto <see cref="T:System.IAsyncResult" /> que referencia o recebimento assíncrono.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
      <summary>Envia um datagrama para um host remoto de forma assíncrona. O destino foi especificado anteriormente por uma chamada para <see cref="Overload:System.Net.Sockets.UdpClient.Connect" />.</summary>
      <param name="datagram">Uma matriz <see cref="T:System.Byte" /> que contém os dados a serem enviados.</param>
      <param name="bytes">O número de bytes a serem enviados.</param>
      <param name="requestCallback">Um delegado <see cref="T:System.AsyncCallback" /> que faz referência ao método a ser invocado quando a operação é concluída.</param>
      <param name="state">Um objeto definido pelo usuário que contém informações sobre a operação de envio. Esse objeto é passado para o delegado <paramref name="requestCallback" /> quando a operação é concluída.</param>
      <returns>Um objeto <see cref="T:System.IAsyncResult" /> que faz referência ao envio assíncrono.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
      <summary>Envia um datagrama para um destino de forma assíncrona. O destino é especificado por um <see cref="T:System.Net.EndPoint" />.</summary>
      <param name="datagram">Uma matriz <see cref="T:System.Byte" /> que contém os dados a serem enviados.</param>
      <param name="bytes">O número de bytes a serem enviados.</param>
      <param name="endPoint">O <see cref="T:System.Net.EndPoint" /> que representa o destino dos dados.</param>
      <param name="requestCallback">Um delegado <see cref="T:System.AsyncCallback" /> que faz referência ao método a ser invocado quando a operação é concluída.</param>
      <param name="state">Um objeto definido pelo usuário que contém informações sobre a operação de envio. Esse objeto é passado para o delegado <paramref name="requestCallback" /> quando a operação é concluída.</param>
      <returns>Um objeto <see cref="T:System.IAsyncResult" /> que faz referência ao envio assíncrono.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Envia um datagrama para um destino de forma assíncrona. O destino é especificado pelo nome do host e número da porta.</summary>
      <param name="datagram">Uma matriz <see cref="T:System.Byte" /> que contém os dados a serem enviados.</param>
      <param name="bytes">O número de bytes a serem enviados.</param>
      <param name="hostname">O host de destino.</param>
      <param name="port">O número da porta de destino.</param>
      <param name="requestCallback">Um delegado <see cref="T:System.AsyncCallback" /> que faz referência ao método a ser invocado quando a operação é concluída.</param>
      <param name="state">Um objeto definido pelo usuário que contém informações sobre a operação de envio. Esse objeto é passado para o delegado <paramref name="requestCallback" /> quando a operação é concluída.</param>
      <returns>Um objeto <see cref="T:System.IAsyncResult" /> que faz referência ao envio assíncrono.</returns>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.Client">
      <summary>Obtém ou define a rede <see cref="T:System.Net.Sockets.Socket" /> subjacente.</summary>
      <returns>A Rede <see cref="T:System.Net.Sockets.Socket" /> subjacente.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Close">
      <summary>Fecha a conexão UDP.</summary>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao acessar o soquete.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
      <summary>Estabelece um host remoto padrão usando o endereço IP e o número da porta especificados.</summary>
      <param name="addr">O <see cref="T:System.Net.IPAddress" /> do host remoto ao qual você pretende enviar dados.</param>
      <param name="port">O número da porta à qual você pretende enviar dados.</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpClient" /> está fechado.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="addr" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> não está entre <see cref="F:System.Net.IPEndPoint.MinPort" /> e <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao acessar o soquete.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
      <summary>Estabelece um host remoto padrão usando o ponto de extremidade de rede especificado.</summary>
      <param name="endPoint">Um <see cref="T:System.Net.IPEndPoint" /> que especifica o ponto de extremidade de rede para o qual você pretende enviar os dados.</param>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao acessar o soquete.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="endPoint" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.UdpClient" /> está fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
      <summary>Estabelece um host remoto padrão usando o nome e o número da porta do host especificados.</summary>
      <param name="hostname">O nome DNS do host remoto ao qual você pretende enviar dados.</param>
      <param name="port">O número da porta no host remoto ao qual você pretende enviar dados.</param>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.UdpClient" /> está fechado.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> não está entre <see cref="F:System.Net.IPEndPoint.MinPort" /> e <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao acessar o soquete.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Dispose">
      <summary>Libera os recursos gerenciados e não gerenciados usados pelo <see cref="T:System.Net.Sockets.UdpClient" />.</summary>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados usados pelo <see cref="T:System.Net.Sockets.UdpClient" /> e opcionalmente libera os recursos gerenciados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.DontFragment">
      <summary>Obtém ou define um valor <see cref="T:System.Boolean" /> que especifica se o <see cref="T:System.Net.Sockets.UdpClient" /> permite que datagramas de protocolo IP sejam fragmentados.</summary>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Net.Sockets.UdpClient" /> permite a fragmentação de datagramas; caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</returns>
      <exception cref="T:System.NotSupportedException">Essa propriedade pode ser definida apenas para soquetes que usam o sinalizador <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> ou sinalizador <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
      <summary>Sai de um grupo de multicast.</summary>
      <param name="multicastAddr">O <see cref="T:System.Net.IPAddress" /> do grupo de multicast do qual sair.</param>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> subjacente foi fechado.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao acessar o soquete.</exception>
      <exception cref="T:System.ArgumentException">O endereço IP não é compatível com o valor <see cref="T:System.Net.Sockets.AddressFamily" /> que define o esquema de endereçamento do soquete.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="multicastAddr" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
      <summary>Sai de um grupo de multicast.</summary>
      <param name="multicastAddr">O <see cref="T:System.Net.IPAddress" /> do grupo de multicast do qual sair.</param>
      <param name="ifindex">O endereço local do grupo de multicast do qual sair.</param>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> subjacente foi fechado.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao acessar o soquete.</exception>
      <exception cref="T:System.ArgumentException">O endereço IP não é compatível com o valor <see cref="T:System.Net.Sockets.AddressFamily" /> que define o esquema de endereçamento do soquete.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="multicastAddr" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.EnableBroadcast">
      <summary>Obtém ou define um valor <see cref="T:System.Boolean" /> que especifica se o <see cref="T:System.Net.Sockets.UdpClient" /> pode enviar ou receber pacotes de difusão.</summary>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Net.Sockets.UdpClient" /> permitir pacotes de difusão; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
      <summary>Encerra um recebimento assíncrono pendente.</summary>
      <param name="asyncResult">Um objeto <see cref="T:System.IAsyncResult" /> retornado por uma chamada para <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" />.</param>
      <param name="remoteEP">O ponto de extremidade remoto especificado.</param>
      <returns>Se for bem-sucedido, uma matriz de bytes que contém dados de datagrama.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> não foi retornado por uma chamada ao método <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)" /> foi chamado anteriormente para a leitura assíncrona.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Um erro ocorreu ao tentar acessar o <see cref="T:System.Net.Sockets.Socket" />subjacente.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> subjacente foi fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)">
      <summary>Encerra um envio assíncrono pendente.</summary>
      <param name="asyncResult">Um objeto <see cref="T:System.IAsyncResult" /> retornado por uma chamada para <see cref="Overload:System.Net.Sockets.UdpClient.BeginSend" />.</param>
      <returns>Se tiver êxito, o número de bytes enviados para o <see cref="T:System.Net.Sockets.UdpClient" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> não foi retornado por uma chamada ao método <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /> foi chamado anteriormente para a leitura assíncrona.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Erro ao tentar acessar o soquete subjacente.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> subjacente foi fechado.</exception>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse">
      <summary>Obtém ou define um valor <see cref="T:System.Boolean" /> que especifica se o <see cref="T:System.Net.Sockets.UdpClient" /> permite que um único cliente use uma porta.</summary>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Net.Sockets.UdpClient" /> permitir que apenas um cliente use uma porta específica; caso contrário, <see langword="false" />. O padrão é <see langword="true" /> para o Windows Server 2003 e Windows XP Service Pack 2 e posterior e <see langword="false" /> para todas as outras versões.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Erro ao tentar acessar o soquete subjacente.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> subjacente foi fechado.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)">
      <summary>Adiciona um <see cref="T:System.Net.Sockets.UdpClient" /> para um grupo de multicast.</summary>
      <param name="ifindex">O índice de interface associado ao endereço IP local no qual ingressar o grupo de multicast.</param>
      <param name="multicastAddr">O multicast <see cref="T:System.Net.IPAddress" /> do grupo que você deseja ingressar.</param>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> subjacente foi fechado.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao acessar o soquete.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
      <summary>Adiciona um <see cref="T:System.Net.Sockets.UdpClient" /> para um grupo de multicast.</summary>
      <param name="multicastAddr">O multicast <see cref="T:System.Net.IPAddress" /> do grupo que você deseja ingressar.</param>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> subjacente foi fechado.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao acessar o soquete.</exception>
      <exception cref="T:System.ArgumentException">O endereço IP não é compatível com o valor <see cref="T:System.Net.Sockets.AddressFamily" /> que define o esquema de endereçamento do soquete.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
      <summary>Adiciona um <see cref="T:System.Net.Sockets.UdpClient" /> para um grupo de multicast com a TTL (vida útil) especificada.</summary>
      <param name="multicastAddr">O <see cref="T:System.Net.IPAddress" /> do grupo de multicast no qual ingressar.</param>
      <param name="timeToLive">O TTL (vida útil), medido em saltos do roteador.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">O TTL fornecido não está entre 0 e 255</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> subjacente foi fechado.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao acessar o soquete.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="multicastAddr" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O endereço IP não é compatível com o valor <see cref="T:System.Net.Sockets.AddressFamily" /> que define o esquema de endereçamento do soquete.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)">
      <summary>Adiciona um <see cref="T:System.Net.Sockets.UdpClient" /> para um grupo de multicast.</summary>
      <param name="multicastAddr">O multicast <see cref="T:System.Net.IPAddress" /> do grupo que você deseja ingressar.</param>
      <param name="localAddress">O <see cref="T:System.Net.IPAddress" /> local.</param>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> subjacente foi fechado.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao acessar o soquete.</exception>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.MulticastLoopback">
      <summary>Obtém ou define um valor <see cref="T:System.Boolean" /> que especifica se os pacotes multicast de saída são entregues para o aplicativo de envio.</summary>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Net.Sockets.UdpClient" /> receber pacotes de multicast de saída; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
      <summary>Retorna um datagrama UDP que foi enviado por um host remoto.</summary>
      <param name="remoteEP">Um <see cref="T:System.Net.IPEndPoint" /> que representa o host remoto do qual os dados foram enviados.</param>
      <returns>Uma matriz do tipo <see cref="T:System.Byte" /> que contém dados de datagrama.</returns>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> subjacente foi fechado.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao acessar o soquete.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.ReceiveAsync">
      <summary>Retorna um datagrama UDP de forma assíncrona que foi enviado por um host remoto.</summary>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.Socket" /> subjacente foi fechado.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao acessar o soquete.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
      <summary>Envia um datagrama UDP para um host remoto.</summary>
      <param name="dgram">Uma matriz do tipo <see cref="T:System.Byte" /> que especifica o datagrama UDP que você pretende enviar representado como uma matriz de bytes.</param>
      <param name="bytes">O número de bytes no datagrama.</param>
      <returns>O número de bytes enviados.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dgram" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Net.Sockets.UdpClient" /> já estabeleceu um host remoto padrão.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.UdpClient" /> está fechado.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao acessar o soquete.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
      <summary>Envia um datagrama UDP para o host no ponto de extremidade remoto especificado.</summary>
      <param name="dgram">Uma matriz do tipo <see cref="T:System.Byte" /> que especifica o datagrama UDP que você pretende enviar, representado como uma matriz de bytes.</param>
      <param name="bytes">O número de bytes no datagrama.</param>
      <param name="endPoint">Um <see cref="T:System.Net.IPEndPoint" /> que representa o host e a porta para os quais o datagrama será enviado.</param>
      <returns>O número de bytes enviados.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dgram" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Net.Sockets.UdpClient" /> já estabeleceu um host remoto padrão.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpClient" /> está fechado.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao acessar o soquete.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
      <summary>Envia um datagrama UDP para uma porta especificada em um host remoto especificado.</summary>
      <param name="dgram">Uma matriz do tipo <see cref="T:System.Byte" /> que especifica o datagrama UDP que você pretende enviar, representado como uma matriz de bytes.</param>
      <param name="bytes">O número de bytes no datagrama.</param>
      <param name="hostname">O nome do host remoto para o qual você pretende enviar o datagrama.</param>
      <param name="port">O número da porta remota com a qual você pretende se comunicar.</param>
      <returns>O número de bytes enviados.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dgram" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Net.Sockets.UdpClient" /> já estabeleceu um host remoto padrão.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.UdpClient" /> está fechado.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao acessar o soquete.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
      <summary>Envia um datagrama UDP de maneira assíncrona para um host remoto.</summary>
      <param name="datagram">Uma matriz do tipo <see cref="T:System.Byte" /> que especifica o datagrama UDP que você pretende enviar, representado como uma matriz de bytes.</param>
      <param name="bytes">O número de bytes no datagrama.</param>
      <returns>Retorna <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dgram" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Net.Sockets.UdpClient" /> já estabeleceu um host remoto padrão.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.UdpClient" /> está fechado.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao acessar o soquete.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
      <summary>Envia um datagrama UDP de maneira assíncrona para um host remoto.</summary>
      <param name="datagram">Uma matriz do tipo <see cref="T:System.Byte" /> que especifica o datagrama UDP que você pretende enviar, representado como uma matriz de bytes.</param>
      <param name="bytes">O número de bytes no datagrama.</param>
      <param name="endPoint">Um <see cref="T:System.Net.IPEndPoint" /> que representa o host e a porta para os quais o datagrama será enviado.</param>
      <returns>Retorna <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dgram" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Net.Sockets.UdpClient" /> já estabeleceu um host remoto padrão.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpClient" /> está fechado.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao acessar o soquete.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
      <summary>Envia um datagrama UDP de maneira assíncrona para um host remoto.</summary>
      <param name="datagram">Uma matriz do tipo <see cref="T:System.Byte" /> que especifica o datagrama UDP que você pretende enviar, representado como uma matriz de bytes.</param>
      <param name="bytes">O número de bytes no datagrama.</param>
      <param name="hostname">O nome do host remoto para o qual você pretende enviar o datagrama.</param>
      <param name="port">O número da porta remota com a qual você pretende se comunicar.</param>
      <returns>Retorna <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dgram" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Net.Sockets.UdpClient" /> já estabeleceu um host remoto padrão.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.Sockets.UdpClient" /> está fechado.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocorreu um erro ao acessar o soquete.</exception>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.Ttl">
      <summary>Obtém ou define um valor que especifica o valor TTL (Vida Útil) de pacotes IP (Protocolo de Internet) enviados pelo <see cref="T:System.Net.Sockets.UdpClient" />.</summary>
      <returns>O valor TTL.</returns>
    </member>
    <member name="T:System.Net.Sockets.UdpReceiveResult">
      <summary>Apresenta as informações do resultado de recepção do UDP de uma chamada para o método <see cref="M:System.Net.Sockets.UdpClient.ReceiveAsync" />.</summary>
    </member>
    <member name="M:System.Net.Sockets.UdpReceiveResult.#ctor(System.Byte[],System.Net.IPEndPoint)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Sockets.UdpReceiveResult" />.</summary>
      <param name="buffer">Um buffer de dados a serem recebidos no pacote UDP.</param>
      <param name="remoteEndPoint">O ponto de extremidade remoto do pacote UDP.</param>
    </member>
    <member name="P:System.Net.Sockets.UdpReceiveResult.Buffer">
      <summary>Obtém um buffer com os dados recebidos no pacote UDP.</summary>
      <returns>Uma <see cref="T:System.Byte" /> matriz com os dados recebidos no pacote UDP.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpReceiveResult.Equals(System.Net.Sockets.UdpReceiveResult)">
      <summary>Retorna um valor que indica se essa instância é igual a um objeto especificado.</summary>
      <param name="other">O objeto a ser comparado com essa instância.</param>
      <returns>
        <see langword="true" /> se <paramref name="other" /> é uma instância de <see cref="T:System.Net.Sockets.UdpReceiveResult" /> e é igual ao valor da instância; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpReceiveResult.Equals(System.Object)">
      <summary>Retorna um valor que indica se essa instância é igual a um objeto especificado.</summary>
      <param name="obj">O objeto a ser comparado com essa instância.</param>
      <returns>
        <see langword="true" /> se <paramref name="obj" /> é uma instância de <see cref="T:System.Net.Sockets.UdpReceiveResult" /> e é igual ao valor da instância; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpReceiveResult.GetHashCode">
      <summary>Retorna o código hash para essa instância.</summary>
      <returns>O código hash.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpReceiveResult.op_Equality(System.Net.Sockets.UdpReceiveResult,System.Net.Sockets.UdpReceiveResult)">
      <summary>Testa se duas instâncias de <see cref="T:System.Net.Sockets.UdpReceiveResult" /> especificadas são equivalentes.</summary>
      <param name="left">A instância de <see cref="T:System.Net.Sockets.UdpReceiveResult" /> que está à esquerda do operador de igualdade.</param>
      <param name="right">A instância de <see cref="T:System.Net.Sockets.UdpReceiveResult" /> que está à direita do operador de igualdade.</param>
      <returns>
        <see langword="true" /> se <paramref name="left" /> e <paramref name="right" /> forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpReceiveResult.op_Inequality(System.Net.Sockets.UdpReceiveResult,System.Net.Sockets.UdpReceiveResult)">
      <summary>Testa se duas instâncias de <see cref="T:System.Net.Sockets.UdpReceiveResult" /> especificadas não são iguais.</summary>
      <param name="left">A instância <see cref="T:System.Net.Sockets.UdpReceiveResult" /> que está à esquerda do operador de desigualdade.</param>
      <param name="right">A instância <see cref="T:System.Net.Sockets.UdpReceiveResult" /> que está à direita do operador de desigualdade.</param>
      <returns>
        <see langword="true" /> se <paramref name="left" /> e <paramref name="right" /> forem diferentes; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.UdpReceiveResult.RemoteEndPoint">
      <summary>Obtém o ponto de extremidade remoto do qual o pacote UDP foi recebido.</summary>
      <returns>O ponto de extremidade remoto do qual o pacote UDP foi recebido.</returns>
    </member>
    <member name="T:System.Net.Sockets.UnixDomainSocketEndPoint">
      <summary>Representa um ponto de extremidade de Soquete de Domínio UNIX como um caminho.</summary>
    </member>
    <member name="M:System.Net.Sockets.UnixDomainSocketEndPoint.#ctor(System.String)">
      <param name="path" />
    </member>
  </members>
</doc>