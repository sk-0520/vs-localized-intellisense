<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net.WebSockets</name>
  </assembly>
  <members>
    <member name="T:System.Net.WebSockets.ValueWebSocketReceiveResult">
      <summary>Representa o resultado da execução de uma única operação <see cref="M:System.Net.WebSockets.WebSocket.ReceiveAsync(System.Memory{System.Byte},System.Threading.CancellationToken)" /> em um <see cref="T:System.Net.WebSockets.WebSocket" />.</summary>
    </member>
    <member name="M:System.Net.WebSockets.ValueWebSocketReceiveResult.#ctor(System.Int32,System.Net.WebSockets.WebSocketMessageType,System.Boolean)">
      <summary>Inicializa uma nova instância do struct <see cref="T:System.Net.WebSockets.ValueWebSocketReceiveResult" />. Uma instância desse struct representa o resultado da execução de uma única operação <c>ReceiveAsync</c> em um <see cref="T:System.Net.WebSockets.WebSocket" />.</summary>
      <param name="count">O número de bytes recebidos pelo <see cref="T:System.Net.WebSockets.WebSocket" />.</param>
      <param name="messageType">Um dos valores de enumeração que indicam se a mensagem atual é uma mensagem UTF-8 ou binária.</param>
      <param name="endOfMessage">
        <see langword="true" /> para indicar a mensagem foi completamente recebida; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="P:System.Net.WebSockets.ValueWebSocketReceiveResult.Count" />
    <member name="P:System.Net.WebSockets.ValueWebSocketReceiveResult.EndOfMessage" />
    <member name="P:System.Net.WebSockets.ValueWebSocketReceiveResult.MessageType" />
    <member name="T:System.Net.WebSockets.WebSocket">
      <summary>A classe WebSocket permite que aplicativos enviem e recebam dados após a atualização do WebSocket ter sido concluída.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.#ctor">
      <summary>Cria uma instância de <see cref="T:System.Net.WebSockets.WebSocket" /> classe.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.Abort">
      <summary>Anula a conexão WebSocket e cancela as operações de E/S pendentes.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
      <summary>Fecha a conexão WebSocket como uma operação assíncrona usando o handshake de fechamento definido na seção 7 da especificação do protocolo WebSocket.</summary>
      <param name="closeStatus">Indica o motivo para fechar a conexão WebSocket.</param>
      <param name="statusDescription">Especifica uma explicação legível humana relacionada ao motivo pelo qual a conexão é fechada.</param>
      <param name="cancellationToken">O token que pode ser usado para propagar a notificação de que as operações devem ser canceladas.</param>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
      <summary>Inicia ou conclui o handshake de fechamento definido na seção 7 da especificação do protocolo WebSocket.</summary>
      <param name="closeStatus">Indica o motivo para fechar a conexão WebSocket.</param>
      <param name="statusDescription">Permite que os aplicativos especifiquem uma explicação legível humana indicando por que a conexão é fechada.</param>
      <param name="cancellationToken">O token que pode ser usado para propagar a notificação de que as operações devem ser canceladas.</param>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocket.CloseStatus">
      <summary>Indica o motivo por que o ponto de extremidade remoto iniciou handshake de fechamento.</summary>
      <returns>Retorna <see cref="T:System.Net.WebSockets.WebSocketCloseStatus" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocket.CloseStatusDescription">
      <summary>Permite que o ponto de extremidade remoto descreva o motivo por que a conexão foi fechada.</summary>
      <returns>Retorna <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.CreateClientBuffer(System.Int32,System.Int32)">
      <summary>Crie o cliente de buffers a ser usado com essa instância <see cref="T:System.Net.WebSockets.WebSocket" />.</summary>
      <param name="receiveBufferSize">O tamanho, em bytes, do buffer de recepção do cliente.</param>
      <param name="sendBufferSize">O tamanho, em bytes, do buffer de envio.</param>
      <returns>Uma matriz com os buffers de cliente.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.CreateClientWebSocket(System.IO.Stream,System.String,System.Int32,System.Int32,System.TimeSpan,System.Boolean,System.ArraySegment{System.Byte})">
      <summary>Permite que os chamadores criem uma classe WebSocket do lado do cliente que usará o WSPC para fins de enquadramento.</summary>
      <param name="innerStream">A conexão a ser usada para operações de E/S.</param>
      <param name="subProtocol">O subprotocolo aceito pelo cliente.</param>
      <param name="receiveBufferSize">O tamanho, em bytes, do buffer de recepção do WebSocket do cliente.</param>
      <param name="sendBufferSize">O tamanho, em bytes, do buffer de envio do WebSocket do cliente.</param>
      <param name="keepAliveInterval">Determina com que regularidade um quadro é enviado pela conexão como um keep-alive. Aplica-se somente quando a conexão está ociosa.</param>
      <param name="useZeroMaskingKey">Indica se uma chave aleatória ou uma chave estática (apenas zeros) deve ser usada para o mascaramento do WebSocket.</param>
      <param name="internalBuffer">Será usado como o buffer interno no WPC. O tamanho deve ser pelo menos <c>2 * ReceiveBufferSize + SendBufferSize + 256 + 20 (16 em 32 bits)</c>.</param>
      <returns>Retorna <see cref="T:System.Net.WebSockets.WebSocket" />.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.CreateFromStream(System.IO.Stream,System.Boolean,System.String,System.TimeSpan)">
      <summary>Cria um objeto <see cref="T:System.Net.WebSockets.WebSocket" /> que opera no fluxo especificado, que representa uma conexão de soquete da Web.</summary>
      <param name="stream">O fluxo para a conexão.</param>
      <param name="isServer">
        <see langword="true" /> para indicar que ele é o lado do servidor da conexão; <see langword="false" /> se ele for o lado do cliente.</param>
      <param name="subProtocol">O subprotocolo acordado que foi usado ao criar a conexão.</param>
      <param name="keepAliveInterval">O intervalo de keep alive a ser usado ou <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" /> para desabilitar keep alives.</param>
      <returns>O novo soquete da Web.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.CreateServerBuffer(System.Int32)">
      <summary>Cria um buffer de servidor WebSocket.</summary>
      <param name="receiveBufferSize">O tamanho, em bytes, do buffer desejado.</param>
      <returns>Retorna <see cref="T:System.ArraySegment`1" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocket.DefaultKeepAliveInterval">
      <summary>Obtém o intervalo keep-alive padrão do protocolo WebSocket.</summary>
      <returns>O intervalo de Keep-Alive do protocolo WebSocket padrão. O valor típico para esse intervalo é de 30 segundos (conforme definido pelo sistema operacional ou pela plataforma .NET). Ele é usado para inicializar <see cref="P:System.Net.WebSockets.ClientWebSocketOptions.KeepAliveInterval" /> o valor.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.Dispose">
      <summary>Usado para limpar os recursos não gerenciados para as implementações auto-hospedadas e de ASP.NET.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.IsApplicationTargeting45">
      <summary>Retorna um valor que indica se a instância do WebSocket está direcionada para .NET Framework 4.5.</summary>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Net.WebSockets.WebSocket" /> for direcionado para .NET Framework 4.5; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.IsStateTerminal(System.Net.WebSockets.WebSocketState)">
      <summary>Retorna um valor que indica se o estado da instância do WebSocket é fechado ou anulado.</summary>
      <param name="state">O estado atual do WebSocket.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Net.WebSockets.WebSocket" /> for fechado ou anulado; caso contrário <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
      <summary>Recebe dados da conexão <see cref="T:System.Net.WebSockets.WebSocket" /> de forma assíncrona.</summary>
      <param name="buffer">Referencia o buffer de aplicativo que é o local de armazenamento dos dados recebidos.</param>
      <param name="cancellationToken">Propaga a notificação de que as operações devem ser canceladas.</param>
      <returns>O objeto de tarefa que representa a operação assíncrona. A propriedade <see cref="P:System.Threading.Tasks.Task`1.Result" /> no objeto da tarefa retorna uma matriz de <see cref="T:System.Byte" /> que contém os dados recebidos.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.ReceiveAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <param name="buffer" />
      <param name="cancellationToken" />
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.RegisterPrefixes">
      <summary>Permite que os chamadores registrem os prefixos para solicitações de WebSocket (ws e wss).</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
      <summary>Envia dados pela conexão <see cref="T:System.Net.WebSockets.WebSocket" /> de forma assíncrona.</summary>
      <param name="buffer">O buffer a ser enviado pela conexão.</param>
      <param name="messageType">Indica se o aplicativo está enviando uma mensagem de texto ou binária.</param>
      <param name="endOfMessage">Indica se os dados no “buffer” são a última parte de uma mensagem.</param>
      <param name="cancellationToken">O token que propaga a notificação de que as operações devem ser canceladas.</param>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.SendAsync(System.ReadOnlyMemory{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
      <param name="buffer" />
      <param name="messageType" />
      <param name="endOfMessage" />
      <param name="cancellationToken" />
    </member>
    <member name="P:System.Net.WebSockets.WebSocket.State">
      <summary>Retorna o estado atual da conexão WebSocket.</summary>
      <returns>O estado atual da conexão WebSocket.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocket.SubProtocol">
      <summary>Obtém o subprotocolo que foi negociado durante o handshake de abertura.</summary>
      <returns>O subprotocolo que foi negociado durante o handshake de abertura.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.ThrowOnInvalidState(System.Net.WebSockets.WebSocketState,System.Net.WebSockets.WebSocketState[])">
      <summary>Verifica se a conexão está em um estado esperado.</summary>
      <param name="state">O estado atual do WebSocket a ser testado em relação à lista de estados válidos.</param>
      <param name="validStates">Lista de estados de conexão válido.</param>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketCloseStatus">
      <summary>Representa os códigos de fechamento WebSocket conhecidos conforme definido na seção 11.7 da especificação do protocolo WebSocket.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.Empty">
      <summary>Nenhum erro especificado.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.EndpointUnavailable">
      <summary>(1001) Indica um ponto de extremidade que está sendo removido. O cliente ou servidor se tornarão indisponível.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.InternalServerError">
      <summary>A conexão será fechada pelo servidor devido a um erro no servidor.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.InvalidMessageType">
      <summary>(1003) O cliente ou o servidor está encerrando a conexão porque ele não pode aceitar o tipo de dados recebido.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.InvalidPayloadData">
      <summary>(1007) O cliente ou o servidor está encerrando a conexão porque recebeu dados inconsistentes com o tipo de mensagem.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.MandatoryExtension">
      <summary>(1010) O cliente está encerrando a conexão porque ele esperou servidor para negociar uma extensão.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.MessageTooBig">
      <summary>(1004) Reservado para uso futuro.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.NormalClosure">
      <summary>(1000) A conexão foi fechada depois que a solicitação foi atendida.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.PolicyViolation">
      <summary>(1008) A conexão será fechada porque um ponto de extremidade recebeu uma mensagem que viola a política.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.ProtocolError">
      <summary>(1002) O cliente ou o servidor está encerrando a conexão devido a um erro de protocolo.</summary>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketContext">
      <summary>Usado para acessar as informações no handshake do WebSocket.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketContext.#ctor">
      <summary>Cria uma instância de <see cref="T:System.Net.WebSockets.WebSocketContext" /> classe.</summary>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.CookieCollection">
      <summary>Os cookies que foram transmitidos para o servidor durante o handshake de abertura.</summary>
      <returns>Retorna <see cref="T:System.Net.CookieCollection" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.Headers">
      <summary>Os cabeçalhos HTTP que foram enviados ao servidor durante o handshake de abertura.</summary>
      <returns>Retorna <see cref="T:System.Collections.Specialized.NameValueCollection" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.IsAuthenticated">
      <summary>Se o cliente do WebSocket é autenticado.</summary>
      <returns>Retorna <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.IsLocal">
      <summary>Se o cliente do WebSocket se conectou do computador local.</summary>
      <returns>Retorna <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.IsSecureConnection">
      <summary>Se a conexão WebSocket é protegida usando SSL (protocolo SSL).</summary>
      <returns>Retorna <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.Origin">
      <summary>O valor do cabeçalho Origin HTTP incluído no handshake de abertura.</summary>
      <returns>Retorna <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.RequestUri">
      <summary>O URI solicitado pelo cliente do WebSocket.</summary>
      <returns>Retorna <see cref="T:System.Uri" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.SecWebSocketKey">
      <summary>O valor do cabeçalho SecWebSocketKey HTTP incluído no handshake de abertura.</summary>
      <returns>Retorna <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.SecWebSocketProtocols">
      <summary>O valor do cabeçalho SecWebSocketKey HTTP incluído no handshake de abertura.</summary>
      <returns>Retorna <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.SecWebSocketVersion">
      <summary>A lista de subprotocolos solicitada pelo cliente do WebSocket.</summary>
      <returns>Retorna <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.User">
      <summary>Um objeto usado para obter identidade, informações de autenticação e funções de segurança para o cliente WebSocket.</summary>
      <returns>Retorna <see cref="T:System.Security.Principal.IPrincipal" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.WebSocket">
      <summary>A instância WebSocket usada para interagir (enviar/receber/fechar/etc.) com a conexão WebSocket.</summary>
      <returns>Retorna <see cref="T:System.Net.WebSockets.WebSocket" />.</returns>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketError">
      <summary>Contém a lista de possíveis erros de WebSocket.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.ConnectionClosedPrematurely">
      <summary>Indica que a conexão foi encerrada inesperadamente.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.Faulted">
      <summary>Indica um erro geral.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.HeaderError">
      <summary>Indica que ocorreu um erro ao analisar os cabeçalhos HTTP durante o handshake de abertura.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.InvalidMessageType">
      <summary>Indica que um quadro WebSocket com um opcode desconhecido foi recebido.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.InvalidState">
      <summary>Indica que o WebSocket é um estado inválido para a operação específica (como sendo fechado ou anulado).</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.NativeError">
      <summary>Indica que ocorreu um erro nativo desconhecido.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.NotAWebSocket">
      <summary>Indica que a solicitação de entrada não era uma solicitação websocket válida.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.Success">
      <summary>Indica que não houve nenhuma informação de erro nativo para a exceção.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.UnsupportedProtocol">
      <summary>Indica que o cliente solicitou um subprotocolo WebSocket sem suporte.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.UnsupportedVersion">
      <summary>Indica que o cliente solicitou uma versão sem suporte do protocolo WebSocket.</summary>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketException">
      <summary>Representa uma exceção que ocorreu ao executar uma operação em uma conexão WebSocket.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor">
      <summary>Cria uma instância de <see cref="T:System.Net.WebSockets.WebSocketException" /> classe.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Int32)">
      <summary>Cria uma instância de <see cref="T:System.Net.WebSockets.WebSocketException" /> classe.</summary>
      <param name="nativeError">O código de erro nativo para a exceção.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Int32,System.Exception)">
      <summary>Cria uma instância de <see cref="T:System.Net.WebSockets.WebSocketException" /> classe.</summary>
      <param name="nativeError">O código de erro nativo para a exceção.</param>
      <param name="innerException">Indica a exceção anterior que levou à exceção atual.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Int32,System.String)">
      <summary>Cria uma instância de <see cref="T:System.Net.WebSockets.WebSocketException" /> classe.</summary>
      <param name="nativeError">O código de erro nativo para a exceção.</param>
      <param name="message">A descrição do erro.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError)">
      <summary>Cria uma instância de <see cref="T:System.Net.WebSockets.WebSocketException" /> classe.</summary>
      <param name="error">O erro da enumeração WebSocketError.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.Exception)">
      <summary>Cria uma instância de <see cref="T:System.Net.WebSockets.WebSocketException" /> classe.</summary>
      <param name="error">O erro da enumeração WebSocketError.</param>
      <param name="innerException">Indica a exceção anterior que levou à exceção atual.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.Int32)">
      <summary>Cria uma instância de <see cref="T:System.Net.WebSockets.WebSocketException" /> classe.</summary>
      <param name="error">O erro da enumeração WebSocketError.</param>
      <param name="nativeError">O código de erro nativo para a exceção.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.Int32,System.Exception)">
      <summary>Cria uma instância de <see cref="T:System.Net.WebSockets.WebSocketException" /> classe.</summary>
      <param name="error">O erro da enumeração WebSocketError.</param>
      <param name="nativeError">O código de erro nativo para a exceção.</param>
      <param name="innerException">Indica a exceção anterior que levou à exceção atual.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.Int32,System.String)">
      <summary>Cria uma instância de <see cref="T:System.Net.WebSockets.WebSocketException" /> classe.</summary>
      <param name="error">O erro da enumeração WebSocketError.</param>
      <param name="nativeError">O código de erro nativo para a exceção.</param>
      <param name="message">A descrição do erro.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.Int32,System.String,System.Exception)">
      <summary>Cria uma instância de <see cref="T:System.Net.WebSockets.WebSocketException" /> classe.</summary>
      <param name="error">O erro da enumeração WebSocketError.</param>
      <param name="nativeError">O código de erro nativo para a exceção.</param>
      <param name="message">A descrição do erro.</param>
      <param name="innerException">Indica a exceção anterior que levou à exceção atual.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.String)">
      <summary>Cria uma instância de <see cref="T:System.Net.WebSockets.WebSocketException" /> classe.</summary>
      <param name="error">O erro da enumeração WebSocketError.</param>
      <param name="message">A descrição do erro.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.String,System.Exception)">
      <summary>Cria uma instância de <see cref="T:System.Net.WebSockets.WebSocketException" /> classe.</summary>
      <param name="error">O erro da enumeração WebSocketError.</param>
      <param name="message">A descrição do erro.</param>
      <param name="innerException">Indica a exceção anterior que levou à exceção atual.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.String)">
      <summary>Cria uma instância de <see cref="T:System.Net.WebSockets.WebSocketException" /> classe.</summary>
      <param name="message">A descrição do erro.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.String,System.Exception)">
      <summary>Cria uma instância de <see cref="T:System.Net.WebSockets.WebSocketException" /> classe.</summary>
      <param name="message">A descrição do erro.</param>
      <param name="innerException">Indica a exceção anterior que levou à exceção atual.</param>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketException.ErrorCode">
      <summary>O código de erro nativo para a exceção que ocorreu.</summary>
      <returns>Retorna <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Define o objeto SerializationInfo com o nome de arquivo e o número de linha em que a exceção ocorreu.</summary>
      <param name="info">Um objeto SerializationInfo.</param>
      <param name="context">As informações contextuais sobre a origem ou o destino.</param>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketException.WebSocketErrorCode">
      <summary>Retorna um WebSocketError que indica o tipo de erro ocorrido.</summary>
      <returns>Retorna <see cref="T:System.Net.WebSockets.WebSocketError" />.</returns>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketMessageType">
      <summary>Indica o tipo de mensagem.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketMessageType.Binary">
      <summary>A mensagem está no formato binário.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketMessageType.Close">
      <summary>Um recebimento foi concluído porque foi recebida uma mensagem de fechamento.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketMessageType.Text">
      <summary>A mensagem é texto não criptografado.</summary>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketReceiveResult">
      <summary>Uma instância dessa classe representa o resultado da execução de uma única operação ReceiveAsync em um WebSocket.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketReceiveResult.#ctor(System.Int32,System.Net.WebSockets.WebSocketMessageType,System.Boolean)">
      <summary>Cria uma instância de <see cref="T:System.Net.WebSockets.WebSocketReceiveResult" /> classe.</summary>
      <param name="count">O número de bytes recebidos.</param>
      <param name="messageType">O tipo de mensagem foi recebida.</param>
      <param name="endOfMessage">Indica se esta é a mensagem final.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketReceiveResult.#ctor(System.Int32,System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Nullable{System.Net.WebSockets.WebSocketCloseStatus},System.String)">
      <summary>Cria uma instância de <see cref="T:System.Net.WebSockets.WebSocketReceiveResult" /> classe.</summary>
      <param name="count">O número de bytes recebidos.</param>
      <param name="messageType">O tipo de mensagem foi recebida.</param>
      <param name="endOfMessage">Indica se esta é a mensagem final.</param>
      <param name="closeStatus">Indica o <see cref="T:System.Net.WebSockets.WebSocketCloseStatus" /> da conexão.</param>
      <param name="closeStatusDescription">A descrição do <paramref name="closeStatus" />.</param>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketReceiveResult.CloseStatus">
      <summary>Indica o motivo por que o ponto de extremidade remoto iniciou handshake de fechamento.</summary>
      <returns>Retorna <see cref="T:System.Net.WebSockets.WebSocketCloseStatus" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketReceiveResult.CloseStatusDescription">
      <summary>Retorna a descrição opcional que descreve o motivo pelo qual o handshake de fechamento foi iniciado pelo ponto de extremidade remoto.</summary>
      <returns>Retorna <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketReceiveResult.Count">
      <summary>Indica o número de bytes que o WebSocket recebeu.</summary>
      <returns>Retorna <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketReceiveResult.EndOfMessage">
      <summary>Indica se a mensagem foi completamente recebida.</summary>
      <returns>Retorna <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketReceiveResult.MessageType">
      <summary>Indica se a mensagem atual é UTF-8 ou binária.</summary>
      <returns>Retorna <see cref="T:System.Net.WebSockets.WebSocketMessageType" />.</returns>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketState">
      <summary>Define os diferentes estados em que uma instância de WebSockets pode estar.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.Aborted">
      <summary>Reservado para uso futuro.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.Closed">
      <summary>Indica que o handshake de fechamento do WebSocket foi concluído normalmente.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.CloseReceived">
      <summary>Uma mensagem de fechamento foi recebida do ponto de extremidade remoto.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.CloseSent">
      <summary>Uma mensagem de fechamento foi enviada ao ponto de extremidade remoto.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.Connecting">
      <summary>A conexão está negociando o handshake com o ponto de extremidade remoto.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.None">
      <summary>Reservado para uso futuro.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.Open">
      <summary>O estado inicial após a conclusão do handshake HTTP.</summary>
    </member>
  </members>
</doc>