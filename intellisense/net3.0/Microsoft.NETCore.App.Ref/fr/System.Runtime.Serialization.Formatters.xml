<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Runtime.Serialization.Formatters</name>
  </assembly>
  <members>
    <member name="T:System.Runtime.Serialization.Formatter">
      <summary>Fournit la fonctionnalité de base pour les formateurs de sérialisation du Common Language Runtime.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.Serialization.Formatter" />.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.Formatter.Binder">
      <summary>En cas de substitution dans une classe dérivée, obtient ou définit le <see cref="T:System.Runtime.Serialization.SerializationBinder" /> utilisé avec le formateur en cours.</summary>
      <returns>Classe <see cref="T:System.Runtime.Serialization.SerializationBinder" /> utilisée avec le formateur en cours.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Formatter.Context">
      <summary>En cas de substitution dans une classe dérivée, obtient ou définit le <see cref="T:System.Runtime.Serialization.StreamingContext" /> utilisé pour la sérialisation en cours.</summary>
      <returns>
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> utilisé pour la sérialisation en cours.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.Deserialize(System.IO.Stream)">
      <summary>En cas de substitution dans une classe dérivée, désérialise le flux attaché au formateur quand il a été créé, en créant un graphique d'objets identique au graphique initialement sérialisé dans ce flux.</summary>
      <param name="serializationStream">Flux à désérialiser.</param>
      <returns>Objet supérieur du graphique d'objets désérialisé.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.GetNext(System.Int64@)">
      <summary>Retourne l'objet à sérialiser suivant dans la file d'attente de travail interne du formateur.</summary>
      <param name="objID">ID assigné à l'objet en cours lors de la sérialisation.</param>
      <returns>Objet à sérialiser suivant.</returns>
      <exception cref="T:System.Runtime.Serialization.SerializationException">L'objet suivant récupère de la file d'attente de travail ne comporte pas d'ID assigné.</exception>
    </member>
    <member name="F:System.Runtime.Serialization.Formatter.m_idGenerator">
      <summary>Contient le <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" /> utilisé avec le formateur en cours.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatter.m_objectQueue">
      <summary>Contient un <see cref="T:System.Collections.Queue" /> des objets à sérialiser restants.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.Schedule(System.Object)">
      <summary>Planifie un objet pour sérialisation ultérieure.</summary>
      <param name="obj">Objet à planifier pour sérialisation.</param>
      <returns>ID d'objet assigné à l'objet.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.Serialize(System.IO.Stream,System.Object)">
      <summary>En cas de substitution dans une classe dérivée, sérialise le graphique d'objets avec la racine spécifiée dans le flux déjà attaché au formateur.</summary>
      <param name="serializationStream">Flux dans lequel les objets sont sérialisés.</param>
      <param name="graph">Objet à la racine du graphique à sérialiser.</param>
    </member>
    <member name="P:System.Runtime.Serialization.Formatter.SurrogateSelector">
      <summary>En cas de substitution dans une classe dérivée, obtient ou définit le <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> utilisé avec le formateur en cours.</summary>
      <returns>Classe <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> utilisée avec le formateur en cours.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteArray(System.Object,System.String,System.Type)">
      <summary>En cas de substitution dans une classe dérivée, écrit un tableau dans le flux déjà attaché au formateur.</summary>
      <param name="obj">Tableau à écrire.</param>
      <param name="name">Nom du tableau.</param>
      <param name="memberType">Type des éléments contenus dans le tableau.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteBoolean(System.Boolean,System.String)">
      <summary>En cas de substitution dans une classe dérivée, écrit une valeur booléenne dans le flux déjà attaché au formateur.</summary>
      <param name="val">Valeur à écrire.</param>
      <param name="name">Nom du membre.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteByte(System.Byte,System.String)">
      <summary>En cas de substitution dans une classe dérivée, écrit un entier non signé 8 bits dans le flux déjà attaché au formateur.</summary>
      <param name="val">Valeur à écrire.</param>
      <param name="name">Nom du membre.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteChar(System.Char,System.String)">
      <summary>En cas de substitution dans une classe dérivée, écrit un caractère Unicode dans le flux déjà attaché au formateur.</summary>
      <param name="val">Valeur à écrire.</param>
      <param name="name">Nom du membre.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteDateTime(System.DateTime,System.String)">
      <summary>En cas de substitution dans une classe dérivée, écrit une valeur <see cref="T:System.DateTime" /> dans le flux déjà attaché au formateur.</summary>
      <param name="val">Valeur à écrire.</param>
      <param name="name">Nom du membre.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteDecimal(System.Decimal,System.String)">
      <summary>En cas de substitution dans une classe dérivée, écrit une valeur <see cref="T:System.Decimal" /> dans le flux déjà attaché au formateur.</summary>
      <param name="val">Valeur à écrire.</param>
      <param name="name">Nom du membre.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteDouble(System.Double,System.String)">
      <summary>En cas de substitution dans une classe dérivée, écrit un nombre à virgule flottante double précision dans le flux déjà attaché au formateur.</summary>
      <param name="val">Valeur à écrire.</param>
      <param name="name">Nom du membre.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteInt16(System.Int16,System.String)">
      <summary>En cas de substitution dans une classe dérivée, écrit un entier signé 16 bits dans le flux déjà attaché au formateur.</summary>
      <param name="val">Valeur à écrire.</param>
      <param name="name">Nom du membre.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteInt32(System.Int32,System.String)">
      <summary>En cas de substitution dans une classe dérivée, écrit un entier signé 32 bits dans le flux.</summary>
      <param name="val">Valeur à écrire.</param>
      <param name="name">Nom du membre.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteInt64(System.Int64,System.String)">
      <summary>En cas de substitution dans une classe dérivée, écrit un entier 64 bits signé dans le flux.</summary>
      <param name="val">Valeur à écrire.</param>
      <param name="name">Nom du membre.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteMember(System.String,System.Object)">
      <summary>Inspecte le type des données reçues et appelle la méthode <see langword="Write" /> appropriée pour exécuter l'écriture dans le flux déjà attaché au formateur.</summary>
      <param name="memberName">Le nom du membre à sérialiser.</param>
      <param name="data">Objet à écrire dans le flux attaché au formateur.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteObjectRef(System.Object,System.String,System.Type)">
      <summary>En cas de substitution dans une classe dérivée, écrit une référence d'objet dans le flux déjà attaché au formateur.</summary>
      <param name="obj">Référence d'objet à écrire.</param>
      <param name="name">Nom du membre.</param>
      <param name="memberType">Type de l'objet vers lequel pointe la référence.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteSByte(System.SByte,System.String)">
      <summary>En cas de substitution dans une classe dérivée, écrit un entier signé 8 bits dans le flux déjà attaché au formateur.</summary>
      <param name="val">Valeur à écrire.</param>
      <param name="name">Nom du membre.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteSingle(System.Single,System.String)">
      <summary>En cas de substitution dans une classe dérivée, écrit un nombre à virgule flottante simple précision dans le flux déjà attaché au formateur.</summary>
      <param name="val">Valeur à écrire.</param>
      <param name="name">Nom du membre.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteTimeSpan(System.TimeSpan,System.String)">
      <summary>En cas de substitution dans une classe dérivée, écrit une valeur <see cref="T:System.TimeSpan" /> dans le flux déjà attaché au formateur.</summary>
      <param name="val">Valeur à écrire.</param>
      <param name="name">Nom du membre.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteUInt16(System.UInt16,System.String)">
      <summary>En cas de substitution dans une classe dérivée, écrit un entier non signé 16 bits dans le flux déjà attaché au formateur.</summary>
      <param name="val">Valeur à écrire.</param>
      <param name="name">Nom du membre.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteUInt32(System.UInt32,System.String)">
      <summary>En cas de substitution dans une classe dérivée, écrit un entier 32 bits non signé dans le flux déjà attaché au formateur.</summary>
      <param name="val">Valeur à écrire.</param>
      <param name="name">Nom du membre.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteUInt64(System.UInt64,System.String)">
      <summary>En cas de substitution dans une classe dérivée, écrit un entier 64 bits non signé dans le flux déjà attaché au formateur.</summary>
      <param name="val">Valeur à écrire.</param>
      <param name="name">Nom du membre.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteValueType(System.Object,System.String,System.Type)">
      <summary>En cas de substitution dans une classe dérivée, écrit la valeur du type donné dans le flux déjà attaché au formateur.</summary>
      <param name="obj">Objet représentant le type valeur.</param>
      <param name="name">Nom du membre.</param>
      <param name="memberType">
        <see cref="T:System.Type" /> du type valeur.</param>
    </member>
    <member name="T:System.Runtime.Serialization.FormatterConverter">
      <summary>Représente une implémentation de base de l'interface <see cref="T:System.Runtime.Serialization.IFormatterConverter" /> qui utilise la classe <see cref="T:System.Convert" /> et l'interface <see cref="T:System.IConvertible" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.Serialization.FormatterConverter" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.Convert(System.Object,System.Type)">
      <summary>Convertit une valeur en un <see cref="T:System.Type" /> donné.</summary>
      <param name="value">Objet à convertir.</param>
      <param name="type">
        <see cref="T:System.Type" /> dans lequel <paramref name="value" /> est convertie.</param>
      <returns>
        <paramref name="value" /> convertie ou <see langword="null" /> si le paramètre <paramref name="type" /> a la valeur <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="value" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.Convert(System.Object,System.TypeCode)">
      <summary>Convertit une valeur en un <see cref="T:System.TypeCode" /> donné.</summary>
      <param name="value">Objet à convertir.</param>
      <param name="typeCode">
        <see cref="T:System.TypeCode" /> dans lequel <paramref name="value" /> est convertie.</param>
      <returns>
        <paramref name="value" /> convertie ou <see langword="null" /> si le paramètre <paramref name="type" /> a la valeur <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="value" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToBoolean(System.Object)">
      <summary>Convertit une valeur en <see cref="T:System.Boolean" />.</summary>
      <param name="value">Objet à convertir.</param>
      <returns>
        <paramref name="value" /> convertie ou <see langword="null" /> si le paramètre <paramref name="type" /> a la valeur <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="value" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToByte(System.Object)">
      <summary>Convertit une valeur en entier non signé 8 bits.</summary>
      <param name="value">Objet à convertir.</param>
      <returns>
        <paramref name="value" /> convertie ou <see langword="null" /> si le paramètre <paramref name="type" /> a la valeur <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="value" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToChar(System.Object)">
      <summary>Convertit une valeur en caractère Unicode.</summary>
      <param name="value">Objet à convertir.</param>
      <returns>
        <paramref name="value" /> convertie ou <see langword="null" /> si le paramètre <paramref name="type" /> a la valeur <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="value" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToDateTime(System.Object)">
      <summary>Convertit une valeur en <see cref="T:System.DateTime" />.</summary>
      <param name="value">Objet à convertir.</param>
      <returns>
        <paramref name="value" /> convertie ou <see langword="null" /> si le paramètre <paramref name="type" /> a la valeur <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="value" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToDecimal(System.Object)">
      <summary>Convertit une valeur en <see cref="T:System.Decimal" />.</summary>
      <param name="value">Objet à convertir.</param>
      <returns>
        <paramref name="value" /> convertie ou <see langword="null" /> si le paramètre <paramref name="type" /> a la valeur <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="value" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToDouble(System.Object)">
      <summary>Convertit une valeur en nombre à virgule flottante double précision.</summary>
      <param name="value">Objet à convertir.</param>
      <returns>
        <paramref name="value" /> convertie ou <see langword="null" /> si le paramètre <paramref name="type" /> a la valeur <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="value" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToInt16(System.Object)">
      <summary>Convertit une valeur en entier signé 16 bits.</summary>
      <param name="value">Objet à convertir.</param>
      <returns>
        <paramref name="value" /> convertie ou <see langword="null" /> si le paramètre <paramref name="type" /> a la valeur <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="value" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToInt32(System.Object)">
      <summary>Convertit une valeur en entier 32 bits signé.</summary>
      <param name="value">Objet à convertir.</param>
      <returns>
        <paramref name="value" /> convertie ou <see langword="null" /> si le paramètre <paramref name="type" /> a la valeur <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="value" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToInt64(System.Object)">
      <summary>Convertit une valeur en entier 64 bits signé.</summary>
      <param name="value">Objet à convertir.</param>
      <returns>
        <paramref name="value" /> convertie ou <see langword="null" /> si le paramètre <paramref name="type" /> a la valeur <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="value" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToSByte(System.Object)">
      <summary>Convertit une valeur en <see cref="T:System.SByte" />.</summary>
      <param name="value">Objet à convertir.</param>
      <returns>
        <paramref name="value" /> convertie ou <see langword="null" /> si le paramètre <paramref name="type" /> a la valeur <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="value" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToSingle(System.Object)">
      <summary>Convertit une valeur en nombre à virgule flottante simple précision.</summary>
      <param name="value">Objet à convertir.</param>
      <returns>
        <paramref name="value" /> convertie ou <see langword="null" /> si le paramètre <paramref name="type" /> a la valeur <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="value" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToString(System.Object)">
      <summary>Convertit l'objet spécifié en <see cref="T:System.String" />.</summary>
      <param name="value">Objet à convertir.</param>
      <returns>
        <paramref name="value" /> convertie ou <see langword="null" /> si le paramètre <paramref name="type" /> a la valeur <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="value" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToUInt16(System.Object)">
      <summary>Convertit une valeur en entier non signé 16 bits.</summary>
      <param name="value">Objet à convertir.</param>
      <returns>
        <paramref name="value" /> convertie ou <see langword="null" /> si le paramètre <paramref name="type" /> a la valeur <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="value" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToUInt32(System.Object)">
      <summary>Convertit une valeur en entier 32 bits non signé.</summary>
      <param name="value">Objet à convertir.</param>
      <returns>
        <paramref name="value" /> convertie ou <see langword="null" /> si le paramètre <paramref name="type" /> a la valeur <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="value" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToUInt64(System.Object)">
      <summary>Convertit une valeur en entier 64 bits non signé.</summary>
      <param name="value">Objet à convertir.</param>
      <returns>
        <paramref name="value" /> convertie ou <see langword="null" /> si le paramètre <paramref name="type" /> a la valeur <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="value" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter">
      <summary>Sérialise et désérialise un objet ou un graphique complet d’objets connectés, au format binaire.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" /> avec des valeurs par défaut.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.#ctor(System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" /> avec un sélecteur de substitut et un contexte de diffusion en continu donnés.</summary>
      <param name="selector">
        <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> à utiliser. Peut être <see langword="null" />.</param>
      <param name="context">Source et destination des données sérialisées.</param>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.AssemblyFormat">
      <summary>Obtient ou définit le comportement du désérialiseur par rapport à la recherche et au chargement d'assemblys.</summary>
      <returns>Une des valeurs <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> qui spécifie le comportement du désérialiseur.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Binder">
      <summary>Obtient ou définit un objet de type <see cref="T:System.Runtime.Serialization.SerializationBinder" /> qui contrôle la liaison d'un objet sérialisé à un type.</summary>
      <returns>Binder de sérialisation à utiliser avec ce formateur.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Context">
      <summary>Obtient ou définit <see cref="T:System.Runtime.Serialization.StreamingContext" /> pour ce formateur.</summary>
      <returns>Contexte de diffusion en continu à utiliser avec ce formateur.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize(System.IO.Stream)">
      <summary>Désérialise le flux spécifié dans un graphique d'objets.</summary>
      <param name="serializationStream">Flux à partir duquel le graphique d'objets doit être désérialisé.</param>
      <returns>Objet supérieur (racine) du graphique d'objets.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializationStream" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
        <paramref name="serializationStream" /> prend en charge la recherche, mais sa longueur est nulle.  
ou 
Le type cible est un <see cref="T:System.Decimal" />, mais la valeur est en dehors des limites du type <see cref="T:System.Decimal" />.</exception>
      <exception cref="T:System.Security.SecurityException">L'appelant n'a pas l'autorisation requise.</exception>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.FilterLevel">
      <summary>Obtient ou définit le <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /> de la désérialisation automatique effectuée par <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" />.</summary>
      <returns>
        <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /> qui représente le niveau actuel de désérialisation automatique.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Serialize(System.IO.Stream,System.Object)">
      <summary>Sérialise l'objet ou le graphique d'objets avec l'objet supérieur (racine) spécifié vers le flux donné.</summary>
      <param name="serializationStream">Flux vers lequel le graphique doit être sérialisé.</param>
      <param name="graph">Objet à la racine du graphique à sérialiser.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializationStream" /> a la valeur <see langword="null" />.  

ou - 
<paramref name="graph" /> a la valeur null.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Une erreur s'est produite pendant la sérialisation, comme si un objet du paramètre <paramref name="graph" /> n'était pas marqué comme sérialisable.</exception>
      <exception cref="T:System.Security.SecurityException">L'appelant n'a pas l'autorisation requise.</exception>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.SurrogateSelector">
      <summary>Obtient ou définit un <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> qui contrôle la substitution de type pendant la sérialisation et la désérialisation.</summary>
      <returns>Sélecteur de substitut à utiliser avec ce formateur.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.TypeFormat">
      <summary>Obtient ou définit le format dans lequel les descriptions de type sont disposées dans le flux sérialisé.</summary>
      <returns>Style des dispositions de type à utiliser.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle">
      <summary>Indique la méthode qui sera utilisée pendant la désérialisation pour localiser et charger des assemblys.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle.Full">
      <summary>En mode complet, l'assembly utilisé pendant la désérialisation doit correspondre exactement à celui utilisé pendant la sérialisation. La méthode <see cref="Overload:System.Reflection.Assembly.Load" /> de la classe <see cref="T:System.Reflection.Assembly" /> permet de charger l'assembly.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle.Simple">
      <summary>En mode simple, l'assembly utilisé pendant la désérialisation ne doit pas nécessairement correspondre exactement à celui utilisé pendant la sérialisation. Ainsi, les numéros de version ne doivent pas nécessairement correspondre étant donné que la méthode <see cref="Overload:System.Reflection.Assembly.LoadWithPartialName" /> est utilisée pour charger l'assembly.</summary>
    </member>
    <member name="T:System.Runtime.Serialization.Formatters.FormatterTypeStyle">
      <summary>Indique le format dans lequel les descriptions de type sont disposées dans le flux sérialisé.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.FormatterTypeStyle.TypesAlways">
      <summary>Indique que des types peuvent être affectés à tous les membres objets et les membres objets <see cref="T:System.Runtime.Serialization.ISerializable" />.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.FormatterTypeStyle.TypesWhenNeeded">
      <summary>Indique que des types ne peuvent être spécifiés que pour des tableaux d'objets, des membres d'objet de type <see cref="T:System.Object" /> et des types valeur non primitifs <see cref="T:System.Runtime.Serialization.ISerializable" />.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.FormatterTypeStyle.XsdString">
      <summary>Indique que des chaînes sont acceptées au format XSD plutôt que SOAP. Aucun ID de chaîne n'est transmis.</summary>
    </member>
    <member name="T:System.Runtime.Serialization.Formatters.IFieldInfo">
      <summary>Permet l'accès aux noms et aux types de champs des objets qui prennent en charge l'interface <see cref="T:System.Runtime.Serialization.ISerializable" />.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.IFieldInfo.FieldNames">
      <summary>Obtient ou définit les noms de champs des objets sérialisés.</summary>
      <returns>Noms de champs des objets sérialisés.</returns>
      <exception cref="T:System.Security.SecurityException">L'appelant n'a pas l'autorisation requise.</exception>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.IFieldInfo.FieldTypes">
      <summary>Obtient ou définit les types de champs des objets sérialisés.</summary>
      <returns>Types de champs des objets sérialisés.</returns>
      <exception cref="T:System.Security.SecurityException">L'appelant n'a pas l'autorisation requise.</exception>
    </member>
    <member name="T:System.Runtime.Serialization.Formatters.TypeFilterLevel">
      <summary>Spécifie le niveau de la désérialisation automatique du .NET Framework Remoting.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.TypeFilterLevel.Full">
      <summary>Niveau de désérialisation complet pour le .NET Framework Remoting. Il prend en charge tous les types que l’infrastructure prend en charge dans toutes les situations.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.TypeFilterLevel.Low">
      <summary>Niveau de désérialisation faible pour le .NET Framework Remoting. Il prend en charge des types associés aux fonctionnalités de communication à distance de base.</summary>
    </member>
    <member name="T:System.Runtime.Serialization.FormatterServices">
      <summary>Fournit des méthodes statiques pour faciliter l'implémentation de <see cref="T:System.Runtime.Serialization.Formatter" /> pour la sérialisation. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.CheckTypeSecurity(System.Type,System.Runtime.Serialization.Formatters.TypeFilterLevel)">
      <summary>Détermine si le <see cref="T:System.Type" /> spécifié peut être désérialisé si le jeu de propriétés <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /> a la valeur <see langword="Low" />.</summary>
      <param name="t">
        <see cref="T:System.Type" /> dont la capacité à désérialiser est à vérifier.</param>
      <param name="securityLevel">Valeur de la propriété <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" />.</param>
      <exception cref="T:System.Security.SecurityException">Le paramètre <paramref name="t" />, de type avancé, ne peut pas être désérialisé lorsque la propriété <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /> a la valeur <see langword="Low" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetObjectData(System.Object,System.Reflection.MemberInfo[])">
      <summary>Récupère les données de l'objet spécifié et les retourne comme un tableau d'objets.</summary>
      <param name="obj">Objet à écrire dans le formateur.</param>
      <param name="members">Membres à récupérer de l'objet.</param>
      <returns>Tableau de <see cref="T:System.Object" /> qui contient les données stockées dans <paramref name="members" /> et associées à <paramref name="obj" />.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="obj" /> ou <paramref name="members" /> est <see langword="null" />.  
Un élément de <paramref name="members" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Un élément de <paramref name="members" /> ne représente pas un champ.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject(System.Type)">
      <summary>Crée une nouvelle instance du type d'objet spécifié.</summary>
      <param name="type">Type de l'objet à créer.</param>
      <returns>Obtient l'objet mis à zéro du type spécifié.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="type" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Le paramètre <paramref name="type" /> n'est pas un type Common Language Runtime valide.</exception>
      <exception cref="T:System.Security.SecurityException">L'appelant n'a pas l'autorisation requise.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type)">
      <summary>Obtient tous les membres sérialisables pour une classe du <see cref="T:System.Type" /> spécifié.</summary>
      <param name="type">Type sérialisé.</param>
      <returns>Tableau de type <see cref="T:System.Reflection.MemberInfo" /> des membres non transitoires et non statiques.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="type" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">L'appelant n'a pas l'autorisation requise.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type,System.Runtime.Serialization.StreamingContext)">
      <summary>Obtient tous les membres sérialisables pour une classe du <see cref="T:System.Type" /> spécifié et dans le <see cref="T:System.Runtime.Serialization.StreamingContext" /> fourni.</summary>
      <param name="type">Type sérialisé ou cloné.</param>
      <param name="context">Contexte dans lequel la sérialisation se produit.</param>
      <returns>Tableau de type <see cref="T:System.Reflection.MemberInfo" /> des membres non transitoires et non statiques.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="type" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">L'appelant n'a pas l'autorisation requise.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetSurrogateForCyclicalReference(System.Runtime.Serialization.ISerializationSurrogate)">
      <summary>Retourne un substitut de sérialisation pour le <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" /> spécifié.</summary>
      <param name="innerSurrogate">Substitut spécifié.</param>
      <returns>
        <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" /> pour <paramref name="innerSurrogate" /> spécifié.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetTypeFromAssembly(System.Reflection.Assembly,System.String)">
      <summary>Recherche le <see cref="T:System.Type" /> de l'objet spécifié dans le <see cref="T:System.Reflection.Assembly" /> fourni.</summary>
      <param name="assem">Assembly dans lequel vous souhaitez rechercher l'objet.</param>
      <param name="name">Nom de l'objet.</param>
      <returns>
        <see cref="T:System.Type" /> de l'objet nommé.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="assem" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">L'appelant n'a pas l'autorisation requise.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetUninitializedObject(System.Type)">
      <summary>Crée une nouvelle instance du type d'objet spécifié.</summary>
      <param name="type">Type de l'objet à créer.</param>
      <returns>Obtient l'objet mis à zéro du type spécifié.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="type" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">L'appelant n'a pas l'autorisation requise.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])">
      <summary>Remplit l'objet spécifié avec des valeurs pour chaque champ tirées du tableau de données des objets.</summary>
      <param name="obj">Objet à remplir.</param>
      <param name="members">Tableau de <see cref="T:System.Reflection.MemberInfo" /> qui décrit les champs et propriétés à remplir.</param>
      <param name="data">Tableau de <see cref="T:System.Object" /> qui spécifie les valeurs pour chaque champ et propriété à remplir.</param>
      <returns>Objet nouvellement rempli.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="obj" />, <paramref name="members" /> ou <paramref name="data" /> est <see langword="null" />.  
Un élément de <paramref name="members" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La longueur de <paramref name="members" /> ne correspond pas à la longueur de <paramref name="data" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Un élément de <paramref name="members" /> n'est pas une instance de <see cref="T:System.Reflection.FieldInfo" />.</exception>
      <exception cref="T:System.Security.SecurityException">L'appelant n'a pas l'autorisation requise.</exception>
    </member>
    <member name="T:System.Runtime.Serialization.IFormatter">
      <summary>Fournit la fonctionnalité pour formater des objets sérialisés.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.IFormatter.Binder">
      <summary>Obtient ou définit <see cref="T:System.Runtime.Serialization.SerializationBinder" /> qui effectue des recherches de type au cours de la désérialisation.</summary>
      <returns>
        <see cref="T:System.Runtime.Serialization.SerializationBinder" /> qui effectue des recherches de type au cours de la désérialisation.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.IFormatter.Context">
      <summary>Obtient ou définit <see cref="T:System.Runtime.Serialization.StreamingContext" /> utilisé pour la sérialisation et la désérialisation.</summary>
      <returns>
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> utilisé pour la sérialisation et la désérialisation.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.IFormatter.Deserialize(System.IO.Stream)">
      <summary>Désérialise les données sur le flux fourni et reconstitue le graphique d'objets.</summary>
      <param name="serializationStream">Flux contenant les données à désérialiser.</param>
      <returns>Objet supérieur du graphique désérialisé.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.IFormatter.Serialize(System.IO.Stream,System.Object)">
      <summary>Sérialise un objet, ou un graphique d'objets avec la racine donnée dans le flux fourni.</summary>
      <param name="serializationStream">Flux dans lequel le formateur place les données sérialisées. Ce flux peut référencer différents magasins de sauvegarde (tels que fichiers, réseaux, mémoires, etc.).</param>
      <param name="graph">Objet, ou racine du graphique d'objets, à sérialiser. Tous les objets enfants de cet objet racine sont automatiquement sérialisés.</param>
    </member>
    <member name="P:System.Runtime.Serialization.IFormatter.SurrogateSelector">
      <summary>Obtient ou définit <see cref="T:System.Runtime.Serialization.SurrogateSelector" /> utilisé par le formateur en cours.</summary>
      <returns>
        <see cref="T:System.Runtime.Serialization.SurrogateSelector" /> utilisé par ce formateur.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.ISerializationSurrogate">
      <summary>Implémente un sélecteur de substitut de sérialisation qui permet à un objet d'effectuer la sérialisation et la désérialisation d'un autre.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ISerializationSurrogate.GetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Remplit le <see cref="T:System.Runtime.Serialization.SerializationInfo" /> fourni avec les données nécessaires pour sérialiser l'objet.</summary>
      <param name="obj">L'objet à sérialiser.</param>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> à remplir de données.</param>
      <param name="context">Destination (consultez <see cref="T:System.Runtime.Serialization.StreamingContext" />) de cette sérialisation.</param>
      <exception cref="T:System.Security.SecurityException">L'appelant n'a pas l'autorisation requise.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ISerializationSurrogate.SetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISurrogateSelector)">
      <summary>Remplit l'objet en utilisant les informations dans <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</summary>
      <param name="obj">Objet à remplir.</param>
      <param name="info">Informations pour remplir l'objet.</param>
      <param name="context">Source à partir de laquelle l'objet est désérialisé.</param>
      <param name="selector">Sélecteur de substitut par lequel commencer la recherche de substitut compatible.</param>
      <returns>Objet désérialisé rempli.</returns>
      <exception cref="T:System.Security.SecurityException">L'appelant n'a pas l'autorisation requise.</exception>
    </member>
    <member name="T:System.Runtime.Serialization.ISurrogateSelector">
      <summary>Indique une classe de sélecteur de substitut de sérialisation</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ISurrogateSelector.ChainSelector(System.Runtime.Serialization.ISurrogateSelector)">
      <summary>Spécifie le <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> de substitut suivant à examiner si l'instance en cours n'a pas de substitut pour le type et l'assembly spécifiés dans le contexte spécifié.</summary>
      <param name="selector">Sélecteur de substitut suivant à examiner.</param>
      <exception cref="T:System.Security.SecurityException">L'appelant n'a pas l'autorisation requise.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ISurrogateSelector.GetNextSelector">
      <summary>Retourne le sélecteur de substitut suivant dans la chaîne.</summary>
      <returns>Sélecteur de substitut suivant dans la chaîne, ou <see langword="null" />.</returns>
      <exception cref="T:System.Security.SecurityException">L'appelant n'a pas l'autorisation requise.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ISurrogateSelector.GetSurrogate(System.Type,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISurrogateSelector@)">
      <summary>Recherche le substitut qui représente le type de l'objet spécifié, pour le contexte de sérialisation spécifié, en commençant par le sélecteur de substitut spécifié.</summary>
      <param name="type">
        <see cref="T:System.Type" /> de l'objet (classe) qui requiert un substitut.</param>
      <param name="context">Contexte source ou de destination pour la sérialisation en cours.</param>
      <param name="selector">Cette méthode retourne un <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> qui contient une référence au sélecteur de substitut dans lequel le substitut approprié a été trouvé. Ce paramètre est passé sans être initialisé.</param>
      <returns>Substitut approprié pour le type donné dans le contexte donné.</returns>
      <exception cref="T:System.Security.SecurityException">L'appelant n'a pas l'autorisation requise.</exception>
    </member>
    <member name="T:System.Runtime.Serialization.ObjectIDGenerator">
      <summary>Génère des ID pour des objets.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectIDGenerator.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectIDGenerator.GetId(System.Object,System.Boolean@)">
      <summary>Retourne l'ID pour l'objet spécifié, en générant un nouvel ID si l'objet spécifié n'a pas déjà été identifié par <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" />.</summary>
      <param name="obj">Objet pour lequel un ID est souhaité.</param>
      <param name="firstTime">
        <see langword="true" /> si <paramref name="obj" /> n'était pas précédemment connu de <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" /> ; sinon <see langword="false" />.</param>
      <returns>L'ID de l'objet est utilisé pour la sérialisation. La valeur affectée à <paramref name="firstTime" /> est <see langword="true" /> s'il s'agit de la première identification de l'objet ; sinon, la valeur est <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="obj" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
        <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" /> doit suivre un nombre d'objets trop important.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectIDGenerator.HasId(System.Object,System.Boolean@)">
      <summary>Détermine si un ID a déjà été assigné à un objet.</summary>
      <param name="obj">Objet en question.</param>
      <param name="firstTime">
        <see langword="true" /> si <paramref name="obj" /> n'était pas précédemment connu de <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" /> ; sinon <see langword="false" />.</param>
      <returns>ID d'objet de <paramref name="obj" /> s'il était précédemment connu de <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" /> ; sinon 0.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="obj" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="T:System.Runtime.Serialization.ObjectManager">
      <summary>Assure le suivi des objets lors de leur désérialisation.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.#ctor(System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.Serialization.ObjectManager" />.</summary>
      <param name="selector">Sélecteur de substitut à utiliser. <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> détermine le substitut correct à utiliser lors de la désérialisation d'objets d'un type donné. Au moment de la désérialisation, le sélecteur de substitut crée une nouvelle instance de l'objet à partir des informations transmises dans le flux.</param>
      <param name="context">Contexte de diffusion en continu. <see cref="T:System.Runtime.Serialization.StreamingContext" /> n'est pas utilisé par <see langword="ObjectManager" />, mais passé comme paramètre à des objets implémentant <see cref="T:System.Runtime.Serialization.ISerializable" /> ou ayant un <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />. Ces objets peuvent prendre en charge des actions spécifiques suivant la source des informations à désérialiser.</param>
      <exception cref="T:System.Security.SecurityException">L'appelant n'a pas l'autorisation requise.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.DoFixups">
      <summary>Effectue toutes les corrections enregistrées.</summary>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Une correction a échoué.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.GetObject(System.Int64)">
      <summary>Retourne l'objet avec l'ID d'objet spécifié.</summary>
      <param name="objectID">ID de l'objet demandé.</param>
      <returns>Objet ayant l'ID d'objet spécifié s'il a été précédemment stocké, ou <see langword="null" /> si l'objet correspondant n'a pas été inscrit.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Le paramètre <paramref name="objectID" /> est inférieur ou égal à zéro.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RaiseDeserializationEvent">
      <summary>Déclenche l'événement de désérialisation pour tout objet inscrit qui implémente <see cref="T:System.Runtime.Serialization.IDeserializationCallback" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RaiseOnDeserializingEvent(System.Object)">
      <summary>Appelle la méthode marquée avec <see cref="T:System.Runtime.Serialization.OnDeserializingAttribute" />.</summary>
      <param name="obj">Instance du type qui contient la méthode à appeler.</param>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(System.Int64,System.Int32,System.Int64)">
      <summary>Enregistre une correction pour un élément dans un tableau.</summary>
      <param name="arrayToBeFixed">ID du tableau utilisé pour enregistrer une correction.</param>
      <param name="index">Index dans <c>arrayFixup</c> pour lequel une correction est demandée.</param>
      <param name="objectRequired">ID de l'objet vers lequel l'élément de tableau en cours pointe une fois que la correction est terminée.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Le paramètre <paramref name="arrayToBeFixed" /> ou <paramref name="objectRequired" /> est inférieur ou égal à zéro.</exception>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="index" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(System.Int64,System.Int32[],System.Int64)">
      <summary>Enregistre des corrections pour les éléments spécifiés d'un tableau, à exécuter ultérieurement.</summary>
      <param name="arrayToBeFixed">ID du tableau utilisé pour enregistrer une correction.</param>
      <param name="indices">Index dans le tableau multidimensionnel pour lesquels une correction est demandée.</param>
      <param name="objectRequired">ID de l'objet vers lequel les éléments de tableau pointent une fois que la correction est terminée.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Le paramètre <paramref name="arrayToBeFixed" /> ou <paramref name="objectRequired" /> est inférieur ou égal à zéro.</exception>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="indices" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RecordDelayedFixup(System.Int64,System.String,System.Int64)">
      <summary>Enregistre une correction pour un membre d'objet, à exécuter ultérieurement.</summary>
      <param name="objectToBeFixed">ID de l'objet qui nécessite la référence à <paramref name="objectRequired" />.</param>
      <param name="memberName">Nom de membre de <paramref name="objectToBeFixed" /> sur lequel la correction sera effectuée.</param>
      <param name="objectRequired">ID de l'objet requis par <paramref name="objectToBeFixed" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Le paramètre <paramref name="objectToBeFixed" /> ou <paramref name="objectRequired" /> est inférieur ou égal à zéro.</exception>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="memberName" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RecordFixup(System.Int64,System.Reflection.MemberInfo,System.Int64)">
      <summary>Enregistre une correction pour un membre d'un objet, à exécuter ultérieurement.</summary>
      <param name="objectToBeFixed">ID de l'objet qui nécessite la référence à l'objet <paramref name="objectRequired" />.</param>
      <param name="member">Nom de membre de <paramref name="objectToBeFixed" /> sur lequel la correction sera effectuée.</param>
      <param name="objectRequired">ID de l'objet requis par <paramref name="objectToBeFixed" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Le paramètre <paramref name="objectToBeFixed" /> ou <paramref name="objectRequired" /> est inférieur ou égal à zéro.</exception>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="member" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64)">
      <summary>Inscrit un objet lors de sa désérialisation, en l'associant à <paramref name="objectID" />.</summary>
      <param name="obj">Objet à inscrire.</param>
      <param name="objectID">ID de l'objet à inscrire.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="obj" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Le paramètre <paramref name="objectID" /> est inférieur ou égal à zéro.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
        <paramref name="objectID" /> a déjà été inscrit pour un objet autre que <paramref name="obj" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo)">
      <summary>Inscrit un objet lors de sa désérialisation, en l'associant à <paramref name="objectID" /> et en enregistrant <see cref="T:System.Runtime.Serialization.SerializationInfo" /> utilisé avec celui-ci.</summary>
      <param name="obj">Objet à inscrire.</param>
      <param name="objectID">ID de l'objet à inscrire.</param>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> utilisé si <paramref name="obj" /> implémente <see cref="T:System.Runtime.Serialization.ISerializable" /> ou a un <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />. <paramref name="info" /> sera complété avec toutes les informations de correction nécessaires, puis passé à l'objet requis quand cet objet sera terminé.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="obj" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Le paramètre <paramref name="objectID" /> est inférieur ou égal à zéro.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
        <paramref name="objectID" /> a déjà été inscrit pour un objet autre que <paramref name="obj" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo)">
      <summary>Inscrit un membre d'un objet lors de sa désérialisation, en l'associant à <paramref name="objectID" /> et en enregistrant <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</summary>
      <param name="obj">Objet à inscrire.</param>
      <param name="objectID">ID de l'objet à inscrire.</param>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> utilisé si <paramref name="obj" /> implémente <see cref="T:System.Runtime.Serialization.ISerializable" /> ou a un <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />. <paramref name="info" /> sera complété avec toutes les informations de correction nécessaires, puis passé à l'objet requis quand cet objet sera terminé.</param>
      <param name="idOfContainingObj">ID de l'objet qui contient <paramref name="obj" />. Ce paramètre n'est requis que si <paramref name="obj" /> est un type valeur.</param>
      <param name="member">Champ dans l'objet conteneur où <paramref name="obj" /> existe. Ce paramètre n'a une signification que si <paramref name="obj" /> est un type valeur.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="obj" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Le paramètre <paramref name="objectID" /> est inférieur ou égal à zéro.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
        <paramref name="objectID" /> a déjà été inscrit pour un objet différent de <paramref name="obj" />, ou <paramref name="member" /> n'est pas un <see cref="T:System.Reflection.FieldInfo" /> et <paramref name="member" /> n'est pas <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo,System.Int32[])">
      <summary>Inscrit un membre d'un tableau contenu dans un objet lors de sa désérialisation, en l'associant à <paramref name="objectID" /> et en enregistrant <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</summary>
      <param name="obj">Objet à inscrire.</param>
      <param name="objectID">ID de l'objet à inscrire.</param>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> utilisé si <paramref name="obj" /> implémente <see cref="T:System.Runtime.Serialization.ISerializable" /> ou a un <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />. <paramref name="info" /> sera complété avec toutes les informations de correction nécessaires, puis passé à l'objet requis quand cet objet sera terminé.</param>
      <param name="idOfContainingObj">ID de l'objet qui contient <paramref name="obj" />. Ce paramètre n'est requis que si <paramref name="obj" /> est un type valeur.</param>
      <param name="member">Champ dans l'objet conteneur où <paramref name="obj" /> existe. Ce paramètre n'a une signification que si <paramref name="obj" /> est un type valeur.</param>
      <param name="arrayIndex">Si <paramref name="obj" /> est un <see cref="T:System.ValueType" /> et un membre d'un tableau, <paramref name="arrayIndex" /> contient l'index de ce tableau où <paramref name="obj" /> existe. <paramref name="arrayIndex" /> est ignoré si <paramref name="obj" /> n'est pas à la fois un <see cref="T:System.ValueType" /> et un membre d'un tableau.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="obj" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Le paramètre <paramref name="objectID" /> est inférieur ou égal à zéro.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
        <paramref name="objectID" /> a déjà été inscrit pour un objet différent de <paramref name="obj" />, ou <paramref name="member" /> n'est pas un <see cref="T:System.Reflection.FieldInfo" /> et <paramref name="member" /> n'est pas <see langword="null" />.</exception>
    </member>
    <member name="T:System.Runtime.Serialization.SerializationBinder">
      <summary>Permet aux utilisateurs de contrôler le chargement de classe et de sélectionner la classe à charger.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationBinder.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.Serialization.SerializationBinder" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationBinder.BindToName(System.Type,System.String@,System.String@)">
      <summary>En cas de substitution dans une classe dérivée, contrôle la liaison d’un objet sérialisé à un type.</summary>
      <param name="serializedType">Type de l’objet dont le formateur crée une instance.</param>
      <param name="assemblyName">Spécifie le nom <see cref="T:System.Reflection.Assembly" /> de l’objet sérialisé.</param>
      <param name="typeName">Spécifie le nom <see cref="T:System.Type" /> de l’objet sérialisé.</param>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationBinder.BindToType(System.String,System.String)">
      <summary>En cas de substitution dans une classe dérivée, contrôle la liaison d’un objet sérialisé à un type.</summary>
      <param name="assemblyName">Spécifie le nom <see cref="T:System.Reflection.Assembly" /> de l’objet sérialisé.</param>
      <param name="typeName">Spécifie le nom <see cref="T:System.Type" /> de l’objet sérialisé.</param>
      <returns>Type de l’objet dont le formateur crée une instance.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.SerializationObjectManager">
      <summary>Gère des processus de sérialisation au moment de l'exécution. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationObjectManager.#ctor(System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.Serialization.SerializationObjectManager" />.</summary>
      <param name="context">Instance de la classe <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui contient des informations sur l'opération de sérialisation en cours.</param>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationObjectManager.RaiseOnSerializedEvent">
      <summary>Appelle l'événement de rappel OnSerializing si le type de l'objet en a un, et inscrit l'objet pour déclencher l'événement OnSerialized si le type de l'objet en a un.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationObjectManager.RegisterObject(System.Object)">
      <summary>Inscrit l'objet sur lequel des événements seront déclenchés.</summary>
      <param name="obj">Objet à inscrire.</param>
    </member>
    <member name="T:System.Runtime.Serialization.SurrogateSelector">
      <summary>Assiste les formateurs lors de la sélection du substitut de sérialisation, afin de lui déléguer le processus de sérialisation ou de désérialisation.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.SurrogateSelector.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.Serialization.SurrogateSelector" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.SurrogateSelector.AddSurrogate(System.Type,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISerializationSurrogate)">
      <summary>Ajoute un substitut à la liste des substituts vérifiés.</summary>
      <param name="type">
        <see cref="T:System.Type" /> pour lequel le substitut est requis.</param>
      <param name="context">Données spécifiques au contexte.</param>
      <param name="surrogate">Substitut à appeler pour ce type.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="type" /> ou <paramref name="surrogate" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Un substitut existe déjà pour ce type et ce contexte.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.SurrogateSelector.ChainSelector(System.Runtime.Serialization.ISurrogateSelector)">
      <summary>Ajoute le <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> spécifié et capable de gérer un type d'objet particulier à la liste des substituts.</summary>
      <param name="selector">Sélecteur de substitut à ajouter.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="selector" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Le sélecteur figure déjà dans la liste des sélecteurs.</exception>
      <exception cref="T:System.Security.SecurityException">L'appelant n'a pas l'autorisation requise.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.SurrogateSelector.GetNextSelector">
      <summary>Retourne le sélecteur suivant dans la chaîne de sélecteurs.</summary>
      <returns>
        <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> suivant dans la chaîne de sélecteurs.</returns>
      <exception cref="T:System.Security.SecurityException">L'appelant n'a pas l'autorisation requise.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.SurrogateSelector.GetSurrogate(System.Type,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISurrogateSelector@)">
      <summary>Retourne le substitut pour un type particulier.</summary>
      <param name="type">
        <see cref="T:System.Type" /> pour lequel le substitut est demandé.</param>
      <param name="context">Contexte de diffusion en continu.</param>
      <param name="selector">Substitut à utiliser.</param>
      <returns>Substitut pour un type particulier.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="type" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">L'appelant n'a pas l'autorisation requise.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.SurrogateSelector.RemoveSurrogate(System.Type,System.Runtime.Serialization.StreamingContext)">
      <summary>Supprime le substitut associé à un type donné.</summary>
      <param name="type">
        <see cref="T:System.Type" /> pour lequel le substitut doit être supprimé.</param>
      <param name="context">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> pour le substitut en cours.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="type" /> a la valeur <see langword="null" />.</exception>
    </member>
  </members>
</doc>