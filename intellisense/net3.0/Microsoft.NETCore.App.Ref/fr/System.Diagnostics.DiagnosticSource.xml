<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Diagnostics.DiagnosticSource</name>
  </assembly>
  <members>
    <member name="T:System.Diagnostics.Activity">
      <summary>Représente une opération avec le contexte à utiliser pour la journalisation.</summary>
    </member>
    <member name="M:System.Diagnostics.Activity.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.Activity" />.</summary>
      <param name="operationName">Nom de l'opération.</param>
    </member>
    <member name="P:System.Diagnostics.Activity.ActivityTraceFlags">
      <summary>Obtient les indicateurs (définis par la spécification d’ID de W3C) associés à l’activité.</summary>
      <returns>indicateurs associés à l’activité.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.AddBaggage(System.String,System.String)">
      <summary>Met à jour le <see cref="T:System.Diagnostics.Activity" /> pour avoir un nouvel élément bagage avec la clé et la valeur spécifiées.</summary>
      <param name="key">Clé du bagage.</param>
      <param name="value">Valeur du bagage.</param>
      <returns>
        <see langword="this" /> pour un chaînage pratique.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.AddTag(System.String,System.String)">
      <summary>Met à jour <see cref="T:System.Diagnostics.Activity" /> pour avoir une nouvelle balise avec les valeurs <paramref name="key" /> et <paramref name="value" /> fournies. .</summary>
      <param name="key">Clé de la balise.</param>
      <param name="value">Valeur de la balise.</param>
      <returns>
        <see langword="this" /> pour un chaînage pratique.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Baggage">
      <summary>Obtient une collection de paires clé-valeur qui représentent les informations passées aux enfants de ce <see cref="T:System.Diagnostics.Activity" />.</summary>
      <returns>Énumération de paires clé-valeur de chaîne de chaîne.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Current">
      <summary>Obtient ou définit l’opération en cours (<see cref="T:System.Diagnostics.Activity" />) pour le thread actuel.  Cela s’effectue par le biais d’appels asynchrones.</summary>
      <returns>Opération actuelle pour le thread actuel.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.DefaultIdFormat">
      <summary>Obtient ou définit le format d’ID par défaut pour la <see cref="T:System.Diagnostics.Activity" />.</summary>
    </member>
    <member name="P:System.Diagnostics.Activity.Duration">
      <summary>Obtient la durée de l’opération.</summary>
      <returns>Le delta entre <see cref="P:System.Diagnostics.Activity.StartTimeUtc" /> et l’heure de fin si <see cref="T:System.Diagnostics.Activity" /> la est terminée<see cref="M:System.Diagnostics.Activity.Stop" /> ( <see cref="M:System.Diagnostics.Activity.SetEndTime(System.DateTime)" /><see cref="T:System.Diagnostics.Activity" /> ou a été appelée) <see cref="F:System.TimeSpan.Zero" /> , ou si n’a pas <see cref="M:System.Diagnostics.Activity.SetEndTime(System.DateTime)" /> terminé et n’a pas été appelé.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.ForceDefaultIdFormat">
      <summary>Obtient ou définit une valeur qui détermine si le <see cref="P:System.Diagnostics.Activity.DefaultIdFormat" /> est toujours utilisé pour définir le format d’ID par défaut.</summary>
      <returns>
        <see langword="true" />pour toujours utiliser le <see cref="P:System.Diagnostics.Activity.DefaultIdFormat" />; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.GetBaggageItem(System.String)">
      <summary>Retourne la valeur d’une paire clé-valeur ajoutée à l’activité avec <see cref="M:System.Diagnostics.Activity.AddBaggage(System.String,System.String)" />.</summary>
      <param name="key">Clé du bagage.</param>
      <returns>Valeur de la paire clé-valeur si elle existe ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Id">
      <summary>Obtient un identificateur qui est propre à chaque requête.</summary>
      <returns>ID de l'activité.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.IdFormat">
      <summary>Obtient le format pour la <see cref="P:System.Diagnostics.Activity.Id" />.</summary>
      <returns>Format <see cref="P:System.Diagnostics.Activity.Id" />du.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.OperationName">
      <summary>Obtient le nom de l’opération.</summary>
      <returns>Nom de l'opération.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Parent">
      <summary>Obtient le parent de <see cref="T:System.Diagnostics.Activity" /> qui a créé cette activité.</summary>
      <returns>Parent de ce <see cref="T:System.Diagnostics.Activity" />, s’il s’agit du même processus, ou <see langword="null" /> si cette instance n’a pas de parent (il s’agit d’une activité racine) ou si le parent est en dehors du processus.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.ParentId">
      <summary>Obtient l’ID du parent de cette activité.</summary>
      <returns>ID parent, s’il en existe un, <see langword="null" /> ou si ce n’est pas le cas.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.ParentSpanId">
      <summary>Obtient le <see cref="P:System.Diagnostics.Activity.SpanId" /> du parent.</summary>
      <returns>Du <see cref="P:System.Diagnostics.Activity.SpanId" />parent.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Recorded">
      <summary>Obtient une valeur qui indique si l’indicateur W3CIdFlags.Recorded est défini.</summary>
      <returns>
        <see langword="true" />Si l’indicateur W3CIdFlags. enregistred est défini; Sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.RootId">
      <summary>Obtient l’ID racine de ce <see cref="T:System.Diagnostics.Activity" />.</summary>
      <returns>ID racine, ou <see langword="null" /> si l’instance actuelle a une <see cref="P:System.Diagnostics.Activity.ParentId" /> valeur ou <see cref="P:System.Diagnostics.Activity.Id" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetEndTime(System.DateTime)">
      <summary>Met à jour le <see cref="T:System.Diagnostics.Activity" /> pour définir son <see cref="P:System.Diagnostics.Activity.Duration" /> comme la différence entre <see cref="P:System.Diagnostics.Activity.StartTimeUtc" /> et l’heure d’arrêt spécifiée.</summary>
      <param name="endTimeUtc">Heure UTC de l’arrêt.</param>
      <returns>
        <see langword="this" /> pour un chaînage pratique.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetIdFormat(System.Diagnostics.ActivityIdFormat)">
      <summary>Définit le format d’ID sur ce <see cref="T:System.Diagnostics.Activity" /> avant qu’il ne soit démarré.</summary>
      <param name="format">Une des valeurs d'énumération qui spécifie le format de la propriété <see cref="P:System.Diagnostics.Activity.Id" />.</param>
      <returns>
        <see langword="this" /> pour un chaînage pratique.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetParentId(System.Diagnostics.ActivityTraceId,System.Diagnostics.ActivitySpanId,System.Diagnostics.ActivityTraceFlags)">
      <summary>Définit l’ID parent à l’aide de la convention W3C d’un TraceId et d’un SpanId.</summary>
      <param name="traceId">TraceId de l’activité parente.</param>
      <param name="spanId">SpanId de l’activité parente.</param>
      <param name="activityTraceFlags">Une des valeurs d’énumération qui spécifie des indicateurs définis par le standard W3C qui sont associés à une activité.</param>
      <returns>
        <see langword="this" /> pour un chaînage pratique.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetParentId(System.String)">
      <summary>Met à jour ce <see cref="T:System.Diagnostics.Activity" /> pour indiquer que le <see cref="T:System.Diagnostics.Activity" /> avec un ID <paramref name="parentId" /> a provoqué ce <see cref="T:System.Diagnostics.Activity" />.</summary>
      <param name="parentId">ID de l’opération parente.</param>
      <returns>
        <see langword="this" /> pour un chaînage pratique.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetStartTime(System.DateTime)">
      <summary>Définit l’heure de début de ce <see cref="T:System.Diagnostics.Activity" />.</summary>
      <param name="startTimeUtc">Heure UTC du début de <see cref="T:System.Diagnostics.Activity" />.</param>
      <returns>
        <see langword="this" /> pour un chaînage pratique.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.SpanId">
      <summary>Obtient la partie SPAN du <see cref="P:System.Diagnostics.Activity.Id" />.</summary>
      <returns>ID de la partie d’étendue de <see cref="P:System.Diagnostics.Activity.Id" />, si le <see cref="T:System.Diagnostics.Activity" /> a le format W3C; sinon, zéro <see langword="SpanId" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.Start">
      <summary>Démarre l’activité.</summary>
      <returns>
        <see langword="this" /> pour un chaînage pratique.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.StartTimeUtc">
      <summary>Obtient l’heure à laquelle l’opération a démarré.</summary>
      <returns>Heure UTC à laquelle l’opération a démarré.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.Stop">
      <summary>Arrête l’activité.</summary>
    </member>
    <member name="P:System.Diagnostics.Activity.Tags">
      <summary>Obtient une collection de paires clé-valeur qui représentent les informations à enregistrer avec le <see cref="T:System.Diagnostics.Activity" /> dans le système de journalisation.</summary>
      <returns>Énumération de paires clé-valeur de chaîne de chaîne.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.TraceId">
      <summary>Obtient la partie TraceId du <see cref="P:System.Diagnostics.Activity.Id" />.</summary>
      <returns>ID de la partie TraceID du <see cref="P:System.Diagnostics.Activity.Id" />, si l’ID a le format W3C; sinon, zéro TraceID.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.TraceStateString">
      <summary>Obtient l’en-tête <see langword="tracestate" /> W3C.</summary>
      <returns>En- <see langword="tracestate" /> tête du W3C.</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityIdFormat">
      <summary>Spécifie le format de la propriété <see cref="P:System.Diagnostics.Activity.Id" />.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityIdFormat.Hierarchical">
      <summary>Format hiérarchique.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityIdFormat.Unknown">
      <summary>Format inconnu.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityIdFormat.W3C">
      <summary>Format W3C.</summary>
    </member>
    <member name="T:System.Diagnostics.ActivitySpanId">
      <summary>Représente un <see cref="P:System.Diagnostics.Activity.SpanId" /> mis en forme selon une norme W3C.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CopyTo(System.Span{System.Byte})">
      <summary>Copie les 8 octets du <see cref="T:System.Diagnostics.ActivitySpanId" /> actuel vers une plage spécifiée.</summary>
      <param name="destination">Plage dans laquelle les 8 octets du SpanID doivent être copiés.</param>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateFromBytes(System.ReadOnlySpan{System.Byte})">
      <summary>Crée une valeur <see cref="T:System.Diagnostics.ActivitySpanId" /> à partir d’une plage en lecture seule de 8 octets.</summary>
      <param name="idData">Plage en lecture seule de 8 octets.</param>
      <returns>Nouvel ID de plage.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="idData" /> ne contient pas huit octets.</exception>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateFromString(System.ReadOnlySpan{System.Char})">
      <summary>Crée une valeur <see cref="T:System.Diagnostics.ActivitySpanId" /> à partir d’une plage en lecture seule de 16 caractères hexadécimaux.</summary>
      <param name="idData">Plage qui contient 16 caractères hexadécimaux.</param>
      <returns>Nouvel ID de plage.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="idData" /> ne contient pas 16 caractères hexadécimaux.

ou - 
Les caractères dans <paramref name="idData" /> ne sont pas tous des caractères hexadécimaux minuscules ou tous des zéros.</exception>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateFromUtf8String(System.ReadOnlySpan{System.Byte})">
      <summary>Crée une valeur <see cref="T:System.Diagnostics.ActivitySpanId" /> à partir d’une plage en lecture seule d’octets encodés en UTF-8.</summary>
      <param name="idData">Plage en lecture seule d’octets encodés en UTF-8.</param>
      <returns>Nouvel ID de plage.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateRandom">
      <summary>Crée un <see cref="T:System.Diagnostics.ActivitySpanId" /> basé sur un nombre aléatoire (qui est très probablement unique).</summary>
      <returns>Nouvel ID de plage.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.Equals(System.Diagnostics.ActivitySpanId)">
      <summary>Détermine si cette instance et l’instance <see cref="T:System.Diagnostics.ActivitySpanId" /> spécifiée ont la même valeur.</summary>
      <param name="spanId">Instance à comparer.</param>
      <returns>
        <see langword="true" /> si <paramref name="spanId" /> a la même valeur hexadécimale que l’instance actuelle ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.Equals(System.Object)">
      <summary>l’instance et un objet spécifié, qui doit aussi être une instance <see cref="T:System.Diagnostics.ActivitySpanId" />, ont la même valeur.</summary>
      <param name="obj">Objet à comparer.</param>
      <returns>
        <see langword="true" /> si <paramref name="obj" /> est une instance de <see cref="T:System.Diagnostics.ActivitySpanId" /> et a la même valeur hexadécimale que l’instance actuelle ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.GetHashCode">
      <summary>Retourne le code de hachage du SpanId.</summary>
      <returns>Code de hachage du SpanId.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.op_Equality(System.Diagnostics.ActivitySpanId,System.Diagnostics.ActivitySpanId)">
      <summary>Détermine si deux instances <see cref="T:System.Diagnostics.ActivitySpanId" /> spécifiées ont la même valeur.</summary>
      <param name="spanId1">Première instance à comparer.</param>
      <param name="spandId2">Deuxième instance à comparer.</param>
      <returns>
        <see langword="true" /> si le SpanId de <paramref name="spanId1" /> est le même que le SpanId de <paramref name="spandId2" /> ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.op_Inequality(System.Diagnostics.ActivitySpanId,System.Diagnostics.ActivitySpanId)">
      <summary>Détermine si deux instances <see cref="T:System.Diagnostics.ActivitySpanId" /> spécifiées ont des valeurs inégales.</summary>
      <param name="spanId1">Première instance à comparer.</param>
      <param name="spandId2">Deuxième instance à comparer.</param>
      <returns>
        <see langword="true" /> si le SpanId de <paramref name="spanId1" /> est différent du SpanId de <paramref name="spandId2" /> ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.ToHexString">
      <summary>Retourne une chaîne de 16 caractères hexadécimaux qui représente cet ID de plage.</summary>
      <returns>Représentation sous forme de chaîne de 16 caractères hexadécimaux de cet ID de plage.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.ToString">
      <summary>Retourne une chaîne de 16 caractères hexadécimaux qui représente cet ID de plage.</summary>
      <returns>Représentation sous forme de chaîne de 16 caractères hexadécimaux de cet ID de plage.</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityTraceFlags">
      <summary>Spécifie des indicateurs définis par le standard W3C qui sont associés à une activité.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityTraceFlags.None">
      <summary>L’activité n’a pas été marquée.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityTraceFlags.Recorded">
      <summary>L’activité (ou plus probablement ses parents) a été marquée comme utile pour l’enregistrement.</summary>
    </member>
    <member name="T:System.Diagnostics.ActivityTraceId">
      <summary>Représente un <see cref="P:System.Diagnostics.Activity.TraceId" /> dont le format est basé sur un standard W3C.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CopyTo(System.Span{System.Byte})">
      <summary>Copie les 16 octets du <see cref="T:System.Diagnostics.ActivityTraceId" /> actuel dans une plage spécifiée.</summary>
      <param name="destination">La plage dans laquelle les 16 octets de l’ID de trace doivent être copiés.</param>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateFromBytes(System.ReadOnlySpan{System.Byte})">
      <summary>Crée une valeur <see cref="T:System.Diagnostics.ActivityTraceId" /> à partir d’une plage en lecture seule de 16 octets.</summary>
      <param name="idData">Plage en lecture seule de 16 octets.</param>
      <returns>Nouvel ID de trace.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="idData" /> ne contient pas huit octets.</exception>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateFromString(System.ReadOnlySpan{System.Char})">
      <summary>Crée une valeur <see cref="T:System.Diagnostics.ActivityTraceId" /> à partir d’une plage en lecture seule de 32 caractères hexadécimaux.</summary>
      <param name="idData">Plage qui contient 32 caractères hexadécimaux.</param>
      <returns>Nouvel ID de trace.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="idData" /> ne contient pas 16 caractères hexadécimaux.

ou -

Les caractères dans <paramref name="idData" /> ne sont pas tous des caractères hexadécimaux minuscules ou tous des zéros.</exception>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateFromUtf8String(System.ReadOnlySpan{System.Byte})">
      <summary>Crée une valeur <see cref="T:System.Diagnostics.ActivityTraceId" /> à partir d’une plage en lecture seule d’octets encodés en UTF-8.</summary>
      <param name="idData">Plage en lecture seule d’octets encodés en UTF-8.</param>
      <returns>Nouvel ID de trace.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateRandom">
      <summary>Crée un <see cref="T:System.Diagnostics.ActivitySpanId" /> basé sur un nombre aléatoire (qui est très probablement unique).</summary>
      <returns>Nouvel ID de plage.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.Equals(System.Diagnostics.ActivityTraceId)">
      <summary>Détermine si l’instance actuelle et un <see cref="T:System.Diagnostics.ActivityTraceId" /> spécifié sont égaux.</summary>
      <param name="traceId">Instance à comparer.</param>
      <returns>
        <see langword="true" /> si <paramref name="traceId" /> a la même valeur hexadécimale que l’instance actuelle ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.Equals(System.Object)">
      <summary>Détermine si cette instance et un objet spécifié, qui doit aussi être une instance <see cref="T:System.Diagnostics.ActivityTraceId" />, ont la même valeur.</summary>
      <param name="obj">Objet à comparer.</param>
      <returns>
        <see langword="true" /> si <paramref name="obj" /> est une instance de <see cref="T:System.Diagnostics.ActivityTraceId" /> et a la même valeur hexadécimale que l’instance actuelle ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.GetHashCode">
      <summary>Retourne le code de hachage du TraceId.</summary>
      <returns>Code de hachage du TraceId.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.op_Equality(System.Diagnostics.ActivityTraceId,System.Diagnostics.ActivityTraceId)">
      <summary>Détermine si deux instances <see cref="T:System.Diagnostics.ActivityTraceId" /> spécifiées ont la même valeur.</summary>
      <param name="traceId1">Première instance à comparer.</param>
      <param name="traceId2">Deuxième instance à comparer.</param>
      <returns>
        <see langword="true" /> si le TraceId de <paramref name="traceId1" /> est le même que le TraceId de <paramref name="traceId2" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.op_Inequality(System.Diagnostics.ActivityTraceId,System.Diagnostics.ActivityTraceId)">
      <summary>Détermine si deux instances <see cref="T:System.Diagnostics.ActivityTraceId" /> spécifiées ont la même valeur.</summary>
      <param name="traceId1">Première instance à comparer.</param>
      <param name="traceId2">Deuxième instance à comparer.</param>
      <returns>
        <see langword="true" /> si le TraceId de <paramref name="traceId1" /> est différent du TraceId de <paramref name="traceId2" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.ToHexString">
      <summary>Retourne une chaîne de 16 caractères hexadécimaux qui représente cet ID de plage.</summary>
      <returns>Représentation sous forme de chaîne de 32 caractères hexadécimaux de cet ID de trace.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.ToString">
      <summary>Retourne une chaîne de 32 caractères hexadécimaux qui représente cet ID de trace.</summary>
      <returns>Représentation sous forme de chaîne de 32 caractères hexadécimaux de cet ID de trace.</returns>
    </member>
    <member name="T:System.Diagnostics.DiagnosticListener">
      <summary>Fournit une implémentation de la classe <see cref="T:System.Diagnostics.DiagnosticSource" /> abstraite qui représente un emplacement nommé auquel une source envoie ses informations (événements).</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.#ctor(System.String)">
      <summary>Crée un <see cref="T:System.Diagnostics.DiagnosticListener" />.</summary>
      <param name="name">Nom de cet objet <see cref="T:System.Diagnostics.DiagnosticListener" />.</param>
    </member>
    <member name="P:System.Diagnostics.DiagnosticListener.AllListeners">
      <summary>Obtient la collection d’écouteurs de ce <see cref="T:System.Diagnostics.DiagnosticListener" />.</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Dispose">
      <summary>Supprime les NotificationListeners.</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.IsEnabled">
      <summary>Détermine s’il y a des abonnés inscrits.</summary>
      <returns>
        <see langword="true" /> s’il y en a, <see langword="false" /> dans le cas contraire.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.IsEnabled(System.String)">
      <summary>Vérifie si le <see cref="T:System.Diagnostics.DiagnosticListener" /> est activé.</summary>
      <param name="name" />
      <returns>
        <see langword="true" /> si les notifications sont activées ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.IsEnabled(System.String,System.Object,System.Object)">
      <summary>Vérifie si le DiagnosticListener est activé.</summary>
      <param name="name" />
      <param name="arg1" />
      <param name="arg2" />
      <returns>
        <see langword="true" /> s’il est activé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.DiagnosticListener.Name">
      <summary>Obtient le nom de cet objet <see cref="T:System.Diagnostics.DiagnosticListener" />.</summary>
      <returns>Nom du <see cref="T:System.Diagnostics.DiagnosticListener" />.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.OnActivityExport(System.Diagnostics.Activity,System.Object)">
      <summary>Appelle la méthode OnActivityExport de tous les abonnés.</summary>
      <param name="activity">Activité affectée par un événement externe.</param>
      <param name="payload">Objet qui représente la requête sortante.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.OnActivityImport(System.Diagnostics.Activity,System.Object)">
      <summary>Appelle la méthode OnActivityImport de tous les abonnés.</summary>
      <param name="activity">Activité affectée par un événement externe.</param>
      <param name="payload">Objet qui représente la requête entrante.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
      <summary>Ajoute un abonné.</summary>
      <param name="observer">Abonné.</param>
      <returns>Référence à une interface qui permet à l’écouteur d’arrêter de recevoir des notifications avant que la <see cref="T:System.Diagnostics.DiagnosticSource" /> ait fini de les envoyer.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Func{System.String,System.Object,System.Object,System.Boolean})">
      <summary>Ajoute un abonné et filtre éventuellement les événements en fonction de leur nom et de jusqu’à deux objets de contexte.</summary>
      <param name="observer">Abonné.</param>
      <param name="isEnabled">Délégué qui filtre les événements en fonction de leur nom et de jusqu’à deux objets de contexte (pouvant être <see langword="null" />), ou <see langword="null" /> si un filtre d’événements n’est pas souhaitable.</param>
      <returns>Référence à une interface qui permet à l’écouteur d’arrêter de recevoir des notifications avant que la <see cref="T:System.Diagnostics.DiagnosticSource" /> ait fini de les envoyer.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Func{System.String,System.Object,System.Object,System.Boolean},System.Action{System.Diagnostics.Activity,System.Object},System.Action{System.Diagnostics.Activity,System.Object})">
      <summary>Ajoute un abonné, filtre éventuellement les événements en fonction de leur nom et de jusqu’à deux objets de contexte, et spécifie les méthodes à appeler quand les fournisseurs importent ou exportent des activités depuis en dehors du processus.</summary>
      <param name="observer">Abonné.</param>
      <param name="isEnabled">Délégué qui filtre les événements en fonction de leur nom et de jusqu’à deux objets de contexte (pouvant être <see langword="null" />), ou <see langword="null" /> si un filtre d’événements n’est pas souhaitable.</param>
      <param name="onActivityImport">Délégué d’action qui reçoit l’activité affectée par un événement externe et un objet qui représente la requête entrante.</param>
      <param name="onActivityExport">Délégué d’action qui reçoit l’activité affectée par un événement externe et un objet qui représente la requête sortante.</param>
      <returns>Référence à une interface qui permet à l’écouteur d’arrêter de recevoir des notifications avant que la <see cref="T:System.Diagnostics.DiagnosticSource" /> ait fini de les envoyer.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Predicate{System.String})">
      <summary>Ajoute un abonné et filtre éventuellement les événements en fonction de leur nom.</summary>
      <param name="observer">Abonné.</param>
      <param name="isEnabled">Délégué qui filtre les événements en fonction de leur nom (<see cref="T:System.String" />). Le délégué doit retourner <see langword="true" /> si l’événement est activé.</param>
      <returns>Référence à une interface qui permet à l’écouteur d’arrêter de recevoir des notifications avant que la <see cref="T:System.Diagnostics.DiagnosticSource" /> ait fini de les envoyer.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.ToString">
      <summary>Retourne une chaîne avec le nom de ce DiagnosticListener.</summary>
      <returns>Nom de ce DiagnosticListener.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Write(System.String,System.Object)">
      <summary>Journalise une notification.</summary>
      <param name="name">Nom de l’événement à journaliser.</param>
      <param name="value">Objet qui représente la charge utile pour l’événement.</param>
    </member>
    <member name="T:System.Diagnostics.DiagnosticSource">
      <summary>Classe abstraite qui permet d’instrumenter le code pour la journalisation en production des charges enrichies à consommer dans le processus qui a été instrumenté.</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.#ctor">
      <summary>Initialise une instance de la classe <see cref="T:System.Diagnostics.DiagnosticSource" />.</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.IsEnabled(System.String)">
      <summary>Vérifie si l’événement de notification est activé.</summary>
      <param name="name">Nom de l’événement écrit.</param>
      <returns>
        <see langword="true" /> si l’événement de notification est activé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.IsEnabled(System.String,System.Object,System.Object)">
      <summary>Vérifie si l’événement de notification est activé.</summary>
      <param name="name">Nom de l’événement écrit.</param>
      <param name="arg1">Objet représentant le contexte supplémentaire pour IsEnabled. Les consommateurs doivent s’attendre à recevoir une valeur <see langword="null" />, qui peut indiquer que le producteur a appelé un IsEnabled(string) pur afin de vérifier si le consommateur souhaite obtenir des notifications des événements de ce type. En fonction de cela, le producteur peut rappeler IsEnabled (string, object, object) avec un contexte non <see langword="null" />.</param>
      <param name="arg2">Optionnel. Objet représentant le contexte supplémentaire pour IsEnabled. <see langword="null" /> par défaut. Les consommateurs doivent s’attendre à recevoir une valeur <see langword="null" />, qui peut indiquer que le producteur a appelé un IsEnabled(string) pur ou que le producteur a passé tout le contexte nécessaire dans <paramref name="arg1" />.</param>
      <returns>
        <see langword="true" /> si l’événement de notification est activé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.OnActivityExport(System.Diagnostics.Activity,System.Object)">
      <summary>Transfère l’état d’une activité à un événement ou une opération, comme une requête HTTP sortante, qui se produit en dehors du processus.</summary>
      <param name="activity">Activité affectée par un événement externe.</param>
      <param name="payload">Objet qui représente la requête sortante.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.OnActivityImport(System.Diagnostics.Activity,System.Object)">
      <summary>Transfère l’état à une activité depuis un événement ou une opération, comme une requête HTTP entrante, qui s’est produite en dehors du processus.</summary>
      <param name="activity">Activité affectée par un événement externe.</param>
      <param name="payload">Charge utile qui représente la requête entrante.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.StartActivity(System.Diagnostics.Activity,System.Object)">
      <summary>Démarre un <see cref="T:System.Diagnostics.Activity" /> et écrit un événement de démarrage.</summary>
      <param name="activity">Le <see cref="T:System.Diagnostics.Activity" /> à démarrer.</param>
      <param name="args">Objet qui représente la valeur passée comme charge utile pour l’événement.</param>
      <returns>Activité démarrée pour un chaînage pratique.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.StopActivity(System.Diagnostics.Activity,System.Object)">
      <summary>Arrête l’activité <see cref="T:System.Diagnostics.Activity" />, continue l’activité <see cref="P:System.Diagnostics.Activity.Current" /> globale et notifie les consommateurs que l’activité <see cref="T:System.Diagnostics.Activity" /> a été arrêtée.</summary>
      <param name="activity">Activité à arrêter.</param>
      <param name="args">Objet qui représente la valeur passée comme charge utile pour l’événement.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.Write(System.String,System.Object)">
      <summary>Fournit un moyen générique pour journaliser les charges utiles complexes.</summary>
      <param name="name">Nom de l’événement écrit.</param>
      <param name="value">Objet qui représente la valeur passée comme charge utile pour l’événement. C’est souvent un type anonyme qui contient plusieurs sous-valeurs.</param>
    </member>
  </members>
</doc>