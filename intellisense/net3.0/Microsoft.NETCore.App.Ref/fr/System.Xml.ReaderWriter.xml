<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Xml.ReaderWriter</name>
  </assembly>
  <members>
    <member name="T:System.Xml.ConformanceLevel">
      <summary>Spécifie l’ampleur des contrôles d’entrée ou de sortie que les objets <see cref="T:System.Xml.XmlReader" /> et <see cref="T:System.Xml.XmlWriter" /> effectuent.</summary>
    </member>
    <member name="F:System.Xml.ConformanceLevel.Auto">
      <summary>L’objet <see cref="T:System.Xml.XmlReader" /> ou <see cref="T:System.Xml.XmlWriter" /> détecte automatiquement si une vérification au niveau du document ou du fragment doit être effectuée et procède au contrôle approprié. Si vous enveloppez (wrap) un autre objet <see cref="T:System.Xml.XmlReader" /> ou <see cref="T:System.Xml.XmlWriter" />, l’objet externe n’effectue aucune vérification de conformité supplémentaire. Le contrôle de conformité doit être fait par l'objet sous-jacent.  
Pour plus de détails sur la détermination du niveau de conformité, consultez les propriétés <see cref="P:System.Xml.XmlReaderSettings.ConformanceLevel" /> et <see cref="P:System.Xml.XmlWriterSettings.ConformanceLevel" />.</summary>
    </member>
    <member name="F:System.Xml.ConformanceLevel.Document">
      <summary>Les données XML respectent les règles définissant un document XML 1.0 bien formé, tel que défini dans W3C. Ce niveau de vérification garantit que tout processeur peut utiliser le flux en cours de lecture ou d'écriture comme document XML 1.0.</summary>
    </member>
    <member name="F:System.Xml.ConformanceLevel.Fragment">
      <summary>Les données XML sont un fragment XML bien formé, tel que défini dans W3C.  Ce niveau de conformité représente un document XML qui peut ne pas comporter d'élément racine, mais qui est par ailleurs bien formé. Ce niveau de vérification garantit que tout processeur peut utiliser le flux en cours de lecture ou d'écriture comme entité analysée externe XML 1.0.</summary>
    </member>
    <member name="T:System.Xml.DtdProcessing">
      <summary>Spécifie les options de traitement des DTD. L'énumération <see cref="T:System.Xml.DtdProcessing" /> est utilisée par la classe <see cref="T:System.Xml.XmlReaderSettings" />.</summary>
    </member>
    <member name="F:System.Xml.DtdProcessing.Ignore">
      <summary>Entraîne le fait que l'élément DOCTYPE est ignoré. Aucun traitement DTD n'a lieu, et l'élément DTD/DOCTYPE est omis dans la sortie.</summary>
    </member>
    <member name="F:System.Xml.DtdProcessing.Parse">
      <summary>Utilisé pour l'analyse des DTD.</summary>
    </member>
    <member name="F:System.Xml.DtdProcessing.Prohibit">
      <summary>Spécifie que lorsqu'une DTD est rencontrée, un <see cref="T:System.Xml.XmlException" /> est levé avec un message signalant que les DTD sont interdites. Il s'agit du comportement par défaut.</summary>
    </member>
    <member name="T:System.Xml.EntityHandling">
      <summary>Spécifie comment <see cref="T:System.Xml.XmlTextReader" /> ou <see cref="T:System.Xml.XmlValidatingReader" /> gèrent les entités.</summary>
    </member>
    <member name="F:System.Xml.EntityHandling.ExpandCharEntities">
      <summary>Développe des entités de caractères et retourne des entités générales telles que les nœuds <see cref="F:System.Xml.XmlNodeType.EntityReference" />. 
Vous devez appeler <see cref="Overload:System.Xml.XmlReader.ResolveEntity" /> pour voir comment les entités générales se développent. Cela vous permet d'optimiser la gestion des entités en ne les développant que lors de leur première utilisation.  
Lorsqu'il est défini sur <see langword="ExpandCharEntities" />, un appel de la méthode <see cref="Overload:System.Xml.XmlReader.GetAttribute" /> par le lecteur développe toutes les entités (entités générales et entités de caractères).</summary>
    </member>
    <member name="F:System.Xml.EntityHandling.ExpandEntities">
      <summary>Développe toutes les entités et retourne les nœuds développés.
Les nœuds <see cref="F:System.Xml.XmlNodeType.EntityReference" /> ne sont pas renvoyés. Le texte de l'entité est développé à la place des références de celle-ci.</summary>
    </member>
    <member name="T:System.Xml.Formatting">
      <summary>Spécifie les options de mise en forme pour le <see cref="T:System.Xml.XmlTextWriter" />.</summary>
    </member>
    <member name="F:System.Xml.Formatting.Indented">
      <summary>Ajuste le retrait des éléments enfants sur la base des paramètres <see cref="P:System.Xml.XmlTextWriter.Indentation" /> et <see cref="P:System.Xml.XmlTextWriter.IndentChar" />.
Cette option met uniquement en retrait le contenu de l'élément ; le contenu mixte n'est pas affecté. Pour accéder aux définitions XML 1.0 de ces termes, reportez-vous à la documentation W3C (World Wide Web Consortium) Contenu de l'élément et Contenu mixte.</summary>
    </member>
    <member name="F:System.Xml.Formatting.None">
      <summary>Aucune mise en forme spéciale n'est appliquée. Il s'agit de la valeur par défaut.</summary>
    </member>
    <member name="T:System.Xml.IApplicationResourceStreamResolver">
      <summary>Représente un programme de résolution de flux de données des ressources de l'application.</summary>
    </member>
    <member name="M:System.Xml.IApplicationResourceStreamResolver.GetApplicationResourceStream(System.Uri)">
      <summary>Retourne un flux de ressources d'application à partir de l'URI spécifié.</summary>
      <param name="relativeUri">URI relative.</param>
      <returns>Flux de ressources d'application.</returns>
    </member>
    <member name="T:System.Xml.IHasXmlNode">
      <summary>Permet à une classe de retourner un <see cref="T:System.Xml.XmlNode" /> à partir du contexte en cours ou de la position actuelle.</summary>
    </member>
    <member name="M:System.Xml.IHasXmlNode.GetNode">
      <summary>Retourne <see cref="T:System.Xml.XmlNode" /> pour la position actuelle.</summary>
      <returns>
        <see langword="XmlNode" /> pour la position actuelle.</returns>
    </member>
    <member name="T:System.Xml.IXmlLineInfo">
      <summary>Fournit une interface pour permettre à une classe de retourner des informations de ligne et de position.</summary>
    </member>
    <member name="M:System.Xml.IXmlLineInfo.HasLineInfo">
      <summary>Obtient une valeur indiquant si la classe peut retourner des informations de ligne.</summary>
      <returns>
        <see langword="true" /> si <see cref="P:System.Xml.IXmlLineInfo.LineNumber" /> et <see cref="P:System.Xml.IXmlLineInfo.LinePosition" /> peuvent être fournis ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.IXmlLineInfo.LineNumber">
      <summary>Obtient le numéro de la ligne active.</summary>
      <returns>Le numéro de la ligne active ou 0 si aucune information de ligne n'est disponible (par exemple, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo" /> retourne <see langword="false" />).</returns>
    </member>
    <member name="P:System.Xml.IXmlLineInfo.LinePosition">
      <summary>Obtient la position de la ligne active.</summary>
      <returns>La position de la ligne active ou 0 si aucune information de ligne n'est disponible (par exemple, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo" /> retourne <see langword="false" />).</returns>
    </member>
    <member name="T:System.Xml.IXmlNamespaceResolver">
      <summary>Fournit un accès en lecture seule à un jeu de mappages de préfixes et d'espaces de noms.</summary>
    </member>
    <member name="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>Obtient une collection de mappages de préfixes sur des espaces de noms définis qui sont actuellement dans la portée.</summary>
      <param name="scope">Valeur de <see cref="T:System.Xml.XmlNamespaceScope" /> qui spécifie le type de nœuds d'espace de noms à retourner.</param>
      <returns>
        <see cref="T:System.Collections.IDictionary" /> qui contient les espaces de noms actuellement dans la portée.</returns>
    </member>
    <member name="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)">
      <summary>Obtient l'URI de l'espace de noms mappé sur le préfixe spécifié.</summary>
      <param name="prefix">Préfixe dont vous recherchez l'URI de l'espace de noms.</param>
      <returns>URI d'espace de noms mappé au préfixe ; <see langword="null" /> si le préfixe n'est pas mappé à un URI d'espace de noms.</returns>
    </member>
    <member name="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)">
      <summary>Obtient le préfixe qui est mappé sur l'URI de l'espace de noms spécifié.</summary>
      <param name="namespaceName">URI de l'espace de noms dont vous recherchez le préfixe.</param>
      <returns>Préfixe mappé à l'URI d'espace de noms ; <see langword="null" /> si l'URI de l'espace de noms n'est pas mappé sur un préfixe.</returns>
    </member>
    <member name="T:System.Xml.NamespaceHandling">
      <summary>Spécifie si vous souhaitez supprimer les déclarations d'espace de noms en double dans le <see cref="T:System.Xml.XmlWriter" />.</summary>
    </member>
    <member name="F:System.Xml.NamespaceHandling.Default">
      <summary>Spécifie que les déclarations d'espace de noms en double ne seront pas supprimées.</summary>
    </member>
    <member name="F:System.Xml.NamespaceHandling.OmitDuplicates">
      <summary>Spécifie que les déclarations d'espace de noms en double seront supprimées. Pour l'espace de noms en double à supprimer, le préfixe et l'espace de noms doivent correspondre.</summary>
    </member>
    <member name="T:System.Xml.NameTable">
      <summary>Implémente un <see cref="T:System.Xml.XmlNameTable" /> à thread unique.</summary>
    </member>
    <member name="M:System.Xml.NameTable.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see langword="NameTable" />.</summary>
    </member>
    <member name="M:System.Xml.NameTable.Add(System.Char[],System.Int32,System.Int32)">
      <summary>Atomise la chaîne spécifiée et l'ajoute à <see langword="NameTable" />.</summary>
      <param name="key">Tableau de caractères contenant les chaînes à ajouter.</param>
      <param name="start">Index de base zéro dans le tableau spécifiant le premier caractère de la chaîne.</param>
      <param name="len">Nombre de caractères dans la chaîne.</param>
      <returns>La chaîne atomisée ou, le cas échéant, la chaîne existante dans <see langword="NameTable" />. Si <paramref name="len" /> a la valeur zéro, String.Empty est retourné.</returns>
      <exception cref="T:System.IndexOutOfRangeException">0 &gt; <paramref name="start" />  

ou - 
<paramref name="start" /> &gt;= <paramref name="key" />.Length 
ou - 
<paramref name="len" /> &gt;= <paramref name="key" />.Length 
Les conditions ci-dessus n'entraînent pas la levée d'une exception si <paramref name="len" />=0.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="len" /> &lt; 0.</exception>
    </member>
    <member name="M:System.Xml.NameTable.Add(System.String)">
      <summary>Atomise la chaîne spécifiée et l'ajoute à <see langword="NameTable" />.</summary>
      <param name="key">Chaîne à ajouter.</param>
      <returns>La chaîne atomisée ou, le cas échéant, la chaîne existante dans le <see langword="NameTable" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.NameTable.Get(System.Char[],System.Int32,System.Int32)">
      <summary>Obtient la chaîne atomisée contenant les mêmes caractères que la plage de caractères spécifiée dans le tableau donné.</summary>
      <param name="key">Tableau de caractères contenant le nom à rechercher.</param>
      <param name="start">Index de base zéro dans le tableau spécifiant le premier caractère du nom.</param>
      <param name="len">Nombre de caractères dans le nom.</param>
      <returns>Chaîne atomisée ou <see langword="null" /> si la chaîne n'a pas encore été atomisée. Si <paramref name="len" /> a la valeur zéro, String.Empty est retourné.</returns>
      <exception cref="T:System.IndexOutOfRangeException">0 &gt; <paramref name="start" />  

ou - 
<paramref name="start" /> &gt;= <paramref name="key" />.Length 
ou 
<paramref name="len" /> &gt;= <paramref name="key" />.Length 
Les conditions ci-dessus n'entraînent pas la levée d'une exception si <paramref name="len" />=0.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="len" /> &lt; 0.</exception>
    </member>
    <member name="M:System.Xml.NameTable.Get(System.String)">
      <summary>Obtient la chaîne atomisée de valeur spécifiée.</summary>
      <param name="value">Nom à rechercher.</param>
      <returns>L'objet de chaîne atomisée ou <see langword="null" /> si la chaîne n'a pas encore été atomisée.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> est <see langword="null" />.</exception>
    </member>
    <member name="T:System.Xml.NewLineHandling">
      <summary>Spécifie comment gérer les sauts de ligne.</summary>
    </member>
    <member name="F:System.Xml.NewLineHandling.Entitize">
      <summary>Les caractères de nouvelle ligne sont définis comme "entitize". Ce paramètre conserve tous les caractères lorsque la sortie est lue par un <see cref="T:System.Xml.XmlReader" /> normalisant.</summary>
    </member>
    <member name="F:System.Xml.NewLineHandling.None">
      <summary>Les caractères de nouvelle ligne restent inchangés. La sortie est identique à l'entrée.</summary>
    </member>
    <member name="F:System.Xml.NewLineHandling.Replace">
      <summary>Les caractères de nouvelle ligne sont remplacés pour correspondre au caractère spécifié dans la propriété <see cref="P:System.Xml.XmlWriterSettings.NewLineChars" />.</summary>
    </member>
    <member name="T:System.Xml.ReadState">
      <summary>Spécifie l'état du lecteur.</summary>
    </member>
    <member name="F:System.Xml.ReadState.Closed">
      <summary>La méthode <see cref="M:System.Xml.XmlReader.Close" /> a été appelée.</summary>
    </member>
    <member name="F:System.Xml.ReadState.EndOfFile">
      <summary>La fin du fichier a été atteinte avec succès.</summary>
    </member>
    <member name="F:System.Xml.ReadState.Error">
      <summary>Une erreur s'est produite et empêche l'opération de lecture de se poursuivre.</summary>
    </member>
    <member name="F:System.Xml.ReadState.Initial">
      <summary>La méthode <see langword="Read" /> n'a pas été appelée.</summary>
    </member>
    <member name="F:System.Xml.ReadState.Interactive">
      <summary>La méthode <see langword="Read" /> a été appelée. Des méthodes supplémentaires peuvent être appelées sur le lecteur.</summary>
    </member>
    <member name="T:System.Xml.Resolvers.XmlKnownDtds">
      <summary>L'énumération <see cref="T:System.Xml.Resolvers.XmlKnownDtds" /> est utilisée par le <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> et définit les DTD courantes que le <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> reconnaît.</summary>
    </member>
    <member name="F:System.Xml.Resolvers.XmlKnownDtds.All">
      <summary>Spécifie que le <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> reconnaîtra toutes les DTD actuellement prises en charge. Il s'agit du comportement par défaut.</summary>
    </member>
    <member name="F:System.Xml.Resolvers.XmlKnownDtds.None">
      <summary>Spécifie que le <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> ne reconnaîtra aucune des DTD prédéfinies.</summary>
    </member>
    <member name="F:System.Xml.Resolvers.XmlKnownDtds.Rss091">
      <summary>Spécifie que le <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> reconnaîtra les DTD et les entités définies dans RSS 0.91.</summary>
    </member>
    <member name="F:System.Xml.Resolvers.XmlKnownDtds.Xhtml10">
      <summary>Spécifie que le <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> reconnaîtra les DTD et les entités définies dans XHTML 1.0.</summary>
    </member>
    <member name="T:System.Xml.Resolvers.XmlPreloadedResolver">
      <summary>Représente une classe utilisée pour préremplir le cache avec des flux DTD ou XML.</summary>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />.</summary>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.Resolvers.XmlKnownDtds)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> avec les DTD connues préchargées spécifiées.</summary>
      <param name="preloadedDtds">DTD connues qui doivent être préremplies dans le cache.</param>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> avec le programme de résolution de secours spécifié.</summary>
      <param name="fallbackResolver">
        <see langword="XmlResolver" />, <see langword="XmlXapResolver" />, ou votre propre programme de résolution.</param>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> avec le programme de résolution de secours et les DTD connues préchargées spécifiés.</summary>
      <param name="fallbackResolver">
        <see langword="XmlResolver" />, <see langword="XmlXapResolver" />, ou votre propre programme de résolution.</param>
      <param name="preloadedDtds">DTD connues qui doivent être préremplies dans le cache.</param>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds,System.Collections.Generic.IEqualityComparer{System.Uri})">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> avec le programme de résolution de secours, les DTD connues préchargées et le comparateur d'égalité d'URI spécifiés.</summary>
      <param name="fallbackResolver">
        <see langword="XmlResolver" />, <see langword="XmlXapResolver" />, ou votre propre programme de résolution.</param>
      <param name="preloadedDtds">DTD connues qui doivent être préremplies dans le cache.</param>
      <param name="uriComparer">Implémentation de l'interface générique du <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> à utiliser lors de la comparaison d'URI.</param>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[])">
      <summary>Ajoute un tableau d'octets au magasin de <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> et le mappe à un URI. Si le magasin contient déjà un mappage pour le même URI, le mappage existant est remplacé.</summary>
      <param name="uri">URI des données ajoutées au magasin <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />.</param>
      <param name="value">Tableau d'octets avec les données qui correspondent à l'URI fourni.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> ou <paramref name="value" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[],System.Int32,System.Int32)">
      <summary>Ajoute un tableau d'octets au magasin de <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> et le mappe à un URI. Si le magasin contient déjà un mappage pour le même URI, le mappage existant est remplacé.</summary>
      <param name="uri">URI des données ajoutées au magasin <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />.</param>
      <param name="value">Tableau d'octets avec les données qui correspondent à l'URI fourni.</param>
      <param name="offset">Offset du tableau d'octets fourni où les données démarrent.</param>
      <param name="count">Nombre d'octets lus à partir du tableau d'octets, en commençant au décalage fourni.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> ou <paramref name="value" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> ou <paramref name="count" /> est inférieur à 0.  

ou - 
La longueur de <paramref name="value" /> moins <paramref name="offset" /> est inférieure à <paramref name="count." /></exception>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.IO.Stream)">
      <summary>Ajoute un <see cref="T:System.IO.Stream" /> au magasin de <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> et le mappe à un URI. Si le magasin contient déjà un mappage pour le même URI, le mappage existant est remplacé.</summary>
      <param name="uri">URI des données ajoutées au magasin <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />.</param>
      <param name="value">
        <see cref="T:System.IO.Stream" /> avec les données qui correspondent à l'URI fourni.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> ou <paramref name="value" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.String)">
      <summary>Ajoute une chaîne avec des données préchargées au magasin <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> et la mappe à une URL. Si le magasin contient déjà un mappage pour le même URI, le mappage existant est remplacé.</summary>
      <param name="uri">URI des données ajoutées au magasin <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />.</param>
      <param name="value">
        <see langword="String" /> avec les données qui correspondent à l'URI fourni.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> ou <paramref name="value" /> est <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.Resolvers.XmlPreloadedResolver.Credentials">
      <summary>Définit les informations d'identification utilisées pour authentifier <see cref="T:System.Net.WebRequest" /> sous-jacent.</summary>
      <returns>Informations d'identification utilisées pour authentifier la requête Web sous-jacente.</returns>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)">
      <summary>Mappe un URI vers un objet contenant la ressource réelle.</summary>
      <param name="absoluteUri">URI retourné par <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</param>
      <param name="role">La version actuelle du .NET Framework pour Silverlight n'utilise pas ce paramètre lors de la résolution des URI. Ce paramètre est fourni pour des extensibilités futures. Par exemple, ce paramètre peut être mappé vers xlink:role et utilisé comme argument spécifique d'implémentation dans d'autres scénarios.</param>
      <param name="ofObjectToReturn">Type d'objet à retourner. <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> prend en charge les objets <see cref="T:System.IO.Stream" /> et les objets <see cref="T:System.IO.TextReader" /> pour les URI ajoutés en tant que <see langword="String" />. Si le type demandé n'est pas pris en charge par le programme de résolution, une exception est levée. Utilisez la méthode <see cref="M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)" /> pour déterminer si un certain <see langword="Type" /> est pris en charge par ce programme de résolution.</param>
      <returns>Objet de <see cref="T:System.IO.Stream" /> ou de <see cref="T:System.IO.TextReader" /> qui correspond à la source réelle.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="absoluteUri" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException">Impossible de résoudre l'URI passé dans <paramref name="absoluteUri" />.  
ou 
 Le type de <paramref name="ofObjectToReturn" /> n'est pas un type pris en charge.</exception>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
      <summary>Mappe de façon asynchrone un URI vers un objet contenant la ressource réelle.</summary>
      <param name="absoluteUri">URI retourné par <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</param>
      <param name="role">La version actuelle du .NET Framework pour Silverlight n'utilise pas ce paramètre lors de la résolution des URI. Ce paramètre est fourni pour des extensibilités futures. Par exemple, ce paramètre peut être mappé vers xlink:role et utilisé comme argument spécifique d'implémentation dans d'autres scénarios.</param>
      <param name="ofObjectToReturn">Type d'objet à retourner. <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> prend en charge les objets <see cref="T:System.IO.Stream" /> et les objets <see cref="T:System.IO.TextReader" /> pour les URI ajoutés en tant que <see langword="String" />. Si le type demandé n'est pas pris en charge par le programme de résolution, une exception est levée. Utilisez la méthode <see cref="M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)" /> pour déterminer si un certain <see langword="Type" /> est pris en charge par ce programme de résolution.</param>
      <returns>Objet de <see cref="T:System.IO.Stream" /> ou de <see cref="T:System.IO.TextReader" /> qui correspond à la source réelle.</returns>
    </member>
    <member name="P:System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris">
      <summary>Obtient une collection d'URI préchargés.</summary>
      <returns>Collection d'URI préchargés.</returns>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Remove(System.Uri)">
      <summary>Supprime les données qui correspondent à l'URI du <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />.</summary>
      <param name="uri">URI des données à supprimer du magasin <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri(System.Uri,System.String)">
      <summary>Résout l'URI absolu à partir des URI de base et relatifs.</summary>
      <param name="baseUri">URI de base utilisé pour résoudre l'URI relatif.</param>
      <param name="relativeUri">URI à résoudre. L'URI peut être absolu ou relatif. S'il est absolu, cette valeur remplace effectivement la valeur de <paramref name="baseUri" />. S'il est relatif, il se combine à <paramref name="baseUri" /> pour produire un URI absolu.</param>
      <returns>
        <see cref="T:System.Uri" /> représentent l'URI absolu ou <see langword="null" /> si l'URI relatif ne peut pas être résolu.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)">
      <summary>Détermine si le programme de résolution prend en charge les autres <see cref="T:System.Type" />s au lieu de <see cref="T:System.IO.Stream" /> seulement.</summary>
      <param name="absoluteUri">URI absolue à vérifier.</param>
      <param name="type">
        <see cref="T:System.Type" /> à retourner.</param>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Type" /> est pris en charge ; sinon <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="T:System.Xml.Schema.IXmlSchemaInfo">
      <summary>Définit le jeu d'informations postérieures à la validation du schéma d'un nœud XML validé.</summary>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.IsDefault">
      <summary>Obtient une valeur indiquant si ce nœud XML validé a été défini comme le résultat d'une valeur par défaut appliquée pendant la validation du schéma en langage XSD (XML Schema Definition).</summary>
      <returns>
        <see langword="true" /> si ce nœud XML était défini comme le résultat d'une valeur par défaut appliquée pendant la validation du schéma ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.IsNil">
      <summary>Obtient une valeur indiquant si la valeur de ce nœud XML est Nil.</summary>
      <returns>
        <see langword="true" /> si la valeur de ce nœud XML validé est nil ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.MemberType">
      <summary>Obtient le type de schéma dynamique pour ce nœud XML validé.</summary>
      <returns>Un objet <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> qui représente le type de schéma dynamique pour ce nœud XML validé.</returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.SchemaAttribute">
      <summary>Obtient le <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> compilé qui correspond à ce nœud XML validé.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> qui correspond à ce nœud XML validé.</returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.SchemaElement">
      <summary>Obtient le <see cref="T:System.Xml.Schema.XmlSchemaElement" /> compilé qui correspond à ce nœud XML validé.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaElement" /> qui correspond à ce nœud XML validé.</returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.SchemaType">
      <summary>Obtient le type de schéma en langage XSD (XML Schema Definition) statique de ce nœud XML validé.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaType" /> de ce nœud XML validé.</returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.Validity">
      <summary>Obtient la valeur <see cref="T:System.Xml.Schema.XmlSchemaValidity" /> de ce nœud XML validé.</summary>
      <returns>Valeur <see cref="T:System.Xml.Schema.XmlSchemaValidity" /> de ce nœud XML validé.</returns>
    </member>
    <member name="T:System.Xml.Schema.ValidationEventArgs">
      <summary>Retourne des informations détaillées liées à <see langword="ValidationEventHandler" /> .</summary>
    </member>
    <member name="P:System.Xml.Schema.ValidationEventArgs.Exception">
      <summary>Obtient l'interface <see cref="T:System.Xml.Schema.XmlSchemaException" /> associée à l'événement de validation.</summary>
      <returns>
        <see langword="XmlSchemaException" /> associé à l'événement de validation.</returns>
    </member>
    <member name="P:System.Xml.Schema.ValidationEventArgs.Message">
      <summary>Obtient la description du texte correspondant à l'événement de validation.</summary>
      <returns>Description du texte.</returns>
    </member>
    <member name="P:System.Xml.Schema.ValidationEventArgs.Severity">
      <summary>Obtient la sévérité de l'événement de validation.</summary>
      <returns>Valeur <see cref="T:System.Xml.Schema.XmlSeverityType" /> représentant la sévérité de l'événement de validation.</returns>
    </member>
    <member name="T:System.Xml.Schema.ValidationEventHandler">
      <summary>Représente la méthode de rappel qui gérera les événements de validation de schémas XML et <see cref="T:System.Xml.Schema.ValidationEventArgs" />.</summary>
      <param name="sender">Source de l'événement.  
 Remarque Déterminez le type d’un expéditeur avant de l’utiliser dans votre code. Vous ne pouvez pas supposer que l'émetteur est une instance d'un type particulier. Il n’est pas garanti que l’expéditeur ne soit pas null. Associez toujours vos casts à une logique de gestion des erreurs.</param>
      <param name="e">Données d'événement.</param>
    </member>
    <member name="T:System.Xml.Schema.XmlAtomicValue">
      <summary>Représente la valeur typée d'un élément XML ou d'un attribut validé. La classe <see cref="T:System.Xml.Schema.XmlAtomicValue" /> ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlAtomicValue.Clone">
      <summary>Retourne une copie de cet objet <see cref="T:System.Xml.Schema.XmlAtomicValue" />.</summary>
      <returns>Copie de l'objet <see cref="T:System.Xml.Schema.XmlAtomicValue" /> de cet objet <see cref="T:System.Xml.Schema.XmlAtomicValue" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.IsNode">
      <summary>Obtient une valeur indiquant si l'élément XML ou l'attribut validé est un nœud XPath ou une valeur atomique.</summary>
      <returns>
        <see langword="true" /> si l'élément XML ou l'attribut validé est un nœud XPath ; <see langword="false" /> si l'élément XML ou l'attribut validé est une valeur atomique.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlAtomicValue.System#ICloneable#Clone">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.Schema.XmlAtomicValue.Clone" />.</summary>
      <returns>Copie de cet objet <see cref="T:System.Xml.Schema.XmlAtomicValue" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlAtomicValue.ToString">
      <summary>Obtient la valeur de <see langword="string" /> de l'élément XML ou de l'attribut validé.</summary>
      <returns>Valeur <see langword="string" /> de l'élément XML ou de l'attribut validé.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.TypedValue">
      <summary>Obtient l'élément XML ou l'attribut validé en tant qu'objet boxed du type Microsoft .NET Framework le plus approprié d'après son type de schéma.</summary>
      <returns>Élément XML ou attribut validé actuel en tant qu'objet boxed du type .NET Framework le plus approprié.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.Value">
      <summary>Obtient la valeur de <see langword="string" /> de l'élément XML ou de l'attribut validé.</summary>
      <returns>Valeur <see langword="string" /> de l'élément XML ou de l'attribut validé.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlAtomicValue.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Retourne la valeur de l'élément XML ou de l'attribut validé en tant que type spécifié à l'aide de l'objet <see cref="T:System.Xml.IXmlNamespaceResolver" /> spécifié pour trouver les préfixes d'espace de noms.</summary>
      <param name="type">Type sous lequel retourner l'élément XML ou l'attribut validé.</param>
      <param name="nsResolver">Objet <see cref="T:System.Xml.IXmlNamespaceResolver" /> utilisé pour trouver les préfixes d'espace de noms.</param>
      <returns>Valeur de l'élément XML ou de l'attribut validé en tant que type demandé.</returns>
      <exception cref="T:System.FormatException">Le format de l'élément XML validé ou de la valeur de l'attribut n'est pas correct pour le type cible.</exception>
      <exception cref="T:System.InvalidCastException">La tentative de cast n'est pas valide.</exception>
      <exception cref="T:System.OverflowException">Le cast spécifié a généré un dépassement de capacité.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueAsBoolean">
      <summary>Obtient la valeur de l'élément XML ou de l'attribut validé en tant que <see cref="T:System.Boolean" />.</summary>
      <returns>Valeur de l'élément XML ou de l'attribut validé en tant que <see cref="T:System.Boolean" />.</returns>
      <exception cref="T:System.FormatException">Le format de l'élément XML validé ou de la valeur de l'attribut n'est pas correct pour le type <see cref="T:System.Boolean" />.</exception>
      <exception cref="T:System.InvalidCastException">La tentative de cast en <see cref="T:System.Boolean" /> n'est pas valide.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueAsDateTime">
      <summary>Obtient la valeur de l'élément XML ou de l'attribut validé en tant que <see cref="T:System.DateTime" />.</summary>
      <returns>Valeur de l'élément XML ou de l'attribut validé en tant que <see cref="T:System.DateTime" />.</returns>
      <exception cref="T:System.FormatException">Le format de l'élément XML validé ou de la valeur de l'attribut n'est pas correct pour le type <see cref="T:System.DateTime" />.</exception>
      <exception cref="T:System.InvalidCastException">La tentative de cast en <see cref="T:System.DateTime" /> n'est pas valide.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueAsDouble">
      <summary>Obtient la valeur de l'élément XML ou de l'attribut validé en tant que <see cref="T:System.Double" />.</summary>
      <returns>Valeur de l'élément XML ou de l'attribut validé en tant que <see cref="T:System.Double" />.</returns>
      <exception cref="T:System.FormatException">Le format de l'élément XML validé ou de la valeur de l'attribut n'est pas correct pour le type <see cref="T:System.Double" />.</exception>
      <exception cref="T:System.InvalidCastException">La tentative de cast en <see cref="T:System.Double" /> n'est pas valide.</exception>
      <exception cref="T:System.OverflowException">Le cast spécifié a généré un dépassement de capacité.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueAsInt">
      <summary>Obtient la valeur de l'élément XML ou de l'attribut validé en tant que <see cref="T:System.Int32" />.</summary>
      <returns>Valeur de l'élément XML ou de l'attribut validé en tant que <see cref="T:System.Int32" />.</returns>
      <exception cref="T:System.FormatException">Le format de l'élément XML validé ou de la valeur de l'attribut n'est pas correct pour le type <see cref="T:System.Int32" />.</exception>
      <exception cref="T:System.InvalidCastException">La tentative de cast en <see cref="T:System.Int32" /> n'est pas valide.</exception>
      <exception cref="T:System.OverflowException">Le cast spécifié a généré un dépassement de capacité.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueAsLong">
      <summary>Obtient la valeur de l'élément XML ou de l'attribut validé en tant que <see cref="T:System.Int64" />.</summary>
      <returns>Valeur de l'élément XML ou de l'attribut validé en tant que <see cref="T:System.Int64" />.</returns>
      <exception cref="T:System.FormatException">Le format de l'élément XML validé ou de la valeur de l'attribut n'est pas correct pour le type <see cref="T:System.Int64" />.</exception>
      <exception cref="T:System.InvalidCastException">La tentative de cast en <see cref="T:System.Int64" /> n'est pas valide.</exception>
      <exception cref="T:System.OverflowException">Le cast spécifié a généré un dépassement de capacité.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueType">
      <summary>Obtient le type Microsoft .NET Framework de l'élément XML ou de l'attribut validé.</summary>
      <returns>Type .NET Framework de l'élément XML ou de l'attribut validé. La valeur par défaut est <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.XmlType">
      <summary>Reçoit le <see cref="T:System.Xml.Schema.XmlSchemaType" /> pour l'élément XML ou l'attribut validé.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaType" /> pour l'élément XML ou l'attribut validé.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchema">
      <summary>Représentation en mémoire d’un schéma XML, comme indiqué dans les spécifications World Wide Web Consortium (W3C) XML Schema Part 1: Structures et XML Schema Part 2: Datatypes].</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchema" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.AttributeFormDefault">
      <summary>Obtient ou définit le formulaire pour les attributs déclarés de l'espace de noms cible du schéma.</summary>
      <returns>Valeur de <see cref="T:System.Xml.Schema.XmlSchemaForm" /> indiquant si des attributs de l'espace de noms cible sont requis pour être qualifiés avec le préfixe de l'espace de noms. La valeur par défaut est <see cref="F:System.Xml.Schema.XmlSchemaForm.None" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.AttributeGroups">
      <summary>Obtient la valeur postérieure à la compilation du schéma de tous les groupes d'attributs globaux du schéma.</summary>
      <returns>Une collection <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> de tous les groupes d'attributs globaux dans le schéma.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Attributes">
      <summary>Obtient la valeur postérieure à la compilation du schéma pour tous les attributs du schéma.</summary>
      <returns>Collection <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> de tous les attributs dans le schéma.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.BlockDefault">
      <summary>Obtient ou définit l'attribut <see langword="blockDefault" /> qui définit la valeur par défaut de l'attribut <see langword="block" /> sur l'élément et les types complexes dans le <see langword="targetNamespace" /> du schéma.</summary>
      <returns>Valeur <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /> qui représente les différentes méthodes de prévention de la dérivation. La valeur par défaut est <see langword="XmlSchemaDerivationMethod.None" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler)">
      <summary>Compile le modèle SOM (Schema Object Model) XML en informations de schéma pour la validation. Utilisé pour vérifier les structures syntaxique et sémantique du modèle SOM construit par programmation. La vérification de la validation sémantique s’effectue pendant la compilation.</summary>
      <param name="validationEventHandler">Gestionnaire d'événements de validation qui reçoit les informations à propos des erreurs de validation des schémas XML.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlResolver)">
      <summary>Compile le modèle SOM (Schema Object Model) XML en informations de schéma pour la validation. Utilisé pour vérifier les structures syntaxique et sémantique du modèle SOM construit par programmation. La vérification de la validation sémantique s’effectue pendant la compilation.</summary>
      <param name="validationEventHandler">Gestionnaire d'événements de validation qui reçoit les informations à propos des erreurs de validation des schémas XML.</param>
      <param name="resolver">
        <see langword="XmlResolver" /> utilisé pour résoudre les espaces de noms référencés par les éléments <see langword="include" /> et <see langword="import" />.</param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.ElementFormDefault">
      <summary>Obtient ou définit le formulaire pour les éléments déclarés de l'espace de noms cible du schéma.</summary>
      <returns>Valeur de <see cref="T:System.Xml.Schema.XmlSchemaForm" /> indiquant si des éléments de l'espace de noms cible sont requis pour être qualifiés avec le préfixe de l'espace de noms. La valeur par défaut est <see cref="F:System.Xml.Schema.XmlSchemaForm.None" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Elements">
      <summary>Obtient la valeur postérieure à la compilation du schéma pour tous les éléments du schéma.</summary>
      <returns>Collection <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> de tous les éléments du schéma.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.FinalDefault">
      <summary>Obtient ou définit l'attribut <see langword="finalDefault" /> qui définit la valeur par défaut de l'attribut <see langword="final" /> sur les éléments et les types complexes dans l'espace de noms cible du schéma.</summary>
      <returns>Valeur <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /> qui représente les différentes méthodes de prévention de la dérivation. La valeur par défaut est <see langword="XmlSchemaDerivationMethod.None" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Groups">
      <summary>Obtient la valeur postérieure à la compilation du schéma pour tous les groupes du schéma.</summary>
      <returns>Collection <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> de tous les groupes du schéma.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Id">
      <summary>Obtient ou définit l'ID de la chaîne.</summary>
      <returns>ID de la chaîne. La valeur par défaut est <see langword="String.Empty" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Includes">
      <summary>Obtient la collection de schémas inclus et importés.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" /> des schémas inclus et importés.</returns>
    </member>
    <member name="F:System.Xml.Schema.XmlSchema.InstanceNamespace">
      <summary>Espace de noms de l'instance du schéma XML. Ce champ est constant.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.IsCompiled">
      <summary>Indique si le schéma a été compilé.</summary>
      <returns>
        <see langword="true" /> si le schéma a été compilé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Items">
      <summary>Obtient la collection d'éléments de schéma dans le schéma et est utilisé pour ajouter de nouveaux types d'élément au niveau de l'élément <see langword="schema" />.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" /> d'éléments de schéma dans le schéma.</returns>
    </member>
    <member name="F:System.Xml.Schema.XmlSchema.Namespace">
      <summary>Espace de noms du schéma XML. Ce champ est constant.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Notations">
      <summary>Obtient la valeur postérieure à la compilation du schéma pour toutes les notations du schéma.</summary>
      <returns>Collection <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> de toutes les notations du schéma.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Read(System.IO.Stream,System.Xml.Schema.ValidationEventHandler)">
      <summary>Lit un schéma XML à partir du flux fourni.</summary>
      <param name="stream">Flux de données fourni.</param>
      <param name="validationEventHandler">Le gestionnaire d'événements de validation qui reçoit les informations à propos des erreurs de syntaxe des schémas XML.</param>
      <returns>Objet <see cref="T:System.Xml.Schema.XmlSchema" /> représentant le schéma XML.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Un <see cref="T:System.Xml.Schema.XmlSchemaException" /> est déclenché si aucun <see cref="T:System.Xml.Schema.ValidationEventHandler" /> n'est spécifié.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Read(System.IO.TextReader,System.Xml.Schema.ValidationEventHandler)">
      <summary>Lit un schéma XML du <see cref="T:System.IO.TextReader" /> fourni.</summary>
      <param name="reader">
        <see langword="TextReader" /> contenant le schéma XML à lire.</param>
      <param name="validationEventHandler">Le gestionnaire d'événements de validation qui reçoit les informations à propos des erreurs de syntaxe des schémas XML.</param>
      <returns>Objet <see cref="T:System.Xml.Schema.XmlSchema" /> représentant le schéma XML.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Un <see cref="T:System.Xml.Schema.XmlSchemaException" /> est déclenché si aucun <see cref="T:System.Xml.Schema.ValidationEventHandler" /> n'est spécifié.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Read(System.Xml.XmlReader,System.Xml.Schema.ValidationEventHandler)">
      <summary>Lit un schéma XML du <see cref="T:System.Xml.XmlReader" /> fourni.</summary>
      <param name="reader">
        <see langword="XmlReader" /> contenant le schéma XML à lire.</param>
      <param name="validationEventHandler">Le gestionnaire d'événements de validation qui reçoit les informations à propos des erreurs de syntaxe des schémas XML.</param>
      <returns>Objet <see cref="T:System.Xml.Schema.XmlSchema" /> représentant le schéma XML.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Un <see cref="T:System.Xml.Schema.XmlSchemaException" /> est déclenché si aucun <see cref="T:System.Xml.Schema.ValidationEventHandler" /> n'est spécifié.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.SchemaTypes">
      <summary>Obtient la valeur postérieure à la compilation du schéma de tous les types du schéma.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" /> de tous les types de schéma du schéma.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.TargetNamespace">
      <summary>Obtient ou définit l'URI (Uniform Resource Identifier) de l'espace de noms cible du schéma.</summary>
      <returns>Espace de noms cible du schéma.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.UnhandledAttributes">
      <summary>Obtient ou définit les attributs qualifiés qui n’appartiennent pas à l’espace de noms cible du schéma.</summary>
      <returns>Tableau d'objets <see cref="T:System.Xml.XmlAttribute" /> qualifiés qui n'appartiennent pas à l'espace de noms cible du schéma.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Version">
      <summary>Obtient ou définit la version du schéma.</summary>
      <returns>Version du schéma. La valeur par défaut est <see langword="String.Empty" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.IO.Stream)">
      <summary>Écrit le schéma XML dans le flux de données fourni.</summary>
      <param name="stream">Flux de données fourni.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.IO.Stream,System.Xml.XmlNamespaceManager)">
      <summary>Écrit le schéma XML dans le <see cref="T:System.IO.Stream" /> fourni à l'aide du <see cref="T:System.Xml.XmlNamespaceManager" /> spécifié.</summary>
      <param name="stream">Flux de données fourni.</param>
      <param name="namespaceManager">L’<see cref="T:System.Xml.XmlNamespaceManager" />opérateur</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.IO.TextWriter)">
      <summary>Écrit le schéma XML dans le <see cref="T:System.IO.TextWriter" /> fourni.</summary>
      <param name="writer">
        <see cref="T:System.IO.TextWriter" /> dans lequel écrire.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.IO.TextWriter,System.Xml.XmlNamespaceManager)">
      <summary>Écrit le schéma XML dans le <see cref="T:System.IO.TextWriter" /> fourni.</summary>
      <param name="writer">
        <see cref="T:System.IO.TextWriter" /> dans lequel écrire.</param>
      <param name="namespaceManager">L’<see cref="T:System.Xml.XmlNamespaceManager" />opérateur</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.Xml.XmlWriter)">
      <summary>Écrit le schéma XML dans le <see cref="T:System.Xml.XmlWriter" /> fourni.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" /> dans lequel écrire.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="writer" /> est null.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.Xml.XmlWriter,System.Xml.XmlNamespaceManager)">
      <summary>Écrit le schéma XML dans le <see cref="T:System.Xml.XmlWriter" /> fourni.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" /> dans lequel écrire.</param>
      <param name="namespaceManager">L’<see cref="T:System.Xml.XmlNamespaceManager" />opérateur</param>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAll">
      <summary>Représente l'élément World Wide Web Consortium (W3C) <see langword="all" /> (compositeur).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAll.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaAll" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAll.Items">
      <summary>Obtient la collection des éléments <see langword="XmlSchemaElement" /> contenus dans le compositeur <see langword="all" />.</summary>
      <returns>Collection d'éléments contenus dans <see langword="XmlSchemaAll" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAnnotated">
      <summary>Classe de base de tout élément pouvant contenir des éléments d'annotation.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAnnotated.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaAnnotated" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotated.Annotation">
      <summary>Obtient ou définit la propriété <see langword="annotation" />.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaAnnotation" /> représentant la propriété <see langword="annotation" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotated.Id">
      <summary>Obtient ou définit l'ID de chaîne.</summary>
      <returns>ID de chaîne. Par défaut, il s’agit de <see langword="String.Empty" />. Optionnel.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotated.UnhandledAttributes">
      <summary>Obtient ou définit les attributs qualifiés qui n'appartiennent pas à l'espace de noms cible du schéma en cours.</summary>
      <returns>Tableau d'objets <see cref="T:System.Xml.XmlAttribute" /> qualifiés qui n'appartiennent pas à l'espace de noms cible du schéma.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAnnotation">
      <summary>Représente l'élément World Wide Web Consortium (W3C) <see langword="annotation" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAnnotation.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaAnnotation" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotation.Id">
      <summary>Obtient ou définit l'ID de chaîne.</summary>
      <returns>ID de chaîne. Par défaut, il s’agit de <see langword="String.Empty" />. Facultatif.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotation.Items">
      <summary>Obtient la collection <see langword="Items" /> utilisée pour stocker les éléments enfants <see langword="appinfo" /> et <see langword="documentation" />.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" /> d' <see langword="appinfo" /> et éléments enfants <see langword="documentation" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotation.UnhandledAttributes">
      <summary>Obtient ou définit les attributs qualifiés qui n'appartiennent pas à l'espace de noms cible du schéma.</summary>
      <returns>Tableau d'objets <see cref="T:System.Xml.XmlAttribute" /> qui n'appartiennent pas à l'espace de noms cible du schéma.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAny">
      <summary>Représente l'élément World Wide Web Consortium (W3C) <see langword="any" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAny.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaAny" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAny.Namespace">
      <summary>Obtient ou définit les espaces de noms contenant les éléments qui peuvent être employés.</summary>
      <returns>Espaces de noms pour les éléments disponibles. La valeur par défaut est <see langword="##any" />. Optionnel.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAny.ProcessContents">
      <summary>Obtient ou définit les informations concernant la gestion par une application ou un processeur XML de la validation de documents XML pour les éléments spécifiés par l'élément <see langword="any" />.</summary>
      <returns>Une des valeurs de <see cref="T:System.Xml.Schema.XmlSchemaContentProcessing" />. Si aucun attribut <see langword="processContents" /> n'est spécifié, l'attribut par défaut est <see langword="Strict" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAnyAttribute">
      <summary>Représente l'élément World Wide Web Consortium (W3C) <see langword="anyAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAnyAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnyAttribute.Namespace">
      <summary>Obtient ou définit les espaces de noms contenant les attributs qui peuvent être employés.</summary>
      <returns>Espaces de noms pour les attributs disponibles. La valeur par défaut est <see langword="##any" />. Facultatif.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnyAttribute.ProcessContents">
      <summary>Obtient ou définit les informations concernant la gestion par une application ou un processeur XML de la validation de documents XML pour les attributs spécifiés par l'élément <see langword="anyAttribute" />.</summary>
      <returns>Une des valeurs de <see cref="T:System.Xml.Schema.XmlSchemaContentProcessing" />. Si aucun attribut <see langword="processContents" /> n'est spécifié, l'attribut par défaut est <see langword="Strict" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAppInfo">
      <summary>Représente l'élément World Wide Web Consortium (W3C) <see langword="appinfo" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAppInfo.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaAppInfo" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAppInfo.Markup">
      <summary>Obtient ou définit un tableau d'objets <see cref="T:System.Xml.XmlNode" /> qui représente les nœuds enfants <see langword="appinfo" />.</summary>
      <returns>Tableau d'objets <see cref="T:System.Xml.XmlNode" /> qui représente les nœuds enfants <see langword="appinfo" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAppInfo.Source">
      <summary>Obtient ou définit la source des informations d'application.</summary>
      <returns>Référence d'URI (Uniform Resource Identifier). La valeur par défaut est <see langword="String.Empty" />. Facultatif.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAttribute">
      <summary>Représente l’élément <see langword="attribute" /> issu du schéma XML, comme spécifié par le W3C (World Wide Web Consortium). Les attributs fournissent des informations supplémentaires pour d'autres éléments du document. La balise attribute est imbriquée entre les balises d'un élément de document pour le schéma. Le document XML affiche les attributs comme des éléments nommés dans la balise d'ouverture d'un élément.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.AttributeSchemaType">
      <summary>Obtient un objet <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> représentant le type de l'attribut basé sur le <see cref="P:System.Xml.Schema.XmlSchemaAttribute.SchemaType" /> ou le <see cref="P:System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName" /> de l'attribut.</summary>
      <returns>Objet <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.AttributeType">
      <summary>Obtient l'objet CLR (common language runtime) basé sur le <see cref="P:System.Xml.Schema.XmlSchemaAttribute.SchemaType" /> ou le <see cref="P:System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName" /> de l'attribut qui contient la valeur de post-compilation de la propriété <see langword="AttributeType" />.</summary>
      <returns>L'objet CLR (Common Runtime Library) qui contient la valeur de post-compilation de la propriété <see langword="AttributeType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.DefaultValue">
      <summary>Obtient ou définit la valeur par défaut de l'attribut.</summary>
      <returns>Valeur par défaut de cet attribut. La valeur par défaut est une référence null. Optionnel.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.FixedValue">
      <summary>Obtient ou définit la valeur fixe de l'attribut.</summary>
      <returns>Valeur fixe de cet attribut. La valeur par défaut correspond à la valeur null. Facultatif.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.Form">
      <summary>Obtient ou définit le formulaire de l'attribut.</summary>
      <returns>Une des valeurs de <see cref="T:System.Xml.Schema.XmlSchemaForm" />. La valeur par défaut est la valeur du <see cref="P:System.Xml.Schema.XmlSchema.AttributeFormDefault" /> de l'élément du schéma qui contient l'attribut. Facultatif.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.Name">
      <summary>Obtient ou définit le nom de l'attribut.</summary>
      <returns>Nom de l'attribut.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.QualifiedName">
      <summary>Obtient le nom qualifié de l'attribut.</summary>
      <returns>Valeur de post-compilation de la propriété <see langword="QualifiedName" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.RefName">
      <summary>Obtient ou définit le nom d'un attribut déclaré dans ce schéma (ou dans un autre schéma indiqué par l'espace de noms spécifié).</summary>
      <returns>Nom de l'attribut déclaré.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.SchemaType">
      <summary>Obtient ou définit le type d'attribut d'un type simple.</summary>
      <returns>Type simple défini dans ce schéma.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName">
      <summary>Obtient ou définit le nom du type simple défini dans ce schéma (ou dans un autre schéma indiqué par l'espace de noms spécifié).</summary>
      <returns>Nom du type simple.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.Use">
      <summary>Obtient ou définit des informations sur l'utilisation de l'attribut.</summary>
      <returns>Une des valeurs suivantes : None, Prohibited, Optional ou Required. La valeur par défaut est Optional. Optionnel.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAttributeGroup">
      <summary>Représente l’élément <see langword="attributeGroup" /> issu du schéma XML, comme spécifié par le W3C (World Wide Web Consortium). AttributesGroups fournit un mécanisme de regroupement d'un ensemble de déclarations attribute pour permettre leur incorporation conjointe dans des définitions de types complexes.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAttributeGroup.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroup" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroup.AnyAttribute">
      <summary>Obtient ou définit le composant <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> du groupe d'attributs.</summary>
      <returns>Élément World Wide Web Consortium (W3C) <see langword="anyAttribute" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroup.Attributes">
      <summary>Obtient la collection d'attributs pour le groupe d'attributs. Contient les éléments <see langword="XmlSchemaAttribute" /> et <see langword="XmlSchemaAttributeGroupRef" />.</summary>
      <returns>Collection d'attributs pour le groupe d'attributs.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroup.Name">
      <summary>Obtient ou définit le nom du groupe d'attributs.</summary>
      <returns>Nom du groupe d'attributs.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroup.QualifiedName">
      <summary>Obtient le nom qualifié du groupe d'attributs.</summary>
      <returns>Nom qualifié du groupe d'attributs.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroup.RedefinedAttributeGroup">
      <summary>Obtient la propriété du groupe d'attributs redéfini à partir du schéma XML.</summary>
      <returns>Propriété du groupe d'attributs redéfini.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAttributeGroupRef">
      <summary>Représente l’élément <see langword="attributeGroup" /> avec l’attribut <see langword="ref" /> du schéma XML tel que spécifié par le W3C (World Wide Web Consortium). AttributesGroupRef est la référence de attributeGroup, la propriété name contient le groupe d'attributs référencé.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAttributeGroupRef.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroupRef.RefName">
      <summary>Obtient ou définit le nom de l'élément <see langword="attributeGroup" /> référencé.</summary>
      <returns>Nom du groupe d'attributs référencé. La valeur doit être de type QName.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaChoice">
      <summary>Représente l’élément <see langword="choice" /> (compositeur) issu d’un schéma XML comme spécifié par le W3C (World Wide Web Consortium). <see langword="choice" /> ne permet l'apparition que d'un seul de ses enfants par instance.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaChoice.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaChoice" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaChoice.Items">
      <summary>Obtient la collection des éléments contenus avec le compositeur (<see langword="choice" />) : <see langword="XmlSchemaElement" />, <see langword="XmlSchemaGroupRef" />, <see langword="XmlSchemaChoice" />, <see langword="XmlSchemaSequence" /> ou <see langword="XmlSchemaAny" />.</summary>
      <returns>Collection d'éléments contenus dans <see langword="XmlSchemaChoice" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaCollection">
      <summary>Contient un cache de schémas en langage XSD (XML Schema Definition) et de schémas XDR (XML-Data Reduced). La classe <see cref="T:System.Xml.Schema.XmlSchemaCollection" /> est obsolète. Utilisez plutôt <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see langword="XmlSchemaCollection" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.#ctor(System.Xml.XmlNameTable)">
      <summary>Initialise une nouvelle instance de la classe <see langword="XmlSchemaCollection" /> avec le <see cref="T:System.Xml.XmlNameTable" /> spécifié. <see langword="XmlNameTable" /> est utilisé lors du chargement des schémas.</summary>
      <param name="nametable">
        <see langword="XmlNameTable" /> à utiliser.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.String)">
      <summary>Ajoute le schéma indiqué par l'URL donnée à la collection de schémas.</summary>
      <param name="ns">URI d'espace de noms associé au schéma. Pour les schémas XML, il s'agit généralement de <see langword="targetNamespace" />.</param>
      <param name="uri">URL qui spécifie le schéma à charger.</param>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchema" /> ajouté à la collection de schémas ; <see langword="null" /> si le schéma ajouté est de type XDR (XML-Data Reduced), ou si celui-ci présente des erreurs de compilation.</returns>
      <exception cref="T:System.Xml.XmlException">Le schéma n'est pas valide.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader)">
      <summary>Ajoute le schéma contenu dans <see cref="T:System.Xml.XmlReader" /> à la collection de schémas.</summary>
      <param name="ns">URI d'espace de noms associé au schéma. Pour les schémas XML, il s'agit généralement de <see langword="targetNamespace" />.</param>
      <param name="reader">
        <see cref="T:System.Xml.XmlReader" /> contenant le schéma à ajouter.</param>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchema" /> ajouté à la collection de schémas ; <see langword="null" /> si le schéma ajouté est de type XDR (XML-Data Reduced), ou si celui-ci présente des erreurs de compilation.</returns>
      <exception cref="T:System.Xml.XmlException">Le schéma n'est pas valide.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader,System.Xml.XmlResolver)">
      <summary>Ajoute le schéma contenu dans <see cref="T:System.Xml.XmlReader" /> à la collection de schémas. Le <see cref="T:System.Xml.XmlResolver" /> spécifié permet de résoudre les ressources externes.</summary>
      <param name="ns">URI d'espace de noms associé au schéma. Pour les schémas XML, il s'agit généralement de <see langword="targetNamespace" />.</param>
      <param name="reader">
        <see cref="T:System.Xml.XmlReader" /> contenant le schéma à ajouter.</param>
      <param name="resolver">
        <see cref="T:System.Xml.XmlResolver" /> utilisé pour résoudre les espaces de noms référencés par les éléments <see langword="include" /> et <see langword="import" />, ou par l'attribut <see langword="x-schema" /> (schémas XDR). Si la valeur est <see langword="null" />, les ressources externes ne sont pas résolues.</param>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchema" /> ajouté à la collection de schémas ; <see langword="null" /> si le schéma ajouté est de type XDR (XML-Data Reduced), ou si celui-ci présente des erreurs de compilation.</returns>
      <exception cref="T:System.Xml.XmlException">Le schéma n'est pas valide.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema)">
      <summary>Ajoute le <see cref="T:System.Xml.Schema.XmlSchema" /> à la collection.</summary>
      <param name="schema">Objet <see langword="XmlSchema" /> à ajouter à la collection.</param>
      <returns>Objet <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema,System.Xml.XmlResolver)">
      <summary>Ajoute le <see cref="T:System.Xml.Schema.XmlSchema" /> à la collection. Le <see cref="T:System.Xml.XmlResolver" /> spécifié permet de résoudre les références externes.</summary>
      <param name="schema">Objet <see langword="XmlSchema" /> à ajouter à la collection.</param>
      <param name="resolver">
        <see cref="T:System.Xml.XmlResolver" /> utilisé pour résoudre les espaces de noms référencés par les éléments <see langword="include" /> et <see langword="import" />. Si la valeur est <see langword="null" />, les ressources externes ne sont pas résolues.</param>
      <returns>
        <see langword="XmlSchema" /> ajouté à la collection de schémas.</returns>
      <exception cref="T:System.Xml.XmlException">Le schéma n'est pas valide.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchemaCollection)">
      <summary>Ajoute tous les espaces de noms définis dans la collection donnée (y compris les schémas associés) à cette collection.</summary>
      <param name="schema">
        <see langword="XmlSchemaCollection" /> que vous souhaitez ajouter à la collection.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Contains(System.String)">
      <summary>Obtient une valeur indiquant si le schéma comportant l'espace de noms spécifié fait partie de la collection.</summary>
      <param name="ns">URI d'espace de noms associé au schéma. Pour les schémas XML, il s'agit généralement de l'espace de noms cible.</param>
      <returns>
        <see langword="true" /> si le schéma comportant l'espace de noms spécifié se trouve dans la collection ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Contains(System.Xml.Schema.XmlSchema)">
      <summary>Obtient une valeur indiquant si le <see langword="targetNamespace" /> du <see cref="T:System.Xml.Schema.XmlSchema" /> spécifié se trouve dans la collection.</summary>
      <param name="schema">Objet <see langword="XmlSchema" />.</param>
      <returns>
        <see langword="true" /> si un schéma comportant le même <see langword="targetNamespace" /> se trouve dans la collection ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
      <summary>Copie tous les objets <see langword="XmlSchema" /> de la collection dans le tableau donné, en commençant à l'index spécifié.</summary>
      <param name="array">Tableau dans lequel copier les objets.</param>
      <param name="index">Index de <paramref name="array" /> où la copie commence.</param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.Count">
      <summary>Obtient le nombre d’espaces de noms définis dans cette collection.</summary>
      <returns>Nombre d’espaces de noms définis dans cette collection.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.GetEnumerator">
      <summary>Fournit une prise en charge de l’itération de style « For each » sur la collection de schémas.</summary>
      <returns>Énumérateur permettant l'itération sur tous les schémas de la collection actuelle.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.Item(System.String)">
      <summary>Obtient le <see cref="T:System.Xml.Schema.XmlSchema" /> associé à l'URI d'espace de noms donné.</summary>
      <param name="ns">URI d'espace de noms associé au schéma que vous souhaitez retourner. Il s'agit généralement du <see langword="targetNamespace" /> du schéma.</param>
      <returns>
        <see langword="XmlSchema" /> associé à l'URI d'espace de noms ; <see langword="null" /> si aucun schéma associé à l'espace de noms spécifié n'est chargé ou si l'espace de noms est associé à un schéma XDR.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.NameTable">
      <summary>Obtient le <see langword="XmlNameTable" /> par défaut utilisé par <see langword="XmlSchemaCollection" /> lors du chargement de nouveaux schémas.</summary>
      <returns>Élément <see langword="XmlNameTable" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.Schema.XmlSchemaCollection.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)" />.</summary>
      <param name="array">Tableau dans lequel copier les objets.</param>
      <param name="index">Index de <paramref name="array" /> où la copie commence.</param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#Count">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.Xml.Schema.XmlSchemaCollection.Count" />.</summary>
      <returns>Nombre d’éléments dans la collection.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#IsSynchronized" />.</summary>
      <returns>
        <see langword="true" /> si la collection est synchronisée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#SyncRoot">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#SyncRoot" />.</summary>
      <returns>
        <see cref="P:System.Collections.ICollection.SyncRoot" /> Objet qui peut être utilisé pour synchroniser l’accès à la collection.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.Schema.XmlSchemaCollection.GetEnumerator" />.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> pour la collection.</returns>
    </member>
    <member name="E:System.Xml.Schema.XmlSchemaCollection.ValidationEventHandler">
      <summary>Définit un gestionnaire d’événements pour recevoir des informations sur les erreurs de validation des schémas XDR et XML.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaCollectionEnumerator">
      <summary>Prend en charge une itération simple sur une collection. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollectionEnumerator.Current">
      <summary>Obtient le <see cref="T:System.Xml.Schema.XmlSchema" /> en cours dans la collection.</summary>
      <returns>
        <see langword="XmlSchema" /> en cours dans la collection.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollectionEnumerator.MoveNext">
      <summary>Avance l'énumérateur jusqu'au schéma suivant de la collection.</summary>
      <returns>
        <see langword="true" /> si le passage au schéma suivant réussi ; <see langword="false" /> si l'énumérateur a dépassé la fin de la collection.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollectionEnumerator.System#Collections#IEnumerator#Current">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.Xml.Schema.XmlSchemaCollectionEnumerator.Current" />.</summary>
      <returns>Nœud actuel.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollectionEnumerator.System#Collections#IEnumerator#MoveNext">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.Schema.XmlSchemaCollectionEnumerator.MoveNext" />.</summary>
      <returns>Nœud suivant.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollectionEnumerator.System#Collections#IEnumerator#Reset">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.Schema.XmlSchemaCollectionEnumerator.System#Collections#IEnumerator#Reset" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaCompilationSettings">
      <summary>Fournit des options de compilation de schéma pour la classe <see cref="T:System.Xml.Schema.XmlSchemaSet" />. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCompilationSettings.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck">
      <summary>Obtient ou définit une valeur indiquant si <see cref="T:System.Xml.Schema.XmlSchemaSet" /> doit vérifier les violations UPA (Unique Particle Attribution).</summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.Xml.Schema.XmlSchemaSet" /> doit vérifier les violations UPA (Unique Particle Attribution) ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaComplexContent">
      <summary>Représente l'élément <see langword="complexContent" /> issu d'un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Cette classe représente le modèle de contenu complexe des types complexes. Elle contient des extensions ou des restrictions portant sur un type complexe contenant uniquement des éléments ou un contenu mixte.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaComplexContent.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaComplexContent" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContent.Content">
      <summary>Obtient ou définit le contenu.</summary>
      <returns>L'une des classes <see cref="T:System.Xml.Schema.XmlSchemaComplexContentRestriction" /> ou <see cref="T:System.Xml.Schema.XmlSchemaComplexContentExtension" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContent.IsMixed">
      <summary>Obtient ou définit les informations qui déterminent si le type possède un modèle de contenu mixte.</summary>
      <returns>Si la propriété a la valeur <see langword="true" />, les données caractères peuvent apparaître entre les éléments enfants du type complexe (modèle de contenu mixte). La valeur par défaut est <see langword="false" />. Optionnel.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaComplexContentExtension">
      <summary>Représente l'élément <see langword="extension" /> issu d'un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Cette classe concerne les types complexes possédant un modèle de contenu complexe dérivé par extension. Elle étend le type complexe en ajoutant des attributs ou des éléments.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaComplexContentExtension.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaComplexContentExtension" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentExtension.AnyAttribute">
      <summary>Obtient ou définit le composant <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> du modèle de contenu complexe.</summary>
      <returns>Composant <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> du modèle de contenu complexe.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentExtension.Attributes">
      <summary>Obtient la collection d'attributs pour le contenu complexe. Contient les éléments <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> et <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" />.</summary>
      <returns>Collection d'attributs pour le contenu complexe.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentExtension.BaseTypeName">
      <summary>Obtient ou définit le nom du type complexe à partir duquel ce type est dérivé par extension.</summary>
      <returns>Nom du type complexe à partir duquel ce type est dérivé par extension.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentExtension.Particle">
      <summary>Obtient ou définit l'une des classes <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> ou <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</summary>
      <returns>Une des classes <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> ou <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaComplexContentRestriction">
      <summary>Représente l'élément <see langword="restriction" /> issu d'un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Cette classe est pour les types complexes possédant un modèle de contenu complexe dérivé par extension. Elle restreint le contenu du type complexe à un sous-ensemble du type complexe hérité.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaComplexContentRestriction.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaComplexContentRestriction" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentRestriction.AnyAttribute">
      <summary>Obtient ou définit le composant <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> du modèle de contenu complexe.</summary>
      <returns>Composant <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> du modèle de contenu complexe.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentRestriction.Attributes">
      <summary>Obtient la collection d'attributs pour le type complexe. Contient les éléments <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> et <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" />.</summary>
      <returns>Collection d'attributs pour le type complexe.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentRestriction.BaseTypeName">
      <summary>Obtient ou définit le nom d'un type complexe à partir duquel ce type est dérivé par restriction.</summary>
      <returns>Nom du type complexe à partir duquel ce type est dérivé par restriction.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentRestriction.Particle">
      <summary>Obtient ou définit l'une des classes <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> ou <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</summary>
      <returns>Une des classes <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> ou <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaComplexType">
      <summary>Représente l'élément <see langword="complexType" /> issu d'un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Cette classe définit un type complexe qui détermine l'ensemble des attributs et du contenu d'un élément.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaComplexType.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaComplexType" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.AnyAttribute">
      <summary>Obtient ou définit la valeur du composant <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> de type complexe.</summary>
      <returns>Composant <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> de type complexe.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.Attributes">
      <summary>Obtient la collection d'attributs pour le type complexe.</summary>
      <returns>Contient les classes <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> et <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.AttributeUses">
      <summary>Obtient la collection de tous les attributs conformes de ce type complexe et de ses types de base.</summary>
      <returns>La collection de tous les attributs de ce type complexe et de ses types de base. Valeur de post-compilation de la propriété <see langword="AttributeUses" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.AttributeWildcard">
      <summary>Obtient la valeur postérieure à la compilation pour <see langword="anyAttribute" /> pour ce type complexe et son ou ses types de base.</summary>
      <returns>Valeur de post-compilation de l'élément <see langword="anyAttribute" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.Block">
      <summary>Obtient ou définit l’attribut <see langword="block" />.</summary>
      <returns>L'attribut <see langword="block" /> empêche l'utilisation d'un type complexe dans le type de dérivation spécifié. La valeur par défaut est <see langword="XmlSchemaDerivationMethod.None" />. Facultatif.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.BlockResolved">
      <summary>Obtient la valeur après la compilation du type pour le jeu d'informations postérieur à la validation du schéma. Cette valeur indique comment le type est appliqué lorsque <see langword="xsi:type" /> est utilisé dans une instance de document.</summary>
      <returns>La valeur du jeu d'informations postérieur à la validation du schéma. La valeur par défaut est <see langword="BlockDefault" /> pour l'élément <see langword="schema" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.ContentModel">
      <summary>Obtient ou définit le <see cref="T:System.Xml.Schema.XmlSchemaContentModel" /> postérieur à la compilation de ce type complexe.</summary>
      <returns>Type de modèle de contenu qui est une des classes <see cref="T:System.Xml.Schema.XmlSchemaSimpleContent" /> ou <see cref="T:System.Xml.Schema.XmlSchemaComplexContent" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.ContentType">
      <summary>Obtient le modèle de contenu du type complexe qui contient la valeur postérieure à la compilation.</summary>
      <returns>Valeur postérieure à la compilation du modèle de contenu du type complexe.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.ContentTypeParticle">
      <summary>Obtient la partie qui contient la valeur de post-compilation de la particule <see cref="P:System.Xml.Schema.XmlSchemaComplexType.ContentType" />.</summary>
      <returns>Partie du type de contenu. Valeur de post-compilation de la particule <see cref="P:System.Xml.Schema.XmlSchemaComplexType.ContentType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.IsAbstract">
      <summary>Obtient ou définit les informations qui déterminent si l'élément <see langword="complexType" /> peut être utilisé dans l'instance de document.</summary>
      <returns>Si la valeur est <see langword="true" />, un élément ne peut pas utiliser cet élément <see langword="complexType" /> directement et doit utiliser un type complexe dérivé de cet élément <see langword="complexType" />. La valeur par défaut est <see langword="false" />. Optionnel.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.IsMixed">
      <summary>Obtient ou définit les informations qui déterminent si le type complexe possède un modèle de contenu mixte (balisage à l'intérieur du contenu).</summary>
      <returns>
        <see langword="true" />, si des données de caractères peuvent apparaître entre les éléments enfants de ce type complexe ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />. Optionnel.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.Particle">
      <summary>Obtient ou définit le type de compositeur comme l'une des classes <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> ou <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</summary>
      <returns>Type de compositeur.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaContent">
      <summary>Classe abstraite pour le contenu du schéma.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaContent.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaContent" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaContentModel">
      <summary>Spécifie l'ordre et la structure des éléments enfants d'un type.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaContentModel.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaContentModel" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaContentModel.Content">
      <summary>Obtient ou définit le contenu du type.</summary>
      <returns>Fournit le contenu du type.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaContentProcessing">
      <summary>Fournit des informations sur le mode de validation des remplacements d'éléments <see langword="any" /> et <see langword="anyAttribute" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentProcessing.Lax">
      <summary>Si le schéma associé est trouvé, les éléments de document seront validés. Dans le cas contraire, aucune erreur ne sera levée.
Si l'élément n'est pas validé, le processeur XML tente de notifier le client via un gestionnaire d'événements de validation avec <see cref="P:System.Xml.Schema.ValidationEventArgs.Severity" /> = <see langword="XmlSeverityType.Warning" />. Si aucun gestionnaire d'événements de validation n'a été configuré, aucune information n'est renvoyée lorsque l'avertissement est généré.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentProcessing.None">
      <summary>Les éléments de document ne sont pas validés.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentProcessing.Skip">
      <summary>Les éléments de document doivent être composés en XML bien formé et ne font pas l'objet d'une validation par le schéma.
Le processeur XML tente de notifier le client, via un gestionnaire d'événements de validation avec <see cref="P:System.Xml.Schema.ValidationEventArgs.Severity" /> = <see langword="XmlSeverityType.Warning" />, qu'aucune validation n'a eu lieu pour l'élément donné. Si aucun gestionnaire d'événements de validation n'a été configuré, aucune information n'est renvoyée lorsque l'avertissement est généré.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentProcessing.Strict">
      <summary>Le processeur de schéma doit rechercher un schéma associé à l'espace de noms indiqué pour valider les éléments de document.
Si le processeur ne trouve pas de schéma ou si les éléments ne sont pas valides, le processeur XML tente de notifier le client via un gestionnaire d'événements de validation avec <see cref="P:System.Xml.Schema.ValidationEventArgs.Severity" /> = <see langword="XmlSeverityType.Warning" />. Si une erreur de validation se produit et qu'aucun gestionnaire d'événements de validation n'est fourni, une exception est levée.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaContentType">
      <summary>Énumérations pour le modèle de contenu du type complexe. Représente le contenu du jeu d'informations postérieur à la validation du schéma.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentType.ElementOnly">
      <summary>Contenu limité à des éléments.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentType.Empty">
      <summary>Contenu vide.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentType.Mixed">
      <summary>Contenu mixte.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentType.TextOnly">
      <summary>Contenu limité à du texte.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaDatatype">
      <summary>La classe <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> est une classe abstraite destinée au mappage de types XSD (XML Schema Definition) sur des types CLR (Common Language Runtime).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type)">
      <summary>Convertit la valeur spécifiée, dont le type est l'une des représentations CLR valides du type de schéma XML  représenté par <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, au type CLR spécifié.</summary>
      <param name="value">Valeur d'entrée à convertir dans le type spécifié.</param>
      <param name="targetType">Type cible vers lequel convertir la valeur d'entrée.</param>
      <returns>Valeur d'entrée convertie.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <see cref="T:System.Object" /> ou <see cref="T:System.Type" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidCastException">Le type représenté par <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> ne prend pas en charge la conversion du type de valeur spécifié au type spécifié.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Convertit la valeur spécifiée, dont le type est l'une des représentations CLR valides du type de schéma XML représenté par <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, au type CLR spécifié à l'aide de <see cref="T:System.Xml.IXmlNamespaceResolver" /> si <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> représente le type xs:QName ou un type dérivé.</summary>
      <param name="value">Valeur d'entrée à convertir dans le type spécifié.</param>
      <param name="targetType">Type cible vers lequel convertir la valeur d'entrée.</param>
      <param name="namespaceResolver">
        <see cref="T:System.Xml.IXmlNamespaceResolver" /> utilisé pour trouver les préfixes d'espaces de noms. Cela est utile uniquement si <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> représente le type xs:QName ou un type dérivé.</param>
      <returns>Valeur d'entrée convertie.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <see cref="T:System.Object" /> ou <see cref="T:System.Type" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidCastException">Le type représenté par <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> ne prend pas en charge la conversion du type de valeur spécifié au type spécifié.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)">
      <summary>La méthode <see cref="M:System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)" /> retourne toujours <see langword="false" />.</summary>
      <param name="datatype">L’<see cref="T:System.Xml.Schema.XmlSchemaDatatype" />opérateur</param>
      <returns>Retourne toujours <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
      <summary>En cas de substitution dans une classe dérivée, valide la <see langword="string" /> spécifiée par rapport à un type simple intégré ou défini par l'utilisateur.</summary>
      <param name="s">
        <see langword="string" /> à valider par rapport au type simple.</param>
      <param name="nameTable">
        <see cref="T:System.Xml.XmlNameTable" /> à utiliser pour l'atomisation lors de l'analyse de <see langword="string" /> si cet objet <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> représente le type xs:NCName.</param>
      <param name="nsmgr">Objet <see cref="T:System.Xml.IXmlNamespaceResolver" /> à utiliser lors de l'analyse de <see langword="string" /> si cet objet <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> représente le type xs:QName.</param>
      <returns>
        <see cref="T:System.Object" /> qui peut être casté en toute sécurité en type retourné par la propriété <see cref="P:System.Xml.Schema.XmlSchemaDatatype.ValueType" />.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">La valeur d'entrée n'est pas une instance valide de ce type de schéma XML W3C.</exception>
      <exception cref="T:System.ArgumentNullException">La valeur à analyser ne peut pas être <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDatatype.TokenizedType">
      <summary>En cas de substitution dans une classe dérivée, elle obtient le type correspondant à <see langword="string" /> spécifié dans la définition XML 1.0 du World Wide Web Consortium (W3C).</summary>
      <returns>Valeur <see cref="T:System.Xml.XmlTokenizedType" /> correspondant au <see langword="string" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDatatype.TypeCode">
      <summary>Obtient la valeur <see cref="T:System.Xml.Schema.XmlTypeCode" /> de ce type simple.</summary>
      <returns>Valeur <see cref="T:System.Xml.Schema.XmlTypeCode" /> de ce type simple.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDatatype.ValueType">
      <summary>En cas de substitution dans une classe dérivée, obtient le type Common Language Runtime (CLR) de l'élément.</summary>
      <returns>Type CLR de l'élément.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDatatype.Variety">
      <summary>Obtient la valeur <see cref="T:System.Xml.Schema.XmlSchemaDatatypeVariety" /> de ce type simple.</summary>
      <returns>Valeur <see cref="T:System.Xml.Schema.XmlSchemaDatatypeVariety" /> de ce type simple.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaDatatypeVariety">
      <summary>Spécifie la variété du type de données du schéma XML W3C du type.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDatatypeVariety.Atomic">
      <summary>Type atomique de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDatatypeVariety.List">
      <summary>Type de liste de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDatatypeVariety.Union">
      <summary>Type d'union de schéma XML W3C.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaDerivationMethod">
      <summary>Fournit différentes méthodes pour éviter la dérivation.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.All">
      <summary>
        <see langword="#all" />. Fait référence à toutes les méthodes de dérivation.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.Empty">
      <summary>Substitue la méthode de dérivation par défaut pour permettre n'importe quelle dérivation.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.Extension">
      <summary>Fait référence aux dérivations par <see langword="Extension" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.List">
      <summary>Fait référence aux dérivations par <see langword="List" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.None">
      <summary>Accepte la méthode de dérivation par défaut.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.Restriction">
      <summary>Fait référence aux dérivations par <see langword="Restriction" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.Substitution">
      <summary>Fait référence aux dérivations par <see langword="Substitution" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.Union">
      <summary>Fait référence aux dérivations par <see langword="Union" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaDocumentation">
      <summary>Représente l'élément <see langword="documentation" /> issu d'un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Cette classe spécifie les informations à lire ou utilisée par des personnes dans une <see langword="annotation" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaDocumentation.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaDocumentation" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDocumentation.Language">
      <summary>Obtient ou définit l’attribut <see langword="xml:lang" />. Ceci sert d'indicateur du langage utilisé dans le contenu.</summary>
      <returns>Attribut <see langword="xml:lang" />. Facultatif.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDocumentation.Markup">
      <summary>Obtient ou définit un tableau de <see langword="XmlNodes" /> qui représente les nœuds enfants de la documentation.</summary>
      <returns>Tableau représentant les nœuds enfants de la documentation.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDocumentation.Source">
      <summary>Obtient ou définit la source URI (Uniform Resource Identifier) des informations.</summary>
      <returns>Référence URI. La valeur par défaut est <see langword="String.Empty" />. Facultatif.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaElement">
      <summary>Représente l'élément <see langword="element" /> issu d'un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Cette classe est la classe de base de tous les types de particules et est utilisée pour décrire un élément dans un document XML.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaElement.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaElement" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.Block">
      <summary>Obtient ou définit une dérivation <see langword="Block" />.</summary>
      <returns>L'attribut utilisé pour bloquer une dérivation de type. La valeur par défaut est <see langword="XmlSchemaDerivationMethod.None" />. Optionnel.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.BlockResolved">
      <summary>Obtient la valeur de post-compilation de la propriété <see langword="Block" />.</summary>
      <returns>Valeur de post-compilation de la propriété <see langword="Block" />. La valeur par défaut est la valeur <see langword="BlockDefault" /> sur l'élément <see langword="schema" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.Constraints">
      <summary>Obtient la collection de contraintes sur l’élément.</summary>
      <returns>Collection de contraintes.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.DefaultValue">
      <summary>Obtient ou définit la valeur par défaut de l'élément si le contenu est un type simple ou si le contenu de l'élément est <see langword="textOnly" />.</summary>
      <returns>Valeur par défaut de cet élément. La valeur par défaut est une référence null. Facultatif.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.ElementSchemaType">
      <summary>Obtient un objet <see cref="T:System.Xml.Schema.XmlSchemaType" /> représentant le type de l'élément basé sur les valeurs <see cref="P:System.Xml.Schema.XmlSchemaElement.SchemaType" /> ou <see cref="P:System.Xml.Schema.XmlSchemaElement.SchemaTypeName" /> de l'élément.</summary>
      <returns>Objet <see cref="T:System.Xml.Schema.XmlSchemaType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.ElementType">
      <summary>Obtient un objet CLR (Common Language Runtime) basé sur <see cref="T:System.Xml.Schema.XmlSchemaElement" /> ou <see cref="T:System.Xml.Schema.XmlSchemaElement" /> de l'élément qui contient la valeur de post-compilation de la propriété <see langword="ElementType" />.</summary>
      <returns>Objet Common Language Runtime. Valeur de post-compilation de la propriété <see langword="ElementType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.Final">
      <summary>Obtient ou définit la propriété <see langword="Final" /> pour indiquer que plus aucune dérivation n'est permise.</summary>
      <returns>La propriété <see langword="Final" />. La valeur par défaut est <see langword="XmlSchemaDerivationMethod.None" />. Facultatif.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.FinalResolved">
      <summary>Obtient la valeur de post-compilation de la propriété <see langword="Final" />.</summary>
      <returns>Valeur de post-compilation de la propriété <see langword="Final" />. La valeur par défaut est la valeur <see langword="FinalDefault" /> sur l'élément <see langword="schema" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.FixedValue">
      <summary>Obtient ou définit la valeur fixée.</summary>
      <returns>La valeur fixée, c'est-à-dire prédéterminée et inchangeable. La valeur par défaut est une référence null. Optionnel.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.Form">
      <summary>Obtient ou définit le formulaire pour l'élément.</summary>
      <returns>Valeur par défaut pour l'élément. La valeur par défaut est la valeur <see cref="P:System.Xml.Schema.XmlSchema.ElementFormDefault" />. Optionnel.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.IsAbstract">
      <summary>Obtient ou définit les informations qui indiquent si l'élément peut être utilisé dans une instance de document.</summary>
      <returns>Si la valeur est <see langword="true" />, l'élément ne peut pas apparaître dans l'instance de document. La valeur par défaut est <see langword="false" />. Optionnel.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.IsNillable">
      <summary>Obtient ou définit des informations qui indiquent si <see langword="xsi:nil" /> peut se produire dans les données d'instance. Indique si une valeur explicite null peut être assignée à cet élément.</summary>
      <returns>Si la valeur annulable est <see langword="true" />, une instance de l'élément peut avoir la valeur <see langword="nil" /> affectée à l'attribut <see langword="true" />. L'attribut <see langword="nil" /> est défini comme une partie de l'espace de noms du schéma XML pour les instances. La valeur par défaut est <see langword="false" />. Optionnel.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.Name">
      <summary>Obtient ou définit le nom de l'élément.</summary>
      <returns>Nom de l'élément. La valeur par défaut est <see langword="String.Empty" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.QualifiedName">
      <summary>Obtient le nom effectivement qualifié pour l'élément donné.</summary>
      <returns>Nom qualifié de l'élément. Valeur de post-compilation de la propriété <see langword="QualifiedName" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.RefName">
      <summary>Obtient ou définit le nom de référence d'un élément déclaré dans ce schéma (ou dans un autre schéma indiqué par l'espace de noms spécifié).</summary>
      <returns>Nom de référence de l'élément.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.SchemaType">
      <summary>Obtient ou définit le type de l'élément. Il peut s'agir d'un type complexe ou d'un type simple.</summary>
      <returns>Type de l'élément.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.SchemaTypeName">
      <summary>Obtient ou définit le nom du type de donnée intégré défini dans ce schéma ou dans un autre schéma indiqué par l'espace de noms spécifié.</summary>
      <returns>Nom du type de données intégré.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.SubstitutionGroup">
      <summary>Obtient ou définit le nom d'un élément qui est substitué par cet élément.</summary>
      <returns>Le nom qualifié d'un élément qui est substitué par cet élément. Optionnel.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaEnumerationFacet">
      <summary>Représente la facette <see langword="enumeration" /> issue d’un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Cette classe spécifie la liste des valeurs valides pour un élément simpleType. La déclaration est contenue dans une déclaration <see langword="restriction" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaEnumerationFacet.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaEnumerationFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaException">
      <summary>Retourne des informations détaillées à propos de l'exception du schéma.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaException" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Construit un nouvel objet <see langword="XmlSchemaException" /> avec les informations données <see langword="SerializationInfo" /> et <see langword="StreamingContext" /> qui contiennent toutes les propriétés de <see langword="XmlSchemaException" />.</summary>
      <param name="info">SerializationInfo.</param>
      <param name="context">StreamingContext.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaException" /> avec le message d'exception spécifié.</summary>
      <param name="message">Description <see langword="string" /> de la condition d'erreur.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaException" /> avec le message d'exception et l'objet <see cref="T:System.Exception" /> d'origine qui a entraîné cette exception spécifiée.</summary>
      <param name="message">Description <see langword="string" /> de la condition d'erreur.</param>
      <param name="innerException">L'objet T:System.Exception d'origine qui a entraîné cette exception.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaException" /> avec le message d'exception spécifié et l'objet <see cref="T:System.Exception" /> d'origine, le numéro de ligne et la position de ligne du XML qui entraîne cette exception spécifiée.</summary>
      <param name="message">Description <see langword="string" /> de la condition d'erreur.</param>
      <param name="innerException">L'objet T:System.Exception d'origine qui a entraîné cette exception.</param>
      <param name="lineNumber">Le numéro de ligne du XML qui a entraîné cette exception.</param>
      <param name="linePosition">La position de ligne du XML qui a entraîné cette exception.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Transmet toutes les propriétés <see langword="XmlSchemaException" /> dans la classe <see langword="SerializationInfo" /> pour le <see langword="StreamingContext" /> donné.</summary>
      <param name="info">L’<see langword="SerializationInfo" />opérateur</param>
      <param name="context">informations <see langword="StreamingContext" />.</param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaException.LineNumber">
      <summary>Obtient le numéro de la ligne indiquant l'endroit où l'erreur s'est produite.</summary>
      <returns>Numéro de la ligne indiquant l'endroit où l'erreur s'est produite.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaException.LinePosition">
      <summary>Obtient la position de la ligne indiquant l'endroit où l'erreur s'est produite.</summary>
      <returns>Position de la ligne indiquant l'endroit où l'erreur s'est produite.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaException.Message">
      <summary>Obtient la description de la condition d'erreur de cette exception.</summary>
      <returns>Description de la condition d'erreur de cette exception.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaException.SourceSchemaObject">
      <summary>
        <see langword="XmlSchemaObject" /> qui a généré <see langword="XmlSchemaException" />.</summary>
      <returns>Une instance d'objet valide représente une erreur de validation structurelle dans le modèle SOM (Schema Object Model) XML.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaException.SourceUri">
      <summary>Obtient l'emplacement de l'URI (Uniform Resource Identifier) du schéma qui a provoqué l'exception.</summary>
      <returns>Emplacement URI du schéma qui a provoqué l'exception.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaExternal">
      <summary>Classe abstraite Fournit des informations à propos du schéma inclus.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaExternal.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaExternal" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaExternal.Id">
      <summary>Obtient ou définit l'ID de chaîne.</summary>
      <returns>ID de chaîne. Par défaut, il s’agit de <see langword="String.Empty" />. Facultatif.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaExternal.Schema">
      <summary>Obtient ou définit le <see langword="XmlSchema" /> pour le schéma référencé.</summary>
      <returns>
        <see langword="XmlSchema" /> pour le schéma référencé.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaExternal.SchemaLocation">
      <summary>Obtient ou définit l'emplacement de l'URI (Uniform Resource Identifier) pour le schéma, ce qui indique au processeur de schéma l'endroit où le schéma réside physiquement.</summary>
      <returns>Emplacement de l'URI pour le schéma. Facultatif pour les schémas importés.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaExternal.UnhandledAttributes">
      <summary>Obtient ou définit les attributs qualifiés qui n’appartiennent pas à l’espace de noms cible du schéma.</summary>
      <returns>Attributs qualifiés appartenant à un autre espace de noms cible.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaFacet">
      <summary>Classe abstraite pour toutes les facettes qui sont utilisées lorsque des types simples sont dérivés par restriction.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaFacet.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaFacet" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaFacet.IsFixed">
      <summary>Obtient ou définit les informations indiquant que la facette est fixe.</summary>
      <returns>Si la valeur est <see langword="true" />, la valeur est fixe ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />. Facultatif.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaFacet.Value">
      <summary>Obtient ou définit l'attribut <see langword="value" /> de la facette.</summary>
      <returns>Valeur de l'attribut.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaForm">
      <summary>Indique si les attributs ou les éléments doivent être qualifiés à l'aide d'un préfixe d'espace de noms.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaForm.None">
      <summary>Aucune forme d'élément et d'attribut n'est spécifiée dans le schéma.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaForm.Qualified">
      <summary>Les éléments et les attributs doivent être qualifiés à l'aide d'un préfixe d'espace de noms.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaForm.Unqualified">
      <summary>Les éléments et les attributs ne doivent pas obligatoirement être qualifiés à l'aide d'un préfixe d'espace de noms.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaFractionDigitsFacet">
      <summary>Spécifie une restriction sur le nombre de chiffres pouvant être entrés pour la valeur de fraction d'un élément simpleType. La valeur de fractionDigits doit être un entier positif. Représente la facette World Wide Web Consortium (W3C) <see langword="fractionDigits" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaFractionDigitsFacet.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaFractionDigitsFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaGroup">
      <summary>Représente l'élément <see langword="group" /> issu d'un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Cette classe définit les groupes au niveau <see langword="schema" /> qui sont référencés à partir de types complexes. Elle regroupe un ensemble de déclarations d'éléments pour permettre leur incorporation conjointe dans des définitions de types complexes.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaGroup.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaGroup" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroup.Name">
      <summary>Obtient ou définit le nom du groupe de schémas.</summary>
      <returns>Nom du groupe de schémas.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroup.Particle">
      <summary>Obtient ou définit une des classes <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> ou <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</summary>
      <returns>Une des classes <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> ou <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroup.QualifiedName">
      <summary>Obtient le nom qualifié du groupe de schémas.</summary>
      <returns>Objet <see cref="T:System.Xml.XmlQualifiedName" /> qui représente le nom qualifié du groupe de schémas.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaGroupBase">
      <summary>Classe abstraite pour <see cref="T:System.Xml.Schema.XmlSchemaAll" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" /> ou <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroupBase.Items">
      <summary>Cette collection permet d'ajouter de nouveaux éléments au compositeur.</summary>
      <returns>Élément <see langword="XmlSchemaObjectCollection" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaGroupRef">
      <summary>Représente l’élément <see langword="group" /> avec l’attribut <see langword="ref" /> issu du schéma XML, comme spécifié par le W3C (World Wide Web Consortium). Cette classe est utilisée dans les types complexes qui référencent un <see langword="group" /> défini au niveau <see langword="schema" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaGroupRef.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroupRef.Particle">
      <summary>Obtient une des classes <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" />, ou <see cref="T:System.Xml.Schema.XmlSchemaSequence" /> qui contient la valeur de post-compilation de la propriété <see langword="Particle" />.</summary>
      <returns>Valeur de post-compilation de la propriété <see langword="Particle" />, qui est une des classes suivantes :<see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" />, ou <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroupRef.RefName">
      <summary>Obtient ou définit le nom d'un groupe défini dans ce schéma (ou dans un autre schéma indiqué par l'espace de noms spécifié).</summary>
      <returns>Nom d'un groupe défini dans ce schéma.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaIdentityConstraint">
      <summary>Classe pour les contraintes d'identité : éléments <see langword="key" />, <see langword="keyref" /> et <see langword="unique" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaIdentityConstraint.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaIdentityConstraint" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaIdentityConstraint.Fields">
      <summary>Obtient la collection de champs qui s'appliquent en tant qu'enfants pour le sélecteur d'expressions XPath (XML Path Language).</summary>
      <returns>Collection de champs.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaIdentityConstraint.Name">
      <summary>Obtient ou définit le nom de la contrainte d'identité.</summary>
      <returns>Nom de la contrainte d'identité.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaIdentityConstraint.QualifiedName">
      <summary>Obtient le nom qualifié de la contrainte d'identité qui contient la valeur de post-compilation de la propriété <see langword="QualifiedName" />.</summary>
      <returns>Valeur de post-compilation de la propriété <see langword="QualifiedName" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaIdentityConstraint.Selector">
      <summary>Obtient ou définit l'élément <see langword="selector" /> de l'expression XPath.</summary>
      <returns>Élément <see langword="selector" /> de l'expression XPath.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaImport">
      <summary>Représente l'élément <see langword="import" /> issu d'un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Cette classe est utilisée pour importer des composants de schéma d'autres schémas.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaImport.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaImport" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaImport.Annotation">
      <summary>Obtient ou définit la propriété <see langword="annotation" />.</summary>
      <returns>Annotation.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaImport.Namespace">
      <summary>Obtient ou définit l'espace de noms cible pour le schéma importé sous forme d'une référence URI (Uniform Resource Identifier).</summary>
      <returns>Espace de noms cible pour le schéma importé sous forme d'une référence URI. Facultatif.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaInclude">
      <summary>Représente l'élément <see langword="include" /> issu d'un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Cette classe est utilisée pour inclure des déclarations et des définitions à partir d'un schéma externe. Les déclarations et les définitions incluses sont ensuite disponibles aux fins de traitement dans le schéma contenant.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInclude.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaInclude" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInclude.Annotation">
      <summary>Obtient ou définit la propriété <see langword="annotation" />.</summary>
      <returns>Annotation.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaInference">
      <summary>Déduit un schéma en langage XSD (XML Schema Definition) d'un document XML. La classe <see cref="T:System.Xml.Schema.XmlSchemaInference" /> ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInference.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaInference" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaInference.InferenceOption">
      <summary>A un impact sur les informations liées aux occurrences et aux types déduits par la classe <see cref="T:System.Xml.Schema.XmlSchemaInference" /> pour les éléments et les attributs dans un document XML.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed">
      <summary>Indique qu'une déclaration de schéma moins restrictive doit être déduite pour un élément ou un attribut particulier.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted">
      <summary>Indique qu'une déclaration de schéma plus restrictive doit être déduite pour un élément ou un attribut particulier.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader)">
      <summary>Déduit un schéma en langage XSD (XML Schema Definition) du document XML contenu dans l'objet <see cref="T:System.Xml.XmlReader" /> spécifié.</summary>
      <param name="instanceDocument">Objet <see cref="T:System.Xml.XmlReader" /> contenant le document XML duquel déduire un schéma.</param>
      <returns>Objet <see cref="T:System.Xml.Schema.XmlSchemaSet" /> contenant les schémas déduits.</returns>
      <exception cref="T:System.Xml.XmlException">Le document XML n'est pas correct.</exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaInferenceException">L'objet <see cref="T:System.Xml.XmlReader" /> n'est pas positionné sur le nœud racine ou sur un élément. Une erreur se produit pendant le processus d'inférence du schéma.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet)">
      <summary>Déduit un schéma en langage XSD (XML Schema Definition) du document XML contenu dans l'objet <see cref="T:System.Xml.XmlReader" /> spécifié et raffine le schéma déduit à l'aide d'un schéma existant dans l'objet <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié avec le même espace de noms cible.</summary>
      <param name="instanceDocument">Objet <see cref="T:System.Xml.XmlReader" /> contenant le document XML duquel déduire un schéma.</param>
      <param name="schemas">Objet <see cref="T:System.Xml.Schema.XmlSchemaSet" /> contenant un schéma existant utilisé pour raffiner le schéma déduit.</param>
      <returns>Objet <see cref="T:System.Xml.Schema.XmlSchemaSet" /> contenant les schémas déduits.</returns>
      <exception cref="T:System.Xml.XmlException">Le document XML n'est pas correct.</exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaInferenceException">L'objet <see cref="T:System.Xml.XmlReader" /> n'est pas positionné sur le nœud racine ou sur un élément. Une erreur se produit pendant le processus d'inférence du schéma.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInference.Occurrence">
      <summary>Obtient ou définit la valeur <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" /> qui a un impact sur les déclarations d'occurrences du schéma déduites du document XML.</summary>
      <returns>Objet <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInference.TypeInference">
      <summary>Obtient ou définit la valeur <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" /> qui a un impact sur les types déduits du document XML.</summary>
      <returns>Objet <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaInferenceException">
      <summary>Retourne des informations sur des erreurs rencontrées par la classe <see cref="T:System.Xml.Schema.XmlSchemaInference" /> lorsqu'un schéma est déduit à partir d'un document XML.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> avec les objets <see cref="T:System.Runtime.Serialization.SerializationInfo" /> et <see cref="T:System.Runtime.Serialization.StreamingContext" /> spécifiés qui contiennent toutes les propriétés de <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />.</summary>
      <param name="info">Objet <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context">Objet <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> avec le message d'erreur spécifié.</summary>
      <param name="message">Description de l'erreur.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> avec le message d'erreur spécifié et le <see cref="T:System.Exception" /> d'origine qui a entraîné le <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> spécifié.</summary>
      <param name="message">Description de l'erreur.</param>
      <param name="innerException">Objet <see cref="T:System.Exception" /> qui contient l'exception d'origine qui a entraîné le <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> avec le message d'erreur spécifié, l'<see cref="T:System.Exception" /> d'origine qui a entraîné le <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> spécifiée et le numéro et la position de ligne de l'erreur dans le document XML spécifié.</summary>
      <param name="message">Description de l'erreur.</param>
      <param name="innerException">Objet <see cref="T:System.Exception" /> qui contient l'exception d'origine qui a entraîné le <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />.</param>
      <param name="lineNumber">Numéro de ligne dans le document XML qui a entraîné le <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />.</param>
      <param name="linePosition">Position de ligne dans le document XML qui a entraîné le <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Transmet en continu toutes les propriétés d'objet <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> dans l'objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> spécifié pour l'objet <see cref="T:System.Runtime.Serialization.StreamingContext" /> spécifié.</summary>
      <param name="info">Objet <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context">Objet <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaInfo">
      <summary>Représente le jeu d'informations postérieur à la validation du schéma d'un nœud XML validé.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInfo.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaInfo" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.ContentType">
      <summary>Obtient ou définit l'objet <see cref="T:System.Xml.Schema.XmlSchemaContentType" /> qui correspond au type de contenu de ce nœud XML validé.</summary>
      <returns>Objet <see cref="T:System.Xml.Schema.XmlSchemaContentType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.IsDefault">
      <summary>Obtient ou définit une valeur indiquant si ce nœud XML validé a été défini comme le résultat d'une valeur par défaut appliquée pendant la validation du schéma en langage XSD (XML Schema Definition).</summary>
      <returns>Valeur <see langword="bool" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.IsNil">
      <summary>Obtient ou définit une valeur indiquant si la valeur de ce nœud XML est Nil.</summary>
      <returns>Valeur <see langword="bool" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.MemberType">
      <summary>Obtient ou définit le type de schéma dynamique pour ce nœud XML validé.</summary>
      <returns>Objet <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute">
      <summary>Obtient ou définit l'objet <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> compilé qui correspond à ce nœud XML validé.</summary>
      <returns>Objet <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.SchemaElement">
      <summary>Obtient ou définit l'objet <see cref="T:System.Xml.Schema.XmlSchemaElement" /> compilé qui correspond à ce nœud XML validé.</summary>
      <returns>Objet <see cref="T:System.Xml.Schema.XmlSchemaElement" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.SchemaType">
      <summary>Obtient ou définit le type de schéma en langage XSD (XML Schema Definition) statique de ce nœud XML validé.</summary>
      <returns>Objet <see cref="T:System.Xml.Schema.XmlSchemaType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.Validity">
      <summary>Obtient ou définit la valeur <see cref="T:System.Xml.Schema.XmlSchemaValidity" /> de ce nœud XML validé.</summary>
      <returns>Valeur <see cref="T:System.Xml.Schema.XmlSchemaValidity" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaKey">
      <summary>Cette classe représente l’élément <see langword="key" /> issu d’un schéma XML comme spécifié par le W3C (World Wide Web Consortium).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaKey.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaKey" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaKeyref">
      <summary>Cette classe représente l’élément <see langword="keyref" /> issu d’un schéma XML comme spécifié par le W3C (World Wide Web Consortium).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaKeyref.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaKeyref" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaKeyref.Refer">
      <summary>Obtient ou définit le nom de la clé à laquelle cette contrainte fait référence dans un autre type simple ou complexe.</summary>
      <returns>QName de la clé à laquelle cette contrainte fait référence.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaLengthFacet">
      <summary>Représente la facette <see langword="length" /> issue d’un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Cette classe peut être utilisée pour spécifier une restriction sur la longueur d'un élément <see langword="simpleType" /> sur le type de données.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaLengthFacet.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaLengthFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMaxExclusiveFacet">
      <summary>Représente l'élément <see langword="maxExclusive" /> issu d'un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Cette classe peut être utilisée pour spécifier une restriction sur la valeur maximale d'un élément <see langword="simpleType" />. La valeur de l'élément doit être inférieure à la valeur de l'élément <see langword="maxExclusive" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMaxExclusiveFacet.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaMaxExclusiveFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMaxInclusiveFacet">
      <summary>Représente l'élément <see langword="maxInclusive" /> issu d'un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Cette classe peut être utilisée pour spécifier une restriction sur la valeur maximale d'un élément <see langword="simpleType" />. La valeur de l'élément doit être inférieure ou égale à la valeur de l'élément <see langword="maxInclusive" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMaxInclusiveFacet.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaMaxInclusiveFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMaxLengthFacet">
      <summary>Représente l'élément <see langword="maxLength" /> issu d'un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Cette classe peut être utilisée pour spécifier une restriction sur la longueur maximale de la valeur de données d'un élément <see langword="simpleType" />. La longueur doit être inférieure à la valeur d'élément <see langword="maxLength" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMaxLengthFacet.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaMaxLengthFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMinExclusiveFacet">
      <summary>Représente l'élément <see langword="minExclusive" /> issu d'un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Cette classe peut être utilisée pour spécifier une restriction sur la valeur minimale d'un élément <see langword="simpleType" />. La valeur de l'élément doit être supérieure à la valeur de l'élément <see langword="minExclusive" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMinExclusiveFacet.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaMinExclusiveFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMinInclusiveFacet">
      <summary>Représente l'élément <see langword="minInclusive" /> issu d'un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Cette classe peut être utilisée pour spécifier une restriction sur la valeur minimale d'un élément simpleType. La valeur de l'élément doit être supérieure ou égale à la valeur de l'élément <see langword="minInclusive" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMinInclusiveFacet.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaMinInclusiveFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMinLengthFacet">
      <summary>Représente l'élément <see langword="minLength" /> issu d'un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Cette classe peut être utilisée pour spécifier une restriction sur la longueur minimale de la valeur de données d'un élément <see langword="simpleType" />. La longueur doit être supérieure à la valeur de l'élément <see langword="minLength" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMinLengthFacet.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaMinLengthFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaNotation">
      <summary>Représente l'élément <see langword="notation" /> issu d'un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Une déclaration de <see langword="notation" /> de schéma XML est une reconstruction de déclarations <see langword="XML 1.0 NOTATION" />. L'objectif des notations est de décrire le format des données non XML dans un document XML.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaNotation.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaNotation" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaNotation.Name">
      <summary>Obtient ou définit le nom de la notation.</summary>
      <returns>Nom de la notation.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaNotation.Public">
      <summary>Obtient ou définit l'identificateur <see langword="public" />.</summary>
      <returns>Identificateur <see langword="public" />. La valeur doit être un URI (Uniform Resource Identifier) valide.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaNotation.System">
      <summary>Obtient ou définit l'identificateur <see langword="system" />.</summary>
      <returns>Identificateur <see langword="system" />. La valeur doit être un URI valide.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaNumericFacet">
      <summary>Classe abstraite pour facettes définissant <see langword="numeric" />. Cette classe est la classe de base pour les classes de facettes numériques telles que <see cref="T:System.Xml.Schema.XmlSchemaMinLengthFacet" /></summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaNumericFacet.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaNumericFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaObject">
      <summary>Représente la classe racine pour la hiérarchie des modèles objet de schéma XML et sert de classe de base pour les classes telles que la classe <see cref="T:System.Xml.Schema.XmlSchema" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObject.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObject.LineNumber">
      <summary>Obtient ou définit le numéro de la ligne du fichier à laquelle l'élément <see langword="schema" /> fait référence.</summary>
      <returns>Numéro de ligne.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObject.LinePosition">
      <summary>Obtient ou définit la position de la ligne du fichier à laquelle l'élément <see langword="schema" /> fait référence.</summary>
      <returns>Position de la ligne.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObject.Namespaces">
      <summary>Obtient ou définit le <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> à utiliser avec cet objet de schéma.</summary>
      <returns>Propriété <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> de l'objet de schéma.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObject.Parent">
      <summary>Obtient ou définit le parent de ce <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaObject" /> parent de ce <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObject.SourceUri">
      <summary>Obtient ou définit l'emplacement de la source pour le fichier qui a chargé le schéma.</summary>
      <returns>Emplacement de la source (URI) du fichier.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaObjectCollection">
      <summary>Collection de <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see langword="XmlSchemaObjectCollection" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.#ctor(System.Xml.Schema.XmlSchemaObject)">
      <summary>Initialise une nouvelle instance de la classe <see langword="XmlSchemaObjectCollection" /> qui accepte <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</summary>
      <param name="parent">L’<see cref="T:System.Xml.Schema.XmlSchemaObject" />opérateur</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.Add(System.Xml.Schema.XmlSchemaObject)">
      <summary>Ajoute un <see cref="T:System.Xml.Schema.XmlSchemaObject" /> à <see langword="XmlSchemaObjectCollection" />.</summary>
      <param name="item">L’<see cref="T:System.Xml.Schema.XmlSchemaObject" />opérateur</param>
      <returns>Index auquel l'élément a été ajouté.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à zéro.  

ou - 
<paramref name="index" /> est supérieur à <see langword="Count" />.</exception>
      <exception cref="T:System.InvalidCastException">Le paramètre <see cref="T:System.Xml.Schema.XmlSchemaObject" /> spécifié n'est pas de type <see cref="T:System.Xml.Schema.XmlSchemaExternal" /> ou de ses types dérivés <see cref="T:System.Xml.Schema.XmlSchemaImport" />, <see cref="T:System.Xml.Schema.XmlSchemaInclude" /> et <see cref="T:System.Xml.Schema.XmlSchemaRedefine" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.Contains(System.Xml.Schema.XmlSchemaObject)">
      <summary>Indique si le <see cref="T:System.Xml.Schema.XmlSchemaObject" /> spécifié est dans le <see langword="XmlSchemaObjectCollection" />.</summary>
      <param name="item">L’<see cref="T:System.Xml.Schema.XmlSchemaObject" />opérateur</param>
      <returns>
        <see langword="true" /> si le nom qualifié spécifié se trouve dans la collection ; sinon, <see langword="false" /> est retourné. Si null est fourni, <see langword="false" /> est retourné parce qu'il n'y a pas de nom qualifié portant un nom null.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.CopyTo(System.Xml.Schema.XmlSchemaObject[],System.Int32)">
      <summary>Copie tous les <see cref="T:System.Xml.Schema.XmlSchemaObject" /> de la collection dans le tableau donné, en commençant à l'index spécifié.</summary>
      <param name="array">Le tableau unidimensionnel qui constitue la destination des éléments copiés à partir de <see langword="XmlSchemaObjectCollection" />. Ce tableau doit avoir une indexation de base zéro.</param>
      <param name="index">Index de base zéro dans le tableau au niveau duquel commencer la copie.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> est une référence Null (<see langword="Nothing" /> en Visual Basic).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à zéro.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> est multidimensionnel.  
ou 
 <paramref name="index" /> est supérieur ou égal à la longueur d'<paramref name="array" />.  
ou 
Le nombre d'éléments dans le <see cref="T:System.Xml.Schema.XmlSchemaObject" /> source est supérieur à la quantité d'espace disponible entre l'index et la fin du tableau de destination.</exception>
      <exception cref="T:System.InvalidCastException">Le cast automatique du type du <see cref="T:System.Xml.Schema.XmlSchemaObject" /> source en type du tableau de destination est impossible.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.GetEnumerator">
      <summary>Retourne un énumérateur qui peut être utilisé pour itérer sur les <see langword="XmlSchemaObjects" /> contenus dans <see langword="XmlSchemaObjectCollection" />.</summary>
      <returns>L'itérateur retourne <see cref="T:System.Xml.Schema.XmlSchemaObjectEnumerator" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.IndexOf(System.Xml.Schema.XmlSchemaObject)">
      <summary>Obtient l'index de collection correspondant du <see cref="T:System.Xml.Schema.XmlSchemaObject" /> spécifié.</summary>
      <param name="item">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" /> dont vous souhaitez retourner l'index.</param>
      <returns>Index correspondant du <see cref="T:System.Xml.Schema.XmlSchemaObject" /> spécifié.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.Insert(System.Int32,System.Xml.Schema.XmlSchemaObject)">
      <summary>Insère un <see cref="T:System.Xml.Schema.XmlSchemaObject" /> dans <see langword="XmlSchemaObjectCollection" />.</summary>
      <param name="index">Index de base zéro au niveau duquel un élément doit être inséré.</param>
      <param name="item">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" /> à insérer.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à zéro.  

ou - 
<paramref name="index" /> est supérieur à <see langword="Count" />.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectCollection.Item(System.Int32)">
      <summary>Obtient l'objet <see cref="T:System.Xml.Schema.XmlSchemaObject" /> à l'index spécifié.</summary>
      <param name="index">Index de <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</param>
      <returns>Objet <see cref="T:System.Xml.Schema.XmlSchemaObject" /> à l'index spécifié.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.OnClear">
      <summary>
        <see langword="OnClear" /> est appelé avant le comportement <see langword="Clear" /> standard. Pour plus d'informations, consultez la méthode OnClear pour <see cref="T:System.Collections.CollectionBase" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.OnInsert(System.Int32,System.Object)">
      <summary>
        <see langword="OnInsert" /> est appelé avant le comportement <see langword="Insert" /> standard. Pour plus d'informations, consultez la méthode <see langword="OnInsert" /><see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="index">Index de <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</param>
      <param name="item">Élément.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.OnRemove(System.Int32,System.Object)">
      <summary>
        <see langword="OnRemove" /> est appelé avant le comportement <see langword="Remove" /> standard. Pour plus d'informations, consultez la méthode <see langword="OnRemove" /> pour <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="index">Index de <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</param>
      <param name="item">Élément.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.OnSet(System.Int32,System.Object,System.Object)">
      <summary>
        <see langword="OnSet" /> est appelé avant le comportement <see langword="Set" /> standard. Pour plus d'informations, consultez la méthode OnSet pour <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="index">Index de <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</param>
      <param name="oldValue">Ancienne valeur.</param>
      <param name="newValue">Nouvelle valeur.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.Remove(System.Xml.Schema.XmlSchemaObject)">
      <summary>Enlève un <see cref="T:System.Xml.Schema.XmlSchemaObject" /> de <see langword="XmlSchemaObjectCollection" />.</summary>
      <param name="item">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" /> à supprimer.</param>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaObjectEnumerator">
      <summary>Représente l'énumérateur de <see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectEnumerator.Current">
      <summary>Obtient le <see cref="T:System.Xml.Schema.XmlSchemaObject" /> en cours dans la collection.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaObject" /> actuel.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectEnumerator.MoveNext">
      <summary>Passe à l'élément suivant dans la collection.</summary>
      <returns>
        <see langword="false" /> à la fin de la collection.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectEnumerator.Reset">
      <summary>Rétablit l'énumérateur au début de la collection.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectEnumerator.System#Collections#IEnumerator#Current">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.Xml.Schema.XmlSchemaObjectEnumerator.Current" />.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaObject" /> actuel.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectEnumerator.System#Collections#IEnumerator#MoveNext">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.Schema.XmlSchemaObjectEnumerator.MoveNext" />.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaObject" /> suivant.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectEnumerator.System#Collections#IEnumerator#Reset">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.Schema.XmlSchemaObjectEnumerator.Reset" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaObjectTable">
      <summary>Fournit les collections pour les éléments contenus qui se trouvent dans la classe <see cref="T:System.Xml.Schema.XmlSchema" /> (par exemple, Attributes, AttributeGroups, Elements, etc.).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectTable.Contains(System.Xml.XmlQualifiedName)">
      <summary>Détermine si le nom qualifié spécifié existe dans la collection.</summary>
      <param name="name">L’<see cref="T:System.Xml.XmlQualifiedName" />opérateur</param>
      <returns>
        <see langword="true" /> si le nom qualifié spécifié existe dans la collection ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectTable.Count">
      <summary>Obtient le nombre d'éléments contenus dans <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</summary>
      <returns>Nombre d'éléments contenus dans <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectTable.GetEnumerator">
      <summary>Retourne un énumérateur qui peut itérer au sein de <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</summary>
      <returns>
        <see cref="T:System.Collections.IDictionaryEnumerator" /> qui peut parcourir <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectTable.Item(System.Xml.XmlQualifiedName)">
      <summary>Retourne l'élément situé dans le <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> spécifié par le nom qualifié.</summary>
      <param name="name">
        <see cref="T:System.Xml.XmlQualifiedName" /> de l'élément à retourner.</param>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaObject" /> de l'élément situé dans le <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> spécifié par le nom qualifié.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectTable.Names">
      <summary>Retourne une collection de tous les éléments nommés dans <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</summary>
      <returns>Collection de tous les éléments nommés dans <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectTable.Values">
      <summary>Retourne une collection de toutes les valeurs pour tous les éléments contenus dans <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</summary>
      <returns>Collection de toutes les valeurs pour tous les éléments contenus dans <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaParticle">
      <summary>La classe abstraite pour cela est la classe de base de tous les types de particules (par exemple, <see cref="T:System.Xml.Schema.XmlSchemaAny" />).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaParticle.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaParticle" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaParticle.MaxOccurs">
      <summary>Obtient ou définit le nombre maximal de fois que la particule peut se présenter.</summary>
      <returns>Nombre maximal de fois que la particule peut se présenter. La valeur par défaut est 1.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaParticle.MaxOccursString">
      <summary>Obtient ou définit le nombre sous forme d'une valeur de chaîne. Nombre maximal d'occurrences de la particule.</summary>
      <returns>Numéro en tant que valeur de chaîne. <see langword="String.Empty" /> indique que <see langword="MaxOccurs" /> est égal à la valeur par défaut. La valeur par défaut est une référence null.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaParticle.MinOccurs">
      <summary>Obtient ou définit le nombre minimal de fois que la particule peut se présenter.</summary>
      <returns>Nombre minimal de fois que la particule peut se présenter. La valeur par défaut est 1.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaParticle.MinOccursString">
      <summary>Obtient ou définit le nombre sous forme d'une valeur de chaîne. Nombre minimal de fois que la particule peut se présenter.</summary>
      <returns>Numéro en tant que valeur de chaîne. <see langword="String.Empty" /> indique que <see langword="MinOccurs" /> est égal à la valeur par défaut. La valeur par défaut est une référence null.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaPatternFacet">
      <summary>Représente l'élément <see langword="pattern" /> issu d'un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Cette classe peut être utilisée pour spécifier une restriction sur la valeur entrée pour un élément <see langword="simpleType" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaPatternFacet.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaPatternFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaRedefine">
      <summary>Représente l'élément <see langword="redefine" /> issu d'un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Cette classe permet de redéfinir dans le schéma en cours des types simples et complexes, des groupes et des groupes d'attributs en provenance des fichiers externes. Cette classe peut également être utilisée pour fournir le suivi des versions pour les éléments de schéma.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaRedefine.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaRedefine" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaRedefine.AttributeGroups">
      <summary>Obtient <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />, pour tous les attributs du schéma, qui reprend la valeur de post-compilation de la propriété <see langword="AttributeGroups" />.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> pour tous les attributs du schéma. Valeur de post-compilation de la propriété <see langword="AttributeGroups" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaRedefine.Groups">
      <summary>Obtient <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />, pour tous les groupes du schéma, qui contient la valeur de post-compilation de la propriété <see langword="Groups" />.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> pour tous les groupes du schéma. Valeur de post-compilation de la propriété <see langword="Groups" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaRedefine.Items">
      <summary>Obtient la collection des classes suivantes : <see cref="T:System.Xml.Schema.XmlSchemaAnnotation" />, <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroup" />, <see cref="T:System.Xml.Schema.XmlSchemaComplexType" />, <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> et <see cref="T:System.Xml.Schema.XmlSchemaGroup" />.</summary>
      <returns>Éléments contenus dans l'élément redéfini.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaRedefine.SchemaTypes">
      <summary>Obtient <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />, pour tous les types simples et complexes du schéma, qui contient la valeur de post-compilation de la propriété <see langword="SchemaTypes" />.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> pour tous les types de schéma du schéma. Valeur de post-compilation de la propriété <see langword="SchemaTypes" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSequence">
      <summary>Représente l’élément <see langword="sequence" /> (compositeur) issu d’un schéma XML comme spécifié par le W3C (World Wide Web Consortium). <see langword="sequence" /> requiert l'affichage des éléments du groupe selon l'ordre spécifié dans l'élément conteneur.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSequence.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSequence.Items">
      <summary>Éléments contenus dans le compositeur. Collection de <see cref="T:System.Xml.Schema.XmlSchemaElement" />, <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaSequence" /> ou <see cref="T:System.Xml.Schema.XmlSchemaAny" />.</summary>
      <returns>Éléments contenus dans le compositeur.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSet">
      <summary>Contient un cache de schémas en langage XSD (XML Schema Definition).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.#ctor(System.Xml.XmlNameTable)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaSet" /> avec le <see cref="T:System.Xml.XmlNameTable" /> spécifié.</summary>
      <param name="nameTable">L'objet <see cref="T:System.Xml.XmlNameTable" /> à utiliser.</param>
      <exception cref="T:System.ArgumentNullException">L'objet <see cref="T:System.Xml.XmlNameTable" /> passé en tant que paramètre est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
      <summary>Ajoute le schéma en langage XSD (XML Schema Definition) XML à l'URL spécifiée à <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="targetNamespace">La propriété <paramref name="targetNamespace" /> du schéma, ou <see langword="null" />, pour utiliser le <paramref name="targetNamespace" /> spécifié dans le schéma.</param>
      <param name="schemaUri">URL qui spécifie le schéma à charger.</param>
      <returns>Objet <see cref="T:System.Xml.Schema.XmlSchema" /> si le schéma est valide. Si le schéma n'est pas valide et que <see cref="T:System.Xml.Schema.ValidationEventHandler" /> est spécifié, <see langword="null" /> est retourné et l'événement de validation approprié est déclenché. Sinon, une exception <see cref="T:System.Xml.Schema.XmlSchemaException" /> est levée.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Le schéma n'est pas valide.</exception>
      <exception cref="T:System.ArgumentNullException">L'URL passée en tant que paramètre est <see langword="null" /> ou <see cref="F:System.String.Empty" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
      <summary>Ajoute le schéma en langage XSD (XML Schema Definition) XML contenu dans <see cref="T:System.Xml.XmlReader" /> à <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="targetNamespace">La propriété <paramref name="targetNamespace" /> du schéma, ou <see langword="null" />, pour utiliser le <paramref name="targetNamespace" /> spécifié dans le schéma.</param>
      <param name="schemaDocument">Objet <see cref="T:System.Xml.XmlReader" />.</param>
      <returns>Objet <see cref="T:System.Xml.Schema.XmlSchema" /> si le schéma est valide. Si le schéma n'est pas valide et que <see cref="T:System.Xml.Schema.ValidationEventHandler" /> est spécifié, <see langword="null" /> est retourné et l'événement de validation approprié est déclenché. Sinon, une exception <see cref="T:System.Xml.Schema.XmlSchemaException" /> est levée.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Le schéma n'est pas valide.</exception>
      <exception cref="T:System.ArgumentNullException">L'objet <see cref="T:System.Xml.XmlReader" /> passé en tant que paramètre est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)">
      <summary>Ajoute le <see cref="T:System.Xml.Schema.XmlSchema" /> donné à <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schema">Objet <see cref="T:System.Xml.Schema.XmlSchema" /> à ajouter à <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Objet <see cref="T:System.Xml.Schema.XmlSchema" /> si le schéma est valide. Si le schéma n'est pas valide et que <see cref="T:System.Xml.Schema.ValidationEventHandler" /> est spécifié, <see langword="null" /> est retourné et l'événement de validation approprié est déclenché. Sinon, une exception <see cref="T:System.Xml.Schema.XmlSchemaException" /> est levée.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Le schéma n'est pas valide.</exception>
      <exception cref="T:System.ArgumentNullException">L'objet <see cref="T:System.Xml.Schema.XmlSchema" /> passé en tant que paramètre est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
      <summary>Ajoute tous les schémas en langage XSD (XML Schema Definition) XML au <see cref="T:System.Xml.Schema.XmlSchemaSet" /> donné au <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemas">Objet <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Un schéma dans <see cref="T:System.Xml.Schema.XmlSchemaSet" /> n'est pas valide.</exception>
      <exception cref="T:System.ArgumentNullException">L'objet <see cref="T:System.Xml.Schema.XmlSchemaSet" /> passé en tant que paramètre est <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.CompilationSettings">
      <summary>Obtient ou définit <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /> pour <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /> pour <see cref="T:System.Xml.Schema.XmlSchemaSet" />. La valeur par défaut est une instance de <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /> avec la propriété <see cref="P:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck" /> égale à <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Compile">
      <summary>Compile les schémas en langage XSD (XML Schema Definition) XML ajoutés au <see cref="T:System.Xml.Schema.XmlSchemaSet" /> dans un schéma logique.</summary>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Une erreur s'est produite lors de la validation et de la compilation des schémas dans <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Contains(System.String)">
      <summary>Indique si un schéma en langage XSD (XML Schema Definition) avec l'URI d'espace de noms cible spécifié se trouve dans <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="targetNamespace">Propriété <paramref name="targetNamespace" /> du schéma.</param>
      <returns>
        <see langword="true" /> si un schéma avec l'URI d'espace de noms cible spécifié se trouve <see cref="T:System.Xml.Schema.XmlSchemaSet" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Contains(System.Xml.Schema.XmlSchema)">
      <summary>Indique si l'objet en langage XSD (XML Schema Definition) <see cref="T:System.Xml.Schema.XmlSchema" /> spécifié se trouve dans <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schema">Objet <see cref="T:System.Xml.Schema.XmlSchema" />.</param>
      <returns>
        <see langword="true" /> si l'objet <see cref="T:System.Xml.Schema.XmlSchema" /> et dans le <see cref="T:System.Xml.Schema.XmlSchemaSet" /> ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" /> passé en tant que paramètre est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
      <summary>Copie tous les objets <see cref="T:System.Xml.Schema.XmlSchema" /> de <see cref="T:System.Xml.Schema.XmlSchemaSet" /> vers le tableau donné, en commençant à l'index spécifié.</summary>
      <param name="schemas">Tableau dans lequel copier les objets.</param>
      <param name="index">Index à partir duquel la copie va commencer dans le tableau.</param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.Count">
      <summary>Obtient le nombre de schémas en langage XSD (XML Schema Definition) logiques dans <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <returns>Nombre de schémas logiques dans <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.GlobalAttributes">
      <summary>Obtient tous les attributs globaux dans tous les schémas en langage XSD (XML Schema Definition) dans <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <returns>Collection d'attributs globaux.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.GlobalElements">
      <summary>Obtient tous les éléments globaux dans tous les schémas en langage XSD (XML Schema Definition) dans <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <returns>Collection d'éléments globaux.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.GlobalTypes">
      <summary>Obtient tous les types simples et complexes globaux dans tous les schémas en langage XSD (XML Schema Definition) dans <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <returns>Collection de types simples et complexes globaux.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.IsCompiled">
      <summary>Obtient une valeur qui indique si les schémas en langage XSD (XML Schema Definition) du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> ont été compilés.</summary>
      <returns>
        <see langword="true" /> si les schémas dans <see cref="T:System.Xml.Schema.XmlSchemaSet" /> ont été compilés depuis la dernière fois qu'un schéma a été ajouté à ou supprimé de <see cref="T:System.Xml.Schema.XmlSchemaSet" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.NameTable">
      <summary>Obtient le <see cref="T:System.Xml.XmlNameTable" /> par défaut utilisé par <see cref="T:System.Xml.Schema.XmlSchemaSet" /> lors du chargement de nouveaux schémas en langage XSD (XML Schema Definition).</summary>
      <returns>Table d'objets de chaînes atomisées.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Remove(System.Xml.Schema.XmlSchema)">
      <summary>Supprime le schéma en langage XSD (XML Schema Definition) spécifié du <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schema">Objet <see cref="T:System.Xml.Schema.XmlSchema" /> à supprimer de <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>L'objet <see cref="T:System.Xml.Schema.XmlSchema" /> supprimé de <see cref="T:System.Xml.Schema.XmlSchemaSet" /> ou <see langword="null" /> si le schéma n'a pas été trouvé dans <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Le schéma n'est pas valide.</exception>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Xml.Schema.XmlSchema" /> passé en tant que paramètre est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)">
      <summary>Supprime le schéma en langage XSD (XML Schema Definition) spécifié et tous les schémas qu'il importe de <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemaToRemove">Objet <see cref="T:System.Xml.Schema.XmlSchema" /> à supprimer de <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>
        <see langword="true" /> si l'objet <see cref="T:System.Xml.Schema.XmlSchema" /> et toutes ses importations ont été supprimés ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Xml.Schema.XmlSchema" /> passé en tant que paramètre est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
      <summary>Recycle un schéma en langage XSD (XML Schema Definition) qui existe déjà dans <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schema">Schéma à recycler.</param>
      <returns>Objet <see cref="T:System.Xml.Schema.XmlSchema" /> si le schéma est un schéma valide. Si le schéma n'est pas valide et que <see cref="T:System.Xml.Schema.ValidationEventHandler" /> est spécifié, <see langword="null" /> est retourné et l'événement de validation approprié est déclenché. Sinon, une exception <see cref="T:System.Xml.Schema.XmlSchemaException" /> est levée.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Le schéma n'est pas valide.</exception>
      <exception cref="T:System.ArgumentNullException">L'objet <see cref="T:System.Xml.Schema.XmlSchema" /> passé en tant que paramètre est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">L'objet <see cref="T:System.Xml.Schema.XmlSchema" /> passé en tant que paramètre n'existe pas déjà dans <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Schemas">
      <summary>Retourne une collection de tous les schémas en langage XSD (XML Schema Definition) dans <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <returns>Un objet <see cref="T:System.Collections.ICollection" /> contenant tous les schémas qui ont été ajoutés à <see cref="T:System.Xml.Schema.XmlSchemaSet" />. Si aucun schéma n'a été ajouté au <see cref="T:System.Xml.Schema.XmlSchemaSet" />, un objet <see cref="T:System.Collections.ICollection" /> vide est retourné.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Schemas(System.String)">
      <summary>Retourne une collection de tous les schémas en langage XSD (XML Schema Definition) dans <see cref="T:System.Xml.Schema.XmlSchemaSet" /> qui appartient à l'espace de noms donné.</summary>
      <param name="targetNamespace">Propriété <paramref name="targetNamespace" /> du schéma.</param>
      <returns>Objet <see cref="T:System.Collections.ICollection" /> contenant tous les schémas qui ont été ajoutés au <see cref="T:System.Xml.Schema.XmlSchemaSet" /> qui appartient à l'espace de noms donné. Si aucun schéma n'a été ajouté au <see cref="T:System.Xml.Schema.XmlSchemaSet" />, un objet <see cref="T:System.Collections.ICollection" /> vide est retourné.</returns>
    </member>
    <member name="E:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler">
      <summary>Spécifie un gestionnaire d'événements pour recevoir des informations à propos des erreurs de validation du schéma en langage XSD (XML Schema Definition).</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.XmlResolver">
      <summary>Définit le <see cref="T:System.Xml.XmlResolver" /> utilisé pour résoudre les espaces de noms ou les emplacements référencés dans les éléments include et import d'un schéma.</summary>
      <returns>
        <see cref="T:System.Xml.XmlResolver" /> utilisé pour résoudre les espaces de noms ou les emplacements référencés dans les éléments include et import d'un schéma.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleContent">
      <summary>Représente l'élément <see langword="simpleContent" /> issu d'un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Cette classe est pour les types simples et complexes avec un modèle de contenu simple.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleContent.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaSimpleContent" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContent.Content">
      <summary>Obtient <see cref="T:System.Xml.Schema.XmlSchemaSimpleContentRestriction" /> ou <see cref="T:System.Xml.Schema.XmlSchemaSimpleContentExtension" />.</summary>
      <returns>Contenu de la classe <see langword="XmlSchemaSimpleContentRestriction" /> ou <see langword="XmlSchemaSimpleContentExtension" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleContentExtension">
      <summary>Représente l’élément <see langword="extension" /> de contenu simple issu d’un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Cette classe peut être utilisée pour dériver des types simples par extension. Ces dérivations sont utilisées pour étendre le contenu de type simple de l'élément en ajoutant des attributs.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleContentExtension.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaSimpleContentExtension" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentExtension.AnyAttribute">
      <summary>Obtient ou définit le <see langword="XmlSchemaAnyAttribute" /> à utiliser pour la valeur de l'attribut.</summary>
      <returns>L’<see langword="XmlSchemaAnyAttribute" />opérateur Optionnel.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentExtension.Attributes">
      <summary>Obtient la collection de <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> et de <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" />.</summary>
      <returns>Collection d'attributs pour l'élément <see langword="simpleType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentExtension.BaseTypeName">
      <summary>Obtient ou définit le nom d'un type de données intégré ou d'un type simple à partir duquel ce type est étendu.</summary>
      <returns>Nom du type de base.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleContentRestriction">
      <summary>Représente l’élément <see langword="restriction" /> de contenu simple issu d’un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Cette classe peut être utilisée pour dériver des types simples par restriction. Ces dérivations peuvent être utilisées pour restreindre la plage de valeurs de l'élément à un sous-ensemble de valeurs spécifié dans le type simple hérité.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleContentRestriction.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaSimpleContentRestriction" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentRestriction.AnyAttribute">
      <summary>Obtient ou définit un <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> à utiliser pour la valeur de l'attribut.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> pour la valeur de l'attribut. Optionnel.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentRestriction.Attributes">
      <summary>Obtient la collection d’attributs <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> et <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" /> pour le type simple.</summary>
      <returns>Collection d’attributs pour un type simple.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentRestriction.BaseType">
      <summary>Obtient ou définit la valeur de base du type simple.</summary>
      <returns>Valeur de base du type simple.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentRestriction.BaseTypeName">
      <summary>Obtient ou définit le nom du type de données intégré ou du type simple à partir duquel ce type est dérivé.</summary>
      <returns>Nom du type de base.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentRestriction.Facets">
      <summary>Obtient ou définit une facette de schéma XML.</summary>
      <returns>Une des classes de facettes suivantes : 
 <see cref="T:System.Xml.Schema.XmlSchemaLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaPatternFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaEnumerationFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxInclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxExclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinInclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinExclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaFractionDigitsFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaTotalDigitsFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaWhiteSpaceFacet" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleType">
      <summary>Représente l’élément <see langword="simpleType" /> de contenu simple issu d’un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Cette classe définit un type simple. Les types simples peuvent spécifier des informations et des contraintes pour la valeur d'attributs ou d'éléments avec un contenu en mode texte.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleType.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleType.Content">
      <summary>Obtient ou définit <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeUnion" />, <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeList" /> ou <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeRestriction" />.</summary>
      <returns>Une des classes <see langword="XmlSchemaSimpleTypeUnion" />, <see langword="XmlSchemaSimpleTypeList" /> ou <see langword="XmlSchemaSimpleTypeRestriction" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleTypeContent">
      <summary>Classe abstraite pour classes à contenu de type simple.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleTypeContent.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeContent" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleTypeList">
      <summary>Représente l'élément <see langword="list" /> issu d'un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Cette classe peut être utilisée pour définir un élément <see langword="simpleType" /> comme une liste de valeurs d'un type de données spécifié.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleTypeList.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeList" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeList.BaseItemType">
      <summary>Obtient ou définit le <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> qui représente le type de l'élément <see langword="simpleType" /> basé sur les valeurs <see cref="P:System.Xml.Schema.XmlSchemaSimpleTypeList.ItemType" /> et <see cref="P:System.Xml.Schema.XmlSchemaSimpleTypeList.ItemTypeName" /> du type simple.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> représentant le type de l'élément <see langword="simpleType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeList.ItemType">
      <summary>Obtient ou définit l'élément <see langword="simpleType" /> dérivé du type spécifié par la valeur de base.</summary>
      <returns>Type d'élément de l'élément de type simple.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeList.ItemTypeName">
      <summary>Obtient ou définit le nom du type de donnée intégré ou de l'élément <see langword="simpleType" /> défini dans ce schéma (ou dans un autre schéma indiqué par l'espace de noms spécifié).</summary>
      <returns>Nom du type de la liste de type simple.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleTypeRestriction">
      <summary>Représente l’élément <see langword="restriction" /> de types simples issu d’un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Cette classe peut être utilisée pour restreindre l'élément <see langword="simpleType" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleTypeRestriction.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeRestriction" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeRestriction.BaseType">
      <summary>Obtient ou définit des informations sur le type de base.</summary>
      <returns>Type de base de l'élément <see langword="simpleType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeRestriction.BaseTypeName">
      <summary>Obtient ou définit le nom du type de base qualifié.</summary>
      <returns>Nom qualifié du type de base de la restriction de type simple.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeRestriction.Facets">
      <summary>Obtient ou définit une facette de schéma XML.</summary>
      <returns>Une des classes de facettes suivantes : 
 <see cref="T:System.Xml.Schema.XmlSchemaLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaPatternFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaEnumerationFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxInclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxExclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinInclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinExclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaFractionDigitsFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaTotalDigitsFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaWhiteSpaceFacet" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleTypeUnion">
      <summary>Représente l’élément <see langword="union" /> de types simples issu d’un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Un type de données <see langword="union" /> peut être utilisé pour spécifier le contenu d'un <see langword="simpleType" />. La valeur de l'élément <see langword="simpleType" /> doit faire partie d'un jeu de types de données de remplacement spécifié dans l'union. Les types d'union sont toujours des types dérivés et doivent comprendre au moins deux types de données de remplacement.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleTypeUnion.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeUnion" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.BaseMemberTypes">
      <summary>Obtient un tableau d'objets <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> qui représentent le type de l'élément <see langword="simpleType" /> basé sur les valeurs <see cref="P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.BaseTypes" /> et <see cref="P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.MemberTypes" /> du type simple.</summary>
      <returns>Tableau d'objets <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> représentant le type de l'élément <see langword="simpleType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.BaseTypes">
      <summary>Obtient la collection des types de base.</summary>
      <returns>Collection des valeurs de base du type simple.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.MemberTypes">
      <summary>Obtient ou définit le tableau des noms de membres qualifiés des types de données intégrés ou des éléments <see langword="simpleType" /> définis dans ce schéma (ou dans un autre schéma indiqué par l'espace de noms spécifié).</summary>
      <returns>Tableau qui comporte une liste des membres des types de données intégrés ou des types simples.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaTotalDigitsFacet">
      <summary>Représente la facette <see langword="totalDigits" /> issue d’un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Cette classe peut être utilisée pour spécifier une restriction sur le nombre de chiffres qui peuvent être entrés pour la valeur d'un élément <see langword="simpleType" />. Cette valeur de <see langword="totalDigits" /> doit être un entier positif.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaTotalDigitsFacet.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaTotalDigitsFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaType">
      <summary>La classe de base de tous les types simples et complexes.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaType" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.BaseSchemaType">
      <summary>Obtient le type d'objet de post-compilation ou le type de données en langage XSD (XML Schema Definition) intégré, l'élément simpleType ou l'élément complexType. Il s'agit d'une propriété de jeu d'informations postérieure à la compilation du schéma.</summary>
      <returns>Type de données XSD intégré, d'élément simpleType ou d'élément complexType.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.BaseXmlSchemaType">
      <summary>Obtient la valeur de post-compilation pour le type de base de ce type de schéma.</summary>
      <returns>Objet <see cref="T:System.Xml.Schema.XmlSchemaType" /> représentant le type de base de ce type de schéma.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.Datatype">
      <summary>Obtient la valeur de post-compilation pour le type de données du type complexe.</summary>
      <returns>Valeur postérieure à la compilation du schéma <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.DerivedBy">
      <summary>Obtient les informations de post-compilation sur la dérivation de cet élément à partir de son type de base.</summary>
      <returns>Une des valeurs <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /> valides.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.Final">
      <summary>Obtient ou définit le dernier attribut de la dérivation de type qui indique si des dérivations supplémentaires sont autorisées.</summary>
      <returns>Une des valeurs <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /> valides. La valeur par défaut est <see cref="F:System.Xml.Schema.XmlSchemaDerivationMethod.None" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.FinalResolved">
      <summary>Obtient la valeur de post-compilation de la propriété <see cref="P:System.Xml.Schema.XmlSchemaType.Final" />.</summary>
      <returns>Valeur de post-compilation de la propriété <see cref="P:System.Xml.Schema.XmlSchemaType.Final" />. La valeur par défaut est la valeur de l'attribut <see langword="finalDefault" /> sur l'élément <see langword="schema" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.GetBuiltInComplexType(System.Xml.Schema.XmlTypeCode)">
      <summary>Retourne un <see cref="T:System.Xml.Schema.XmlSchemaComplexType" /> qui représente le type complexe intégré du type complexe spécifié.</summary>
      <param name="typeCode">L'une des valeurs <see cref="T:System.Xml.Schema.XmlTypeCode" /> représentant le type complexe.</param>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaComplexType" /> qui représente le type complexe intégré.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.GetBuiltInComplexType(System.Xml.XmlQualifiedName)">
      <summary>Retourne un <see cref="T:System.Xml.Schema.XmlSchemaComplexType" /> qui représente le type complexe intégré du type complexe spécifié par le nom qualifié.</summary>
      <param name="qualifiedName">
        <see cref="T:System.Xml.XmlQualifiedName" /> du type complexe.</param>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaComplexType" /> qui représente le type complexe intégré.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <see cref="T:System.Xml.XmlQualifiedName" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType(System.Xml.Schema.XmlTypeCode)">
      <summary>Retourne un <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> qui représente le type simple intégré du type simple spécifié.</summary>
      <param name="typeCode">L'une des valeurs <see cref="T:System.Xml.Schema.XmlTypeCode" /> représentant le type simple.</param>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> qui représente le type simple intégré.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType(System.Xml.XmlQualifiedName)">
      <summary>Retourne un <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> qui représente le type simple intégré du type simple spécifié par le nom qualifié.</summary>
      <param name="qualifiedName">
        <see cref="T:System.Xml.XmlQualifiedName" /> du type simple.</param>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> qui représente le type simple intégré.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <see cref="T:System.Xml.XmlQualifiedName" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.IsDerivedFrom(System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaDerivationMethod)">
      <summary>Retourne une valeur indiquant si le type de schéma dérivé spécifié est dérivé du type de schéma de base spécifié.</summary>
      <param name="derivedType">
        <see cref="T:System.Xml.Schema.XmlSchemaType" /> dérivé à tester.</param>
      <param name="baseType">
        <see cref="T:System.Xml.Schema.XmlSchemaType" /> de base par rapport auquel tester le <see cref="T:System.Xml.Schema.XmlSchemaType" /> dérivé.</param>
      <param name="except">Une des valeurs <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /> représentant une méthode de dérivation du type à exclure du test.</param>
      <returns>
        <see langword="true" /> si le type dérivé est dérivé du type de base ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.IsMixed">
      <summary>Obtient ou définit une valeur indiquant si le type possède un modèle de contenu mixte. Cette propriété n'est valide que pour un type complexe.</summary>
      <returns>
        <see langword="true" /> si le type possède un modèle de contenu mixte ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.Name">
      <summary>Obtient ou définit le nom du type.</summary>
      <returns>Nom du type.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.QualifiedName">
      <summary>Obtient le nom qualifié du type construit à partir de l'attribut <see langword="Name" /> de ce type. Il s'agit d'une propriété postérieure à la compilation du schéma.</summary>
      <returns>
        <see cref="T:System.Xml.XmlQualifiedName" /> du type construit à partir de l'attribut <see langword="Name" /> de ce type.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.TypeCode">
      <summary>Obtient le <see cref="T:System.Xml.Schema.XmlTypeCode" /> du type.</summary>
      <returns>Une des valeurs de <see cref="T:System.Xml.Schema.XmlTypeCode" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaUnique">
      <summary>Représente l'élément <see langword="unique" /> issu d'un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Cette classe peut être utilisée pour identifier une contrainte unique parmi un jeu d'éléments.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaUnique.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaUnique" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaUse">
      <summary>Indicateur du mode d'utilisation de l'attribut.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaUse.None">
      <summary>L'utilisation de l'attribut n'est pas spécifiée.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaUse.Optional">
      <summary>L'attribut est facultatif.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaUse.Prohibited">
      <summary>L'attribut ne peut pas être utilisé.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaUse.Required">
      <summary>L'attribut doit apparaître une fois.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaValidationException">
      <summary>Représente l'exception levée lorsque des erreurs et des avertissements de validation du schéma en langage XSD (XML Schema Definition) sont trouvés dans un document XML en cours de validation.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaValidationException" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaValidationException" /> avec les objets <see cref="T:System.Runtime.Serialization.SerializationInfo" /> et <see cref="T:System.Runtime.Serialization.StreamingContext" /> spécifiés.</summary>
      <param name="info">Objet <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context">Objet <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaValidationException" /> avec le message d'exception spécifié.</summary>
      <param name="message">Description <see langword="string" /> de la condition d'erreur.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaValidationException" /> avec le message d'exception et l'objet <see cref="T:System.Exception" /> d'origine qui a entraîné cette exception spécifiée.</summary>
      <param name="message">Description <see langword="string" /> de la condition d'erreur.</param>
      <param name="innerException">L'objet <see cref="T:System.Exception" /> d'origine qui a entraîné cette exception.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaValidationException" /> avec le message d'exception spécifié et l'objet <see cref="T:System.Exception" /> d'origine, le numéro de ligne et la position de ligne du XML qui entraîne cette exception spécifiée.</summary>
      <param name="message">Description <see langword="string" /> de la condition d'erreur.</param>
      <param name="innerException">L'objet <see cref="T:System.Exception" /> d'origine qui a entraîné cette exception.</param>
      <param name="lineNumber">Le numéro de ligne du XML qui a entraîné cette exception.</param>
      <param name="linePosition">La position de ligne du XML qui a entraîné cette exception.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Construit un nouvel objet <see cref="T:System.Xml.Schema.XmlSchemaValidationException" /> avec les informations données <see cref="T:System.Runtime.Serialization.SerializationInfo" /> et <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui contiennent toutes les propriétés de <see cref="T:System.Xml.Schema.XmlSchemaValidationException" />.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />
      </param>
      <param name="context">
        <see cref="T:System.Runtime.Serialization.StreamingContext" />
      </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.SetSourceObject(System.Object)">
      <summary>Définit le nœud XML qui provoque l'erreur.</summary>
      <param name="sourceObject">Objet source.</param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaValidationException.SourceObject">
      <summary>Obtient le nœud XML qui a entraîné cette <see cref="T:System.Xml.Schema.XmlSchemaValidationException" />.</summary>
      <returns>Nœud XML qui a entraîné cette <see cref="T:System.Xml.Schema.XmlSchemaValidationException" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaValidationFlags">
      <summary>Spécifie les options de validation de schéma utilisées par les classes <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> et <see cref="T:System.Xml.XmlReader" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes">
      <summary>Autorisez les attributs xml.* même s'ils ne sont pas définis dans le schéma. Les attributs sont validés selon leur type de données.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.None">
      <summary>Ne traite pas les contraintes d'identité, les schémas inline, les indications relatives à l'emplacement du schéma et ne signale pas les avertissements de validation du schéma.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints">
      <summary>Traite les contraintes d’identité (<c>xs:ID</c>, <c>xs:IDREF</c>, <c>xs:key</c>, <c>xs:keyref</c>, <c>xs:unique</c>) rencontrées pendant la validation.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema">
      <summary>Traite les schémas inline trouvés lors de la validation.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation">
      <summary>Traite les indicateurs d’emplacement de schéma (<c>xsi:schemaLocation</c>, <c>xsi:noNamespaceSchemaLocation</c>) rencontrés pendant la validation.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings">
      <summary>Signale les avertissements de validation du schéma trouvés lors de la validation.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaValidator">
      <summary>Représente un moteur de validation de schéma en langage XSD (XML Schema Definition). La classe <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaValidator" />.</summary>
      <param name="nameTable">Objet <see cref="T:System.Xml.XmlNameTable" /> contenant les noms d'éléments et d'attributs sous la forme de chaînes atomisées.</param>
      <param name="schemas">Objet <see cref="T:System.Xml.Schema.XmlSchemaSet" /> contenant les schémas XSD (XML Schema Definition) utilisés pour la validation.</param>
      <param name="namespaceResolver">Objet <see cref="T:System.Xml.IXmlNamespaceResolver" /> permettant la résolution des espaces de noms trouvés pendant la validation.</param>
      <param name="validationFlags">Valeur <see cref="T:System.Xml.Schema.XmlSchemaValidationFlags" /> spécifiant les options de validation du schéma.</param>
      <exception cref="T:System.ArgumentNullException">Un ou plusieurs des paramètres spécifiés sont <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Une erreur s'est produite lors de la compilation des schémas dans le paramètre <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)">
      <summary>Ajoute un schéma en langage XSD (XML Schema Definition) à l’ensemble de schémas utilisé pour la validation.</summary>
      <param name="schema">Objet <see cref="T:System.Xml.Schema.XmlSchema" /> à ajouter au jeu de schémas utilisé pour la validation.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <see cref="T:System.Xml.Schema.XmlSchema" /> spécifié est <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">L'espace de noms cible du paramètre <see cref="T:System.Xml.Schema.XmlSchema" /> correspond à celui de tout élément ou attribut déjà trouvé par l'objet <see cref="T:System.Xml.Schema.XmlSchemaValidator" />.</exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Le paramètre <see cref="T:System.Xml.Schema.XmlSchema" /> n'est pas valide.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.EndValidation">
      <summary>Termine la validation et vérifie les contraintes d’identité pour l’ensemble du document XML.</summary>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Une erreur de contrainte d'identité a été trouvée dans le document XML.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes">
      <summary>Retourne les attributs attendus pour le contexte d'élément actuel.</summary>
      <returns>Un tableau d'objets <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> ou un tableau vide s'il n'y a pas d'attributs attendus.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
      <summary>Retourne les particules attendues dans le contexte d'élément actuel.</summary>
      <returns>Un tableau d'objets <see cref="T:System.Xml.Schema.XmlSchemaParticle" /> ou un tableau vide s'il n'y a pas de particules attendues.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)">
      <summary>Valide les contraintes d'identité sur les attributs par défaut et remplit la <see cref="T:System.Collections.ArrayList" /> spécifiée avec les objets <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> pour tous les attributs avec les valeurs par défaut qui n'ont pas été déjà validés à l'aide de la méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> dans le contexte d'élément.</summary>
      <param name="defaultAttributes">
        <see cref="T:System.Collections.ArrayList" /> à remplir pas avec les objets <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> pour tous attributs non trouvés lors de la validation dans le contexte d'élément.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.Initialize">
      <summary>Initialise l'état de l'objet <see cref="T:System.Xml.Schema.XmlSchemaValidator" />.</summary>
      <exception cref="T:System.InvalidOperationException">L'appel de la méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.Initialize" /> est immédiatement valide après la construction d'un objet <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> ou après un appel à <see cref="M:System.Xml.Schema.XmlSchemaValidator.EndValidation" /> uniquement.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)">
      <summary>Initialise l'état de l'objet <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> à l'aide du <see cref="T:System.Xml.Schema.XmlSchemaObject" /> spécifié pour la validation partielle.</summary>
      <param name="partialValidationType">Objet <see cref="T:System.Xml.Schema.XmlSchemaElement" />, <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> ou  <see cref="T:System.Xml.Schema.XmlSchemaType" /> permettant d'initialiser le contexte de validation de l'objet <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> pour la validation partielle.</param>
      <exception cref="T:System.InvalidOperationException">L'appel de la méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.Initialize" /> est immédiatement valide après la construction d'un objet <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> ou après un appel à <see cref="M:System.Xml.Schema.XmlSchemaValidator.EndValidation" /> uniquement.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <see cref="T:System.Xml.Schema.XmlSchemaObject" /> n'est pas un objet <see cref="T:System.Xml.Schema.XmlSchemaElement" />, <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> ou <see cref="T:System.Xml.Schema.XmlSchemaType" />.</exception>
      <exception cref="T:System.ArgumentNullException">Le paramètre <see cref="T:System.Xml.Schema.XmlSchemaObject" /> ne peut pas avoir la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaValidator.LineInfoProvider">
      <summary>Obtient ou définit les informations de numéro de ligne pour le nœud XML en cours de validation.</summary>
      <returns>Objet <see cref="T:System.Xml.IXmlLineInfo" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)">
      <summary>Ignore la validation du contenu de l'élément actuel et prépare l'objet <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> à la validation du contenu dans le contexte de l'élément parent.</summary>
      <param name="schemaInfo">Objet <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> dont les propriétés sont définies si le contenu d'élément actuel est ignoré avec succès. Ce paramètre peut être <see langword="null" />.</param>
      <exception cref="T:System.InvalidOperationException">La méthode <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /> n'a pas été appelée dans la séquence appropriée. Par exemple, appeler <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /> après avoir appelé <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaValidator.SourceUri">
      <summary>Obtient ou définit l'URI source pour le nœud XML en cours de validation.</summary>
      <returns>Un objet <see cref="T:System.Uri" /> représentant l'URI source pour le nœud XML en cours de validation ; la valeur par défaut est <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
      <summary>Valide le nom de l'attribut, l'URI de l'espace de noms et la valeur dans le contexte d'élément actuel.</summary>
      <param name="localName">Nom local de l'attribut à valider.</param>
      <param name="namespaceUri">URI de l'espace de noms de l'attribut à valider.</param>
      <param name="attributeValue">Valeur de l'attribut à valider.</param>
      <param name="schemaInfo">Objet <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> dont les propriétés sont définies lors de la validation réussie de l'attribut. Ce paramètre peut être <see langword="null" />.</param>
      <returns>Valeur de l'attribut validé.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">L'attribut n'est pas valide dans le contexte d'élément actuel.</exception>
      <exception cref="T:System.InvalidOperationException">La méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> n'a pas été appelée dans la séquence appropriée. Par exemple, appeler <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> après avoir appelé <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" />.</exception>
      <exception cref="T:System.ArgumentNullException">Un ou plusieurs des paramètres spécifiés sont <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
      <summary>Valide le nom de l'attribut, l'URI de l'espace de noms et la valeur dans le contexte d'élément actuel.</summary>
      <param name="localName">Nom local de l'attribut à valider.</param>
      <param name="namespaceUri">URI de l'espace de noms de l'attribut à valider.</param>
      <param name="attributeValue">
        <see cref="T:System.Xml.Schema.XmlValueGetter" />
        <see langword="delegate" /> permettant de passer la valeur de l’attribut en tant que type CLR compatible avec le type de langage XSD (XML Schema Definition) de l’attribut.</param>
      <param name="schemaInfo">Objet <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> dont les propriétés sont définies lors de la validation réussie de l'attribut. Ce paramètre peut être <see langword="null" />.</param>
      <returns>Valeur de l'attribut validé.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">L'attribut n'est pas valide dans le contexte d'élément actuel.</exception>
      <exception cref="T:System.InvalidOperationException">La méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> n'a pas été appelée dans la séquence appropriée. Par exemple, appeler <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> après avoir appelé <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" />.</exception>
      <exception cref="T:System.ArgumentNullException">Un ou plusieurs des paramètres spécifiés sont <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
      <summary>Valide l'élément dans le contexte actuel.</summary>
      <param name="localName">Nom local de l'élément à valider.</param>
      <param name="namespaceUri">URI de l'espace de noms de l'élément à valider.</param>
      <param name="schemaInfo">Objet <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> dont les propriétés sont définies lors de la validation réussie du nom de l'élément. Ce paramètre peut être <see langword="null" />.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Le nom de l'élément n'est pas valide dans le contexte actuel.</exception>
      <exception cref="T:System.InvalidOperationException">La méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /> n'a pas été appelée dans la séquence appropriée. Par exemple, la méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /> est appelée après l'appel de <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
      <summary>Valide l’élément dans le contexte actuel dont les valeurs d’attribut <c>xsi:Type</c>, <c>xsi:Nil</c>, <c>xsi:SchemaLocation</c> et <c>xsi:NoNamespaceSchemaLocation</c> sont spécifiées.</summary>
      <param name="localName">Nom local de l'élément à valider.</param>
      <param name="namespaceUri">URI de l'espace de noms de l'élément à valider.</param>
      <param name="schemaInfo">Objet <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> dont les propriétés sont définies lors de la validation réussie du nom de l'élément. Ce paramètre peut être <see langword="null" />.</param>
      <param name="xsiType">Valeur de l’attribut <c>xsi:Type</c> de l’élément. Ce paramètre peut être <see langword="null" />.</param>
      <param name="xsiNil">Valeur de l’attribut <c>xsi:Nil</c> de l’élément. Ce paramètre peut être <see langword="null" />.</param>
      <param name="xsiSchemaLocation">Valeur de l’attribut <c>xsi:SchemaLocation</c> de l’élément. Ce paramètre peut être <see langword="null" />.</param>
      <param name="xsiNoNamespaceSchemaLocation">Valeur de l’attribut <c>xsi:NoNamespaceSchemaLocation</c> de l’élément. Ce paramètre peut être <see langword="null" />.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Le nom de l'élément n'est pas valide dans le contexte actuel.</exception>
      <exception cref="T:System.InvalidOperationException">La méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /> n'a pas été appelée dans la séquence appropriée. Par exemple, la méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /> est appelée après l'appel de <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
      <summary>Vérifie si le texte de l'élément est valide d'après son type de données pour les éléments dont le contenu est simple et vérifie si le contenu de l'élément actuel est complet pour les éléments dont le contenu est complexe.</summary>
      <param name="schemaInfo">Objet <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> dont les propriétés sont définies lors de la validation réussie de l'élément. Ce paramètre peut être <see langword="null" />.</param>
      <returns>Valeur de texte typée analysée de l'élément si le contenu de celui-ci est simple.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Le contenu de l'élément n'est pas valide.</exception>
      <exception cref="T:System.InvalidOperationException">La méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /> n'a pas été appelée dans la séquence appropriée. Par exemple, la méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /> est appelée après l'appel de <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
      <summary>Vérifie si le texte de l'élément spécifié est valide d'après son type de données.</summary>
      <param name="schemaInfo">Objet <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> dont les propriétés sont définies lors de la validation réussie du contenu de texte de l'élément. Ce paramètre peut être <see langword="null" />.</param>
      <param name="typedValue">Texte typé de l'élément.</param>
      <returns>Contenu simple typé analysé de l'élément.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Le contenu de texte de l'élément n'est pas valide.</exception>
      <exception cref="T:System.InvalidOperationException">La méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /> n'a pas été appelée dans la séquence correcte (par exemple, si la méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /> est appelée après avoir appelé <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />), les appels à la méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> ont déjà été faits ou l'élément a un contenu complexe.</exception>
      <exception cref="T:System.ArgumentNullException">Le paramètre de contenu de texte typé ne peut pas être <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
      <summary>Vérifie si tous les attributs obligatoires dans le contexte de l'élément sont présents et prépare l'objet <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> à la validation du contenu enfant de l'élément.</summary>
      <param name="schemaInfo">Objet <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> dont les propriétés sont définies lors de la vérification réussie de la présence de tous les attributs requis dans le contexte d'élément. Ce paramètre peut être <see langword="null" />.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Un ou plusieurs des attributs requis dans le contexte d'élément actuel sont introuvables.</exception>
      <exception cref="T:System.InvalidOperationException">La méthode <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /> n'a pas été appelée dans la séquence appropriée. Par exemple, appeler <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /> après avoir appelé <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />.</exception>
      <exception cref="T:System.ArgumentNullException">Un ou plusieurs des paramètres spécifiés sont <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)">
      <summary>Valide si la <see langword="string" /> de texte spécifié est autorisée dans le contexte d'élément actuel et accumule le texte pour la validation si l'élément actuel a du contenu simple.</summary>
      <param name="elementValue">
        <see langword="string" /> de texte à valider dans le contexte d'élément actuel.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">La <see langword="string" /> de texte spécifiée n'est pas autorisée dans le contexte d'élément actuel.</exception>
      <exception cref="T:System.InvalidOperationException">La méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> n'a pas été appelée dans la séquence appropriée. Par exemple, la méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> est appelée après l'appel de <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
      <exception cref="T:System.ArgumentNullException">Le paramètre <see langword="string" /> de texte ne peut pas être <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)">
      <summary>Valide si le texte retourné par l'objet <see cref="T:System.Xml.Schema.XmlValueGetter" /> spécifié est autorisé dans le contexte d'élément actuel et accumule le texte pour la validation si l'élément actuel a du contenu simple.</summary>
      <param name="elementValue">
        <see cref="T:System.Xml.Schema.XmlValueGetter" />
        <see langword="delegate" /> permettant de passer la valeur de texte en tant que type CLR compatible avec le type de langage XSD (XML Schema Definition) de l’attribut.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">La <see langword="string" /> de texte spécifiée n'est pas autorisée dans le contexte d'élément actuel.</exception>
      <exception cref="T:System.InvalidOperationException">La méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> n'a pas été appelée dans la séquence appropriée. Par exemple, la méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> est appelée après l'appel de <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
      <exception cref="T:System.ArgumentNullException">Le paramètre <see langword="string" /> de texte ne peut pas être <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.String)">
      <summary>Valide si un espace blanc dans la <see langword="string" /> spécifiée est autorisé dans le contexte d'élément actuel et accumule l'espace blanc pour la validation si l'élément actuel a du contenu simple.</summary>
      <param name="elementValue">
        <see langword="string" /> espace blanc à valider dans le contexte d'élément actuel.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">L'espace blanc n'est pas autorisé dans le contexte d'élément actuel.</exception>
      <exception cref="T:System.InvalidOperationException">La méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /> n'a pas été appelée dans la séquence appropriée. Par exemple, la méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /> est appelée après l'appel de <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.Xml.Schema.XmlValueGetter)">
      <summary>Valide si l'espace blanc retourné par l'objet <see cref="T:System.Xml.Schema.XmlValueGetter" /> spécifié est autorisé dans le contexte d'élément actuel et accumule l'espace blanc pour la validation si l'élément actuel a du contenu simple.</summary>
      <param name="elementValue">
        <see cref="T:System.Xml.Schema.XmlValueGetter" />
        <see langword="delegate" /> permettant de passer la valeur d’espace blanc en tant que type CLR compatible avec le type de langage XSD (XML Schema Definition) de l’attribut.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">L'espace blanc n'est pas autorisé dans le contexte d'élément actuel.</exception>
      <exception cref="T:System.InvalidOperationException">La méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /> n'a pas été appelée dans la séquence appropriée. Par exemple, la méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /> est appelée après l'appel de <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
    </member>
    <member name="E:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler">
      <summary>
        <see cref="T:System.Xml.Schema.ValidationEventHandler" /> qui reçoit des avertissements et des erreurs de validation du schéma trouvés lors de la validation du schéma.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaValidator.ValidationEventSender">
      <summary>Obtient ou définit l’objet envoyé comme objet expéditeur d’un événement de validation.</summary>
      <returns>
        <see cref="T:System.Object" /> ; la valeur par défaut est cet objet <see cref="T:System.Xml.Schema.XmlSchemaValidator" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaValidator.XmlResolver">
      <summary>Définit l’objet <see cref="T:System.Xml.XmlResolver" /> utilisé pour résoudre les éléments <c>xs:import</c> et <c>xs:include</c>, ainsi que les attributs <c>xsi:schemaLocation</c> et <c>xsi:noNamespaceSchemaLocation</c>.</summary>
      <returns>Objet <see cref="T:System.Xml.XmlResolver" /> ; la valeur par défaut est un objet <see cref="T:System.Xml.XmlUrlResolver" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaValidity">
      <summary>Représente la validation d'un élément XML validé par la classe <see cref="T:System.Xml.Schema.XmlSchemaValidator" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidity.Invalid">
      <summary>L'élément XML n'est pas valide.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidity.NotKnown">
      <summary>La validité de l'élément XML n'est pas connue.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidity.Valid">
      <summary>L'élément XML est valide.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaWhiteSpaceFacet">
      <summary>Représente la facette World Wide Web Consortium (W3C) <see langword="whiteSpace" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaWhiteSpaceFacet.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaWhiteSpaceFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaXPath">
      <summary>Représente l'élément World Wide Web Consortium (W3C) <see langword="selector" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaXPath.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaXPath" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaXPath.XPath">
      <summary>Obtient ou définit l'attribut pour l'expression XPath.</summary>
      <returns>Valeur de l'attribut de la chaîne pour l'expression XPath.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSeverityType">
      <summary>Obtient la sévérité de l'événement de validation.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSeverityType.Error">
      <summary>Indique une erreur de validation intervenue lors de la validation de l'instance de document. Ceci s'applique aux schémas de définition de type de document (DTD) et XSD (XML Schema definition language). Les contraintes de validité World Wide Web Consortium (W3C) sont considérées comme des erreurs. Si aucun gestionnaire d'événements de validation n'a été créé, les erreurs lèvent une exception.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSeverityType.Warning">
      <summary>Indique qu'un événement de validation qui n'est pas une erreur s'est produit. En règle générale, un avertissement est émis lorsqu'il n'y a pas de schéma DTD ou XSD (XML Schema) permettant de valider un élément ou un attribut particulier. Contrairement aux erreurs, les avertissements ne lèvent pas une exception s'il n'existe pas de gestionnaire d'événements de validation.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlTypeCode">
      <summary>Représente les types de schéma en langage XSD (XML Schema Definition) XML du W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.AnyAtomicType">
      <summary>Toute valeur atomique d'une union.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.AnyUri">
      <summary>Type <see langword="xs:anyURI" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Attribute">
      <summary>Cette valeur prend en charge l'infrastructure .NET Framework et n'est pas destinée à être directement utilisée à partir de votre code.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Base64Binary">
      <summary>Type <see langword="xs:base64Binary" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Boolean">
      <summary>Type <see langword="xs:boolean" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Byte">
      <summary>Type <see langword="xs:byte" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Comment">
      <summary>Cette valeur prend en charge l'infrastructure .NET Framework et n'est pas destinée à être directement utilisée à partir de votre code.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Date">
      <summary>Type <see langword="xs:date" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.DateTime">
      <summary>Type <see langword="xs:dateTime" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.DayTimeDuration">
      <summary>Cette valeur prend en charge l'infrastructure .NET Framework et n'est pas destinée à être directement utilisée à partir de votre code.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Decimal">
      <summary>Type <see langword="xs:decimal" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Document">
      <summary>Cette valeur prend en charge l'infrastructure .NET Framework et n'est pas destinée à être directement utilisée à partir de votre code.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Double">
      <summary>Type <see langword="xs:double" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Duration">
      <summary>Type <see langword="xs:Duration" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Element">
      <summary>Cette valeur prend en charge l'infrastructure .NET Framework et n'est pas destinée à être directement utilisée à partir de votre code.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Entity">
      <summary>Type <see langword="xs:ENTITY" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Float">
      <summary>Type <see langword="xs:float" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GDay">
      <summary>Type <see langword="xs:gDay" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GMonth">
      <summary>Type <see langword="xs:gMonth" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GMonthDay">
      <summary>Type <see langword="xs:gMonthDay" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GYear">
      <summary>Type <see langword="xs:gYear" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GYearMonth">
      <summary>Type <see langword="xs:gYearMonth" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.HexBinary">
      <summary>Type <see langword="xs:hexBinary" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Id">
      <summary>Type <see langword="xs:ID" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Idref">
      <summary>Type <see langword="xs:IDREF" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Int">
      <summary>Type <see langword="xs:int" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Integer">
      <summary>Type <see langword="xs:integer" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Item">
      <summary>Élément tel qu'un nœud ou une valeur atomique.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Language">
      <summary>Type <see langword="xs:language" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Long">
      <summary>Type <see langword="xs:long" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Name">
      <summary>Type <see langword="xs:Name" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Namespace">
      <summary>Cette valeur prend en charge l'infrastructure .NET Framework et n'est pas destinée à être directement utilisée à partir de votre code.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NCName">
      <summary>Type <see langword="xs:NCName" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NegativeInteger">
      <summary>Type <see langword="xs:negativeInteger" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NmToken">
      <summary>Type <see langword="xs:NMTOKEN" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Node">
      <summary>Cette valeur prend en charge l'infrastructure .NET Framework et n'est pas destinée à être directement utilisée à partir de votre code.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.None">
      <summary>Aucune information relative au type.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NonNegativeInteger">
      <summary>Type <see langword="xs:nonNegativeInteger" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NonPositiveInteger">
      <summary>Type <see langword="xs:nonPositiveInteger" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NormalizedString">
      <summary>Type <see langword="xs:normalizedString" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Notation">
      <summary>Type <see langword="xs:NOTATION" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.PositiveInteger">
      <summary>Type <see langword="xs:positiveInteger" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.ProcessingInstruction">
      <summary>Cette valeur prend en charge l'infrastructure .NET Framework et n'est pas destinée à être directement utilisée à partir de votre code.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.QName">
      <summary>Type <see langword="xs:QName" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Short">
      <summary>Type <see langword="xs:short" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.String">
      <summary>Type <see langword="xs:string" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Text">
      <summary>Cette valeur prend en charge l'infrastructure .NET Framework et n'est pas destinée à être directement utilisée à partir de votre code.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Time">
      <summary>Type <see langword="xs:time" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Token">
      <summary>Type <see langword="xs:token" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UnsignedByte">
      <summary>Type <see langword="xs:unsignedByte" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UnsignedInt">
      <summary>Type <see langword="xs:unsignedInt" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UnsignedLong">
      <summary>Type <see langword="xs:unsignedLong" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UnsignedShort">
      <summary>Type <see langword="xs:unsignedShort" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UntypedAtomic">
      <summary>Valeur atomique non typée.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.YearMonthDuration">
      <summary>Cette valeur prend en charge l'infrastructure .NET Framework et n'est pas destinée à être directement utilisée à partir de votre code.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlValueGetter">
      <summary>
        <see langword="delegate" /> utilisé par la classe <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> pour passer des valeurs d'attribut, de texte et d'espace blanc en tant que type CLR compatible avec le type langage XSD (XML Schema Definition) de l'attribut, du texte ou de l'espace blanc.</summary>
      <returns>Objet contenant la valeur d'attribut, de texte ou d'espace blanc. L’objet est un type CLR qui correspond au type XSD de la valeur d’attribut, de texte ou d’espace blanc.</returns>
    </member>
    <member name="T:System.Xml.Serialization.IXmlSerializable">
      <summary>Offre une mise en forme personnalisée pour la sérialisation et la désérialisation XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.IXmlSerializable.GetSchema">
      <summary>Cette méthode est réservée et ne doit pas être utilisée. Lorsque vous implémentez l'interface <see langword="IXmlSerializable" />, vous devez retourner la valeur <see langword="null" /> (<see langword="Nothing" /> dans Visual Basic) à partir cette méthode et, si la spécification d'un schéma personnalisé est requise, appliquez à la place <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" /> à la classe.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchema" /> qui décrit la représentation XML de l’objet qui est généré par la méthode <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> et utilisé par la méthode <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)">
      <summary>Génère un objet à partir de sa représentation XML.</summary>
      <param name="reader">
        <see cref="T:System.Xml.XmlReader" /> source à partir de laquelle l'objet est désérialisé.</param>
    </member>
    <member name="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)">
      <summary>Convertit un objet en sa représentation XML.</summary>
      <param name="writer">Flux <see cref="T:System.Xml.XmlWriter" /> dans lequel l'objet est sérialisé.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAnyAttributeAttribute">
      <summary>Spécifie que le membre (un champ retournant un tableau d'objets <see cref="T:System.Xml.XmlAttribute" />) peut contenir n'importe quel attribut XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyAttributeAttribute.#ctor">
      <summary>Construit une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlAnyElementAttribute">
      <summary>Spécifie que le membre (un champ retournant un tableau d'objets <see cref="T:System.Xml.XmlElement" /> ou <see cref="T:System.Xml.XmlNode" />) contient des objets représentant tout élément XML n'ayant pas de membre correspondant dans l'objet en cours de sérialisation ou de désérialisation.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> et spécifie le nom d'élément XML généré dans le document XML.</summary>
      <param name="name">Nom de l'élément XML généré par <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> et spécifie le nom d'élément XML généré dans le document XML, ainsi que son espace de noms XML.</summary>
      <param name="name">Nom de l'élément XML généré par <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
      <param name="ns">Espace de noms XML de l'élément XML.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttribute.Name">
      <summary>Obtient ou définit le nom de l'élément XML.</summary>
      <returns>Nom de l'élément XML.</returns>
      <exception cref="T:System.InvalidOperationException">Le nom d'élément d'un membre du tableau ne correspond pas au nom d'élément spécifié par la propriété <see cref="P:System.Xml.Serialization.XmlAnyElementAttribute.Name" />.</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttribute.Namespace">
      <summary>Obtient ou définit l'espace de noms XML généré dans le document XML.</summary>
      <returns>Espace de noms XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttribute.Order">
      <summary>Obtient ou définit l'ordre explicite dans lequel les éléments sont sérialisés ou désérialisés.</summary>
      <returns>Ordre de la génération du code.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeAttribute">
      <summary>Spécifie que <see cref="T:System.Xml.Serialization.XmlSerializer" /> doit sérialiser le membre de classe comme un attribut XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> et spécifie le nom de l'attribut XML généré.</summary>
      <param name="attributeName">Nom de l'attribut XML généré par <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.String,System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />.</summary>
      <param name="attributeName">Nom de l'attribut XML généré.</param>
      <param name="type">
        <see cref="T:System.Type" /> utilisé pour stocker l'attribut.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />.</summary>
      <param name="type">
        <see cref="T:System.Type" /> utilisé pour stocker l'attribut.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.AttributeName">
      <summary>Obtient ou définit le nom de l'attribut XML.</summary>
      <returns>Nom de l'attribut XML. La valeur par défaut est le nom du membre.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.DataType">
      <summary>Obtient ou définit le type de données XSD de l'attribut XML généré par <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns>Type de données XSD (XML Schema Document).</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.Form">
      <summary>Obtient ou définit une valeur qui indique si le nom d'attribut XML généré par <see cref="T:System.Xml.Serialization.XmlSerializer" /> est qualifié.</summary>
      <returns>Une des valeurs de <see cref="T:System.Xml.Schema.XmlSchemaForm" />. La valeur par défaut est <see langword="XmlForm.None" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.Namespace">
      <summary>Obtient ou définit l'espace de noms XML de l'attribut XML.</summary>
      <returns>Espace de noms XML de l'attribut XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.Type">
      <summary>Obtient ou définit le type complexe de l'attribut XML.</summary>
      <returns>Type de l'attribut XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementAttribute">
      <summary>Indique qu'un champ public ou une propriété publique représente un élément XML lorsque <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise ou désérialise l'objet qui le contient.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> et spécifie le nom de l'élément XML.</summary>
      <param name="elementName">Nom de l'élément XML du membre sérialisé.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
      <summary>Initialise une nouvelle instance de <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> et spécifie le nom de l'élément XML et un type dérivé pour le membre auquel <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> est appliqué. Ce type de membre est utilisé lorsque <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise l'objet qui le contient.</summary>
      <param name="elementName">Nom de l'élément XML du membre sérialisé.</param>
      <param name="type">
        <see cref="T:System.Type" /> d'un objet dérivé du type du membre.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> et spécifie un type pour le membre auquel <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> est appliqué. Ce type est utilisé par <see cref="T:System.Xml.Serialization.XmlSerializer" /> lors de la sérialisation ou la désérialisation de l'objet qui le contient.</summary>
      <param name="type">
        <see cref="T:System.Type" /> d'un objet dérivé du type du membre.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.DataType">
      <summary>Obtient ou définit le type de données XSD (XML Schema Definition) de l'élément XML généré par <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns>Type de données de schéma XML.</returns>
      <exception cref="T:System.Exception">Le type de données de schéma XML que vous avez spécifié ne peut pas être mappé au type de données .NET.</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.ElementName">
      <summary>Obtient ou définit le nom de l'élément XML généré.</summary>
      <returns>Nom de l'élément XML généré. Par défaut, il s'agit de l'identificateur du membre.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Form">
      <summary>Obtient ou définit une valeur qui indique si l'élément est qualifié.</summary>
      <returns>Une des valeurs de <see cref="T:System.Xml.Schema.XmlSchemaForm" />. La valeur par défaut est <see cref="F:System.Xml.Schema.XmlSchemaForm.None" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.IsNullable">
      <summary>Obtient ou définit une valeur qui indique si <see cref="T:System.Xml.Serialization.XmlSerializer" /> doit sérialiser un membre dont la valeur est <see langword="null" /> comme balise vide avec l'attribut <see langword="xsi:nil" /> ayant la valeur <see langword="true" />.</summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.Xml.Serialization.XmlSerializer" /> génère l'attribut <see langword="xsi:nil" /> ; <see langword="false" /> sinon.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Namespace">
      <summary>Obtient ou définit l'espace de noms assigné à l'élément XML obtenu lorsque la classe est sérialisée.</summary>
      <returns>Espace de noms de l'élément XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Order">
      <summary>Obtient ou définit l'ordre explicite dans lequel les éléments sont sérialisés ou désérialisés.</summary>
      <returns>Ordre de la génération du code.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Type">
      <summary>Obtient ou définit le type d'objet utilisé pour représenter l'élément XML.</summary>
      <returns>
        <see cref="T:System.Type" /> du membre.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlEnumAttribute">
      <summary>Contrôle la manière dont <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise un membre de l'énumération.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlEnumAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlEnumAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlEnumAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlEnumAttribute" /> et spécifie la valeur XML que <see cref="T:System.Xml.Serialization.XmlSerializer" /> génère ou reconnaît (selon qu'il sérialise ou désérialise l'énumération, respectivement).</summary>
      <param name="name">Nom de substitution pour le membre de l'énumération.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlEnumAttribute.Name">
      <summary>Obtient ou définit la valeur générée dans une instance de document XML lorsque <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise une énumération ou la valeur reconnue lors de la désérialisation du membre de l'énumération.</summary>
      <returns>Valeur générée dans une instance de document XML lorsque <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise l'énumération ou valeur reconnue lors de la désérialisation du membre de l'énumération.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlIgnoreAttribute">
      <summary>Commande à la méthode <see cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" /> de <see cref="T:System.Xml.Serialization.XmlSerializer" /> de ne pas sérialiser la valeur du champ public ou de la propriété en lecture/écriture publique.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlIgnoreAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlIgnoreAttribute" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute">
      <summary>Spécifie que la propriété, le paramètre, la valeur de retour ou le membre de classe cible contient des préfixes associés aux espaces de noms utilisés dans un document XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlRootAttribute">
      <summary>Contrôle la sérialisation XML de l'attribut cible en tant qu'élément racine XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlRootAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlRootAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlRootAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> et spécifie le nom de l'élément racine XML.</summary>
      <param name="elementName">Nom de l'élément racine XML.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.DataType">
      <summary>Obtient ou définit le type de données XSD de l'élément racine XML.</summary>
      <returns>Type de données XSD (XML Schema Document).</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.ElementName">
      <summary>Obtient ou définit le nom de l'élément XML qui est généré et reconnu, respectivement, par les méthodes <see cref="T:System.Xml.Serialization.XmlSerializer" /> et <see cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" /> de la classe <see cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />.</summary>
      <returns>Nom de l'élément racine XML qui est généré et reconnu dans une instance de document XML. Par défaut, il s'agit du nom de la classe sérialisée.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.IsNullable">
      <summary>Obtient ou définit une valeur qui indique si <see cref="T:System.Xml.Serialization.XmlSerializer" /> doit sérialiser un membre qui est <see langword="null" /> en un attribut <see langword="xsi:nil" /> dont la valeur est <see langword="true" />.</summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.Xml.Serialization.XmlSerializer" /> génère l'attribut <see langword="xsi:nil" /> ; <see langword="false" /> sinon.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.Namespace">
      <summary>Obtient ou définit l'espace de noms de l'élément racine XML.</summary>
      <returns>Espace de noms de l'élément XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaProviderAttribute">
      <summary>Dans le cadre d'une application à un type, stocke le nom d'une méthode statique du type qui retourne un schéma XML et un <see cref="T:System.Xml.XmlQualifiedName" /> (ou <see cref="T:System.Xml.Schema.XmlSchemaType" /> pour les types anonymes) qui contrôle la sérialisation du type.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaProviderAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" />, en acceptant le nom de la méthode statique qui fournit le schéma XML du type.</summary>
      <param name="methodName">Nom de la méthode statique qui doit être implémentée.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaProviderAttribute.IsAny">
      <summary>Obtient ou définit une valeur qui détermine si la classe cible est un caractère générique, ou que le schéma pour la classe contient uniquement un élément <see langword="xs:any" />.</summary>
      <returns>
        <see langword="true" /> si la classe est un caractère générique ou si le schéma contient uniquement l'élément <see langword="xs:any" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName">
      <summary>Obtient le nom de la méthode statique qui fournit le schéma XML du type et le nom de son type de données de schéma XML.</summary>
      <returns>Nom de la méthode qui est appelée par l'infrastructure XML pour retourner un schéma XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerNamespaces">
      <summary>Contient les espaces de noms et préfixes XML utilisés par <see cref="T:System.Xml.Serialization.XmlSerializer" /> pour générer des noms qualifiés dans une instance de document XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor(System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />, à l'aide de l'instance spécifiée de <see langword="XmlSerializerNamespaces" /> contenant la collection de paires préfixe-espace de noms.</summary>
      <param name="namespaces">Instance de <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> contenant les paires espace de noms-préfixe.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor(System.Xml.XmlQualifiedName[])">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />.</summary>
      <param name="namespaces">Tableau d'objets <see cref="T:System.Xml.XmlQualifiedName" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.Add(System.String,System.String)">
      <summary>Ajoute une paire préfixe/espace de noms à un objet <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />.</summary>
      <param name="prefix">Préfixe associé à un espace de noms XML.</param>
      <param name="ns">Espace de noms XML.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerNamespaces.Count">
      <summary>Obtient le nombre de paires préfixe/espace de noms dans la collection.</summary>
      <returns>Nombre de paires préfixe/espace de noms dans la collection.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.ToArray">
      <summary>Obtient le tableau de paires préfixe/espace de noms dans un objet <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />.</summary>
      <returns>Tableau d'objets <see cref="T:System.Xml.XmlQualifiedName" /> utilisés en tant que noms qualifiés dans un document XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTextAttribute">
      <summary>Indique à <see cref="T:System.Xml.Serialization.XmlSerializer" /> que le membre doit être traité comme du texte XML lorsque la classe qui le contient est sérialisée ou désérialisée.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTextAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlTextAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTextAttribute.#ctor(System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlTextAttribute" />.</summary>
      <param name="type">
        <see cref="T:System.Type" /> du membre à sérialiser.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlTextAttribute.DataType">
      <summary>Obtient ou définit le type de données XSD (XML Schema Definition) du texte généré par <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns>Type de données de schéma XML (XSD).</returns>
      <exception cref="T:System.Exception">Le type de données de schéma XML que vous avez spécifié ne peut pas être mappé au type de données .NET.</exception>
      <exception cref="T:System.InvalidOperationException">Le type de donnée de schéma XML que vous avez spécifié n'est pas valide pour la propriété et ne peut pas être converti dans le type du membre.</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlTextAttribute.Type">
      <summary>Obtient ou définit le type du membre.</summary>
      <returns>
        <see cref="T:System.Type" /> du membre.</returns>
    </member>
    <member name="T:System.Xml.ValidationType">
      <summary>Spécifie le type de validation à effectuer.</summary>
    </member>
    <member name="F:System.Xml.ValidationType.Auto">
      <summary>Effectue la validation si des informations DTD ou de schéma sont trouvées. 
À partir de .NET Framework 2.0, ce champ est obsolète. S'applique uniquement à la classe <see cref="T:System.Xml.XmlValidatingReader" /> obsolète.</summary>
    </member>
    <member name="F:System.Xml.ValidationType.DTD">
      <summary>Est validé conformément au DTD.</summary>
    </member>
    <member name="F:System.Xml.ValidationType.None">
      <summary>Aucune validation n'est effectuée et aucune erreur de validation n'est levée. Ce paramètre crée un analyseur non validant conforme au langage XML 1.0.
Les appels à <see cref="M:System.Xml.XmlReader.ResolveEntity" /> signalent les attributs par défaut et résolvent les entités générales. L'élément DOCTYPE n'est pas utilisé à des fins de validation.</summary>
    </member>
    <member name="F:System.Xml.ValidationType.Schema">
      <summary>Effectue une validation en fonction des schémas XSD (XML Schema Definition), y compris des schémas XML inline. Les schémas XML sont associés à des URI d'espace de noms, en utilisant l'attribut <see langword="schemaLocation" /> ou la propriété <see langword="Schemas" /> fournie.</summary>
    </member>
    <member name="F:System.Xml.ValidationType.XDR">
      <summary>Effectue une validation en fonction des schémas XDR (XML-Data Reduced), y compris des schémas XDR inline. Les schémas XDR sont reconnus à l'aide du préfixe d'espace de noms <see langword="x-schema" /> ou de la propriété <see cref="P:System.Xml.XmlValidatingReader.Schemas" />.
À partir de .NET Framework 2.0, ce champ est obsolète. S'applique uniquement à la classe <see cref="T:System.Xml.XmlValidatingReader" /> obsolète.</summary>
    </member>
    <member name="T:System.Xml.WhitespaceHandling">
      <summary>Spécifie la façon dont est géré l'espace blanc.</summary>
    </member>
    <member name="F:System.Xml.WhitespaceHandling.All">
      <summary>Retourner les nœuds <see langword="Whitespace" /> et <see langword="SignificantWhitespace" />. Il s'agit de la valeur par défaut.</summary>
    </member>
    <member name="F:System.Xml.WhitespaceHandling.None">
      <summary>Ne retourner aucun nœud <see langword="Whitespace" /> ni aucun nœud <see langword="SignificantWhitespace" />.</summary>
    </member>
    <member name="F:System.Xml.WhitespaceHandling.Significant">
      <summary>Retourner uniquement les nœuds <see langword="SignificantWhitespace" />.</summary>
    </member>
    <member name="T:System.Xml.WriteState">
      <summary>Spécifie l'état de la classe <see cref="T:System.Xml.XmlWriter" />.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Attribute">
      <summary>Indique qu'une valeur d'attribut est en cours d'écriture.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Closed">
      <summary>Indique que la méthode <see cref="M:System.Xml.XmlWriter.Close" /> a été appelée.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Content">
      <summary>Indique que le contenu d'élément est en cours d'écriture.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Element">
      <summary>Indique qu'une balise de début d'élément est en cours d'écriture.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Error">
      <summary>Une exception a été levée et a laissé le <see cref="T:System.Xml.XmlWriter" /> dans un état non valide. Vous pouvez appeler la méthode <see cref="M:System.Xml.XmlWriter.Close" /> pour mettre le <see cref="T:System.Xml.XmlWriter" /> à l'état <see cref="F:System.Xml.WriteState.Closed" />. Toute autre méthode <see cref="T:System.Xml.XmlWriter" /> appelle les résultats dans un <see cref="T:System.InvalidOperationException" />.
Ce champ a été ajouté dans .NET Framework 2.0.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Prolog">
      <summary>Indique que le prologue est en cours d'écriture.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Start">
      <summary>Indique qu'une méthode Write n'a pas encore été appelée.</summary>
    </member>
    <member name="T:System.Xml.XmlAttribute">
      <summary>Représente un attribut. Les valeurs valides et par défaut de l'attribut sont définies dans une définition de type de document (DTD) ou dans un schéma.</summary>
    </member>
    <member name="M:System.Xml.XmlAttribute.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlAttribute" />.</summary>
      <param name="prefix">Le préfixe de l'espace de noms.</param>
      <param name="localName">Le nom local de l'attribut.</param>
      <param name="namespaceURI">URI (Uniform Resource Identifier) de l'espace de noms.</param>
      <param name="doc">Document XML parent.</param>
    </member>
    <member name="M:System.Xml.XmlAttribute.AppendChild(System.Xml.XmlNode)">
      <summary>Ajoute le nœud spécifié à la fin de la liste des nœuds enfants de ce nœud.</summary>
      <param name="newChild">
        <see cref="T:System.Xml.XmlNode" /> à ajouter.</param>
      <returns>
        <see cref="T:System.Xml.XmlNode" /> ajouté.</returns>
      <exception cref="T:System.InvalidOperationException">Le type de ce nœud n'autorise pas les nœuds enfants possédant le type de nœud <paramref name="newChild" />.  
<paramref name="newChild" /> est un ancêtre de ce nœud.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="newChild" /> a été créé à partir d'un document différent de celui qui a créé ce nœud.  
Ce nœud est en lecture seule.</exception>
    </member>
    <member name="P:System.Xml.XmlAttribute.BaseURI">
      <summary>Obtient l'URI (Uniform Resource Identifier) de base du nœud.</summary>
      <returns>Emplacement à partir duquel le nœud a été chargé ou String.Empty si le nœud n'a pas d'URI de base. Les nœuds d'attributs ont la même URI de base que leur élément propriétaire. Si un nœud d'attribut n'a pas d'élément propriétaire, <see langword="BaseURI" /> retourne String.Empty.</returns>
    </member>
    <member name="M:System.Xml.XmlAttribute.CloneNode(System.Boolean)">
      <summary>Crée un doublon de ce nœud.</summary>
      <param name="deep">
        <see langword="true" /> pour cloner de manière récursive le sous-arbre sous le nœud spécifié ; <see langword="false" /> pour cloner uniquement le nœud lui-même.</param>
      <returns>Doublon du nœud.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.InnerText">
      <summary>Définit les valeurs concaténées du nœud et de tous ses enfants.</summary>
      <returns>Valeurs concaténées du nœud et de tous ses enfants. Pour les nœuds d'attribut, cette propriété remplit la même fonction que la propriété <see cref="P:System.Xml.XmlAttribute.Value" />.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.InnerXml">
      <summary>Définit la valeur de l'attribut.</summary>
      <returns>Valeur de l'attribut</returns>
      <exception cref="T:System.Xml.XmlException">Le code XML spécifié pendant la définition de cette propriété n’est pas bien formé.</exception>
    </member>
    <member name="M:System.Xml.XmlAttribute.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary>Insère le nœud spécifié immédiatement après le nœud de référence spécifié.</summary>
      <param name="newChild">
        <see cref="T:System.Xml.XmlNode" /> à insérer.</param>
      <param name="refChild">
        <see cref="T:System.Xml.XmlNode" /> qui est le nœud de référence. <paramref name="newChild" /> est placé après <paramref name="refChild" />.</param>
      <returns>
        <see cref="T:System.Xml.XmlNode" /> inséré.</returns>
      <exception cref="T:System.InvalidOperationException">Le type de ce nœud n'autorise pas les nœuds enfants possédant le type de nœud <paramref name="newChild" />.  
<paramref name="newChild" /> est un ancêtre de ce nœud.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="newChild" /> a été créé à partir d'un document différent de celui qui a créé ce nœud.  
<paramref name="refChild" /> n'est pas un enfant de ce nœud.  
Ce nœud est en lecture seule.</exception>
    </member>
    <member name="M:System.Xml.XmlAttribute.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary>Insère le nœud spécifié immédiatement avant le nœud de référence spécifié.</summary>
      <param name="newChild">
        <see cref="T:System.Xml.XmlNode" /> à insérer.</param>
      <param name="refChild">
        <see cref="T:System.Xml.XmlNode" /> qui est le nœud de référence. <paramref name="newChild" /> est placé avant ce nœud.</param>
      <returns>
        <see cref="T:System.Xml.XmlNode" /> inséré.</returns>
      <exception cref="T:System.InvalidOperationException">Le type du nœud actuel n'autorise pas les nœuds enfants possédant le type de nœud <paramref name="newChild" />.  
<paramref name="newChild" /> est un ancêtre de ce nœud.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="newChild" /> a été créé à partir d'un document différent de celui qui a créé ce nœud.  
<paramref name="refChild" /> n'est pas un enfant de ce nœud.  
Ce nœud est en lecture seule.</exception>
    </member>
    <member name="P:System.Xml.XmlAttribute.LocalName">
      <summary>Obtient le nom local du nœud.</summary>
      <returns>Nom du nœud d'attribut sans le préfixe. Dans l’exemple &lt;de livre BK: genre = 'nouveau'&gt;, le <see langword="LocalName" /> de l’attribut est <see langword="genre" />.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.Name">
      <summary>Obtient le nom qualifié du nœud.</summary>
      <returns>Nom qualifié du nœud d'attribut.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.NamespaceURI">
      <summary>Obtient l'URI de l'espace de noms de ce nœud.</summary>
      <returns>Espace de noms d'URI du nœud. Si l'attribut ne se voit pas assigner un espace de noms de manière explicite, cette propriété retourne String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.NodeType">
      <summary>Obtient le type du nœud actuel.</summary>
      <returns>Le type des nœuds <see langword="XmlAttribute" /> est XmlNodeType.Attribute.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.OwnerDocument">
      <summary>Obtient le <see cref="T:System.Xml.XmlDocument" /> auquel ce nœud appartient.</summary>
      <returns>Un document XML auquel ce nœud appartient.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.OwnerElement">
      <summary>Obtient le <see cref="T:System.Xml.XmlElement" /> auquel appartient l'attribut.</summary>
      <returns>
        <see langword="XmlElement" /> auquel appartient l'attribut, ou <see langword="null" /> si celui-ci ne fait pas partie d'un <see langword="XmlElement" />.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.ParentNode">
      <summary>Obtient le parent de ce nœud. Pour les nœuds <see langword="XmlAttribute" />, cette propriété retourne toujours <see langword="null" />.</summary>
      <returns>Pour les nœuds <see langword="XmlAttribute" />, cette propriété retourne toujours <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.Prefix">
      <summary>Obtient ou définit le préfixe de l'espace de noms de ce nœud.</summary>
      <returns>Préfixe de l'espace de noms de ce nœud. En l'absence de préfixe, cette propriété retourne String.Empty.</returns>
      <exception cref="T:System.ArgumentException">Ce nœud est en lecture seule.</exception>
      <exception cref="T:System.Xml.XmlException">Le préfixe spécifié contient un caractère non valide.  
Le préfixe spécifié est mal formé.  
Le NamespaceURI de ce nœud est <see langword="null" />.  
Le préfixe spécifié est « xml » et l’URI d’espace de noms de ce nœud est différent de « http://www.w3.org/XML/1998/namespace ».  
Le nœud est un attribut, le préfixe spécifié est « xmlns » et l’URI d’espace de noms de ce nœud est différent de « http://www.w3.org/2000/xmlns/ ».  
Ce nœud est un attribut et son qualifiedName est « xmlns » [espaces de noms].</exception>
    </member>
    <member name="M:System.Xml.XmlAttribute.PrependChild(System.Xml.XmlNode)">
      <summary>Ajoute le nœud spécifié au début de la liste des nœuds enfants de ce nœud.</summary>
      <param name="newChild">
        <see cref="T:System.Xml.XmlNode" /> à ajouter. S'il s'agit de <see cref="T:System.Xml.XmlDocumentFragment" />, le contenu entier du fragment de document est déplacé dans la liste enfant de ce nœud.</param>
      <returns>
        <see cref="T:System.Xml.XmlNode" /> ajouté.</returns>
      <exception cref="T:System.InvalidOperationException">Le type de ce nœud n'autorise pas les nœuds enfants possédant le type de nœud <paramref name="newChild" />.  
<paramref name="newChild" /> est un ancêtre de ce nœud.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="newChild" /> a été créé à partir d'un document différent de celui qui a créé ce nœud.  
Ce nœud est en lecture seule.</exception>
    </member>
    <member name="M:System.Xml.XmlAttribute.RemoveChild(System.Xml.XmlNode)">
      <summary>Supprime le nœud enfant spécifié.</summary>
      <param name="oldChild">
        <see cref="T:System.Xml.XmlNode" /> à supprimer.</param>
      <returns>
        <see cref="T:System.Xml.XmlNode" /> supprimé.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="oldChild" /> n'est pas un enfant de ce nœud. ou bien ce nœud est en lecture seule.</exception>
    </member>
    <member name="M:System.Xml.XmlAttribute.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary>Remplace le nœud enfant spécifié avec le nouveau nœud enfant spécifié.</summary>
      <param name="newChild">Nouveau <see cref="T:System.Xml.XmlNode" /> enfant.</param>
      <param name="oldChild">
        <see cref="T:System.Xml.XmlNode" /> à remplacer.</param>
      <returns>
        <see cref="T:System.Xml.XmlNode" /> remplacé.</returns>
      <exception cref="T:System.InvalidOperationException">Le type de ce nœud n'autorise pas les nœuds enfants possédant le type de nœud <paramref name="newChild" />.  
<paramref name="newChild" /> est un ancêtre de ce nœud.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="newChild" /> a été créé à partir d'un document différent de celui qui a créé ce nœud.  
Ce nœud est en lecture seule.  
<paramref name="oldChild" /> n'est pas un enfant de ce nœud.</exception>
    </member>
    <member name="P:System.Xml.XmlAttribute.SchemaInfo">
      <summary>Obtient le jeu d'informations postérieures à la validation du schéma qui a été assigné à ce nœud à la suite de la validation du schéma.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> contenant le jeu d'informations postérieures à la validation du schéma de ce nœud.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.Specified">
      <summary>Obtient une valeur indiquant si la valeur de l'attribut a été définie explicitement.</summary>
      <returns>
        <see langword="true" /> si l'attribut a reçu explicitement une valeur dans l'instance de document d'origine ; sinon <see langword="false" />. Une valeur <see langword="false" /> indique que la valeur de l'attribut provient du DTD.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.Value">
      <summary>Obtient ou définit la valeur du nœud.</summary>
      <returns>La valeur retournée dépend du <see cref="P:System.Xml.XmlNode.NodeType" /> du nœud. Pour les nœuds <see langword="XmlAttribute" />, cette propriété équivaut à la valeur de l'attribut.</returns>
      <exception cref="T:System.ArgumentException">Le nœud est en lecture seule et une opération set est appelée.</exception>
    </member>
    <member name="M:System.Xml.XmlAttribute.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Enregistre tous les enfants du nœud dans l’élément <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="w">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="M:System.Xml.XmlAttribute.WriteTo(System.Xml.XmlWriter)">
      <summary>Enregistre le nœud dans le <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="w">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="T:System.Xml.XmlAttributeCollection">
      <summary>Représente une collection d'attributs accessibles par nom ou index.</summary>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.Append(System.Xml.XmlAttribute)">
      <summary>Insère l'attribut spécifié en tant que dernier nœud de la collection.</summary>
      <param name="node">Attribut à insérer.</param>
      <returns>
        <see langword="XmlAttribute" /> à ajouter à la collection.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="node" /> a été créé à partir d'un document différent de celui qui a créé cette collection.</exception>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute[],System.Int32)">
      <summary>Copie tous les objets de cette collection <see cref="T:System.Xml.XmlAttribute" /> dans le tableau donné.</summary>
      <param name="array">Tableau à une dimension, qui est la destination des objets copiés à partir de la collection.</param>
      <param name="index">Index à partir duquel la copie commence dans le tableau.</param>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.InsertAfter(System.Xml.XmlAttribute,System.Xml.XmlAttribute)">
      <summary>Insère l'attribut spécifié immédiatement après l'attribut de référence spécifié.</summary>
      <param name="newNode">Attribut à insérer.</param>
      <param name="refNode">Attribut de référence. <paramref name="newNode" /> est placé après <paramref name="refNode" />.</param>
      <returns>
        <see langword="XmlAttribute" /> à insérer dans la collection.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="newNode" /> a été créé à partir d'un document différent de celui qui a créé cette collection. Ou <paramref name="refNode" /> n'est pas membre de cette collection.</exception>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.InsertBefore(System.Xml.XmlAttribute,System.Xml.XmlAttribute)">
      <summary>Insère l'attribut spécifié immédiatement avant l'attribut de référence spécifié.</summary>
      <param name="newNode">Attribut à insérer.</param>
      <param name="refNode">Attribut de référence. <paramref name="newNode" /> est placé avant <paramref name="refNode" />.</param>
      <returns>
        <see langword="XmlAttribute" /> à insérer dans la collection.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="newNode" /> a été créé à partir d'un document différent de celui qui a créé cette collection. Ou <paramref name="refNode" /> n'est pas membre de cette collection.</exception>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.ItemOf(System.Int32)">
      <summary>Obtient l'attribut avec l'index spécifié.</summary>
      <param name="i">Index de l'attribut.</param>
      <returns>Attribut au niveau de l’index spécifié.</returns>
      <exception cref="T:System.IndexOutOfRangeException">L'index qui est passé est hors limites.</exception>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.ItemOf(System.String)">
      <summary>Obtient l'attribut avec le nom spécifié.</summary>
      <param name="name">Nom qualifié de l'attribut.</param>
      <returns>Attribut portant le nom spécifié. Si l'attribut n'existe pas, cette propriété retourne <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.ItemOf(System.String,System.String)">
      <summary>Obtient l'attribut possédant le nom local et l'URI (Uniform Resource Identifier) de l'espace de noms spécifiés.</summary>
      <param name="localName">Le nom local de l'attribut.</param>
      <param name="namespaceURI">L'URI de l'espace de noms de l'attribut.</param>
      <returns>Attribut avec le nom local et l’URI de l’espace de noms spécifiés. Si l'attribut n'existe pas, cette propriété retourne <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.Prepend(System.Xml.XmlAttribute)">
      <summary>Insère l'attribut spécifié en tant que premier nœud de la collection.</summary>
      <param name="node">Attribut à insérer.</param>
      <returns>
        <see langword="XmlAttribute" /> ajouté à la collection.</returns>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.Remove(System.Xml.XmlAttribute)">
      <summary>Supprime l'attribut spécifié de la collection.</summary>
      <param name="node">Attribut à enlever.</param>
      <returns>Nœud supprimé ou <see langword="null" /> s'il ne se trouve pas dans la collection.</returns>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.RemoveAll">
      <summary>Supprime tous les attributs de la collection.</summary>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.RemoveAt(System.Int32)">
      <summary>Supprime l'attribut correspondant à l'index spécifié de la collection.</summary>
      <param name="i">Index du nœud à supprimer. Le premier nœud a l'index 0.</param>
      <returns>Retourne <see langword="null" /> s'il n'y a aucun attribut à l'index spécifié.</returns>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.SetNamedItem(System.Xml.XmlNode)">
      <summary>Ajoute un <see cref="T:System.Xml.XmlNode" /> en utilisant sa propriété <see cref="P:System.Xml.XmlNode.Name" /></summary>
      <param name="node">Un nœud d'attribut à stocker dans cette collection. Le nœud sera accessible par la suite à l'aide de son nom. Si un nœud porte déjà ce nom dans la collection, il est alors remplacé par ce nouveau nœud ; sinon, le nœud est ajouté à la fin de la collection.</param>
      <returns>Si <paramref name="node" /> remplace un nœud existant portant le même nom, l'ancien nœud est retourné ; sinon, le nœud ajouté est retourné.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="node" /> a été créé à partir d'un <see cref="T:System.Xml.XmlDocument" /> différent de celui qui a créé cette collection.  
Cette <see langword="XmlAttributeCollection" /> est en lecture seule.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="node" /> est un <see cref="T:System.Xml.XmlAttribute" /> qui est déjà un attribut d'un autre objet <see cref="T:System.Xml.XmlElement" />. Pour réutiliser des attributs dans d'autres éléments, vous devez cloner les <see langword="XmlAttribute" /> objets que vous voulez réutiliser.</exception>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute[],System.Int32)" />.</summary>
      <param name="array">Tableau à une dimension, qui est la destination des objets copiés à partir de la collection.</param>
      <param name="index">Index à partir duquel la copie commence dans le tableau.</param>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#Count">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#Count" />.</summary>
      <returns>
        <see langword="int" /> Qui contient le nombre d’attributs.</returns>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#IsSynchronized" />.</summary>
      <returns>
        <see langword="true" />Si la collection est synchronisée.</returns>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#SyncRoot">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#SyncRoot" />.</summary>
      <returns>
        <see cref="T:System.Object" /> Qui est la racine de la collection.</returns>
    </member>
    <member name="T:System.Xml.XmlCDataSection">
      <summary>Représente une section CDATA.</summary>
    </member>
    <member name="M:System.Xml.XmlCDataSection.#ctor(System.String,System.Xml.XmlDocument)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlCDataSection" />.</summary>
      <param name="data">
        <see cref="T:System.String" /> qui contient des données caractères.</param>
      <param name="doc">Objet <see cref="T:System.Xml.XmlDocument" />.</param>
    </member>
    <member name="M:System.Xml.XmlCDataSection.CloneNode(System.Boolean)">
      <summary>Crée un doublon de ce nœud.</summary>
      <param name="deep">
        <see langword="true" /> pour cloner récursivement la sous-arborescence sous le nœud spécifié ; <see langword="false" /> pour cloner seulement le nœud lui-même. Comme les nœuds CDATA n'ont pas d'enfant, le nœud cloné comportera toujours des données, quelle que soit la valeur du paramètre.</param>
      <returns>Nœud cloné.</returns>
    </member>
    <member name="P:System.Xml.XmlCDataSection.LocalName">
      <summary>Obtient le nom local du nœud.</summary>
      <returns>Pour les nœuds CDATA, le nom local est <see langword="#cdata-section" />.</returns>
    </member>
    <member name="P:System.Xml.XmlCDataSection.Name">
      <summary>Obtient le nom qualifié du nœud.</summary>
      <returns>Pour les nœuds CDATA, le nom est <see langword="#cdata-section" />.</returns>
    </member>
    <member name="P:System.Xml.XmlCDataSection.NodeType">
      <summary>Obtient le type du nœud actuel.</summary>
      <returns>Type de nœud. Pour les nœuds CDATA, la valeur est XmlNodeType.CDATA.</returns>
    </member>
    <member name="P:System.Xml.XmlCDataSection.ParentNode">
      <summary>Obtient le parent de ce nœud (pour les nœuds qui peuvent avoir des parents).</summary>
      <returns>
        <see langword="XmlNode" /> correspondant au parent du nœud actif. Si un nœud vient d’être créé mais qu’il n’a pas encore été ajouté à l’arborescence, ou s’il a été supprimé de celle-ci, le parent est <see langword="null" />. Pour tous les autres nœuds, la valeur retournée dépend du <see cref="P:System.Xml.XmlNode.NodeType" /> du nœud. Le tableau suivant décrit les différentes valeurs de retour possibles pour la propriété <see langword="ParentNode" />.</returns>
    </member>
    <member name="P:System.Xml.XmlCDataSection.PreviousText">
      <summary>Obtient le nœud de texte qui précède immédiatement ce nœud.</summary>
      <returns>retourne <see cref="T:System.Xml.XmlNode" /> ;</returns>
    </member>
    <member name="M:System.Xml.XmlCDataSection.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Enregistre les enfants du nœud dans le <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="w">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="M:System.Xml.XmlCDataSection.WriteTo(System.Xml.XmlWriter)">
      <summary>Enregistre le nœud dans le <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="w">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="T:System.Xml.XmlCharacterData">
      <summary>Fournit des méthodes de manipulation de texte utilisées par plusieurs classes.</summary>
    </member>
    <member name="M:System.Xml.XmlCharacterData.#ctor(System.String,System.Xml.XmlDocument)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlCharacterData" />.</summary>
      <param name="data">Chaîne qui contient des données caractères à ajouter au document.</param>
      <param name="doc">
        <see cref="T:System.Xml.XmlDocument" /> pour contenir les données caractères.</param>
    </member>
    <member name="M:System.Xml.XmlCharacterData.AppendData(System.String)">
      <summary>Ajoute la chaîne spécifiée à la fin des données de caractère du nœud.</summary>
      <param name="strData">Chaîne à insérer dans la chaîne existante.</param>
    </member>
    <member name="P:System.Xml.XmlCharacterData.Data">
      <summary>Contient les données du nœud.</summary>
      <returns>Données du nœud.</returns>
    </member>
    <member name="M:System.Xml.XmlCharacterData.DeleteData(System.Int32,System.Int32)">
      <summary>Supprime une plage de caractères du nœud.</summary>
      <param name="offset">Position dans la chaîne à laquelle commencer la suppression.</param>
      <param name="count">Nombre de caractères à supprimer.</param>
    </member>
    <member name="P:System.Xml.XmlCharacterData.InnerText">
      <summary>Obtient ou définit les valeurs concaténées du nœud et de tous ses enfants.</summary>
      <returns>Valeurs concaténées du nœud et de tous ses enfants.</returns>
    </member>
    <member name="M:System.Xml.XmlCharacterData.InsertData(System.Int32,System.String)">
      <summary>Insère la chaîne spécifiée à l'offset du caractère spécifié.</summary>
      <param name="offset">Position dans la chaîne à laquelle insérer les données de type chaîne fournies.</param>
      <param name="strData">Données de type chaîne à insérer dans la chaîne existante.</param>
    </member>
    <member name="P:System.Xml.XmlCharacterData.Length">
      <summary>Obtient la longueur des données, en caractères.</summary>
      <returns>Longueur, en caractères, de la chaîne de la propriété <see cref="P:System.Xml.XmlCharacterData.Data" />. La longueur peut être égale à zéro, c'est-à-dire que les nœuds CharacterData peuvent être vides.</returns>
    </member>
    <member name="M:System.Xml.XmlCharacterData.ReplaceData(System.Int32,System.Int32,System.String)">
      <summary>Remplace le nombre spécifié de caractères en commençant à l'offset spécifié avec la chaîne spécifiée.</summary>
      <param name="offset">Position dans la chaîne à laquelle commencer le remplacement.</param>
      <param name="count">Nombre de caractères à remplacer.</param>
      <param name="strData">Les nouvelles données remplacent les anciennes données de type chaîne.</param>
    </member>
    <member name="M:System.Xml.XmlCharacterData.Substring(System.Int32,System.Int32)">
      <summary>Récupère une sous-chaîne de la chaîne complète à partir de la plage spécifiée.</summary>
      <param name="offset">Position dans la chaîne à laquelle commencer la récupération. Un offset nul indique que la position de départ est le début des données.</param>
      <param name="count">Nombre de caractères à récupérer.</param>
      <returns>Sous-chaîne correspondant à la place spécifiée.</returns>
    </member>
    <member name="P:System.Xml.XmlCharacterData.Value">
      <summary>Obtient ou définit la valeur du nœud.</summary>
      <returns>Valeur du nœud.</returns>
      <exception cref="T:System.ArgumentException">Le nœud est en lecture seule.</exception>
    </member>
    <member name="T:System.Xml.XmlComment">
      <summary>Représente le contenu d'un commentaire XML.</summary>
    </member>
    <member name="M:System.Xml.XmlComment.#ctor(System.String,System.Xml.XmlDocument)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlComment" />.</summary>
      <param name="comment">Contenu de l'élément du commentaire.</param>
      <param name="doc">Document XML parent.</param>
    </member>
    <member name="M:System.Xml.XmlComment.CloneNode(System.Boolean)">
      <summary>Crée un doublon de ce nœud.</summary>
      <param name="deep">
        <see langword="true" /> pour cloner récursivement la sous-arborescence sous le nœud spécifié ; <see langword="false" /> pour cloner seulement le nœud lui-même. Comme les nœuds de commentaires n'ont pas d'enfant, le nœud cloné comporte toujours du texte, quelle que soit la valeur du paramètre.</param>
      <returns>Nœud cloné.</returns>
    </member>
    <member name="P:System.Xml.XmlComment.LocalName">
      <summary>Obtient le nom local du nœud.</summary>
      <returns>Pour les nœuds de commentaire, la valeur est <see langword="#comment" />.</returns>
    </member>
    <member name="P:System.Xml.XmlComment.Name">
      <summary>Obtient le nom qualifié du nœud.</summary>
      <returns>Pour les nœuds de commentaire, la valeur est <see langword="#comment" />.</returns>
    </member>
    <member name="P:System.Xml.XmlComment.NodeType">
      <summary>Obtient le type du nœud actuel.</summary>
      <returns>Pour les nœuds de commentaires, la valeur est XmlNodeType.Comment.</returns>
    </member>
    <member name="M:System.Xml.XmlComment.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Enregistre tous les enfants du nœud dans l’élément <see cref="T:System.Xml.XmlWriter" /> spécifié. Comme les nœuds de commentaires n'ont pas d'enfant, cette méthode reste sans effet.</summary>
      <param name="w">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="M:System.Xml.XmlComment.WriteTo(System.Xml.XmlWriter)">
      <summary>Enregistre le nœud dans le <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="w">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="T:System.Xml.XmlConvert">
      <summary>Encode et décode les noms XML, et fournit des méthodes pour la conversion entre les types Common Language Runtime et les types XSD (XML Schema Definition). Lors de la conversion de types de données, les valeurs retournées sont indépendantes des paramètres régionaux.</summary>
    </member>
    <member name="M:System.Xml.XmlConvert.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlConvert" />.</summary>
    </member>
    <member name="M:System.Xml.XmlConvert.DecodeName(System.String)">
      <summary>Décode un nom. Cette méthode fait le contraire des méthodes <see cref="M:System.Xml.XmlConvert.EncodeName(System.String)" /> et <see cref="M:System.Xml.XmlConvert.EncodeLocalName(System.String)" />.</summary>
      <param name="name">Nom à transformer.</param>
      <returns>Nom décodé.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.EncodeLocalName(System.String)">
      <summary>Convertit le nom en un nom local XML valide.</summary>
      <param name="name">Nom à encoder.</param>
      <returns>Nom encodé.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.EncodeName(System.String)">
      <summary>Convertit le nom en un nom XML valide.</summary>
      <param name="name">Nom à traduire.</param>
      <returns>Nom avec les caractères non valides remplacés par une chaîne d’échappement.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.EncodeNmToken(System.String)">
      <summary>Vérifie que le nom est valide selon la spécification XML.</summary>
      <param name="name">Nom à encoder.</param>
      <returns>Nom encodé.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.IsNCNameChar(System.Char)">
      <summary>Vérifie si le caractère passé est un type de caractère autre que deux-points valide.</summary>
      <param name="ch">Caractère dont il faut vérifier qu'il n'est pas le caractère deux-points.</param>
      <returns>
        <see langword="true" /> si le caractère est un type de caractère valide autre que le caractère deux-points ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.IsPublicIdChar(System.Char)">
      <summary>Retourne l'instance du caractère passé si le caractère de l'argument est un caractère d'ID public valide, sinon <see langword="null" />.</summary>
      <param name="ch">Objet <see cref="T:System.Char" /> à valider.</param>
      <returns>Caractère passé si le caractère est un caractère d’ID public valide, sinon <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.IsStartNCNameChar(System.Char)">
      <summary>Vérifie si le caractère passé est un type de caractère de début de nom valide.</summary>
      <param name="ch">Caractère à valider.</param>
      <returns>
        <see langword="true" /> si le caractère est un type de caractère de début de nom valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.IsWhitespaceChar(System.Char)">
      <summary>Vérifie si le caractère passé est un caractère d'espace XML valide.</summary>
      <param name="ch">Caractère à valider.</param>
      <returns>
        <see langword="true" /> si le caractère passé est un caractère d’espace XML valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.IsXmlChar(System.Char)">
      <summary>Vérifie si le caractère passé est un caractère XML valide.</summary>
      <param name="ch">Caractère à valider.</param>
      <returns>
        <see langword="true" /> si le caractère passé est un caractère XML valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.IsXmlSurrogatePair(System.Char,System.Char)">
      <summary>Vérifie si la paire de caractères de substitution passée est un caractère XML valide.</summary>
      <param name="lowChar">Caractère de substitution à valider.</param>
      <param name="highChar">Caractère de substitution à valider.</param>
      <returns>
        <see langword="true" /> si la paire de caractères de substitution passée est un caractère XML valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToBoolean(System.String)">
      <summary>Convertit la chaîne <see cref="T:System.String" /> en un équivalent <see cref="T:System.Boolean" />.</summary>
      <param name="s">Chaîne à convertir.</param>
      <returns>Valeur <see langword="Boolean" />, c'est-à-dire <see langword="true" /> ou <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> ne représente pas une valeur <see langword="Boolean" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToByte(System.String)">
      <summary>Convertit la chaîne <see cref="T:System.String" /> en un équivalent <see cref="T:System.Byte" />.</summary>
      <param name="s">Chaîne à convertir.</param>
      <returns>Équivalent <see langword="Byte" /> de la chaîne.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">Le format de <paramref name="s" /> est incorrect.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> représente un nombre inférieur à <see cref="F:System.Byte.MinValue" /> ou supérieur à <see cref="F:System.Byte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToChar(System.String)">
      <summary>Convertit la chaîne <see cref="T:System.String" /> en un équivalent <see cref="T:System.Char" />.</summary>
      <param name="s">Chaîne contenant un seul caractère à convertir.</param>
      <returns>
        <see langword="Char" /> représentant le caractère unique.</returns>
      <exception cref="T:System.ArgumentNullException">La valeur du paramètre <paramref name="s" /> est <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">Le paramètre <paramref name="s" /> contient plusieurs caractères.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTime(System.String)">
      <summary>Convertit la chaîne <see cref="T:System.String" /> en un équivalent <see cref="T:System.DateTime" />.</summary>
      <param name="s">Chaîne à convertir.</param>
      <returns>Équivalent <see langword="DateTime" /> de la chaîne.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> est une chaîne vide et n'est pas dans le format approprié.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTime(System.String,System.String)">
      <summary>Convertit la chaîne <see cref="T:System.String" /> en un équivalent <see cref="T:System.DateTime" />.</summary>
      <param name="s">Chaîne à convertir.</param>
      <param name="format">Structure du format à appliquer à l'élément <see langword="DateTime" /> converti. Les formats valides sont "yyyy-MM-ddTHH:mm:sszzzzzz" et ses sous-ensembles. La chaîne est validée par rapport à ce format.</param>
      <returns>Équivalent <see langword="DateTime" /> de la chaîne.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> ou <paramref name="format" /> est String.Empty 

ou - 
<paramref name="s" /> ne contient aucune date ou heure correspondant à <paramref name="format" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTime(System.String,System.String[])">
      <summary>Convertit la chaîne <see cref="T:System.String" /> en un équivalent <see cref="T:System.DateTime" />.</summary>
      <param name="s">Chaîne à convertir.</param>
      <param name="formats">Tableau contenant les structures du format à appliquer à l'élément <see langword="DateTime" /> converti. Les formats valides sont "yyyy-MM-ddTHH:mm:sszzzzzz" et ses sous-ensembles.</param>
      <returns>Équivalent <see langword="DateTime" /> de la chaîne.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> est <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> ou un élément de <paramref name="formats" /> est String.Empty 
ou 
 <paramref name="s" /> ne contient aucune date ou heure correspondant à un élément de <paramref name="formats" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTime(System.String,System.Xml.XmlDateTimeSerializationMode)">
      <summary>Convertit la chaîne <see cref="T:System.String" /> en un élément <see cref="T:System.DateTime" /> en utilisant le mode <see cref="T:System.Xml.XmlDateTimeSerializationMode" /> spécifié.</summary>
      <param name="s">Valeur <see cref="T:System.String" /> à convertir.</param>
      <param name="dateTimeOption">Une des valeurs d’énumération qui spécifient si la date doit être convertie en heure locale ou conservée en temps UTC, s’il s’agit d’une date UTC.</param>
      <returns>Équivalent <see cref="T:System.DateTime" /> de l'élément <see cref="T:System.String" />.</returns>
      <exception cref="T:System.NullReferenceException">
        <paramref name="s" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dateTimeOption" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> est une chaîne vide ou n'est pas dans un format valide.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String)">
      <summary>Convertit la chaîne <see cref="T:System.String" /> fournie en un équivalent <see cref="T:System.DateTimeOffset" />.</summary>
      <param name="s">Chaîne à convertir.  
 Remarque La chaîne doit être conforme à une partie de la recommandation du W3C sur le type XML dateTime. Pour plus d’informations, consultez la section dateTime de la spécification XML Schema.</param>
      <returns>Équivalent <see cref="T:System.DateTimeOffset" /> de la chaîne fournie.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">L'argument passé à cette méthode se trouve en dehors de la plage de valeurs autorisées. Pour plus d'informations sur les valeurs autorisées, consultez <see cref="T:System.DateTimeOffset" />.</exception>
      <exception cref="T:System.FormatException">L'argument passé à cette méthode n'est pas conforme à un sous-ensemble de recommandations du W3C sur le type XML dateTime. Pour plus d’informations, consultez la section dateTime de la spécification XML Schema.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String)">
      <summary>Convertit la chaîne <see cref="T:System.String" /> fournie en un équivalent <see cref="T:System.DateTimeOffset" />.</summary>
      <param name="s">Chaîne à convertir.</param>
      <param name="format">Format à partir duquel <paramref name="s" /> est convertie. Le paramètre de format peut correspondre à un sous-ensemble de recommandations du W3C pour le type XML dateTime. (Pour plus d’informations, consultez la section dateTime de la spécification XML Schema.) La chaîne <paramref name="s" /> est validée par rapport à ce format.</param>
      <returns>Équivalent <see cref="T:System.DateTimeOffset" /> de la chaîne fournie.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> ou <paramref name="format" /> est une chaîne vide et n'est pas dans le format spécifié.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String[])">
      <summary>Convertit la chaîne <see cref="T:System.String" /> fournie en un équivalent <see cref="T:System.DateTimeOffset" />.</summary>
      <param name="s">Chaîne à convertir.</param>
      <param name="formats">Tableau de formats à partir duquel <paramref name="s" /> peut être convertie. Chaque format figurant dans <paramref name="formats" /> peut correspondre à un des sous-ensembles de la recommandation W3C pour le type XML dateTime. (Pour plus d’informations, consultez la section dateTime de la spécification XML Schema.) La chaîne <paramref name="s" /> est validée par rapport à l'un de ces formats.</param>
      <returns>Équivalent <see cref="T:System.DateTimeOffset" /> de la chaîne fournie.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDecimal(System.String)">
      <summary>Convertit la chaîne <see cref="T:System.String" /> en un équivalent <see cref="T:System.Decimal" />.</summary>
      <param name="s">Chaîne à convertir.</param>
      <returns>Équivalent <see langword="Decimal" /> de la chaîne.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">Le format de <paramref name="s" /> est incorrect.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> représente un nombre inférieur à <see cref="F:System.Decimal.MinValue" /> ou supérieur à <see cref="F:System.Decimal.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDouble(System.String)">
      <summary>Convertit la chaîne <see cref="T:System.String" /> en un équivalent <see cref="T:System.Double" />.</summary>
      <param name="s">Chaîne à convertir.</param>
      <returns>Équivalent <see langword="Double" /> de la chaîne.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> est <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">Le format de <paramref name="s" /> est incorrect.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> représente un nombre inférieur à <see cref="F:System.Double.MinValue" /> ou supérieur à <see cref="F:System.Double.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToGuid(System.String)">
      <summary>Convertit la chaîne <see cref="T:System.String" /> en un équivalent <see cref="T:System.Guid" />.</summary>
      <param name="s">Chaîne à convertir.</param>
      <returns>Équivalent <see langword="Guid" /> de la chaîne.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToInt16(System.String)">
      <summary>Convertit la chaîne <see cref="T:System.String" /> en un équivalent <see cref="T:System.Int16" />.</summary>
      <param name="s">Chaîne à convertir.</param>
      <returns>Équivalent <see langword="Int16" /> de la chaîne.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">Le format de <paramref name="s" /> est incorrect.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> représente un nombre inférieur à <see cref="F:System.Int16.MinValue" /> ou supérieur à <see cref="F:System.Int16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToInt32(System.String)">
      <summary>Convertit la chaîne <see cref="T:System.String" /> en un équivalent <see cref="T:System.Int32" />.</summary>
      <param name="s">Chaîne à convertir.</param>
      <returns>Équivalent <see langword="Int32" /> de la chaîne.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> est <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">Le format de <paramref name="s" /> est incorrect.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> représente un nombre inférieur à <see cref="F:System.Int32.MinValue" /> ou supérieur à <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToInt64(System.String)">
      <summary>Convertit la chaîne <see cref="T:System.String" /> en un équivalent <see cref="T:System.Int64" />.</summary>
      <param name="s">Chaîne à convertir.</param>
      <returns>Équivalent <see langword="Int64" /> de la chaîne.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> est <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">Le format de <paramref name="s" /> est incorrect.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> représente un nombre inférieur à <see cref="F:System.Int64.MinValue" /> ou supérieur à <see cref="F:System.Int64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToSByte(System.String)">
      <summary>Convertit la chaîne <see cref="T:System.String" /> en un équivalent <see cref="T:System.SByte" />.</summary>
      <param name="s">Chaîne à convertir.</param>
      <returns>Équivalent <see langword="SByte" /> de la chaîne.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">Le format de <paramref name="s" /> est incorrect.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> représente un nombre inférieur à <see cref="F:System.SByte.MinValue" /> ou supérieur à <see cref="F:System.SByte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToSingle(System.String)">
      <summary>Convertit la chaîne <see cref="T:System.String" /> en un équivalent <see cref="T:System.Single" />.</summary>
      <param name="s">Chaîne à convertir.</param>
      <returns>Équivalent <see langword="Single" /> de la chaîne.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> est <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">Le format de <paramref name="s" /> est incorrect.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> représente un nombre inférieur à <see cref="F:System.Single.MinValue" /> ou supérieur à <see cref="F:System.Single.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Boolean)">
      <summary>Convertit le <see cref="T:System.Boolean" /> en <see cref="T:System.String" />.</summary>
      <param name="value">Valeur à convertir.</param>
      <returns>Une représentation sous forme de chaîne de l'élément <see langword="Boolean" />, c'est-à-dire "true" ou "false".</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Byte)">
      <summary>Convertit le <see cref="T:System.Byte" /> en <see cref="T:System.String" />.</summary>
      <param name="value">Valeur à convertir.</param>
      <returns>Représentation sous forme de chaîne de <see langword="Byte" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Char)">
      <summary>Convertit le <see cref="T:System.Char" /> en <see cref="T:System.String" />.</summary>
      <param name="value">Valeur à convertir.</param>
      <returns>Représentation sous forme de chaîne de <see langword="Char" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTime)">
      <summary>Convertit le <see cref="T:System.DateTime" /> en <see cref="T:System.String" />.</summary>
      <param name="value">Valeur à convertir.</param>
      <returns>Représentation sous forme de chaîne de <see langword="DateTime" /> au format yyyy-MM-ddTHH:mm:ss, où 'T' est une constante littérale.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTime,System.String)">
      <summary>Convertit le <see cref="T:System.DateTime" /> en <see cref="T:System.String" />.</summary>
      <param name="value">Valeur à convertir.</param>
      <param name="format">Structure du format qui définit comment afficher la chaîne convertie. Les formats valides sont "yyyy-MM-ddTHH:mm:sszzzzzz" et ses sous-ensembles.</param>
      <returns>Représentation sous forme de chaîne de <see langword="DateTime" /> au format spécifié.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTime,System.Xml.XmlDateTimeSerializationMode)">
      <summary>Convertit l'élément <see cref="T:System.DateTime" /> en une chaîne <see cref="T:System.String" /> en utilisant le mode <see cref="T:System.Xml.XmlDateTimeSerializationMode" /> spécifié.</summary>
      <param name="value">Valeur <see cref="T:System.DateTime" /> à convertir.</param>
      <param name="dateTimeOption">Une des valeurs de <see cref="T:System.Xml.XmlDateTimeSerializationMode" /> qui spécifient comment traiter la valeur <see cref="T:System.DateTime" />.</param>
      <returns>Équivalent <see cref="T:System.String" /> de l'élément <see cref="T:System.DateTime" />.</returns>
      <exception cref="T:System.ArgumentException">La valeur <paramref name="dateTimeOption" /> n'est pas valide.</exception>
      <exception cref="T:System.ArgumentNullException">La valeur de <paramref name="value" /> ou de <paramref name="dateTimeOption" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTimeOffset)">
      <summary>Convertit l'élément <see cref="T:System.DateTimeOffset" /> fourni en une chaîne <see cref="T:System.String" />.</summary>
      <param name="value">
        <see cref="T:System.DateTimeOffset" /> à convertir.</param>
      <returns>Représentation <see cref="T:System.String" /> de l'élément <see cref="T:System.DateTimeOffset" /> fourni.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTimeOffset,System.String)">
      <summary>Convertit l'élément <see cref="T:System.DateTimeOffset" /> fourni en une chaîne <see cref="T:System.String" /> dans le format spécifié.</summary>
      <param name="value">
        <see cref="T:System.DateTimeOffset" /> à convertir.</param>
      <param name="format">Format vers lequel <paramref name="s" /> est convertie. Le paramètre de format peut correspondre à un sous-ensemble de recommandations du W3C pour le type XML dateTime. (Pour plus d’informations, consultez la section dateTime de la spécification XML Schema.)</param>
      <returns>Représentation <see cref="T:System.String" /> dans le format spécifié de l'élément <see cref="T:System.DateTimeOffset" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Decimal)">
      <summary>Convertit le <see cref="T:System.Decimal" /> en <see cref="T:System.String" />.</summary>
      <param name="value">Valeur à convertir.</param>
      <returns>Représentation sous forme de chaîne de <see langword="Decimal" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Double)">
      <summary>Convertit le <see cref="T:System.Double" /> en <see cref="T:System.String" />.</summary>
      <param name="value">Valeur à convertir.</param>
      <returns>Représentation sous forme de chaîne de <see langword="Double" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Guid)">
      <summary>Convertit le <see cref="T:System.Guid" /> en <see cref="T:System.String" />.</summary>
      <param name="value">Valeur à convertir.</param>
      <returns>Représentation sous forme de chaîne de <see langword="Guid" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Int16)">
      <summary>Convertit le <see cref="T:System.Int16" /> en <see cref="T:System.String" />.</summary>
      <param name="value">Valeur à convertir.</param>
      <returns>Représentation sous forme de chaîne de <see langword="Int16" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Int32)">
      <summary>Convertit le <see cref="T:System.Int32" /> en <see cref="T:System.String" />.</summary>
      <param name="value">Valeur à convertir.</param>
      <returns>Représentation sous forme de chaîne de <see langword="Int32" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Int64)">
      <summary>Convertit le <see cref="T:System.Int64" /> en <see cref="T:System.String" />.</summary>
      <param name="value">Valeur à convertir.</param>
      <returns>Représentation sous forme de chaîne de <see langword="Int64" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.SByte)">
      <summary>Convertit le <see cref="T:System.SByte" /> en <see cref="T:System.String" />.</summary>
      <param name="value">Valeur à convertir.</param>
      <returns>Représentation sous forme de chaîne de <see langword="SByte" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Single)">
      <summary>Convertit le <see cref="T:System.Single" /> en <see cref="T:System.String" />.</summary>
      <param name="value">Valeur à convertir.</param>
      <returns>Représentation sous forme de chaîne de <see langword="Single" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.TimeSpan)">
      <summary>Convertit le <see cref="T:System.TimeSpan" /> en <see cref="T:System.String" />.</summary>
      <param name="value">Valeur à convertir.</param>
      <returns>Représentation sous forme de chaîne de <see langword="TimeSpan" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.UInt16)">
      <summary>Convertit le <see cref="T:System.UInt16" /> en <see cref="T:System.String" />.</summary>
      <param name="value">Valeur à convertir.</param>
      <returns>Représentation sous forme de chaîne de <see langword="UInt16" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.UInt32)">
      <summary>Convertit le <see cref="T:System.UInt32" /> en <see cref="T:System.String" />.</summary>
      <param name="value">Valeur à convertir.</param>
      <returns>Représentation sous forme de chaîne de <see langword="UInt32" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.UInt64)">
      <summary>Convertit le <see cref="T:System.UInt64" /> en <see cref="T:System.String" />.</summary>
      <param name="value">Valeur à convertir.</param>
      <returns>Représentation sous forme de chaîne de <see langword="UInt64" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToTimeSpan(System.String)">
      <summary>Convertit la chaîne <see cref="T:System.String" /> en un équivalent <see cref="T:System.TimeSpan" />.</summary>
      <param name="s">Chaîne à convertir. Le format de chaîne doit être conforme à la recommandation W3C XML intitulée Schema Part 2: Datatypes pour les durées.</param>
      <returns>Équivalent <see langword="TimeSpan" /> de la chaîne.</returns>
      <exception cref="T:System.FormatException">Le format de <paramref name="s" /> est incorrect pour représenter une valeur <see langword="TimeSpan" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToUInt16(System.String)">
      <summary>Convertit la chaîne <see cref="T:System.String" /> en un équivalent <see cref="T:System.UInt16" />.</summary>
      <param name="s">Chaîne à convertir.</param>
      <returns>Équivalent <see langword="UInt16" /> de la chaîne.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> est <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">Le format de <paramref name="s" /> est incorrect.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> représente un nombre inférieur à <see cref="F:System.UInt16.MinValue" /> ou supérieur à <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToUInt32(System.String)">
      <summary>Convertit la chaîne <see cref="T:System.String" /> en un équivalent <see cref="T:System.UInt32" />.</summary>
      <param name="s">Chaîne à convertir.</param>
      <returns>Équivalent <see langword="UInt32" /> de la chaîne.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">Le format de <paramref name="s" /> est incorrect.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> représente un nombre inférieur à <see cref="F:System.UInt32.MinValue" /> ou supérieur à <see cref="F:System.UInt32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToUInt64(System.String)">
      <summary>Convertit la chaîne <see cref="T:System.String" /> en un équivalent <see cref="T:System.UInt64" />.</summary>
      <param name="s">Chaîne à convertir.</param>
      <returns>Équivalent <see langword="UInt64" /> de la chaîne.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> est <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">Le format de <paramref name="s" /> est incorrect.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> représente un nombre inférieur à <see cref="F:System.UInt64.MinValue" /> ou supérieur à <see cref="F:System.UInt64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyName(System.String)">
      <summary>Vérifie que le nom est un nom valide selon la recommandation W3C XML (Extended Markup Language).</summary>
      <param name="name">Nom à vérifier.</param>
      <returns>Le nom, s'il s'agit d'un nom XML valide.</returns>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="name" /> n'est pas un nom XML valide.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> est <see langword="null" /> ou String.Empty.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyNCName(System.String)">
      <summary>Vérifie que le nom est un <see langword="NCName" /> valide selon la recommandation W3C XML (Extended Markup Language). Un élément <see langword="NCName" /> est un nom qui ne peut pas contenir un signe deux-points.</summary>
      <param name="name">Nom à vérifier.</param>
      <returns>Le nom, s'il s'agit d'un NCName valide.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> est <see langword="null" /> ou <c>String.Empty</c>.</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="name" /> n'est pas un nom non deux points valide.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyNMTOKEN(System.String)">
      <summary>Vérifie que la chaîne est un NMTOKEN valide conformément à la recommandation W3C XML intitulée Schema Part2: Datatypes.</summary>
      <param name="name">Chaîne à vérifier.</param>
      <returns>Jeton de nom, s'il s'agit d'un NMTOKEN valide.</returns>
      <exception cref="T:System.Xml.XmlException">La chaîne n'est pas un jeton de nom valide.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyPublicId(System.String)">
      <summary>Retourne l’instance de chaîne passée si tous les caractères de l’argument de chaîne sont des caractères d’ID publics valides.</summary>
      <param name="publicId">
        <see cref="T:System.String" /> qui contient l'ID à valider.</param>
      <returns>Chaîne passée si tous les caractères de l’argument sont des caractères d’ID publics valides.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyTOKEN(System.String)">
      <summary>Vérifie que la chaîne est un jeton valide conformément à la recommandation W3C XML intitulée Schema Part2: Datatypes.</summary>
      <param name="token">Valeur de chaîne à vérifier.</param>
      <returns>Jeton, s'il s'agit d'un jeton valide.</returns>
      <exception cref="T:System.Xml.XmlException">La valeur de chaîne n'est pas un jeton valide.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyWhitespace(System.String)">
      <summary>Retourne l'instance de chaîne passée si tous les caractères de l'argument de chaîne sont des caractères d'espace valides.</summary>
      <param name="content">
        <see cref="T:System.String" /> à vérifier.</param>
      <returns>Instance de chaîne passée si tous les caractères de l’argument de chaîne sont des caractères d’espace valides, sinon <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyXmlChars(System.String)">
      <summary>Retourne les caractères de la chaîne passée si tous les caractères et caractères de la paire de substitution de l'argument de chaîne sont des caractères XML valides, sinon une exception <see langword="XmlException" /> est levée avec des informations relatives au premier caractère non valide rencontré.</summary>
      <param name="content">Chaîne <see cref="T:System.String" /> qui contient les caractères à vérifier.</param>
      <returns>Caractères de la chaîne passée si tous les caractères et caractères de la paire de substitution de l’argument de chaîne sont des caractères XML valides, sinon une exception <see langword="XmlException" /> est levée avec des informations relatives au premier caractère non valide rencontré.</returns>
    </member>
    <member name="T:System.Xml.XmlDateTimeSerializationMode">
      <summary>Spécifie la façon de traiter la valeur d'heure lors de la conversion entre chaîne et <see cref="T:System.DateTime" />.</summary>
    </member>
    <member name="F:System.Xml.XmlDateTimeSerializationMode.Local">
      <summary>Traiter en tant qu'heure locale. Si l'objet <see cref="T:System.DateTime" /> représente une heure UTC (Universal Time Coordinates), il est converti en heure locale.</summary>
    </member>
    <member name="F:System.Xml.XmlDateTimeSerializationMode.RoundtripKind">
      <summary>Les informations relatives au fuseau horaire doivent être conservées lors de la conversion.</summary>
    </member>
    <member name="F:System.Xml.XmlDateTimeSerializationMode.Unspecified">
      <summary>Traiter en tant qu'heure locale si un <see cref="T:System.DateTime" /> est converti en chaîne. Si une chaîne est convertie en <see cref="T:System.DateTime" />, convertissez-la en heure locale si un fuseau horaire est spécifié.</summary>
    </member>
    <member name="F:System.Xml.XmlDateTimeSerializationMode.Utc">
      <summary>Traiter en tant qu'heure UTC. Si l'objet <see cref="T:System.DateTime" /> représente une heure locale, il est converti en UTC.</summary>
    </member>
    <member name="T:System.Xml.XmlDeclaration">
      <summary>Représente le nœud de déclaration XML &lt;?xml version='1.0'...?&gt;.</summary>
    </member>
    <member name="M:System.Xml.XmlDeclaration.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlDeclaration" />.</summary>
      <param name="version">Version XML ; consultez la propriété <see cref="P:System.Xml.XmlDeclaration.Version" />.</param>
      <param name="encoding">Schéma d'encodage ; consultez la propriété <see cref="P:System.Xml.XmlDeclaration.Encoding" />.</param>
      <param name="standalone">Indique si le document XML dépend d'un DTD externe ; consultez la propriété <see cref="P:System.Xml.XmlDeclaration.Standalone" />.</param>
      <param name="doc">Document XML parent.</param>
    </member>
    <member name="M:System.Xml.XmlDeclaration.CloneNode(System.Boolean)">
      <summary>Crée un doublon de ce nœud.</summary>
      <param name="deep">
        <see langword="true" /> pour cloner récursivement la sous-arborescence sous le nœud spécifié ; <see langword="false" /> pour cloner seulement le nœud lui-même. Comme les nœuds <see langword="XmlDeclaration" /> n'ont pas d'enfant, le nœud cloné comporte toujours la valeur des données, quelle que soit la valeur du paramètre.</param>
      <returns>Nœud cloné.</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.Encoding">
      <summary>Obtient ou définit le niveau d'encodage du document XML.</summary>
      <returns>Nom d'encodage de caractères valide. Les noms d'encodages de caractères les plus couramment pris en charge pour XML sont les suivants :  
  Category  

  Noms d'encodages  

  Unicode  

  UTF-8, UTF-16  

  ISO 10646  

  ISO-10646-UCS-2, ISO-10646-UCS-4  

  ISO 8859  

  ISO-8859-n (où « n » correspond à un nombre compris entre 1 et 9)  

  JIS X-0208-1997  

  ISO-2022-JP, Shift_JIS, EUC-JP  

   

 Cette valeur est facultative. Si aucune valeur n'est définie, cette propriété retourne alors String.Empty.  
Si aucun attribut d'encodage n'est inclus, l'encodage admis par défaut lors de l'écriture ou de l'enregistrement du document est alors UTF-8.</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.InnerText">
      <summary>Obtient ou définit les valeurs concaténées de <see langword="XmlDeclaration" />.</summary>
      <returns>Les valeurs concaténées du <see langword="XmlDeclaration" /> (autrement dit, tout le contenu entre <c>&lt;? xml</c> et <c>?&gt;</c>).</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.LocalName">
      <summary>Obtient le nom local du nœud.</summary>
      <returns>Pour les nœuds <see langword="XmlDeclaration" />, le nom local est <see langword="xml" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.Name">
      <summary>Obtient le nom qualifié du nœud.</summary>
      <returns>Pour les nœuds <see langword="XmlDeclaration" />, le nom est <see langword="xml" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.NodeType">
      <summary>Obtient le type du nœud actuel.</summary>
      <returns>Pour les nœuds <see langword="XmlDeclaration" />, cette valeur est XmlNodeType.XmlDeclaration.</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.Standalone">
      <summary>Obtient ou définit la valeur de l'attribut autonome.</summary>
      <returns>Les valeurs valides sont <see langword="yes" /> si toutes les déclarations requises par le document XML sont contenues dans le document, ou <see langword="no" /> si une définition de type de document (DTD) externe est requise. Si aucun attribut autonome ne figure dans la déclaration XML, cette propriété retourne alors String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.Value">
      <summary>Obtient ou définit la valeur du <see langword="XmlDeclaration" />.</summary>
      <returns>Le contenu de la <see langword="XmlDeclaration" /> (autrement dit, tout le contenu entre <c>&lt;? xml</c> et <c>?&gt;</c>).</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.Version">
      <summary>Obtient la version XML du document.</summary>
      <returns>La valeur est toujours <see langword="1.0" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDeclaration.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Enregistre les enfants du nœud dans le <see cref="T:System.Xml.XmlWriter" /> spécifié. Étant donné que les nœuds <see langword="XmlDeclaration" /> n'ont pas d'enfants, cette méthode est sans effet.</summary>
      <param name="w">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="M:System.Xml.XmlDeclaration.WriteTo(System.Xml.XmlWriter)">
      <summary>Enregistre le nœud dans le <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="w">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="T:System.Xml.XmlDocument">
      <summary>Représente un document XML. Vous pouvez utiliser cette classe pour charger, valider, modifier, ajouter et positionner du contenu XML dans un document.</summary>
    </member>
    <member name="M:System.Xml.XmlDocument.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlDocument" />.</summary>
    </member>
    <member name="M:System.Xml.XmlDocument.#ctor(System.Xml.XmlImplementation)">
      <summary>Initialise une nouvelle instance de la classe <see langword="XmlDocument" /> avec le <see cref="T:System.Xml.XmlImplementation" /> spécifié.</summary>
      <param name="imp">
        <see langword="XmlImplementation" /> à utiliser.</param>
    </member>
    <member name="M:System.Xml.XmlDocument.#ctor(System.Xml.XmlNameTable)">
      <summary>Initialise une nouvelle instance de la classe <see langword="XmlDocument" /> avec le <see cref="T:System.Xml.XmlNameTable" /> spécifié.</summary>
      <param name="nt">
        <see langword="XmlNameTable" /> à utiliser.</param>
    </member>
    <member name="P:System.Xml.XmlDocument.BaseURI">
      <summary>Obtient l'URI de base du nœud actuel.</summary>
      <returns>Emplacement à partir duquel le nœud a été chargé.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CloneNode(System.Boolean)">
      <summary>Crée un doublon de ce nœud.</summary>
      <param name="deep">
        <see langword="true" /> pour cloner récursivement la sous-arborescence sous le nœud spécifié ; <see langword="false" /> pour cloner seulement le nœud lui-même.</param>
      <returns>Le nœud <see langword="XmlDocument" /> cloné.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateAttribute(System.String)">
      <summary>Crée un élément <see cref="T:System.Xml.XmlAttribute" /> avec la valeur <see cref="P:System.Xml.XmlDocument.Name" /> spécifiée.</summary>
      <param name="name">Nom qualifié de l'attribut. Si le nom contient un signe deux-points, la propriété <see cref="P:System.Xml.XmlNode.Prefix" /> reflète la partie du nom qui précède le premier signe deux-points, et la propriété <see cref="P:System.Xml.XmlDocument.LocalName" /> reflète la partie du nom qui suit le premier signe deux-points. L'élément <see cref="P:System.Xml.XmlNode.NamespaceURI" /> reste vide sauf si le préfixe est un préfixe intégré reconnu, comme xmlns. Dans ce cas, <see langword="NamespaceURI" /> a la valeur <c></c>.</param>
      <returns>Nouvelle <see langword="XmlAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateAttribute(System.String,System.String)">
      <summary>Crée un élément <see cref="T:System.Xml.XmlAttribute" /> avec le nom qualifié et l'élément <see cref="P:System.Xml.XmlNode.NamespaceURI" /> spécifiés.</summary>
      <param name="qualifiedName">Nom qualifié de l'attribut. Si le nom contient un signe deux-points, la propriété <see cref="P:System.Xml.XmlNode.Prefix" /> reflète la partie du nom qui précède le signe deux-points et la propriété <see cref="P:System.Xml.XmlDocument.LocalName" /> reflète la partie du nom qui suit le signe deux-points.</param>
      <param name="namespaceURI">URI de l'espace de noms de l'attribut. Si le nom qualifié comprend un préfixe xmlns, ce paramètre doit être <c></c>.</param>
      <returns>Nouvelle <see langword="XmlAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateAttribute(System.String,System.String,System.String)">
      <summary>Crée un élément <see cref="T:System.Xml.XmlAttribute" /> avec les éléments <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.LocalName" /> et <see cref="P:System.Xml.XmlNode.NamespaceURI" /> spécifiés.</summary>
      <param name="prefix">Préfixe de l'attribut (le cas échéant). String.Empty et <see langword="null" /> sont équivalents.</param>
      <param name="localName">Le nom local de l'attribut.</param>
      <param name="namespaceURI">URI de l'espace de noms de l'attribut (le cas échéant). String.Empty et <see langword="null" /> sont équivalents. Si <paramref name="prefix" /> est xmlns, ce paramètre doit être <c></c> ; sinon, une exception est levée.</param>
      <returns>Nouvelle <see langword="XmlAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateCDataSection(System.String)">
      <summary>Crée un élément <see cref="T:System.Xml.XmlCDataSection" /> contenant les données spécifiées.</summary>
      <param name="data">Contenu du nouvel élément <see langword="XmlCDataSection" />.</param>
      <returns>Nouvelle <see langword="XmlCDataSection" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateComment(System.String)">
      <summary>Crée un élément <see cref="T:System.Xml.XmlComment" /> contenant les données spécifiées.</summary>
      <param name="data">Contenu du nouvel élément <see langword="XmlComment" />.</param>
      <returns>Nouvelle <see langword="XmlComment" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateDefaultAttribute(System.String,System.String,System.String)">
      <summary>Crée un attribut par défaut avec le préfixe, le nom local et l'URI de l'espace de noms spécifiés.</summary>
      <param name="prefix">Préfixe de l'attribut (le cas échéant).</param>
      <param name="localName">Le nom local de l'attribut.</param>
      <param name="namespaceURI">URI de l'espace de noms de l'attribut (le cas échéant).</param>
      <returns>Nouvelle <see cref="T:System.Xml.XmlAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateDocumentFragment">
      <summary>Crée un objet <see cref="T:System.Xml.XmlDocumentFragment" />.</summary>
      <returns>Nouvelle <see langword="XmlDocumentFragment" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateDocumentType(System.String,System.String,System.String,System.String)">
      <summary>Retourne un nouvel objet <see cref="T:System.Xml.XmlDocumentType" />.</summary>
      <param name="name">Nom du type de document.</param>
      <param name="publicId">Identificateur public du type de document ou <see langword="null" />. Vous pouvez spécifier un URI public ainsi qu'un identificateur de système pour identifier l'emplacement du sous-ensemble DTD externe.</param>
      <param name="systemId">Identificateur système du type de document ou <see langword="null" />. Spécifie l'URL de l'emplacement de fichier pour le sous-ensemble DTD externe.</param>
      <param name="internalSubset">Sous-ensemble interne du DTD du type de document ou <see langword="null" />.</param>
      <returns>Nouvelle <see langword="XmlDocumentType" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateElement(System.String)">
      <summary>Crée un élément avec le nom spécifié.</summary>
      <param name="name">Nom qualifié de l'élément. Si le nom contient un signe deux-points, la propriété <see cref="P:System.Xml.XmlNode.Prefix" /> reflète la partie du nom qui précède le signe deux-points et la propriété <see cref="P:System.Xml.XmlDocument.LocalName" /> reflète la partie du nom qui suit le signe deux-points. Le nom qualifié ne peut pas contenir le préfixe « xmlns ».</param>
      <returns>Nouvelle <see langword="XmlElement" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateElement(System.String,System.String)">
      <summary>Crée un élément <see cref="T:System.Xml.XmlElement" /> avec le nom qualifié et l'élément <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</summary>
      <param name="qualifiedName">Nom qualifié de l'élément. Si le nom contient un signe deux-points, la propriété <see cref="P:System.Xml.XmlNode.Prefix" /> reflète la partie du nom qui précède le signe deux-points et la propriété <see cref="P:System.Xml.XmlDocument.LocalName" /> reflète la partie du nom qui suit le signe deux-points. Le nom qualifié ne peut pas contenir le préfixe « xmlns ».</param>
      <param name="namespaceURI">L'URI de l'espace de noms de l'élément.</param>
      <returns>Nouvelle <see langword="XmlElement" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateElement(System.String,System.String,System.String)">
      <summary>Crée un élément avec les éléments <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.LocalName" /> et <see cref="P:System.Xml.XmlNode.NamespaceURI" /> spécifiés.</summary>
      <param name="prefix">Préfixe du nouvel élément (le cas échéant). String.Empty et <see langword="null" /> sont équivalents.</param>
      <param name="localName">Le nom local du nouvel élément.</param>
      <param name="namespaceURI">URI de l'espace de noms du nouvel élément (le cas échéant). String.Empty et <see langword="null" /> sont équivalents.</param>
      <returns>Nouvelle <see cref="T:System.Xml.XmlElement" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateEntityReference(System.String)">
      <summary>Crée un élément <see cref="T:System.Xml.XmlEntityReference" /> avec le nom spécifié.</summary>
      <param name="name">Nom de la référence d'entité.</param>
      <returns>Nouvelle <see langword="XmlEntityReference" />.</returns>
      <exception cref="T:System.ArgumentException">Le nom n’est pas valide (par exemple, les noms commençant par « # » ne sont pas valides).</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateNavigator">
      <summary>Crée un objet <see cref="T:System.Xml.XPath.XPathNavigator" /> pour naviguer dans ce document.</summary>
      <returns>Objet <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateNavigator(System.Xml.XmlNode)">
      <summary>Crée un objet <see cref="T:System.Xml.XPath.XPathNavigator" /> pour naviguer dans ce document, positionné sur l'élément <see cref="T:System.Xml.XmlNode" /> spécifié.</summary>
      <param name="node">Élément <see cref="T:System.Xml.XmlNode" /> sur lequel vous voulez que le navigateur soit initialement positionné.</param>
      <returns>Objet <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateNode(System.String,System.String,System.String)">
      <summary>Crée un élément <see cref="T:System.Xml.XmlNode" /> avec le type de nœud, l'élément <see cref="P:System.Xml.XmlDocument.Name" /> et l'élément <see cref="P:System.Xml.XmlNode.NamespaceURI" /> spécifiés.</summary>
      <param name="nodeTypeString">Version au format chaîne de l'élément <see cref="T:System.Xml.XmlNodeType" /> du nouveau nœud. Ce paramètre doit prendre l'une des valeurs répertoriées dans le tableau suivant.</param>
      <param name="name">Nom qualifié du nouveau nœud. Si le nom contient un signe deux-points, il est analysé en deux composants : <see cref="P:System.Xml.XmlNode.Prefix" /> et <see cref="P:System.Xml.XmlDocument.LocalName" />.</param>
      <param name="namespaceURI">L'URI de l'espace de noms du nouveau nœud.</param>
      <returns>Nouvelle <see langword="XmlNode" />.</returns>
      <exception cref="T:System.ArgumentException">Le nom n’a pas été fourni alors que <see langword="XmlNodeType" /> requiert un nom, ou <paramref name="nodeTypeString" /> ne figure pas parmi les chaînes répertoriées ci-dessous.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateNode(System.Xml.XmlNodeType,System.String,System.String)">
      <summary>Crée un élément <see cref="T:System.Xml.XmlNode" /> avec les éléments <see cref="T:System.Xml.XmlNodeType" />, <see cref="P:System.Xml.XmlDocument.Name" /> et <see cref="P:System.Xml.XmlNode.NamespaceURI" /> spécifiés.</summary>
      <param name="type">
        <see langword="XmlNodeType" /> du nouveau nœud.</param>
      <param name="name">Nom qualifié du nouveau nœud. Si le nom contient un signe deux-points, il est analysé en deux composants : <see cref="P:System.Xml.XmlNode.Prefix" /> et <see cref="P:System.Xml.XmlDocument.LocalName" />.</param>
      <param name="namespaceURI">L'URI de l'espace de noms du nouveau nœud.</param>
      <returns>Nouvelle <see langword="XmlNode" />.</returns>
      <exception cref="T:System.ArgumentException">Le nom n’a pas été fourni alors que <see langword="XmlNodeType" /> requiert un nom.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateNode(System.Xml.XmlNodeType,System.String,System.String,System.String)">
      <summary>Crée un élément <see cref="T:System.Xml.XmlNode" /> avec les éléments <see cref="T:System.Xml.XmlNodeType" />, <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.Name" /> et <see cref="P:System.Xml.XmlNode.NamespaceURI" /> spécifiés.</summary>
      <param name="type">
        <see langword="XmlNodeType" /> du nouveau nœud.</param>
      <param name="prefix">Préfixe du nouveau nœud.</param>
      <param name="name">Nom local du nouveau nœud.</param>
      <param name="namespaceURI">L'URI de l'espace de noms du nouveau nœud.</param>
      <returns>Nouvelle <see langword="XmlNode" />.</returns>
      <exception cref="T:System.ArgumentException">Le nom n’a pas été fourni alors que <see langword="XmlNodeType" /> requiert un nom.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateProcessingInstruction(System.String,System.String)">
      <summary>Crée un élément <see cref="T:System.Xml.XmlProcessingInstruction" /> avec le nom et les données spécifiés.</summary>
      <param name="target">Nom de l'instruction de traitement.</param>
      <param name="data">Données de l'instruction de traitement.</param>
      <returns>Nouvelle <see langword="XmlProcessingInstruction" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateSignificantWhitespace(System.String)">
      <summary>Crée un nœud <see cref="T:System.Xml.XmlSignificantWhitespace" />.</summary>
      <param name="text">La chaîne doit contenir uniquement les caractères suivants &amp;#20; &amp;#10; &amp;#13; et &amp;#9;</param>
      <returns>Nouveau nœud <see langword="XmlSignificantWhitespace" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateTextNode(System.String)">
      <summary>Crée un élément <see cref="T:System.Xml.XmlText" /> avec le texte spécifié.</summary>
      <param name="text">Texte du nœud Text.</param>
      <returns>Nouveau nœud <see langword="XmlText" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateWhitespace(System.String)">
      <summary>Crée un nœud <see cref="T:System.Xml.XmlWhitespace" />.</summary>
      <param name="text">La chaîne doit contenir uniquement les caractères suivants &amp;#20; &amp;#10; &amp;#13; et &amp;#9;</param>
      <returns>Nouveau nœud <see langword="XmlWhitespace" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateXmlDeclaration(System.String,System.String,System.String)">
      <summary>Crée un nœud <see cref="T:System.Xml.XmlDeclaration" /> avec les valeurs spécifiées.</summary>
      <param name="version">La version doit être "1.0".</param>
      <param name="encoding">Valeur de l'attribut d'encodage. Il s'agit de l'encodage utilisé quand vous enregistrez un élément <see cref="T:System.Xml.XmlDocument" /> dans un fichier ou un flux ; il doit donc être défini avec une chaîne prise en charge par la classe <see cref="T:System.Text.Encoding" />, sinon <see cref="M:System.Xml.XmlDocument.Save(System.String)" /> échoue. Si cette valeur est <see langword="null" /> ou String.Empty, la méthode <see langword="Save" /> n'écrit pas d'attribut d'encodage sur la déclaration XML ; le codage par défaut UTF-8 est donc utilisé.  
Remarque : si l'élément <see langword="XmlDocument" /> est enregistré dans un <see cref="T:System.IO.TextWriter" /> ou un <see cref="T:System.Xml.XmlTextWriter" />, cette valeur d'encodage est ignorée. L'encodage du <see langword="TextWriter" /> ou du <see langword="XmlTextWriter" /> est utilisé à la place. Cela garantit que le code XML écrit peut être lu en utilisant l'encodage correct.</param>
      <param name="standalone">La valeur doit être "yes" ou "no". Si cette valeur est <see langword="null" /> ou String.Empty, la méthode <see langword="Save" /> n'écrit pas d'attribut autonome sur la déclaration XML.</param>
      <returns>Nouveau nœud <see langword="XmlDeclaration" />.</returns>
      <exception cref="T:System.ArgumentException">Les valeurs de <paramref name="version" /> ou <paramref name="standalone" /> sont différentes de celles spécifiées ci-dessus.</exception>
    </member>
    <member name="P:System.Xml.XmlDocument.DocumentElement">
      <summary>Obtient l'élément <see cref="T:System.Xml.XmlElement" /> racine pour le document.</summary>
      <returns>Élément <see langword="XmlElement" /> représentant la racine de l'arborescence du document XML. S'il n'existe pas de racine, <see langword="null" /> est retourné.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.DocumentType">
      <summary>Obtient le nœud contenant la déclaration DOCTYPE.</summary>
      <returns>Nœud <see cref="T:System.Xml.XmlNode" /> contenant le DocumentType (déclaration DOCTYPE).</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.GetElementById(System.String)">
      <summary>Obtient l'élément <see cref="T:System.Xml.XmlElement" /> avec l'ID spécifié.</summary>
      <param name="elementId">ID d'attribut avec lequel établir une correspondance.</param>
      <returns>Élément <see langword="XmlElement" /> avec l'ID correspondant ou <see langword="null" /> si aucun élément correspondant n'est trouvé.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.GetElementsByTagName(System.String)">
      <summary>Retourne un élément <see cref="T:System.Xml.XmlNodeList" /> contenant la liste de tous les éléments descendants qui correspondent à l'élément <see cref="P:System.Xml.XmlDocument.Name" /> spécifié.</summary>
      <param name="name">Nom qualifié à trouver. Il est comparé à la propriété <see langword="Name" /> du nœud correspondant. La valeur spéciale "*" correspond à toutes les étiquettes.</param>
      <returns>Un élément <see cref="T:System.Xml.XmlNodeList" /> contenant la liste de tous les nœuds correspondants. Si aucun nœud ne correspond à <paramref name="name" />, la collection retournée sera vide.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.GetElementsByTagName(System.String,System.String)">
      <summary>Retourne un élément <see cref="T:System.Xml.XmlNodeList" /> contenant la liste de tous les éléments descendants qui correspondent aux éléments <see cref="P:System.Xml.XmlDocument.LocalName" /> et <see cref="P:System.Xml.XmlNode.NamespaceURI" /> spécifiés.</summary>
      <param name="localName">LocalName à trouver. La valeur spéciale "*" correspond à toutes les étiquettes.</param>
      <param name="namespaceURI">URI d'espace de noms avec lequel établir une correspondance.</param>
      <returns>Un élément <see cref="T:System.Xml.XmlNodeList" /> contenant la liste de tous les nœuds correspondants. Si aucun nœud ne correspond aux éléments <paramref name="localName" /> et <paramref name="namespaceURI" /> spécifiés, la collection retournée sera vide.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.Implementation">
      <summary>Obtient l'objet <see cref="T:System.Xml.XmlImplementation" /> pour le document actif.</summary>
      <returns>Objet <see langword="XmlImplementation" /> pour le document actif.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)">
      <summary>Importe un nœud d'un autre document vers le document actif.</summary>
      <param name="node">Nœud importé.</param>
      <param name="deep">
        <see langword="true" /> pour réaliser un clone complet ; sinon, <see langword="false" />.</param>
      <returns>L'élément <see cref="T:System.Xml.XmlNode" /> importé.</returns>
      <exception cref="T:System.InvalidOperationException">Appeler cette méthode sur un type de nœud qui ne peut pas être importé.</exception>
    </member>
    <member name="P:System.Xml.XmlDocument.InnerText">
      <summary>Lève une exception <see cref="T:System.InvalidOperationException" /> dans tous les cas.</summary>
      <returns>Valeurs concaténées du nœud et de tous ses nœuds enfants.</returns>
      <exception cref="T:System.InvalidOperationException">Dans tous les cas.</exception>
    </member>
    <member name="P:System.Xml.XmlDocument.InnerXml">
      <summary>Obtient ou définit le balisage représentant les enfants du nœud actuel.</summary>
      <returns>Balisage des enfants du nœud actuel.</returns>
      <exception cref="T:System.Xml.XmlException">Le code XML spécifié pendant la définition de cette propriété n’est pas bien formé.</exception>
    </member>
    <member name="P:System.Xml.XmlDocument.IsReadOnly">
      <summary>Obtient une valeur indiquant si le nœud actuel est en lecture seule.</summary>
      <returns>
        <see langword="true" /> si le nœud actuel est en lecture seule ; sinon, <see langword="false" />. Les nœuds <see langword="XmlDocument" /> retournent toujours <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.Load(System.IO.Stream)">
      <summary>Charge le document XML à partir du flux spécifié.</summary>
      <param name="inStream">Flux contenant le document XML à charger.</param>
      <exception cref="T:System.Xml.XmlException">Le fichier XML contient une erreur de chargement ou d’analyse. Dans ce cas, une <see cref="T:System.IO.FileNotFoundException" /> est levée.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Load(System.IO.TextReader)">
      <summary>Charge le document XML à partir de l'élément <see cref="T:System.IO.TextReader" /> spécifié.</summary>
      <param name="txtReader">L'élément <see langword="TextReader" /> utilisé pour introduire les données XML dans le document.</param>
      <exception cref="T:System.Xml.XmlException">Le fichier XML contient une erreur de chargement ou d’analyse. Dans ce cas, le document reste vide.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Load(System.String)">
      <summary>Charge le document XML à partir de l'URL spécifiée.</summary>
      <param name="filename">URL du fichier contenant le document XML à charger. L'URL peut être un fichier local ou une URL HTTP (adresse web).</param>
      <exception cref="T:System.Xml.XmlException">Le fichier XML contient une erreur de chargement ou d’analyse. Dans ce cas, une <see cref="T:System.IO.FileNotFoundException" /> est levée.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="filename" /> est une chaîne de longueur nulle, contient seulement un espace, ou contient un ou plusieurs caractères non valides définis par <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filename" /> est <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin et/ou le nom de fichier spécifiés dépassent la longueur maximale définie par le système.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le chemin spécifié n’est pas valide (par exemple, il est sur un lecteur non mappé).</exception>
      <exception cref="T:System.IO.IOException">Une erreur d’E/S s’est produite lors de l’ouverture du fichier.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="filename" /> a spécifié un fichier en lecture seule.  
ou 
Cette opération n'est pas prise en charge sur la plateforme actuelle.  

ou - 
<paramref name="filename" /> a spécifié un répertoire.  

ou - 
L'appelant n'a pas l'autorisation requise.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier spécifié dans <paramref name="filename" /> est introuvable.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="filename" /> a un format non valide.</exception>
      <exception cref="T:System.Security.SecurityException">L'appelant n'a pas l'autorisation requise.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Load(System.Xml.XmlReader)">
      <summary>Charge le document XML à partir de l'élément <see cref="T:System.Xml.XmlReader" /> spécifié.</summary>
      <param name="reader">L'élément <see langword="XmlReader" /> utilisé pour introduire les données XML dans le document.</param>
      <exception cref="T:System.Xml.XmlException">Le fichier XML contient une erreur de chargement ou d’analyse. Dans ce cas, le document reste vide.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.LoadXml(System.String)">
      <summary>Charge le document XML à partir de la chaîne spécifiée.</summary>
      <param name="xml">Chaîne contenant le document XML à charger.</param>
      <exception cref="T:System.Xml.XmlException">Le fichier XML contient une erreur de chargement ou d’analyse. Dans ce cas, le document reste vide.</exception>
    </member>
    <member name="P:System.Xml.XmlDocument.LocalName">
      <summary>Obtient le nom local du nœud.</summary>
      <returns>Pour les nœuds <see langword="XmlDocument" />, le nom local est #document.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.Name">
      <summary>Obtient le nom qualifié du nœud.</summary>
      <returns>Pour les nœuds <see langword="XmlDocument" />, le nom est #document.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.NameTable">
      <summary>Obtient l'élément <see cref="T:System.Xml.XmlNameTable" /> associé à cette implémentation.</summary>
      <returns>Un élément <see langword="XmlNameTable" /> qui vous permet d'obtenir la version atomisée d'une chaîne dans le document.</returns>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeChanged">
      <summary>Se produit quand l'élément <see cref="P:System.Xml.XmlNode.Value" /> d'un nœud appartenant à ce document a été modifié.</summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeChanging">
      <summary>Se produit quand l'élément <see cref="P:System.Xml.XmlNode.Value" /> d'un nœud appartenant à ce document est sur le point d'être modifié.</summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeInserted">
      <summary>Se produit quand un nœud appartenant à ce document a été inséré dans un autre nœud.</summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeInserting">
      <summary>Se produit quand un nœud appartenant à ce document est sur le point d'être inséré dans un autre nœud.</summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeRemoved">
      <summary>Se produit quand un nœud appartenant à ce document a été enlevé à son parent.</summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeRemoving">
      <summary>Se produit quand un nœud appartenant à ce document est sur le point d'être supprimé du document.</summary>
    </member>
    <member name="P:System.Xml.XmlDocument.NodeType">
      <summary>Obtient le type du nœud actuel.</summary>
      <returns>Type de nœud. Pour les nœuds <see langword="XmlDocument" />, cette valeur est XmlNodeType.Document.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.OwnerDocument">
      <summary>Obtient l'élément <see cref="T:System.Xml.XmlDocument" /> auquel le nœud actif appartient.</summary>
      <returns>Pour les nœuds <see langword="XmlDocument" /> (<see cref="P:System.Xml.XmlDocument.NodeType" /> est égal à XmlNodeType.Document), cette propriété retourne toujours <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.ParentNode">
      <summary>Obtient le nœud parent de ce nœud (pour les nœuds qui peuvent avoir des parents).</summary>
      <returns>Retourne toujours <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.PreserveWhitespace">
      <summary>Obtient ou définit une valeur indiquant si les espaces blancs doivent être conservés dans le contenu d'élément.</summary>
      <returns>
        <see langword="true" /> pour conserver l'espace blanc ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.ReadNode(System.Xml.XmlReader)">
      <summary>Crée un objet <see cref="T:System.Xml.XmlNode" /> sur la base des informations de l'élément <see cref="T:System.Xml.XmlReader" />. Le lecteur doit être positionné sur un nœud ou sur un attribut.</summary>
      <param name="reader">Source XML</param>
      <returns>Le nouvel élément <see langword="XmlNode" /> ou <see langword="null" /> s'il n'existe plus de nœuds.</returns>
      <exception cref="T:System.NullReferenceException">Le lecteur est positionné sur un type de nœud qui ne se convertit pas en nœud DOM valide (par exemple, EndElement ou EndEntity).</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Save(System.IO.Stream)">
      <summary>Enregistre le document XML dans le flux spécifié.</summary>
      <param name="outStream">Flux dans lequel vous voulez enregistrer.</param>
      <exception cref="T:System.Xml.XmlException">L’opération ne se traduirait pas par un document XML bien formé (par exemple, aucun élément de document ou aucune double déclaration XML).</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Save(System.IO.TextWriter)">
      <summary>Enregistre le document XML dans l'élément <see cref="T:System.IO.TextWriter" /> spécifié.</summary>
      <param name="writer">L'élément <see langword="TextWriter" /> dans lequel vous voulez enregistrer.</param>
      <exception cref="T:System.Xml.XmlException">L’opération ne se traduirait pas par un document XML bien formé (par exemple, aucun élément de document ou aucune double déclaration XML).</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Save(System.String)">
      <summary>Enregistre le document XML dans le fichier spécifié. Si le fichier spécifié existe, cette méthode le remplace.</summary>
      <param name="filename">Emplacement du fichier où vous voulez enregistrer le document.</param>
      <exception cref="T:System.Xml.XmlException">L’opération ne se traduirait pas par un document XML bien formé (par exemple, aucun élément de document ou aucune double déclaration XML).</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Save(System.Xml.XmlWriter)">
      <summary>Enregistre le document XML dans l'élément <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="w">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
      <exception cref="T:System.Xml.XmlException">L’opération ne se traduirait pas par un document XML bien formé (par exemple, aucun élément de document ou aucune double déclaration XML).</exception>
    </member>
    <member name="P:System.Xml.XmlDocument.SchemaInfo">
      <summary>Retourne le jeu d’informations postérieures à la validation du schéma (PSVI, Post-Schema-Validation-Infoset) pour le nœud.</summary>
      <returns>L'objet <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> représentant le PSVI du nœud.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.Schemas">
      <summary>Obtient ou définit l'objet <see cref="T:System.Xml.Schema.XmlSchemaSet" /> associé à cet élément <see cref="T:System.Xml.XmlDocument" />.</summary>
      <returns>Un objet <see cref="T:System.Xml.Schema.XmlSchemaSet" /> contenant les schémas XSD (XML Schema Definition Language) associés à cet élément <see cref="T:System.Xml.XmlDocument" /> ; sinon, un objet <see cref="T:System.Xml.Schema.XmlSchemaSet" /> vide.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.Validate(System.Xml.Schema.ValidationEventHandler)">
      <summary>Valide l'élément <see cref="T:System.Xml.XmlDocument" /> par rapport aux schémas XSD contenus dans la propriété <see cref="P:System.Xml.XmlDocument.Schemas" />.</summary>
      <param name="validationEventHandler">Objet <see cref="T:System.Xml.Schema.ValidationEventHandler" /> qui reçoit des informations sur les erreurs et les avertissements de la validation des schémas.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Un événement de validation de schéma s’est produit et aucun objet <see cref="T:System.Xml.Schema.ValidationEventHandler" /> n’a été spécifié.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Validate(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlNode)">
      <summary>Valide l'objet <see cref="T:System.Xml.XmlNode" /> spécifié par rapport aux schémas XSD de la propriété <see cref="P:System.Xml.XmlDocument.Schemas" />.</summary>
      <param name="validationEventHandler">Objet <see cref="T:System.Xml.Schema.ValidationEventHandler" /> qui reçoit des informations sur les erreurs et les avertissements de la validation des schémas.</param>
      <param name="nodeToValidate">Objet <see cref="T:System.Xml.XmlNode" /> créé à partir de l'élément <see cref="T:System.Xml.XmlDocument" /> à valider.</param>
      <exception cref="T:System.ArgumentException">Le paramètre de l’objet <see cref="T:System.Xml.XmlNode" /> n’a pas été créé à partir d’un <see cref="T:System.Xml.XmlDocument" />.</exception>
      <exception cref="T:System.InvalidOperationException">Le paramètre de l’objet <see cref="T:System.Xml.XmlNode" /> n’est pas un élément, un attribut, un fragment de document ou le nœud racine.</exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Un événement de validation de schéma s’est produit et aucun objet <see cref="T:System.Xml.Schema.ValidationEventHandler" /> n’a été spécifié.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Enregistre tous les enfants du nœud <see langword="XmlDocument" /> dans l'élément <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="xw">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="M:System.Xml.XmlDocument.WriteTo(System.Xml.XmlWriter)">
      <summary>Enregistre le nœud <see langword="XmlDocument" /> dans l'élément <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="w">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="P:System.Xml.XmlDocument.XmlResolver">
      <summary>Définit l'élément <see cref="T:System.Xml.XmlResolver" /> à utiliser pour résoudre les ressources externes.</summary>
      <returns>
        <see langword="XmlResolver" /> à utiliser.  
Dans la version 1.1 du .NET Framework, l'appelant doit être entièrement fiable pour pouvoir spécifier un élément <see langword="XmlResolver" />.</returns>
      <exception cref="T:System.Xml.XmlException">Cette propriété a la valeur <see langword="null" /> et une entité ou DTD externe est rencontrée.</exception>
    </member>
    <member name="T:System.Xml.XmlDocumentFragment">
      <summary>Représente un objet rudimentaire utilisé dans les opérations d'insertion dans les arborescences.</summary>
    </member>
    <member name="M:System.Xml.XmlDocumentFragment.#ctor(System.Xml.XmlDocument)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlDocumentFragment" />.</summary>
      <param name="ownerDocument">Document XML qui est la source du fragment.</param>
    </member>
    <member name="M:System.Xml.XmlDocumentFragment.CloneNode(System.Boolean)">
      <summary>Crée un doublon de ce nœud.</summary>
      <param name="deep">
        <see langword="true" /> pour cloner récursivement la sous-arborescence sous le nœud spécifié ; <see langword="false" /> pour cloner seulement le nœud lui-même.</param>
      <returns>Nœud cloné.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.InnerXml">
      <summary>Obtient ou définit le balisage représentant les enfants de ce nœud.</summary>
      <returns>Balisage des enfants de ce nœud.</returns>
      <exception cref="T:System.Xml.XmlException">Le code XML spécifié pendant la définition de cette propriété n’est pas bien formé.</exception>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.LocalName">
      <summary>Obtient le nom local du nœud.</summary>
      <returns>Pour les nœuds <see langword="XmlDocumentFragment" />, le nom local est <see langword="#document-fragment" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.Name">
      <summary>Obtient le nom qualifié du nœud.</summary>
      <returns>Pour <see langword="XmlDocumentFragment" />, le nom est <see langword="#document-fragment" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.NodeType">
      <summary>Obtient le type du nœud actuel.</summary>
      <returns>Pour les nœuds <see langword="XmlDocumentFragment" />, cette valeur est XmlNodeType.DocumentFragment.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.OwnerDocument">
      <summary>Obtient le <see cref="T:System.Xml.XmlDocument" /> auquel ce nœud appartient.</summary>
      <returns>
        <see langword="XmlDocument" /> auquel ce nœud appartient.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.ParentNode">
      <summary>Obtient le parent de ce nœud (pour les nœuds qui peuvent avoir des parents).</summary>
      <returns>Parent de ce nœud.  
Pour les nœuds <see langword="XmlDocumentFragment" />, cette propriété est toujours <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocumentFragment.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Enregistre tous les enfants du nœud dans l’élément <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="w">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="M:System.Xml.XmlDocumentFragment.WriteTo(System.Xml.XmlWriter)">
      <summary>Enregistre le nœud dans le <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="w">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="T:System.Xml.XmlDocumentType">
      <summary>Représente la déclaration du type de document.</summary>
    </member>
    <member name="M:System.Xml.XmlDocumentType.#ctor(System.String,System.String,System.String,System.String,System.Xml.XmlDocument)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlDocumentType" />.</summary>
      <param name="name">Nom qualifié ; consultez la propriété <see cref="P:System.Xml.XmlDocumentType.Name" />.</param>
      <param name="publicId">Identificateur public ; consultez la propriété <see cref="P:System.Xml.XmlDocumentType.PublicId" />.</param>
      <param name="systemId">Identificateur système ; consultez la propriété <see cref="P:System.Xml.XmlDocumentType.SystemId" />.</param>
      <param name="internalSubset">Sous-ensemble interne de DTD ; consultez la propriété <see cref="P:System.Xml.XmlDocumentType.InternalSubset" />.</param>
      <param name="doc">Document parent.</param>
    </member>
    <member name="M:System.Xml.XmlDocumentType.CloneNode(System.Boolean)">
      <summary>Crée un doublon de ce nœud.</summary>
      <param name="deep">
        <see langword="true" /> pour cloner récursivement la sous-arborescence sous le nœud spécifié ; <see langword="false" /> pour cloner seulement le nœud lui-même. Pour les nœuds de type de document, le nœud cloné inclut toujours le sous-arbre, quels que soient les paramètres.</param>
      <returns>Nœud cloné.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.Entities">
      <summary>Obtient la collection de nœuds <see cref="T:System.Xml.XmlEntity" /> présents dans la déclaration du type de document.</summary>
      <returns>
        <see cref="T:System.Xml.XmlNamedNodeMap" /> contenant les nœuds <see langword="XmlEntity" />. <see langword="XmlNamedNodeMap" /> qui est retourné est en lecture seule.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.InternalSubset">
      <summary>Obtient la valeur du sous-ensemble interne de définition de type de document (DTD) sur la déclaration DOCTYPE.</summary>
      <returns>Sous-ensemble interne DTD sur DOCTYPE. S'il n'existe aucun sous-ensemble interne DTD, String.Empty est retourné.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.IsReadOnly">
      <summary>Obtient une valeur indiquant si le nœud est en lecture seule.</summary>
      <returns>
        <see langword="true" />Si le nœud est en lecture seule; Sinon, <see langword="false" />.  
Les nœuds DocumentType étant en lecture seule, cette propriété retourne toujours <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.LocalName">
      <summary>Obtient le nom local du nœud.</summary>
      <returns>Pour les nœuds DocumentType, cette propriété retourne le nom du type de document.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.Name">
      <summary>Obtient le nom qualifié du nœud.</summary>
      <returns>Pour les nœuds DocumentType, cette propriété retourne le nom du type de document.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.NodeType">
      <summary>Obtient le type du nœud actuel.</summary>
      <returns>Pour les nœuds DocumentType, cette valeur est XmlNodeType.DocumentType.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.Notations">
      <summary>Obtient la collection de nœuds <see cref="T:System.Xml.XmlNotation" /> présents dans la déclaration du type de document.</summary>
      <returns>
        <see cref="T:System.Xml.XmlNamedNodeMap" /> contenant les nœuds <see langword="XmlNotation" />. <see langword="XmlNamedNodeMap" /> qui est retourné est en lecture seule.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.PublicId">
      <summary>Obtient la valeur de l'identificateur public sur la déclaration DOCTYPE.</summary>
      <returns>Identificateur public sur DOCTYPE. S'il n'existe aucun identificateur public, <see langword="null" /> est alors retournée.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.SystemId">
      <summary>Obtient la valeur de l'identificateur système sur la déclaration DOCTYPE.</summary>
      <returns>Identificateur système sur DOCTYPE. S'il n'existe aucun identificateur système, <see langword="null" /> est alors retournée.</returns>
    </member>
    <member name="M:System.Xml.XmlDocumentType.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Enregistre tous les enfants du nœud dans l’élément <see cref="T:System.Xml.XmlWriter" /> spécifié. Pour les nœuds <see langword="XmlDocumentType" />, cette méthode n'a aucun effet.</summary>
      <param name="w">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="M:System.Xml.XmlDocumentType.WriteTo(System.Xml.XmlWriter)">
      <summary>Enregistre le nœud dans le <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="w">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="T:System.Xml.XmlElement">
      <summary>Représente un élément.</summary>
    </member>
    <member name="M:System.Xml.XmlElement.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlElement" />.</summary>
      <param name="prefix">Préfixe de l'espace de noms ; consultez la propriété <see cref="P:System.Xml.XmlElement.Prefix" />.</param>
      <param name="localName">Nom local ; consultez la propriété <see cref="P:System.Xml.XmlElement.LocalName" />.</param>
      <param name="namespaceURI">URI de l'espace de noms ; consultez la propriété <see cref="P:System.Xml.XmlElement.NamespaceURI" />.</param>
      <param name="doc">Document XML parent.</param>
    </member>
    <member name="P:System.Xml.XmlElement.Attributes">
      <summary>Obtient un <see cref="T:System.Xml.XmlAttributeCollection" /> contenant la liste des attributs de ce nœud.</summary>
      <returns>
        <see cref="T:System.Xml.XmlAttributeCollection" /> contenant la liste des attributs de ce nœud.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.CloneNode(System.Boolean)">
      <summary>Crée un doublon de ce nœud.</summary>
      <param name="deep">
        <see langword="true" /> pour cloner récursivement la sous-arborescence sous le nœud spécifié ; <see langword="false" /> pour cloner seulement le nœud lui-même (et ses attributs si le nœud est un <see langword="XmlElement" />).</param>
      <returns>Nœud cloné.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.GetAttribute(System.String)">
      <summary>Retourne la valeur de l'attribut avec le nom spécifié.</summary>
      <param name="name">Nom de l’attribut à récupérer. Il s’agit d’un nom qualifié. Il est comparé à la propriété <see langword="Name" /> du nœud correspondant.</param>
      <returns>Valeur de l'attribut spécifié. Une chaîne vide est retournée si aucun attribut correspondant n'est trouvé, ou si l'attribut ne possède pas une valeur spécifiée ou une valeur par défaut.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.GetAttribute(System.String,System.String)">
      <summary>Retourne la valeur de l'attribut avec le nom local et l'URI de l'espace de noms spécifiés.</summary>
      <param name="localName">Nom local de l'attribut à récupérer.</param>
      <param name="namespaceURI">URI de l'espace de noms de l'attribut à récupérer.</param>
      <returns>Valeur de l'attribut spécifié. Une chaîne vide est retournée si aucun attribut correspondant n'est trouvé, ou si l'attribut ne possède pas une valeur spécifiée ou une valeur par défaut.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.GetAttributeNode(System.String)">
      <summary>Retourne <see langword="XmlAttribute" /> avec le nom spécifié.</summary>
      <param name="name">Nom de l’attribut à récupérer. Il s’agit d’un nom qualifié. Il est comparé à la propriété <see langword="Name" /> du nœud correspondant.</param>
      <returns>
        <see langword="XmlAttribute" /> spécifié ou <see langword="null" /> si aucun attribut correspondant n'est trouvé.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.GetAttributeNode(System.String,System.String)">
      <summary>Retourne <see cref="T:System.Xml.XmlAttribute" /> avec le nom local et l'URI de l'espace de noms spécifiés.</summary>
      <param name="localName">Le nom local de l'attribut.</param>
      <param name="namespaceURI">L'URI de l'espace de noms de l'attribut.</param>
      <returns>
        <see langword="XmlAttribute" /> spécifié ou <see langword="null" /> si aucun attribut correspondant n'est trouvé.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.GetElementsByTagName(System.String)">
      <summary>Retourne un élément <see cref="T:System.Xml.XmlNodeList" /> contenant la liste de tous les éléments descendants qui correspondent à l'élément <see cref="P:System.Xml.XmlElement.Name" /> spécifié.</summary>
      <param name="name">Balise de nom à mettre en correspondance. Il s’agit d’un nom qualifié. Il est comparé à la propriété <see langword="Name" /> du nœud correspondant. L'astérisque (*) est une valeur spéciale qui correspond à toutes les balises.</param>
      <returns>Un élément <see cref="T:System.Xml.XmlNodeList" /> contenant la liste de tous les nœuds correspondants. La liste est vide en l'absence de nœuds correspondants.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.GetElementsByTagName(System.String,System.String)">
      <summary>Retourne un élément <see cref="T:System.Xml.XmlNodeList" /> contenant la liste de tous les éléments descendants qui correspondent aux éléments <see cref="P:System.Xml.XmlElement.LocalName" /> et <see cref="P:System.Xml.XmlElement.NamespaceURI" /> spécifiés.</summary>
      <param name="localName">Nom local à mettre en correspondance. L'astérisque (*) est une valeur spéciale qui correspond à toutes les balises.</param>
      <param name="namespaceURI">URI de l'espace de noms à mettre en correspondance.</param>
      <returns>Un élément <see cref="T:System.Xml.XmlNodeList" /> contenant la liste de tous les nœuds correspondants. La liste est vide en l'absence de nœuds correspondants.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.HasAttribute(System.String)">
      <summary>Détermine si le nœud actif possède un attribut portant le nom spécifié.</summary>
      <param name="name">Nom de l’attribut à rechercher. Il s’agit d’un nom qualifié. Il est comparé à la propriété <see langword="Name" /> du nœud correspondant.</param>
      <returns>
        <see langword="true" /> si le nœud actif possède l’attribut spécifié ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.HasAttribute(System.String,System.String)">
      <summary>Détermine si le nœud actuel possède un attribut avec le nom local et l'URI de l'espace de noms spécifiés.</summary>
      <param name="localName">Nom local de l'attribut à rechercher.</param>
      <param name="namespaceURI">URI de l'espace de noms de l'attribut à rechercher.</param>
      <returns>
        <see langword="true" /> si le nœud actif possède l’attribut spécifié ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.HasAttributes">
      <summary>Obtient une valeur <see langword="boolean" /> indiquant si le nœud actuel a des attributs.</summary>
      <returns>
        <see langword="true" /> si le nœud actuel possède des attributs ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.InnerText">
      <summary>Obtient ou définit les valeurs concaténées du nœud et de tous ses enfants.</summary>
      <returns>Valeurs concaténées du nœud et de tous ses enfants.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.InnerXml">
      <summary>Obtient ou définit le balisage représentant uniquement les enfants de ce nœud.</summary>
      <returns>Balisage des enfants de ce nœud.</returns>
      <exception cref="T:System.Xml.XmlException">Le code XML spécifié pendant la définition de cette propriété n’est pas bien formé.</exception>
    </member>
    <member name="P:System.Xml.XmlElement.IsEmpty">
      <summary>Obtient ou définit le format de balise de l'élément.</summary>
      <returns>
        <see langword="true" />Si l’élément doit être sérialisé au format de balise abrégé "&lt;Item/&gt;"; &lt;&gt;pour le format long «Item&lt;/Item&gt;». <see langword="false" />  
Lors de la définition de cette propriété, si la valeur <see langword="true" /> est affectée, les enfants de l'élément sont supprimés et l'élément est sérialisé dans le format de balise abrégé. Si la valeur <see langword="false" /> est affectée, la valeur de la propriété est modifiée (que l'élément possède ou non un contenu) ; si l'élément est vide, il est sérialisé dans le format long.  
Cette propriété est une extension Microsoft du modèle DOM (Document Object Model).</returns>
    </member>
    <member name="P:System.Xml.XmlElement.LocalName">
      <summary>Obtient le nom local du nœud actuel.</summary>
      <returns>Nom du nœud actuel dont le préfixe est supprimé. Par exemple, <see langword="LocalName" /> est Book pour l’élément &lt;BK: Book&gt;.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.Name">
      <summary>Obtient le nom qualifié du nœud.</summary>
      <returns>Nom qualifié du nœud. Pour les nœuds <see langword="XmlElement" />, il s'agit du nom de balise de l'élément.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.NamespaceURI">
      <summary>Obtient l'URI de l'espace de noms de ce nœud.</summary>
      <returns>Espace de noms d'URI du nœud. En l'absence d'URI d'espace de noms, cette propriété retourne String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.NextSibling">
      <summary>Obtient <see cref="T:System.Xml.XmlNode" /> qui suit immédiatement cet élément.</summary>
      <returns>
        <see langword="XmlNode" /> qui suit immédiatement cet élément.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.NodeType">
      <summary>Obtient le type du nœud actuel.</summary>
      <returns>Type de nœud. Pour les nœuds <see langword="XmlElement" />, cette valeur est XmlNodeType.Element.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.OwnerDocument">
      <summary>Obtient le <see cref="T:System.Xml.XmlDocument" /> auquel ce nœud appartient.</summary>
      <returns>
        <see langword="XmlDocument" /> auquel cet élément appartient.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.ParentNode">
      <summary>Obtient le parent de ce nœud (pour les nœuds qui peuvent avoir des parents).</summary>
      <returns>
        <see langword="XmlNode" /> correspondant au parent du nœud actif. Si un nœud vient d’être créé mais qu’il n’a pas encore été ajouté à l’arborescence, ou s’il a été supprimé de celle-ci, le parent est <see langword="null" />. Pour tous les autres nœuds, la valeur retournée dépend du <see cref="P:System.Xml.XmlNode.NodeType" /> du nœud. Le tableau suivant décrit les différentes valeurs de retour possibles pour la propriété <see langword="ParentNode" />.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.Prefix">
      <summary>Obtient ou définit le préfixe de l'espace de noms de ce nœud.</summary>
      <returns>Préfixe de l'espace de noms de ce nœud. En l'absence de préfixe, cette propriété retourne String.Empty.</returns>
      <exception cref="T:System.ArgumentException">Ce nœud est en lecture seule.</exception>
      <exception cref="T:System.Xml.XmlException">Le préfixe spécifié contient un caractère non valide.  
Le préfixe spécifié est mal formé.  
Le NamespaceURI de ce nœud est <see langword="null" />.  
Le préfixe spécifié est « xml » et l’URI d’espace de noms de ce nœud est différent de http://www.w3.org/XML/1998/namespace.</exception>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAll">
      <summary>Supprime tous les attributs et enfants spécifiés du nœud actuel. Les attributs par défaut ne sont pas supprimés.</summary>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAllAttributes">
      <summary>Supprime tous les attributs spécifiés de l'élément. Les attributs par défaut ne sont pas supprimés.</summary>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAttribute(System.String)">
      <summary>Supprime un attribut par son nom.</summary>
      <param name="name">Nom de l'attribut à supprimer. Il s'agit d'un nom qualifié. Il est comparé à la propriété <see langword="Name" /> du nœud correspondant.</param>
      <exception cref="T:System.ArgumentException">Le nœud est en lecture seule.</exception>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAttribute(System.String,System.String)">
      <summary>Supprime un attribut avec le nom local et l'URI de l'espace de noms spécifiés. (Si l'attribut supprimé possède une valeur par défaut, il est immédiatement remplacé.)</summary>
      <param name="localName">Nom local de l'attribut à supprimer.</param>
      <param name="namespaceURI">URI de l'espace de noms de l'attribut à supprimer.</param>
      <exception cref="T:System.ArgumentException">Le nœud est en lecture seule.</exception>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAttributeAt(System.Int32)">
      <summary>Supprime le nœud d'attribut avec l'index spécifié de l'élément. (Si l'attribut supprimé possède une valeur par défaut, il est immédiatement remplacé.)</summary>
      <param name="i">Index du nœud à supprimer. Le premier nœud a l'index 0.</param>
      <returns>Nœud d'attribut supprimé ou <see langword="null" /> s'il n'existe aucun nœud à l'index spécifié.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAttributeNode(System.String,System.String)">
      <summary>Supprime <see cref="T:System.Xml.XmlAttribute" /> spécifié par le nom local et l'URI de l'espace de noms. (Si l'attribut supprimé possède une valeur par défaut, il est immédiatement remplacé.)</summary>
      <param name="localName">Le nom local de l'attribut.</param>
      <param name="namespaceURI">L'URI de l'espace de noms de l'attribut.</param>
      <returns>
        <see langword="XmlAttribute" /> supprimé ou <see langword="null" /> si <see langword="XmlElement" /> ne possède pas de nœud d'attribut correspondant.</returns>
      <exception cref="T:System.ArgumentException">Ce nœud est en lecture seule.</exception>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAttributeNode(System.Xml.XmlAttribute)">
      <summary>Supprime le <see cref="T:System.Xml.XmlAttribute" /> spécifié.</summary>
      <param name="oldAttr">Nœud <see langword="XmlAttribute" /> à supprimer. Si l'attribut supprimé possède une valeur par défaut, il est immédiatement remplacé.</param>
      <returns>Le <see langword="XmlAttribute" /> supprimé ou <see langword="null" /> si <paramref name="oldAttr" /> n'est pas un nœud d'attribut de <see langword="XmlElement" />.</returns>
      <exception cref="T:System.ArgumentException">Ce nœud est en lecture seule.</exception>
    </member>
    <member name="P:System.Xml.XmlElement.SchemaInfo">
      <summary>Obtient le jeu d’informations postérieures à la validation du schéma qui a été assigné à ce nœud à la suite de la validation du schéma.</summary>
      <returns>Objet <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> contenant le jeu d'informations postérieures à la validation du schéma de ce nœud.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.SetAttribute(System.String,System.String)">
      <summary>Définit la valeur de l'attribut avec le nom spécifié.</summary>
      <param name="name">Nom de l'attribut à créer ou à modifier. Il s’agit d’un nom qualifié. Si le nom contient un signe deux-points, il est analysé dans les composants de préfixe et de nom local.</param>
      <param name="value">Valeur à définir pour l'attribut.</param>
      <exception cref="T:System.Xml.XmlException">Le nom spécifié contient un caractère non valide.</exception>
      <exception cref="T:System.ArgumentException">Le nœud est en lecture seule.</exception>
    </member>
    <member name="M:System.Xml.XmlElement.SetAttribute(System.String,System.String,System.String)">
      <summary>Définit la valeur de l'attribut avec le nom local et l'URI de l'espace de noms spécifiés.</summary>
      <param name="localName">Le nom local de l'attribut.</param>
      <param name="namespaceURI">L'URI de l'espace de noms de l'attribut.</param>
      <param name="value">Valeur à définir pour l'attribut.</param>
      <returns>Valeur de l'attribut</returns>
    </member>
    <member name="M:System.Xml.XmlElement.SetAttributeNode(System.String,System.String)">
      <summary>Ajoute le <see cref="T:System.Xml.XmlAttribute" /> spécifié.</summary>
      <param name="localName">Le nom local de l'attribut.</param>
      <param name="namespaceURI">L'URI de l'espace de noms de l'attribut.</param>
      <returns>
        <see langword="XmlAttribute" /> à ajouter.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.SetAttributeNode(System.Xml.XmlAttribute)">
      <summary>Ajoute le <see cref="T:System.Xml.XmlAttribute" /> spécifié.</summary>
      <param name="newAttr">Nœud <see langword="XmlAttribute" /> à ajouter à la collection d'attributs de cet élément.</param>
      <returns>Si l'attribut remplace un attribut existant portant le même nom, l'ancien <see langword="XmlAttribute" /> est retourné ; sinon, <see langword="null" /> est retournée.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="newAttr" /> a été créé à partir d'un document différent de celui qui a créé ce nœud. ou bien ce nœud est en lecture seule.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="newAttr" /> est déjà l'attribut d'un autre objet <see langword="XmlElement" />. Vous devez explicitement cloner les nœuds <see langword="XmlAttribute" /> pour les réutiliser dans d'autres objets <see langword="XmlElement" />.</exception>
    </member>
    <member name="M:System.Xml.XmlElement.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Enregistre tous les enfants du nœud dans l’élément <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="w">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="M:System.Xml.XmlElement.WriteTo(System.Xml.XmlWriter)">
      <summary>Enregistre le nœud actuel dans le <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="w">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="T:System.Xml.XmlEntity">
      <summary>Représente une déclaration d’entité, telle que &lt;!ENTITY... &gt;.</summary>
    </member>
    <member name="P:System.Xml.XmlEntity.BaseURI">
      <summary>Obtient l'URI (Uniform Resource Identifier) de base du nœud actuel.</summary>
      <returns>Emplacement à partir duquel le nœud a été chargé.</returns>
    </member>
    <member name="M:System.Xml.XmlEntity.CloneNode(System.Boolean)">
      <summary>Crée un doublon de ce nœud. Les nœuds d'entité ne peuvent pas être clonés. L'appel de cette méthode sur un objet <see cref="T:System.Xml.XmlEntity" /> lève une exception.</summary>
      <param name="deep">
        <see langword="true" /> pour cloner récursivement la sous-arborescence sous le nœud spécifié ; <see langword="false" /> pour cloner seulement le nœud lui-même.</param>
      <returns>Une copie du <see cref="T:System.Xml.XmlNode" /> à partir duquel la méthode est appelée.</returns>
      <exception cref="T:System.InvalidOperationException">Les nœuds d'entité ne peuvent pas être clonés. L'appel de cette méthode sur un objet <see cref="T:System.Xml.XmlEntity" /> lève une exception.</exception>
    </member>
    <member name="P:System.Xml.XmlEntity.InnerText">
      <summary>Obtient les valeurs concaténées du nœud d'entité et de tous ses enfants.</summary>
      <returns>Valeurs concaténées du nœud et de tous ses enfants.</returns>
      <exception cref="T:System.InvalidOperationException">Tentative de définition de la propriété.</exception>
    </member>
    <member name="P:System.Xml.XmlEntity.InnerXml">
      <summary>Obtient le balisage représentant les enfants de ce nœud.</summary>
      <returns>Pour les nœuds <see langword="XmlEntity" />, String.Empty est retourné.</returns>
      <exception cref="T:System.InvalidOperationException">Tentative de définition de la propriété.</exception>
    </member>
    <member name="P:System.Xml.XmlEntity.IsReadOnly">
      <summary>Obtient une valeur indiquant si le nœud est en lecture seule.</summary>
      <returns>
        <see langword="true" />Si le nœud est en lecture seule; Sinon, <see langword="false" />.  
Les nœuds <see langword="XmlEntity" /> étant en lecture seule, cette propriété retourne toujours <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.LocalName">
      <summary>Obtient le nom du nœud sans le préfixe de l'espace de noms.</summary>
      <returns>Pour les nœuds <see langword="XmlEntity" />, cette propriété retourne le nom de l'entité.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.Name">
      <summary>Obtient le nom du nœud.</summary>
      <returns>Nom de l'entité.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.NodeType">
      <summary>Obtient le type du nœud.</summary>
      <returns>Type de nœud. Pour les nœuds <see langword="XmlEntity" />, la valeur est XmlNodeType.Entity.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.NotationName">
      <summary>Obtient le nom de l'attribut NDATA facultatif sur la déclaration d'entité.</summary>
      <returns>Nom de l'attribut NDATA. S'il n'existe aucun NDATA, <see langword="null" /> est retournée.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.OuterXml">
      <summary>Obtient le balisage représentant ce nœud et tous ses enfants.</summary>
      <returns>Pour les nœuds <see langword="XmlEntity" />, String.Empty est retourné.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.PublicId">
      <summary>Obtient la valeur de l'identificateur public sur la déclaration d'entité.</summary>
      <returns>Identificateur public sur l'entité. S'il n'existe aucun identificateur public, <see langword="null" /> est alors retournée.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.SystemId">
      <summary>Obtient la valeur de l'identificateur système sur la déclaration d'entité.</summary>
      <returns>Identificateur système sur l'entité. S'il n'existe aucun identificateur système, <see langword="null" /> est alors retournée.</returns>
    </member>
    <member name="M:System.Xml.XmlEntity.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Enregistre tous les enfants du nœud dans l’élément <see cref="T:System.Xml.XmlWriter" /> spécifié. Pour les nœuds <see langword="XmlEntity" />, cette méthode n'a aucun effet.</summary>
      <param name="w">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="M:System.Xml.XmlEntity.WriteTo(System.Xml.XmlWriter)">
      <summary>Enregistre le nœud dans le <see cref="T:System.Xml.XmlWriter" /> spécifié. Pour les nœuds <see langword="XmlEntity" />, cette méthode n'a aucun effet.</summary>
      <param name="w">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="T:System.Xml.XmlEntityReference">
      <summary>Représente un nœud de référence d'entité.</summary>
    </member>
    <member name="M:System.Xml.XmlEntityReference.#ctor(System.String,System.Xml.XmlDocument)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlEntityReference" />.</summary>
      <param name="name">Nom de la référence d'entité ; consultez la propriété <see cref="P:System.Xml.XmlEntityReference.Name" />.</param>
      <param name="doc">Document XML parent.</param>
    </member>
    <member name="P:System.Xml.XmlEntityReference.BaseURI">
      <summary>Obtient l'URI (Uniform Resource Identifier) de base du nœud actuel.</summary>
      <returns>Emplacement à partir duquel le nœud a été chargé.</returns>
    </member>
    <member name="M:System.Xml.XmlEntityReference.CloneNode(System.Boolean)">
      <summary>Crée un doublon de ce nœud.</summary>
      <param name="deep">
        <see langword="true" /> pour cloner récursivement la sous-arborescence sous le nœud spécifié ; <see langword="false" /> pour cloner seulement le nœud lui-même. Pour les nœuds <see langword="XmlEntityReference" />, cette méthode retourne toujours un nœud de référence d'entité sans enfants. Le texte de remplacement est défini lorsque le nœud est inséré dans un parent.</param>
      <returns>Nœud cloné.</returns>
    </member>
    <member name="P:System.Xml.XmlEntityReference.IsReadOnly">
      <summary>Obtient une valeur indiquant si le nœud est en lecture seule.</summary>
      <returns>
        <see langword="true" /> si le nœud est en lecture seule ; sinon, <see langword="false" />.  
Les nœuds <see langword="XmlEntityReference" /> étant en lecture seule, cette propriété retourne toujours <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlEntityReference.LocalName">
      <summary>Obtient le nom local du nœud.</summary>
      <returns>Pour les nœuds <see langword="XmlEntityReference" />, cette propriété retourne le nom de l'entité référencée.</returns>
    </member>
    <member name="P:System.Xml.XmlEntityReference.Name">
      <summary>Obtient le nom du nœud.</summary>
      <returns>Nom de l'entité référencée.</returns>
    </member>
    <member name="P:System.Xml.XmlEntityReference.NodeType">
      <summary>Obtient le type du nœud.</summary>
      <returns>Type de nœud. Pour les nœuds <see langword="XmlEntityReference" />, la valeur est XmlNodeType.EntityReference.</returns>
    </member>
    <member name="P:System.Xml.XmlEntityReference.Value">
      <summary>Obtient ou définit la valeur du nœud.</summary>
      <returns>Valeur du nœud. Pour les nœuds <see langword="XmlEntityReference" />, cette propriété retourne <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException">Le nœud est en lecture seule.</exception>
      <exception cref="T:System.InvalidOperationException">Définition de la propriété.</exception>
    </member>
    <member name="M:System.Xml.XmlEntityReference.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Enregistre tous les enfants du nœud dans l’élément <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="w">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="M:System.Xml.XmlEntityReference.WriteTo(System.Xml.XmlWriter)">
      <summary>Enregistre le nœud dans le <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="w">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="T:System.Xml.XmlException">
      <summary>Retourne des informations détaillées sur la dernière exception.</summary>
    </member>
    <member name="M:System.Xml.XmlException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see langword="XmlException" />.</summary>
    </member>
    <member name="M:System.Xml.XmlException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see langword="XmlException" /> à l'aide des informations contenues dans les objets <see cref="T:System.Runtime.Serialization.SerializationInfo" /> et <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">Objet <see langword="SerializationInfo" /> contenant toutes les propriétés de <see langword="XmlException" />.</param>
      <param name="context">Objet <see langword="StreamingContext" /> contenant les informations de contexte.</param>
    </member>
    <member name="M:System.Xml.XmlException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see langword="XmlException" /> avec un message d'erreur spécifié.</summary>
      <param name="message">Description de l'erreur.</param>
    </member>
    <member name="M:System.Xml.XmlException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see langword="XmlException" />.</summary>
      <param name="message">Description de la condition d'erreur.</param>
      <param name="innerException">
        <see cref="T:System.Exception" /> qui a levé <see langword="XmlException" />, le cas échéant. Cette valeur peut être <see langword="null" />.</param>
    </member>
    <member name="M:System.Xml.XmlException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see langword="XmlException" /> avec le message, l'exception interne, le numéro de ligne et la position de ligne spécifiés.</summary>
      <param name="message">Description de l'erreur.</param>
      <param name="innerException">Exception ayant provoqué l'exception actuelle. Cette valeur peut être <see langword="null" />.</param>
      <param name="lineNumber">Numéro de la ligne indiquant l'endroit où l'erreur s'est produite.</param>
      <param name="linePosition">Position de la ligne indiquant l'endroit où l'erreur s'est produite.</param>
    </member>
    <member name="M:System.Xml.XmlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Transmet toutes les propriétés <see langword="XmlException" /> dans la classe <see cref="T:System.Runtime.Serialization.SerializationInfo" /> pour le <see cref="T:System.Runtime.Serialization.StreamingContext" /> donné.</summary>
      <param name="info">Objet <see langword="SerializationInfo" />.</param>
      <param name="context">Objet <see langword="StreamingContext" />.</param>
    </member>
    <member name="P:System.Xml.XmlException.LineNumber">
      <summary>Obtient le numéro de la ligne indiquant l'endroit où l'erreur s'est produite.</summary>
      <returns>Numéro de la ligne indiquant l'endroit où l'erreur s'est produite.</returns>
    </member>
    <member name="P:System.Xml.XmlException.LinePosition">
      <summary>Obtient la position de la ligne indiquant l'endroit où l'erreur s'est produite.</summary>
      <returns>Position de la ligne indiquant l'endroit où l'erreur s'est produite.</returns>
    </member>
    <member name="P:System.Xml.XmlException.Message">
      <summary>Obtient un message décrivant l'exception actuelle.</summary>
      <returns>Message d'erreur qui explique la raison de l'exception.</returns>
    </member>
    <member name="P:System.Xml.XmlException.SourceUri">
      <summary>Obtient l'emplacement du fichier XML.</summary>
      <returns>URI source des données XML. S'il n'y a aucun URI source, cette propriété retourne <see langword="null" />.</returns>
    </member>
    <member name="T:System.Xml.XmlImplementation">
      <summary>Définit le contexte pour un jeu d'objets <see cref="T:System.Xml.XmlDocument" />.</summary>
    </member>
    <member name="M:System.Xml.XmlImplementation.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlImplementation" />.</summary>
    </member>
    <member name="M:System.Xml.XmlImplementation.#ctor(System.Xml.XmlNameTable)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlImplementation" /> avec le <see cref="T:System.Xml.XmlNameTable" /> spécifié.</summary>
      <param name="nt">Objet <see cref="T:System.Xml.XmlNameTable" />.</param>
    </member>
    <member name="M:System.Xml.XmlImplementation.CreateDocument">
      <summary>Crée un <see cref="T:System.Xml.XmlDocument" />.</summary>
      <returns>Nouvel objet <see langword="XmlDocument" /> .</returns>
    </member>
    <member name="M:System.Xml.XmlImplementation.HasFeature(System.String,System.String)">
      <summary>Teste si l'implémentation DOM (Document Object Model) implémente une fonctionnalité spécifique.</summary>
      <param name="strFeature">Nom de package de la fonctionnalité à tester. Ce nom ne respecte pas la casse.</param>
      <param name="strVersion">Ceci est le numéro de version du nom de package à tester. Si la version n'est pas spécifiée (<see langword="null" />), la prise en charge de n'importe quelle version de la fonctionnalité entraîne le retour de <see langword="true" /> par la méthode.</param>
      <returns>
        <see langword="true" /> si la fonctionnalité est implémentée dans la version spécifiée ; sinon, <see langword="false" />.  
Le tableau suivant montre les combinaisons en présence desquelles <see langword="HasFeature" /> retourne <see langword="true" />.  
  strFeature 
  strVersion 
  XML 
  1.0 
  XML 
  2.0</returns>
    </member>
    <member name="T:System.Xml.XmlLinkedNode">
      <summary>Obtient le nœud qui précède ou suit immédiatement ce nœud.</summary>
    </member>
    <member name="P:System.Xml.XmlLinkedNode.NextSibling">
      <summary>Obtient le nœud qui suit immédiatement ce nœud.</summary>
      <returns>
        <see cref="T:System.Xml.XmlNode" /> qui suit immédiatement ce nœud, ou <see langword="null" /> s'il n'y en a pas.</returns>
    </member>
    <member name="P:System.Xml.XmlLinkedNode.PreviousSibling">
      <summary>Obtient le nœud qui précède immédiatement ce nœud.</summary>
      <returns>
        <see cref="T:System.Xml.XmlNode" /> précédent ou <see langword="null" /> s'il n'y en a pas.</returns>
    </member>
    <member name="T:System.Xml.XmlNamedNodeMap">
      <summary>Représente une collection de nœuds accessibles par nom ou index.</summary>
    </member>
    <member name="P:System.Xml.XmlNamedNodeMap.Count">
      <summary>Obtient le nombre de nœuds dans le <see langword="XmlNamedNodeMap" />.</summary>
      <returns>Nombre de nœuds.</returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.GetEnumerator">
      <summary>Fournit une prise en charge de l'itération de style « foreach » sur la collection de nœuds de <see langword="XmlNamedNodeMap" />.</summary>
      <returns>Objet énumérateur.</returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.GetNamedItem(System.String)">
      <summary>Récupère <see cref="T:System.Xml.XmlNode" /> spécifié par son nom.</summary>
      <param name="name">Nom qualifié du nœud à récupérer. Il est comparé à la propriété <see cref="P:System.Xml.XmlNode.Name" /> du nœud correspondant.</param>
      <returns>
        <see langword="XmlNode" /> avec le nom spécifié ou <see langword="null" /> si aucun nœud correspondant n'est trouvé.</returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.GetNamedItem(System.String,System.String)">
      <summary>Récupère un nœud avec les <see cref="P:System.Xml.XmlNode.LocalName" /> et <see cref="P:System.Xml.XmlNode.NamespaceURI" /> correspondants.</summary>
      <param name="localName">Nom local du nœud à récupérer.</param>
      <param name="namespaceURI">URI (Uniform Resource Identifier) de l'espace de noms du nœud à récupérer.</param>
      <returns>
        <see cref="T:System.Xml.XmlNode" /> avec le nom local et l'URI de l'espace de noms correspondants ou <see langword="null" /> si aucun nœud correspondant n'est trouvé.</returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.Item(System.Int32)">
      <summary>Récupère le nœud à l'index spécifié dans <see langword="XmlNamedNodeMap" />.</summary>
      <param name="index">Position de l'index du nœud à récupérer de <see langword="XmlNamedNodeMap" />. L'index est de base zéro ; par conséquent, l'index du premier nœud est 0 et l'index du dernier nœud est <see cref="P:System.Xml.XmlNamedNodeMap.Count" /> -1.</param>
      <returns>Objet <see cref="T:System.Xml.XmlNode" /> à l'index spécifié. Si <paramref name="index" /> est inférieur à 0, ou encore supérieur ou égal à la propriété <see cref="P:System.Xml.XmlNamedNodeMap.Count" />, <see langword="null" /> est retournée.</returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String)">
      <summary>Supprime le nœud de <see langword="XmlNamedNodeMap" />.</summary>
      <param name="name">Nom qualifié du nœud à supprimer. Ce nom est comparé à la propriété <see cref="P:System.Xml.XmlNode.Name" /> du nœud correspondant.</param>
      <returns>
        <see langword="XmlNode" /> supprimé de <see langword="XmlNamedNodeMap" /> ou <see langword="null" /> si aucun nœud correspondant n'est trouvé.</returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String,System.String)">
      <summary>Supprime un nœud avec les <see cref="P:System.Xml.XmlNode.LocalName" /> et <see cref="P:System.Xml.XmlNode.NamespaceURI" /> correspondants.</summary>
      <param name="localName">Nom local du nœud à supprimer.</param>
      <param name="namespaceURI">URI de l'espace de noms du nœud à supprimer.</param>
      <returns>
        <see cref="T:System.Xml.XmlNode" /> supprimé ou <see langword="null" /> si aucun nœud correspondant n'est trouvé.</returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.SetNamedItem(System.Xml.XmlNode)">
      <summary>Ajoute un <see cref="T:System.Xml.XmlNode" /> à l'aide de sa propriété <see cref="P:System.Xml.XmlNode.Name" />.</summary>
      <param name="node">
        <see langword="XmlNode" /> à stocker dans <see langword="XmlNamedNodeMap" />. Si un nœud portant ce nom est déjà présent dans la table, il est remplacé par le nouveau nœud.</param>
      <returns>Si <paramref name="node" /> remplace un nœud existant portant le même nom, l'ancien nœud est retourné ; sinon, <see langword="null" /> est retournée.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="node" /> a été créé à partir d'un <see cref="T:System.Xml.XmlDocument" /> différent de celui qui a créé <see langword="XmlNamedNodeMap" />, ou bien <see langword="XmlNamedNodeMap" /> est en lecture seule.</exception>
    </member>
    <member name="T:System.Xml.XmlNamespaceManager">
      <summary>Résout des espaces de noms dans une collection, ajoute des espaces de noms à une collection, en supprime de celle-ci et gère la portée de ces espaces de noms.</summary>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.#ctor(System.Xml.XmlNameTable)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlNamespaceManager" /> avec le <see cref="T:System.Xml.XmlNameTable" /> spécifié.</summary>
      <param name="nameTable">
        <see cref="T:System.Xml.XmlNameTable" /> à utiliser.</param>
      <exception cref="T:System.NullReferenceException">
        <see langword="null" /> est passée au constructeur.</exception>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.AddNamespace(System.String,System.String)">
      <summary>Ajoute l'espace de noms spécifié à la collection.</summary>
      <param name="prefix">Préfixe à associer à l'espace de noms ajouté. Utilisez String.Empty pour ajouter un espace de noms par défaut.  
 Remarque Si <see cref="T:System.Xml.XmlNamespaceManager" /> est utilisé pour la résolution des espaces de noms dans une expression XPath (XML Path Language), un préfixe doit être spécifié. Si une expression XPath n'inclut pas de préfixe, l'URI (Uniform Resource Identifier) d'espace de noms est supposé être un espace de noms vide. Pour plus d'informations sur les expressions XPath et <see cref="T:System.Xml.XmlNamespaceManager" />, reportez-vous aux méthodes <see cref="M:System.Xml.XmlNode.SelectNodes(System.String)" /> et <see cref="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)" />.</param>
      <param name="uri">Espace de noms à ajouter.</param>
      <exception cref="T:System.ArgumentException">La valeur de <paramref name="prefix" /> est « xml » ou « xmlns ».</exception>
      <exception cref="T:System.ArgumentNullException">La valeur de <paramref name="prefix" /> ou de <paramref name="uri" /> est <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.XmlNamespaceManager.DefaultNamespace">
      <summary>Obtient l'URI de l'espace de noms de l'espace de noms par défaut.</summary>
      <returns>L’URI d’espace de noms pour l’espace de noms par défaut, ou une chaîne vide s’il n’y a pas d’espace de noms par défaut.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.GetEnumerator">
      <summary>Retourne un énumérateur qui peut être utilisé pour itérer au sein des espaces de noms de <see cref="T:System.Xml.XmlNamespaceManager" />.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> contenant les préfixes stockés par <see cref="T:System.Xml.XmlNamespaceManager" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>Obtient une collection de noms d'espace de noms indexés par préfixe qui peut être utilisée pour énumérer les espaces de noms figurant actuellement dans la portée.</summary>
      <param name="scope">Valeur d'énumération qui spécifie le type de nœuds d'espace de noms à retourner.</param>
      <returns>Collection de paires d'espace de noms et préfixe actuellement dans la portée.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.HasNamespace(System.String)">
      <summary>Obtient une valeur indiquant si le préfixe fourni possède un espace de noms défini pour la portée actuelle faisant l'objet d'un push.</summary>
      <param name="prefix">Préfixe de l'espace de noms que vous souhaitez rechercher.</param>
      <returns>
        <see langword="true" /> si un espace de noms est défini ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.LookupNamespace(System.String)">
      <summary>Obtient l'URI de l'espace de noms du préfixe spécifié.</summary>
      <param name="prefix">Préfixe dont vous souhaitez résoudre l'URI de l'espace de noms. Pour mettre en correspondance l'espace de noms par défaut, passez String.Empty.</param>
      <returns>URI de l’espace de noms pour <paramref name="prefix" /> ou <see langword="null" /> en l’absence d’un espace de noms mappé. La chaîne retournée est atomisée.  
Pour plus d'informations sur les chaînes atomisées, consultez la classe <see cref="T:System.Xml.XmlNameTable" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.LookupPrefix(System.String)">
      <summary>Recherche le préfixe déclaré pour l'URI de l'espace de noms spécifié.</summary>
      <param name="uri">Espace de noms à résoudre pour le préfixe.</param>
      <returns>Préfixe correspondant. S'il n'y a aucun préfixe mappé, la méthode retourne String.Empty. Si une valeur nulle est fournie, <see langword="null" /> est alors retourné.</returns>
    </member>
    <member name="P:System.Xml.XmlNamespaceManager.NameTable">
      <summary>Obtient <see cref="T:System.Xml.XmlNameTable" /> associé à cet objet.</summary>
      <returns>
        <see cref="T:System.Xml.XmlNameTable" /> utilisé par cet objet.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.PopScope">
      <summary>Dépile une portée espace de noms de la pile.</summary>
      <returns>
        <see langword="true" /> s'il reste des portées espaces de noms sur la pile ; <see langword="false" /> s'il n'existe plus d'espaces de noms à dépiler.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.PushScope">
      <summary>Exécute un push d'une portée espace de noms dans la pile.</summary>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.RemoveNamespace(System.String,System.String)">
      <summary>Supprime l'espace de noms indiqué pour le préfixe spécifié.</summary>
      <param name="prefix">Préfixe de l'espace de noms.</param>
      <param name="uri">Espace de noms à supprimer pour le préfixe spécifié. L'espace de noms supprimé provient de la portée espace de noms en cours. Les espaces de noms situés en dehors de la portée actuelle sont ignorés.</param>
      <exception cref="T:System.ArgumentNullException">La valeur de <paramref name="prefix" /> ou <paramref name="uri" /> est <see langword="null" />.</exception>
    </member>
    <member name="T:System.Xml.XmlNamespaceScope">
      <summary>Définit la portée espace de noms.</summary>
    </member>
    <member name="F:System.Xml.XmlNamespaceScope.All">
      <summary>Tous les espaces de noms définis dans la portée du nœud actuel. Ceci inclut l'espace de noms xmlns:xml, qui est toujours déclaré implicitement. L'ordre des espaces de noms retournés n'est pas défini.</summary>
    </member>
    <member name="F:System.Xml.XmlNamespaceScope.ExcludeXml">
      <summary>Tous les espaces de noms définis dans la portée du nœud actuel, à l'exclusion de l'espace de noms xmlns:xml, qui est toujours déclaré implicitement. L'ordre des espaces de noms retournés n'est pas défini.</summary>
    </member>
    <member name="F:System.Xml.XmlNamespaceScope.Local">
      <summary>Tous les espaces de noms qui sont définis localement sur le nœud actuel.</summary>
    </member>
    <member name="T:System.Xml.XmlNameTable">
      <summary>Table d'objets de chaînes atomisées.</summary>
    </member>
    <member name="M:System.Xml.XmlNameTable.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlNameTable" />.</summary>
    </member>
    <member name="M:System.Xml.XmlNameTable.Add(System.Char[],System.Int32,System.Int32)">
      <summary>En cas de substitution dans une classe dérivée, atomise la chaîne spécifiée et l'ajoute à <see langword="XmlNameTable" />.</summary>
      <param name="array">Tableau de caractères contenant le nom à ajouter.</param>
      <param name="offset">Index de base zéro dans le tableau spécifiant le premier caractère du nom.</param>
      <param name="length">Nombre de caractères dans le nom.</param>
      <returns>Nouvelle chaîne atomisée ou, le cas échéant, la chaîne existante. Si la longueur a la valeur zéro, String.Empty est retourné.</returns>
      <exception cref="T:System.IndexOutOfRangeException">0 &gt; <paramref name="offset" />  

ou - 
<paramref name="offset" /> &gt;= <paramref name="array" />.Length 
ou 
<paramref name="length" /> &gt; <paramref name="array" />.Length 
Les conditions ci-dessus n'entraînent pas la levée d'une exception si <paramref name="length" />=0.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="length" /> &lt; 0.</exception>
    </member>
    <member name="M:System.Xml.XmlNameTable.Add(System.String)">
      <summary>En cas de substitution dans une classe dérivée, atomise la chaîne spécifiée et l'ajoute à <see langword="XmlNameTable" />.</summary>
      <param name="array">Nom à ajouter.</param>
      <returns>Nouvelle chaîne atomisée ou, le cas échéant, la chaîne existante.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlNameTable.Get(System.Char[],System.Int32,System.Int32)">
      <summary>En cas de substitution dans une classe dérivée, obtient la chaîne atomisée contenant les mêmes caractères que la plage de caractères spécifiée dans le tableau donné.</summary>
      <param name="array">Tableau de caractères contenant le nom à rechercher.</param>
      <param name="offset">Index de base zéro dans le tableau spécifiant le premier caractère du nom.</param>
      <param name="length">Nombre de caractères dans le nom.</param>
      <returns>Chaîne atomisée ou <see langword="null" /> si la chaîne n'a pas encore été atomisée. Si <paramref name="length" /> a la valeur zéro, String.Empty est retourné.</returns>
      <exception cref="T:System.IndexOutOfRangeException">0 &gt; <paramref name="offset" />  

ou - 
<paramref name="offset" /> &gt;= <paramref name="array" />.Length 
ou 
<paramref name="length" /> &gt; <paramref name="array" />.Length 
Les conditions ci-dessus n'entraînent pas la levée d'une exception si <paramref name="length" />=0.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="length" /> &lt; 0.</exception>
    </member>
    <member name="M:System.Xml.XmlNameTable.Get(System.String)">
      <summary>En cas de substitution dans une classe dérivée, obtient la chaîne atomisée contenant la même valeur que la chaîne spécifiée.</summary>
      <param name="array">Nom à rechercher.</param>
      <returns>Chaîne atomisée ou <see langword="null" /> si la chaîne n'a pas encore été atomisée.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> est <see langword="null" />.</exception>
    </member>
    <member name="T:System.Xml.XmlNode">
      <summary>Représente un nœud unique dans le document XML.</summary>
    </member>
    <member name="M:System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)">
      <summary>Ajoute le nœud spécifié à la fin de la liste des nœuds enfants de ce nœud.</summary>
      <param name="newChild">Le nœud à ajouter. Tout le contenu du nœud à ajouter est déplacé dans l'emplacement spécifié.</param>
      <returns>Nœud ajouté.</returns>
      <exception cref="T:System.InvalidOperationException">Le type de ce nœud n'autorise pas les nœuds enfants possédant le type de nœud <paramref name="newChild" />.  
<paramref name="newChild" /> est un ancêtre de ce nœud.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="newChild" /> a été créé à partir d'un document différent de celui qui a créé ce nœud.  
Ce nœud est en lecture seule.</exception>
    </member>
    <member name="P:System.Xml.XmlNode.Attributes">
      <summary>Obtient un <see cref="T:System.Xml.XmlAttributeCollection" /> contenant les attributs du nœud.</summary>
      <returns>
        <see langword="XmlAttributeCollection" /> contenant les attributs du nœud.  
Si le nœud est de type XmlNodeType.Element, les attributs du nœud sont retournés. Sinon, cette propriété retourne <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.BaseURI">
      <summary>Obtient l'URI de base du nœud actuel.</summary>
      <returns>Emplacement à partir duquel le nœud a été chargé ou String.Empty si le nœud n'a pas d'URI de base.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.ChildNodes">
      <summary>Obtient tous les nœuds enfants du nœud.</summary>
      <returns>Objet contenant tous les nœuds enfants du nœud.  
En l'absence de nœuds enfants, cette propriété retourne un <see cref="T:System.Xml.XmlNodeList" /> vide.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.Clone">
      <summary>Crée un doublon de ce nœud.</summary>
      <returns>Nœud cloné.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.CloneNode(System.Boolean)">
      <summary>Crée un doublon du nœud en cas de substitution dans une classe dérivée.</summary>
      <param name="deep">
        <see langword="true" /> pour cloner récursivement la sous-arborescence sous le nœud spécifié ; <see langword="false" /> pour cloner seulement le nœud lui-même.</param>
      <returns>Nœud cloné.</returns>
      <exception cref="T:System.InvalidOperationException">Appel de cette méthode sur un type de nœud ne pouvant pas être cloné.</exception>
    </member>
    <member name="M:System.Xml.XmlNode.CreateNavigator">
      <summary>Crée <see cref="T:System.Xml.XPath.XPathNavigator" /> pour la navigation dans cet objet.</summary>
      <returns>Un objet <see langword="XPathNavigator" /> utilisé pour naviguer dans le nœud. <see langword="XPathNavigator" /> est placé sur le nœud à partir duquel la méthode a été appelée. Il n'est pas placé sur la racine du document.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.FirstChild">
      <summary>Obtient le premier enfant du nœud.</summary>
      <returns>Premier enfant du nœud. Si le nœud n'existe pas, <see langword="null" /> est retournée.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.GetEnumerator">
      <summary>Obtient un énumérateur qui effectue les itérations au sein des nœuds enfants du nœud en cours.</summary>
      <returns>Objet <see cref="T:System.Collections.IEnumerator" /> qui permet d'effectuer des itérations au sein des nœuds enfants du nœud en cours.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)">
      <summary>Recherche la déclaration xmlns la plus proche du préfixe spécifié qui se trouve dans la portée du nœud actuel, puis retourne l’URI de l’espace de noms dans la déclaration.</summary>
      <param name="prefix">Préfixe dont vous recherchez l'URI d'espace de noms.</param>
      <returns>URI de l'espace de noms du préfixe spécifié.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.GetPrefixOfNamespace(System.String)">
      <summary>Recherche la déclaration xmlns la plus proche de l’URI de l’espace de noms spécifié qui se trouve dans la portée du nœud actuel, puis retourne le préfixe défini dans cette déclaration.</summary>
      <param name="namespaceURI">URI de l'espace de noms dont vous recherchez le préfixe.</param>
      <returns>Préfixe de l'URI de l'espace de noms spécifié.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.HasChildNodes">
      <summary>Obtient une valeur indiquant si ce nœud possède des nœuds enfants.</summary>
      <returns>
        <see langword="true" /> si le nœud possède des nœuds enfants ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.InnerText">
      <summary>Obtient ou définit les valeurs concaténées du nœud et de tous ses nœuds enfants.</summary>
      <returns>Valeurs concaténées du nœud et de tous ses nœuds enfants.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.InnerXml">
      <summary>Obtient ou définit le balisage représentant uniquement les nœuds enfants de ce nœud.</summary>
      <returns>Balisage des nœuds enfants de ce nœud.  
 <see langword="InnerXml" /> ne retourne pas les attributs par défaut.</returns>
      <exception cref="T:System.InvalidOperationException">Définition de cette propriété sur un nœud ne pouvant pas avoir de nœuds enfants.</exception>
      <exception cref="T:System.Xml.XmlException">Le code XML spécifié pendant la définition de cette propriété n’est pas bien formé.</exception>
    </member>
    <member name="M:System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary>Insère le nœud spécifié immédiatement après le nœud de référence spécifié.</summary>
      <param name="newChild">Le nœud à insérer.</param>
      <param name="refChild">Le nœud de référence. <paramref name="newChild" /> est placé après <paramref name="refChild" />.</param>
      <returns>Nœud inséré.</returns>
      <exception cref="T:System.InvalidOperationException">Le type de ce nœud n'autorise pas les nœuds enfants possédant le type de nœud <paramref name="newChild" />.  
<paramref name="newChild" /> est un ancêtre de ce nœud.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="newChild" /> a été créé à partir d'un document différent de celui qui a créé ce nœud.  
<paramref name="refChild" /> n'est pas un enfant de ce nœud.  
Ce nœud est en lecture seule.</exception>
    </member>
    <member name="M:System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary>Insère le nœud spécifié immédiatement avant le nœud de référence spécifié.</summary>
      <param name="newChild">Le nœud à insérer.</param>
      <param name="refChild">Le nœud de référence. <paramref name="newChild" /> est placé avant ce nœud.</param>
      <returns>Nœud inséré.</returns>
      <exception cref="T:System.InvalidOperationException">Le type du nœud actuel n'autorise pas les nœuds enfants possédant le type de nœud <paramref name="newChild" />.  
<paramref name="newChild" /> est un ancêtre de ce nœud.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="newChild" /> a été créé à partir d'un document différent de celui qui a créé ce nœud.  
<paramref name="refChild" /> n'est pas un enfant de ce nœud.  
Ce nœud est en lecture seule.</exception>
    </member>
    <member name="P:System.Xml.XmlNode.IsReadOnly">
      <summary>Obtient une valeur indiquant si le nœud est en lecture seule.</summary>
      <returns>
        <see langword="true" />Si le nœud est en lecture seule; Sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.Item(System.String)">
      <summary>Obtient le premier élément enfant avec le <see cref="P:System.Xml.XmlNode.Name" /> spécifié.</summary>
      <param name="name">Nom qualifié de l'élément à récupérer</param>
      <returns>Premier <see cref="T:System.Xml.XmlElement" /> correspondant au nom spécifié. Elle retourne une référence nulle (<see langword="Nothing" /> en Visual Basic) si aucune correspondance n'est trouvée.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.Item(System.String,System.String)">
      <summary>Obtient le premier élément enfant avec le <see cref="P:System.Xml.XmlNode.LocalName" /> et le <see cref="P:System.Xml.XmlNode.NamespaceURI" /> spécifiés.</summary>
      <param name="localname">Le nom local de l'élément.</param>
      <param name="ns">L'URI de l'espace de noms de l'élément.</param>
      <returns>Premier <see cref="T:System.Xml.XmlElement" /> ayant les <paramref name="localname" /> et <paramref name="ns" /> correspondants. . Elle retourne une référence nulle (<see langword="Nothing" /> en Visual Basic) si aucune correspondance n'est trouvée.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.LastChild">
      <summary>Obtient le dernier enfant du nœud.</summary>
      <returns>Dernier enfant du nœud. Si le nœud n'existe pas, <see langword="null" /> est retournée.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.LocalName">
      <summary>Obtient le nom local du nœud en cas de substitution dans une classe dérivée.</summary>
      <returns>Nom du nœud dont le préfixe est supprimé. Par exemple, <see langword="LocalName" /> est Book pour l’élément &lt;BK: Book&gt;.  
Le nom retourné dépend du <see cref="P:System.Xml.XmlNode.NodeType" /> du nœud : 
  Type 
  Name 
  Attribut 
  Le nom local de l'attribut.  
  CDATA 
  #cdata-section 
  Commentaire 
  #comment 
  Document 
  #document 
  DocumentFragment 
  #document-fragment 
  DocumentType ; 
  Nom du type de document.  
  Élément 
  Le nom local de l'élément.  
  Entité 
  Nom de l'entité.  
  EntityReference 
  Nom de l'entité référencée.  
  Notation 
  Nom de la notation.  
  ProcessingInstruction ; 
  Cible de l'instruction de traitement.  
  Texte 
  #text 
  Whitespace 
  #whitespace 
  SignificantWhitespace 
  #significant-whitespace 
  XmlDeclaration 
  #xml-declaration</returns>
    </member>
    <member name="P:System.Xml.XmlNode.Name">
      <summary>Obtient le nom qualifié du nœud, en cas de substitution dans une classe dérivée.</summary>
      <returns>Nom qualifié du nœud. Le nom retourné dépend du <see cref="P:System.Xml.XmlNode.NodeType" /> du nœud : 
  Type 
  Name 
  Attribut 
  Nom qualifié de l'attribut.  
  CDATA 
  #cdata-section 
  Commentaire 
  #comment 
  Document 
  #document 
  DocumentFragment 
  #document-fragment 
  DocumentType ; 
  Nom du type de document.  
  Élément 
  Nom qualifié de l'élément.  
  Entité 
  Nom de l'entité.  
  EntityReference 
  Nom de l'entité référencée.  
  Notation 
  Nom de la notation.  
  ProcessingInstruction ; 
  Cible de l'instruction de traitement.  
  Texte 
  #text 
  Whitespace 
  #whitespace 
  SignificantWhitespace 
  #significant-whitespace 
  XmlDeclaration 
  #xml-declaration</returns>
    </member>
    <member name="P:System.Xml.XmlNode.NamespaceURI">
      <summary>Obtient l'URI de l'espace de noms de ce nœud.</summary>
      <returns>Espace de noms d'URI du nœud. En l'absence d'URI d'espace de noms, cette propriété retourne String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.NextSibling">
      <summary>Obtient le nœud qui suit immédiatement ce nœud.</summary>
      <returns>
        <see langword="XmlNode" /> suivant. Si le nœud suivant n'existe pas, <see langword="null" /> est retournée.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.NodeType">
      <summary>Obtient le type du nœud actuel, en cas de substitution dans une classe dérivée.</summary>
      <returns>Une des valeurs de <see cref="T:System.Xml.XmlNodeType" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.Normalize">
      <summary>Place tous les nœuds XmlText dans la profondeur du sous-arbre sous XmlNode dans un formulaire « normal », où seul le balisage (c’est-à-dire les étiquettes, les commentaires, les instructions de traitement, les sections CDATA et les références d’entité) sépare les nœuds XmlText ; en d’autres termes, il n’existe pas de nœuds XmlText adjacents.</summary>
    </member>
    <member name="P:System.Xml.XmlNode.OuterXml">
      <summary>Obtient la marque contenant ce nœud et tous ses nœuds enfants.</summary>
      <returns>Balisage contenant ce nœud et tous ses nœuds enfants.  
 <see langword="OuterXml" /> ne retourne pas les attributs par défaut.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.OwnerDocument">
      <summary>Obtient le <see cref="T:System.Xml.XmlDocument" /> auquel ce nœud appartient.</summary>
      <returns>
        <see cref="T:System.Xml.XmlDocument" /> auquel ce nœud appartient.  
Si le nœud est <see cref="T:System.Xml.XmlDocument" /> (NodeType est égal à XmlNodeType.Document), cette propriété retourne <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.ParentNode">
      <summary>Obtient le parent de ce nœud (pour les nœuds qui peuvent avoir des parents).</summary>
      <returns>
        <see langword="XmlNode" /> correspondant au parent du nœud actif. Si un nœud vient d’être créé mais qu’il n’a pas encore été ajouté à l’arborescence, ou s’il a été supprimé de celle-ci, le parent est <see langword="null" />. Pour tous les autres nœuds, la valeur retournée dépend du <see cref="P:System.Xml.XmlNode.NodeType" /> du nœud. Le tableau suivant décrit les différentes valeurs de retour possibles pour la propriété <see langword="ParentNode" />.  
  NodeType 
  Valeur de retour de ParentNode 
  Attribute, Document, DocumentFragment, Entity et Notation 
  Retourne <see langword="null" /> ; ces nœuds n'ont pas de parents.  

  CDATA 
  Retourne l'élément ou la référence d'entité contenant la section CDATA.  

  Commentaire 
  Retourne l'élément, la référence d'entité, le type de document ou le document contenant le commentaire.  

  DocumentType ; 
  Retourne le nœud du document.  

  Élément 
  Retourne le nœud parent de l'élément. Si l'élément est le nœud racine de l'arborescence, le parent est le nœud du document.  

  EntityReference 
  Retourne l'élément, l'attribut ou la référence d'entité contenant la référence d'entité.  

  ProcessingInstruction ; 
  Retourne le document, l'élément, le type de document ou la référence d'entité contenant l'instruction de traitement.  

  Texte 
  Retourne l'élément parent, l'attribut ou la référence d'entité contenant le nœud de texte.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.Prefix">
      <summary>Obtient ou définit le préfixe de l'espace de noms de ce nœud.</summary>
      <returns>Préfixe de l'espace de noms de ce nœud. Par exemple, <see langword="Prefix" /> est BK pour l’élément &lt;BK: Book&gt;. En l'absence de préfixe, cette propriété retourne String.Empty.</returns>
      <exception cref="T:System.ArgumentException">Ce nœud est en lecture seule.</exception>
      <exception cref="T:System.Xml.XmlException">Le préfixe spécifié contient un caractère non valide.  
 Le préfixe spécifié est mal formé.  
 Le préfixe spécifié est « xml » et l’URI d’espace de noms de ce nœud est différent de « http://www.w3.org/XML/1998/namespace ».  
 Le nœud est un attribut, le préfixe spécifié est « xmlns » et l’URI d’espace de noms de ce nœud est différent de « http://www.w3.org/2000/xmlns/ ».  
 Ce nœud est un attribut et le qualifiedName de ce nœud est "xmlns".</exception>
    </member>
    <member name="M:System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)">
      <summary>Ajoute le nœud spécifié au début de la liste des nœuds enfants de ce nœud.</summary>
      <param name="newChild">Le nœud à ajouter. Tout le contenu du nœud à ajouter est déplacé dans l'emplacement spécifié.</param>
      <returns>Nœud ajouté.</returns>
      <exception cref="T:System.InvalidOperationException">Le type de ce nœud n'autorise pas les nœuds enfants possédant le type de nœud <paramref name="newChild" />.  
<paramref name="newChild" /> est un ancêtre de ce nœud.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="newChild" /> a été créé à partir d'un document différent de celui qui a créé ce nœud.  
Ce nœud est en lecture seule.</exception>
    </member>
    <member name="P:System.Xml.XmlNode.PreviousSibling">
      <summary>Obtient le nœud qui précède immédiatement ce nœud.</summary>
      <returns>
        <see langword="XmlNode" /> précédent. Si le nœud précédent n'existe pas, <see langword="null" /> est retournée.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.PreviousText">
      <summary>Obtient le nœud de texte qui précède immédiatement ce nœud.</summary>
      <returns>retourne <see cref="T:System.Xml.XmlNode" /> ;</returns>
    </member>
    <member name="M:System.Xml.XmlNode.RemoveAll">
      <summary>Supprime tous les nœuds enfants et/ou d'attributs du nœud actuel.</summary>
    </member>
    <member name="M:System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)">
      <summary>Supprime le nœud enfant spécifié.</summary>
      <param name="oldChild">Nœud supprimé.</param>
      <returns>Nœud supprimé.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="oldChild" /> n'est pas un enfant de ce nœud. ou bien ce nœud est en lecture seule.</exception>
    </member>
    <member name="M:System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary>Remplace le nœud enfant <paramref name="oldChild" /> par le nœud <paramref name="newChild" />.</summary>
      <param name="newChild">Nouveau nœud à insérer dans la liste enfant.</param>
      <param name="oldChild">Nœud remplacé dans la liste.</param>
      <returns>Nœud remplacé.</returns>
      <exception cref="T:System.InvalidOperationException">Le type de ce nœud n'autorise pas les nœuds enfants possédant le type de nœud <paramref name="newChild" />.  
<paramref name="newChild" /> est un ancêtre de ce nœud.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="newChild" /> a été créé à partir d'un document différent de celui qui a créé ce nœud.  
Ce nœud est en lecture seule.  
<paramref name="oldChild" /> n'est pas un enfant de ce nœud.</exception>
    </member>
    <member name="P:System.Xml.XmlNode.SchemaInfo">
      <summary>Obtient le jeu d’informations postérieures à la validation du schéma qui a été assigné à ce nœud à la suite de la validation du schéma.</summary>
      <returns>Objet <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> contenant le jeu d'informations postérieures à la validation du schéma de ce nœud.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.SelectNodes(System.String)">
      <summary>Sélectionne une liste de nœuds correspondant à l'expression XPath.</summary>
      <param name="xpath">Expression XPath.</param>
      <returns>
        <see cref="T:System.Xml.XmlNodeList" /> contenant une collection de nœuds correspondant à la requête XPath.</returns>
      <exception cref="T:System.Xml.XPath.XPathException">L'expression XPath contient un préfixe. Consultez Exemples de XPath.</exception>
    </member>
    <member name="M:System.Xml.XmlNode.SelectNodes(System.String,System.Xml.XmlNamespaceManager)">
      <summary>Sélectionne une liste de nœuds correspondant à l'expression XPath. Tous les préfixes trouvés dans l'expression XPath sont résolus à l'aide du <see cref="T:System.Xml.XmlNamespaceManager" /> fourni.</summary>
      <param name="xpath">Expression XPath. Consultez Exemples de XPath.</param>
      <param name="nsmgr">
        <see cref="T:System.Xml.XmlNamespaceManager" /> à utiliser pour résoudre les espaces de noms des préfixes dans l'expression XPath.</param>
      <returns>
        <see cref="T:System.Xml.XmlNodeList" /> contenant une collection de nœuds correspondant à la requête XPath.</returns>
      <exception cref="T:System.Xml.XPath.XPathException">L'expression XPath contient un préfixe qui n'est pas défini dans <see langword="XmlNamespaceManager" />.</exception>
    </member>
    <member name="M:System.Xml.XmlNode.SelectSingleNode(System.String)">
      <summary>Sélectionne le premier <see langword="XmlNode" /> correspondant à l'expression XPath.</summary>
      <param name="xpath">Expression XPath. Consultez Exemples de XPath.</param>
      <returns>Premier <see langword="XmlNode" /> correspondant à la requête XPath ou <see langword="null" /> si aucun nœud correspondant n'est trouvé.</returns>
      <exception cref="T:System.Xml.XPath.XPathException">L'expression XPath contient un préfixe.</exception>
    </member>
    <member name="M:System.Xml.XmlNode.SelectSingleNode(System.String,System.Xml.XmlNamespaceManager)">
      <summary>Sélectionne le premier <see langword="XmlNode" /> correspondant à l'expression XPath. Tous les préfixes trouvés dans l'expression XPath sont résolus à l'aide du <see cref="T:System.Xml.XmlNamespaceManager" /> fourni.</summary>
      <param name="xpath">Expression XPath. Consultez Exemples de XPath.</param>
      <param name="nsmgr">
        <see cref="T:System.Xml.XmlNamespaceManager" /> à utiliser pour résoudre les espaces de noms des préfixes dans l'expression XPath.</param>
      <returns>Premier <see langword="XmlNode" /> correspondant à la requête XPath ou <see langword="null" /> si aucun nœud correspondant n'est trouvé.</returns>
      <exception cref="T:System.Xml.XPath.XPathException">L'expression XPath contient un préfixe qui n'est pas défini dans <see langword="XmlNamespaceManager" />.</exception>
    </member>
    <member name="M:System.Xml.XmlNode.Supports(System.String,System.String)">
      <summary>Teste si l'implémentation DOM implémente une fonctionnalité spécifique.</summary>
      <param name="feature">Nom de package de la fonctionnalité à tester. Ce nom ne respecte pas la casse.</param>
      <param name="version">Numéro de version du nom de package à tester. Si la version n’est pas spécifiée (null), la prise en charge de n’importe quelle version de la fonctionnalité entraîne le retour de la valeur true par la méthode.</param>
      <returns>
        <see langword="true" /> si la fonctionnalité est implémentée dans la version spécifiée ; sinon, <see langword="false" />. Le tableau suivant décrit les combinaisons qui retournent <see langword="true" />.  
  Fonctionnalité 
  Version 
  XML 
  1.0 
  XML 
  2.0</returns>
    </member>
    <member name="M:System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.XmlNode.GetEnumerator" />.</summary>
      <returns>Énumérateur de la collection.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.System#ICloneable#Clone">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.XmlNode.Clone" />.</summary>
      <returns>Copie du nœud à partir duquel il est appelé.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.Value">
      <summary>Obtient ou définit la valeur du nœud.</summary>
      <returns>La valeur retournée dépend du <see cref="P:System.Xml.XmlNode.NodeType" /> du nœud : 
  Type 
  Value 
  Attribut 
  Valeur de l'attribut.  
  CDATASection. 
  Contenu de la section CDATA.  
  Commentaire 
  Contenu du commentaire.  
  Document 
 <see langword="null" />.  
  DocumentFragment 
 <see langword="null" />.  
  DocumentType ; 
 <see langword="null" />.  
  Élément 
 <see langword="null" />. Vous pouvez utiliser les propriétés <see cref="P:System.Xml.XmlElement.InnerText" /> ou <see cref="P:System.Xml.XmlElement.InnerXml" /> pour accéder à la valeur du nœud d'élément.  
  Entité 
 <see langword="null" />.  
  EntityReference 
 <see langword="null" />.  
  Notation 
 <see langword="null" />.  
  ProcessingInstruction ; 
  Contenu entier, à l'exclusion de la cible.  
  Texte 
  Contenu du nœud de texte.  
  SignificantWhitespace 
  Espaces blancs. Un espace blanc peut se composer de plusieurs espaces, retours chariots, changements de ligne ou tabulations.  
  Whitespace 
  Espaces blancs. Un espace blanc peut se composer de plusieurs espaces, retours chariots, changements de ligne ou tabulations.  
  XmlDeclaration 
  Contenu de la déclaration (c’est-à-dire tout ce qui se trouve &lt;entre? XML et&gt;?).</returns>
      <exception cref="T:System.ArgumentException">Définition de la valeur d'un nœud qui est en lecture seule.</exception>
      <exception cref="T:System.InvalidOperationException">Définition de la valeur d'un nœud qui n'est pas censé posséder de valeur (par exemple un nœud Element).</exception>
    </member>
    <member name="M:System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Enregistre tous les nœuds enfants du nœud dans le <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="w">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="M:System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)">
      <summary>Enregistre le nœud actuel dans le <see cref="T:System.Xml.XmlWriter" /> spécifié, en cas de substitution dans une classe dérivée.</summary>
      <param name="w">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="T:System.Xml.XmlNodeChangedAction">
      <summary>Spécifie le type de modification du nœud.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeChangedAction.Change">
      <summary>Une valeur de nœud est modifiée.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeChangedAction.Insert">
      <summary>Un nœud est inséré dans l'arborescence.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeChangedAction.Remove">
      <summary>Un nœud est supprimé de l'arborescence.</summary>
    </member>
    <member name="T:System.Xml.XmlNodeChangedEventArgs">
      <summary>Fournit des données pour les événements <see cref="E:System.Xml.XmlDocument.NodeChanged" />, <see cref="E:System.Xml.XmlDocument.NodeChanging" />, <see cref="E:System.Xml.XmlDocument.NodeInserted" />, <see cref="E:System.Xml.XmlDocument.NodeInserting" />, <see cref="E:System.Xml.XmlDocument.NodeRemoved" /> et <see cref="E:System.Xml.XmlDocument.NodeRemoving" />.</summary>
    </member>
    <member name="M:System.Xml.XmlNodeChangedEventArgs.#ctor(System.Xml.XmlNode,System.Xml.XmlNode,System.Xml.XmlNode,System.String,System.String,System.Xml.XmlNodeChangedAction)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlNodeChangedEventArgs" />.</summary>
      <param name="node">
        <see cref="T:System.Xml.XmlNode" /> qui a généré l'événement.</param>
      <param name="oldParent">Le parent ancien <see cref="T:System.Xml.XmlNode" /> du <see cref="T:System.Xml.XmlNode" /> qui a généré l'événement.</param>
      <param name="newParent">Le nouveau parent <see cref="T:System.Xml.XmlNode" /> du <see cref="T:System.Xml.XmlNode" /> qui a généré l'événement.</param>
      <param name="oldValue">L'ancienne valeur du <see cref="T:System.Xml.XmlNode" /> qui a généré l'événement.</param>
      <param name="newValue">La nouvelle valeur du <see cref="T:System.Xml.XmlNode" /> qui a généré l'événement.</param>
      <param name="action">L’<see cref="T:System.Xml.XmlNodeChangedAction" />opérateur</param>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.Action">
      <summary>Obtient une valeur indiquant le type d'événement de modification du nœud qui se produit.</summary>
      <returns>L’une des valeurs d’énumération qui décrit l’événement de modification de nœud. La valeur <see langword="Action" /> ne distingue pas le moment de l'exécution de l'action (avant ou après). Vous pouvez créer des gestionnaires d'événements distincts pour gérer les deux instances.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.NewParent">
      <summary>Obtient la valeur de <see cref="P:System.Xml.XmlNode.ParentNode" /> une fois l'opération terminée.</summary>
      <returns>Valeur de <see langword="ParentNode" /> une fois l'opération terminée. Cette propriété retourne <see langword="null" /> si le nœud est supprimé.  
   
 Pour les nœuds d'attribut, cette propriété retourne <see cref="P:System.Xml.XmlAttribute.OwnerElement" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.NewValue">
      <summary>Obtient la nouvelle valeur du nœud.</summary>
      <returns>Nouvelle valeur du nœud. Cette propriété retourne <see langword="null" /> si le nœud n'est ni un attribut ni un nœud de texte, ou si le nœud est supprimé.  
En cas d'appel dans un événement <see cref="E:System.Xml.XmlDocument.NodeChanging" />, <see langword="NewValue" /> retourne la valeur du nœud si la modification réussit. En cas d'appel dans un événement <see cref="E:System.Xml.XmlDocument.NodeChanged" />, <see langword="NewValue" /> retourne la valeur actuelle du nœud.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.Node">
      <summary>Obtient <see cref="T:System.Xml.XmlNode" /> qui est ajouté, supprimé ou modifié.</summary>
      <returns>
        <see langword="XmlNode" /> ajouté, supprimé ou modifié ; cette propriété ne retourne jamais <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.OldParent">
      <summary>Obtient la valeur de <see cref="P:System.Xml.XmlNode.ParentNode" /> avant le début de l'opération.</summary>
      <returns>Valeur de <see langword="ParentNode" /> avant le début de l'opération. Cette propriété retourne <see langword="null" /> si le nœud n'a pas de parent.  
   
 Pour les nœuds d'attribut, cette propriété retourne <see cref="P:System.Xml.XmlAttribute.OwnerElement" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.OldValue">
      <summary>Obtient la valeur d'origine du nœud.</summary>
      <returns>Valeur d'origine du nœud. Cette propriété retourne <see langword="null" /> si le nœud n'est ni un attribut ni un nœud de texte, ou si le nœud est en cours d'insertion.  
En cas d'appel dans un événement <see cref="E:System.Xml.XmlDocument.NodeChanging" />, <see langword="OldValue" /> retourne la valeur actuelle du nœud qui sera remplacée si la modification réussit. En cas d'appel dans un événement <see cref="E:System.Xml.XmlDocument.NodeChanged" />, <see langword="OldValue" /> retourne la valeur du nœud avant la modification.</returns>
    </member>
    <member name="T:System.Xml.XmlNodeChangedEventHandler">
      <summary>Représente la méthode qui gère les événements <see cref="E:System.Xml.XmlDocument.NodeChanged" />, <see cref="E:System.Xml.XmlDocument.NodeChanging" />, <see cref="E:System.Xml.XmlDocument.NodeInserted" />, <see cref="E:System.Xml.XmlDocument.NodeInserting" />, <see cref="E:System.Xml.XmlDocument.NodeRemoved" /> et <see cref="E:System.Xml.XmlDocument.NodeRemoving" />.</summary>
      <param name="sender">Source de l'événement.</param>
      <param name="e">
        <see cref="T:System.Xml.XmlNodeChangedEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="T:System.Xml.XmlNodeList">
      <summary>Représente une collection ordonnée de nœuds.</summary>
    </member>
    <member name="M:System.Xml.XmlNodeList.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlNodeList" />.</summary>
    </member>
    <member name="P:System.Xml.XmlNodeList.Count">
      <summary>Obtient le nombre de nœuds dans le <see langword="XmlNodeList" />.</summary>
      <returns>Nombre de nœuds dans le <see langword="XmlNodeList" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeList.GetEnumerator">
      <summary>Obtient un énumérateur qui itère au sein de la collection de nœuds.</summary>
      <returns>Énumérateur utilisé pour itérer au sein de la collection de nœuds.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeList.Item(System.Int32)">
      <summary>Récupère un nœud à l'index spécifié.</summary>
      <param name="index">Index de base zéro dans la liste de nœuds.</param>
      <returns>
        <see cref="T:System.Xml.XmlNode" /> avec l'index spécifié dans la collection. Si <paramref name="index" /> est supérieur ou égal au nombre de nœuds de la liste, cet état retourne <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeList.ItemOf(System.Int32)">
      <summary>Obtient un nœud à l'index spécifié.</summary>
      <param name="i">Index de base zéro dans la liste de nœuds.</param>
      <returns>
        <see cref="T:System.Xml.XmlNode" /> avec l'index spécifié dans la collection. Si l'index est supérieur ou égal au nombre de nœuds de la liste, cet état retourne <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeList.PrivateDisposeNodeList">
      <summary>Supprime les ressources dans la liste de nœuds en privé.</summary>
    </member>
    <member name="M:System.Xml.XmlNodeList.System#IDisposable#Dispose">
      <summary>Libère toutes les ressources utilisées par la classe <see cref="T:System.Xml.XmlNodeList" />.</summary>
    </member>
    <member name="T:System.Xml.XmlNodeOrder">
      <summary>Décrit l'ordre des documents dans un nœud comparé à un second nœud.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeOrder.After">
      <summary>Le nœud actuel de ce navigateur se situe après le nœud actuel du navigateur fourni.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeOrder.Before">
      <summary>Le nœud actuel de ce navigateur se situe avant le nœud actuel du navigateur fourni.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeOrder.Same">
      <summary>Les deux navigateurs sont placés sur le même nœud.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeOrder.Unknown">
      <summary>La position des nœuds ne peut pas être déterminée dans l'ordre des documents, les uns par rapport aux autres. Cela peut se produire si les deux nœuds résident dans des arborescences différentes.</summary>
    </member>
    <member name="T:System.Xml.XmlNodeReader">
      <summary>Représente un lecteur fournissant un accès aux données XML par un flux rapide, non mis en cache et avant uniquement dans <see cref="T:System.Xml.XmlNode" />.</summary>
    </member>
    <member name="M:System.Xml.XmlNodeReader.#ctor(System.Xml.XmlNode)">
      <summary>Crée une instance de la classe <see langword="XmlNodeReader" /> à l'aide du <see cref="T:System.Xml.XmlNode" /> spécifié.</summary>
      <param name="node">
        <see langword="XmlNode" /> à lire.</param>
    </member>
    <member name="P:System.Xml.XmlNodeReader.AttributeCount">
      <summary>Obtient le nombre d'attributs du nœud actuel.</summary>
      <returns>Nombre d'attributs du nœud actuel. Ce nombre inclut les attributs par défaut.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.BaseURI">
      <summary>Obtient l'URI de base du nœud actuel.</summary>
      <returns>URI de base du nœud actuel.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.CanReadBinaryContent">
      <summary>Obtient une valeur indiquant si <see cref="T:System.Xml.XmlNodeReader" /> implémente les méthodes de lecture de contenu binaire.</summary>
      <returns>
        <see langword="true" /> si les méthodes de lecture de contenu binaire sont implémentées ; sinon, <see langword="false" />. La classe <see cref="T:System.Xml.XmlNodeReader" /> retourne toujours <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.CanResolveEntity">
      <summary>Obtient une valeur indiquant si ce lecteur peut analyser et résoudre les entités.</summary>
      <returns>
        <see langword="true" /> si le lecteur peut analyser et résoudre les entités ; sinon, <see langword="false" />. <see langword="XmlNodeReader" /> retourne toujours <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.Close">
      <summary>Modifie <see cref="P:System.Xml.XmlNodeReader.ReadState" /> en lui attribuant la valeur <see langword="Closed" />.</summary>
    </member>
    <member name="P:System.Xml.XmlNodeReader.Depth">
      <summary>Obtient la profondeur du nœud actuel dans le document XML.</summary>
      <returns>Profondeur du nœud actuel dans le document XML.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.EOF">
      <summary>Obtient une valeur indiquant si le lecteur est placé à la fin du flux.</summary>
      <returns>
        <see langword="true" /> si le lecteur est placé à la fin du flux ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.GetAttribute(System.Int32)">
      <summary>Obtient la valeur de l'attribut avec l'index spécifié.</summary>
      <param name="attributeIndex">Index de l'attribut. L'index est de base zéro. Le premier attribut possède l'index 0.</param>
      <returns>Valeur de l'attribut spécifié.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Le paramètre <paramref name="i" /> est inférieur à 0 ou encore supérieur ou égal à <see cref="P:System.Xml.XmlNodeReader.AttributeCount" />.</exception>
    </member>
    <member name="M:System.Xml.XmlNodeReader.GetAttribute(System.String)">
      <summary>Obtient la valeur de l'attribut avec le nom spécifié.</summary>
      <param name="name">Nom qualifié de l'attribut.</param>
      <returns>Valeur de l'attribut spécifié. Si l'attribut est introuvable, <see langword="null" /> est retourné.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.GetAttribute(System.String,System.String)">
      <summary>Obtient la valeur de l'attribut avec le nom local et l'URI de l'espace de noms spécifiés.</summary>
      <param name="name">Le nom local de l'attribut.</param>
      <param name="namespaceURI">L'URI de l'espace de noms de l'attribut.</param>
      <returns>Valeur de l'attribut spécifié. Si l'attribut est introuvable, <see langword="null" /> est retourné.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.HasAttributes">
      <summary>Obtient une valeur indiquant si le nœud actuel a des attributs.</summary>
      <returns>
        <see langword="true" /> si le nœud actuel possède des attributs ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.HasValue">
      <summary>Obtient une valeur indiquant si le nœud actuel possède <see cref="P:System.Xml.XmlNodeReader.Value" />.</summary>
      <returns>
        <see langword="true" /> si le nœud sur lequel le lecteur est placé actuellement peut avoir un <see langword="Value" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.IsDefault">
      <summary>Obtient une valeur indiquant si le nœud actuel est un attribut généré à partir de la valeur par défaut définie dans la définition de type de document (DTD) ou le schéma.</summary>
      <returns>
        <see langword="true" /> si le nœud actuel est un attribut dont la valeur a été générée à partir de la valeur par défaut définie dans le DTD ou le schéma ; <see langword="false" /> si la valeur d'attribut a été définie explicitement.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.IsEmptyElement">
      <summary>Obtient une valeur indiquant si le nœud actuel est un élément vide (par exemple, <c>&lt;MyElement/&gt;</c>).</summary>
      <returns>
        <see langword="true" />Si le nœud actuel est un élément (<see cref="P:System.Xml.XmlNodeReader.NodeType" /><see langword="XmlNodeType.Element" />est égal à) et qu’il se termine <see langword="false" />par <c>/ &gt;</c>; sinon,.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.LocalName">
      <summary>Obtient le nom local du nœud actuel.</summary>
      <returns>Nom du nœud actuel dont le préfixe est supprimé. Par exemple, <see langword="LocalName" /> est <see langword="book" /> pour l’élément <c>&lt;BK: Book&gt;</c>.  
Pour les types de nœuds qui n'ont pas de nom (par exemple <see langword="Text" />, <see langword="Comment" />, etc.), cette propriété retourne String.Empty.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.LookupNamespace(System.String)">
      <summary>Résout un préfixe de l'espace de noms dans la portée de l'élément actuel.</summary>
      <param name="prefix">Préfixe dont vous souhaitez résoudre l'URI de l'espace de noms. Pour établir une correspondance avec l'espace de noms par défaut, passez une chaîne vide. Il n'est pas nécessaire d'atomiser cette chaîne.</param>
      <returns>URI de l'espace de noms vers lequel le préfixe est mappé ou <see langword="null" /> si aucun préfixe correspondant n'est trouvé.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToAttribute(System.Int32)">
      <summary>Se déplace vers l'attribut avec l'index spécifié.</summary>
      <param name="attributeIndex">Index de l'attribut.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Le paramètre <paramref name="i" /> est inférieur à 0 ou encore supérieur ou égal à <see cref="P:System.Xml.XmlReader.AttributeCount" />.</exception>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToAttribute(System.String)">
      <summary>Se déplace vers l'attribut avec le nom spécifié.</summary>
      <param name="name">Nom qualifié de l'attribut.</param>
      <returns>
        <see langword="true" /> si l'attribut est trouvé ; sinon, <see langword="false" />. Si la valeur est <see langword="false" />, la position du lecteur ne change pas.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToAttribute(System.String,System.String)">
      <summary>Se déplace vers l'attribut avec le nom local et l'URI d'espace de noms spécifiés.</summary>
      <param name="name">Le nom local de l'attribut.</param>
      <param name="namespaceURI">L'URI de l'espace de noms de l'attribut.</param>
      <returns>
        <see langword="true" /> si l'attribut est trouvé ; sinon, <see langword="false" />. Si la valeur est <see langword="false" />, la position du lecteur ne change pas.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToElement">
      <summary>Se déplace vers l'élément contenant le nœud d'attribut actuel.</summary>
      <returns>
        <see langword="true" /> si le lecteur est placé sur un attribut (le lecteur se déplace vers l'élément qui possède l'attribut) ; <see langword="false" /> si le lecteur n'est pas placé sur un attribut (la position du lecteur ne change pas).</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToFirstAttribute">
      <summary>Effectue un déplacement vers le premier attribut.</summary>
      <returns>
        <see langword="true" /> si un attribut existe (le lecteur se déplace vers le premier attribut) ; sinon, <see langword="false" /> (la position du lecteur ne change pas).</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToNextAttribute">
      <summary>Effectue un déplacement vers l'attribut suivant.</summary>
      <returns>
        <see langword="true" /> s'il existe un attribut suivant ; <see langword="false" /> s'il n'existe plus d'attributs.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.Name">
      <summary>Obtient le nom qualifié du nœud actuel.</summary>
      <returns>Nom qualifié du nœud actuel. Par exemple, <see langword="Name" /> est <see langword="bk:book" /> pour l’élément <c>&lt;BK: Book&gt;</c>.  
Le nom retourné dépend du <see cref="P:System.Xml.XmlNodeReader.NodeType" /> du nœud. Les types de nœuds suivants retournent les valeurs répertoriées. Tous les autres types de nœuds retournent une chaîne vide.  
  Type de nœud 
  Name 
 <see langword="Attribute" /> Nom de l'attribut.  

 <see langword="DocumentType" /> Nom du type de document.  

 <see langword="Element" /> Nom de la balise.  

 <see langword="EntityReference" /> Nom de l'entité référencée.  

 <see langword="ProcessingInstruction" /> Cible de l'instruction de traitement.  

 <see langword="XmlDeclaration" /> Chaîne littérale <see langword="xml" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.NamespaceURI">
      <summary>Obtient l'URI d'espace de noms (tel qu'il est défini dans la spécification relative aux espaces de noms du W3C) du nœud sur lequel le lecteur est placé.</summary>
      <returns>URI d'espace de noms du nœud actuel ; sinon, une chaîne vide.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.NameTable">
      <summary>Obtient l'élément <see cref="T:System.Xml.XmlNameTable" /> associé à cette implémentation.</summary>
      <returns>
        <see langword="XmlNameTable" /> vous permettant d'obtenir la version atomisée d'une chaîne au sein du nœud.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.NodeType">
      <summary>Obtient le type du nœud actuel.</summary>
      <returns>Une des valeurs de <see cref="T:System.Xml.XmlNodeType" /> représentant le type du nœud actuel.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.Prefix">
      <summary>Obtient le préfixe de l'espace de noms associé au nœud actuel.</summary>
      <returns>Préfixe de l'espace de noms associé au nœud actuel.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.Read">
      <summary>Lit le nœud suivant du flux.</summary>
      <returns>
        <see langword="true" /> si le nœud suivant a été lu correctement ; <see langword="false" /> s'il n'y a plus de nœuds à lire.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadAttributeValue">
      <summary>Analyse la valeur d'attribut selon un ou plusieurs nœuds <see langword="Text" />, <see langword="EntityReference" /> ou <see langword="EndEntity" />.</summary>
      <returns>
        <see langword="true" /> s'il y a des nœuds à retourner.  
 <see langword="false" /> si le lecteur n'est pas placé sur un nœud d'attribut quand l'appel initial est effectué ou si toutes les valeurs d'attributs ont été lues.  
Un attribut vide, tel que <c>misc=""</c>, retourne <see langword="true" /> avec un nœud unique et la valeur String.Empty.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Lit le contenu et retourne les octets binaires décodés au format Base64.</summary>
      <param name="buffer">Mémoire tampon dans laquelle copier le texte obtenu. Cette valeur ne peut pas être <see langword="null" />.</param>
      <param name="index">Offset de la mémoire tampon où commence la copie du résultat.</param>
      <param name="count">Nombre maximal d'octets à copier dans la mémoire tampon. Le nombre réel d'octets copiés est retourné à partir de cette méthode.</param>
      <returns>Nombre d'octets écrits dans la mémoire tampon.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /> n'est pas pris en charge sur le nœud actuel.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">L'index de la mémoire tampon (ou l'index augmenté de la valeur du paramètre count) est supérieur à la taille de la mémoire tampon allouée.</exception>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Lit le contenu et retourne les octets binaires décodés au format BinHex.</summary>
      <param name="buffer">Mémoire tampon dans laquelle copier le texte obtenu. Cette valeur ne peut pas être <see langword="null" />.</param>
      <param name="index">Offset de la mémoire tampon où commence la copie du résultat.</param>
      <param name="count">Nombre maximal d'octets à copier dans la mémoire tampon. Le nombre réel d'octets copiés est retourné à partir de cette méthode.</param>
      <returns>Nombre d'octets écrits dans la mémoire tampon.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> n'est pas pris en charge sur le nœud actuel.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">L'index de la mémoire tampon (ou l'index augmenté de la valeur du paramètre count) est supérieur à la taille de la mémoire tampon allouée.</exception>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Lit l'élément et décode le contenu Base64.</summary>
      <param name="buffer">Mémoire tampon dans laquelle copier le texte obtenu. Cette valeur ne peut pas être <see langword="null" />.</param>
      <param name="index">Offset de la mémoire tampon où commence la copie du résultat.</param>
      <param name="count">Nombre maximal d'octets à copier dans la mémoire tampon. Le nombre réel d'octets copiés est retourné à partir de cette méthode.</param>
      <returns>Nombre d'octets écrits dans la mémoire tampon.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Le nœud actuel n'est pas un nœud d'élément.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">L'index de la mémoire tampon (ou l'index augmenté de la valeur du paramètre count) est supérieur à la taille de la mémoire tampon allouée.</exception>
      <exception cref="T:System.Xml.XmlException">L'élément contient le contenu mixte.</exception>
      <exception cref="T:System.FormatException">Impossible de convertir le contenu en type demandé.</exception>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Lit l'élément et décode le contenu BinHex.</summary>
      <param name="buffer">Mémoire tampon dans laquelle copier le texte obtenu. Cette valeur ne peut pas être <see langword="null" />.</param>
      <param name="index">Offset de la mémoire tampon où commence la copie du résultat.</param>
      <param name="count">Nombre maximal d'octets à copier dans la mémoire tampon. Le nombre réel d'octets copiés est retourné à partir de cette méthode.</param>
      <returns>Nombre d'octets écrits dans la mémoire tampon.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Le nœud actuel n'est pas un nœud d'élément.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">L'index de la mémoire tampon (ou l'index augmenté de la valeur du paramètre count) est supérieur à la taille de la mémoire tampon allouée.</exception>
      <exception cref="T:System.Xml.XmlException">L'élément contient le contenu mixte.</exception>
      <exception cref="T:System.FormatException">Impossible de convertir le contenu en type demandé.</exception>
    </member>
    <member name="P:System.Xml.XmlNodeReader.ReadState">
      <summary>Obtient l'état du lecteur.</summary>
      <returns>Une des valeurs de <see cref="T:System.Xml.ReadState" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadString">
      <summary>Lit le contenu d'un nœud d'élément ou de texte sous forme de chaîne.</summary>
      <returns>Contenu d'un nœud d'élément ou de texte (il peut inclure des nœuds CDATA, Text, etc.). Il peut s'agir d'une chaîne vide si le lecteur est placé sur autre chose qu'un nœud d'élément ou de texte, ou s'il n'existe plus de texte à retourner dans le contexte actuel.  
 <see langword="Note:" /> Le nœud de texte peut être un élément ou un nœud de texte d'attribut.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ResolveEntity">
      <summary>Résout la référence d'entité pour les nœuds <see langword="EntityReference" />.</summary>
      <exception cref="T:System.InvalidOperationException">Le lecteur n'est pas placé sur un nœud <see langword="EntityReference" />.</exception>
    </member>
    <member name="P:System.Xml.XmlNodeReader.SchemaInfo">
      <summary>Obtient les informations de schéma qui ont été assignées au nœud actuel.</summary>
      <returns>Objet <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> qui contient les informations de schéma du nœud actuel.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.Skip">
      <summary>Ignore les enfants du nœud actuel.</summary>
    </member>
    <member name="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />.</summary>
      <param name="scope">Objet <see cref="T:System.Xml.XmlNamespaceScope" />.</param>
      <returns>Objet <see cref="T:System.Collections.IDictionary" /> qui contient les espaces de noms qui sont dans la portée.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" />.</summary>
      <param name="prefix">
        <see cref="T:System.String" /> qui contient le préfixe d'espace de noms.</param>
      <returns>
        <see cref="T:System.String" /> qui contient le nom d'espace de noms.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" />.</summary>
      <param name="namespaceName">Objet <see cref="T:System.String" /> qui identifie l'espace de noms.</param>
      <returns>Objet <see cref="T:System.String" /> qui contient le préfixe d'espace de noms.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.Value">
      <summary>Obtient le texte du nœud actuel.</summary>
      <returns>La valeur retournée dépend du <see cref="P:System.Xml.XmlNodeReader.NodeType" /> du nœud. Le tableau suivant répertorie les types de nœuds possédant une valeur de retour. Tous les autres types de nœuds retournent String.Empty.  
  Type de nœud 
  Value 
 <see langword="Attribute" /> Valeur de l'attribut.  

 <see langword="CDATA" /> Contenu de la section CDATA.  

 <see langword="Comment" /> Contenu du commentaire.  

 <see langword="DocumentType" /> Sous-ensemble interne.  

 <see langword="ProcessingInstruction" /> Contenu entier, cible exclue.  

 <see langword="SignificantWhitespace" /> Espace blanc entre les balisages dans un modèle de contenu mixte.  

 <see langword="Text" /> Contenu du nœud de texte.  

 <see langword="Whitespace" /> Espace blanc entre les balises.  

 <see langword="XmlDeclaration" /> Contenu de la déclaration.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.XmlLang">
      <summary>Obtient la portée de <see langword="xml:lang" /> actuelle.</summary>
      <returns>Portée de <see langword="xml:lang" /> actuelle.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.XmlSpace">
      <summary>Obtient la portée de <see langword="xml:space" /> actuelle.</summary>
      <returns>Une des valeurs de <see cref="T:System.Xml.XmlSpace" />. S'il n'existe pas de portée de <see langword="xml:space" />, cette propriété prend la valeur par défaut <see langword="XmlSpace.None" />.</returns>
    </member>
    <member name="T:System.Xml.XmlNodeType">
      <summary>Spécifie le type de nœud.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Attribute">
      <summary>Attribut (par exemple, <c>id='123'</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.CDATA">
      <summary>Section CDATA (par exemple, <c>&lt;![CDATA[my escaped text]]&gt;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Comment">
      <summary>Commentaire (par exemple, <c>&lt;!-- my comment --&gt;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Document">
      <summary>Objet document qui, en tant que racine de l'arborescence de documents, permet d'accéder à l'intégralité du document XML.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.DocumentFragment">
      <summary>Fragment de document.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.DocumentType">
      <summary>Déclaration de type du document, indiquée par la balise suivante (par exemple, <c>&lt;!DOCTYPE...&gt;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Element">
      <summary>Élément (par exemple, <c>&lt;item&gt;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.EndElement">
      <summary>Balise d’élément de fin (par exemple, <c>&lt;/item&gt;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.EndEntity">
      <summary>Retourné lorsque <see langword="XmlReader" /> parvient à la fin du remplacement de l'entité, à la suite d'un appel à <see cref="M:System.Xml.XmlReader.ResolveEntity" />.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Entity">
      <summary>Déclaration d’entité (par exemple, <c>&lt;!ENTITY...&gt;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.EntityReference">
      <summary>Référence à une entité (par exemple, <c>&amp;num;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.None">
      <summary>Ceci est retourné par <see cref="T:System.Xml.XmlReader" /> si aucune méthode <see langword="Read" /> n'a été appelée.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Notation">
      <summary>Notation dans la déclaration de type du document (par exemple, <c>&lt;!NOTATION...&gt;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.ProcessingInstruction">
      <summary>Instruction de traitement (par exemple, <c>&lt;?pi test?&gt;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.SignificantWhitespace">
      <summary>Espace blanc entre le balisage dans un modèle de contenu mixte ou espace blanc dans la portée <c>xml:space="preserve"</c>.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Text">
      <summary>Texte d'un nœud.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Whitespace">
      <summary>Espace blanc entre le balisage.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.XmlDeclaration">
      <summary>Déclaration XML (par exemple, <c>&lt;?xml version='1.0'?&gt;</c>).</summary>
    </member>
    <member name="T:System.Xml.XmlNotation">
      <summary>Représente une déclaration de notation, telle que &lt;! NOTATION...&gt;.</summary>
    </member>
    <member name="M:System.Xml.XmlNotation.CloneNode(System.Boolean)">
      <summary>Crée un doublon de ce nœud. Les nœuds de notation ne peuvent pas être clonés. L'appel de cette méthode sur un objet <see cref="T:System.Xml.XmlNotation" /> lève une exception.</summary>
      <param name="deep">
        <see langword="true" /> pour cloner récursivement la sous-arborescence sous le nœud spécifié ; <see langword="false" /> pour cloner seulement le nœud lui-même.</param>
      <returns>Copie <see cref="T:System.Xml.XmlNode" /> du nœud à partir duquel la méthode est appelée.</returns>
      <exception cref="T:System.InvalidOperationException">Les nœuds de notation ne peuvent pas être clonés. L'appel de cette méthode sur un objet <see cref="T:System.Xml.XmlNotation" /> lève une exception.</exception>
    </member>
    <member name="P:System.Xml.XmlNotation.InnerXml">
      <summary>Obtient le balisage représentant les enfants de ce nœud.</summary>
      <returns>Pour les nœuds <see langword="XmlNotation" />, String.Empty est retourné.</returns>
      <exception cref="T:System.InvalidOperationException">Tentative de définition de la propriété.</exception>
    </member>
    <member name="P:System.Xml.XmlNotation.IsReadOnly">
      <summary>Obtient une valeur indiquant si le nœud est en lecture seule.</summary>
      <returns>
        <see langword="true" />Si le nœud est en lecture seule; Sinon, <see langword="false" />.  
Les nœuds <see langword="XmlNotation" /> étant en lecture seule, cette propriété retourne toujours <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNotation.LocalName">
      <summary>Obtient le nom du nœud actuel sans le préfixe de l'espace de noms.</summary>
      <returns>Pour les nœuds <see langword="XmlNotation" />, cette propriété retourne le nom de la notation.</returns>
    </member>
    <member name="P:System.Xml.XmlNotation.Name">
      <summary>Obtient le nom du nœud actuel.</summary>
      <returns>Nom de la notation.</returns>
    </member>
    <member name="P:System.Xml.XmlNotation.NodeType">
      <summary>Obtient le type du nœud actuel.</summary>
      <returns>Type de nœud. Pour les nœuds <see langword="XmlNotation" />, la valeur est XmlNodeType.Notation.</returns>
    </member>
    <member name="P:System.Xml.XmlNotation.OuterXml">
      <summary>Obtient le balisage représentant ce nœud et tous ses enfants.</summary>
      <returns>Pour les nœuds <see langword="XmlNotation" />, String.Empty est retourné.</returns>
    </member>
    <member name="P:System.Xml.XmlNotation.PublicId">
      <summary>Obtient la valeur de l'identificateur public sur la déclaration de notation.</summary>
      <returns>Identificateur public sur la notation. S'il n'existe aucun identificateur public, <see langword="null" /> est alors retournée.</returns>
    </member>
    <member name="P:System.Xml.XmlNotation.SystemId">
      <summary>Obtient la valeur de l'identificateur système sur la déclaration de notation.</summary>
      <returns>Identificateur système sur la notation. S'il n'existe aucun identificateur système, <see langword="null" /> est alors retournée.</returns>
    </member>
    <member name="M:System.Xml.XmlNotation.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Enregistre les enfants du nœud dans le <see cref="T:System.Xml.XmlWriter" /> spécifié. Cette méthode n'a aucun effet sur les nœuds <see langword="XmlNotation" />.</summary>
      <param name="w">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="M:System.Xml.XmlNotation.WriteTo(System.Xml.XmlWriter)">
      <summary>Enregistre le nœud dans le <see cref="T:System.Xml.XmlWriter" /> spécifié. Cette méthode n'a aucun effet sur les nœuds <see langword="XmlNotation" />.</summary>
      <param name="w">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="T:System.Xml.XmlOutputMethod">
      <summary>Spécifie la méthode utilisée pour sérialiser la sortie <see cref="T:System.Xml.XmlWriter" />.</summary>
    </member>
    <member name="F:System.Xml.XmlOutputMethod.AutoDetect">
      <summary>Utilisez les règles XSLT pour effectuer un choix entre les méthodes de sortie <see cref="F:System.Xml.XmlOutputMethod.Xml" /> et  <see cref="F:System.Xml.XmlOutputMethod.Html" /> à l'exécution.</summary>
    </member>
    <member name="F:System.Xml.XmlOutputMethod.Html">
      <summary>Sérialiser conformément aux règles HTML spécifiées par XSLT.</summary>
    </member>
    <member name="F:System.Xml.XmlOutputMethod.Text">
      <summary>Sérialiser uniquement des blocs de texte.</summary>
    </member>
    <member name="F:System.Xml.XmlOutputMethod.Xml">
      <summary>Sérialiser conformément aux règles XML 1.0.</summary>
    </member>
    <member name="T:System.Xml.XmlParserContext">
      <summary>Fournit toutes les informations de contexte requises par <see cref="T:System.Xml.XmlReader" /> pour analyser un fragment XML.</summary>
    </member>
    <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.String,System.String,System.String,System.String,System.String,System.Xml.XmlSpace)">
      <summary>Initialise une nouvelle instance de la classe <see langword="XmlParserContext" /> avec les <see cref="T:System.Xml.XmlNameTable" />, <see cref="T:System.Xml.XmlNamespaceManager" />, URI de base, <see langword="xml:lang" />, <see langword="xml:space" /> et valeurs de type de document spécifiés.</summary>
      <param name="nt">
        <see cref="T:System.Xml.XmlNameTable" /> à utiliser pour atomiser les chaînes. Si la valeur est <see langword="null" />, la table de noms servant à construire <paramref name="nsMgr" /> est utilisée à la place. Pour plus d'informations concernant les chaînes atomisées, consultez <see cref="T:System.Xml.XmlNameTable" />.</param>
      <param name="nsMgr">
        <see cref="T:System.Xml.XmlNamespaceManager" /> à utiliser pour la recherche d'informations d'espace de noms, ou <see langword="null" />.</param>
      <param name="docTypeName">Nom de la déclaration de type du document.</param>
      <param name="pubId">Identificateur public.</param>
      <param name="sysId">Identificateur système.</param>
      <param name="internalSubset">Sous-ensemble interne DTD. Le sous-ensemble DTD est utilisé pour la résolution d'entité, pas pour la validation de document.</param>
      <param name="baseURI">URI de base du fragment XML (emplacement à partir duquel le fragment a été chargé).</param>
      <param name="xmlLang">Portée <see langword="xml:lang" />.</param>
      <param name="xmlSpace">Valeur <see cref="T:System.Xml.XmlSpace" /> indiquant la portée <see langword="xml:space" />.</param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="nt" /> n'est pas le même <see langword="XmlNameTable" /> utilisé pour construire <paramref name="nsMgr" />.</exception>
    </member>
    <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.String,System.String,System.String,System.String,System.String,System.Xml.XmlSpace,System.Text.Encoding)">
      <summary>Initialise une nouvelle instance de la classe <see langword="XmlParserContext" /> avec les <see cref="T:System.Xml.XmlNameTable" />, <see cref="T:System.Xml.XmlNamespaceManager" />, URI de base, <see langword="xml:lang" />, <see langword="xml:space" />, encodage et valeurs de type de document spécifiés.</summary>
      <param name="nt">
        <see cref="T:System.Xml.XmlNameTable" /> à utiliser pour atomiser les chaînes. Si la valeur est <see langword="null" />, la table de noms servant à construire <paramref name="nsMgr" /> est utilisée à la place. Pour plus d'informations concernant les chaînes atomisées, consultez <see cref="T:System.Xml.XmlNameTable" />.</param>
      <param name="nsMgr">
        <see cref="T:System.Xml.XmlNamespaceManager" /> à utiliser pour la recherche d'informations d'espace de noms, ou <see langword="null" />.</param>
      <param name="docTypeName">Nom de la déclaration de type du document.</param>
      <param name="pubId">Identificateur public.</param>
      <param name="sysId">Identificateur système.</param>
      <param name="internalSubset">Sous-ensemble interne DTD. Le DTD est utilisé pour la résolution d'entité, pas pour la validation de document.</param>
      <param name="baseURI">URI de base du fragment XML (emplacement à partir duquel le fragment a été chargé).</param>
      <param name="xmlLang">Portée <see langword="xml:lang" />.</param>
      <param name="xmlSpace">Valeur <see cref="T:System.Xml.XmlSpace" /> indiquant la portée <see langword="xml:space" />.</param>
      <param name="enc">Objet <see cref="T:System.Text.Encoding" /> indiquant le paramètre d'encodage.</param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="nt" /> n'est pas le même <see langword="XmlNameTable" /> utilisé pour construire <paramref name="nsMgr" />.</exception>
    </member>
    <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.Xml.XmlSpace)">
      <summary>Initialise une nouvelle instance de la classe <see langword="XmlParserContext" /> avec les valeurs <see cref="T:System.Xml.XmlNameTable" />, <see cref="T:System.Xml.XmlNamespaceManager" />, <see langword="xml:lang" /> et <see langword="xml:space" /> spécifiées.</summary>
      <param name="nt">
        <see cref="T:System.Xml.XmlNameTable" /> à utiliser pour atomiser les chaînes. Si la valeur est <see langword="null" />, la table de noms servant à construire <paramref name="nsMgr" /> est utilisée à la place. Pour plus d'informations concernant les chaînes atomisées, consultez <see cref="T:System.Xml.XmlNameTable" />.</param>
      <param name="nsMgr">
        <see cref="T:System.Xml.XmlNamespaceManager" /> à utiliser pour la recherche d'informations d'espace de noms, ou <see langword="null" />.</param>
      <param name="xmlLang">Portée <see langword="xml:lang" />.</param>
      <param name="xmlSpace">Valeur <see cref="T:System.Xml.XmlSpace" /> indiquant la portée <see langword="xml:space" />.</param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="nt" /> n'est pas le même <see langword="XmlNameTable" /> utilisé pour construire <paramref name="nsMgr" />.</exception>
    </member>
    <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.Xml.XmlSpace,System.Text.Encoding)">
      <summary>Initialise une nouvelle instance de la classe <see langword="XmlParserContext" /> avec les <see cref="T:System.Xml.XmlNameTable" />, <see cref="T:System.Xml.XmlNamespaceManager" />, <see langword="xml:lang" />, <see langword="xml:space" /> spécifiés et l'encodage spécifié.</summary>
      <param name="nt">
        <see cref="T:System.Xml.XmlNameTable" /> à utiliser pour atomiser les chaînes. Si la valeur est <see langword="null" />, la table de noms servant à construire <paramref name="nsMgr" /> est utilisée à la place. Pour plus d'informations sur les chaînes atomisées, consultez <see cref="T:System.Xml.XmlNameTable" />.</param>
      <param name="nsMgr">
        <see cref="T:System.Xml.XmlNamespaceManager" /> à utiliser pour la recherche d'informations d'espace de noms, ou <see langword="null" />.</param>
      <param name="xmlLang">Portée <see langword="xml:lang" />.</param>
      <param name="xmlSpace">Valeur <see cref="T:System.Xml.XmlSpace" /> indiquant la portée <see langword="xml:space" />.</param>
      <param name="enc">Objet <see cref="T:System.Text.Encoding" /> indiquant le paramètre d'encodage.</param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="nt" /> n'est pas le même <see langword="XmlNameTable" /> utilisé pour construire <paramref name="nsMgr" />.</exception>
    </member>
    <member name="P:System.Xml.XmlParserContext.BaseURI">
      <summary>Obtient ou définit l'URI de base.</summary>
      <returns>URI de base à utiliser pour résoudre le fichier DTD.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.DocTypeName">
      <summary>Obtient ou définit le nom de la déclaration de type du document.</summary>
      <returns>Nom de la déclaration de type du document.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.Encoding">
      <summary>Obtient ou définit le type d'encodage.</summary>
      <returns>Objet <see cref="T:System.Text.Encoding" /> indiquant le type d'encodage.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.InternalSubset">
      <summary>Obtient ou définit le sous-ensemble interne DTD.</summary>
      <returns>Sous-ensemble interne DTD. Par exemple, cette propriété retourne tout ce qui se trouve entre les crochets <c>&lt;! Document DOCTYPE [...] &gt;</c>.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.NamespaceManager">
      <summary>Obtient ou définit <see cref="T:System.Xml.XmlNamespaceManager" />.</summary>
      <returns>L’<see langword="XmlNamespaceManager" />opérateur</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.NameTable">
      <summary>Obtient le <see cref="T:System.Xml.XmlNameTable" /> utilisé pour atomiser les chaînes. Pour plus d'informations sur les chaînes atomisées, consultez <see cref="T:System.Xml.XmlNameTable" />.</summary>
      <returns>L’<see langword="XmlNameTable" />opérateur</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.PublicId">
      <summary>Obtient ou définit l'identificateur public.</summary>
      <returns>Identificateur public.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.SystemId">
      <summary>Obtient ou définit l'identificateur système.</summary>
      <returns>Identificateur système.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.XmlLang">
      <summary>Obtient ou définit la portée <see langword="xml:lang" /> en cours.</summary>
      <returns>Portée de <see langword="xml:lang" /> actuelle. S'il n'existe aucun <see langword="xml:lang" /> dans la portée, <see langword="String.Empty" /> est retournée.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.XmlSpace">
      <summary>Obtient ou définit la portée <see langword="xml:space" /> en cours.</summary>
      <returns>Valeur <see cref="T:System.Xml.XmlSpace" /> indiquant la portée <see langword="xml:space" />.</returns>
    </member>
    <member name="T:System.Xml.XmlProcessingInstruction">
      <summary>Représente une instruction de traitement, définie par le code XML pour conserver les informations spécifiques au processeur dans le texte du document.</summary>
    </member>
    <member name="M:System.Xml.XmlProcessingInstruction.#ctor(System.String,System.String,System.Xml.XmlDocument)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlProcessingInstruction" />.</summary>
      <param name="target">Cible de l'instruction de traitement ; consultez la propriété <see cref="P:System.Xml.XmlProcessingInstruction.Target" />.</param>
      <param name="data">Contenu de l'instruction ; consultez la propriété <see cref="P:System.Xml.XmlProcessingInstruction.Data" />.</param>
      <param name="doc">Document XML parent.</param>
    </member>
    <member name="M:System.Xml.XmlProcessingInstruction.CloneNode(System.Boolean)">
      <summary>Crée un doublon de ce nœud.</summary>
      <param name="deep">
        <see langword="true" /> pour cloner récursivement la sous-arborescence sous le nœud spécifié ; <see langword="false" /> pour cloner seulement le nœud lui-même.</param>
      <returns>Doublon du nœud.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.Data">
      <summary>Obtient ou définit le contenu de l'instruction de traitement, à l'exclusion de la cible.</summary>
      <returns>Contenu de l'instruction de traitement, à l'exclusion de la cible.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.InnerText">
      <summary>Obtient ou définit les valeurs concaténées du nœud et de tous ses enfants.</summary>
      <returns>Valeurs concaténées du nœud et de tous ses enfants.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.LocalName">
      <summary>Obtient le nom local du nœud.</summary>
      <returns>Pour les nœuds d'instruction de traitement, cette propriété retourne la cible de l'instruction de traitement.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.Name">
      <summary>Obtient le nom qualifié du nœud.</summary>
      <returns>Pour les nœuds d'instruction de traitement, cette propriété retourne la cible de l'instruction de traitement.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.NodeType">
      <summary>Obtient le type du nœud actuel.</summary>
      <returns>Pour les nœuds <see langword="XmlProcessingInstruction" />, cette valeur est XmlNodeType.ProcessingInstruction.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.Target">
      <summary>Obtient la cible de l'instruction de traitement.</summary>
      <returns>Cible de l'instruction de traitement.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.Value">
      <summary>Obtient ou définit la valeur du nœud.</summary>
      <returns>Intégralité du contenu de l'instruction de traitement, à l'exclusion de la cible.</returns>
      <exception cref="T:System.ArgumentException">Le nœud est en lecture seule.</exception>
    </member>
    <member name="M:System.Xml.XmlProcessingInstruction.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Enregistre tous les enfants du nœud dans l’élément <see cref="T:System.Xml.XmlWriter" /> spécifié. Les nœuds ProcessingInstruction n'ont pas d'enfants, par conséquent, cette méthode est sans effet.</summary>
      <param name="w">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="M:System.Xml.XmlProcessingInstruction.WriteTo(System.Xml.XmlWriter)">
      <summary>Enregistre le nœud dans le <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="w">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="T:System.Xml.XmlQualifiedName">
      <summary>Représente un nom qualifié XML.</summary>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlQualifiedName" /> avec le nom spécifié.</summary>
      <param name="name">Le nom local à utiliser comme nom de l'objet <see cref="T:System.Xml.XmlQualifiedName" />.</param>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlQualifiedName" /> avec le nom et l'espace de noms spécifiés.</summary>
      <param name="name">Le nom local à utiliser comme nom de l'objet <see cref="T:System.Xml.XmlQualifiedName" />.</param>
      <param name="ns">Espace de noms pour l'objet <see cref="T:System.Xml.XmlQualifiedName" />.</param>
    </member>
    <member name="F:System.Xml.XmlQualifiedName.Empty">
      <summary>Fournit une chaîne vide <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.Equals(System.Object)">
      <summary>Détermine si l'objet <see cref="T:System.Xml.XmlQualifiedName" /> spécifié est égal à l'objet <see cref="T:System.Xml.XmlQualifiedName" /> en cours.</summary>
      <param name="other">
        <see cref="T:System.Xml.XmlQualifiedName" /> à comparer.</param>
      <returns>
        <see langword="true" /> si les deux sont le même objet d'instance ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.GetHashCode">
      <summary>Retourne le code de hachage pour <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <returns>Code de hachage de cet objet.</returns>
    </member>
    <member name="P:System.Xml.XmlQualifiedName.IsEmpty">
      <summary>Obtient une valeur indiquant si le <see cref="T:System.Xml.XmlQualifiedName" /> est vide.</summary>
      <returns>
        <see langword="true" /> si le nom et l'espace de noms sont des chaînes vides ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlQualifiedName.Name">
      <summary>Obtient une représentation de chaîne du nom complet de <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <returns>Une représentation du nom complet ou String.Empty si un nom n'est pas défini pour l'objet.</returns>
    </member>
    <member name="P:System.Xml.XmlQualifiedName.Namespace">
      <summary>Obtient une représentation d'espace de noms de <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <returns>Une représentation de l'espace de noms, ou String.Empty si un espace de noms n'est pas défini pour l'objet.</returns>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.op_Equality(System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>Compare deux objets <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <param name="a">
        <see cref="T:System.Xml.XmlQualifiedName" /> à comparer.</param>
      <param name="b">
        <see cref="T:System.Xml.XmlQualifiedName" /> à comparer.</param>
      <returns>
        <see langword="true" /> si les deux objets ont le même nom et les mêmes valeurs d'espace de noms ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.op_Inequality(System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>Compare deux objets <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <param name="a">
        <see cref="T:System.Xml.XmlQualifiedName" /> à comparer.</param>
      <param name="b">
        <see cref="T:System.Xml.XmlQualifiedName" /> à comparer.</param>
      <returns>
        <see langword="true" /> si les valeurs de nom et d'espace de noms diffèrent pour les deux objets ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.ToString">
      <summary>Retourne la valeur de chaîne de <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <returns>La valeur de chaîne de <see cref="T:System.Xml.XmlQualifiedName" /> au format de <see langword="namespace:localname" />. Si l'objet n'a pas un espace de noms défini, cette méthode retourne uniquement le nom local.</returns>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.ToString(System.String,System.String)">
      <summary>Retourne la valeur de chaîne de <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <param name="name">Nom de l'objet.</param>
      <param name="ns">Espace de noms pour l'objet.</param>
      <returns>La valeur de chaîne de <see cref="T:System.Xml.XmlQualifiedName" /> au format de <see langword="namespace:localname" />. Si l'objet n'a pas un espace de noms défini, cette méthode retourne uniquement le nom local.</returns>
    </member>
    <member name="T:System.Xml.XmlReader">
      <summary>Représente un lecteur fournissant un accès rapide, non mis en cache et en avant uniquement vers les données XML.</summary>
    </member>
    <member name="M:System.Xml.XmlReader.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see langword="XmlReader" />.</summary>
    </member>
    <member name="P:System.Xml.XmlReader.AttributeCount">
      <summary>En cas de substitution dans une classe dérivée, obtient le nombre d'attributs du nœud actuel.</summary>
      <returns>Nombre d'attributs du nœud actuel.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="P:System.Xml.XmlReader.BaseURI">
      <summary>En cas de substitution dans une classe dérivée, obtient l'URI de base du nœud actuel.</summary>
      <returns>URI de base du nœud actuel.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="P:System.Xml.XmlReader.CanReadBinaryContent">
      <summary>Obtient une valeur indiquant si <see cref="T:System.Xml.XmlReader" /> implémente les méthodes de lecture de contenu binaire.</summary>
      <returns>
        <see langword="true" /> si les méthodes de lecture de contenu binaire sont implémentées ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="P:System.Xml.XmlReader.CanReadValueChunk">
      <summary>Obtient une valeur indiquant si <see cref="T:System.Xml.XmlReader" /> implémente la méthode <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" />.</summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.Xml.XmlReader" /> implémente la méthode <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" /> ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="P:System.Xml.XmlReader.CanResolveEntity">
      <summary>Obtient une valeur indiquant si ce lecteur peut analyser et résoudre les entités.</summary>
      <returns>
        <see langword="true" /> si le lecteur peut analyser et résoudre les entités ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Close">
      <summary>En cas de substitution dans une classe dérivée, modifie <see cref="P:System.Xml.XmlReader.ReadState" /> en <see cref="F:System.Xml.ReadState.Closed" />.</summary>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.Stream)">
      <summary>Crée une instance de <see cref="T:System.Xml.XmlReader" /> à l’aide du flux spécifié avec les paramètres par défaut.</summary>
      <param name="input">Flux contenant les données XML.  
<see cref="T:System.Xml.XmlReader" /> analyse les premiers octets du flux à la recherche d’une marque d’ordre des octets ou d’un autre signe de codage. Quand l'encodage est déterminé, il est utilisé pour continuer à lire le flux, et le traitement continue à analyser l'entrée en tant que flux de caractères (Unicode).</param>
      <returns>Objet permettant de lire les données XML contenues dans le flux de données.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Xml.XmlReader" /> n’a pas d’autorisations suffisantes pour accéder à l’emplacement des données XML.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)">
      <summary>Crée une instance de <see cref="T:System.Xml.XmlReader" /> avec le flux et les paramètres spécifiés.</summary>
      <param name="input">Flux contenant les données XML.  
<see cref="T:System.Xml.XmlReader" /> analyse les premiers octets du flux à la recherche d’une marque d’ordre des octets ou d’un autre signe de codage. Quand l'encodage est déterminé, il est utilisé pour continuer à lire le flux, et le traitement continue à analyser l'entrée en tant que flux de caractères (Unicode).</param>
      <param name="settings">Paramètres de la nouvelle instance de <see cref="T:System.Xml.XmlReader" />. Cette valeur peut être <see langword="null" />.</param>
      <returns>Objet permettant de lire les données XML contenues dans le flux de données.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)">
      <summary>Crée une instance de <see cref="T:System.Xml.XmlReader" /> en utilisant le flux, l’URI de base et les paramètres spécifiés.</summary>
      <param name="input">Flux contenant les données XML.  
<see cref="T:System.Xml.XmlReader" /> analyse les premiers octets du flux à la recherche d’une marque d’ordre des octets ou d’un autre signe de codage. Quand l'encodage est déterminé, il est utilisé pour continuer à lire le flux, et le traitement continue à analyser l'entrée en tant que flux de caractères (Unicode).</param>
      <param name="settings">Paramètres de la nouvelle instance de <see cref="T:System.Xml.XmlReader" />. Cette valeur peut être <see langword="null" />.</param>
      <param name="baseUri">URI de base pour l'entité ou le document en cours de lecture. Cette valeur peut être <see langword="null" />.  
 Note sur la sécurité L’URI de base est utilisé pour résoudre l’URI relatif du document XML. N'utilisez pas un URI de base provenant d'une source non fiable.</param>
      <returns>Objet permettant de lire les données XML contenues dans le flux de données.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
      <summary>Crée une instance de <see cref="T:System.Xml.XmlReader" /> à l’aide du flux, des paramètres et des informations de contexte d’analyse spécifiés.</summary>
      <param name="input">Flux contenant les données XML.  
<see cref="T:System.Xml.XmlReader" /> analyse les premiers octets du flux à la recherche d’une marque d’ordre des octets ou d’un autre signe de codage. Quand l'encodage est déterminé, il est utilisé pour continuer à lire le flux, et le traitement continue à analyser l'entrée en tant que flux de caractères (Unicode).</param>
      <param name="settings">Paramètres de la nouvelle instance de <see cref="T:System.Xml.XmlReader" />. Cette valeur peut être <see langword="null" />.</param>
      <param name="inputContext">Les informations de contexte nécessaires à l'analyse du fragment XML. Les informations de contexte peuvent inclure le <see cref="T:System.Xml.XmlNameTable" /> à utiliser, l’encodage, la portée d’espace de noms, la portée <c>xml:lang</c> et <c>xml:space</c> actuelle, l’URI de base et la définition de type de document.  
Cette valeur peut être <see langword="null" />.</param>
      <returns>Objet permettant de lire les données XML contenues dans le flux de données.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.TextReader)">
      <summary>Crée une instance de <see cref="T:System.Xml.XmlReader" /> à l’aide du lecteur de texte spécifié.</summary>
      <param name="input">Lecteur de texte à partir duquel lire les données XML. Comme un lecteur de texte retourne un flux de caractères Unicode, l'encodage spécifié dans la déclaration XML n'est pas utilisé par le lecteur XML pour décoder le flux de données.</param>
      <returns>Objet permettant de lire les données XML contenues dans le flux de données.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)">
      <summary>Crée une instance de <see cref="T:System.Xml.XmlReader" /> à l’aide du lecteur de texte et des paramètres spécifiés.</summary>
      <param name="input">Lecteur de texte à partir duquel lire les données XML. Comme un lecteur de texte retourne un flux de caractères Unicode, l'encodage spécifié dans la déclaration XML n'est pas utilisé par le lecteur XML pour décoder le flux de données.</param>
      <param name="settings">Paramètres du nouveau <see cref="T:System.Xml.XmlReader" />. Cette valeur peut être <see langword="null" />.</param>
      <returns>Objet permettant de lire les données XML contenues dans le flux de données.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)">
      <summary>Crée une instance de <see cref="T:System.Xml.XmlReader" /> à l’aide du lecteur de texte, des paramètres et de l’URI de base spécifiés.</summary>
      <param name="input">Lecteur de texte à partir duquel lire les données XML. Comme un lecteur de texte retourne un flux de caractères Unicode, l’encodage spécifié dans la déclaration XML n’est pas utilisé par le lecteur <see cref="T:System.Xml.XmlReader" /> pour décoder le flux de données.</param>
      <param name="settings">Paramètres de la nouvelle instance de <see cref="T:System.Xml.XmlReader" />. Cette valeur peut être <see langword="null" />.</param>
      <param name="baseUri">URI de base pour l'entité ou le document en cours de lecture. Cette valeur peut être <see langword="null" />.  
 Note sur la sécurité L’URI de base est utilisé pour résoudre l’URI relatif du document XML. N'utilisez pas un URI de base provenant d'une source non fiable.</param>
      <returns>Objet permettant de lire les données XML contenues dans le flux de données.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
      <summary>Crée une instance de <see cref="T:System.Xml.XmlReader" /> à l’aide du lecteur de texte, des paramètres et des informations de contexte d’analyse spécifiés.</summary>
      <param name="input">Lecteur de texte à partir duquel lire les données XML. Comme un lecteur de texte retourne un flux de caractères Unicode, l'encodage spécifié dans la déclaration XML n'est pas utilisé par le lecteur XML pour décoder le flux de données.</param>
      <param name="settings">Paramètres de la nouvelle instance de <see cref="T:System.Xml.XmlReader" />. Cette valeur peut être <see langword="null" />.</param>
      <param name="inputContext">Les informations de contexte nécessaires à l'analyse du fragment XML. Les informations de contexte peuvent inclure le <see cref="T:System.Xml.XmlNameTable" /> à utiliser, l’encodage, la portée d’espace de noms, la portée <c>xml:lang</c> et <c>xml:space</c> actuelle, l’URI de base et la définition de type de document.  
Cette valeur peut être <see langword="null" />.</param>
      <returns>Objet permettant de lire les données XML contenues dans le flux de données.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Les propriétés <see cref="P:System.Xml.XmlReaderSettings.NameTable" /> et <see cref="P:System.Xml.XmlParserContext.NameTable" /> contiennent toutes deux des valeurs. (Vous ne pouvez définir et utiliser qu’une seule de ces propriétés <see langword="NameTable" />).</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.String)">
      <summary>Crée une instance de <see cref="T:System.Xml.XmlReader" /> avec l’URI spécifié.</summary>
      <param name="inputUri">URI du fichier qui contient les données XML. La classe <see cref="T:System.Xml.XmlUrlResolver" /> permet de convertir le chemin en représentation de données canonique.</param>
      <returns>Objet permettant de lire les données XML contenues dans le flux de données.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inputUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Xml.XmlReader" /> n’a pas d’autorisations suffisantes pour accéder à l’emplacement des données XML.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier identifié par l’URI n’existe pas.</exception>
      <exception cref="T:System.UriFormatException">Dans .NET pour les applications du Windows Store ou la Bibliothèque de classes portable, interceptez l’exception de la classe de base, <see cref="T:System.FormatException" />, à la place.  


            

 Le format d’URI n’est pas correct.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)">
      <summary>Crée une instance de <see cref="T:System.Xml.XmlReader" /> en utilisant l’URI et les paramètres spécifiés.</summary>
      <param name="inputUri">URI du fichier contenant les données XML. L’objet <see cref="T:System.Xml.XmlResolver" /> de l’objet <see cref="T:System.Xml.XmlReaderSettings" /> permet de convertir le chemin en représentation de données canonique. Si <see cref="P:System.Xml.XmlReaderSettings.XmlResolver" /> a la valeur <see langword="null" />, un nouvel objet <see cref="T:System.Xml.XmlUrlResolver" /> est utilisé.</param>
      <param name="settings">Paramètres de la nouvelle instance de <see cref="T:System.Xml.XmlReader" />. Cette valeur peut être <see langword="null" />.</param>
      <returns>Objet permettant de lire les données XML contenues dans le flux de données.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inputUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier spécifié par l’URI est introuvable.</exception>
      <exception cref="T:System.UriFormatException">Dans .NET pour les applications du Windows Store ou la Bibliothèque de classes portable, interceptez l’exception de la classe de base, <see cref="T:System.FormatException" />, à la place.  


            

 Le format d’URI n’est pas correct.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
      <summary>Crée une instance de <see cref="T:System.Xml.XmlReader" /> en utilisant l’URI, les paramètres et les informations de contexte spécifiés pour l’analyse.</summary>
      <param name="inputUri">URI du fichier contenant les données XML. L’objet <see cref="T:System.Xml.XmlResolver" /> de l’objet <see cref="T:System.Xml.XmlReaderSettings" /> permet de convertir le chemin en représentation de données canonique. Si <see cref="P:System.Xml.XmlReaderSettings.XmlResolver" /> a la valeur <see langword="null" />, un nouvel objet <see cref="T:System.Xml.XmlUrlResolver" /> est utilisé.</param>
      <param name="settings">Paramètres de la nouvelle instance de <see cref="T:System.Xml.XmlReader" />. Cette valeur peut être <see langword="null" />.</param>
      <param name="inputContext">Les informations de contexte nécessaires à l'analyse du fragment XML. Les informations de contexte peuvent inclure le <see cref="T:System.Xml.XmlNameTable" /> à utiliser, l’encodage, la portée d’espace de noms, la portée <c>xml:lang</c> et <c>xml:space</c> actuelle, l’URI de base et la définition de type de document.  
Cette valeur peut être <see langword="null" />.</param>
      <returns>Objet permettant de lire les données XML contenues dans le flux de données.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see langword="inputUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Xml.XmlReader" /> n’a pas d’autorisations suffisantes pour accéder à l’emplacement des données XML.</exception>
      <exception cref="T:System.ArgumentException">Les propriétés <see cref="P:System.Xml.XmlReaderSettings.NameTable" /> et <see cref="P:System.Xml.XmlParserContext.NameTable" /> contiennent toutes deux des valeurs. (Vous ne pouvez définir et utiliser qu’une seule de ces propriétés <see langword="NameTable" />).</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier spécifié par l’URI est introuvable.</exception>
      <exception cref="T:System.UriFormatException">Le format d’URI n’est pas correct.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
      <summary>Crée une instance de <see cref="T:System.Xml.XmlReader" /> à l’aide des paramètres et du lecteur XML spécifiés.</summary>
      <param name="reader">L'objet à utiliser comme lecteur XML sous-jacent.</param>
      <param name="settings">Paramètres de la nouvelle instance de <see cref="T:System.Xml.XmlReader" />.  
Le niveau de conformité de l’objet <see cref="T:System.Xml.XmlReaderSettings" /> doit soit correspondre au niveau de conformité du lecteur sous-jacent, soit avoir la valeur <see cref="F:System.Xml.ConformanceLevel.Auto" />.</param>
      <returns>Objet autour de l’objet <see cref="T:System.Xml.XmlReader" /> spécifié.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Si l’objet <see cref="T:System.Xml.XmlReaderSettings" /> spécifie un niveau de conformité qui n’est pas cohérent avec le niveau de conformité du lecteur sous-jacent.  
ou 
Le <see cref="T:System.Xml.XmlReader" /> sous-jacent se trouve dans un état <see cref="F:System.Xml.ReadState.Error" /> ou <see cref="F:System.Xml.ReadState.Closed" />.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.Depth">
      <summary>En cas de substitution dans une classe dérivée, obtient la profondeur du nœud actuel dans le document XML.</summary>
      <returns>Profondeur du nœud actuel dans le document XML.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Dispose">
      <summary>Libère toutes les ressources utilisées par l'instance actuelle de la classe <see cref="T:System.Xml.XmlReader" />.</summary>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Dispose(System.Boolean)">
      <summary>Libère les ressources non managées utilisées par <see cref="T:System.Xml.XmlReader" /> et libère éventuellement les ressources managées.</summary>
      <param name="disposing">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="P:System.Xml.XmlReader.EOF">
      <summary>En cas de substitution dans une classe dérivée, obtient une valeur indiquant si le lecteur est placé à la fin du flux.</summary>
      <returns>
        <see langword="true" /> si le lecteur est placé à la fin du flux ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.GetAttribute(System.Int32)">
      <summary>En cas de substitution dans une classe dérivée, obtient la valeur de l'attribut avec l'index spécifié.</summary>
      <param name="i">Index de l'attribut. L'index est de base zéro. Le premier attribut possède l'index 0.</param>
      <returns>Valeur de l'attribut spécifié. Cette méthode ne déplace pas le lecteur.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="i" /> est hors limites. Il doit être non négatif et inférieur à la taille de la collection d'attributs.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.GetAttribute(System.String)">
      <summary>En cas de substitution dans une classe dérivée, obtient la valeur de l'attribut avec le <see cref="P:System.Xml.XmlReader.Name" /> spécifié.</summary>
      <param name="name">Nom qualifié de l'attribut.</param>
      <returns>Valeur de l'attribut spécifié. Si l'attribut est introuvable ou si la valeur est <see langword="String.Empty" />, <see langword="null" /> est retourné.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.GetAttribute(System.String,System.String)">
      <summary>En cas de substitution dans une classe dérivée, obtient la valeur de l'attribut avec le <see cref="P:System.Xml.XmlReader.LocalName" /> et le <see cref="P:System.Xml.XmlReader.NamespaceURI" /> spécifiés.</summary>
      <param name="name">Le nom local de l'attribut.</param>
      <param name="namespaceURI">L'URI de l'espace de noms de l'attribut.</param>
      <returns>Valeur de l'attribut spécifié. Si l'attribut est introuvable ou si la valeur est <see langword="String.Empty" />, <see langword="null" /> est retourné. Cette méthode ne déplace pas le lecteur.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.GetValueAsync">
      <summary>Obtient de façon asynchrone la valeur du nœud actuel.</summary>
      <returns>Valeur du nœud actuel.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours. »
ou
Une méthode asynchrone <see cref="T:System.Xml.XmlReader" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlReaderSettings.Async" /> sur <see langword="true" />. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
    </member>
    <member name="P:System.Xml.XmlReader.HasAttributes">
      <summary>Obtient une valeur indiquant si le nœud actuel a des attributs.</summary>
      <returns>
        <see langword="true" /> si le nœud actuel possède des attributs ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="P:System.Xml.XmlReader.HasValue">
      <summary>En cas de substitution dans une classe dérivée, obtient une valeur indiquant si le nœud actuel peut posséder <see cref="P:System.Xml.XmlReader.Value" />.</summary>
      <returns>
        <see langword="true" /> si le nœud sur lequel le lecteur est placé actuellement peut avoir un <see langword="Value" /> ; sinon, <see langword="false" />. Si <see langword="false" />, le nœud a une valeur de <see langword="String.Empty" />.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="P:System.Xml.XmlReader.IsDefault">
      <summary>En cas de substitution dans une classe dérivée, obtient une valeur indiquant si le nœud actuel est un attribut généré à partir de la valeur par défaut définie dans le DTD ou le schéma.</summary>
      <returns>
        <see langword="true" /> si le nœud actuel est un attribut dont la valeur a été générée à partir de la valeur par défaut définie dans le DTD ou le schéma ; <see langword="false" /> si la valeur d'attribut a été définie explicitement.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="P:System.Xml.XmlReader.IsEmptyElement">
      <summary>En cas de substitution dans une classe dérivée, obtient une valeur indiquant si le nœud actuel est un élément vide (par exemple, <c>&lt;MyElement/&gt;</c>).</summary>
      <returns>
        <see langword="true" /> Si le nœud actuel est un élément (<see cref="P:System.Xml.XmlReader.NodeType" /> est égal à <see langword="XmlNodeType.Element" />) qui se termine par <c>/ &gt;</c>; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.IsName(System.String)">
      <summary>Retourne une valeur indiquant si l'argument de chaîne est un nom XML valide.</summary>
      <param name="str">Nom à valider.</param>
      <returns>
        <see langword="true" /> si le nom est valide ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="str" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.IsNameToken(System.String)">
      <summary>Retourne une valeur indiquant si l'argument de chaîne est un jeton de nom XML valide.</summary>
      <param name="str">Jeton de nom à valider.</param>
      <returns>
        <see langword="true" /> si le jeton de nom est valide ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="str" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.IsStartElement">
      <summary>Appelle <see cref="M:System.Xml.XmlReader.MoveToContent" /> et vérifie si le nœud de contenu actuel est une balise de début ou une balise d'élément vide.</summary>
      <returns>
        <see langword="true" /> si <see cref="M:System.Xml.XmlReader.MoveToContent" /> trouve une balise de début ou une balise d'élément vide ; <see langword="false" /> si un type de nœud autre que <see langword="XmlNodeType.Element" /> est trouvé.</returns>
      <exception cref="T:System.Xml.XmlException">Code XML incorrect dans le flux d'entrée.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.IsStartElement(System.String)">
      <summary>Appelle <see cref="M:System.Xml.XmlReader.MoveToContent" />, vérifie si le nœud de contenu actuel est une balise de début ou une balise d'élément vide, puis vérifie également si la propriété <see cref="P:System.Xml.XmlReader.Name" /> de l'élément trouvé correspond à l'argument spécifié.</summary>
      <param name="name">Chaîne comparée à la propriété <see langword="Name" /> de l'élément trouvé.</param>
      <returns>
        <see langword="true" /> si le nœud résultant est un élément et si la propriété <see langword="Name" /> correspond à la chaîne spécifiée. <see langword="false" /> si un type de nœud autre que <see langword="XmlNodeType.Element" /> a été trouvé ou si la propriété <see langword="Name" /> de l'élément ne correspond pas à la chaîne spécifiée.</returns>
      <exception cref="T:System.Xml.XmlException">Code XML incorrect dans le flux d'entrée.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.IsStartElement(System.String,System.String)">
      <summary>Appelle <see cref="M:System.Xml.XmlReader.MoveToContent" />, vérifie si le nœud de contenu actuel est une balise de début ou une balise d'élément vide, puis vérifie également si les propriétés <see cref="P:System.Xml.XmlReader.LocalName" /> et <see cref="P:System.Xml.XmlReader.NamespaceURI" /> de l'élément trouvé correspondent aux chaînes spécifiées.</summary>
      <param name="localname">Chaîne à comparer à la propriété <see langword="LocalName" /> de l'élément trouvé.</param>
      <param name="ns">Chaîne à comparer à la propriété <see langword="NamespaceURI" /> de l'élément trouvé.</param>
      <returns>
        <see langword="true" /> si le nœud résultant est un élément. <see langword="false" /> si un type de nœud autre que <see langword="XmlNodeType.Element" /> a été trouvé ou si les propriétés <see langword="LocalName" /> et <see langword="NamespaceURI" /> de l'élément ne correspondent pas aux chaînes spécifiées.</returns>
      <exception cref="T:System.Xml.XmlException">Code XML incorrect dans le flux d'entrée.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="P:System.Xml.XmlReader.Item(System.Int32)">
      <summary>En cas de substitution dans une classe dérivée, obtient la valeur de l'attribut avec l'index spécifié.</summary>
      <param name="i">Index de l'attribut.</param>
      <returns>Valeur de l'attribut spécifié.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="P:System.Xml.XmlReader.Item(System.String)">
      <summary>En cas de substitution dans une classe dérivée, obtient la valeur de l'attribut avec le <see cref="P:System.Xml.XmlReader.Name" /> spécifié.</summary>
      <param name="name">Nom qualifié de l'attribut.</param>
      <returns>Valeur de l'attribut spécifié. Si l'attribut est introuvable, <see langword="null" /> est retourné.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="P:System.Xml.XmlReader.Item(System.String,System.String)">
      <summary>En cas de substitution dans une classe dérivée, obtient la valeur de l'attribut avec le <see cref="P:System.Xml.XmlReader.LocalName" /> et le <see cref="P:System.Xml.XmlReader.NamespaceURI" /> spécifiés.</summary>
      <param name="name">Le nom local de l'attribut.</param>
      <param name="namespaceURI">L'URI de l'espace de noms de l'attribut.</param>
      <returns>Valeur de l'attribut spécifié. Si l'attribut est introuvable, <see langword="null" /> est retourné.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="P:System.Xml.XmlReader.LocalName">
      <summary>En cas de substitution dans une classe dérivée, obtient le nom local du nœud actuel.</summary>
      <returns>Nom du nœud actuel dont le préfixe est supprimé. Par exemple, <see langword="LocalName" /> est <see langword="book" /> pour l’élément <c>&lt;bk : Book&gt;</c>.  
Pour les types de nœuds qui n'ont pas de nom (par exemple <see langword="Text" />, <see langword="Comment" />, etc.), cette propriété retourne <see langword="String.Empty" />.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.LookupNamespace(System.String)">
      <summary>En cas de substitution dans une classe dérivée, résout un préfixe de l'espace de noms dans la portée de l'élément en cours.</summary>
      <param name="prefix">Préfixe dont vous souhaitez résoudre l'URI de l'espace de noms. Pour établir une correspondance avec l'espace de noms par défaut, passez une chaîne vide.</param>
      <returns>URI de l'espace de noms vers lequel le préfixe est mappé ou <see langword="null" /> si aucun préfixe correspondant n'est trouvé.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToAttribute(System.Int32)">
      <summary>En cas de substitution dans une classe dérivée, se déplace vers l'attribut avec l'index spécifié.</summary>
      <param name="i">Index de l'attribut.</param>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Le paramètre a une valeur négative.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToAttribute(System.String)">
      <summary>En cas de substitution dans une classe dérivée, se déplace vers l'attribut avec le <see cref="P:System.Xml.XmlReader.Name" /> spécifié.</summary>
      <param name="name">Nom qualifié de l'attribut.</param>
      <returns>
        <see langword="true" /> si l'attribut est trouvé ; sinon, <see langword="false" />. Si la valeur est <see langword="false" />, la position du lecteur ne change pas.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.ArgumentException">Le paramètre est une chaîne vide.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToAttribute(System.String,System.String)">
      <summary>En cas de substitution dans une classe dérivée, se déplace vers l'attribut avec le <see cref="P:System.Xml.XmlReader.LocalName" /> et le <see cref="P:System.Xml.XmlReader.NamespaceURI" /> spécifiés.</summary>
      <param name="name">Le nom local de l'attribut.</param>
      <param name="ns">L'URI de l'espace de noms de l'attribut.</param>
      <returns>
        <see langword="true" /> si l'attribut est trouvé ; sinon, <see langword="false" />. Si la valeur est <see langword="false" />, la position du lecteur ne change pas.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.ArgumentNullException">La valeur des deux paramètres est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToContent">
      <summary>Vérifie si le nœud actuel est un nœud de contenu (texte non constitué d'espaces blancs, <see langword="CDATA" />, <see langword="Element" />, <see langword="EndElement" />, <see langword="EntityReference" /> ou <see langword="EndEntity" />). Si le nœud n'est pas un nœud de contenu, le lecteur avance jusqu'au nœud de contenu suivant ou jusqu'à la fin du fichier. Il ignore les nœuds possédant les types suivants : <see langword="ProcessingInstruction" />, <see langword="DocumentType" />, <see langword="Comment" />, <see langword="Whitespace" /> ou <see langword="SignificantWhitespace" />.</summary>
      <returns>L’élément <see cref="P:System.Xml.XmlReader.NodeType" /> du nœud actuel trouvé par la méthode ou <see langword="XmlNodeType.None" /> si le lecteur a atteint la fin du flux d'entrée.</returns>
      <exception cref="T:System.Xml.XmlException">Code XML incorrect dans le flux d'entrée.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToContentAsync">
      <summary>Vérifie de façon asynchrone si le nœud actuel est un nœud de contenu. Si le nœud n'est pas un nœud de contenu, le lecteur avance jusqu'au nœud de contenu suivant ou jusqu'à la fin du fichier.</summary>
      <returns>L’élément <see cref="P:System.Xml.XmlReader.NodeType" /> du nœud actuel trouvé par la méthode ou <see langword="XmlNodeType.None" /> si le lecteur a atteint la fin du flux d'entrée.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».
ou
Une méthode asynchrone <see cref="T:System.Xml.XmlReader" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlReaderSettings.Async" /> sur <see langword="true" />. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToElement">
      <summary>En cas de substitution dans une classe dérivée, se déplace vers l'élément contenant le nœud d'attribut actuel.</summary>
      <returns>
        <see langword="true" /> si le lecteur est placé sur un attribut (le lecteur se déplace vers l'élément qui possède l'attribut) ; <see langword="false" /> si le lecteur n'est pas placé sur un attribut (la position du lecteur ne change pas).</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToFirstAttribute">
      <summary>En cas de substitution dans une classe dérivée, se déplace vers le premier attribut.</summary>
      <returns>
        <see langword="true" /> si un attribut existe (le lecteur se déplace vers le premier attribut) ; sinon, <see langword="false" /> (la position du lecteur ne change pas).</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToNextAttribute">
      <summary>En cas de substitution dans une classe dérivée, se déplace vers l'attribut suivant.</summary>
      <returns>
        <see langword="true" /> s'il existe un attribut suivant ; <see langword="false" /> s'il n'existe plus d'attributs.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="P:System.Xml.XmlReader.Name">
      <summary>En cas de substitution dans une classe dérivée, obtient le nom qualifié du nœud actuel.</summary>
      <returns>Nom qualifié du nœud actuel. Par exemple, <see langword="Name" /> est <see langword="bk:book" /> pour l’élément <c>&lt;bk : Book&gt;</c>.  
Le nom retourné dépend du <see cref="P:System.Xml.XmlReader.NodeType" /> du nœud. Les types de nœuds suivants retournent les valeurs répertoriées. Tous les autres types de nœuds retournent une chaîne vide.  
  Type de nœud 
  Name 
 <see langword="Attribute" /> Nom de l'attribut.  

 <see langword="DocumentType" /> Nom du type de document.  

 <see langword="Element" /> Nom de la balise.  

 <see langword="EntityReference" /> Nom de l'entité référencée.  

 <see langword="ProcessingInstruction" /> Cible de l'instruction de traitement.  

 <see langword="XmlDeclaration" /> Chaîne littérale <see langword="xml" />.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="P:System.Xml.XmlReader.NamespaceURI">
      <summary>En cas de substitution dans une classe dérivée, obtient l'URI de l'espace de noms (tel qu'il est défini dans la spécification relative aux espaces de noms du W3C) du nœud sur lequel le lecteur est placé.</summary>
      <returns>URI d'espace de noms du nœud actuel ; sinon, une chaîne vide.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="P:System.Xml.XmlReader.NameTable">
      <summary>En cas de substitution dans une classe dérivée, obtient le <see cref="T:System.Xml.XmlNameTable" /> associé à cette implémentation.</summary>
      <returns>
        <see langword="XmlNameTable" /> vous permettant d'obtenir la version atomisée d'une chaîne au sein du nœud.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="P:System.Xml.XmlReader.NodeType">
      <summary>En cas de substitution dans une classe dérivée, obtient le type du nœud actuel.</summary>
      <returns>Une des valeurs d'énumération qui spécifient le type du nœud actuel.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="P:System.Xml.XmlReader.Prefix">
      <summary>En cas de substitution dans une classe dérivée, obtient le préfixe de l'espace de noms associé au nœud actuel.</summary>
      <returns>Préfixe de l'espace de noms associé au nœud actuel.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="P:System.Xml.XmlReader.QuoteChar">
      <summary>En cas de substitution dans une classe dérivée, obtient le caractère guillemet permettant de délimiter la valeur d'un nœud d'attribut.</summary>
      <returns>Caractère guillemet (" ou ') permettant de délimiter la valeur d'un nœud d'attribut.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Read">
      <summary>En cas de substitution dans une classe dérivée, lit le nœud suivant à partir du flux.</summary>
      <returns>
        <see langword="true" /> si le nœud suivant est correctement lu ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.Xml.XmlException">Une erreur s’est produite lors de l’analyse du XML.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadAsync">
      <summary>Lit de façon asynchrone le nœud suivant à partir du flux de données.</summary>
      <returns>
        <see langword="true" /> si le nœud suivant a été lu correctement ; <see langword="false" /> s'il n'y a plus de nœuds à lire.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».
ou
Une méthode asynchrone <see cref="T:System.Xml.XmlReader" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlReaderSettings.Async" /> sur <see langword="true" />. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadAttributeValue">
      <summary>En cas de substitution dans une classe dérivée, analyse la valeur d'attribut dans un ou plusieurs nœuds <see langword="Text" />, <see langword="EntityReference" /> ou <see langword="EndEntity" />.</summary>
      <returns>
        <see langword="true" /> s'il y a des nœuds à retourner.  
 <see langword="false" /> si le lecteur n'est pas placé sur un nœud d'attribut quand l'appel initial est effectué ou si toutes les valeurs d'attributs ont été lues.  
Un attribut vide, tel que <c>misc=""</c>, retourne <see langword="true" /> avec un nœud unique et la valeur <see langword="String.Empty" />.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Lit le contenu en tant qu'objet du type spécifié.</summary>
      <param name="returnType">Type de la valeur à retourner.  
 Remarque Avec le .NET Framework version 3.5, la valeur du paramètre <paramref name="returnType" /> peut maintenant être le type <see cref="T:System.DateTimeOffset" />.</param>
      <param name="namespaceResolver">Objet <see cref="T:System.Xml.IXmlNamespaceResolver" /> permettant de résoudre tous les préfixes d'espaces de noms liés à la conversion de type. Par exemple, il peut être utilisé lors de la conversion d’un objet <see cref="T:System.Xml.XmlQualifiedName" /> en <c>xs:string</c>.  
Cette valeur peut être <see langword="null" />.</param>
      <returns>Contenu de texte concaténé ou valeur d'attribut converti(e) en type demandé.</returns>
      <exception cref="T:System.FormatException">Le format du contenu n'est pas correct pour le type cible.</exception>
      <exception cref="T:System.InvalidCastException">La tentative de cast n'est pas valide.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="returnType" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Le nœud actuel n'est pas un type de nœud pris en charge. Voir le tableau ci-dessous pour plus d'informations.
ou
Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.OverflowException">Lire <see langword="Decimal.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Lit de façon asynchrone le contenu en tant qu'objet du type spécifié.</summary>
      <param name="returnType">Type de la valeur à retourner.</param>
      <param name="namespaceResolver">Objet <see cref="T:System.Xml.IXmlNamespaceResolver" /> permettant de résoudre tous les préfixes d'espaces de noms liés à la conversion de type.</param>
      <returns>Contenu de texte concaténé ou valeur d'attribut converti(e) en type demandé.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».
ou
Une méthode asynchrone <see cref="T:System.Xml.XmlReader" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlReaderSettings.Async" /> sur <see langword="true" />. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Lit le contenu et retourne les octets binaires décodés au format Base64.</summary>
      <param name="buffer">Mémoire tampon dans laquelle copier le texte obtenu. Cette valeur ne peut pas être <see langword="null" />.</param>
      <param name="index">Offset de la mémoire tampon où commence la copie du résultat.</param>
      <param name="count">Nombre maximal d'octets à copier dans la mémoire tampon. Le nombre réel d'octets copiés est retourné à partir de cette méthode.</param>
      <returns>Nombre d'octets écrits dans la mémoire tampon.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /> n'est pas pris en charge sur le nœud actuel.
ou
Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">L'index de la mémoire tampon (ou l'index augmenté de la valeur du paramètre count) est supérieur à la taille de la mémoire tampon allouée.</exception>
      <exception cref="T:System.NotSupportedException">L'implémentation de <see cref="T:System.Xml.XmlReader" /> ne prend pas en charge cette méthode.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
      <summary>Lit de façon asynchrone le contenu et retourne les octets binaires décodés au format Base64.</summary>
      <param name="buffer">Mémoire tampon dans laquelle copier le texte obtenu. Cette valeur ne peut pas être <see langword="null" />.</param>
      <param name="index">Offset de la mémoire tampon où commence la copie du résultat.</param>
      <param name="count">Nombre maximal d'octets à copier dans la mémoire tampon. Le nombre réel d'octets copiés est retourné à partir de cette méthode.</param>
      <returns>Nombre d'octets écrits dans la mémoire tampon.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».
ou
Une méthode asynchrone <see cref="T:System.Xml.XmlReader" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlReaderSettings.Async" /> sur <see langword="true" />. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Lit le contenu et retourne les octets binaires décodés au format <see langword="BinHex" />.</summary>
      <param name="buffer">Mémoire tampon dans laquelle copier le texte obtenu. Cette valeur ne peut pas être <see langword="null" />.</param>
      <param name="index">Offset de la mémoire tampon où commence la copie du résultat.</param>
      <param name="count">Nombre maximal d'octets à copier dans la mémoire tampon. Le nombre réel d'octets copiés est retourné à partir de cette méthode.</param>
      <returns>Nombre d'octets écrits dans la mémoire tampon.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> n'est pas pris en charge sur le nœud actuel.
ou
Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">L'index de la mémoire tampon (ou l'index augmenté de la valeur du paramètre count) est supérieur à la taille de la mémoire tampon allouée.</exception>
      <exception cref="T:System.NotSupportedException">L'implémentation de <see cref="T:System.Xml.XmlReader" /> ne prend pas en charge cette méthode.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
      <summary>Lit de façon asynchrone le contenu et retourne les octets binaires décodés au format <see langword="BinHex" />.</summary>
      <param name="buffer">Mémoire tampon dans laquelle copier le texte obtenu. Cette valeur ne peut pas être <see langword="null" />.</param>
      <param name="index">Offset de la mémoire tampon où commence la copie du résultat.</param>
      <param name="count">Nombre maximal d'octets à copier dans la mémoire tampon. Le nombre réel d'octets copiés est retourné à partir de cette méthode.</param>
      <returns>Nombre d'octets écrits dans la mémoire tampon.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».
ou
Une méthode asynchrone <see cref="T:System.Xml.XmlReader" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlReaderSettings.Async" /> sur <see langword="true" />. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBoolean">
      <summary>Lit le contenu de texte à la position actuelle comme un <see langword="Boolean" />.</summary>
      <returns>Contenu de texte sous la forme d'un objet <see cref="T:System.Boolean" />.</returns>
      <exception cref="T:System.InvalidCastException">La tentative de cast n'est pas valide.</exception>
      <exception cref="T:System.FormatException">Le format de chaîne n'est pas valide.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsDateTime">
      <summary>Lit le contenu de texte à la position actuelle comme un objet <see cref="T:System.DateTime" />.</summary>
      <returns>Contenu de texte sous la forme d'un objet <see cref="T:System.DateTime" />.</returns>
      <exception cref="T:System.InvalidCastException">La tentative de cast n'est pas valide.</exception>
      <exception cref="T:System.FormatException">Le format de chaîne n'est pas valide.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsDateTimeOffset">
      <summary>Lit le contenu de texte à la position actuelle comme un objet <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Contenu de texte sous la forme d'un objet <see cref="T:System.DateTimeOffset" />.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsDecimal">
      <summary>Lit le contenu de texte à la position actuelle comme un objet <see cref="T:System.Decimal" />.</summary>
      <returns>Contenu de texte à la position actuelle comme un objet <see cref="T:System.Decimal" />.</returns>
      <exception cref="T:System.InvalidCastException">La tentative de cast n'est pas valide.</exception>
      <exception cref="T:System.FormatException">Le format de chaîne n'est pas valide.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsDouble">
      <summary>Lit le contenu de texte à la position actuelle en tant que nombre à virgule flottante double précision.</summary>
      <returns>Contenu de texte sous la forme d'un nombre à virgule flottante double précision.</returns>
      <exception cref="T:System.InvalidCastException">La tentative de cast n'est pas valide.</exception>
      <exception cref="T:System.FormatException">Le format de chaîne n'est pas valide.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsFloat">
      <summary>Lit le contenu de texte à la position actuelle en tant que nombre à virgule flottante simple précision.</summary>
      <returns>Contenu de texte à la position actuelle en tant que nombre à virgule flottante simple précision.</returns>
      <exception cref="T:System.InvalidCastException">La tentative de cast n'est pas valide.</exception>
      <exception cref="T:System.FormatException">Le format de chaîne n'est pas valide.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsInt">
      <summary>Lit le contenu de texte à la position actuelle comme un entier signé de 32 bits.</summary>
      <returns>Contenu de texte sous la forme d'un entier signé de 32 bits.</returns>
      <exception cref="T:System.InvalidCastException">La tentative de cast n'est pas valide.</exception>
      <exception cref="T:System.FormatException">Le format de chaîne n'est pas valide.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsLong">
      <summary>Lit le contenu de texte à la position actuelle comme un entier signé de 64 bits.</summary>
      <returns>Contenu de texte sous la forme d’un entier signé de 64 bits.</returns>
      <exception cref="T:System.InvalidCastException">La tentative de cast n'est pas valide.</exception>
      <exception cref="T:System.FormatException">Le format de chaîne n'est pas valide.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsObject">
      <summary>Lit le contenu de texte à la position actuelle comme un <see cref="T:System.Object" />.</summary>
      <returns>Contenu de texte sous la forme de l'objet CLR le plus approprié.</returns>
      <exception cref="T:System.InvalidCastException">La tentative de cast n'est pas valide.</exception>
      <exception cref="T:System.FormatException">Le format de chaîne n'est pas valide.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsObjectAsync">
      <summary>Lit de façon asynchrone le contenu de texte à la position actuelle comme un objet <see cref="T:System.Object" />.</summary>
      <returns>Contenu de texte sous la forme de l'objet CLR le plus approprié.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».
ou
Une méthode asynchrone <see cref="T:System.Xml.XmlReader" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlReaderSettings.Async" /> sur <see langword="true" />. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsString">
      <summary>Lit le contenu de texte à la position actuelle comme un objet <see cref="T:System.String" />.</summary>
      <returns>Contenu de texte sous la forme d'un objet <see cref="T:System.String" />.</returns>
      <exception cref="T:System.InvalidCastException">La tentative de cast n'est pas valide.</exception>
      <exception cref="T:System.FormatException">Le format de chaîne n'est pas valide.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsStringAsync">
      <summary>Lit de façon asynchrone le contenu de texte à la position actuelle comme un objet <see cref="T:System.String" />.</summary>
      <returns>Contenu de texte sous la forme d'un objet <see cref="T:System.String" />.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».
ou
Une méthode asynchrone <see cref="T:System.Xml.XmlReader" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlReaderSettings.Async" /> sur <see langword="true" />. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Lit le contenu de l'élément en tant que type demandé.</summary>
      <param name="returnType">Type de la valeur à retourner.  
 Remarque Avec le .NET Framework version 3.5, la valeur du paramètre <paramref name="returnType" /> peut maintenant être le type <see cref="T:System.DateTimeOffset" />.</param>
      <param name="namespaceResolver">Objet <see cref="T:System.Xml.IXmlNamespaceResolver" /> permettant de résoudre tous les préfixes d'espaces de noms liés à la conversion de type.</param>
      <returns>Contenu d'élément converti en l'objet typé demandé.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> n'est pas placé sur un élément.
ou
Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.Xml.XmlException">L'élément en cours contient des éléments enfants.  
 ou  
 Impossible de convertir le contenu de l'élément en type demandé.</exception>
      <exception cref="T:System.ArgumentNullException">La méthode est appelée avec des arguments <see langword="null" />.</exception>
      <exception cref="T:System.OverflowException">Lire <see langword="Decimal.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
      <summary>Vérifie que le nom local spécifié et l'URI de l'espace de noms correspondent à ceux de l'élément actuel, puis lit le contenu d'élément en tant que type demandé.</summary>
      <param name="returnType">Type de la valeur à retourner.  
 Remarque Avec le .NET Framework version 3.5, la valeur du paramètre <paramref name="returnType" /> peut maintenant être le type <see cref="T:System.DateTimeOffset" />.</param>
      <param name="namespaceResolver">Objet <see cref="T:System.Xml.IXmlNamespaceResolver" /> permettant de résoudre tous les préfixes d'espaces de noms liés à la conversion de type.</param>
      <param name="localName">Le nom local de l'élément.</param>
      <param name="namespaceURI">L'URI de l'espace de noms de l'élément.</param>
      <returns>Contenu d'élément converti en l'objet typé demandé.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> n'est pas placé sur un élément.
ou
Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.Xml.XmlException">L'élément en cours contient des éléments enfants.  
 ou  
 Impossible de convertir le contenu de l'élément en type demandé.</exception>
      <exception cref="T:System.ArgumentNullException">La méthode est appelée avec des arguments <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le nom local et l'URI de l'espace de noms spécifiés ne correspondent pas à l'élément actuel lu.</exception>
      <exception cref="T:System.OverflowException">Lire <see langword="Decimal.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Lit de façon asynchrone le contenu de l'élément en tant que type demandé.</summary>
      <param name="returnType">Type de la valeur à retourner.</param>
      <param name="namespaceResolver">Objet <see cref="T:System.Xml.IXmlNamespaceResolver" /> permettant de résoudre tous les préfixes d'espaces de noms liés à la conversion de type.</param>
      <returns>Contenu d'élément converti en l'objet typé demandé.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».
ou
Une méthode asynchrone <see cref="T:System.Xml.XmlReader" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlReaderSettings.Async" /> sur <see langword="true" />. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Lit l'élément et décode le contenu au format <see langword="Base64" />.</summary>
      <param name="buffer">Mémoire tampon dans laquelle copier le texte obtenu. Cette valeur ne peut pas être <see langword="null" />.</param>
      <param name="index">Offset de la mémoire tampon où commence la copie du résultat.</param>
      <param name="count">Nombre maximal d'octets à copier dans la mémoire tampon. Le nombre réel d'octets copiés est retourné à partir de cette méthode.</param>
      <returns>Nombre d'octets écrits dans la mémoire tampon.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Le nœud actuel n'est pas un nœud d'élément.
ou
Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">L'index de la mémoire tampon (ou l'index augmenté de la valeur du paramètre count) est supérieur à la taille de la mémoire tampon allouée.</exception>
      <exception cref="T:System.NotSupportedException">L'implémentation de <see cref="T:System.Xml.XmlReader" /> ne prend pas en charge cette méthode.</exception>
      <exception cref="T:System.Xml.XmlException">L'élément contient un contenu mixte.</exception>
      <exception cref="T:System.FormatException">Impossible de convertir le contenu en type demandé.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
      <summary>Lit de façon asynchrone l'élément et décode le contenu au format <see langword="Base64" />.</summary>
      <param name="buffer">Mémoire tampon dans laquelle copier le texte obtenu. Cette valeur ne peut pas être <see langword="null" />.</param>
      <param name="index">Offset de la mémoire tampon où commence la copie du résultat.</param>
      <param name="count">Nombre maximal d'octets à copier dans la mémoire tampon. Le nombre réel d'octets copiés est retourné à partir de cette méthode.</param>
      <returns>Nombre d'octets écrits dans la mémoire tampon.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».
ou
Une méthode asynchrone <see cref="T:System.Xml.XmlReader" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlReaderSettings.Async" /> sur <see langword="true" />. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Lit l'élément et décode le contenu au format <see langword="BinHex" />.</summary>
      <param name="buffer">Mémoire tampon dans laquelle copier le texte obtenu. Cette valeur ne peut pas être <see langword="null" />.</param>
      <param name="index">Offset de la mémoire tampon où commence la copie du résultat.</param>
      <param name="count">Nombre maximal d'octets à copier dans la mémoire tampon. Le nombre réel d'octets copiés est retourné à partir de cette méthode.</param>
      <returns>Nombre d'octets écrits dans la mémoire tampon.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Le nœud actuel n'est pas un nœud d'élément.
ou
Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">L'index de la mémoire tampon (ou l'index augmenté de la valeur du paramètre count) est supérieur à la taille de la mémoire tampon allouée.</exception>
      <exception cref="T:System.NotSupportedException">L'implémentation de <see cref="T:System.Xml.XmlReader" /> ne prend pas en charge cette méthode.</exception>
      <exception cref="T:System.Xml.XmlException">L'élément contient un contenu mixte.</exception>
      <exception cref="T:System.FormatException">Impossible de convertir le contenu en type demandé.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
      <summary>Lit de façon asynchrone l'élément et décode le contenu au format <see langword="BinHex" />.</summary>
      <param name="buffer">Mémoire tampon dans laquelle copier le texte obtenu. Cette valeur ne peut pas être <see langword="null" />.</param>
      <param name="index">Offset de la mémoire tampon où commence la copie du résultat.</param>
      <param name="count">Nombre maximal d'octets à copier dans la mémoire tampon. Le nombre réel d'octets copiés est retourné à partir de cette méthode.</param>
      <returns>Nombre d'octets écrits dans la mémoire tampon.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».
ou
Une méthode asynchrone <see cref="T:System.Xml.XmlReader" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlReaderSettings.Async" /> sur <see langword="true" />. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBoolean">
      <summary>Lit l'élément actuel et retourne le contenu en tant qu'objet <see cref="T:System.Boolean" />.</summary>
      <returns>Contenu de l'élément sous la forme d'un objet <see cref="T:System.Boolean" />.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> n'est pas placé sur un élément.
ou
Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.Xml.XmlException">L'élément en cours contient des éléments enfants.  
ou 
Le contenu de l'élément ne peut pas être converti en objet <see cref="T:System.Boolean" />.</exception>
      <exception cref="T:System.ArgumentNullException">La méthode est appelée avec des arguments <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)">
      <summary>Vérifie que le nom local spécifié et l'URI de l'espace de noms correspondent à ceux de l'élément actuel, puis lit l'élément actuel et retourne le contenu en tant qu'objet <see cref="T:System.Boolean" />.</summary>
      <param name="localName">Le nom local de l'élément.</param>
      <param name="namespaceURI">L'URI de l'espace de noms de l'élément.</param>
      <returns>Contenu de l'élément sous la forme d'un objet <see cref="T:System.Boolean" />.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> n'est pas placé sur un élément.
ou
Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.Xml.XmlException">L'élément en cours contient des éléments enfants.  
 ou  
 Impossible de convertir le contenu de l'élément en type demandé.</exception>
      <exception cref="T:System.ArgumentNullException">La méthode est appelée avec des arguments <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le nom local et l'URI de l'espace de noms spécifiés ne correspondent pas à l'élément actuel lu.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDateTime">
      <summary>Lit l'élément actuel et retourne le contenu en tant qu'objet <see cref="T:System.DateTime" />.</summary>
      <returns>Contenu de l'élément sous la forme d'un objet <see cref="T:System.DateTime" />.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> n'est pas placé sur un élément.
ou
Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.Xml.XmlException">L'élément en cours contient des éléments enfants.  
ou 
Le contenu de l'élément ne peut pas être converti en objet <see cref="T:System.DateTime" />.</exception>
      <exception cref="T:System.ArgumentNullException">La méthode est appelée avec des arguments <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)">
      <summary>Vérifie que le nom local spécifié et l'URI de l'espace de noms correspondent à ceux de l'élément actuel, puis lit l'élément actuel et retourne le contenu en tant qu'objet <see cref="T:System.DateTime" />.</summary>
      <param name="localName">Le nom local de l'élément.</param>
      <param name="namespaceURI">L'URI de l'espace de noms de l'élément.</param>
      <returns>Contenu de l'élément sous la forme d'un objet <see cref="T:System.DateTime" />.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> n'est pas placé sur un élément.
ou
Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.Xml.XmlException">L'élément en cours contient des éléments enfants.  
 ou  
 Impossible de convertir le contenu de l'élément en type demandé.</exception>
      <exception cref="T:System.ArgumentNullException">La méthode est appelée avec des arguments <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le nom local et l'URI de l'espace de noms spécifiés ne correspondent pas à l'élément actuel lu.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDecimal">
      <summary>Lit l'élément actuel et retourne le contenu en tant qu'objet <see cref="T:System.Decimal" />.</summary>
      <returns>Contenu de l'élément sous la forme d'un objet <see cref="T:System.Decimal" />.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> n'est pas placé sur un élément.
ou
Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.Xml.XmlException">L'élément en cours contient des éléments enfants.  
ou 
Le contenu de l'élément ne peut pas être converti en <see cref="T:System.Decimal" />.</exception>
      <exception cref="T:System.ArgumentNullException">La méthode est appelée avec des arguments <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)">
      <summary>Vérifie que le nom local spécifié et l'URI de l'espace de noms correspondent à ceux de l'élément actuel, puis lit l'élément actuel et retourne le contenu en tant qu'objet <see cref="T:System.Decimal" />.</summary>
      <param name="localName">Le nom local de l'élément.</param>
      <param name="namespaceURI">L'URI de l'espace de noms de l'élément.</param>
      <returns>Contenu de l'élément sous la forme d'un objet <see cref="T:System.Decimal" />.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> n'est pas placé sur un élément.
ou
Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.Xml.XmlException">L'élément en cours contient des éléments enfants.  
ou 
Le contenu de l'élément ne peut pas être converti en <see cref="T:System.Decimal" />.</exception>
      <exception cref="T:System.ArgumentNullException">La méthode est appelée avec des arguments <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le nom local et l'URI de l'espace de noms spécifiés ne correspondent pas à l'élément actuel lu.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDouble">
      <summary>Lit l'élément actuel et retourne le contenu en tant que nombre à virgule flottante double précision.</summary>
      <returns>Contenu d'élément sous la forme d'un nombre à virgule flottante double précision.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> n'est pas placé sur un élément.
ou
Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.Xml.XmlException">L'élément en cours contient des éléments enfants.  
 ou  
 Le contenu de l'élément ne peut pas être converti en nombre à virgule flottante double précision.</exception>
      <exception cref="T:System.ArgumentNullException">La méthode est appelée avec des arguments <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)">
      <summary>Vérifie que le nom local et l'URI de l'espace de noms spécifiés correspondent à ceux de l'élément actuel, puis lit l'élément actuel et retourne le contenu sous la forme d'un nombre à virgule flottante double précision.</summary>
      <param name="localName">Le nom local de l'élément.</param>
      <param name="namespaceURI">L'URI de l'espace de noms de l'élément.</param>
      <returns>Contenu d'élément sous la forme d'un nombre à virgule flottante double précision.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> n'est pas placé sur un élément.
ou
Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.Xml.XmlException">L'élément en cours contient des éléments enfants.  
 ou  
 Impossible de convertir le contenu de l'élément en type demandé.</exception>
      <exception cref="T:System.ArgumentNullException">La méthode est appelée avec des arguments <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le nom local et l'URI de l'espace de noms spécifiés ne correspondent pas à l'élément actuel lu.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsFloat">
      <summary>Lit l'élément actuel et retourne le contenu en tant que nombre à virgule flottante simple précision.</summary>
      <returns>Contenu d'élément sous la forme d'un nombre à virgule flottante simple précision.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> n'est pas placé sur un élément.
ou
Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.Xml.XmlException">L'élément en cours contient des éléments enfants.  
 ou  
 Le contenu de l'élément ne peut pas être converti en nombre à virgule flottante simple précision.</exception>
      <exception cref="T:System.ArgumentNullException">La méthode est appelée avec des arguments <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)">
      <summary>Vérifie que le nom local et l'URI de l'espace de noms spécifiés correspondent à ceux de l'élément actuel, puis lit l'élément actuel et retourne le contenu sous la forme d'un nombre à virgule flottante simple précision.</summary>
      <param name="localName">Le nom local de l'élément.</param>
      <param name="namespaceURI">L'URI de l'espace de noms de l'élément.</param>
      <returns>Contenu d'élément sous la forme d'un nombre à virgule flottante simple précision.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> n'est pas placé sur un élément.
ou 
Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.Xml.XmlException">L'élément en cours contient des éléments enfants.  
 ou  
 Le contenu de l'élément ne peut pas être converti en nombre à virgule flottante simple précision.</exception>
      <exception cref="T:System.ArgumentNullException">La méthode est appelée avec des arguments <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le nom local et l'URI de l'espace de noms spécifiés ne correspondent pas à l'élément actuel lu.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsInt">
      <summary>Lit l'élément actuel et retourne le contenu comme un entier signé de 32 bits.</summary>
      <returns>Contenu d'élément sous la forme d'un entier signé de 32 bits.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> n'est pas placé sur un élément.
ou 
Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.Xml.XmlException">L'élément en cours contient des éléments enfants.  
 ou  
 Le contenu de l'élément ne peut pas être converti en un entier signé de 32 bits.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)">
      <summary>Vérifie que le nom local spécifié et l'URI de l'espace de noms correspondent à ceux de l'élément actuel, puis lit l'élément actuel et retourne le contenu en tant qu'entier signé de 32 bits.</summary>
      <param name="localName">Le nom local de l'élément.</param>
      <param name="namespaceURI">L'URI de l'espace de noms de l'élément.</param>
      <returns>Contenu d'élément sous la forme d'un entier signé de 32 bits.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> n'est pas placé sur un élément.
ou 
Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.Xml.XmlException">L'élément en cours contient des éléments enfants.  
 ou  
 Le contenu de l'élément ne peut pas être converti en un entier signé de 32 bits.</exception>
      <exception cref="T:System.ArgumentNullException">La méthode est appelée avec des arguments <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le nom local et l'URI de l'espace de noms spécifiés ne correspondent pas à l'élément actuel lu.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsLong">
      <summary>Lit l’élément actuel et retourne le contenu comme un entier signé de 64 bits.</summary>
      <returns>Contenu d’élément sous la forme d’un entier signé de 64 bits.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> n'est pas placé sur un élément.
ou 
Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.Xml.XmlException">L'élément en cours contient des éléments enfants.  
 ou  
 Le contenu de l’élément ne peut pas être converti en entier signé de 64 bits.</exception>
      <exception cref="T:System.ArgumentNullException">La méthode est appelée avec des arguments <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)">
      <summary>Vérifie que le nom local spécifié et l’URI de l’espace de noms correspondent à ceux de l’élément actuel, puis lit l’élément actuel et retourne le contenu en tant qu’entier signé de 64 bits.</summary>
      <param name="localName">Le nom local de l'élément.</param>
      <param name="namespaceURI">L'URI de l'espace de noms de l'élément.</param>
      <returns>Contenu d’élément sous la forme d’un entier signé de 64 bits.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> n'est pas placé sur un élément.
ou 
Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.Xml.XmlException">L'élément en cours contient des éléments enfants.  
 ou  
 Le contenu de l’élément ne peut pas être converti en entier signé de 64 bits.</exception>
      <exception cref="T:System.ArgumentNullException">La méthode est appelée avec des arguments <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le nom local et l'URI de l'espace de noms spécifiés ne correspondent pas à l'élément actuel lu.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsObject">
      <summary>Lit l'élément actuel et retourne le contenu en tant que <see cref="T:System.Object" />.</summary>
      <returns>Objet CLR boxed du type le plus approprié. La propriété <see cref="P:System.Xml.XmlReader.ValueType" /> détermine le type CLR approprié. Si le contenu est de type liste, cette méthode retourne un tableau d'objets boxed du type approprié.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> n'est pas placé sur un élément.
ou 
Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.Xml.XmlException">L'élément en cours contient des éléments enfants.  
 ou  
 Impossible de convertir le contenu de l'élément en type demandé</exception>
      <exception cref="T:System.ArgumentNullException">La méthode est appelée avec des arguments <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)">
      <summary>Vérifie que le nom local et l'URI de l'espace de noms spécifiés correspondent à ceux de l'élément actuel, puis lit l'élément actuel et retourne le contenu en tant qu'objet <see cref="T:System.Object" />.</summary>
      <param name="localName">Le nom local de l'élément.</param>
      <param name="namespaceURI">L'URI de l'espace de noms de l'élément.</param>
      <returns>Objet CLR boxed du type le plus approprié. La propriété <see cref="P:System.Xml.XmlReader.ValueType" /> détermine le type CLR approprié. Si le contenu est de type liste, cette méthode retourne un tableau d'objets boxed du type approprié.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> n'est pas placé sur un élément.
ou 
Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.Xml.XmlException">L'élément en cours contient des éléments enfants.  
 ou  
 Impossible de convertir le contenu de l'élément en type demandé.</exception>
      <exception cref="T:System.ArgumentNullException">La méthode est appelée avec des arguments <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le nom local et l'URI de l'espace de noms spécifiés ne correspondent pas à l'élément actuel lu.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsObjectAsync">
      <summary>Lit de façon asynchrone l'élément actuel et retourne le contenu en tant que <see cref="T:System.Object" />.</summary>
      <returns>Objet CLR boxed du type le plus approprié. La propriété <see cref="P:System.Xml.XmlReader.ValueType" /> détermine le type CLR approprié. Si le contenu est de type liste, cette méthode retourne un tableau d'objets boxed du type approprié.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».
ou
Une méthode asynchrone <see cref="T:System.Xml.XmlReader" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlReaderSettings.Async" /> sur <see langword="true" />. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsString">
      <summary>Lit l'élément actuel et retourne le contenu en tant qu'objet <see cref="T:System.String" />.</summary>
      <returns>Contenu de l'élément sous la forme d'un objet <see cref="T:System.String" />.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> n'est pas placé sur un élément.
ou
Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.Xml.XmlException">L'élément en cours contient des éléments enfants.  
ou 
Le contenu de l'élément ne peut pas être converti en objet <see cref="T:System.String" />.</exception>
      <exception cref="T:System.ArgumentNullException">La méthode est appelée avec des arguments <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)">
      <summary>Vérifie que le nom local spécifié et l'URI de l'espace de noms correspondent à ceux de l'élément actuel, puis lit l'élément actuel et retourne le contenu en tant qu'objet <see cref="T:System.String" />.</summary>
      <param name="localName">Le nom local de l'élément.</param>
      <param name="namespaceURI">L'URI de l'espace de noms de l'élément.</param>
      <returns>Contenu de l'élément sous la forme d'un objet <see cref="T:System.String" />.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> n'est pas placé sur un élément.
ou
Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.Xml.XmlException">L'élément en cours contient des éléments enfants.  
ou 
Le contenu de l'élément ne peut pas être converti en objet <see cref="T:System.String" />.</exception>
      <exception cref="T:System.ArgumentNullException">La méthode est appelée avec des arguments <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le nom local et l'URI de l'espace de noms spécifiés ne correspondent pas à l'élément actuel lu.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsStringAsync">
      <summary>Lit de façon asynchrone l'élément actuel et retourne le contenu en tant qu'objet <see cref="T:System.String" />.</summary>
      <returns>Contenu de l'élément sous la forme d'un objet <see cref="T:System.String" />.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode asynchrone <see cref="T:System.Xml.XmlReader" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlReaderSettings.Async" /> sur <see langword="true" />. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementString">
      <summary>Lit un élément de texte brut. Toutefois, nous vous recommandons d’utiliser plutôt la méthode <see cref="M:System.Xml.XmlReader.ReadElementContentAsString" />, car elle permet de gérer cette opération de façon plus directe.</summary>
      <returns>Le texte contenu dans l'élément lu. Une chaîne vide si l’élément est vide.</returns>
      <exception cref="T:System.Xml.XmlException">Le nœud de contenu suivant n'est pas une balise de début ; ou l'élément trouvé ne contient pas de valeur texte brut.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementString(System.String)">
      <summary>Vérifie que la propriété <see cref="P:System.Xml.XmlReader.Name" /> de l'élément trouvé correspond à la chaîne spécifiée avant de lire un élément de texte brut. Toutefois, nous vous recommandons d’utiliser plutôt la méthode <see cref="M:System.Xml.XmlReader.ReadElementContentAsString" />, car elle permet de gérer cette opération de façon plus directe.</summary>
      <param name="name">Nom à vérifier.</param>
      <returns>Le texte contenu dans l'élément lu. Une chaîne vide si l’élément est vide.</returns>
      <exception cref="T:System.Xml.XmlException">Si le nœud de contenu suivant n'est pas une balise de début ; si l'élément <see langword="Name" /> ne correspond pas à l'argument spécifié ; ou si l'élément trouvé ne contient pas de valeur texte brut.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementString(System.String,System.String)">
      <summary>Vérifie que les propriétés <see cref="P:System.Xml.XmlReader.LocalName" /> et <see cref="P:System.Xml.XmlReader.NamespaceURI" /> de l'élément trouvé correspondent aux chaînes spécifiées avant de lire un élément de texte brut. Toutefois, nous vous recommandons d’utiliser plutôt la méthode <see cref="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)" />, car elle permet de gérer cette opération de façon plus directe.</summary>
      <param name="localname">Nom local à vérifier.</param>
      <param name="ns">URI de l'espace de noms à vérifier.</param>
      <returns>Le texte contenu dans l'élément lu. Une chaîne vide si l’élément est vide.</returns>
      <exception cref="T:System.Xml.XmlException">Si le nœud de contenu suivant n'est pas une balise de début ; si les éléments <see langword="LocalName" /> ou <see langword="NamespaceURI" /> ne correspondent pas aux arguments spécifiés ; ou si l'élément trouvé ne contient pas de valeur texte brut.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadEndElement">
      <summary>Vérifie que le nœud de contenu actuel est une balise de fin et avance le lecteur jusqu'au nœud suivant.</summary>
      <exception cref="T:System.Xml.XmlException">Le nœud actuel n'est pas une balise de fin ou un code XML incorrect est trouvé dans le flux d'entrée.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadInnerXml">
      <summary>En cas de substitution dans une classe dérivée, lit tout le contenu, y compris le balisage, sous forme de chaîne.</summary>
      <returns>Tout le contenu XML, y compris le balisage, du nœud actuel. Si le nœud actuel n'a pas d'enfants, une chaîne vide est retournée.  
 Si le nœud actuel n'est ni un élément ni un attribut, une chaîne vide est retournée.</returns>
      <exception cref="T:System.Xml.XmlException">XML était incorrect ou une erreur s'est produite lors de l'analyse XML.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadInnerXmlAsync">
      <summary>Lit de façon asynchrone tout le contenu, notamment le balisage, en tant que chaîne.</summary>
      <returns>Tout le contenu XML, y compris le balisage, du nœud actuel. Si le nœud actuel n'a pas d'enfants, une chaîne vide est retournée.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».
ou
Une méthode asynchrone <see cref="T:System.Xml.XmlReader" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlReaderSettings.Async" /> sur <see langword="true" />. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadOuterXml">
      <summary>En cas de substitution dans une classe dérivée, lit le contenu, y compris le balisage, représentant ce nœud et tous ses enfants.</summary>
      <returns>Si le lecteur est placé sur un nœud d'élément ou d'attribut, cette méthode retourne tout le contenu XML, y compris le balisage, du nœud actuel et de tous ses enfants ; sinon, il retourne une chaîne vide.</returns>
      <exception cref="T:System.Xml.XmlException">XML était incorrect ou une erreur s'est produite lors de l'analyse XML.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadOuterXmlAsync">
      <summary>Lit de façon asynchrone le contenu, notamment le balisage, qui représente ce nœud et tous ses enfants.</summary>
      <returns>Si le lecteur est placé sur un nœud d'élément ou d'attribut, cette méthode retourne tout le contenu XML, y compris le balisage, du nœud actuel et de tous ses enfants ; sinon, il retourne une chaîne vide.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode asynchrone <see cref="T:System.Xml.XmlReader" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlReaderSettings.Async" /> sur <see langword="true" />. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadStartElement">
      <summary>Vérifie que le nœud actuel est un élément et avance le lecteur jusqu'au nœud suivant.</summary>
      <exception cref="T:System.Xml.XmlException">Code XML incorrect dans le flux d'entrée.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadStartElement(System.String)">
      <summary>Vérifie que le nœud de contenu actuel est un élément avec le <see cref="P:System.Xml.XmlReader.Name" /> spécifié, puis avance le lecteur jusqu'au nœud suivant.</summary>
      <param name="name">Nom qualifié de l'élément.</param>
      <exception cref="T:System.Xml.XmlException">Code XML incorrect dans le flux d'entrée.  
ou 
Le <see cref="P:System.Xml.XmlReader.Name" /> de l'élément ne correspond pas au <paramref name="name" /> donné.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadStartElement(System.String,System.String)">
      <summary>Vérifie que le nœud de contenu actuel est un élément avec le <see cref="P:System.Xml.XmlReader.LocalName" /> et le <see cref="P:System.Xml.XmlReader.NamespaceURI" /> spécifiés, puis avance le lecteur jusqu'au nœud suivant.</summary>
      <param name="localname">Le nom local de l'élément.</param>
      <param name="ns">L'URI de l'espace de noms de l'élément.</param>
      <exception cref="T:System.Xml.XmlException">Code XML incorrect dans le flux d'entrée.  
ou 
Les propriétés <see cref="P:System.Xml.XmlReader.LocalName" /> et <see cref="P:System.Xml.XmlReader.NamespaceURI" /> de l'élément trouvé ne correspondent pas aux arguments spécifiés.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="P:System.Xml.XmlReader.ReadState">
      <summary>En cas de substitution dans une classe dérivée, obtient l'état du lecteur.</summary>
      <returns>L'une des valeurs d'énumération qui spécifie l'état du lecteur.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadString">
      <summary>En cas de substitution dans une classe dérivée, lit le contenu d'un nœud d'élément ou de texte sous forme de chaîne. Toutefois, nous vous recommandons d’utiliser plutôt la méthode <see cref="Overload:System.Xml.XmlReader.ReadElementContentAsString" />, car elle permet de gérer cette opération de façon plus directe.</summary>
      <returns>Contenu de l'élément ou chaîne vide.</returns>
      <exception cref="T:System.Xml.XmlException">Une erreur s’est produite lors de l’analyse du XML.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadSubtree">
      <summary>Retourne une nouvelle instance de <see langword="XmlReader" /> qui permet de lire le nœud actuel, ainsi que tous ses descendants.</summary>
      <returns>Nouvelle instance du lecteur XML définie sur <see cref="F:System.Xml.ReadState.Initial" />. L’appel de la méthode <see cref="M:System.Xml.XmlReader.Read" /> place le nouveau lecteur sur le nœud qui était actuel avant l’appel à la méthode <see cref="M:System.Xml.XmlReader.ReadSubtree" />.</returns>
      <exception cref="T:System.InvalidOperationException">Le lecteur XML n’est pas placé sur un élément quand cette méthode est appelée.
ou
Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToDescendant(System.String)">
      <summary>Avance le <see cref="T:System.Xml.XmlReader" /> vers l'élément descendant suivant portant le nom qualifié spécifié.</summary>
      <param name="name">Nom qualifié de l'élément vers lequel se déplacer.</param>
      <returns>
        <see langword="true" /> si un élément descendant correspondant est trouvé ; sinon, <see langword="false" />. Si aucun élément enfant correspondant n'est trouvé, le <see cref="T:System.Xml.XmlReader" /> est placé sur la balise de fin (<see cref="P:System.Xml.XmlReader.NodeType" /> est <see langword="XmlNodeType.EndElement" />) de l'élément.  
Si <see cref="T:System.Xml.XmlReader" /> n'est pas placé sur un élément lorsque <see cref="M:System.Xml.XmlReader.ReadToDescendant(System.String)" /> est appelé, cette méthode retourne <see langword="false" /> et la position de <see cref="T:System.Xml.XmlReader" /> ne change pas.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.ArgumentException">Le paramètre est une chaîne vide.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)">
      <summary>Avance <see cref="T:System.Xml.XmlReader" /> vers le nœud descendant suivant doté du nom local et de l'URI de l'espace de noms spécifiés.</summary>
      <param name="localName">Nom local de l'élément vers lequel se déplacer.</param>
      <param name="namespaceURI">URI de l'espace de noms de l'élément vers lequel se déplacer.</param>
      <returns>
        <see langword="true" /> si un élément descendant correspondant est trouvé ; sinon, <see langword="false" />. Si aucun élément enfant correspondant n'est trouvé, le <see cref="T:System.Xml.XmlReader" /> est placé sur la balise de fin (<see cref="P:System.Xml.XmlReader.NodeType" /> est <see langword="XmlNodeType.EndElement" />) de l'élément.  
Si <see cref="T:System.Xml.XmlReader" /> n'est pas placé sur un élément lorsque <see cref="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)" /> est appelé, cette méthode retourne <see langword="false" /> et la position de <see cref="T:System.Xml.XmlReader" /> ne change pas.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.ArgumentNullException">La valeur des deux paramètres est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToFollowing(System.String)">
      <summary>Lit jusqu'à trouver un élément avec le nom qualifié spécifié.</summary>
      <param name="name">Nom qualifié de l'élément.</param>
      <returns>
        <see langword="true" /> si un élément correspondant est trouvé ; sinon, <see langword="false" /> et <see cref="T:System.Xml.XmlReader" /> est dans un état de fin de fichier.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.ArgumentException">Le paramètre est une chaîne vide.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToFollowing(System.String,System.String)">
      <summary>Lit jusqu'à trouver un élément avec le nom local et l'URI de l'espace de noms spécifiés.</summary>
      <param name="localName">Le nom local de l'élément.</param>
      <param name="namespaceURI">L'URI de l'espace de noms de l'élément.</param>
      <returns>
        <see langword="true" /> si un élément correspondant est trouvé ; sinon, <see langword="false" /> et <see cref="T:System.Xml.XmlReader" /> est dans un état de fin de fichier.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.ArgumentNullException">La valeur des deux paramètres est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToNextSibling(System.String)">
      <summary>Avance le <see langword="XmlReader" /> vers l'élément frère suivant portant le nom qualifié spécifié.</summary>
      <param name="name">Nom qualifié de l'élément frère vers lequel se déplacer.</param>
      <returns>
        <see langword="true" /> si un élément frère correspondant est trouvé ; sinon, <see langword="false" />. Si aucun élément frère correspondant n’est trouvé, le <see langword="XmlReader" /> est placé sur la balise de fin (<see cref="P:System.Xml.XmlReader.NodeType" /> est <see langword="XmlNodeType.EndElement" />) de l’élément parent.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.ArgumentException">Le paramètre est une chaîne vide.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToNextSibling(System.String,System.String)">
      <summary>Avance <see langword="XmlReader" /> vers l’élément frère suivant doté du nom local et de l’URI de l’espace de noms spécifiés.</summary>
      <param name="localName">Nom local de l'élément frère vers lequel se déplacer.</param>
      <param name="namespaceURI">URI de l'espace de noms de l'élément frère vers lequel se déplacer.</param>
      <returns>
        <see langword="true" /> si un élément frère correspondant est trouvé ; sinon, <see langword="false" />. Si aucun élément frère correspondant n’est trouvé, le <see langword="XmlReader" /> est placé sur la balise de fin (<see cref="P:System.Xml.XmlReader.NodeType" /> est <see langword="XmlNodeType.EndElement" />) de l’élément parent.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.ArgumentNullException">La valeur des deux paramètres est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
      <summary>Lit des flux de texte volumineux incorporés dans un document XML.</summary>
      <param name="buffer">Tableau de caractères servant de mémoire tampon dans laquelle le texte est écrit. Cette valeur ne peut pas être <see langword="null" />.</param>
      <param name="index">Offset dans la mémoire tampon où le <see cref="T:System.Xml.XmlReader" /> peut commencer à copier les résultats.</param>
      <param name="count">Nombre maximal de caractères à copier dans la mémoire tampon. Le nombre réel de caractères copiés est retourné à partir de cette méthode.</param>
      <returns>Nombre total de caractères lus dans la mémoire tampon. La valeur zéro est retournée lorsqu'il n'y a plus de contenu de texte.</returns>
      <exception cref="T:System.InvalidOperationException">Le nœud actuel n'a pas de valeur (<see cref="P:System.Xml.XmlReader.HasValue" /> est <see langword="false" />).
ou 
Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">L'index de la mémoire tampon, ou l'index augmenté de la valeur du paramètre count, est supérieur à la taille de la mémoire tampon allouée.</exception>
      <exception cref="T:System.NotSupportedException">L'implémentation de <see cref="T:System.Xml.XmlReader" /> ne prend pas en charge cette méthode.</exception>
      <exception cref="T:System.Xml.XmlException">La forme des données XML n'est pas correcte.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Lit de façon asynchrone des flux de texte volumineux incorporés dans un document XML.</summary>
      <param name="buffer">Tableau de caractères servant de mémoire tampon dans laquelle le texte est écrit. Cette valeur ne peut pas être <see langword="null" />.</param>
      <param name="index">Offset dans la mémoire tampon où le <see cref="T:System.Xml.XmlReader" /> peut commencer à copier les résultats.</param>
      <param name="count">Nombre maximal de caractères à copier dans la mémoire tampon. Le nombre réel de caractères copiés est retourné à partir de cette méthode.</param>
      <returns>Nombre total de caractères lus dans la mémoire tampon. La valeur zéro est retournée lorsqu'il n'y a plus de contenu de texte.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».
ou
Une méthode asynchrone <see cref="T:System.Xml.XmlReader" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlReaderSettings.Async" /> sur <see langword="true" />. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ResolveEntity">
      <summary>En cas de substitution dans une classe dérivée, résout la référence d'entité des nœuds <see langword="EntityReference" />.</summary>
      <exception cref="T:System.InvalidOperationException">Le lecteur n'est pas placé sur un nœud <see langword="EntityReference" /> ; cette implémentation du lecteur ne permet pas de résoudre les entités (<see cref="P:System.Xml.XmlReader.CanResolveEntity" /> retourne <see langword="false" />).
ou
Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="P:System.Xml.XmlReader.SchemaInfo">
      <summary>Obtient les informations de schéma qui ont été assignées au nœud actuel à la suite de la validation du schéma.</summary>
      <returns>Objet <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> qui contient les informations de schéma du nœud actuel. Les informations de schéma peuvent être définies sur des nœuds d'élément, d'attribut ou de texte avec un <see cref="P:System.Xml.XmlReader.ValueType" /> non NULL (valeurs typées).  
Si le nœud actuel n'appartient pas à l'un des types précités ou si l'instance de <see langword="XmlReader" /> ne signale pas d'informations de schéma, cette propriété retourne <see langword="null" />.  
Si cette propriété est appelée à partir d'un objet <see cref="T:System.Xml.XmlTextReader" /> ou <see cref="T:System.Xml.XmlValidatingReader" />, cette propriété retourne toujours <see langword="null" />. Ces implémentations <see langword="XmlReader" /> n'exposent pas d'informations de schéma par le biais de la propriété <see langword="SchemaInfo" />.  
   
 Si vous devez obtenir le jeu d'informations postérieur à la validation du schéma (PSVI) pour un élément, positionnez le lecteur sur la balise de fin de l'élément plutôt que sur la balise de début. Le PSVI s'obtient par le biais de la propriété <see langword="SchemaInfo" /> d'un lecteur. Le lecteur validant créé par l'intermédiaire de <see cref="Overload:System.Xml.XmlReader.Create" /> avec la propriété <see cref="P:System.Xml.XmlReaderSettings.ValidationType" /> définie à <see cref="F:System.Xml.ValidationType.Schema" /> possède un PSVI complet pour un élément seulement lorsque le lecteur est positionné sur la balise de fin d'un élément.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="P:System.Xml.XmlReader.Settings">
      <summary>Obtient l'objet <see cref="T:System.Xml.XmlReaderSettings" /> permettant de créer cette instance de <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Objet <see cref="T:System.Xml.XmlReaderSettings" /> permettant de créer cette instance du lecteur. Si ce lecteur n'a pas été créé à l'aide de la méthode <see cref="Overload:System.Xml.XmlReader.Create" />, cette propriété retourne <see langword="null" />.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Skip">
      <summary>Ignore les enfants du nœud actuel.</summary>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.SkipAsync">
      <summary>Ignore de façon asynchrone les enfants du nœud actuel.</summary>
      <returns>Nœud actuel.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».
ou
Une méthode asynchrone <see cref="T:System.Xml.XmlReader" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlReaderSettings.Async" /> sur <see langword="true" />. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
    </member>
    <member name="P:System.Xml.XmlReader.Value">
      <summary>En cas de substitution dans une classe dérivée, obtient la valeur texte du nœud actuel.</summary>
      <returns>La valeur retournée dépend du <see cref="P:System.Xml.XmlReader.NodeType" /> du nœud. Le tableau suivant répertorie les types de nœuds possédant une valeur de retour. Tous les autres types de nœuds retournent <see langword="String.Empty" />.  
  Type de nœud 
  Value 
 <see langword="Attribute" /> Valeur de l'attribut.  

 <see langword="CDATA" /> Contenu de la section CDATA.  

 <see langword="Comment" /> Contenu du commentaire.  

 <see langword="DocumentType" /> Sous-ensemble interne.  

 <see langword="ProcessingInstruction" /> Contenu entier, cible exclue.  

 <see langword="SignificantWhitespace" /> Espace blanc entre les balisages dans un modèle de contenu mixte.  

 <see langword="Text" /> Contenu du nœud de texte.  

 <see langword="Whitespace" /> Espace blanc entre les balises.  

 <see langword="XmlDeclaration" /> Contenu de la déclaration.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="P:System.Xml.XmlReader.ValueType">
      <summary>Obtient le type de CLR du nœud actuel.</summary>
      <returns>Type CLR qui correspond à la valeur typée du nœud. La valeur par défaut est <see langword="System.String" />.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="P:System.Xml.XmlReader.XmlLang">
      <summary>En cas de substitution dans une classe dérivée, obtient la portée <see langword="xml:lang" /> en cours.</summary>
      <returns>Portée de <see langword="xml:lang" /> actuelle.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="P:System.Xml.XmlReader.XmlSpace">
      <summary>En cas de substitution dans une classe dérivée, obtient la portée <see langword="xml:space" /> en cours.</summary>
      <returns>Une des valeurs de <see cref="T:System.Xml.XmlSpace" />. S'il n'existe pas de portée de <see langword="xml:space" />, cette propriété prend la valeur par défaut <see langword="XmlSpace.None" />.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="T:System.Xml.XmlReaderSettings">
      <summary>Spécifie un jeu de fonctionnalités à prendre en charge sur l'objet <see cref="T:System.Xml.XmlReader" /> créé par la méthode <see cref="Overload:System.Xml.XmlReader.Create" />.</summary>
    </member>
    <member name="M:System.Xml.XmlReaderSettings.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlReaderSettings" />.</summary>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.Async">
      <summary>Obtient ou définit une valeur indiquant si les méthodes <see cref="T:System.Xml.XmlReader" /> asynchrones peuvent être utilisées sur une instance <see cref="T:System.Xml.XmlReader" /> particulière.</summary>
      <returns>
        <see langword="true" /> si des méthodes asynchrones peuvent être utilisées ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.CheckCharacters">
      <summary>Obtient ou définit une valeur indiquant si la vérification des caractères doit être assurée.</summary>
      <returns>
        <see langword="true" /> pour assurer la vérification des caractères ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.  
   
 Si le <see cref="T:System.Xml.XmlReader" /> traite des données de texte, il vérifie toujours que les noms XML et le contenu de texte sont valides, indépendamment du paramètre de propriété. L'attribution à <see cref="P:System.Xml.XmlReaderSettings.CheckCharacters" /> de la valeur <see langword="false" /> désactive la vérification de caractères pour la recherche de références d'entité de caractère.</returns>
    </member>
    <member name="M:System.Xml.XmlReaderSettings.Clone">
      <summary>Crée une copie de l'instance <see cref="T:System.Xml.XmlReaderSettings" />.</summary>
      <returns>Objet <see cref="T:System.Xml.XmlReaderSettings" /> cloné.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.CloseInput">
      <summary>Obtient ou définit une valeur indiquant si le flux sous-jacent ou <see cref="T:System.IO.TextReader" /> doit être fermé à la fermeture du lecteur.</summary>
      <returns>
        <see langword="true" /> pour fermer le flux sous-jacent ou <see cref="T:System.IO.TextReader" /> à la fermeture du lecteur ; sinon <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.ConformanceLevel">
      <summary>Obtient ou définit le niveau de conformité que <see cref="T:System.Xml.XmlReader" /> respecte.</summary>
      <returns>Une des valeurs d'énumération qui spécifie le niveau de conformité appliqué par le lecteur XML. La valeur par défaut est <see cref="F:System.Xml.ConformanceLevel.Document" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.DtdProcessing">
      <summary>Obtient ou définit une valeur qui détermine le traitement des DTD.</summary>
      <returns>L'une des valeurs d'énumération qui détermine le traitement des DTD. La valeur par défaut est <see cref="F:System.Xml.DtdProcessing.Prohibit" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.IgnoreComments">
      <summary>Obtient ou définit une valeur indiquant si les commentaires doivent être ignorés.</summary>
      <returns>
        <see langword="true" /> pour ignorer les commentaires ; sinon <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.IgnoreProcessingInstructions">
      <summary>Obtient ou définit une valeur indiquant si les instructions de traitement doivent être ignorées.</summary>
      <returns>
        <see langword="true" /> pour ignorer les instructions de traitement ; sinon <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.IgnoreWhitespace">
      <summary>Obtient ou définit une valeur indiquant si les espaces blancs non significatifs doivent être ignorés.</summary>
      <returns>
        <see langword="true" /> pour ignorer l'espace blanc ; sinon <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.LineNumberOffset">
      <summary>Obtient ou définit l'offset du numéro de ligne de l'objet <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Offset de numéro de ligne. La valeur par défaut est 0.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.LinePositionOffset">
      <summary>Obtient ou définit l'offset de position de ligne de l'objet <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Décalage de position de ligne. La valeur par défaut est 0.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.MaxCharactersFromEntities">
      <summary>Obtient ou définit une valeur correspondant au nombre maximal autorisé de caractères dans un document, qui résultent du développement des entités.</summary>
      <returns>Nombre maximal autorisé de caractères résultant du développement des entités. La valeur par défaut est 0.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.MaxCharactersInDocument">
      <summary>Obtient ou définit une valeur correspondant au nombre maximal autorisé de caractères dans un document XML. Zéro (0) signifie que la taille du document XML n'est pas limitée. Une valeur non nulle spécifie la taille maximale, en caractères.</summary>
      <returns>Nombre maximal autorisé de caractères dans un document XML. La valeur par défaut est 0.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.NameTable">
      <summary>Obtient ou définit <see cref="T:System.Xml.XmlNameTable" /> servant aux comparaisons de chaînes atomisées.</summary>
      <returns>
        <see cref="T:System.Xml.XmlNameTable" /> qui stocke toutes les chaînes atomisées utilisées par toutes les instances <see cref="T:System.Xml.XmlReader" /> créées à l'aide de cet objet <see cref="T:System.Xml.XmlReaderSettings" />.  
La valeur par défaut est <see langword="null" />. L'instance de <see cref="T:System.Xml.XmlReader" /> créée utilisera un nouveau <see cref="T:System.Xml.NameTable" /> vide si cette valeur est <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.ProhibitDtd">
      <summary>Obtient ou définit une valeur indiquant s'il convient d'interdire le traitement de la définition de type de document (DTD). Cette propriété est obsolète. Utilisez plutôt <see cref="P:System.Xml.XmlTextReader.DtdProcessing" />.</summary>
      <returns>
        <see langword="true" /> pour interdire le traitement DTD ; sinon <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xml.XmlReaderSettings.Reset">
      <summary>Réinitialise les membres de la classe de paramètres à leurs valeurs par défaut.</summary>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.Schemas">
      <summary>Obtient ou définit le <see cref="T:System.Xml.Schema.XmlSchemaSet" /> à utiliser lors de la validation du schéma.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaSet" /> à utiliser lors de la validation de schéma. La valeur par défaut correspond à un objet <see cref="T:System.Xml.Schema.XmlSchemaSet" /> vide.</returns>
    </member>
    <member name="E:System.Xml.XmlReaderSettings.ValidationEventHandler">
      <summary>Se produit quand le lecteur trouve des erreurs de validation.</summary>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.ValidationFlags">
      <summary>Obtient ou définit une valeur indiquant les paramètres de validation du schéma. Ce paramètre s'applique aux objets <see cref="T:System.Xml.XmlReader" /> qui valident des schémas (propriété <see cref="P:System.Xml.XmlReaderSettings.ValidationType" /> définie avec la valeur <see langword="ValidationType.Schema" />).</summary>
      <returns>Combinaison d’opérations de bits de valeurs d’énumération qui spécifient des options de validation. <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints" /> et <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes" /> sont activés par défaut. <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema" />, <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation" /> et <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings" /> sont désactivés par défaut.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.ValidationType">
      <summary>Obtient ou définit une valeur indiquant si le <see cref="T:System.Xml.XmlReader" /> doit effectuer la validation ou l'assignation de type lors de la lecture.</summary>
      <returns>L'une des valeurs <see cref="T:System.Xml.ValidationType" /> qui indique si XmlReader exécute la validation ou l'assignation de type lors de la lecture. La valeur par défaut est <see langword="ValidationType.None" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.XmlResolver">
      <summary>Définit le <see cref="T:System.Xml.XmlResolver" /> permettant d'accéder aux documents externes.</summary>
      <returns>
        <see cref="T:System.Xml.XmlResolver" /> permettant d'accéder aux documents externes. Si sa valeur est <see langword="null" />, une <see cref="T:System.Xml.XmlException" /> est levée lorsque le <see cref="T:System.Xml.XmlReader" /> tente d'accéder à une ressource externe. La valeur par défaut est un nouveau <see cref="T:System.Xml.XmlUrlResolver" /> sans informations d'identification.  À partir du .NET Framework 4.5.2, la valeur par défaut de <see langword="null" />ce paramètre est.</returns>
    </member>
    <member name="T:System.Xml.XmlResolver">
      <summary>Résout les ressources XML externes nommées par un URI (Uniform Resource Identifier).</summary>
    </member>
    <member name="M:System.Xml.XmlResolver.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlResolver" />.</summary>
    </member>
    <member name="P:System.Xml.XmlResolver.Credentials">
      <summary>En cas de substitution dans une classe dérivée, définit les informations d'identification utilisées pour authentifier les demandes web.</summary>
      <returns>Informations d'identification à utiliser pour authentifier les demandes web. Si cette propriété n'est pas définie, la valeur par défaut est <see langword="null" /> ; <see langword="XmlResolver" /> n'a donc pas d'informations d'identification d'utilisateur.</returns>
    </member>
    <member name="M:System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)">
      <summary>En cas de substitution dans une classe dérivée, mappe un URI vers un objet qui contient la ressource réelle.</summary>
      <param name="absoluteUri">URI retourné par <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</param>
      <param name="role">Pas utilisé pour l’instant.</param>
      <param name="ofObjectToReturn">Type d'objet à retourner. La version actuelle ne retourne que les objets System.IO.Stream.</param>
      <returns>Objet de flux ou <see langword="null" /> si un type autre que stream est spécifié.</returns>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="ofObjectToReturn" /> n'est pas un type <see langword="Stream" />.</exception>
      <exception cref="T:System.UriFormatException">L'URI spécifié n'est pas un URI absolu.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="absoluteUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Exception">Une erreur d'exécution se produit (par exemple, une interruption de la connexion au serveur).</exception>
    </member>
    <member name="M:System.Xml.XmlResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
      <summary>Mappe de façon asynchrone un URI vers un objet contenant la ressource réelle.</summary>
      <param name="absoluteUri">URI retourné par <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</param>
      <param name="role">Pas utilisé pour l’instant.</param>
      <param name="ofObjectToReturn">Type d'objet à retourner. La version actuelle ne retourne que les objets <see cref="T:System.IO.Stream" />.</param>
      <returns>Objet de flux ou <see langword="null" /> si un type autre que stream est spécifié.</returns>
    </member>
    <member name="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)">
      <summary>En cas de substitution dans une classe dérivée, résout l'URI absolu à partir de l'URI de base et de l'URI relatif.</summary>
      <param name="baseUri">URI de base utilisé pour résoudre l'URI relatif.</param>
      <param name="relativeUri">URI à résoudre. L'URI peut être absolu ou relatif. S'il est absolu, cette valeur remplace effectivement la valeur de <paramref name="baseUri" />. S'il est relatif, il se combine à <paramref name="baseUri" /> pour produire un URI absolu.</param>
      <returns>URI absolu ou <see langword="null" /> si l'URI relatif ne peut pas être résolu.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="relativeUri" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)">
      <summary>Permet au programme de résolution de retourner d’autres types que <see cref="T:System.IO.Stream" />.</summary>
      <param name="absoluteUri">URI.</param>
      <param name="type">Type à retourner.</param>
      <returns>
        <see langword="true" /> si le <paramref name="type" /> est pris en charge ; sinon <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xml.XmlSecureResolver">
      <summary>Aide à sécuriser une autre implémentation de <see cref="T:System.Xml.XmlResolver" /> en encapsulant l'objet <see cref="T:System.Xml.XmlResolver" /> et en restreignant les ressources auxquelles a accès le <see cref="T:System.Xml.XmlResolver" /> sous-jacent.</summary>
    </member>
    <member name="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlSecureResolver" /> avec le <see cref="T:System.Xml.XmlResolver" /> et l'URL spécifiés.</summary>
      <param name="resolver">Programme de résolution XML inclus dans un wrapper par le <see cref="T:System.Xml.XmlSecureResolver" />.</param>
      <param name="securityUrl">URL utilisée pour créer le <see cref="T:System.Security.PermissionSet" /> qui sera appliqué au <see cref="T:System.Xml.XmlResolver" /> sous-jacent. <see cref="T:System.Xml.XmlSecureResolver" /> appelle <see cref="M:System.Security.PermissionSet.PermitOnly" /> sur le <see cref="T:System.Security.PermissionSet" /> créé avant d'appeler <see cref="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)" /> sur le <see cref="T:System.Xml.XmlResolver" /> sous-jacent.</param>
    </member>
    <member name="P:System.Xml.XmlSecureResolver.Credentials">
      <summary>Définit les informations d'identification utilisées pour authentifier les demandes web.</summary>
      <returns>Informations d'identification à utiliser pour authentifier les demandes web. Le <see cref="T:System.Xml.XmlSecureResolver" /> définit les informations d'identification fournies sur le <see cref="T:System.Xml.XmlResolver" /> sous-jacent. Si cette propriété n'est pas définie, la valeur par défaut est <see langword="null" /> ; <see cref="T:System.Xml.XmlSecureResolver" /> n'a donc pas d'informations d'identification d'utilisateur.</returns>
    </member>
    <member name="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)">
      <summary>Mappe un URI vers un objet contenant la ressource réelle. Cette méthode définit temporairement le <see cref="T:System.Security.PermissionSet" /> créé dans le constructeur en appelant <see cref="M:System.Security.PermissionSet.PermitOnly" /> avant d'appeler <see langword="GetEntity" /> sur le <see cref="T:System.Xml.XmlResolver" /> sous-jacent pour ouvrir la ressource.</summary>
      <param name="absoluteUri">URI retourné par <see cref="M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)" />.</param>
      <param name="role">Pas utilisé pour l’instant.</param>
      <param name="ofObjectToReturn">Type d'objet à retourner. La version actuelle ne retourne que les objets <see cref="T:System.IO.Stream" />.</param>
      <returns>Flux retourné en appelant <see langword="GetEntity" /> sur le <see cref="T:System.Xml.XmlResolver" /> sous-jacent. Si un type autre que <see cref="T:System.IO.Stream" /> est spécifié, la méthode retourne <see langword="null" />.</returns>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="ofObjectToReturn" /> n'est ni <see langword="null" /> ni un type <see cref="T:System.IO.Stream" />.</exception>
      <exception cref="T:System.UriFormatException">L'URI spécifié n'est pas un URI absolu.</exception>
      <exception cref="T:System.NullReferenceException">
        <paramref name="absoluteUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Exception">Une erreur d'exécution se produit (par exemple, une interruption de la connexion au serveur).</exception>
    </member>
    <member name="M:System.Xml.XmlSecureResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
      <summary>Mappe de façon asynchrone un URI vers un objet contenant la ressource réelle.</summary>
      <param name="absoluteUri">URI retourné par <see cref="M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)" />.</param>
      <param name="role">Pas utilisé pour l’instant.</param>
      <param name="ofObjectToReturn">Type d'objet à retourner. La version actuelle ne retourne que les objets <see cref="T:System.IO.Stream" />.</param>
      <returns>Flux retourné en appelant <see langword="GetEntity" /> sur le <see cref="T:System.Xml.XmlResolver" /> sous-jacent. Si un type autre que <see cref="T:System.IO.Stream" /> est spécifié, la méthode retourne <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)">
      <summary>Résout l'URI absolu à partir des URI de base et relatifs en appelant <see langword="ResolveUri" /> sur le <see cref="T:System.Xml.XmlResolver" /> sous-jacent.</summary>
      <param name="baseUri">URI de base utilisé pour résoudre l'URI relatif.</param>
      <param name="relativeUri">URI à résoudre. L'URI peut être absolu ou relatif. S'il est absolu, cette valeur remplace effectivement la valeur de <paramref name="baseUri" />. S'il est relatif, il se combine à <paramref name="baseUri" /> pour produire un URI absolu.</param>
      <returns>URI absolu ou <see langword="null" /> si l’URI relatif ne peut pas être résolu (retourné en appelant <see langword="ResolveUri" /> sur le <see cref="T:System.Xml.XmlResolver" /> sous-jacent).</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="relativeUri" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="T:System.Xml.XmlSignificantWhitespace">
      <summary>Représente un espace blanc entre le balisage d'un nœud de contenu mixte ou un espace blanc dans une portée xml:space= 'preserve'. Ceci est quelquefois appelé aussi espace blanc significatif.</summary>
    </member>
    <member name="M:System.Xml.XmlSignificantWhitespace.#ctor(System.String,System.Xml.XmlDocument)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlSignificantWhitespace" />.</summary>
      <param name="strData">Caractères d'espace blanc du nœud.</param>
      <param name="doc">Objet <see cref="T:System.Xml.XmlDocument" />.</param>
    </member>
    <member name="M:System.Xml.XmlSignificantWhitespace.CloneNode(System.Boolean)">
      <summary>Crée un doublon de ce nœud.</summary>
      <param name="deep">
        <see langword="true" /> pour cloner récursivement la sous-arborescence sous le nœud spécifié ; <see langword="false" /> pour cloner seulement le nœud lui-même. Pour les nœuds d'espace blanc significatif, le nœud cloné comporte toujours la valeur des données, quelle que soit la valeur du paramètre.</param>
      <returns>Nœud cloné.</returns>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.LocalName">
      <summary>Obtient le nom local du nœud.</summary>
      <returns>Pour les nœuds <see langword="XmlSignificantWhitespace" />, cette propriété retourne <see langword="#significant-whitespace" />.</returns>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.Name">
      <summary>Obtient le nom qualifié du nœud.</summary>
      <returns>Pour les nœuds <see langword="XmlSignificantWhitespace" />, cette propriété retourne <see langword="#significant-whitespace" />.</returns>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.NodeType">
      <summary>Obtient le type du nœud actuel.</summary>
      <returns>Pour les nœuds <see langword="XmlSignificantWhitespace" />, cette valeur est XmlNodeType.SignificantWhitespace.</returns>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.ParentNode">
      <summary>Obtient le parent du nœud actuel.</summary>
      <returns>Nœud <see cref="T:System.Xml.XmlNode" /> parent du nœud actuel.</returns>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.PreviousText">
      <summary>Obtient le nœud de texte qui précède immédiatement ce nœud.</summary>
      <returns>retourne <see cref="T:System.Xml.XmlNode" /> ;</returns>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.Value">
      <summary>Obtient ou définit la valeur du nœud.</summary>
      <returns>Caractères d'espace blanc trouvés dans le nœud.</returns>
      <exception cref="T:System.ArgumentException">Affectation d'espaces blancs non valides à <see langword="Value" />.</exception>
    </member>
    <member name="M:System.Xml.XmlSignificantWhitespace.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Enregistre tous les enfants du nœud dans l’élément <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="w">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="M:System.Xml.XmlSignificantWhitespace.WriteTo(System.Xml.XmlWriter)">
      <summary>Enregistre le nœud dans le <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="w">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="T:System.Xml.XmlSpace">
      <summary>Spécifie la portée <see langword="xml:space" /> en cours.</summary>
    </member>
    <member name="F:System.Xml.XmlSpace.Default">
      <summary>La portée <see langword="xml:space" /> est <see langword="default" />.</summary>
    </member>
    <member name="F:System.Xml.XmlSpace.None">
      <summary>Pas de portée <see langword="xml:space" />.</summary>
    </member>
    <member name="F:System.Xml.XmlSpace.Preserve">
      <summary>La portée <see langword="xml:space" /> est <see langword="preserve" />.</summary>
    </member>
    <member name="T:System.Xml.XmlText">
      <summary>Représente le contenu texte d'un élément ou attribut.</summary>
    </member>
    <member name="M:System.Xml.XmlText.#ctor(System.String,System.Xml.XmlDocument)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlText" />.</summary>
      <param name="strData">Contenu du nœud ; consultez la propriété <see cref="P:System.Xml.XmlText.Value" />.</param>
      <param name="doc">Document XML parent.</param>
    </member>
    <member name="M:System.Xml.XmlText.CloneNode(System.Boolean)">
      <summary>Crée un doublon de ce nœud.</summary>
      <param name="deep">
        <see langword="true" /> pour cloner récursivement la sous-arborescence sous le nœud spécifié ; <see langword="false" /> pour cloner seulement le nœud lui-même.</param>
      <returns>Nœud cloné.</returns>
    </member>
    <member name="P:System.Xml.XmlText.LocalName">
      <summary>Obtient le nom local du nœud.</summary>
      <returns>Pour les nœuds de texte, cette propriété retourne <see langword="#text" />.</returns>
    </member>
    <member name="P:System.Xml.XmlText.Name">
      <summary>Obtient le nom qualifié du nœud.</summary>
      <returns>Pour les nœuds de texte, cette propriété retourne <see langword="#text" />.</returns>
    </member>
    <member name="P:System.Xml.XmlText.NodeType">
      <summary>Obtient le type du nœud actuel.</summary>
      <returns>Pour les nœuds de texte, cette valeur est XmlNodeType.Text.</returns>
    </member>
    <member name="P:System.Xml.XmlText.ParentNode">
      <summary>Obtient le parent de ce nœud (pour les nœuds qui peuvent avoir des parents).</summary>
      <returns>
        <see langword="XmlNode" /> correspondant au parent du nœud actif. Si un nœud vient d’être créé mais qu’il n’a pas encore été ajouté à l’arborescence, ou s’il a été supprimé de celle-ci, le parent est <see langword="null" />. Pour tous les autres nœuds, la valeur retournée dépend du <see cref="P:System.Xml.XmlNode.NodeType" /> du nœud. Le tableau suivant décrit les différentes valeurs de retour possibles pour la propriété <see langword="ParentNode" />.</returns>
    </member>
    <member name="P:System.Xml.XmlText.PreviousText">
      <summary>Obtient le nœud de texte qui précède immédiatement ce nœud.</summary>
      <returns>retourne <see cref="T:System.Xml.XmlNode" /> ;</returns>
    </member>
    <member name="M:System.Xml.XmlText.SplitText(System.Int32)">
      <summary>Fractionne le nœud en deux nœuds frères au niveau de l’offset spécifié ; ils sont conservés tous les deux dans l’arborescence.</summary>
      <param name="offset">Offset au niveau duquel diviser le nœud.</param>
      <returns>Nouveau nœud.</returns>
    </member>
    <member name="P:System.Xml.XmlText.Value">
      <summary>Obtient ou définit la valeur du nœud.</summary>
      <returns>Contenu du nœud de texte.</returns>
    </member>
    <member name="M:System.Xml.XmlText.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Enregistre tous les enfants du nœud dans l’élément <see cref="T:System.Xml.XmlWriter" /> spécifié. Les nœuds <see langword="XmlText" /> n'ayant pas d'enfants, cette méthode n'a pas d'effet.</summary>
      <param name="w">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="M:System.Xml.XmlText.WriteTo(System.Xml.XmlWriter)">
      <summary>Enregistre le nœud dans le <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="w">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="T:System.Xml.XmlTextReader">
      <summary>Représente un lecteur fournissant un accès rapide, non mis en cache et en avant uniquement vers les données XML.  
À compter de .NET Framework 2.0, nous vous recommandons d'utiliser plutôt la classe <see cref="T:System.Xml.XmlReader" />.</summary>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor">
      <summary>Initialise une nouvelle instance de l'objet <see langword="XmlTextReader" />.</summary>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlTextReader" /> avec le flux spécifié.</summary>
      <param name="input">Flux contenant les données XML à lire.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNameTable)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlTextReader" /> avec le flux spécifié et <see cref="T:System.Xml.XmlNameTable" />.</summary>
      <param name="input">Flux contenant les données XML à lire.</param>
      <param name="nt">
        <see langword="XmlNameTable" /> à utiliser.</param>
      <exception cref="T:System.NullReferenceException">La valeur de <paramref name="input" /> ou de <paramref name="nt" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlTextReader" /> avec le flux spécifié, <see cref="T:System.Xml.XmlNodeType" /> et <see cref="T:System.Xml.XmlParserContext" />.</summary>
      <param name="xmlFragment">Flux contenant le fragment XML à analyser.</param>
      <param name="fragType">
        <see cref="T:System.Xml.XmlNodeType" /> du fragment XML. Ceci détermine également ce que le fragment peut contenir. Consultez le tableau ci-dessous.</param>
      <param name="context">
        <see cref="T:System.Xml.XmlParserContext" /> dans lequel <paramref name="xmlFragment" /> doit être analysé. Ceci inclut le <see cref="T:System.Xml.XmlNameTable" /> à utiliser, l’encodage, la portée de l’espace de noms, le <c>xml:lang</c> actuel et la portée <c>xml:space</c>.</param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="fragType" /> n'est pas un <see langword="XmlNodeType" /> Element, Attribute ou Document.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlFragment" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.TextReader)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlTextReader" /> avec le <see cref="T:System.IO.TextReader" /> spécifié.</summary>
      <param name="input">
        <see langword="TextReader" /> contenant les données XML à lire.</param>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.TextReader,System.Xml.XmlNameTable)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlTextReader" /> avec les <see cref="T:System.IO.TextReader" /> et <see cref="T:System.Xml.XmlNameTable" /> spécifiés.</summary>
      <param name="input">
        <see langword="TextReader" /> contenant les données XML à lire.</param>
      <param name="nt">
        <see langword="XmlNameTable" /> à utiliser.</param>
      <exception cref="T:System.NullReferenceException">
        <paramref name="nt" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlTextReader" /> avec le fichier spécifié.</summary>
      <param name="url">URL du fichier contenant les données XML. Cette valeur est affectée à la propriété <see cref="P:System.Xml.XmlTextReader.BaseURI" />.</param>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier spécifié est introuvable.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Une partie du nom de fichier ou de répertoire est introuvable.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="url" /> est une chaîne vide.</exception>
      <exception cref="T:System.Net.WebException">Le nom de fichier distant ne peut pas être résolu.  

ou -  

 Une erreur s’est produite pendant le traitement de la requête.</exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="url" /> n'est pas un URI valide.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.Stream)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlTextReader" /> avec l'URL et le flux spécifiés.</summary>
      <param name="url">URL à utiliser pour résoudre les ressources externes. Cette valeur est affectée à la propriété <see cref="P:System.Xml.XmlTextReader.BaseURI" />.</param>
      <param name="input">Flux contenant les données XML à lire.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.Stream,System.Xml.XmlNameTable)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlTextReader" /> avec l'URL, le flux et le <see cref="T:System.Xml.XmlNameTable" /> spécifiés.</summary>
      <param name="url">URL à utiliser pour résoudre les ressources externes. Cette valeur est affectée à la propriété <see cref="P:System.Xml.XmlTextReader.BaseURI" />. Si <paramref name="url" /> a la valeur <see langword="null" />, <see langword="BaseURI" /> a la valeur <see langword="String.Empty" />.</param>
      <param name="input">Flux contenant les données XML à lire.</param>
      <param name="nt">
        <see langword="XmlNameTable" /> à utiliser.</param>
      <exception cref="T:System.NullReferenceException">La valeur de <paramref name="input" /> ou de <paramref name="nt" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlTextReader" /> avec l'URL et le <see cref="T:System.IO.TextReader" /> spécifiés.</summary>
      <param name="url">URL à utiliser pour résoudre les ressources externes. Cette valeur est affectée à la propriété <see cref="P:System.Xml.XmlTextReader.BaseURI" />.</param>
      <param name="input">
        <see langword="TextReader" /> contenant les données XML à lire.</param>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader,System.Xml.XmlNameTable)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlTextReader" /> avec l'URL, le <see cref="T:System.IO.TextReader" /> et le <see cref="T:System.Xml.XmlNameTable" /> spécifiés.</summary>
      <param name="url">URL à utiliser pour résoudre les ressources externes. Cette valeur est affectée à la propriété <see cref="P:System.Xml.XmlTextReader.BaseURI" />. Si <paramref name="url" /> a la valeur <see langword="null" />, <see langword="BaseURI" /> a la valeur <see langword="String.Empty" />.</param>
      <param name="input">
        <see langword="TextReader" /> contenant les données XML à lire.</param>
      <param name="nt">
        <see langword="XmlNameTable" /> à utiliser.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="nt" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNameTable)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlTextReader" /> avec le fichier et le <see cref="T:System.Xml.XmlNameTable" /> spécifiés.</summary>
      <param name="url">URL du fichier contenant les données XML à lire.</param>
      <param name="nt">
        <see langword="XmlNameTable" /> à utiliser.</param>
      <exception cref="T:System.NullReferenceException">
        <paramref name="nt" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier spécifié est introuvable.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Une partie du nom de fichier ou de répertoire est introuvable.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="url" /> est une chaîne vide.</exception>
      <exception cref="T:System.Net.WebException">Le nom de fichier distant ne peut pas être résolu.  

ou -  

 Une erreur s’est produite pendant le traitement de la requête.</exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="url" /> n'est pas un URI valide.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlTextReader" /> avec la chaîne, le <see cref="T:System.Xml.XmlNodeType" /> et le <see cref="T:System.Xml.XmlParserContext" /> spécifiés.</summary>
      <param name="xmlFragment">Chaîne contenant le fragment XML à analyser.</param>
      <param name="fragType">
        <see cref="T:System.Xml.XmlNodeType" /> du fragment XML. Ceci détermine également ce que la chaîne du fragment peut contenir. Consultez le tableau ci-dessous.</param>
      <param name="context">
        <see cref="T:System.Xml.XmlParserContext" /> dans lequel <paramref name="xmlFragment" /> doit être analysé. Ceci inclut le <see cref="T:System.Xml.XmlNameTable" /> à utiliser, l’encodage, la portée de l’espace de noms, le <c>xml:lang</c> actuel et la portée <c>xml:space</c>.</param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="fragType" /> n’est pas un <see langword="Element" />, <see langword="Attribute" /> ni un <see langword="Document" /><see langword="XmlNodeType" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlFragment" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.Xml.XmlNameTable)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlTextReader" /> avec le <see cref="T:System.Xml.XmlNameTable" /> spécifié.</summary>
      <param name="nt">
        <see langword="XmlNameTable" /> à utiliser.</param>
    </member>
    <member name="P:System.Xml.XmlTextReader.AttributeCount">
      <summary>Obtient le nombre d'attributs du nœud actuel.</summary>
      <returns>Nombre d'attributs du nœud actuel.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.BaseURI">
      <summary>Obtient l'URI de base du nœud actuel.</summary>
      <returns>URI de base du nœud actuel.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.CanReadBinaryContent">
      <summary>Obtient une valeur indiquant si <see cref="T:System.Xml.XmlTextReader" /> implémente les méthodes de lecture de contenu binaire.</summary>
      <returns>
        <see langword="true" /> si les méthodes de lecture de contenu binaire sont implémentées ; sinon, <see langword="false" />. La classe <see cref="T:System.Xml.XmlTextReader" /> retourne toujours <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.CanReadValueChunk">
      <summary>Obtient une valeur indiquant si <see cref="T:System.Xml.XmlTextReader" /> implémente la méthode <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" />.</summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.Xml.XmlTextReader" /> implémente la méthode <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" /> ; sinon, <see langword="false" />. La classe <see cref="T:System.Xml.XmlTextReader" /> retourne toujours <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.CanResolveEntity">
      <summary>Obtient une valeur indiquant si ce lecteur peut analyser et résoudre les entités.</summary>
      <returns>
        <see langword="true" /> si le lecteur peut analyser et résoudre les entités ; sinon, <see langword="false" />. La classe <see langword="XmlTextReader" /> retourne toujours <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.Close">
      <summary>Modifie <see cref="P:System.Xml.XmlReader.ReadState" /> en lui attribuant la valeur <see langword="Closed" />.</summary>
    </member>
    <member name="P:System.Xml.XmlTextReader.Depth">
      <summary>Obtient la profondeur du nœud actuel dans le document XML.</summary>
      <returns>Profondeur du nœud actuel dans le document XML.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.DtdProcessing">
      <summary>Obtient ou définit l'énumération <see cref="T:System.Xml.DtdProcessing" />.</summary>
      <returns>Énumération <see cref="T:System.Xml.DtdProcessing" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.Encoding">
      <summary>Obtient l'encodage du document.</summary>
      <returns>Valeur d'encodage. S'il n'existe pas d'attribut d'encodage, ni d'indicateur d'ordre d'octets, la valeur par défaut est UTF-8.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.EntityHandling">
      <summary>Obtient ou définit une valeur qui spécifie le mode de gestion des entités par le lecteur.</summary>
      <returns>Une des valeurs de l'objet <see cref="T:System.Xml.EntityHandling" />. Si aucun <see langword="EntityHandling" /> n'est spécifié, il prend par défaut la valeur <see langword="EntityHandling.ExpandCharEntities" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.EOF">
      <summary>Obtient une valeur indiquant si le lecteur est placé à la fin du flux.</summary>
      <returns>
        <see langword="true" /> si le lecteur est placé à la fin du flux ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.GetAttribute(System.Int32)">
      <summary>Obtient la valeur de l'attribut avec l'index spécifié.</summary>
      <param name="i">Index de l'attribut. L'index est de base zéro. Le premier attribut possède l'index 0.</param>
      <returns>Valeur de l'attribut spécifié.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Le paramètre <paramref name="i" /> est inférieur à 0 ou encore supérieur ou égal à <see cref="P:System.Xml.XmlTextReader.AttributeCount" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.GetAttribute(System.String)">
      <summary>Obtient la valeur de l'attribut avec le nom spécifié.</summary>
      <param name="name">Nom qualifié de l'attribut.</param>
      <returns>Valeur de l'attribut spécifié. Si l'attribut est introuvable, <see langword="null" /> est retourné.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.GetAttribute(System.String,System.String)">
      <summary>Obtient la valeur de l'attribut avec le nom local et l'URI de l'espace de noms spécifiés.</summary>
      <param name="localName">Le nom local de l'attribut.</param>
      <param name="namespaceURI">L'URI de l'espace de noms de l'attribut.</param>
      <returns>Valeur de l'attribut spécifié. Si l'attribut est introuvable, <see langword="null" /> est retourné. Cette méthode ne déplace pas le lecteur.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>Obtient une collection qui contient tous les espaces de noms actuellement dans la portée.</summary>
      <param name="scope">Valeur de <see cref="T:System.Xml.XmlNamespaceScope" /> qui spécifie le type de nœuds d'espace de noms à retourner.</param>
      <returns>Objet <see cref="T:System.Collections.IDictionary" /> qui contient tous les espaces de noms actuellement dans la portée. Si le lecteur n'est pas positionné sur un élément, un dictionnaire vide (aucun espace de noms) est retourné.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.GetRemainder">
      <summary>Obtient le reste du contenu XML mis en mémoire tampon.</summary>
      <returns>
        <see cref="T:System.IO.TextReader" /> contenant le reste du contenu XML mis en mémoire tampon.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.HasLineInfo">
      <summary>Obtient une valeur indiquant si la classe peut retourner des informations de ligne.</summary>
      <returns>
        <see langword="true" /> si la classe peut retourner des informations de ligne ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.HasValue">
      <summary>Obtient une valeur indiquant si le nœud actuel peut avoir une valeur <see cref="P:System.Xml.XmlTextReader.Value" /> autre que <see langword="String.Empty" />.</summary>
      <returns>
        <see langword="true" /> si le nœud sur lequel le lecteur est placé actuellement peut avoir un <see langword="Value" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.IsDefault">
      <summary>Obtient une valeur indiquant si le nœud actuel est un attribut qui a été généré à partir de la valeur par défaut définie dans la DTD ou le schéma.</summary>
      <returns>Cette propriété retourne toujours <see langword="false" />. (<see cref="T:System.Xml.XmlTextReader" /> ne développe pas les attributs par défaut.)</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.IsEmptyElement">
      <summary>Obtient une valeur indiquant si le nœud actuel est un élément vide (par exemple, <c>&lt;MyElement/&gt;</c>).</summary>
      <returns>
        <see langword="true" />Si le nœud actuel est un élément (<see cref="P:System.Xml.XmlTextReader.NodeType" /><see langword="XmlNodeType.Element" />est égal à) qui se termine par <see langword="false" /><c>/ &gt;</c>; sinon,.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.LineNumber">
      <summary>Obtient le numéro de la ligne active.</summary>
      <returns>Numéro de ligne active.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.LinePosition">
      <summary>Obtient la position de la ligne active.</summary>
      <returns>Position de la ligne active.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.LocalName">
      <summary>Obtient le nom local du nœud actuel.</summary>
      <returns>Nom du nœud actuel dont le préfixe est supprimé. Par exemple, <see langword="LocalName" /> est <see langword="book" /> pour l’élément <c>&lt;BK: Book&gt;</c>.  
Pour les types de nœuds qui n'ont pas de nom (par exemple <see langword="Text" />, <see langword="Comment" />, etc.), cette propriété retourne <see langword="String.Empty" />.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.LookupNamespace(System.String)">
      <summary>Résout un préfixe de l'espace de noms dans la portée de l'élément actuel.</summary>
      <param name="prefix">Préfixe dont vous souhaitez résoudre l'URI de l'espace de noms. Pour établir une correspondance avec l'espace de noms par défaut, passez une chaîne vide. Il n'est pas nécessaire d'atomiser cette chaîne.</param>
      <returns>URI de l'espace de noms vers lequel le préfixe est mappé ou <see langword="null" /> si aucun préfixe correspondant n'est trouvé.</returns>
      <exception cref="T:System.ArgumentNullException">La propriété <see cref="P:System.Xml.XmlTextReader.Namespaces" /> a la valeur <see langword="true" /> et <paramref name="prefix" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToAttribute(System.Int32)">
      <summary>Se déplace vers l'attribut avec l'index spécifié.</summary>
      <param name="i">Index de l'attribut.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Le paramètre <paramref name="i" /> est inférieur à 0 ou encore supérieur ou égal à <see cref="P:System.Xml.XmlReader.AttributeCount" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToAttribute(System.String)">
      <summary>Se déplace vers l'attribut avec le nom spécifié.</summary>
      <param name="name">Nom qualifié de l'attribut.</param>
      <returns>
        <see langword="true" /> si l'attribut est trouvé ; sinon, <see langword="false" />. Si la valeur est <see langword="false" />, la position du lecteur ne change pas.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToAttribute(System.String,System.String)">
      <summary>Se déplace vers l'attribut avec le nom local et l'URI d'espace de noms spécifiés.</summary>
      <param name="localName">Le nom local de l'attribut.</param>
      <param name="namespaceURI">L'URI de l'espace de noms de l'attribut.</param>
      <returns>
        <see langword="true" /> si l'attribut est trouvé ; sinon, <see langword="false" />. Si la valeur est <see langword="false" />, la position du lecteur ne change pas.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToElement">
      <summary>Se déplace vers l'élément contenant le nœud d'attribut actuel.</summary>
      <returns>
        <see langword="true" /> si le lecteur est placé sur un attribut (le lecteur se déplace vers l'élément qui possède l'attribut) ; <see langword="false" /> si le lecteur n'est pas placé sur un attribut (la position du lecteur ne change pas).</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToFirstAttribute">
      <summary>Effectue un déplacement vers le premier attribut.</summary>
      <returns>
        <see langword="true" /> si un attribut existe (le lecteur se déplace vers le premier attribut) ; sinon, <see langword="false" /> (la position du lecteur ne change pas).</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToNextAttribute">
      <summary>Effectue un déplacement vers l'attribut suivant.</summary>
      <returns>
        <see langword="true" /> s'il existe un attribut suivant ; <see langword="false" /> s'il n'existe plus d'attributs.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.Name">
      <summary>Obtient le nom qualifié du nœud actuel.</summary>
      <returns>Nom qualifié du nœud actuel. Par exemple, <see langword="Name" /> est <see langword="bk:book" /> pour l’élément <c>&lt;BK: Book&gt;</c>.  
Le nom retourné dépend du <see cref="P:System.Xml.XmlTextReader.NodeType" /> du nœud. Les types de nœuds suivants retournent les valeurs répertoriées. Tous les autres types de nœuds retournent une chaîne vide.  
  Type de nœud 
  Name 
 <see langword="Attribute" /> Nom de l'attribut.  

 <see langword="DocumentType" /> Nom du type de document.  

 <see langword="Element" /> Nom de la balise.  

 <see langword="EntityReference" /> Nom de l'entité référencée.  

 <see langword="ProcessingInstruction" /> Cible de l'instruction de traitement.  

 <see langword="XmlDeclaration" /> Chaîne littérale <see langword="xml" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.Namespaces">
      <summary>Obtient ou définit une valeur indiquant si la prise en charge des espaces de noms doit être assurée ou non.</summary>
      <returns>
        <see langword="true" /> pour assurer la prise en charge des espaces de noms ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
      <exception cref="T:System.InvalidOperationException">Définition de cette propriété après une opération de lecture (<see cref="P:System.Xml.XmlTextReader.ReadState" /> n'est pas <see langword="ReadState.Initial" />).</exception>
    </member>
    <member name="P:System.Xml.XmlTextReader.NamespaceURI">
      <summary>Obtient l'URI d'espace de noms (tel qu'il est défini dans la spécification relative aux espaces de noms du W3C) du nœud sur lequel le lecteur est placé.</summary>
      <returns>URI d'espace de noms du nœud actuel ; sinon, une chaîne vide.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.NameTable">
      <summary>Obtient l'élément <see cref="T:System.Xml.XmlNameTable" /> associé à cette implémentation.</summary>
      <returns>
        <see langword="XmlNameTable" /> vous permettant d'obtenir la version atomisée d'une chaîne au sein du nœud.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.NodeType">
      <summary>Obtient le type du nœud actuel.</summary>
      <returns>Une des valeurs de <see cref="T:System.Xml.XmlNodeType" /> représentant le type du nœud actuel.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.Normalization">
      <summary>Obtient ou définit une valeur indiquant si les valeurs d'espaces blancs et d'attributs doivent être normalisées.</summary>
      <returns>
        <see langword="true" /> pour effectuer la normalisation ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Définition de cette propriété lorsque le lecteur est fermé (<see cref="P:System.Xml.XmlTextReader.ReadState" /> est <see langword="ReadState.Closed" />).</exception>
    </member>
    <member name="P:System.Xml.XmlTextReader.Prefix">
      <summary>Obtient le préfixe de l'espace de noms associé au nœud actuel.</summary>
      <returns>Préfixe de l'espace de noms associé au nœud actuel.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.ProhibitDtd">
      <summary>Obtient ou définit une valeur indiquant si le traitement DTD doit être autorisé. Cette propriété est obsolète. Utilisez plutôt <see cref="P:System.Xml.XmlTextReader.DtdProcessing" />.</summary>
      <returns>
        <see langword="true" /> pour refuser le traitement DTD ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.QuoteChar">
      <summary>Obtient le caractère guillemet permettant de délimiter la valeur d'un nœud d'attribut.</summary>
      <returns>Caractère guillemet (" ou ') permettant de délimiter la valeur d'un nœud d'attribut.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.Read">
      <summary>Lit le nœud suivant du flux.</summary>
      <returns>
        <see langword="true" /> si le nœud suivant a été lu correctement ; <see langword="false" /> s'il n'y a plus de nœuds à lire.</returns>
      <exception cref="T:System.Xml.XmlException">Une erreur s’est produite lors de l’analyse du XML.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadAttributeValue">
      <summary>Analyse la valeur d'attribut selon un ou plusieurs nœuds <see langword="Text" />, <see langword="EntityReference" /> ou <see langword="EndEntity" />.</summary>
      <returns>
        <see langword="true" /> s'il y a des nœuds à retourner.  
 <see langword="false" /> si le lecteur n'est pas placé sur un nœud d'attribut quand l'appel initial est effectué ou si toutes les valeurs d'attributs ont été lues.  
Un attribut vide, tel que <c>misc=""</c>, retourne <see langword="true" /> avec un nœud unique et la valeur <see langword="String.Empty" />.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Décode Base64 et retourne les octets binaires décodés.</summary>
      <param name="array">Tableau de caractères servant de mémoire tampon dans laquelle le texte est écrit.</param>
      <param name="offset">Index de base zéro dans le tableau spécifiant à partir d'où la méthode peut écrire dans la mémoire tampon.</param>
      <param name="len">Nombre d'octets à écrire dans la mémoire tampon.</param>
      <returns>Nombre d'octets écrits dans la mémoire tampon.</returns>
      <exception cref="T:System.Xml.XmlException">La séquence Base64 est non valide.</exception>
      <exception cref="T:System.ArgumentNullException">La valeur de <paramref name="array" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> &lt; 0 ou <paramref name="len" /> &lt; 0 ou <paramref name="len" /> &gt; <paramref name="array" />.Length- <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Décode <see langword="BinHex" /> et retourne les octets binaires décodés.</summary>
      <param name="array">Tableau d'octets qui sert de mémoire tampon dans laquelle les octets binaires décodés sont écrits.</param>
      <param name="offset">Index de base zéro dans le tableau spécifiant à partir d'où la méthode peut écrire dans la mémoire tampon.</param>
      <param name="len">Nombre d'octets à écrire dans la mémoire tampon.</param>
      <returns>Nombre d'octets écrits dans la mémoire tampon.</returns>
      <exception cref="T:System.Xml.XmlException">La séquence <see langword="BinHex" /> n'est pas valide.</exception>
      <exception cref="T:System.ArgumentNullException">La valeur de <paramref name="array" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> &lt; 0 ou <paramref name="len" /> &lt; 0 ou <paramref name="len" /> &gt; <paramref name="array" />.Length- <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadChars(System.Char[],System.Int32,System.Int32)">
      <summary>Lit le texte d'un élément dans une mémoire tampon de caractères. Cette méthode est conçue pour lire des flux importants de texte incorporé en l'appelant de manière successive.</summary>
      <param name="buffer">Tableau de caractères servant de mémoire tampon dans laquelle le texte est écrit.</param>
      <param name="index">Emplacement dans <paramref name="buffer" /> à partir duquel la méthode peut écrire du texte.</param>
      <param name="count">Nombre de caractères à écrire dans <paramref name="buffer" />.</param>
      <returns>Nombre de caractères à lire. Il peut s'agir de <see langword="0" /> si le lecteur n'est pas placé sur un élément ou s'il n'existe plus de texte à retourner dans le contexte actuel.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="count" /> est supérieur à l’espace spécifié dans le <paramref name="buffer" /> (taille de mémoire tampon - <paramref name="index" />).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />
        <see langword="&lt; 0" /> ou <paramref name="count" /><see langword="&lt; 0" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Lit le contenu et retourne les octets binaires décodés au format <see langword="Base64" />.</summary>
      <param name="buffer">Mémoire tampon dans laquelle copier le texte obtenu. Cette valeur ne peut pas être <see langword="null" />.</param>
      <param name="index">Offset de la mémoire tampon où commence la copie du résultat.</param>
      <param name="count">Nombre maximal d'octets à copier dans la mémoire tampon. Le nombre réel d'octets copiés est retourné à partir de cette méthode.</param>
      <returns>Nombre d'octets écrits dans la mémoire tampon.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /> n'est pas pris en charge sur le nœud actuel.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">L'index de la mémoire tampon (ou l'index augmenté de la valeur du paramètre count) est supérieur à la taille de la mémoire tampon allouée.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Lit le contenu et retourne les octets binaires décodés au format <see langword="BinHex" />.</summary>
      <param name="buffer">Mémoire tampon dans laquelle copier le texte obtenu. Cette valeur ne peut pas être <see langword="null" />.</param>
      <param name="index">Offset de la mémoire tampon où commence la copie du résultat.</param>
      <param name="count">Nombre maximal d'octets à copier dans la mémoire tampon. Le nombre réel d'octets copiés est retourné à partir de cette méthode.</param>
      <returns>Nombre d'octets écrits dans la mémoire tampon.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> n'est pas pris en charge sur le nœud actuel.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">L'index de la mémoire tampon (ou l'index augmenté de la valeur du paramètre count) est supérieur à la taille de la mémoire tampon allouée.</exception>
      <exception cref="T:System.NotSupportedException">L'implémentation de <see cref="T:System.Xml.XmlTextReader" /> ne prend pas en charge cette méthode.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Lit l'élément et décode le contenu Base64.</summary>
      <param name="buffer">Mémoire tampon dans laquelle copier le texte obtenu. Cette valeur ne peut pas être <see langword="null" />.</param>
      <param name="index">Offset de la mémoire tampon où commence la copie du résultat.</param>
      <param name="count">Nombre maximal d'octets à copier dans la mémoire tampon. Le nombre réel d'octets copiés est retourné à partir de cette méthode.</param>
      <returns>Nombre d'octets écrits dans la mémoire tampon.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Le nœud actuel n'est pas un nœud d'élément.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">L'index de la mémoire tampon (ou l'index augmenté de la valeur du paramètre count) est supérieur à la taille de la mémoire tampon allouée.</exception>
      <exception cref="T:System.NotSupportedException">L'implémentation de <see cref="T:System.Xml.XmlTextReader" /> ne prend pas en charge cette méthode.</exception>
      <exception cref="T:System.Xml.XmlException">L'élément contient un contenu mixte.</exception>
      <exception cref="T:System.FormatException">Impossible de convertir le contenu en type demandé.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Lit l'élément et décode le contenu au format <see langword="BinHex" />.</summary>
      <param name="buffer">Mémoire tampon dans laquelle copier le texte obtenu. Cette valeur ne peut pas être <see langword="null" />.</param>
      <param name="index">Offset de la mémoire tampon où commence la copie du résultat.</param>
      <param name="count">Nombre maximal d'octets à copier dans la mémoire tampon. Le nombre réel d'octets copiés est retourné à partir de cette méthode.</param>
      <returns>Nombre d'octets écrits dans la mémoire tampon.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Le nœud actuel n'est pas un nœud d'élément.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">L'index de la mémoire tampon (ou l'index augmenté de la valeur du paramètre count) est supérieur à la taille de la mémoire tampon allouée.</exception>
      <exception cref="T:System.NotSupportedException">L'implémentation de <see cref="T:System.Xml.XmlReader" /> ne prend pas en charge cette méthode.</exception>
      <exception cref="T:System.Xml.XmlException">L'élément contient un contenu mixte.</exception>
      <exception cref="T:System.FormatException">Impossible de convertir le contenu en type demandé.</exception>
    </member>
    <member name="P:System.Xml.XmlTextReader.ReadState">
      <summary>Obtient l'état du lecteur.</summary>
      <returns>Une des valeurs de <see cref="T:System.Xml.ReadState" />.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadString">
      <summary>Lit le contenu d'un nœud d'élément ou de texte sous forme de chaîne.</summary>
      <returns>Contenu du nœud d'élément ou de texte. Il peut s'agir d'une chaîne vide si le lecteur est placé sur autre chose qu'un nœud d'élément ou de texte, ou s'il n'existe plus de texte à retourner dans le contexte actuel.  
 <see langword="Note:" /> Le nœud de texte peut être un élément ou un nœud de texte d'attribut.</returns>
      <exception cref="T:System.Xml.XmlException">Une erreur s’est produite lors de l’analyse du XML.</exception>
      <exception cref="T:System.InvalidOperationException">Une opération incorrecte a été tentée.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ResetState">
      <summary>Réinitialise l'état du lecteur à ReadState.Initial.</summary>
      <exception cref="T:System.InvalidOperationException">Appel de <see langword="ResetState" /> si le lecteur a été construit à l'aide de <see cref="T:System.Xml.XmlParserContext" />.</exception>
      <exception cref="T:System.Xml.XmlException">Les documents dans un flux de données unique ne partagent pas le même encodage.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ResolveEntity">
      <summary>Résout la référence d'entité pour les nœuds <see langword="EntityReference" />.</summary>
    </member>
    <member name="M:System.Xml.XmlTextReader.Skip">
      <summary>Ignore les enfants du nœud actuel.</summary>
    </member>
    <member name="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />.</summary>
      <param name="scope">Valeur de <see cref="T:System.Xml.XmlNamespaceScope" /> qui spécifie le type de nœuds d'espace de noms à retourner.</param>
      <returns>
        <see cref="T:System.Collections.IDictionary" /> qui contient les espaces de noms actuellement dans la portée.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" />.</summary>
      <param name="prefix">Préfixe dont vous recherchez l'URI de l'espace de noms.</param>
      <returns>URI d'espace de noms mappé au préfixe ; <see langword="null" /> si le préfixe n'est pas mappé à un URI d'espace de noms.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" />.</summary>
      <param name="namespaceName">URI de l'espace de noms dont vous recherchez le préfixe.</param>
      <returns>Préfixe mappé à l'URI d'espace de noms ; <see langword="null" /> si l'URI de l'espace de noms n'est pas mappé sur un préfixe.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.Value">
      <summary>Obtient le texte du nœud actuel.</summary>
      <returns>La valeur retournée dépend du <see cref="P:System.Xml.XmlTextReader.NodeType" /> du nœud. Le tableau suivant répertorie les types de nœuds possédant une valeur de retour. Tous les autres types de nœuds retournent <see langword="String.Empty" />.  
  Type de nœud 
  Value 
 <see langword="Attribute" /> Valeur de l'attribut.  

 <see langword="CDATA" /> Contenu de la section CDATA.  

 <see langword="Comment" /> Contenu du commentaire.  

 <see langword="DocumentType" /> Sous-ensemble interne.  

 <see langword="ProcessingInstruction" /> Contenu entier, cible exclue.  

 <see langword="SignificantWhitespace" /> Espace blanc dans une portée <see langword="xml:space" />= 'preserve'.  

 <see langword="Text" /> Contenu du nœud de texte.  

 <see langword="Whitespace" /> Espace blanc entre les balises.  

 <see langword="XmlDeclaration" /> Contenu de la déclaration.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.WhitespaceHandling">
      <summary>Obtient ou définit une valeur qui spécifie le mode de gestion de l'espace blanc.</summary>
      <returns>Une des valeurs de l'objet <see cref="T:System.Xml.WhitespaceHandling" />. La valeur par défaut est <see langword="WhitespaceHandling.All" /> (retourne des nœuds <see langword="Whitespace" /> et <see langword="SignificantWhitespace" />).</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Valeur non valide spécifiée.</exception>
      <exception cref="T:System.InvalidOperationException">Définition de cette propriété lorsque le lecteur est fermé (<see cref="P:System.Xml.XmlTextReader.ReadState" /> est <see langword="ReadState.Closed" />).</exception>
    </member>
    <member name="P:System.Xml.XmlTextReader.XmlLang">
      <summary>Obtient la portée de <see langword="xml:lang" /> actuelle.</summary>
      <returns>Portée de <see langword="xml:lang" /> actuelle.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.XmlResolver">
      <summary>Définit le <see cref="T:System.Xml.XmlResolver" /> utilisé pour la résolution des références DTD.</summary>
      <returns>
        <see langword="XmlResolver" /> à utiliser. Si la valeur est <see langword="null" />, les ressources externes ne sont pas résolues.  
Dans la version 1.1 du .NET Framework, l'appelant doit bénéficier d'un niveau de confiance suffisant pour spécifier un <see langword="XmlResolver" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.XmlSpace">
      <summary>Obtient la portée de <see langword="xml:space" /> actuelle.</summary>
      <returns>Une des valeurs de <see cref="T:System.Xml.XmlSpace" />. S'il n'existe pas de portée de <see langword="xml:space" />, cette propriété prend la valeur par défaut <see langword="XmlSpace.None" />.</returns>
    </member>
    <member name="T:System.Xml.XmlTextWriter">
      <summary>Représente un writer qui fournit un procédé rapide, sans mise en cache et en avant uniquement de génération de flux de fichiers contenant des données XML ; ce procédé est conforme aux recommandations du W3C intitulées Extensible Markup Language (XML) 1.0 et Namespace in XML.  
À compter de .NET Framework 2.0, nous vous recommandons d'utiliser plutôt la classe <see cref="T:System.Xml.XmlWriter" />.</summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
      <summary>Crée une instance de la classe <see langword="XmlTextWriter" /> à l'aide du flux et de l'encodage spécifiés.</summary>
      <param name="w">Flux dans lequel vous voulez écrire.</param>
      <param name="encoding">Encodage à générer. Si l'encodage est <see langword="null" />, il écrit le flux au format UTF-8 et omet l'attribut de codage de <see langword="ProcessingInstruction" />.</param>
      <exception cref="T:System.ArgumentException">L'encodage n'est pas pris en charge ou il est impossible d'écrire dans le flux.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="w" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.#ctor(System.IO.TextWriter)">
      <summary>Crée une instance de la classe <see langword="XmlTextWriter" /> à l'aide du <see cref="T:System.IO.TextWriter" /> spécifié.</summary>
      <param name="w">
        <see langword="TextWriter" /> dans lequel écrire. On suppose que <see langword="TextWriter" /> est déjà défini selon l'encodage approprié.</param>
    </member>
    <member name="M:System.Xml.XmlTextWriter.#ctor(System.String,System.Text.Encoding)">
      <summary>Crée une instance de la classe <see cref="T:System.Xml.XmlTextWriter" /> à l'aide du fichier spécifié.</summary>
      <param name="filename">Nom du fichier dans lequel écrire. Si le fichier existe, il le tronque et remplace son contenu.</param>
      <param name="encoding">Encodage à générer. Si l'encodage est <see langword="null" />, il écrit le fichier au format UTF-8 et omet l'attribut de codage de <see langword="ProcessingInstruction" />.</param>
      <exception cref="T:System.ArgumentException">L'encodage n'est pas pris en charge ou le nom de fichier est vide, ne comporte que des espaces blancs ou contient un ou plusieurs caractères non valides.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Accès refusé.</exception>
      <exception cref="T:System.ArgumentNullException">Le nom de fichier est <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Impossible de trouver le répertoire auquel l'écriture est destinée.</exception>
      <exception cref="T:System.IO.IOException">Le nom de fichier comporte une syntaxe incorrecte ou non valide au niveau du nom de fichier, de répertoire ou de volume.</exception>
      <exception cref="T:System.Security.SecurityException">L'appelant n'a pas l'autorisation requise.</exception>
    </member>
    <member name="P:System.Xml.XmlTextWriter.BaseStream">
      <summary>Obtient l'objet de flux sous-jacent.</summary>
      <returns>Flux dans lequel <see langword="XmlTextWriter" /> écrit ou <see langword="null" /> si <see langword="XmlTextWriter" /> a été construit à l'aide d'un <see cref="T:System.IO.TextWriter" /> qui n'hérite pas de la classe <see cref="T:System.IO.StreamWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlTextWriter.Close">
      <summary>Ferme ce flux et le flux sous-jacent.</summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.Flush">
      <summary>Vide le contenu de la mémoire tampon dans les flux sous-jacents, puis vide le flux sous-jacent.</summary>
    </member>
    <member name="P:System.Xml.XmlTextWriter.Formatting">
      <summary>Indique la façon dont la sortie est mise en forme.</summary>
      <returns>Une des valeurs de <see cref="T:System.Xml.Formatting" />. La valeur par défaut est <see langword="Formatting.None" /> (aucune mise en forme spéciale).</returns>
    </member>
    <member name="P:System.Xml.XmlTextWriter.Indentation">
      <summary>Obtient ou définit le nombre d'IndentChars à écrire pour chaque niveau de la hiérarchie lorsque <see cref="P:System.Xml.XmlTextWriter.Formatting" /> a la valeur <see langword="Formatting.Indented" />.</summary>
      <returns>Nombre de <see langword="IndentChars" /> pour chaque niveau. La valeur par défaut est 2.</returns>
      <exception cref="T:System.ArgumentException">Affectation d'une valeur négative à cette propriété.</exception>
    </member>
    <member name="P:System.Xml.XmlTextWriter.IndentChar">
      <summary>Obtient ou définit le caractère à utiliser pour la mise en retrait lorsque <see cref="P:System.Xml.XmlTextWriter.Formatting" /> a la valeur <see langword="Formatting.Indented" />.</summary>
      <returns>Caractère à utiliser pour la mise en retrait. La valeur par défaut est un espace.  
   
 <see langword="XmlTextWriter" /> vous permet d'affecter n'importe quel caractère à cette propriété. Pour garantir la validité du code XML, vous devez spécifier un espace blanc valide, 0x9, 0x10, 0x13 ou 0x20.</returns>
    </member>
    <member name="M:System.Xml.XmlTextWriter.LookupPrefix(System.String)">
      <summary>Retourne le préfixe le plus proche défini dans la portée espace de noms actuelle pour l'URI de l'espace de noms.</summary>
      <param name="ns">URI de l'espace de noms dont vous recherchez le préfixe.</param>
      <returns>Préfixe correspondant. Ou <see langword="null" /> s'il n'existe aucun URI d'espace de noms dans la portée actuelle.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="ns" /> a la valeur <see langword="null" /> ou <see langword="String.Empty" />.</exception>
    </member>
    <member name="P:System.Xml.XmlTextWriter.Namespaces">
      <summary>Obtient ou définit une valeur indiquant si la prise en charge des espaces de noms doit être assurée ou non.</summary>
      <returns>
        <see langword="true" /> pour assurer la prise en charge des espaces de noms ; sinon, <see langword="false" />.  
La valeur par défaut est <see langword="true" />.</returns>
      <exception cref="T:System.InvalidOperationException">Vous ne pouvez modifier cette propriété que dans l'état <see langword="WriteState.Start" />.</exception>
    </member>
    <member name="P:System.Xml.XmlTextWriter.QuoteChar">
      <summary>Obtient ou définit le caractère à utiliser pour mettre les valeurs d'attributs entre guillemets.</summary>
      <returns>Caractère à utiliser pour mettre les valeurs d'attributs entre guillemets. Il doit s’agir d’un guillemet&amp;simple (#39;) ou un guillemet double (&amp;#34;). La valeur par défaut est un guillemet double.</returns>
      <exception cref="T:System.ArgumentException">Affectation d'un autre élément qu'un guillemet simple ou double à cette propriété.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Encode les octets binaires spécifiés au format base64 et écrit le texte résultant.</summary>
      <param name="buffer">Tableau d'octets à encoder.</param>
      <param name="index">Emplacement dans la mémoire tampon indiquant le début des octets à écrire.</param>
      <param name="count">Nombre d'octets à écrire.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La longueur de la mémoire tampon moins <paramref name="index" /> est inférieure à <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ou <paramref name="count" /> est inférieur à zéro.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Xml.XmlTextWriter.WriteState" /> a la valeur <see langword="Closed" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Encode les octets binaires spécifiés au format binhex et écrit le texte résultant.</summary>
      <param name="buffer">Tableau d'octets à encoder.</param>
      <param name="index">Emplacement dans la mémoire tampon indiquant le début des octets à écrire.</param>
      <param name="count">Nombre d'octets à écrire.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La longueur de la mémoire tampon moins <paramref name="index" /> est inférieure à <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ou <paramref name="count" /> est inférieur à zéro.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Xml.XmlTextWriter.WriteState" /> est fermé.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteCData(System.String)">
      <summary>Écrit un bloc &lt;![CDATA[...]]&gt; contenant le texte spécifié.</summary>
      <param name="text">Texte à placer dans le bloc CDATA.</param>
      <exception cref="T:System.ArgumentException">Le texte est à l'origine d'un document XML incorrect.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Xml.XmlTextWriter.WriteState" /> a la valeur <see langword="Closed" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteCharEntity(System.Char)">
      <summary>Force la génération d'une entité de caractère pour la valeur du caractère Unicode spécifiée.</summary>
      <param name="ch">Caractère Unicode pour lequel une entité de caractère doit être générée.</param>
      <exception cref="T:System.ArgumentException">Le caractère est dans la plage de caractères de paire de substitution, <see langword="0xd800" /> - <see langword="0xdfff" /> ; sinon, le texte serait un document XML au format incorrect.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Xml.XmlTextWriter.WriteState" /> a la valeur <see langword="Closed" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
      <summary>Écrit du texte mémoire tampon par mémoire tampon.</summary>
      <param name="buffer">Tableau de caractères contenant le texte à écrire.</param>
      <param name="index">Emplacement dans la mémoire tampon indiquant le début du texte à écrire.</param>
      <param name="count">Nombre de caractères à écrire.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ou <paramref name="count" /> est inférieur à zéro.  
ou 
La longueur de la mémoire tampon moins <paramref name="index" /> est inférieure à <paramref name="count" /> ; par conséquent, l'appel entraîne une séparation des caractères de paire de substitution ou l'écriture d'une paire de substitution non valide.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Xml.XmlTextWriter.WriteState" /> est fermé.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteComment(System.String)">
      <summary>Écrit un commentaire &lt;!--...--&gt; contenant le texte spécifié.</summary>
      <param name="text">Texte à placer dans le commentaire.</param>
      <exception cref="T:System.ArgumentException">Le texte est à l'origine d'un document XML incorrect.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Xml.XmlTextWriter.WriteState" /> a la valeur <see langword="Closed" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteDocType(System.String,System.String,System.String,System.String)">
      <summary>Écrit la déclaration DOCTYPE avec le nom et les attributs facultatifs spécifiés.</summary>
      <param name="name">Nom de DOCTYPE. Ne doit pas être vide.</param>
      <param name="pubid">Si la valeur est non null, elle écrit également PUBLIC "pubid" "sysid", <paramref name="pubid" /> et <paramref name="sysid" /> étant remplacés par la valeur des arguments spécifiés.</param>
      <param name="sysid">Si <paramref name="pubid" /> est null et que <paramref name="sysid" /> est non null, elle écrit SYSTEM "sysid", <paramref name="sysid" /> étant remplacé par la valeur de cet argument.</param>
      <param name="subset">Si la valeur est non null, elle écrit [subset] où subset est remplacé par la valeur de cet argument.</param>
      <exception cref="T:System.InvalidOperationException">Cette méthode a été appelée en dehors du prologue (après l'élément racine).</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> ou <see langword="null" /> est <see langword="String.Empty" />.  
ou 
La valeur de <paramref name="name" /> produit un contenu XML non valide.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteEndAttribute">
      <summary>Ferme le précédent appel de <see cref="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" />.</summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteEndDocument">
      <summary>Ferme les éléments ou attributs ouverts, et replace le writer à l'état Start.</summary>
      <exception cref="T:System.ArgumentException">Le document XML n'est pas valide.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteEndElement">
      <summary>Ferme un élément et exécute un pop sur la portée espace de noms correspondante.</summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteEntityRef(System.String)">
      <summary>ةcrit une référence d'entité comme suit : <see langword="&amp;name;" />.</summary>
      <param name="name">Nom de la référence de l'entité.</param>
      <exception cref="T:System.ArgumentException">Le texte est à l'origine d'un document XML incorrect ou <paramref name="name" /> est soit <see langword="null" />, soit <see langword="String.Empty" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteFullEndElement">
      <summary>Ferme un élément et exécute un pop sur la portée espace de noms correspondante.</summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteName(System.String)">
      <summary>Écrit le nom spécifié, en vérifiant qu’il s’agit d’un nom valide conformément à la recommandation W3C pour XML 1.0.</summary>
      <param name="name">Nom à écrire.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> n'est pas un nom XML valide ; ou <paramref name="name" /> est soit <see langword="null" />, soit <see langword="String.Empty" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteNmToken(System.String)">
      <summary>Écrit le nom spécifié, en vérifiant qu’il s’agit d’un <see langword="NmToken" /> valide conformément à la recommandation W3C pour XML 1.0.</summary>
      <param name="name">Nom à écrire.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> n'est pas un <see langword="NmToken" />valide ; ou <paramref name="name" /> est soit <see langword="null" />, soit <see langword="String.Empty" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteProcessingInstruction(System.String,System.String)">
      <summary>Écrit une instruction de traitement avec un espace entre le nom et le texte, comme suit : &lt;?name text?&gt;.</summary>
      <param name="name">Nom de l'instruction de traitement.</param>
      <param name="text">Texte à inclure dans l'instruction de traitement.</param>
      <exception cref="T:System.ArgumentException">Le texte est à l'origine d'un document XML incorrect.  
 <paramref name="name" /> a la valeur <see langword="null" /> ou <see langword="String.Empty" />.  
Cette méthode permet de créer une déclaration XML après l'appel de <see cref="M:System.Xml.XmlTextWriter.WriteStartDocument" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteQualifiedName(System.String,System.String)">
      <summary>Écrit le nom qualifié de l'espace de noms. Cette méthode recherche le préfixe situé dans la portée de l'espace de noms spécifié.</summary>
      <param name="localName">Nom local à écrire.</param>
      <param name="ns">URI de l'espace de noms à associer au nom.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="localName" /> a la valeur <see langword="null" /> ou <see langword="String.Empty" />.  
 <paramref name="localName" /> n'est pas un nom valide conformément à la spécification du W3C relative aux espaces de noms.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
      <summary>Écrit manuellement un balisage brut à partir d'une mémoire tampon de caractères.</summary>
      <param name="buffer">Tableau de caractères contenant le texte à écrire.</param>
      <param name="index">Emplacement dans la mémoire tampon indiquant le début du texte à écrire.</param>
      <param name="count">Nombre de caractères à écrire.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ou <paramref name="count" /> est inférieur à zéro.  

ou - 
La longueur de la mémoire tampon moins <paramref name="index" /> est inférieure à <paramref name="count" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteRaw(System.String)">
      <summary>Écrit manuellement un balisage brut à partir d'une chaîne.</summary>
      <param name="data">Chaîne contenant le texte à écrire.</param>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)">
      <summary>Écrit le début d'un attribut.</summary>
      <param name="prefix">Préfixe <see langword="Namespace" /> de l'attribut.</param>
      <param name="localName">
        <see langword="LocalName" /> de l'attribut.</param>
      <param name="ns">
        <see langword="NamespaceURI" /> de l'attribut.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="localName" /> a la valeur <see langword="null" /> ou <see langword="String.Empty" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteStartDocument">
      <summary>Écrit la déclaration XML avec la version "1.0".</summary>
      <exception cref="T:System.InvalidOperationException">Il ne s'agit pas de la première méthode d'écriture appelée à la suite du constructeur.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteStartDocument(System.Boolean)">
      <summary>Écrit la déclaration XML avec la version "1.0" et l'attribut autonome.</summary>
      <param name="standalone">Si la valeur est <see langword="true" />, elle écrit "standalone=yes"; si la valeur est <see langword="false" />, elle écrit "standalone=no".</param>
      <exception cref="T:System.InvalidOperationException">Il ne s'agit pas de la première méthode d'écriture appelée à la suite du constructeur.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteStartElement(System.String,System.String,System.String)">
      <summary>Écrit la balise de début indiquée et l'associe à l'espace de noms et au préfixe spécifiés.</summary>
      <param name="prefix">Préfixe d'espace de noms de cet élément.</param>
      <param name="localName">Le nom local de l'élément.</param>
      <param name="ns">URI de l'espace de noms à associer à l'élément. Si cet espace de noms est déjà dans la portée et qu'il possède un préfixe associé, le writer écrit automatiquement ce préfixe également.</param>
      <exception cref="T:System.InvalidOperationException">Le writer est fermé.</exception>
    </member>
    <member name="P:System.Xml.XmlTextWriter.WriteState">
      <summary>Obtient l'état du writer.</summary>
      <returns>Une des valeurs de <see cref="T:System.Xml.WriteState" />.</returns>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteString(System.String)">
      <summary>Écrit le texte spécifié.</summary>
      <param name="text">Texte à écrire.</param>
      <exception cref="T:System.ArgumentException">La chaîne de texte contient une paire de substitution non valide.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
      <summary>Génère et écrit l'entité de caractère de substitution correspondant à la paire de caractères de substitution.</summary>
      <param name="lowChar">Substitut faible. Il doit s'agir d'une valeur entre <see langword="0xDC00" /> et <see langword="0xDFFF" />.</param>
      <param name="highChar">Substitut étendu. Il doit s'agir d'une valeur entre <see langword="0xD800" /> et <see langword="0xDBFF" />.</param>
      <exception cref="T:System.Exception">Une paire de caractères de substitution non valide est passée.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteWhitespace(System.String)">
      <summary>Écrit l'espace blanc spécifié</summary>
      <param name="ws">Chaîne d'espaces blancs.</param>
      <exception cref="T:System.ArgumentException">La chaîne contient des caractères qui ne sont pas des espaces blancs.</exception>
    </member>
    <member name="P:System.Xml.XmlTextWriter.XmlLang">
      <summary>Obtient la portée de <see langword="xml:lang" /> actuelle.</summary>
      <returns>
        <see langword="xml:lang" /> actuel ou <see langword="null" /> s'il n'y a aucun <see langword="xml:lang" /> dans la portée actuelle.</returns>
    </member>
    <member name="P:System.Xml.XmlTextWriter.XmlSpace">
      <summary>Obtient un <see cref="T:System.Xml.XmlSpace" /> représentant la portée <see langword="xml:space" /> en cours.</summary>
      <returns>Obtient un <see langword="XmlSpace" /> représentant la portée <see langword="xml:space" /> en cours.  
  Value 
  Signification 
  Aucun. 
  Valeur par défaut si aucune portée <see langword="xml:space" /> n'existe.  

  Par défaut 
  La portée actuelle est <see langword="xml:space" />= "default".  

  Preserve 
  La portée actuelle est <see langword="xml:space" />= "preserve".</returns>
    </member>
    <member name="T:System.Xml.XmlTokenizedType">
      <summary>Représente le type XML de la chaîne. Cela permet ainsi de lire la chaîne selon un type XML particulier, par exemple un type de section CDATA.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.CDATA">
      <summary>Type CDATA.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.ENTITIES">
      <summary>Type ENTITIES.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.ENTITY">
      <summary>Type ENTITY.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.ENUMERATION">
      <summary>Type ENUMERATION.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.ID">
      <summary>Type ID.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.IDREF">
      <summary>Type IDREF.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.IDREFS">
      <summary>Type IDREFS.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.NCName">
      <summary>Type NCName.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.NMTOKEN">
      <summary>Type NMTOKEN.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.NMTOKENS">
      <summary>Type NMTOKENS.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.None">
      <summary>Pas de type.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.NOTATION">
      <summary>Type NOTATION.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.QName">
      <summary>Type QName.</summary>
    </member>
    <member name="T:System.Xml.XmlUrlResolver">
      <summary>Résout les ressources XML externes nommées par un URI (Uniform Resource Identifier).</summary>
    </member>
    <member name="M:System.Xml.XmlUrlResolver.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlUrlResolver" />.</summary>
    </member>
    <member name="P:System.Xml.XmlUrlResolver.CachePolicy">
      <summary>Obtient ou définit la stratégie de cache pour l'objet <see cref="T:System.Net.WebRequest" /> sous-jacent.</summary>
      <returns>Stratégie de cache pour la requête web sous-jacente.</returns>
    </member>
    <member name="P:System.Xml.XmlUrlResolver.Credentials">
      <summary>Définit les informations d'identification utilisées pour authentifier les demandes web.</summary>
      <returns>Informations d'identification à utiliser pour authentifier les demandes web. Si cette propriété n'est pas définie, la valeur par défaut est <see langword="null" /> ; <see langword="XmlUrlResolver" /> n'a donc pas d'informations d'identification d'utilisateur.</returns>
    </member>
    <member name="M:System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)">
      <summary>Mappe un URI vers un objet contenant la ressource réelle.</summary>
      <param name="absoluteUri">URI retourné par <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</param>
      <param name="role">Pas utilisé pour l’instant.</param>
      <param name="ofObjectToReturn">Type d'objet à retourner. L'implémentation en cours ne retourne que les objets <see cref="T:System.IO.Stream" />.</param>
      <returns>Objet de flux ou <see langword="null" /> si un type autre que stream est spécifié.</returns>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="ofObjectToReturn" /> n'est ni <see langword="null" /> ni un type <see langword="Stream" />.</exception>
      <exception cref="T:System.UriFormatException">L'URI spécifié n'est pas un URI absolu.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="absoluteUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Exception">Une erreur d'exécution se produit (par exemple, une interruption de la connexion au serveur).</exception>
    </member>
    <member name="M:System.Xml.XmlUrlResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
      <summary>Mappe de façon asynchrone un URI vers un objet contenant la ressource réelle.</summary>
      <param name="absoluteUri">URI retourné par <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</param>
      <param name="role">Pas utilisé pour l’instant.</param>
      <param name="ofObjectToReturn">Type d'objet à retourner. L'implémentation en cours ne retourne que les objets <see cref="T:System.IO.Stream" />.</param>
      <returns>Objet de flux ou <see langword="null" /> si un type autre que stream est spécifié.</returns>
    </member>
    <member name="P:System.Xml.XmlUrlResolver.Proxy">
      <summary>Obtient ou définit le proxy réseau pour l'objet <see cref="T:System.Net.WebRequest" /> sous-jacent.</summary>
      <returns>
        <see cref="T:System.Net.IWebProxy" /> à utiliser pour accéder à la ressource Internet.</returns>
    </member>
    <member name="M:System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)">
      <summary>Résout l'URI absolu à partir des URI de base et relatifs.</summary>
      <param name="baseUri">URI de base utilisé pour résoudre l'URI relatif.</param>
      <param name="relativeUri">URI à résoudre. L'URI peut être absolu ou relatif. S'il est absolu, cette valeur remplace effectivement la valeur de <paramref name="baseUri" />. S'il est relatif, il se combine à <paramref name="baseUri" /> pour produire un URI absolu.</param>
      <returns>URI absolu ou <see langword="null" /> si l’URI relatif ne peut pas être résolu.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="baseUri" /> a la valeur <see langword="null" /> ou <paramref name="relativeUri" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="T:System.Xml.XmlValidatingReader">
      <summary>Représente un lecteur fournissant une validation de définition de type de document (DTD), de schéma XDR (XML-Data Reduced) et en langage XSD (XML Schema Definition).  
Cette classe est obsolète. À compter de .NET Framework 2.0, nous vous recommandons d'utiliser la classe <see cref="T:System.Xml.XmlReaderSettings" /> et la méthode <see cref="Overload:System.Xml.XmlReader.Create" /> pour créer un lecteur XML de validation.</summary>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
      <summary>Initialise une nouvelle instance de la classe <see langword="XmlValidatingReader" /> avec les valeurs spécifiées.</summary>
      <param name="xmlFragment">Flux contenant le fragment XML à analyser.</param>
      <param name="fragType">
        <see cref="T:System.Xml.XmlNodeType" /> du fragment XML. Ceci détermine ce que le fragment peut contenir (consultez le tableau ci-dessous).</param>
      <param name="context">
        <see cref="T:System.Xml.XmlParserContext" /> dans lequel le fragment XML doit être analysé. Ceci inclut le <see cref="T:System.Xml.XmlNameTable" /> à utiliser, l'encodage, la portée de l'espace de noms, le <see langword="xml:lang" /> actuel et la portée de <see langword="xml:space" />.</param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="fragType" /> ne fait pas partie des types de nœuds répertoriés dans le tableau ci-dessous.</exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
      <summary>Initialise une nouvelle instance de la classe <see langword="XmlValidatingReader" /> avec les valeurs spécifiées.</summary>
      <param name="xmlFragment">Chaîne contenant le fragment XML à analyser.</param>
      <param name="fragType">
        <see cref="T:System.Xml.XmlNodeType" /> du fragment XML. Ceci détermine également ce que la chaîne du fragment peut contenir (consultez le tableau ci-dessous).</param>
      <param name="context">
        <see cref="T:System.Xml.XmlParserContext" /> dans lequel le fragment XML doit être analysé. Ceci inclut le <see cref="T:System.Xml.NameTable" /> à utiliser, l'encodage, la portée de l'espace de noms, le xml:lang actuel et la portée de xml:space.</param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="fragType" /> ne fait pas partie des types de nœuds répertoriés dans le tableau ci-dessous.</exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.#ctor(System.Xml.XmlReader)">
      <summary>Initialise une nouvelle instance de la classe <see langword="XmlValidatingReader" /> qui valide le contenu retourné à partir du <see cref="T:System.Xml.XmlReader" /> en question.</summary>
      <param name="reader">
        <see langword="XmlReader" /> à lire au moment de la validation. L'implémentation actuelle ne prend en charge que <see cref="T:System.Xml.XmlTextReader" />.</param>
      <exception cref="T:System.ArgumentException">Le lecteur spécifié n'est pas <see langword="XmlTextReader" />.</exception>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.AttributeCount">
      <summary>Obtient le nombre d'attributs du nœud actuel.</summary>
      <returns>Nombre d'attributs du nœud actuel. Ce nombre inclut les attributs par défaut.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.BaseURI">
      <summary>Obtient l'URI de base du nœud actuel.</summary>
      <returns>URI de base du nœud actuel.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.CanReadBinaryContent">
      <summary>Obtient une valeur indiquant si <see cref="T:System.Xml.XmlValidatingReader" /> implémente les méthodes de lecture de contenu binaire.</summary>
      <returns>
        <see langword="true" /> si les méthodes de lecture de contenu binaire sont implémentées ; sinon, <see langword="false" />. La classe <see cref="T:System.Xml.XmlValidatingReader" /> retourne <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.CanResolveEntity">
      <summary>Obtient une valeur indiquant si ce lecteur peut analyser et résoudre les entités.</summary>
      <returns>
        <see langword="true" /> si le lecteur peut analyser et résoudre les entités ; sinon, <see langword="false" />. <see langword="XmlValidatingReader" /> retourne toujours <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.Close">
      <summary>Modifie <see cref="P:System.Xml.XmlReader.ReadState" /> en lui attribuant la valeur Closed.</summary>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Depth">
      <summary>Obtient la profondeur du nœud actuel dans le document XML.</summary>
      <returns>Profondeur du nœud actuel dans le document XML.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Encoding">
      <summary>Obtient l'attribut d'encodage du document.</summary>
      <returns>Valeur d'encodage. S'il n'existe pas d'attribut d'encodage, ni d'indicateur d'ordre d'octets, la valeur par défaut est UTF-8.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.EntityHandling">
      <summary>Obtient ou définit une valeur qui spécifie le mode de gestion des entités par le lecteur.</summary>
      <returns>Une des valeurs de l'objet <see cref="T:System.Xml.EntityHandling" />. Si aucun <see langword="EntityHandling" /> n’est spécifié, la valeur par défaut est EntityHandling.ExpandEntities.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Valeur non valide spécifiée.</exception>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.EOF">
      <summary>Obtient une valeur indiquant si le lecteur est placé à la fin du flux.</summary>
      <returns>
        <see langword="true" /> si le lecteur est placé à la fin du flux ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.GetAttribute(System.Int32)">
      <summary>Obtient la valeur de l'attribut avec l'index spécifié.</summary>
      <param name="i">Index de l'attribut. L'index est de base zéro. Le premier attribut possède l'index 0.</param>
      <returns>Valeur de l'attribut spécifié.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Le paramètre <paramref name="i" /> est inférieur à 0 ou encore supérieur ou égal à <see cref="P:System.Xml.XmlValidatingReader.AttributeCount" />.</exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.GetAttribute(System.String)">
      <summary>Obtient la valeur de l'attribut avec le nom spécifié.</summary>
      <param name="name">Nom qualifié de l'attribut.</param>
      <returns>Valeur de l'attribut spécifié. Si l'attribut est introuvable, <see langword="null" /> est retourné.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.GetAttribute(System.String,System.String)">
      <summary>Obtient la valeur de l'attribut avec le nom local et l'URI (Uniform Resource Identifier) de l'espace de noms spécifiés.</summary>
      <param name="localName">Le nom local de l'attribut.</param>
      <param name="namespaceURI">L'URI de l'espace de noms de l'attribut.</param>
      <returns>Valeur de l'attribut spécifié. Si l'attribut est introuvable, <see langword="null" /> est retourné. Cette méthode ne déplace pas le lecteur.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.HasLineInfo">
      <summary>Obtient une valeur indiquant si la classe peut retourner des informations de ligne.</summary>
      <returns>
        <see langword="true" /> si la classe peut retourner des informations de ligne ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.HasValue">
      <summary>Obtient une valeur indiquant si le nœud actuel peut avoir une valeur <see cref="P:System.Xml.XmlValidatingReader.Value" /> autre que String.Empty.</summary>
      <returns>
        <see langword="true" /> si le nœud sur lequel le lecteur est placé actuellement peut avoir un <see langword="Value" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.IsDefault">
      <summary>Obtient une valeur indiquant si le nœud actuel est un attribut généré à partir de la valeur par défaut définie dans la définition de type de document (DTD) ou le schéma.</summary>
      <returns>
        <see langword="true" /> si le nœud actuel est un attribut dont la valeur a été générée à partir de la valeur par défaut définie dans le DTD ou le schéma ; <see langword="false" /> si la valeur d'attribut a été définie explicitement.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.IsEmptyElement">
      <summary>Obtient une valeur indiquant si le nœud actuel est un élément vide (par exemple, <c>&lt;MyElement/&gt;</c>).</summary>
      <returns>
        <see langword="true" />Si le nœud actuel est un élément (<see cref="P:System.Xml.XmlValidatingReader.NodeType" /><see langword="XmlNodeType.Element" />est égal à) qui se termine par <see langword="false" /><c>/ &gt;</c>; sinon,.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.LineNumber">
      <summary>Obtient le numéro de la ligne active.</summary>
      <returns>Numéro de ligne active. La valeur de départ de cette propriété est 1.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.LinePosition">
      <summary>Obtient la position de la ligne active.</summary>
      <returns>Position de la ligne active. La valeur de départ de cette propriété est 1.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.LocalName">
      <summary>Obtient le nom local du nœud actuel.</summary>
      <returns>Nom du nœud actuel dont le préfixe est supprimé. Par exemple, <see langword="LocalName" /> est <see langword="book" /> pour l’élément <c>&lt;BK: Book&gt;</c>.  
Pour les types de nœuds qui n'ont pas de nom (par exemple <see langword="Text" />, <see langword="Comment" />, etc.), cette propriété retourne String.Empty.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.LookupNamespace(System.String)">
      <summary>Résout un préfixe de l'espace de noms dans la portée de l'élément actuel.</summary>
      <param name="prefix">Préfixe dont vous souhaitez résoudre l'URI (Uniform Resource Identifier) d'espace de noms. Pour établir une correspondance avec l'espace de noms par défaut, passez une chaîne vide.</param>
      <returns>URI de l'espace de noms vers lequel le préfixe est mappé ou <see langword="null" /> si aucun préfixe correspondant n'est trouvé.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.Int32)">
      <summary>Se déplace vers l'attribut avec l'index spécifié.</summary>
      <param name="i">Index de l'attribut.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Le paramètre <paramref name="i" /> est inférieur à 0 ou encore supérieur ou égal à <see cref="P:System.Xml.XmlReader.AttributeCount" />.</exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.String)">
      <summary>Se déplace vers l'attribut avec le nom spécifié.</summary>
      <param name="name">Nom qualifié de l'attribut.</param>
      <returns>
        <see langword="true" /> si l'attribut est trouvé ; sinon, <see langword="false" />. Si la valeur est <see langword="false" />, la position du lecteur ne change pas.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.String,System.String)">
      <summary>Se déplace vers l'attribut possédant le nom local et l'URI (Uniform Resource Identifier) de l'espace de noms spécifiés.</summary>
      <param name="localName">Le nom local de l'attribut.</param>
      <param name="namespaceURI">L'URI de l'espace de noms de l'attribut.</param>
      <returns>
        <see langword="true" /> si l'attribut est trouvé ; sinon, <see langword="false" />. Si la valeur est <see langword="false" />, la position du lecteur ne change pas.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToElement">
      <summary>Se déplace vers l'élément contenant le nœud d'attribut actuel.</summary>
      <returns>
        <see langword="true" /> si le lecteur est placé sur un attribut (le lecteur se déplace vers l'élément qui possède l'attribut) ; <see langword="false" /> si le lecteur n'est pas placé sur un attribut (la position du lecteur ne change pas).</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToFirstAttribute">
      <summary>Effectue un déplacement vers le premier attribut.</summary>
      <returns>
        <see langword="true" /> si un attribut existe (le lecteur se déplace vers le premier attribut) ; sinon, <see langword="false" /> (la position du lecteur ne change pas).</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToNextAttribute">
      <summary>Effectue un déplacement vers l'attribut suivant.</summary>
      <returns>
        <see langword="true" /> s'il existe un attribut suivant ; <see langword="false" /> s'il n'existe plus d'attributs.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Name">
      <summary>Obtient le nom qualifié du nœud actuel.</summary>
      <returns>Nom qualifié du nœud actuel. Par exemple, <see langword="Name" /> est <see langword="bk:book" /> pour l’élément <c>&lt;BK: Book&gt;</c>.  
Le nom retourné dépend du <see cref="P:System.Xml.XmlValidatingReader.NodeType" /> du nœud. Les types de nœuds suivants retournent les valeurs répertoriées. Tous les autres types de nœuds retournent une chaîne vide.  
  Type de nœud 
  Name 
 <see langword="Attribute" /> Nom de l'attribut.  

 <see langword="DocumentType" /> Nom du type de document.  

 <see langword="Element" /> Nom de la balise.  

 <see langword="EntityReference" /> Nom de l'entité référencée.  

 <see langword="ProcessingInstruction" /> Cible de l'instruction de traitement.  

 <see langword="XmlDeclaration" /> Chaîne littérale <see langword="xml" />.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Namespaces">
      <summary>Obtient ou définit une valeur indiquant si la prise en charge des espaces de noms doit être assurée ou non.</summary>
      <returns>
        <see langword="true" /> pour assurer la prise en charge des espaces de noms ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.NamespaceURI">
      <summary>Obtient l’URI (Uniform Resource Identifier) d’espace de noms (tel qu’il est défini dans la spécification relative aux espaces de noms du W3C) du nœud sur lequel le lecteur est placé.</summary>
      <returns>URI d'espace de noms du nœud actuel ; sinon, une chaîne vide.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.NameTable">
      <summary>Obtient l'élément <see cref="T:System.Xml.XmlNameTable" /> associé à cette implémentation.</summary>
      <returns>
        <see langword="XmlNameTable" /> vous permettant d'obtenir la version atomisée d'une chaîne du nœud.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.NodeType">
      <summary>Obtient le type du nœud actuel.</summary>
      <returns>Une des valeurs de <see cref="T:System.Xml.XmlNodeType" /> représentant le type du nœud actuel.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Prefix">
      <summary>Obtient le préfixe de l'espace de noms associé au nœud actuel.</summary>
      <returns>Préfixe de l'espace de noms associé au nœud actuel.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.QuoteChar">
      <summary>Obtient le caractère guillemet permettant de délimiter la valeur d'un nœud d'attribut.</summary>
      <returns>Caractère guillemet (" ou ') permettant de délimiter la valeur d'un nœud d'attribut.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.Read">
      <summary>Lit le nœud suivant du flux.</summary>
      <returns>
        <see langword="true" /> si le nœud suivant a été lu correctement ; <see langword="false" /> s'il n'y a plus de nœuds à lire.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadAttributeValue">
      <summary>Analyse la valeur d'attribut selon un ou plusieurs nœuds <see langword="Text" />, <see langword="EntityReference" /> ou <see langword="EndEntity" />.</summary>
      <returns>
        <see langword="true" /> s'il y a des nœuds à retourner.  
 <see langword="false" /> si le lecteur n'est pas placé sur un nœud d'attribut quand l'appel initial est effectué ou si toutes les valeurs d'attributs ont été lues.  
Un attribut vide, tel que <c>misc=""</c>, retourne <see langword="true" /> avec un nœud unique et la valeur String.Empty.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Lit le contenu et retourne les octets binaires décodés au format Base64.</summary>
      <param name="buffer">Mémoire tampon dans laquelle copier le texte obtenu. Cette valeur ne peut pas être <see langword="null" />.</param>
      <param name="index">Offset de la mémoire tampon où commence la copie du résultat.</param>
      <param name="count">Nombre maximal d'octets à copier dans la mémoire tampon. Le nombre réel d'octets copiés est retourné à partir de cette méthode.</param>
      <returns>Nombre d'octets écrits dans la mémoire tampon.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /> n'est pas pris en charge sur le nœud actuel.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">L'index de la mémoire tampon (ou l'index augmenté de la valeur du paramètre count) est supérieur à la taille de la mémoire tampon allouée.</exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Lit le contenu et retourne les octets binaires décodés au format BinHex.</summary>
      <param name="buffer">Mémoire tampon dans laquelle copier le texte obtenu. Cette valeur ne peut pas être <see langword="null" />.</param>
      <param name="index">Offset de la mémoire tampon où commence la copie du résultat.</param>
      <param name="count">Nombre maximal d'octets à copier dans la mémoire tampon. Le nombre réel d'octets copiés est retourné à partir de cette méthode.</param>
      <returns>Nombre d'octets écrits dans la mémoire tampon.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> n'est pas pris en charge sur le nœud actuel.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">L'index de la mémoire tampon (ou l'index augmenté de la valeur du paramètre count) est supérieur à la taille de la mémoire tampon allouée.</exception>
      <exception cref="T:System.NotSupportedException">L'implémentation de <see cref="T:System.Xml.XmlValidatingReader" /> ne prend pas en charge cette méthode.</exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Lit l'élément et décode le contenu Base64.</summary>
      <param name="buffer">Mémoire tampon dans laquelle copier le texte obtenu. Cette valeur ne peut pas être <see langword="null" />.</param>
      <param name="index">Offset de la mémoire tampon où commence la copie du résultat.</param>
      <param name="count">Nombre maximal d'octets à copier dans la mémoire tampon. Le nombre réel d'octets copiés est retourné à partir de cette méthode.</param>
      <returns>Nombre d'octets écrits dans la mémoire tampon.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Le nœud actuel n'est pas un nœud d'élément.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">L'index de la mémoire tampon (ou l'index augmenté de la valeur du paramètre count) est supérieur à la taille de la mémoire tampon allouée.</exception>
      <exception cref="T:System.NotSupportedException">L'implémentation de <see cref="T:System.Xml.XmlValidatingReader" /> ne prend pas en charge cette méthode.</exception>
      <exception cref="T:System.Xml.XmlException">L'élément contient un contenu mixte.</exception>
      <exception cref="T:System.FormatException">Impossible de convertir le contenu en type demandé.</exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Lit l'élément et décode le contenu BinHex.</summary>
      <param name="buffer">Mémoire tampon dans laquelle copier le texte obtenu. Cette valeur ne peut pas être <see langword="null" />.</param>
      <param name="index">Offset de la mémoire tampon où commence la copie du résultat.</param>
      <param name="count">Nombre maximal d'octets à copier dans la mémoire tampon. Le nombre réel d'octets copiés est retourné à partir de cette méthode.</param>
      <returns>Nombre d'octets écrits dans la mémoire tampon.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Le nœud actuel n'est pas un nœud d'élément.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">L'index de la mémoire tampon (ou l'index augmenté de la valeur du paramètre count) est supérieur à la taille de la mémoire tampon allouée.</exception>
      <exception cref="T:System.NotSupportedException">L'implémentation de <see cref="T:System.Xml.XmlValidatingReader" /> ne prend pas en charge cette méthode.</exception>
      <exception cref="T:System.Xml.XmlException">L'élément contient un contenu mixte.</exception>
      <exception cref="T:System.FormatException">Impossible de convertir le contenu en type demandé.</exception>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Reader">
      <summary>Obtient le <see cref="T:System.Xml.XmlReader" /> utilisé pour construire ce <see langword="XmlValidatingReader" />.</summary>
      <returns>
        <see langword="XmlReader" /> spécifié dans le constructeur.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.ReadState">
      <summary>Obtient l'état du lecteur.</summary>
      <returns>Une des valeurs de l'objet <see cref="T:System.Xml.ReadState" />.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadString">
      <summary>Lit le contenu d'un nœud d'élément ou de texte sous forme de chaîne.</summary>
      <returns>Contenu du nœud d'élément ou de texte. Il peut s'agir d'une chaîne vide si le lecteur est placé sur autre chose qu'un nœud d'élément ou de texte, ou s'il n'existe plus de texte à retourner dans le contexte actuel.  
   
 Le nœud de texte peut être un nœud de texte d'élément ou d'attribut.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadTypedValue">
      <summary>Obtient le type Common Language Runtime pour le type langage XSD (XML Schema Definition) spécifié.</summary>
      <returns>Type Common Language Runtime pour le type de schéma XML spécifié.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ResolveEntity">
      <summary>Résout la référence d'entité pour les nœuds <see langword="EntityReference" />.</summary>
      <exception cref="T:System.InvalidOperationException">Le lecteur n'est pas placé sur un nœud <see langword="EntityReference" />.</exception>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Schemas">
      <summary>Obtient un <see cref="T:System.Xml.Schema.XmlSchemaCollection" /> à utiliser pour la validation.</summary>
      <returns>
        <see langword="XmlSchemaCollection" /> à utiliser pour la validation.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.SchemaType">
      <summary>Obtient un objet de type de schéma.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> ou <see cref="T:System.Xml.Schema.XmlSchemaComplexType" />, selon que la valeur du nœud est un type langage XSD (XML Schema Definition) intégré, un simpleType ou un complexType défini par l'utilisateur ; sinon, <see langword="null" /> lorsque le nœud actuel ne possède pas de type de schéma.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />.</summary>
      <param name="scope">Objet <see cref="T:System.Xml.XmlNamespaceScope" /> qui identifie la portée du lecteur.</param>
      <returns>Objet T:System.Collections.IDictionary qui identifie les espaces de noms dans la portée.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" />.</summary>
      <param name="prefix">Le préfixe de l'espace de noms.</param>
      <returns>Valeur de chaîne qui contient l'espace de noms URI associé au préfixe.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" />.</summary>
      <param name="namespaceName">Espace de noms associé au préfixe.</param>
      <returns>Valeur de chaîne qui contient le préfixe d'espace de noms associé au <paramref name="namespaceName" />.</returns>
    </member>
    <member name="E:System.Xml.XmlValidatingReader.ValidationEventHandler">
      <summary>Définit un gestionnaire d’événements pour la réception d’informations sur les erreurs de validation de définition de type de document (DTD), de schéma XDR (XML-Data Reduced) et en langage XSD (XML Schema Definition).</summary>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.ValidationType">
      <summary>Obtient ou définit une valeur indiquant le type de validation à effectuer.</summary>
      <returns>Une des valeurs de l'objet <see cref="T:System.Xml.ValidationType" />. Si cette propriété n'est pas définie, la valeur par défaut est ValidationType.Auto.</returns>
      <exception cref="T:System.InvalidOperationException">Définition de la propriété après un appel de Read.</exception>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Value">
      <summary>Obtient le texte du nœud actuel.</summary>
      <returns>La valeur retournée dépend du <see cref="P:System.Xml.XmlValidatingReader.NodeType" /> du nœud. Le tableau suivant répertorie les types de nœuds possédant une valeur de retour. Tous les autres types de nœuds retournent String.Empty.  
  Type de nœud 
  Value 
 <see langword="Attribute" /> Valeur de l'attribut.  

 <see langword="CDATA" /> Contenu de la section CDATA.  

 <see langword="Comment" /> Contenu du commentaire.  

 <see langword="DocumentType" /> Sous-ensemble interne.  

 <see langword="ProcessingInstruction" /> Contenu entier, cible exclue.  

 <see langword="SignificantWhitespace" /> Espace blanc entre les balisages dans un modèle de contenu mixte.  

 <see langword="Text" /> Contenu du nœud de texte.  

 <see langword="Whitespace" /> Espace blanc entre les balises.  

 <see langword="XmlDeclaration" /> Contenu de la déclaration.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.XmlLang">
      <summary>Obtient la portée de <see langword="xml:lang" /> actuelle.</summary>
      <returns>Portée de <see langword="xml:lang" /> actuelle.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.XmlResolver">
      <summary>Définit le <see cref="T:System.Xml.XmlResolver" /> utilisé pour la résolution des références d'emplacement des définitions de type de document (DTD) et schémas externes. <see langword="XmlResolver" /> permet aussi de gérer les éléments import ou include présents dans les schémas en langage XSD (XML Schema Definition).</summary>
      <returns>
        <see langword="XmlResolver" /> à utiliser. Si la valeur est <see langword="null" />, les ressources externes ne sont pas résolues.  
Dans la version 1.1 du .NET Framework, l'appelant doit bénéficier d'un niveau de confiance suffisant pour spécifier un <see langword="XmlResolver" />.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.XmlSpace">
      <summary>Obtient la portée de <see langword="xml:space" /> actuelle.</summary>
      <returns>Une des valeurs de l'objet <see cref="T:System.Xml.XmlSpace" />. S'il n'existe pas de portée de <see langword="xml:space" />, cette propriété prend la valeur par défaut <see langword="XmlSpace.None" />.</returns>
    </member>
    <member name="T:System.Xml.XmlWhitespace">
      <summary>Représente un espace blanc dans un contenu d'élément.</summary>
    </member>
    <member name="M:System.Xml.XmlWhitespace.#ctor(System.String,System.Xml.XmlDocument)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlWhitespace" />.</summary>
      <param name="strData">Caractères d'espace blanc du nœud.</param>
      <param name="doc">Objet <see cref="T:System.Xml.XmlDocument" />.</param>
    </member>
    <member name="M:System.Xml.XmlWhitespace.CloneNode(System.Boolean)">
      <summary>Crée un doublon de ce nœud.</summary>
      <param name="deep">
        <see langword="true" /> pour cloner récursivement la sous-arborescence sous le nœud spécifié ; <see langword="false" /> pour cloner seulement le nœud lui-même. Pour les nœuds d'espace blanc, le nœud cloné comporte toujours la valeur des données, quelle que soit la valeur du paramètre.</param>
      <returns>Nœud cloné.</returns>
    </member>
    <member name="P:System.Xml.XmlWhitespace.LocalName">
      <summary>Obtient le nom local du nœud.</summary>
      <returns>Pour les nœuds <see langword="XmlWhitespace" />, cette propriété retourne <see langword="#whitespace" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWhitespace.Name">
      <summary>Obtient le nom qualifié du nœud.</summary>
      <returns>Pour les nœuds <see langword="XmlWhitespace" />, cette propriété retourne <see langword="#whitespace" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWhitespace.NodeType">
      <summary>Obtient le type du nœud.</summary>
      <returns>Pour les nœuds <see langword="XmlWhitespace" />, la valeur est <see cref="F:System.Xml.XmlNodeType.Whitespace" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWhitespace.ParentNode">
      <summary>Obtient le parent du nœud actuel.</summary>
      <returns>Nœud <see cref="T:System.Xml.XmlNode" /> parent du nœud actuel.</returns>
    </member>
    <member name="P:System.Xml.XmlWhitespace.PreviousText">
      <summary>Obtient le nœud de texte qui précède immédiatement ce nœud.</summary>
      <returns>retourne <see cref="T:System.Xml.XmlNode" /> ;</returns>
    </member>
    <member name="P:System.Xml.XmlWhitespace.Value">
      <summary>Obtient ou définit la valeur du nœud.</summary>
      <returns>Caractères d'espace blanc trouvés dans le nœud.</returns>
      <exception cref="T:System.ArgumentException">Affectation d'espaces blancs non valides à <see cref="P:System.Xml.XmlWhitespace.Value" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWhitespace.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Enregistre tous les enfants du nœud dans l’élément <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="w">L'élément <see cref="T:System.Xml.XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="M:System.Xml.XmlWhitespace.WriteTo(System.Xml.XmlWriter)">
      <summary>Enregistre le nœud dans le <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="w">L'élément <see cref="T:System.Xml.XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="T:System.Xml.XmlWriter">
      <summary>Représente un writer qui fournit un moyen rapide, sans mise en cache et en avant de générer des flux de données ou des fichiers contenant des données XML.</summary>
    </member>
    <member name="M:System.Xml.XmlWriter.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlWriter" />.</summary>
    </member>
    <member name="M:System.Xml.XmlWriter.Close">
      <summary>En cas de substitution dans une classe dérivée, ferme ce flux et le flux sous-jacent.</summary>
      <exception cref="T:System.InvalidOperationException">Un appel est effectué pour écrire un complément de code en sortie après l'appel de <see langword="Close" /> ou lorsque le résultat de cet appel est un document XML non valide.
ou
Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
      <summary>Crée une nouvelle instance de <see cref="T:System.Xml.XmlWriter" /> à l'aide du flux spécifié.</summary>
      <param name="output">Flux dans lequel vous voulez écrire. <see cref="T:System.Xml.XmlWriter" /> écrit la syntaxe du texte XML 1.0 et l'ajoute au flux de données spécifié.</param>
      <returns>Objet <see cref="T:System.Xml.XmlWriter" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)">
      <summary>Crée une instance de <see cref="T:System.Xml.XmlWriter" /> à l'aide du flux et de l'objet <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
      <param name="output">Flux dans lequel vous voulez écrire. <see cref="T:System.Xml.XmlWriter" /> écrit la syntaxe du texte XML 1.0 et l'ajoute au flux de données spécifié.</param>
      <param name="settings">Objet <see cref="T:System.Xml.XmlWriterSettings" /> permettant de configurer la nouvelle instance de <see cref="T:System.Xml.XmlWriter" />. S'il est <see langword="null" />, un <see cref="T:System.Xml.XmlWriterSettings" /> avec des paramètres par défaut est utilisé.  
Si <see cref="T:System.Xml.XmlWriter" /> est utilisé avec la méthode <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" />, vous devez utiliser la propriété <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> pour obtenir un objet <see cref="T:System.Xml.XmlWriterSettings" /> avec les paramètres corrects. Cela garantit que l'objet <see cref="T:System.Xml.XmlWriter" /> créé dispose des paramètres de sortie corrects.</param>
      <returns>Objet <see cref="T:System.Xml.XmlWriter" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)">
      <summary>Crée une nouvelle instance de <see cref="T:System.Xml.XmlWriter" /> à l'aide du <see cref="T:System.IO.TextWriter" /> spécifié.</summary>
      <param name="output">
        <see cref="T:System.IO.TextWriter" /> dans lequel écrire. <see cref="T:System.Xml.XmlWriter" /> écrit la syntaxe du texte XML 1.0 et l'ajoute au <see cref="T:System.IO.TextWriter" /> spécifié.</param>
      <returns>Objet <see cref="T:System.Xml.XmlWriter" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="text" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.IO.TextWriter,System.Xml.XmlWriterSettings)">
      <summary>Crée une nouvelle instance de <see cref="T:System.Xml.XmlWriter" /> à l'aide des objets <see cref="T:System.IO.TextWriter" /> et <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
      <param name="output">
        <see cref="T:System.IO.TextWriter" /> dans lequel écrire. <see cref="T:System.Xml.XmlWriter" /> écrit la syntaxe du texte XML 1.0 et l'ajoute au <see cref="T:System.IO.TextWriter" /> spécifié.</param>
      <param name="settings">Objet <see cref="T:System.Xml.XmlWriterSettings" /> permettant de configurer la nouvelle instance de <see cref="T:System.Xml.XmlWriter" />. S'il est <see langword="null" />, un <see cref="T:System.Xml.XmlWriterSettings" /> avec des paramètres par défaut est utilisé.  
Si <see cref="T:System.Xml.XmlWriter" /> est utilisé avec la méthode <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" />, vous devez utiliser la propriété <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> pour obtenir un objet <see cref="T:System.Xml.XmlWriterSettings" /> avec les paramètres corrects. Cela garantit que l'objet <see cref="T:System.Xml.XmlWriter" /> créé dispose des paramètres de sortie corrects.</param>
      <returns>Objet <see cref="T:System.Xml.XmlWriter" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="text" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.String)">
      <summary>Crée une instance de <see cref="T:System.Xml.XmlWriter" /> à l'aide du nom de fichier spécifié.</summary>
      <param name="outputFileName">Fichier dans lequel écrire. <see cref="T:System.Xml.XmlWriter" /> crée un fichier au chemin d'accès spécifié et y écrit en syntaxe de texte XML 1.0. <paramref name="outputFileName" /> doit être un chemin d'accès de système de fichiers.</param>
      <returns>Objet <see cref="T:System.Xml.XmlWriter" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="url" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.String,System.Xml.XmlWriterSettings)">
      <summary>Crée une instance de <see cref="T:System.Xml.XmlWriter" /> à l'aide du nom de fichier et de l'objet <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
      <param name="outputFileName">Fichier dans lequel écrire. <see cref="T:System.Xml.XmlWriter" /> crée un fichier au chemin d'accès spécifié et y écrit en syntaxe de texte XML 1.0. <paramref name="outputFileName" /> doit être un chemin d'accès de système de fichiers.</param>
      <param name="settings">Objet <see cref="T:System.Xml.XmlWriterSettings" /> permettant de configurer la nouvelle instance de <see cref="T:System.Xml.XmlWriter" />. S'il est <see langword="null" />, un <see cref="T:System.Xml.XmlWriterSettings" /> avec des paramètres par défaut est utilisé.  
Si <see cref="T:System.Xml.XmlWriter" /> est utilisé avec la méthode <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" />, vous devez utiliser la propriété <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> pour obtenir un objet <see cref="T:System.Xml.XmlWriterSettings" /> avec les paramètres corrects. Cela garantit que l'objet <see cref="T:System.Xml.XmlWriter" /> créé dispose des paramètres de sortie corrects.</param>
      <returns>Objet <see cref="T:System.Xml.XmlWriter" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="url" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)">
      <summary>Crée une nouvelle instance de <see cref="T:System.Xml.XmlWriter" /> à l'aide du <see cref="T:System.Text.StringBuilder" /> spécifié.</summary>
      <param name="output">
        <see cref="T:System.Text.StringBuilder" /> dans lequel écrire. Le contenu écrit par le <see cref="T:System.Xml.XmlWriter" /> est ajouté au <see cref="T:System.Text.StringBuilder" />.</param>
      <returns>Objet <see cref="T:System.Xml.XmlWriter" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="builder" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder,System.Xml.XmlWriterSettings)">
      <summary>Crée une nouvelle instance de <see cref="T:System.Xml.XmlWriter" /> à l'aide des objets <see cref="T:System.Text.StringBuilder" /> et <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
      <param name="output">
        <see cref="T:System.Text.StringBuilder" /> dans lequel écrire. Le contenu écrit par le <see cref="T:System.Xml.XmlWriter" /> est ajouté au <see cref="T:System.Text.StringBuilder" />.</param>
      <param name="settings">Objet <see cref="T:System.Xml.XmlWriterSettings" /> permettant de configurer la nouvelle instance de <see cref="T:System.Xml.XmlWriter" />. S'il est <see langword="null" />, un <see cref="T:System.Xml.XmlWriterSettings" /> avec des paramètres par défaut est utilisé.  
Si <see cref="T:System.Xml.XmlWriter" /> est utilisé avec la méthode <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" />, vous devez utiliser la propriété <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> pour obtenir un objet <see cref="T:System.Xml.XmlWriterSettings" /> avec les paramètres corrects. Cela garantit que l'objet <see cref="T:System.Xml.XmlWriter" /> créé dispose des paramètres de sortie corrects.</param>
      <returns>Objet <see cref="T:System.Xml.XmlWriter" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="builder" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)">
      <summary>Crée une instance de <see cref="T:System.Xml.XmlWriter" /> à l'aide de l'objet <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="output">L'objet <see cref="T:System.Xml.XmlWriter" /> à utiliser comme writer sous-jacent.</param>
      <returns>Objet <see cref="T:System.Xml.XmlWriter" /> autour de l'objet <see cref="T:System.Xml.XmlWriter" /> spécifié.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter,System.Xml.XmlWriterSettings)">
      <summary>Crée une nouvelle instance de <see cref="T:System.Xml.XmlWriter" /> à l'aide des objets <see cref="T:System.Xml.XmlWriter" /> et <see cref="T:System.Xml.XmlWriterSettings" /> spécifiés.</summary>
      <param name="output">L'objet <see cref="T:System.Xml.XmlWriter" /> à utiliser comme writer sous-jacent.</param>
      <param name="settings">Objet <see cref="T:System.Xml.XmlWriterSettings" /> permettant de configurer la nouvelle instance de <see cref="T:System.Xml.XmlWriter" />. S'il est <see langword="null" />, un <see cref="T:System.Xml.XmlWriterSettings" /> avec des paramètres par défaut est utilisé.  
Si <see cref="T:System.Xml.XmlWriter" /> est utilisé avec la méthode <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" />, vous devez utiliser la propriété <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> pour obtenir un objet <see cref="T:System.Xml.XmlWriterSettings" /> avec les paramètres corrects. Cela garantit que l'objet <see cref="T:System.Xml.XmlWriter" /> créé dispose des paramètres de sortie corrects.</param>
      <returns>Objet <see cref="T:System.Xml.XmlWriter" /> autour de l'objet <see cref="T:System.Xml.XmlWriter" /> spécifié.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Dispose">
      <summary>Libère toutes les ressources utilisées par l'instance actuelle de la classe <see cref="T:System.Xml.XmlWriter" />.</summary>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Dispose(System.Boolean)">
      <summary>Libère les ressources non managées utilisées par <see cref="T:System.Xml.XmlWriter" /> et libère éventuellement les ressources managées.</summary>
      <param name="disposing">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Flush">
      <summary>En cas de substitution dans une classe dérivée, vide le contenu de la mémoire tampon dans les flux sous-jacents, puis vide le flux sous-jacent.</summary>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.FlushAsync">
      <summary>Vide de façon asynchrone le contenu de la mémoire tampon dans les flux sous-jacents, puis vide le flux sous-jacent.</summary>
      <returns>Tâche qui représente l'opération <see langword="Flush" /> asynchrone.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.LookupPrefix(System.String)">
      <summary>En cas de substitution dans une classe dérivée, retourne le préfixe le plus proche défini dans la portée espace de noms actuelle pour l'URI de l'espace de noms.</summary>
      <param name="ns">URI de l'espace de noms dont vous recherchez le préfixe.</param>
      <returns>Le préfixe correspondant ou <see langword="null" />, s'il n'existe aucun URI d'espace de noms correspondant dans la portée actuelle.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="ns" /> a la valeur <see langword="null" /> ou <see langword="String.Empty" />.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="P:System.Xml.XmlWriter.Settings">
      <summary>Obtient l'objet <see cref="T:System.Xml.XmlWriterSettings" /> permettant de créer cette instance de <see cref="T:System.Xml.XmlWriter" />.</summary>
      <returns>Objet <see cref="T:System.Xml.XmlWriterSettings" /> permettant de créer cette instance de writer. Si ce writer n'a pas été créé à l'aide de la méthode <see cref="Overload:System.Xml.XmlWriter.Create" />, cette propriété retourne <see langword="null" />.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
      <summary>En cas de substitution dans une classe dérivée, écrit tous les attributs trouvés à la position actuelle dans <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">
        <see langword="XmlReader" /> à partir duquel les attributs doivent être copiés.</param>
      <param name="defattr">
        <see langword="true" /> pour copier les attributs par défaut à partir de <see langword="XmlReader" /> ; sinon, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException">Le lecteur n'est pas placé sur un nœud <see langword="element" />, <see langword="attribute" /> ou <see langword="XmlDeclaration" />.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributesAsync(System.Xml.XmlReader,System.Boolean)">
      <summary>Écrit de façon asynchrone tous les attributs trouvés à la position actuelle dans le <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">
        <see langword="XmlReader" /> à partir duquel les attributs doivent être copiés.</param>
      <param name="defattr">
        <see langword="true" /> pour copier les attributs par défaut à partir de <see langword="XmlReader" /> ; sinon, <see langword="false" />.</param>
      <returns>Tâche qui représente l'opération <see langword="WriteAttributes" /> asynchrone.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)">
      <summary>En cas de substitution dans une classe dérivée, écrit l'attribut avec le nom local et la valeur spécifiés.</summary>
      <param name="localName">Le nom local de l'attribut.</param>
      <param name="value">Valeur de l'attribut.</param>
      <exception cref="T:System.InvalidOperationException">L'état du writer n'est pas <see langword="WriteState.Element" /> ou le writer est fermé.
ou
Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.ArgumentException">La valeur d'attribut <see langword="xml:space" /> ou <see langword="xml:lang" /> n'est pas valide.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
      <summary>En cas de substitution dans une classe dérivée, écrit un attribut avec le nom local, l'URI de l'espace de noms et la valeur spécifiés.</summary>
      <param name="localName">Le nom local de l'attribut.</param>
      <param name="ns">URI de l'espace de noms à associer à l'attribut.</param>
      <param name="value">Valeur de l'attribut.</param>
      <exception cref="T:System.InvalidOperationException">L'état du writer n'est pas <see langword="WriteState.Element" /> ou le writer est fermé.

ou - 
Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.ArgumentException">La valeur d'attribut <see langword="xml:space" /> ou <see langword="xml:lang" /> n'est pas valide.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
      <summary>En cas de substitution dans une classe dérivée, écrit l'attribut avec le préfixe, le nom local, l'URI de l'espace de noms et la valeur spécifiés.</summary>
      <param name="prefix">Préfixe de l'espace de noms de cet attribut.</param>
      <param name="localName">Le nom local de l'attribut.</param>
      <param name="ns">L'URI de l'espace de noms de l'attribut.</param>
      <param name="value">Valeur de l'attribut.</param>
      <exception cref="T:System.InvalidOperationException">L'état du writer n'est pas <see langword="WriteState.Element" /> ou le writer est fermé.

ou - 
Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.ArgumentException">La valeur d'attribut <see langword="xml:space" /> ou <see langword="xml:lang" /> n'est pas valide.</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="localName" /> ou <paramref name="ns" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)">
      <summary>Écrit de façon asynchrone l'attribut avec le préfixe, le nom local, l'URI de l'espace de noms et la valeur spécifiés.</summary>
      <param name="prefix">Préfixe de l'espace de noms de cet attribut.</param>
      <param name="localName">Le nom local de l'attribut.</param>
      <param name="ns">L'URI de l'espace de noms de l'attribut.</param>
      <param name="value">Valeur de l'attribut.</param>
      <returns>Tâche qui représente l'opération <see langword="WriteAttributeString" /> asynchrone.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

ou - 
Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>En cas de substitution dans une classe dérivée, code les octets binaires spécifiés au format Base64 et écrit le texte obtenu.</summary>
      <param name="buffer">Tableau d'octets à encoder.</param>
      <param name="index">Emplacement dans la mémoire tampon indiquant le début des octets à écrire.</param>
      <param name="count">Nombre d'octets à écrire.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ou <paramref name="count" /> est inférieur à zéro.  
ou 
La longueur de la mémoire tampon moins <paramref name="index" /> est inférieure à <paramref name="count" />.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)">
      <summary>Encode de façon asynchrone les octets binaires spécifiés au format base64 et écrit le texte résultant.</summary>
      <param name="buffer">Tableau d'octets à encoder.</param>
      <param name="index">Emplacement dans la mémoire tampon indiquant le début des octets à écrire.</param>
      <param name="count">Nombre d'octets à écrire.</param>
      <returns>Tâche qui représente l'opération <see langword="WriteBase64" /> asynchrone.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».
ou
Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>En cas de substitution dans une classe dérivée, code les octets binaires spécifiés au format <see langword="BinHex" /> et écrit le texte obtenu.</summary>
      <param name="buffer">Tableau d'octets à encoder.</param>
      <param name="index">Emplacement dans la mémoire tampon indiquant le début des octets à écrire.</param>
      <param name="count">Nombre d'octets à écrire.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Le Writer est fermé ou a l'état d'erreur.

ou -

Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ou <paramref name="count" /> est inférieur à zéro.  

ou - 
La longueur de la mémoire tampon moins <paramref name="index" /> est inférieure à <paramref name="count" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)">
      <summary>Encode de façon asynchrone les octets binaires spécifiés au format <see langword="BinHex" /> et écrit le texte résultant.</summary>
      <param name="buffer">Tableau d'octets à encoder.</param>
      <param name="index">Emplacement dans la mémoire tampon indiquant le début des octets à écrire.</param>
      <param name="count">Nombre d'octets à écrire.</param>
      <returns>Tâche qui représente l'opération <see langword="WriteBinHex" /> asynchrone.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».
ou
Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCData(System.String)">
      <summary>En cas de substitution dans une classe dérivée, écrit un bloc &lt;![CDATA[...]]&gt; contenant le texte spécifié.</summary>
      <param name="text">Texte à placer dans le bloc CDATA.</param>
      <exception cref="T:System.ArgumentException">Le texte est à l'origine d'un document XML incorrect.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCDataAsync(System.String)">
      <summary>Écrit de façon asynchrone un bloc &lt;![CDATA[...]]&gt; contenant le texte spécifié.</summary>
      <param name="text">Texte à placer dans le bloc CDATA.</param>
      <returns>Tâche qui représente l'opération <see langword="WriteCData" /> asynchrone.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».
ou
Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCharEntity(System.Char)">
      <summary>En cas de substitution dans une classe dérivée, force la génération d'une entité de caractère pour la valeur du caractère Unicode spécifiée.</summary>
      <param name="ch">Caractère Unicode pour lequel une entité de caractère doit être générée.</param>
      <exception cref="T:System.ArgumentException">Le caractère se trouve dans la plage de caractères de paire de substitution, <see langword="0xd800" /> - <see langword="0xdfff" />.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCharEntityAsync(System.Char)">
      <summary>Force de façon asynchrone la génération d'une entité de caractère pour la valeur du caractère Unicode spécifiée.</summary>
      <param name="ch">Caractère Unicode pour lequel une entité de caractère doit être générée.</param>
      <returns>Tâche qui représente l'opération <see langword="WriteCharEntity" /> asynchrone.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
      <summary>En cas de substitution dans une classe dérivée, écrit du texte mémoire tampon par mémoire tampon.</summary>
      <param name="buffer">Tableau de caractères contenant le texte à écrire.</param>
      <param name="index">Emplacement dans la mémoire tampon indiquant le début du texte à écrire.</param>
      <param name="count">Nombre de caractères à écrire.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ou <paramref name="count" /> est inférieur à zéro.  

ou - 
La longueur de la mémoire tampon moins <paramref name="index" /> est inférieure à <paramref name="count" /> ; par conséquent, l'appel entraîne une séparation des caractères de paire de substitution ou l'écriture d'une paire de substitution non valide.</exception>
      <exception cref="T:System.ArgumentException">La valeur de paramètre <paramref name="buffer" /> n'est pas valide.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Écrit de façon asynchrone du texte mémoire tampon par mémoire tampon.</summary>
      <param name="buffer">Tableau de caractères contenant le texte à écrire.</param>
      <param name="index">Emplacement dans la mémoire tampon indiquant le début du texte à écrire.</param>
      <param name="count">Nombre de caractères à écrire.</param>
      <returns>Tâche qui représente l'opération <see langword="WriteChars" /> asynchrone.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteComment(System.String)">
      <summary>En cas de substitution dans une classe dérivée, écrit un commentaire &lt;!--...--&gt; contenant le texte spécifié.</summary>
      <param name="text">Texte à placer dans le commentaire.</param>
      <exception cref="T:System.ArgumentException">Le texte est à l'origine d'un document XML incorrect.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCommentAsync(System.String)">
      <summary>Écrit de façon asynchrone un commentaire &lt;!--...--&gt; contenant le texte spécifié.</summary>
      <param name="text">Texte à placer dans le commentaire.</param>
      <returns>Tâche qui représente l'opération <see langword="WriteComment" /> asynchrone.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».
ou
Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
      <summary>En cas de substitution dans une classe dérivée, écrit la déclaration DOCTYPE avec le nom et les attributs facultatifs spécifiés.</summary>
      <param name="name">Nom de DOCTYPE. Ne doit pas être vide.</param>
      <param name="pubid">Si la valeur est non null, elle écrit également PUBLIC "pubid" "sysid", <paramref name="pubid" /> et <paramref name="sysid" /> étant remplacés par la valeur des arguments spécifiés.</param>
      <param name="sysid">Si <paramref name="pubid" /> est <see langword="null" /> et que <paramref name="sysid" /> est non null, elle écrit SYSTEM "sysid", <paramref name="sysid" /> étant remplacé par la valeur de cet argument.</param>
      <param name="subset">Si la valeur est non null, elle écrit [subset] où subset est remplacé par la valeur de cet argument.</param>
      <exception cref="T:System.InvalidOperationException">Cette méthode a été appelée en dehors du prologue (après l'élément racine).

ou -

Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.ArgumentException">La valeur de <paramref name="name" /> produit un contenu XML non valide.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)">
      <summary>Écrit de façon asynchrone la déclaration DOCTYPE avec le nom et les attributs facultatifs spécifiés.</summary>
      <param name="name">Nom de DOCTYPE. Ne doit pas être vide.</param>
      <param name="pubid">Si la valeur est non null, elle écrit également PUBLIC "pubid" "sysid", <paramref name="pubid" /> et <paramref name="sysid" /> étant remplacés par la valeur des arguments spécifiés.</param>
      <param name="sysid">Si <paramref name="pubid" /> est <see langword="null" /> et que <paramref name="sysid" /> est non null, elle écrit SYSTEM "sysid", <paramref name="sysid" /> étant remplacé par la valeur de cet argument.</param>
      <param name="subset">Si la valeur est non null, elle écrit [subset] où subset est remplacé par la valeur de cet argument.</param>
      <returns>Tâche qui représente l'opération <see langword="WriteDocType" /> asynchrone.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».
ou
Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
      <summary>Écrit un élément avec la valeur et le nom locaux spécifiés.</summary>
      <param name="localName">Le nom local de l'élément.</param>
      <param name="value">Valeur de l'élément.</param>
      <exception cref="T:System.ArgumentException">La valeur <paramref name="localName" /> est une chaîne vide ou est <see langword="null" />.  

ou - 
Les valeurs du paramètre ne sont pas valides.</exception>
      <exception cref="T:System.Text.EncoderFallbackException">Un caractère dans la mémoire tampon est un caractère XML valide mais n'est pas valide pour l'encodage de sortie. Par exemple, si l'encodage de sortie est ASCII, vous devez utiliser uniquement des caractères de la plage de 0 à 127 pour les noms d'éléments et d'attributs. Le caractère non valide peut être dans l'argument de cette méthode ou dans un argument des méthodes précédentes qui écrivaient dans la mémoire tampon. Les caractères de ce type sont échappés par les références d'entité de caractère lorsque cela est possible (par exemple, dans les nœuds de texte ou les valeurs d'attribut). Toutefois, la référence d'entité de caractère n'est pas autorisée dans les noms d'éléments et d'attributs, les commentaires, les instructions de traitement ou les sections CDATA.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
      <summary>Écrit un élément avec le nom local, l'URI de l'espace de noms et la valeur spécifiés.</summary>
      <param name="localName">Le nom local de l'élément.</param>
      <param name="ns">URI de l'espace de noms à associer à l'élément.</param>
      <param name="value">Valeur de l'élément.</param>
      <exception cref="T:System.ArgumentException">La valeur <paramref name="localName" /> est une chaîne vide ou est <see langword="null" />.  

ou - 
Les valeurs du paramètre ne sont pas valides.</exception>
      <exception cref="T:System.Text.EncoderFallbackException">Un caractère dans la mémoire tampon est un caractère XML valide mais n'est pas valide pour l'encodage de sortie. Par exemple, si l'encodage de sortie est ASCII, vous devez utiliser uniquement des caractères de la plage de 0 à 127 pour les noms d'éléments et d'attributs. Le caractère non valide peut être dans l'argument de cette méthode ou dans un argument des méthodes précédentes qui écrivaient dans la mémoire tampon. Les caractères de ce type sont échappés par les références d'entité de caractère lorsque cela est possible (par exemple, dans les nœuds de texte ou les valeurs d'attribut). Toutefois, la référence d'entité de caractère n'est pas autorisée dans les noms d'éléments et d'attributs, les commentaires, les instructions de traitement ou les sections CDATA.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
      <summary>Écrit un élément avec le préfixe spécifié, le nom local, l'URI de l'espace de noms et la valeur spécifiés.</summary>
      <param name="prefix">Le préfixe de l'élément.</param>
      <param name="localName">Le nom local de l'élément.</param>
      <param name="ns">L'URI de l'espace de noms de l'élément.</param>
      <param name="value">Valeur de l'élément.</param>
      <exception cref="T:System.ArgumentException">La valeur <paramref name="localName" /> est une chaîne vide ou est <see langword="null" />.  
ou 
Les valeurs du paramètre ne sont pas valides.</exception>
      <exception cref="T:System.Text.EncoderFallbackException">Un caractère dans la mémoire tampon est un caractère XML valide mais n'est pas valide pour l'encodage de sortie. Par exemple, si l'encodage de sortie est ASCII, vous devez utiliser uniquement des caractères de la plage de 0 à 127 pour les noms d'éléments et d'attributs. Le caractère non valide peut être dans l'argument de cette méthode ou dans un argument des méthodes précédentes qui écrivaient dans la mémoire tampon. Les caractères de ce type sont échappés par les références d'entité de caractère lorsque cela est possible (par exemple, dans les nœuds de texte ou les valeurs d'attribut). Toutefois, la référence d'entité de caractère n'est pas autorisée dans les noms d'éléments et d'attributs, les commentaires, les instructions de traitement ou les sections CDATA.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)">
      <summary>Écrit de façon asynchrone un élément avec le préfixe spécifié, le nom local, l'URI de l'espace de noms et la valeur spécifiés.</summary>
      <param name="prefix">Le préfixe de l'élément.</param>
      <param name="localName">Le nom local de l'élément.</param>
      <param name="ns">L'URI de l'espace de noms de l'élément.</param>
      <param name="value">Valeur de l'élément.</param>
      <returns>Tâche qui représente l'opération <see langword="WriteElementString" /> asynchrone.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndAttribute">
      <summary>En cas de substitution dans une classe dérivée, ferme le précédent appel de <see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" />.</summary>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndAttributeAsync">
      <summary>Ferme de façon asynchrone l'appel <see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" /> précédent.</summary>
      <returns>Tâche qui représente l'opération <see langword="WriteEndAttribute" /> asynchrone.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndDocument">
      <summary>En cas de substitution dans une classe dérivée, ferme les éléments ou attributs ouverts, et replace le writer à l'état Start.</summary>
      <exception cref="T:System.ArgumentException">Le document XML n'est pas valide.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndDocumentAsync">
      <summary>Ferme de façon asynchrone les éléments ou attributs ouverts, et replace le writer à l'état Start.</summary>
      <returns>Tâche qui représente l'opération <see langword="WriteEndDocument" /> asynchrone.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndElement">
      <summary>En cas de substitution dans une classe dérivée, ferme un élément et dépile la portée espace de noms correspondante.</summary>
      <exception cref="T:System.InvalidOperationException">Il en résulte un document XML non valide.
ou
Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndElementAsync">
      <summary>Ferme de façon asynchrone un élément et exécute un pop sur la portée espace de noms correspondante.</summary>
      <returns>Tâche qui représente l'opération <see langword="WriteEndElement" /> asynchrone.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEntityRef(System.String)">
      <summary>En cas de substitution dans une classe dérivée, écrit une référence d'entité comme suit : <see langword="&amp;name;" />.</summary>
      <param name="name">Nom de la référence d'entité.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> a la valeur <see langword="null" /> ou <see langword="String.Empty" />.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEntityRefAsync(System.String)">
      <summary>Écrit de façon asynchrone une référence d'entité comme suit : <see langword="&amp;name;" />.</summary>
      <param name="name">Nom de la référence d'entité.</param>
      <returns>Tâche qui représente l'opération <see langword="WriteEntityRef" /> asynchrone.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteFullEndElement">
      <summary>En cas de substitution dans une classe dérivée, ferme un élément et dépile la portée espace de noms correspondante.</summary>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteFullEndElementAsync">
      <summary>Ferme de façon asynchrone un élément et exécute un pop sur la portée espace de noms correspondante.</summary>
      <returns>Tâche qui représente l'opération <see langword="WriteFullEndElement" /> asynchrone.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».
ou
Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteName(System.String)">
      <summary>En cas de remplacement dans une classe dérivée, écrit le nom spécifié, en vérifiant qu’il s’agit d’un nom valide conformément à la recommandation W3C pour le XML 1.0 (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name)).</summary>
      <param name="name">Nom à écrire.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> n'est pas un nom XML valide ; ou <paramref name="name" /> est soit <see langword="null" />, soit <see langword="String.Empty" />.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNameAsync(System.String)">
      <summary>Écrit le nom spécifié de façon asynchrone, en vérifiant qu’il s’agit d’un nom valide conformément à la recommandation W3C pour le XML 1.0 (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name)).</summary>
      <param name="name">Nom à écrire.</param>
      <returns>Tâche qui représente l'opération <see langword="WriteName" /> asynchrone.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNmToken(System.String)">
      <summary>En cas de remplacement dans une classe dérivée, écrit le nom spécifié, en vérifiant qu’il s’agit d’un NmToken valide conformément à la recommandation W3C pour le XML 1.0 (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name)).</summary>
      <param name="name">Nom à écrire.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> n'est pas un NmToken valide ; ou <paramref name="name" /> est soit <see langword="null" />, soit <see langword="String.Empty" />.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNmTokenAsync(System.String)">
      <summary>Écrit le nom spécifié de façon asynchrone, en vérifiant qu’il s’agit d’un NmToken valide conformément à la recommandation W3C pour le XML 1.0 (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name)).</summary>
      <param name="name">Nom à écrire.</param>
      <returns>Tâche qui représente l'opération <see langword="WriteNmToken" /> asynchrone.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».
ou
Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
      <summary>En cas de substitution dans une classe dérivée, copie tout le contenu du lecteur vers le writer, puis déplace le lecteur vers le début du frère suivant.</summary>
      <param name="reader">
        <see cref="T:System.Xml.XmlReader" /> à lire.</param>
      <param name="defattr">
        <see langword="true" /> pour copier les attributs par défaut à partir de <see langword="XmlReader" /> ; sinon, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="reader" /> contient des caractères non valides.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
      <summary>Copie tout de l'objet <see cref="T:System.Xml.XPath.XPathNavigator" /> vers le writer. La position du <see cref="T:System.Xml.XPath.XPathNavigator" /> reste inchangée.</summary>
      <param name="navigator">Le <see cref="T:System.Xml.XPath.XPathNavigator" /> à partir duquel effectuer la copie.</param>
      <param name="defattr">
        <see langword="true" /> pour copier les attributs par défaut ; sinon, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="navigator" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XmlReader,System.Boolean)">
      <summary>Copie de façon asynchrone tout le contenu du lecteur vers le writer, puis déplace le lecteur vers le début du frère suivant.</summary>
      <param name="reader">
        <see cref="T:System.Xml.XmlReader" /> à lire.</param>
      <param name="defattr">
        <see langword="true" /> pour copier les attributs par défaut à partir de <see langword="XmlReader" /> ; sinon, <see langword="false" />.</param>
      <returns>Tâche qui représente l'opération <see langword="WriteNode" /> asynchrone.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XPath.XPathNavigator,System.Boolean)">
      <summary>Copie de façon asynchrone tout le contenu de l'objet <see cref="T:System.Xml.XPath.XPathNavigator" /> vers le writer. La position du <see cref="T:System.Xml.XPath.XPathNavigator" /> reste inchangée.</summary>
      <param name="navigator">Le <see cref="T:System.Xml.XPath.XPathNavigator" /> à partir duquel effectuer la copie.</param>
      <param name="defattr">
        <see langword="true" /> pour copier les attributs par défaut ; sinon, <see langword="false" />.</param>
      <returns>Tâche qui représente l'opération <see langword="WriteNode" /> asynchrone.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
      <summary>En cas de substitution dans une classe dérivée, écrit une instruction de traitement avec un espace entre le nom et le texte : &lt;?name text?&gt;.</summary>
      <param name="name">Nom de l'instruction de traitement.</param>
      <param name="text">Texte à inclure dans l'instruction de traitement.</param>
      <exception cref="T:System.ArgumentException">Le texte est à l'origine d'un document XML incorrect.  
 <paramref name="name" /> a la valeur <see langword="null" /> ou <see langword="String.Empty" />.  
Cette méthode permet de créer une déclaration XML après l'appel de <see cref="M:System.Xml.XmlWriter.WriteStartDocument" />.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteProcessingInstructionAsync(System.String,System.String)">
      <summary>Écrit de façon asynchrone une instruction de traitement avec un espace entre le nom et le texte, comme suit : &lt;?name text?&gt;.</summary>
      <param name="name">Nom de l'instruction de traitement.</param>
      <param name="text">Texte à inclure dans l'instruction de traitement.</param>
      <returns>Tâche qui représente l'opération <see langword="WriteProcessingInstruction" /> asynchrone.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
      <summary>En cas de substitution dans une classe dérivée, écrit le nom qualifié de l'espace de noms. Cette méthode recherche le préfixe situé dans la portée de l'espace de noms spécifié.</summary>
      <param name="localName">Nom local à écrire.</param>
      <param name="ns">URI d'espace de noms de ce nom.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="localName" /> a la valeur <see langword="null" /> ou <see langword="String.Empty" />.  
 <paramref name="localName" /> n'est pas un nom valide.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteQualifiedNameAsync(System.String,System.String)">
      <summary>Écrit de façon asynchrone le nom qualifié de l'espace de noms. Cette méthode recherche le préfixe situé dans la portée de l'espace de noms spécifié.</summary>
      <param name="localName">Nom local à écrire.</param>
      <param name="ns">URI d'espace de noms de ce nom.</param>
      <returns>Tâche qui représente l'opération <see langword="WriteQualifiedName" /> asynchrone.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
      <summary>En cas de substitution dans une classe dérivée, écrit manuellement un balisage brut à partir d'une mémoire tampon de caractères.</summary>
      <param name="buffer">Tableau de caractères contenant le texte à écrire.</param>
      <param name="index">Emplacement dans la mémoire tampon indiquant le début du texte à écrire.</param>
      <param name="count">Nombre de caractères à écrire.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ou <paramref name="count" /> est inférieur à zéro.  

ou - 
La longueur de la mémoire tampon moins <paramref name="index" /> est inférieure à <paramref name="count" />.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteRaw(System.String)">
      <summary>En cas de substitution dans une classe dérivée, écrit manuellement un balisage brut à partir d'une chaîne.</summary>
      <param name="data">Chaîne contenant le texte à écrire.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="data" /> a la valeur <see langword="null" /> ou <see langword="String.Empty" />.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Écrit manuellement de façon asynchrone un balisage brut à partir d'une mémoire tampon de caractères.</summary>
      <param name="buffer">Tableau de caractères contenant le texte à écrire.</param>
      <param name="index">Emplacement dans la mémoire tampon indiquant le début du texte à écrire.</param>
      <param name="count">Nombre de caractères à écrire.</param>
      <returns>Tâche qui représente l'opération <see langword="WriteRaw" /> asynchrone.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».
ou
Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteRawAsync(System.String)">
      <summary>Écrit de façon asynchrone un balisage brut à partir d'une chaîne.</summary>
      <param name="data">Chaîne contenant le texte à écrire.</param>
      <returns>Tâche qui représente l'opération <see langword="WriteRaw" /> asynchrone.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)">
      <summary>Écrit le début d'un attribut avec le nom local spécifié.</summary>
      <param name="localName">Le nom local de l'attribut.</param>
      <exception cref="T:System.InvalidOperationException">Le writer est fermé.

ou -

Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.Text.EncoderFallbackException">Un caractère dans la mémoire tampon est un caractère XML valide mais n'est pas valide pour l'encodage de sortie. Par exemple, si l'encodage de sortie est ASCII, vous devez utiliser uniquement des caractères de la plage de 0 à 127 pour les noms d'éléments et d'attributs. Le caractère non valide peut être dans l'argument de cette méthode ou dans un argument des méthodes précédentes qui écrivaient dans la mémoire tampon. Les caractères de ce type sont échappés par les références d'entité de caractère lorsque cela est possible (par exemple, dans les nœuds de texte ou les valeurs d'attribut). Toutefois, la référence d'entité de caractère n'est pas autorisée dans les noms d'éléments et d'attributs, les commentaires, les instructions de traitement ou les sections CDATA.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)">
      <summary>Écrit le début d'un attribut avec le nom local et l'URI de l'espace de noms spécifiés.</summary>
      <param name="localName">Le nom local de l'attribut.</param>
      <param name="ns">L'URI de l'espace de noms de l'attribut.</param>
      <exception cref="T:System.Text.EncoderFallbackException">Un caractère dans la mémoire tampon est un caractère XML valide mais n'est pas valide pour l'encodage de sortie. Par exemple, si l'encodage de sortie est ASCII, vous devez utiliser uniquement des caractères de la plage de 0 à 127 pour les noms d'éléments et d'attributs. Le caractère non valide peut être dans l'argument de cette méthode ou dans un argument des méthodes précédentes qui écrivaient dans la mémoire tampon. Les caractères de ce type sont échappés par les références d'entité de caractère lorsque cela est possible (par exemple, dans les nœuds de texte ou les valeurs d'attribut). Toutefois, la référence d'entité de caractère n'est pas autorisée dans les noms d'éléments et d'attributs, les commentaires, les instructions de traitement ou les sections CDATA.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
      <summary>En cas de substitution dans une classe dérivée, écrit le début d'un attribut avec le préfixe, le nom local et l'URI de l'espace de noms spécifiés.</summary>
      <param name="prefix">Préfixe de l'espace de noms de cet attribut.</param>
      <param name="localName">Le nom local de l'attribut.</param>
      <param name="ns">URI d'espace de noms de cet attribut.</param>
      <exception cref="T:System.Text.EncoderFallbackException">Un caractère dans la mémoire tampon est un caractère XML valide mais n'est pas valide pour l'encodage de sortie. Par exemple, si l'encodage de sortie est ASCII, vous devez utiliser uniquement des caractères de la plage de 0 à 127 pour les noms d'éléments et d'attributs. Le caractère non valide peut être dans l'argument de cette méthode ou dans un argument des méthodes précédentes qui écrivaient dans la mémoire tampon. Les caractères de ce type sont échappés par les références d'entité de caractère lorsque cela est possible (par exemple, dans les nœuds de texte ou les valeurs d'attribut). Toutefois, la référence d'entité de caractère n'est pas autorisée dans les noms d'éléments et d'attributs, les commentaires, les instructions de traitement ou les sections CDATA.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartAttributeAsync(System.String,System.String,System.String)">
      <summary>Écrit de façon asynchrone le début d'un attribut avec le préfixe, le nom local et l'URI de l'espace de noms spécifiés.</summary>
      <param name="prefix">Préfixe de l'espace de noms de cet attribut.</param>
      <param name="localName">Le nom local de l'attribut.</param>
      <param name="ns">URI d'espace de noms de cet attribut.</param>
      <returns>Tâche qui représente l'opération <see langword="WriteStartAttribute" /> asynchrone.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartDocument">
      <summary>En cas de substitution dans une classe dérivée, écrit la déclaration XML avec la version "1.0".</summary>
      <exception cref="T:System.InvalidOperationException">Il ne s'agit pas de la première méthode d'écriture appelée à la suite du constructeur.

ou -

Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartDocument(System.Boolean)">
      <summary>En cas de substitution dans une classe dérivée, écrit la déclaration XML avec la version "1.0" et l'attribut autonome.</summary>
      <param name="standalone">Si la valeur est <see langword="true" />, elle écrit "standalone=yes"; si la valeur est <see langword="false" />, elle écrit "standalone=no".</param>
      <exception cref="T:System.InvalidOperationException">Il ne s'agit pas de la première méthode d'écriture appelée à la suite du constructeur.

ou -

Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartDocumentAsync">
      <summary>Écrit de façon asynchrone la déclaration XML avec la version « 1.0 ».</summary>
      <returns>Tâche qui représente l'opération <see langword="WriteStartDocument" /> asynchrone.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartDocumentAsync(System.Boolean)">
      <summary>Écrit de façon asynchrone la déclaration XML avec la version « 1.0 » et l'attribut autonome.</summary>
      <param name="standalone">Si la valeur est <see langword="true" />, elle écrit "standalone=yes"; si la valeur est <see langword="false" />, elle écrit "standalone=no".</param>
      <returns>Tâche qui représente l'opération <see langword="WriteStartDocument" /> asynchrone.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartElement(System.String)">
      <summary>En cas de substitution dans une classe dérivée, écrit une balise de début avec le nom local spécifié.</summary>
      <param name="localName">Le nom local de l'élément.</param>
      <exception cref="T:System.InvalidOperationException">Le writer est fermé.
ou
Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.Text.EncoderFallbackException">Un caractère dans la mémoire tampon est un caractère XML valide mais n'est pas valide pour l'encodage de sortie. Par exemple, si l'encodage de sortie est ASCII, vous devez utiliser uniquement des caractères de la plage de 0 à 127 pour les noms d'éléments et d'attributs. Le caractère non valide peut être dans l'argument de cette méthode ou dans un argument des méthodes précédentes qui écrivaient dans la mémoire tampon. Les caractères de ce type sont échappés par les références d'entité de caractère lorsque cela est possible (par exemple, dans les nœuds de texte ou les valeurs d'attribut). Toutefois, la référence d'entité de caractère n'est pas autorisée dans les noms d'éléments et d'attributs, les commentaires, les instructions de traitement ou les sections CDATA.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
      <summary>En cas de substitution dans une classe dérivée, écrit l’étiquette de début spécifiée et l’associe à l’espace de noms indiqué.</summary>
      <param name="localName">Le nom local de l'élément.</param>
      <param name="ns">URI de l'espace de noms à associer à l'élément. Si cet espace de noms est déjà dans la portée et qu'il possède un préfixe associé, le writer écrit automatiquement ce préfixe également.</param>
      <exception cref="T:System.InvalidOperationException">Le writer est fermé.

ou -

Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.Text.EncoderFallbackException">Un caractère dans la mémoire tampon est un caractère XML valide mais n'est pas valide pour l'encodage de sortie. Par exemple, si l'encodage de sortie est ASCII, vous devez utiliser uniquement des caractères de la plage de 0 à 127 pour les noms d'éléments et d'attributs. Le caractère non valide peut être dans l'argument de cette méthode ou dans un argument des méthodes précédentes qui écrivaient dans la mémoire tampon. Les caractères de ce type sont échappés par les références d'entité de caractère lorsque cela est possible (par exemple, dans les nœuds de texte ou les valeurs d'attribut). Toutefois, la référence d'entité de caractère n'est pas autorisée dans les noms d'éléments et d'attributs, les commentaires, les instructions de traitement ou les sections CDATA.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
      <summary>En cas de substitution dans une classe dérivée, écrit l’étiquette de début spécifiée, puis l’associe à l’espace de noms et au préfixe indiqués.</summary>
      <param name="prefix">Préfixe d'espace de noms de cet élément.</param>
      <param name="localName">Le nom local de l'élément.</param>
      <param name="ns">URI de l'espace de noms à associer à l'élément.</param>
      <exception cref="T:System.InvalidOperationException">Le writer est fermé.

ou -

Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.Text.EncoderFallbackException">Un caractère dans la mémoire tampon est un caractère XML valide mais n'est pas valide pour l'encodage de sortie. Par exemple, si l'encodage de sortie est ASCII, vous devez utiliser uniquement des caractères de la plage de 0 à 127 pour les noms d'éléments et d'attributs. Le caractère non valide peut être dans l'argument de cette méthode ou dans un argument des méthodes précédentes qui écrivaient dans la mémoire tampon. Les caractères de ce type sont échappés par les références d'entité de caractère lorsque cela est possible (par exemple, dans les nœuds de texte ou les valeurs d'attribut). Toutefois, la référence d'entité de caractère n'est pas autorisée dans les noms d'éléments et d'attributs, les commentaires, les instructions de traitement ou les sections CDATA.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartElementAsync(System.String,System.String,System.String)">
      <summary>Écrit de façon asynchrone l’étiquette de début indiquée et l’associe à l’espace de noms et au préfixe spécifiés.</summary>
      <param name="prefix">Préfixe d'espace de noms de cet élément.</param>
      <param name="localName">Le nom local de l'élément.</param>
      <param name="ns">URI de l'espace de noms à associer à l'élément.</param>
      <returns>Tâche qui représente l'opération <see langword="WriteStartElement" /> asynchrone.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».
ou
Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
    </member>
    <member name="P:System.Xml.XmlWriter.WriteState">
      <summary>En cas de substitution dans une classe dérivée, obtient l'état du writer.</summary>
      <returns>Une des valeurs de <see cref="T:System.Xml.WriteState" />.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteString(System.String)">
      <summary>En cas de substitution dans une classe dérivée, écrit le texte spécifié.</summary>
      <param name="text">Texte à écrire.</param>
      <exception cref="T:System.ArgumentException">La chaîne de texte contient une paire de substitution non valide.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStringAsync(System.String)">
      <summary>Écrit de façon asynchrone le texte spécifié.</summary>
      <param name="text">Texte à écrire.</param>
      <returns>Tâche qui représente l'opération <see langword="WriteString" /> asynchrone.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
      <summary>En cas de substitution dans une classe dérivée, génère et écrit l'entité de caractère de substitution correspondant à la paire de caractères de substitution.</summary>
      <param name="lowChar">Substitut faible. Il doit s'agir d'une valeur comprise entre 0xDC00 et 0xDFFF.</param>
      <param name="highChar">Substitut étendu. Il doit s'agir d'une valeur comprise entre 0xD800 et 0xDBFF.</param>
      <exception cref="T:System.ArgumentException">Une paire de caractères de substitution non valide est passée.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)">
      <summary>Génère de façon asynchrone et écrit l'entité de caractère de substitution correspondant à la paire de caractères de substitution.</summary>
      <param name="lowChar">Substitut faible. Il doit s'agir d'une valeur comprise entre 0xDC00 et 0xDFFF.</param>
      <param name="highChar">Substitut étendu. Il doit s'agir d'une valeur comprise entre 0xD800 et 0xDBFF.</param>
      <returns>Tâche qui représente l'opération <see langword="WriteSurrogateCharEntity" /> asynchrone.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Boolean)">
      <summary>Écrit une valeur <see cref="T:System.Boolean" />.</summary>
      <param name="value">La valeur <see cref="T:System.Boolean" /> à écrire.</param>
      <exception cref="T:System.ArgumentException">Une valeur non valide a été spécifiée.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.DateTime)">
      <summary>Écrit une valeur <see cref="T:System.DateTime" />.</summary>
      <param name="value">La valeur <see cref="T:System.DateTime" /> à écrire.</param>
      <exception cref="T:System.ArgumentException">Une valeur non valide a été spécifiée.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.DateTimeOffset)">
      <summary>Écrit une valeur <see cref="T:System.DateTimeOffset" />.</summary>
      <param name="value">La valeur <see cref="T:System.DateTimeOffset" /> à écrire.</param>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Decimal)">
      <summary>Écrit une valeur <see cref="T:System.Decimal" />.</summary>
      <param name="value">La valeur <see cref="T:System.Decimal" /> à écrire.</param>
      <exception cref="T:System.ArgumentException">Une valeur non valide a été spécifiée.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Double)">
      <summary>Écrit une valeur <see cref="T:System.Double" />.</summary>
      <param name="value">La valeur <see cref="T:System.Double" /> à écrire.</param>
      <exception cref="T:System.ArgumentException">Une valeur non valide a été spécifiée.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Int32)">
      <summary>Écrit une valeur <see cref="T:System.Int32" />.</summary>
      <param name="value">La valeur <see cref="T:System.Int32" /> à écrire.</param>
      <exception cref="T:System.ArgumentException">Une valeur non valide a été spécifiée.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Int64)">
      <summary>Écrit une valeur <see cref="T:System.Int64" />.</summary>
      <param name="value">La valeur <see cref="T:System.Int64" /> à écrire.</param>
      <exception cref="T:System.ArgumentException">Une valeur non valide a été spécifiée.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Object)">
      <summary>Écrit la valeur de l'objet.</summary>
      <param name="value">Valeur de l'objet à écrire.  
 Remarque Avec le .NET Framework version 3.5, cette méthode accepte <see cref="T:System.DateTimeOffset" /> en tant que paramètre.</param>
      <exception cref="T:System.ArgumentException">Une valeur non valide a été spécifiée.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Le Writer est fermé ou a l'état d'erreur.

ou -

Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Single)">
      <summary>Écrit un nombre à virgule flottante simple précision.</summary>
      <param name="value">Nombre à virgule flottante simple précision à écrire.</param>
      <exception cref="T:System.ArgumentException">Une valeur non valide a été spécifiée.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.String)">
      <summary>Écrit une valeur <see cref="T:System.String" />.</summary>
      <param name="value">La valeur <see cref="T:System.String" /> à écrire.</param>
      <exception cref="T:System.ArgumentException">Une valeur non valide a été spécifiée.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteWhitespace(System.String)">
      <summary>En cas de substitution dans une classe dérivée, écrit l'espace blanc spécifié.</summary>
      <param name="ws">Chaîne d'espaces blancs.</param>
      <exception cref="T:System.ArgumentException">La chaîne contient des caractères qui ne sont pas des espaces blancs.</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteWhitespaceAsync(System.String)">
      <summary>Écrit de façon asynchrone l'espace blanc spécifié.</summary>
      <param name="ws">Chaîne d'espaces blancs.</param>
      <returns>Tâche qui représente l'opération <see langword="WriteWhitespace" /> asynchrone.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».
ou
Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
    </member>
    <member name="P:System.Xml.XmlWriter.XmlLang">
      <summary>En cas de substitution dans une classe dérivée, obtient la portée <see langword="xml:lang" /> en cours.</summary>
      <returns>Portée de <see langword="xml:lang" /> actuelle.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="P:System.Xml.XmlWriter.XmlSpace">
      <summary>En cas de substitution dans une classe dérivée, obtient <see cref="T:System.Xml.XmlSpace" /> représentant la portée <see langword="xml:space" /> en cours.</summary>
      <returns>Obtient un <see langword="XmlSpace" /> représentant la portée <see langword="xml:space" /> en cours.  
  Value 
  Signification 
 <see langword="None" /> Valeur par défaut si aucune portée <see langword="xml:space" /> n'existe.  

 <see langword="Default" /> La portée actuelle est <see langword="xml:space" />= "default".  

 <see langword="Preserve" /> La portée actuelle est <see langword="xml:space" />= "preserve".</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="T:System.Xml.XmlWriterSettings">
      <summary>Spécifie un jeu de fonctionnalités à prendre en charge sur l'objet <see cref="T:System.Xml.XmlWriter" /> créé par la méthode <see cref="Overload:System.Xml.XmlWriter.Create" />.</summary>
    </member>
    <member name="M:System.Xml.XmlWriterSettings.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.Async">
      <summary>Obtient ou définit une valeur qui indique si les méthodes <see cref="T:System.Xml.XmlWriter" /> asynchrones peuvent être utilisées sur une instance <see cref="T:System.Xml.XmlWriter" /> particulière.</summary>
      <returns>
        <see langword="true" /> si des méthodes asynchrones peuvent être utilisées ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.CheckCharacters">
      <summary>Obtient ou définit une valeur qui indique si le writer XML doit vérifier que tous les caractères du document sont conformes à la section « 2.2 Characters » de la recommandation W3C sur XML 1.0.</summary>
      <returns>
        <see langword="true" /> pour assurer la vérification des caractères ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xml.XmlWriterSettings.Clone">
      <summary>Crée une copie de l'instance <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
      <returns>Objet <see cref="T:System.Xml.XmlWriterSettings" /> cloné.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.CloseOutput">
      <summary>Obtient ou définit une valeur indiquant si <see cref="T:System.Xml.XmlWriter" /> doit également fermer le flux sous-jacent ou <see cref="T:System.IO.TextWriter" /> lorsque la méthode <see cref="M:System.Xml.XmlWriter.Close" /> est appelée.</summary>
      <returns>
        <see langword="true" /> pour également fermer le flux sous-jacent ou <see cref="T:System.IO.TextWriter" /> ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.ConformanceLevel">
      <summary>Obtient ou définit le niveau de conformité de vérification de sortie XML du writer XML.</summary>
      <returns>Une des valeurs d'énumération qui spécifie le niveau de conformité (document, fragment ou détection automatique). La valeur par défaut est <see cref="F:System.Xml.ConformanceLevel.Document" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.DoNotEscapeUriAttributes">
      <summary>Obtient ou définit une valeur qui indique si le <see cref="T:System.Xml.XmlWriter" /> ne place pas les attributs d'URI dans des séquences d’échappement.</summary>
      <returns>
        <see langword="true" />Si le <see cref="T:System.Xml.XmlWriter" /> n’échappe pas les attributs d’URI <see langword="false" />; sinon,. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.Encoding">
      <summary>Obtient ou définit le type d'encodage de texte à utiliser.</summary>
      <returns>Encodage de texte à utiliser. La valeur par défaut est <see langword="Encoding.UTF8" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.Indent">
      <summary>Obtient ou définit une valeur indiquant si les éléments doivent être mis en retrait.</summary>
      <returns>
        <see langword="true" /> pour écrire des éléments individuels sur de nouvelles lignes et les mettre en retrait ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.IndentChars">
      <summary>Obtient ou définit la chaîne de caractères à utiliser lors de la mise en retrait. Ce paramètre est utilisé lorsque la propriété <see cref="P:System.Xml.XmlWriterSettings.Indent" /> a la valeur <see langword="true" />.</summary>
      <returns>Chaîne de caractères à utiliser lors de la mise en retrait. Elle peut avoir n'importe quelle valeur de chaîne. Toutefois, pour garantir la validité du XML, vous devez spécifier uniquement des caractères d'espace blanc valides, tels que les espaces, les tabulations, les retours chariot ou les sauts de ligne. Par défaut, il s'agit de deux espaces.</returns>
      <exception cref="T:System.ArgumentNullException">La valeur assignée à <see cref="P:System.Xml.XmlWriterSettings.IndentChars" /> est <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.NamespaceHandling">
      <summary>Obtient ou définit une valeur qui indique si <see cref="T:System.Xml.XmlWriter" /> doit supprimer des déclarations d'espace de noms en double lors de l'écriture du contenu XML. Le comportement par défaut consiste pour le writer à générer la sortie de toutes les déclarations d'espace de noms qui sont présentes dans le programme de résolution d'espace de noms du writer.</summary>
      <returns>L'énumération <see cref="T:System.Xml.NamespaceHandling" /> utilisée pour spécifier s'il faut supprimer les déclarations d'espace de noms en double dans le <see cref="T:System.Xml.XmlWriter" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.NewLineChars">
      <summary>Obtient ou définit la chaîne de caractères à utiliser pour les sauts de ligne.</summary>
      <returns>Chaîne de caractères à utiliser pour les sauts de ligne. Elle peut avoir n'importe quelle valeur de chaîne. Toutefois, pour garantir la validité du XML, vous devez spécifier uniquement des caractères d'espace blanc valides, tels que les espaces, les tabulations, les retours chariot ou les sauts de ligne. La valeur par défaut est <c>\r\n</c> (retour chariot, nouvelle ligne).</returns>
      <exception cref="T:System.ArgumentNullException">La valeur assignée à <see cref="P:System.Xml.XmlWriterSettings.NewLineChars" /> est <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.NewLineHandling">
      <summary>Obtient ou définit une valeur indiquant s'il convient de normaliser des sauts de ligne dans la sortie.</summary>
      <returns>Une des valeurs de l'objet <see cref="T:System.Xml.NewLineHandling" />. La valeur par défaut est <see cref="F:System.Xml.NewLineHandling.Replace" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.NewLineOnAttributes">
      <summary>Obtient ou définit une valeur indiquant s'il convient d'écrire des attributs sur une nouvelle ligne.</summary>
      <returns>
        <see langword="true" /> pour écrire des attributs sur des lignes ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.  
   
 Ce paramètre n'a aucun effet si la propriété <see cref="P:System.Xml.XmlWriterSettings.Indent" /> a la valeur <see langword="false" />.  

  

 Lorsque <see cref="P:System.Xml.XmlWriterSettings.NewLineOnAttributes" /> a la valeur <see langword="true" />, chaque attribut est ajouté avec une nouvelle ligne et un niveau supplémentaire de mise en retrait.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.OmitXmlDeclaration">
      <summary>Obtient ou définit une valeur indiquant si une déclaration XML doit être omise.</summary>
      <returns>
        <see langword="true" /> pour omettre la déclaration XML ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />, une déclaration XML est écrite.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.OutputMethod">
      <summary>Obtient la méthode utilisée pour sérialiser la sortie <see cref="T:System.Xml.XmlWriter" />.</summary>
      <returns>Une des valeurs de l'objet <see cref="T:System.Xml.XmlOutputMethod" />. La valeur par défaut est <see cref="F:System.Xml.XmlOutputMethod.Xml" />.</returns>
    </member>
    <member name="M:System.Xml.XmlWriterSettings.Reset">
      <summary>Réinitialise les membres de la classe de paramètres à leurs valeurs par défaut.</summary>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose">
      <summary>Obtient ou définit une valeur qui indique si <see cref="T:System.Xml.XmlWriter" /> ajoutera des indicateurs de fermeture à tous les indicateurs d'éléments non fermés lorsque la méthode <see cref="M:System.Xml.XmlWriter.Close" /> est appelée.</summary>
      <returns>
        <see langword="true" /> si toutes les balises d'élément non fermées seront fermées ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="T:System.Xml.XPath.IXPathNavigable">
      <summary>Fournit un accesseur à la classe <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
    </member>
    <member name="M:System.Xml.XPath.IXPathNavigable.CreateNavigator">
      <summary>Retourne un nouvel objet <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <returns>Objet <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="T:System.Xml.XPath.XmlCaseOrder">
      <summary>Spécifie l'ordre de tri des lettres majuscules et minuscules.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlCaseOrder.LowerFirst">
      <summary>Les lettres minuscules sont triées avant les lettres majuscules.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlCaseOrder.None">
      <summary>Ignore la casse.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlCaseOrder.UpperFirst">
      <summary>Les lettres majuscules sont triées avant les lettres minuscules.</summary>
    </member>
    <member name="T:System.Xml.XPath.XmlDataType">
      <summary>Spécifie le type de données utilisé pour déterminer l'ordre de tri.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlDataType.Number">
      <summary>Les valeurs sont triées par ordre numérique.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlDataType.Text">
      <summary>Les valeurs sont triées par ordre alphabétique.</summary>
    </member>
    <member name="T:System.Xml.XPath.XmlSortOrder">
      <summary>Spécifie l'ordre de tri.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlSortOrder.Ascending">
      <summary>Les nœuds sont triés par ordre croissant. Par exemple, si les nombres 1, 2, 3 et 4 sont triés par ordre croissant, ils s'affichent dans l'ordre suivant : 1,2,3,4.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlSortOrder.Descending">
      <summary>Les nœuds sont triés par ordre décroissant. Par exemple, si les nombres 1, 2, 3 et 4 sont triés par ordre décroissant, ils s'affichent dans l'ordre suivant : 4,3,2,1.</summary>
    </member>
    <member name="T:System.Xml.XPath.XPathExpression">
      <summary>Fournit une classe typée qui représente une expression XPath compilée.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.AddSort(System.Object,System.Collections.IComparer)">
      <summary>En cas de substitution dans une classe dérivée, trie les nœuds sélectionnés par l'expression XPath en fonction de l'objet <see cref="T:System.Collections.IComparer" /> spécifié.</summary>
      <param name="expr">Objet représentant la clé de tri. Il peut s'agir de la valeur <see langword="string" /> du nœud ou d'un objet <see cref="T:System.Xml.XPath.XPathExpression" /> avec une expression XPath compilée.</param>
      <param name="comparer">Objet <see cref="T:System.Collections.IComparer" /> qui fournit les comparaisons de type de données spécifiques pour déterminer si deux objets sont équivalents.</param>
      <exception cref="T:System.Xml.XPath.XPathException">
        <see cref="T:System.Xml.XPath.XPathExpression" /> ou la clé de tri inclut un préfixe ; soit <see cref="T:System.Xml.XmlNamespaceManager" /> n'est pas fourni, soit le préfixe demeure introuvable dans le <see cref="T:System.Xml.XmlNamespaceManager" /> fourni.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.AddSort(System.Object,System.Xml.XPath.XmlSortOrder,System.Xml.XPath.XmlCaseOrder,System.String,System.Xml.XPath.XmlDataType)">
      <summary>En cas de substitution dans une classe dérivée, trie les nœuds sélectionnés par l'expression XPath en fonction des paramètres fournis.</summary>
      <param name="expr">Objet représentant la clé de tri. Il peut s'agir de la valeur <see langword="string" /> du nœud ou d'un objet <see cref="T:System.Xml.XPath.XPathExpression" /> avec une expression XPath compilée.</param>
      <param name="order">Valeur <see cref="T:System.Xml.XPath.XmlSortOrder" /> indiquant l'ordre de tri.</param>
      <param name="caseOrder">Valeur <see cref="T:System.Xml.XPath.XmlCaseOrder" /> indiquant le mode de tri des lettres majuscules et minuscules.</param>
      <param name="lang">Langue à utiliser pour la comparaison. Utilise la classe <see cref="T:System.Globalization.CultureInfo" /> qui peut être passée à la méthode <see cref="Overload:System.String.Compare" /> de méthode pour les types de langues, par exemple « us-en » pour les États-Unis. Anglais. Si une chaîne vide est spécifiée, l'environnement système est utilisé pour déterminer <see cref="T:System.Globalization.CultureInfo" />.</param>
      <param name="dataType">Valeur <see cref="T:System.Xml.XPath.XmlDataType" /> qui indique l'ordre de tri du type de données.</param>
      <exception cref="T:System.Xml.XPath.XPathException">
        <see cref="T:System.Xml.XPath.XPathExpression" /> ou la clé de tri inclut un préfixe ; soit <see cref="T:System.Xml.XmlNamespaceManager" /> n'est pas fourni, soit le préfixe demeure introuvable dans le <see cref="T:System.Xml.XmlNamespaceManager" /> fourni.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.Clone">
      <summary>En cas de substitution dans une classe dérivée, retourne un clone de <see cref="T:System.Xml.XPath.XPathExpression" />.</summary>
      <returns>Nouvel objet <see cref="T:System.Xml.XPath.XPathExpression" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.Compile(System.String)">
      <summary>Compile l'expression XPath spécifiée et retourne un objet <see cref="T:System.Xml.XPath.XPathExpression" /> qui représente l'expression XPath.</summary>
      <param name="xpath">Expression XPath.</param>
      <returns>Objet <see cref="T:System.Xml.XPath.XPathExpression" />.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre de l'expression XPath n'est pas une expression XPath valide.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">L'expression XPath n'est pas valide.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.Compile(System.String,System.Xml.IXmlNamespaceResolver)">
      <summary>Compile l'expression XPath spécifiée avec l'objet <see cref="T:System.Xml.IXmlNamespaceResolver" /> spécifié pour la résolution d'espace de noms et retourne un objet <see cref="T:System.Xml.XPath.XPathExpression" /> qui représente l'expression XPath.</summary>
      <param name="xpath">Expression XPath.</param>
      <param name="nsResolver">Objet qui implémente l'interface <see cref="T:System.Xml.IXmlNamespaceResolver" /> pour la résolution d'espace de noms.</param>
      <returns>Objet <see cref="T:System.Xml.XPath.XPathExpression" />.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre de l'expression XPath n'est pas une expression XPath valide.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">L'expression XPath n'est pas valide.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathExpression.Expression">
      <summary>En cas de substitution dans une classe dérivée, obtient une représentation <see langword="string" /> de <see cref="T:System.Xml.XPath.XPathExpression" />.</summary>
      <returns>Représentation <see langword="string" /> de <see cref="T:System.Xml.XPath.XPathExpression" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathExpression.ReturnType">
      <summary>En cas de substitution dans une classe dérivée, obtient le type de résultat de l'expression XPath.</summary>
      <returns>Valeur <see cref="T:System.Xml.XPath.XPathResultType" /> représentant le type de résultat de l'expression XPath.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.IXmlNamespaceResolver)">
      <summary>En cas de substitution dans une classe dérivée, spécifie l'objet <see cref="T:System.Xml.IXmlNamespaceResolver" /> à utiliser pour la résolution d'espace de noms.</summary>
      <param name="nsResolver">Objet qui implémente l'interface <see cref="T:System.Xml.IXmlNamespaceResolver" /> à utiliser pour la résolution d'espace de noms.</param>
      <exception cref="T:System.Xml.XPath.XPathException">Le paramètre de l'objet <see cref="T:System.Xml.IXmlNamespaceResolver" /> n'est pas dérivé de <see cref="T:System.Xml.IXmlNamespaceResolver" />.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)">
      <summary>En cas de substitution dans une classe dérivée, spécifie l'objet <see cref="T:System.Xml.XmlNamespaceManager" /> à utiliser pour la résolution d'espace de noms.</summary>
      <param name="nsManager">Objet <see cref="T:System.Xml.XmlNamespaceManager" /> à utiliser pour la résolution d'espace de noms.</param>
      <exception cref="T:System.Xml.XPath.XPathException">Le paramètre de l'objet <see cref="T:System.Xml.XmlNamespaceManager" /> n'est pas dérivé de la classe <see cref="T:System.Xml.XmlNamespaceManager" />.</exception>
    </member>
    <member name="T:System.Xml.XPath.XPathItem">
      <summary>Représente un élément dans le modèle de données XQuery 1.0 et XPath 2.0.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathItem.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XPath.XPathItem" />.</summary>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.IsNode">
      <summary>En cas de substitution dans une classe dérivée, obtient une valeur indiquant si l'élément représente un nœud XPath ou une valeur atomique.</summary>
      <returns>
        <see langword="true" /> si l'élément représente un nœud XPath ; <see langword="false" /> si l'élément représente une valeur atomique.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.TypedValue">
      <summary>En cas de substitution dans une classe dérivée, obtient l'élément actuel en tant qu'objet boxed (converti) du type .NET Framework 2.0 le plus approprié selon son type de schéma.</summary>
      <returns>Élément actuel en tant qu'objet boxed du type .NET Framework le plus approprié.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.Value">
      <summary>En cas de substitution dans une classe dérivée, obtient la valeur <see langword="string" /> de l'élément.</summary>
      <returns>Valeur <see langword="string" /> de l'élément.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathItem.ValueAs(System.Type)">
      <summary>Retourne la valeur de l'élément comme type spécifié.</summary>
      <param name="returnType">Type utilisé pour retourner la valeur de l'élément.</param>
      <returns>Valeur de l'élément en tant que type demandé.</returns>
      <exception cref="T:System.FormatException">Le format de la valeur de l'élément n'est pas correct pour le type cible.</exception>
      <exception cref="T:System.InvalidCastException">La tentative de cast n'est pas valide.</exception>
      <exception cref="T:System.OverflowException">Le cast spécifié a généré un dépassement de capacité.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathItem.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>En cas de substitution dans une classe dérivée, retourne la valeur de l'élément en tant que type spécifié à l'aide de l'objet <see cref="T:System.Xml.IXmlNamespaceResolver" /> spécifié pour résoudre les préfixes d'espace de noms.</summary>
      <param name="returnType">Type utilisé pour retourner la valeur de l'élément.</param>
      <param name="nsResolver">Objet <see cref="T:System.Xml.IXmlNamespaceResolver" /> utilisé pour trouver les préfixes d'espace de noms.</param>
      <returns>Valeur de l'élément en tant que type demandé.</returns>
      <exception cref="T:System.FormatException">Le format de la valeur de l'élément n'est pas correct pour le type cible.</exception>
      <exception cref="T:System.InvalidCastException">La tentative de cast n'est pas valide.</exception>
      <exception cref="T:System.OverflowException">Le cast spécifié a généré un dépassement de capacité.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueAsBoolean">
      <summary>En cas de substitution dans une classe dérivée, obtient la valeur de l'élément en tant que <see cref="T:System.Boolean" />.</summary>
      <returns>Valeur de l'élément en tant que <see cref="T:System.Boolean" />.</returns>
      <exception cref="T:System.FormatException">Le format de la valeur de l'élément n'est pas correct pour le type <see cref="T:System.Boolean" />.</exception>
      <exception cref="T:System.InvalidCastException">La tentative de cast en <see cref="T:System.Boolean" /> n'est pas valide.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueAsDateTime">
      <summary>En cas de substitution dans une classe dérivée, obtient la valeur de l'élément en tant que <see cref="T:System.DateTime" />.</summary>
      <returns>Valeur de l'élément en tant que <see cref="T:System.DateTime" />.</returns>
      <exception cref="T:System.FormatException">Le format de la valeur de l'élément n'est pas correct pour le type <see cref="T:System.DateTime" />.</exception>
      <exception cref="T:System.InvalidCastException">La tentative de cast en <see cref="T:System.DateTime" /> n'est pas valide.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueAsDouble">
      <summary>En cas de substitution dans une classe dérivée, obtient la valeur de l'élément en tant que <see cref="T:System.Double" />.</summary>
      <returns>Valeur de l'élément en tant que <see cref="T:System.Double" />.</returns>
      <exception cref="T:System.FormatException">Le format de la valeur de l'élément n'est pas correct pour le type <see cref="T:System.Double" />.</exception>
      <exception cref="T:System.InvalidCastException">La tentative de cast en <see cref="T:System.Double" /> n'est pas valide.</exception>
      <exception cref="T:System.OverflowException">Le cast spécifié a généré un dépassement de capacité.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueAsInt">
      <summary>En cas de substitution dans une classe dérivée, obtient la valeur de l'élément en tant que <see cref="T:System.Int32" />.</summary>
      <returns>Valeur de l'élément en tant que <see cref="T:System.Int32" />.</returns>
      <exception cref="T:System.FormatException">Le format de la valeur de l'élément n'est pas correct pour le type <see cref="T:System.Int32" />.</exception>
      <exception cref="T:System.InvalidCastException">La tentative de cast en <see cref="T:System.Int32" /> n'est pas valide.</exception>
      <exception cref="T:System.OverflowException">Le cast spécifié a généré un dépassement de capacité.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueAsLong">
      <summary>En cas de substitution dans une classe dérivée, obtient la valeur de l'élément en tant que <see cref="T:System.Int64" />.</summary>
      <returns>Valeur de l'élément en tant que <see cref="T:System.Int64" />.</returns>
      <exception cref="T:System.FormatException">Le format de la valeur de l'élément n'est pas correct pour le type <see cref="T:System.Int64" />.</exception>
      <exception cref="T:System.InvalidCastException">La tentative de cast en <see cref="T:System.Int64" /> n'est pas valide.</exception>
      <exception cref="T:System.OverflowException">Le cast spécifié a généré un dépassement de capacité.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueType">
      <summary>En cas de substitution dans une classe dérivée, obtient le type de .NET Framework 2.0 de l'élément.</summary>
      <returns>Type de .NET Framework de l'élément. La valeur par défaut est <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.XmlType">
      <summary>En cas de substitution dans une classe dérivée, obtient le <see cref="T:System.Xml.Schema.XmlSchemaType" /> de l'élément.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaType" /> de l'élément.</returns>
    </member>
    <member name="T:System.Xml.XPath.XPathNamespaceScope">
      <summary>Définit la portée espace de noms.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNamespaceScope.All">
      <summary>Retourne tous les espaces de noms définis dans la portée du nœud actuel. Ceci inclut l’espace de noms <c>xmlns:xml</c>, qui est toujours déclaré implicitement. L'ordre des espaces de noms retournés n'est pas défini.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNamespaceScope.ExcludeXml">
      <summary>Retourne tous les espaces de noms définis dans la portée du nœud actuel, à l’exception de l’espace de noms <c>xmlns:xml</c>. L’espace de noms <c>xmlns:xml</c> est toujours déclaré implicitement. L'ordre des espaces de noms retournés n'est pas défini.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNamespaceScope.Local">
      <summary>Retourne tous les espaces de noms définis localement sur le nœud actuel.</summary>
    </member>
    <member name="T:System.Xml.XPath.XPathNavigator">
      <summary>Fournit un modèle de curseur pour la navigation dans les données XML et leur modification.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.AppendChild">
      <summary>Retourne un objet <see cref="T:System.Xml.XmlWriter" /> permettant de créer un ou plusieurs nœuds enfants à la fin de la liste de nœuds enfants du nœud actuel.</summary>
      <returns>Un objet <see cref="T:System.Xml.XmlWriter" /> permettant de créer des nœuds enfants à la fin de la liste de nœuds enfants du nœud actuel.</returns>
      <exception cref="T:System.InvalidOperationException">Le nœud actuel sur lequel <see cref="T:System.Xml.XPath.XPathNavigator" /> est positionné ne correspond pas au nœud racine ou à un nœud d'élément.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge l'édition.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.AppendChild(System.String)">
      <summary>Crée un nœud enfant à la fin de la liste de nœuds enfants du nœud actuel à l'aide de la chaîne de données XML spécifiée.</summary>
      <param name="newChild">Chaîne de données XML pour le nouveau nœud enfant.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre de la chaîne XML est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Le nœud actuel sur lequel <see cref="T:System.Xml.XPath.XPathNavigator" /> est positionné ne correspond pas au nœud racine ou à un nœud d'élément.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge l'édition.</exception>
      <exception cref="T:System.Xml.XmlException">Le paramètre de la chaîne de données XML n'a pas une forme correcte.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.AppendChild(System.Xml.XmlReader)">
      <summary>Crée un nœud enfant à la fin de la liste de nœuds enfants du nœud actuel à l'aide du contenu XML de l'objet <see cref="T:System.Xml.XmlReader" /> spécifié.</summary>
      <param name="newChild">Objet <see cref="T:System.Xml.XmlReader" /> positionné sur les données XML pour le nouveau nœud enfant.</param>
      <exception cref="T:System.ArgumentException">L'objet <see cref="T:System.Xml.XmlReader" /> est dans un état d'erreur ou est fermé.</exception>
      <exception cref="T:System.ArgumentNullException">Le paramètre de l'objet <see cref="T:System.Xml.XmlReader" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Le nœud actuel sur lequel <see cref="T:System.Xml.XPath.XPathNavigator" /> est positionné ne correspond pas au nœud racine ou à un nœud d'élément.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge l'édition.</exception>
      <exception cref="T:System.Xml.XmlException">Le contenu XML du paramètre objet <see cref="T:System.Xml.XmlReader" /> n'est pas correct.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.AppendChild(System.Xml.XPath.XPathNavigator)">
      <summary>Crée un nœud enfant à la fin de la liste de nœuds enfants du nœud actuel à l'aide des nœuds du <see cref="T:System.Xml.XPath.XPathNavigator" /> spécifié.</summary>
      <param name="newChild">Objet <see cref="T:System.Xml.XPath.XPathNavigator" /> positionné sur le nœud à ajouter en tant que nouveau nœud enfant.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre de l'objet <see cref="T:System.Xml.XPath.XPathNavigator" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Le nœud actuel sur lequel <see cref="T:System.Xml.XPath.XPathNavigator" /> est positionné ne correspond pas au nœud racine ou à un nœud d'élément.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge l'édition.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.AppendChildElement(System.String,System.String,System.String,System.String)">
      <summary>Crée un élément enfant à la fin de la liste de nœuds enfants du nœud actuel à l'aide du préfixe d'espace de noms, du nom local et de l'URI d'espace de noms spécifiés avec la valeur spécifiée.</summary>
      <param name="prefix">Préfixe d'espace de noms du nouveau nœud enfant (le cas échéant).</param>
      <param name="localName">Nom local du nouveau nœud enfant (le cas échéant).</param>
      <param name="namespaceURI">URI de l'espace de noms du nœud du nouvel élément enfant (le cas échéant). <see cref="F:System.String.Empty" /> et <see langword="null" /> sont équivalents.</param>
      <param name="value">Valeur du nouveau nœud enfant. Si <see cref="F:System.String.Empty" /> ou <see langword="null" /> est passé, un élément vide est créé.</param>
      <exception cref="T:System.InvalidOperationException">Le nœud actuel sur lequel <see cref="T:System.Xml.XPath.XPathNavigator" /> est positionné ne correspond pas au nœud racine ou à un nœud d'élément.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge l'édition.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.BaseURI">
      <summary>En cas de substitution dans une classe dérivée, obtient l'URI de base du nœud actuel.</summary>
      <returns>Emplacement à partir duquel le nœud a été chargé ou <see cref="F:System.String.Empty" /> s'il n'y a aucune valeur.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.CanEdit">
      <summary>Obtient une valeur indiquant si le <see cref="T:System.Xml.XPath.XPathNavigator" /> peut modifier les données XML sous-jacentes.</summary>
      <returns>
        <see langword="true" />Si le <see cref="T:System.Xml.XPath.XPathNavigator" /> peut modifier les données XML sous-jacentes; <see langword="false" />sinon,.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.CheckValidity(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
      <summary>Vérifie que les données XML du <see cref="T:System.Xml.XPath.XPathNavigator" /> sont conformes au schéma XSD (XML Schema Definition) fourni.</summary>
      <param name="schemas">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" /> contenant les schémas utilisés pour valider les données XML contenues dans <see cref="T:System.Xml.XPath.XPathNavigator" />.</param>
      <param name="validationEventHandler">
        <see cref="T:System.Xml.Schema.ValidationEventHandler" /> qui reçoit des informations à propos d'avertissements et d'erreurs de la validation du schéma.</param>
      <returns>
        <see langword="true" /> si aucune erreur de validation du schéma ne s'est produite ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Une erreur de validation du schéma s'est produite et aucun <see cref="T:System.Xml.Schema.ValidationEventHandler" /> n'a été spécifié pour gérer les erreurs de validation.</exception>
      <exception cref="T:System.InvalidOperationException">Le <see cref="T:System.Xml.XPath.XPathNavigator" /> est positionné sur un nœud qui n'est pas un élément, un attribut ou le nœud racine ou s'il n'y a aucune information liée au type pour effectuer la validation.</exception>
      <exception cref="T:System.ArgumentException">La méthode <see cref="M:System.Xml.XPath.XPathNavigator.CheckValidity(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)" /> a été appelée avec un paramètre <see cref="T:System.Xml.Schema.XmlSchemaSet" /> lorsque le <see cref="T:System.Xml.XPath.XPathNavigator" /> n'était pas positionné sur le nœud racine des données XML.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Clone">
      <summary>En cas de substitution dans une classe dérivée, crée un <see cref="T:System.Xml.XPath.XPathNavigator" /> positionné au même nœud que ce <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <returns>Nouveau <see cref="T:System.Xml.XPath.XPathNavigator" /> positionné sur le même nœud que <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ComparePosition(System.Xml.XPath.XPathNavigator)">
      <summary>Compare la position du <see cref="T:System.Xml.XPath.XPathNavigator" /> en cours avec la position du <see cref="T:System.Xml.XPath.XPathNavigator" /> spécifié.</summary>
      <param name="nav">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> avec lequel effectuer la comparaison.</param>
      <returns>Une valeur de <see cref="T:System.Xml.XmlNodeOrder" /> représentant la position comparative des deux objets <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Compile(System.String)">
      <summary>Compile une chaîne représentant une expression XPath, puis retourne un objet <see cref="T:System.Xml.XPath.XPathExpression" />.</summary>
      <param name="xpath">Chaîne représentant une expression XPath.</param>
      <returns>Objet <see cref="T:System.Xml.XPath.XPathExpression" /> représentant l'expression XPath.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="xpath" /> contient une expression XPath qui n'est pas valide.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">L'expression XPath n'est pas valide.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.CreateAttribute(System.String,System.String,System.String,System.String)">
      <summary>Crée un nœud d'attribut sur le nœud d'élément actuel à l'aide du préfixe d'espace de noms, du nom local et de l'URI d'espace de noms spécifiés avec la valeur spécifiée.</summary>
      <param name="prefix">Préfixe d'espace de noms du nouveau nœud d'attribut (le cas échéant).</param>
      <param name="localName">Nom local du nouveau nœud d'attribut qui ne peut pas être <see cref="F:System.String.Empty" /> ou <see langword="null" />.</param>
      <param name="namespaceURI">URI d'espace de noms du nouveau nœud d'attribut (le cas échéant).</param>
      <param name="value">Valeur du nouveau nœud d'attribut. Si <see cref="F:System.String.Empty" /> ou <see langword="null" /> est passé, un nœud d'attribut vide est créé.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> n'est pas positionné sur un nœud d'élément.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge l'édition.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.CreateAttributes">
      <summary>Retourne un objet <see cref="T:System.Xml.XmlWriter" /> permettant de créer des attributs sur l'élément actuel.</summary>
      <returns>Objet <see cref="T:System.Xml.XmlWriter" /> permettant de créer des attributs sur l'élément actuel.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> n'est pas positionné sur un nœud d'élément.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge l'édition.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.CreateNavigator">
      <summary>Retourne une copie de <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <returns>Copie <see cref="T:System.Xml.XPath.XPathNavigator" /> de ce <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.DeleteRange(System.Xml.XPath.XPathNavigator)">
      <summary>Supprime une plage de nœuds frères allant du nœud actuel au nœud spécifié.</summary>
      <param name="lastSiblingToDelete">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> positionné sur le dernier nœud frère de la plage à supprimer.</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> spécifié est <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge l'édition.</exception>
      <exception cref="T:System.InvalidOperationException">Le dernier nœud à supprimer spécifié n'est pas un nœud frère valide du nœud actuel.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.DeleteSelf">
      <summary>Supprime le nœud actuel et ses nœuds enfants.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> est positionné sur un nœud qui ne peut pas être supprimé, par exemple le nœud racine ou un nœud d'espace de noms.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge l'édition.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Evaluate(System.String)">
      <summary>Évalue l'expression XPath spécifiée et retourne le résultat typé.</summary>
      <param name="xpath">Chaîne représentant une expression XPath qui peut être évaluée.</param>
      <returns>Résultat de l'expression (booléen, nombre, chaîne ou ensemble de nœuds). Correspond aux objets <see cref="T:System.Boolean" />, <see cref="T:System.Double" />, <see cref="T:System.String" /> ou <see cref="T:System.Xml.XPath.XPathNodeIterator" /> respectivement.</returns>
      <exception cref="T:System.ArgumentException">Le type de retour de l'expression XPath est un ensemble de nœuds.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">L'expression XPath n'est pas valide.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Evaluate(System.String,System.Xml.IXmlNamespaceResolver)">
      <summary>Évalue l'expression XPath spécifiée et retourne le résultat typé, à l'aide de l'objet <see cref="T:System.Xml.IXmlNamespaceResolver" /> spécifié pour trouver les préfixes d'espace de noms dans l'expression XPath.</summary>
      <param name="xpath">Chaîne représentant une expression XPath qui peut être évaluée.</param>
      <param name="resolver">Objet <see cref="T:System.Xml.IXmlNamespaceResolver" /> permettant de trouver les préfixes d'espace de noms dans l'expression XPath.</param>
      <returns>Résultat de l'expression (booléen, nombre, chaîne ou ensemble de nœuds). Correspond aux objets <see cref="T:System.Boolean" />, <see cref="T:System.Double" />, <see cref="T:System.String" /> ou <see cref="T:System.Xml.XPath.XPathNodeIterator" /> respectivement.</returns>
      <exception cref="T:System.ArgumentException">Le type de retour de l'expression XPath est un ensemble de nœuds.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">L'expression XPath n'est pas valide.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Evaluate(System.Xml.XPath.XPathExpression)">
      <summary>Évalue <see cref="T:System.Xml.XPath.XPathExpression" /> spécifiée et retourne le résultat typé.</summary>
      <param name="expr">
        <see cref="T:System.Xml.XPath.XPathExpression" /> qui peut être évalué.</param>
      <returns>Résultat de l'expression (booléen, nombre, chaîne ou ensemble de nœuds). Correspond aux objets <see cref="T:System.Boolean" />, <see cref="T:System.Double" />, <see cref="T:System.String" /> ou <see cref="T:System.Xml.XPath.XPathNodeIterator" /> respectivement.</returns>
      <exception cref="T:System.ArgumentException">Le type de retour de l'expression XPath est un ensemble de nœuds.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">L'expression XPath n'est pas valide.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Evaluate(System.Xml.XPath.XPathExpression,System.Xml.XPath.XPathNodeIterator)">
      <summary>Utilise le contexte fourni pour évaluer le <see cref="T:System.Xml.XPath.XPathExpression" /> et retourne le résultat typé.</summary>
      <param name="expr">
        <see cref="T:System.Xml.XPath.XPathExpression" /> qui peut être évalué.</param>
      <param name="context">
        <see cref="T:System.Xml.XPath.XPathNodeIterator" /> qui pointe vers l'ensemble des nœuds sélectionnés auquel doit s'appliquer l'évaluation.</param>
      <returns>Résultat de l'expression (booléen, nombre, chaîne ou ensemble de nœuds). Correspond aux objets <see cref="T:System.Boolean" />, <see cref="T:System.Double" />, <see cref="T:System.String" /> ou <see cref="T:System.Xml.XPath.XPathNodeIterator" /> respectivement.</returns>
      <exception cref="T:System.ArgumentException">Le type de retour de l'expression XPath est un ensemble de nœuds.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">L'expression XPath n'est pas valide.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.GetAttribute(System.String,System.String)">
      <summary>Obtient la valeur de l'attribut avec le nom local et l'URI de l'espace de noms spécifiés.</summary>
      <param name="localName">Le nom local de l'attribut. <paramref name="localName" /> respecte la casse.</param>
      <param name="namespaceURI">L'URI de l'espace de noms de l'attribut.</param>
      <returns>
        <see cref="T:System.String" /> qui contient la valeur de l'attribut spécifié ; <see cref="F:System.String.Empty" /> si un attribut correspondant est introuvable ou si <see cref="T:System.Xml.XPath.XPathNavigator" /> n'est pas positionné sur un nœud d'élément.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.GetNamespace(System.String)">
      <summary>Retourne la valeur du nœud d'espace de noms correspondant au nom local spécifié.</summary>
      <param name="name">Nom local du nœud d'espace de noms.</param>
      <returns>
        <see cref="T:System.String" /> qui contient la valeur du nœud d'espace de noms ; <see cref="F:System.String.Empty" /> si un attribut correspondant est introuvable ou si <see cref="T:System.Xml.XPath.XPathNavigator" /> n'est pas positionné sur un nœud d'élément.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>Retourne tous les espaces de noms dans la portée du nœud actuel.</summary>
      <param name="scope">Valeur <see cref="T:System.Xml.XmlNamespaceScope" /> spécifiant les espaces de noms à retourner.</param>
      <returns>Collection <see cref="T:System.Collections.Generic.IDictionary`2" /> de noms d'espaces de noms indexée par préfixe.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.HasAttributes">
      <summary>Obtient une valeur indiquant si le nœud actuel a des attributs.</summary>
      <returns>
        <see langword="true" />Si le nœud actuel possède des attributs; retourne <see langword="false" /> si le nœud actuel n’a pas d’attributs ou si <see cref="T:System.Xml.XPath.XPathNavigator" /> le n’est pas positionné sur un nœud d’élément.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.HasChildren">
      <summary>Obtient une valeur indiquant si le nœud actuel a des nœuds enfants.</summary>
      <returns>
        <see langword="true" /> si le nœud actuel possède des nœuds enfants ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.InnerXml">
      <summary>Obtient ou définit le balisage représentant les nœuds enfants du nœud actuel.</summary>
      <returns>
        <see cref="T:System.String" /> contenant la balise des nœuds enfants du nœud actuel.</returns>
      <exception cref="T:System.InvalidOperationException">La propriété <see cref="P:System.Xml.XPath.XPathNavigator.InnerXml" /> ne peut pas être définie.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertAfter">
      <summary>Retourne un objet <see cref="T:System.Xml.XmlWriter" /> permettant de créer un nœud frère après le nœud sélectionné.</summary>
      <returns>Objet <see cref="T:System.Xml.XmlWriter" /> permettant de créer un nœud frère après le nœud sélectionné.</returns>
      <exception cref="T:System.InvalidOperationException">La position de <see cref="T:System.Xml.XPath.XPathNavigator" /> ne permet pas l'insertion d'un nouveau nœud frère après le nœud actuel.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge l'édition.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.String)">
      <summary>Crée un nouveau nœud frère après le nœud sélectionné actuellement à l'aide de la chaîne XML spécifiée.</summary>
      <param name="newSibling">Chaîne de données XML pour le nouveau nœud frère.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre de la chaîne XML est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">La position de <see cref="T:System.Xml.XPath.XPathNavigator" /> ne permet pas l'insertion d'un nouveau nœud frère après le nœud actuel.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge l'édition.</exception>
      <exception cref="T:System.Xml.XmlException">Le paramètre de la chaîne XML n'a pas une forme correcte.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.Xml.XmlReader)">
      <summary>Crée un nœud frère après le nœud sélectionné à l'aide du contenu XML de l'objet <see cref="T:System.Xml.XmlReader" /> spécifié.</summary>
      <param name="newSibling">Objet <see cref="T:System.Xml.XmlReader" /> positionné sur les données XML pour le nouveau nœud frère.</param>
      <exception cref="T:System.ArgumentException">L'objet <see cref="T:System.Xml.XmlReader" /> est dans un état d'erreur ou est fermé.</exception>
      <exception cref="T:System.ArgumentNullException">Le paramètre de l'objet <see cref="T:System.Xml.XmlReader" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">La position de <see cref="T:System.Xml.XPath.XPathNavigator" /> ne permet pas l'insertion d'un nouveau nœud frère après le nœud actuel.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge l'édition.</exception>
      <exception cref="T:System.Xml.XmlException">Le contenu XML du paramètre objet <see cref="T:System.Xml.XmlReader" /> n'est pas correct.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.Xml.XPath.XPathNavigator)">
      <summary>Crée un nœud frère après le nœud sélectionné à l'aide des nœuds dans l'objet <see cref="T:System.Xml.XPath.XPathNavigator" /> spécifié.</summary>
      <param name="newSibling">Objet <see cref="T:System.Xml.XPath.XPathNavigator" /> positionné sur le nœud à ajouter en tant que nouveau nœud frère.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre de l'objet <see cref="T:System.Xml.XPath.XPathNavigator" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">La position de <see cref="T:System.Xml.XPath.XPathNavigator" /> ne permet pas l'insertion d'un nouveau nœud frère après le nœud actuel.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge l'édition.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertBefore">
      <summary>Retourne un objet <see cref="T:System.Xml.XmlWriter" /> permettant de créer un nœud frère avant le nœud sélectionné.</summary>
      <returns>Objet <see cref="T:System.Xml.XmlWriter" /> permettant de créer un nœud frère avant le nœud sélectionné.</returns>
      <exception cref="T:System.InvalidOperationException">La position de <see cref="T:System.Xml.XPath.XPathNavigator" /> ne permet pas l'insertion d'un nouveau nœud frère avant le nœud actuel.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge l'édition.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.String)">
      <summary>Crée un nœud frère avant le nœud sélectionné à l'aide de la chaîne XML spécifiée.</summary>
      <param name="newSibling">Chaîne de données XML pour le nouveau nœud frère.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre de la chaîne XML est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">La position de <see cref="T:System.Xml.XPath.XPathNavigator" /> ne permet pas l'insertion d'un nouveau nœud frère avant le nœud actuel.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge l'édition.</exception>
      <exception cref="T:System.Xml.XmlException">Le paramètre de la chaîne XML n'a pas une forme correcte.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.Xml.XmlReader)">
      <summary>Crée un nœud frère avant le nœud sélectionné à l'aide du contenu XML de l'objet <see cref="T:System.Xml.XmlReader" /> spécifié.</summary>
      <param name="newSibling">Objet <see cref="T:System.Xml.XmlReader" /> positionné sur les données XML pour le nouveau nœud frère.</param>
      <exception cref="T:System.ArgumentException">L'objet <see cref="T:System.Xml.XmlReader" /> est dans un état d'erreur ou est fermé.</exception>
      <exception cref="T:System.ArgumentNullException">Le paramètre de l'objet <see cref="T:System.Xml.XmlReader" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">La position de <see cref="T:System.Xml.XPath.XPathNavigator" /> ne permet pas l'insertion d'un nouveau nœud frère avant le nœud actuel.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge l'édition.</exception>
      <exception cref="T:System.Xml.XmlException">Le contenu XML du paramètre objet <see cref="T:System.Xml.XmlReader" /> n'est pas correct.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.Xml.XPath.XPathNavigator)">
      <summary>Crée un nœud frère avant le nœud sélectionné à l'aide des nœuds dans <see cref="T:System.Xml.XPath.XPathNavigator" /> spécifié.</summary>
      <param name="newSibling">Objet <see cref="T:System.Xml.XPath.XPathNavigator" /> positionné sur le nœud à ajouter en tant que nouveau nœud frère.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre de l'objet <see cref="T:System.Xml.XPath.XPathNavigator" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">La position de <see cref="T:System.Xml.XPath.XPathNavigator" /> ne permet pas l'insertion d'un nouveau nœud frère avant le nœud actuel.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge l'édition.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertElementAfter(System.String,System.String,System.String,System.String)">
      <summary>Crée un élément frère après le nœud actuel à l'aide du préfixe d'espace de noms, du nom local et de l'URI d'espace de noms spécifiés, avec la valeur spécifiée.</summary>
      <param name="prefix">Préfixe d'espace de noms du nouvel élément enfant (le cas échéant).</param>
      <param name="localName">Nom local du nouvel élément enfant (le cas échéant).</param>
      <param name="namespaceURI">URI de l'espace de noms du nouvel élément enfant (le cas échéant). <see cref="F:System.String.Empty" /> et <see langword="null" /> sont équivalents.</param>
      <param name="value">Valeur du nouvel élément enfant. Si <see cref="F:System.String.Empty" /> ou <see langword="null" /> est passé, un élément vide est créé.</param>
      <exception cref="T:System.InvalidOperationException">La position de <see cref="T:System.Xml.XPath.XPathNavigator" /> ne permet pas l'insertion d'un nouveau nœud frère après le nœud actuel.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge l'édition.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertElementBefore(System.String,System.String,System.String,System.String)">
      <summary>Crée un élément frère avant le nœud actuel à l'aide du préfixe d'espace de noms, du nom local et de l'URI d'espace de noms spécifiés, avec la valeur spécifiée.</summary>
      <param name="prefix">Préfixe d'espace de noms du nouvel élément enfant (le cas échéant).</param>
      <param name="localName">Nom local du nouvel élément enfant (le cas échéant).</param>
      <param name="namespaceURI">URI de l'espace de noms du nouvel élément enfant (le cas échéant). <see cref="F:System.String.Empty" /> et <see langword="null" /> sont équivalents.</param>
      <param name="value">Valeur du nouvel élément enfant. Si <see cref="F:System.String.Empty" /> ou <see langword="null" /> est passé, un élément vide est créé.</param>
      <exception cref="T:System.InvalidOperationException">La position de <see cref="T:System.Xml.XPath.XPathNavigator" /> ne permet pas l'insertion d'un nouveau nœud frère avant le nœud actuel.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge l'édition.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.IsDescendant(System.Xml.XPath.XPathNavigator)">
      <summary>Détermine si le <see cref="T:System.Xml.XPath.XPathNavigator" /> spécifié est un descendant du <see cref="T:System.Xml.XPath.XPathNavigator" /> en cours.</summary>
      <param name="nav">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> à comparer à <see cref="T:System.Xml.XPath.XPathNavigator" />.</param>
      <returns>Retourne <see langword="true" /> si le <see cref="T:System.Xml.XPath.XPathNavigator" /> spécifié est un descendant de <see cref="T:System.Xml.XPath.XPathNavigator" /> en cours ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.IsEmptyElement">
      <summary>En cas de substitution dans une classe dérivée, obtient une valeur qui indique si le nœud actuel est un élément vide sans étiquette d’élément de fin.</summary>
      <returns>
        <see langword="true" /> si le nœud actuel est un élément vide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.IsNode">
      <summary>Obtient une valeur qui indique si le nœud actuel représente un nœud XPath.</summary>
      <returns>Retourne toujours <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.IsSamePosition(System.Xml.XPath.XPathNavigator)">
      <summary>En cas de substitution dans une classe dérivée, détermine si le <see cref="T:System.Xml.XPath.XPathNavigator" /> actuel est à la même position que le <see cref="T:System.Xml.XPath.XPathNavigator" /> spécifié.</summary>
      <param name="other">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> à comparer à <see cref="T:System.Xml.XPath.XPathNavigator" />.</param>
      <returns>
        <see langword="true" /> si les deux objets <see cref="T:System.Xml.XPath.XPathNavigator" /> sont à la même position ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.LocalName">
      <summary>En cas de substitution dans une classe dérivée, obtient le <see cref="P:System.Xml.XPath.XPathNavigator.Name" /> du nœud actuel sans préfixe d'espace de noms.</summary>
      <returns>
        <see cref="T:System.String" /> qui contient le nom local du nœud actuel ou <see cref="F:System.String.Empty" /> si le nœud actuel n'a pas de nom (par exemple, nœuds de texte ou de commentaire).</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.LookupNamespace(System.String)">
      <summary>Obtient l'URI de l'espace de noms du préfixe spécifié.</summary>
      <param name="prefix">Préfixe dont vous souhaitez résoudre l'URI de l'espace de noms. Pour mettre en correspondance l'espace de noms par défaut, passez <see cref="F:System.String.Empty" />.</param>
      <returns>
        <see cref="T:System.String" /> qui contient l'URI d'espace de noms attribué au préfixe d'espace de noms spécifié ; <see langword="null" /> si aucun URI d'espace de noms n'est assigné au préfixe spécifié. La <see cref="T:System.String" /> retournée est atomisée.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.LookupPrefix(System.String)">
      <summary>Obtient le préfixe déclaré pour l'URI d'espace de noms spécifié.</summary>
      <param name="namespaceURI">URI d'espace de noms à trouver pour le préfixe.</param>
      <returns>
        <see cref="T:System.String" /> qui contient le préfixe d'espace de noms assigné à l'URI d'espace de noms spécifié ; sinon, <see cref="F:System.String.Empty" />, si aucun préfixe n'est assigné à l'URI d'espace de noms spécifié. La <see cref="T:System.String" /> retournée est atomisée.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Matches(System.String)">
      <summary>Détermine si le nœud actuel correspond à l'expression XPath spécifiée.</summary>
      <param name="xpath">Expression XPath.</param>
      <returns>
        <see langword="true" /> si le nœud actuel correspond à l'expression XPath spécifiée ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">L'expression XPath ne peut pas être évaluée.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">L'expression XPath n'est pas valide.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Matches(System.Xml.XPath.XPathExpression)">
      <summary>Détermine si le nœud actuel correspond au <see cref="T:System.Xml.XPath.XPathExpression" /> spécifié.</summary>
      <param name="expr">Objet <see cref="T:System.Xml.XPath.XPathExpression" /> contenant l'expression XPath compilée.</param>
      <returns>
        <see langword="true" /> si le nœud actuel correspond à <see cref="T:System.Xml.XPath.XPathExpression" /> ; sinon <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">L'expression XPath ne peut pas être évaluée.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">L'expression XPath n'est pas valide.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveTo(System.Xml.XPath.XPathNavigator)">
      <summary>En cas de substitution dans une classe dérivée, déplace <see cref="T:System.Xml.XPath.XPathNavigator" /> vers la même position que celle du <see cref="T:System.Xml.XPath.XPathNavigator" /> spécifié.</summary>
      <param name="other">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> placé sur le nœud vers lequel vous souhaitez vous déplacer.</param>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Xml.XPath.XPathNavigator" /> se déplace correctement vers la même position que celle du <see cref="T:System.Xml.XPath.XPathNavigator" /> spécifié ; sinon, <see langword="false" />. Si <see langword="false" />, la position de <see cref="T:System.Xml.XPath.XPathNavigator" /> demeure inchangée.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToAttribute(System.String,System.String)">
      <summary>Déplace le <see cref="T:System.Xml.XPath.XPathNavigator" /> vers l'attribut avec le nom local et l'URI d'espace de noms spécifiés.</summary>
      <param name="localName">Le nom local de l'attribut.</param>
      <param name="namespaceURI">L'URI d'espace de noms de l'attribut ; <see langword="null" /> pour un espace de noms vide.</param>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Xml.XPath.XPathNavigator" /> se déplace correctement vers l’attribut ; sinon, <see langword="false" />. Si <see langword="false" />, la position de <see cref="T:System.Xml.XPath.XPathNavigator" /> demeure inchangée.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToChild(System.String,System.String)">
      <summary>Déplace <see cref="T:System.Xml.XPath.XPathNavigator" /> vers le nœud enfant doté du nom local et de l'URI d'espace de noms spécifiés.</summary>
      <param name="localName">Nom local du nœud enfant vers lequel se déplacer.</param>
      <param name="namespaceURI">URI d'espace de noms du nœud enfant vers lequel se déplacer.</param>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Xml.XPath.XPathNavigator" /> se déplace correctement vers le nœud enfant ; sinon, <see langword="false" />. Si <see langword="false" />, la position de <see cref="T:System.Xml.XPath.XPathNavigator" /> demeure inchangée.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToChild(System.Xml.XPath.XPathNodeType)">
      <summary>Déplace le <see cref="T:System.Xml.XPath.XPathNavigator" /> vers le nœud enfant du <see cref="T:System.Xml.XPath.XPathNodeType" /> spécifié.</summary>
      <param name="type">
        <see cref="T:System.Xml.XPath.XPathNodeType" /> du nœud enfant vers lequel se déplacer.</param>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Xml.XPath.XPathNavigator" /> se déplace correctement vers le nœud enfant ; sinon, <see langword="false" />. Si <see langword="false" />, la position de <see cref="T:System.Xml.XPath.XPathNavigator" /> demeure inchangée.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirst">
      <summary>Déplace l'objet <see cref="T:System.Xml.XPath.XPathNavigator" /> vers le premier nœud frère du nœud actuel.</summary>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Xml.XPath.XPathNavigator" /> se déplace correctement vers le premier nœud frère du nœud actuel ; <see langword="false" /> s’il n’existe aucun premier nœud frère ou si le <see cref="T:System.Xml.XPath.XPathNavigator" /> est actuellement positionné sur un nœud d’attribut. Si le <see cref="T:System.Xml.XPath.XPathNavigator" /> est déjà positionné sur le premier frère, <see cref="T:System.Xml.XPath.XPathNavigator" /> retourne <see langword="true" /> et ne déplace pas sa position.  
Si <see cref="M:System.Xml.XPath.XPathNavigator.MoveToFirst" /> retourne <see langword="false" /> parce qu'il n'y a pas de premier frère ou si <see cref="T:System.Xml.XPath.XPathNavigator" /> est actuellement positionné sur un attribut, la position du <see cref="T:System.Xml.XPath.XPathNavigator" /> ne change pas.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirstAttribute">
      <summary>En cas de substitution dans une classe dérivée, déplace <see cref="T:System.Xml.XPath.XPathNavigator" /> vers le premier attribut du nœud actuel.</summary>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Xml.XPath.XPathNavigator" /> se déplace correctement vers le premier attribut du nœud actuel ; sinon, <see langword="false" />. Si <see langword="false" />, la position de <see cref="T:System.Xml.XPath.XPathNavigator" /> demeure inchangée.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirstChild">
      <summary>En cas de substitution dans une classe dérivée, déplace <see cref="T:System.Xml.XPath.XPathNavigator" /> vers le premier attribut enfant du nœud actuel.</summary>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Xml.XPath.XPathNavigator" /> se déplace correctement vers le premier nœud enfant du nœud actuel ; sinon, <see langword="false" />. Si <see langword="false" />, la position de <see cref="T:System.Xml.XPath.XPathNavigator" /> demeure inchangée.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirstNamespace">
      <summary>Déplace <see cref="T:System.Xml.XPath.XPathNavigator" /> vers le premier nœud d'espace du nœud actuel.</summary>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Xml.XPath.XPathNavigator" /> se déplace correctement vers le premier nœud d’espace de noms ; sinon, <see langword="false" />. Si <see langword="false" />, la position de <see cref="T:System.Xml.XPath.XPathNavigator" /> demeure inchangée.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirstNamespace(System.Xml.XPath.XPathNamespaceScope)">
      <summary>En cas de substitution dans une classe dérivée, déplace <see cref="T:System.Xml.XPath.XPathNavigator" /> vers le premier nœud d'espace de noms qui correspond à la <see cref="T:System.Xml.XPath.XPathNamespaceScope" /> spécifiée.</summary>
      <param name="namespaceScope">Valeur de <see cref="T:System.Xml.XPath.XPathNamespaceScope" /> décrivant la portée espace de noms.</param>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Xml.XPath.XPathNavigator" /> se déplace correctement vers le premier nœud d’espace de noms ; sinon, <see langword="false" />. Si <see langword="false" />, la position de <see cref="T:System.Xml.XPath.XPathNavigator" /> demeure inchangée.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.String,System.String)">
      <summary>Déplace le <see cref="T:System.Xml.XPath.XPathNavigator" /> vers l'élément dont le nom local et l'URI d'espace de noms sont spécifiés dans l'ordre du document.</summary>
      <param name="localName">Le nom local de l'élément.</param>
      <param name="namespaceURI">L'URI de l'espace de noms de l'élément.</param>
      <returns>
        <see langword="true" /> si le déplacement de <see cref="T:System.Xml.XPath.XPathNavigator" /> est réussi ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.String,System.String,System.Xml.XPath.XPathNavigator)">
      <summary>Déplace le <see cref="T:System.Xml.XPath.XPathNavigator" /> vers l'élément avec le nom local et l'URI d'espace de noms spécifiés, à la limite spécifiée, dans l'ordre du document.</summary>
      <param name="localName">Le nom local de l'élément.</param>
      <param name="namespaceURI">L'URI de l'espace de noms de l'élément.</param>
      <param name="end">Objet <see cref="T:System.Xml.XPath.XPathNavigator" /> positionné sur la limite de l'élément que le <see cref="T:System.Xml.XPath.XPathNavigator" /> actuel ne dépassera pas en recherchant l'élément suivant.</param>
      <returns>
        <see langword="true" /> si le déplacement de <see cref="T:System.Xml.XPath.XPathNavigator" /> est réussi ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.Xml.XPath.XPathNodeType)">
      <summary>Déplace le <see cref="T:System.Xml.XPath.XPathNavigator" /> vers l'élément suivant du <see cref="T:System.Xml.XPath.XPathNodeType" /> spécifié dans l'ordre du document.</summary>
      <param name="type">
        <see cref="T:System.Xml.XPath.XPathNodeType" /> de l'élément. <see cref="T:System.Xml.XPath.XPathNodeType" /> ne peut pas être <see cref="F:System.Xml.XPath.XPathNodeType.Attribute" /> ou <see cref="F:System.Xml.XPath.XPathNodeType.Namespace" />.</param>
      <returns>
        <see langword="true" /> si le déplacement de <see cref="T:System.Xml.XPath.XPathNavigator" /> est réussi ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.Xml.XPath.XPathNodeType,System.Xml.XPath.XPathNavigator)">
      <summary>Déplace le <see cref="T:System.Xml.XPath.XPathNavigator" /> vers l'élément suivant du <see cref="T:System.Xml.XPath.XPathNodeType" /> spécifié, à la limite spécifiée, dans l'ordre du document.</summary>
      <param name="type">
        <see cref="T:System.Xml.XPath.XPathNodeType" /> de l'élément. <see cref="T:System.Xml.XPath.XPathNodeType" /> ne peut pas être <see cref="F:System.Xml.XPath.XPathNodeType.Attribute" /> ou <see cref="F:System.Xml.XPath.XPathNodeType.Namespace" />.</param>
      <param name="end">Objet <see cref="T:System.Xml.XPath.XPathNavigator" /> positionné sur la limite de l'élément que le <see cref="T:System.Xml.XPath.XPathNavigator" /> actuel ne dépassera pas en recherchant l'élément suivant.</param>
      <returns>
        <see langword="true" /> si le déplacement de <see cref="T:System.Xml.XPath.XPathNavigator" /> est réussi ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToId(System.String)">
      <summary>En cas de substitution dans une classe dérivée, se déplace vers le nœud qui a un attribut de type <c>ID</c> dont la valeur correspond à la <see cref="T:System.String" /> spécifiée.</summary>
      <param name="id">
        <see cref="T:System.String" /> représentant la valeur <c>ID</c> du nœud vers lequel vous souhaitez vous déplacer.</param>
      <returns>
        <see langword="true" /> si <see cref="T:System.Xml.XPath.XPathNavigator" /> réussit son déplacement ; sinon, <see langword="false" />. Si <see langword="false" />, la position du navigateur demeure inchangée.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNamespace(System.String)">
      <summary>Déplace <see cref="T:System.Xml.XPath.XPathNavigator" /> vers le nœud d'espace de noms correspondant au préfixe d'espace de noms.</summary>
      <param name="name">Préfixe de l'espace de noms de ce nœud d'espace de noms.</param>
      <returns>
        <see langword="true" /> si le déplacement de <see cref="T:System.Xml.XPath.XPathNavigator" /> vers l'espace de noms spécifié est réussi ; <see langword="false" /> si aucun nœud d'espace de noms correspondant n'est trouvé ou si le <see cref="T:System.Xml.XPath.XPathNavigator" /> n'est pas positionné sur un nœud d'élément. Si <see langword="false" />, la position de <see cref="T:System.Xml.XPath.XPathNavigator" /> demeure inchangée.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNext">
      <summary>En cas de substitution dans une classe dérivée, déplace <see cref="T:System.Xml.XPath.XPathNavigator" /> vers le nœud frère suivant du nœud actuel.</summary>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Xml.XPath.XPathNavigator" /> se déplace correctement vers le nœud frère suivant ; sinon, <see langword="false" /> s'il n'existe plus de nœuds frères ou si le <see cref="T:System.Xml.XPath.XPathNavigator" /> est positionné sur un nœud d'attribut. Si <see langword="false" />, la position de <see cref="T:System.Xml.XPath.XPathNavigator" /> demeure inchangée.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNext(System.String,System.String)">
      <summary>Déplace <see cref="T:System.Xml.XPath.XPathNavigator" /> vers le nœud frère suivant doté du nom local et de l'URI d'espace de noms spécifiés.</summary>
      <param name="localName">Nom local du nœud frère suivant vers lequel se déplacer.</param>
      <param name="namespaceURI">URI d'espace de noms du nœud frère suivant vers lequel se déplacer.</param>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Xml.XPath.XPathNavigator" /> se déplace correctement vers le nœud frère suivant ; <see langword="false" /> s’il n’existe plus de frères ou si le <see cref="T:System.Xml.XPath.XPathNavigator" /> est actuellement positionné sur un nœud d’attribut. Si <see langword="false" />, la position de <see cref="T:System.Xml.XPath.XPathNavigator" /> demeure inchangée.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNext(System.Xml.XPath.XPathNodeType)">
      <summary>Déplace le <see cref="T:System.Xml.XPath.XPathNavigator" /> vers le nœud frère suivant du nœud actuel qui correspond au <see cref="T:System.Xml.XPath.XPathNodeType" /> spécifié.</summary>
      <param name="type">
        <see cref="T:System.Xml.XPath.XPathNodeType" /> du nœud frère vers lequel se déplacer.</param>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Xml.XPath.XPathNavigator" /> se déplace correctement vers le nœud frère suivant ; sinon, <see langword="false" /> s'il n'existe plus de nœuds frères ou si le <see cref="T:System.Xml.XPath.XPathNavigator" /> est positionné sur un nœud d'attribut. Si <see langword="false" />, la position de <see cref="T:System.Xml.XPath.XPathNavigator" /> demeure inchangée.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNextAttribute">
      <summary>En cas de substitution dans une classe dérivée, déplace le <see cref="T:System.Xml.XPath.XPathNavigator" /> vers l'attribut suivant.</summary>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Xml.XPath.XPathNavigator" /> se déplace correctement vers l’attribut suivant ; <see langword="false" /> s’il n’existe plus d’attributs. Si <see langword="false" />, la position de <see cref="T:System.Xml.XPath.XPathNavigator" /> demeure inchangée.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNextNamespace">
      <summary>Déplace <see cref="T:System.Xml.XPath.XPathNavigator" /> vers le nœud d'espace de noms suivant.</summary>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Xml.XPath.XPathNavigator" /> se déplace correctement vers le nœud d’espace de noms suivant ; sinon, <see langword="false" />. Si <see langword="false" />, la position de <see cref="T:System.Xml.XPath.XPathNavigator" /> demeure inchangée.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNextNamespace(System.Xml.XPath.XPathNamespaceScope)">
      <summary>En cas de substitution dans une classe dérivée, déplace <see cref="T:System.Xml.XPath.XPathNavigator" /> vers le nœud d'espace de noms suivant qui correspond à la <see cref="T:System.Xml.XPath.XPathNamespaceScope" /> spécifiée.</summary>
      <param name="namespaceScope">Valeur de <see cref="T:System.Xml.XPath.XPathNamespaceScope" /> décrivant la portée espace de noms.</param>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Xml.XPath.XPathNavigator" /> se déplace correctement vers le nœud d’espace de noms suivant ; sinon, <see langword="false" />. Si <see langword="false" />, la position de <see cref="T:System.Xml.XPath.XPathNavigator" /> demeure inchangée.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToParent">
      <summary>En cas de substitution dans une classe dérivée, déplace <see cref="T:System.Xml.XPath.XPathNavigator" /> vers le nœud parent du nœud actuel.</summary>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Xml.XPath.XPathNavigator" /> se déplace correctement vers le premier nœud parent du nœud actuel ; sinon, <see langword="false" />. Si <see langword="false" />, la position de <see cref="T:System.Xml.XPath.XPathNavigator" /> demeure inchangée.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToPrevious">
      <summary>En cas de substitution dans une classe dérivée, déplace <see cref="T:System.Xml.XPath.XPathNavigator" /> vers le nœud frère précédent du nœud actuel.</summary>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Xml.XPath.XPathNavigator" /> se déplace correctement vers le nœud frère précédent ; sinon, <see langword="false" /> s’il n’existe pas de nœud frère précédent ou si le <see cref="T:System.Xml.XPath.XPathNavigator" /> est actuellement positionné sur un nœud d’attribut. Si <see langword="false" />, la position de <see cref="T:System.Xml.XPath.XPathNavigator" /> demeure inchangée.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToRoot">
      <summary>Déplace <see cref="T:System.Xml.XPath.XPathNavigator" /> vers le nœud racine auquel le nœud actuel appartient.</summary>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.Name">
      <summary>En cas de substitution dans une classe dérivée, obtient le nom qualifié du nœud actuel.</summary>
      <returns>
        <see cref="T:System.String" /> qui contient le <see cref="P:System.Xml.XPath.XPathNavigator.Name" /> qualifié du nœud actuel ou <see cref="F:System.String.Empty" /> si le nœud actuel n'a pas de nom (par exemple, nœuds de texte ou de commentaire).</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.NamespaceURI">
      <summary>En cas de substitution dans une classe dérivée, obtient l'URI de l'espace de noms du nœud actuel.</summary>
      <returns>
        <see cref="T:System.String" /> qui contient l'URI d'espace de noms du nœud actuel ou <see cref="F:System.String.Empty" /> si le nœud actuel n'a aucun URI d'espace de noms.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.NameTable">
      <summary>En cas de substitution dans une classe dérivée, obtient <see cref="T:System.Xml.XmlNameTable" /> de <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <returns>Objet <see cref="T:System.Xml.XmlNameTable" /> qui vous permet d'obtenir la version atomisée d'une <see cref="T:System.String" /> au sein du document XML.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.NavigatorComparer">
      <summary>Obtient un <see cref="T:System.Collections.IEqualityComparer" /> utilisé pour la comparaison d'égalité d'objets <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <returns>
        <see cref="T:System.Collections.IEqualityComparer" /> utilisé pour la comparaison d'égalité d'objets <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.NodeType">
      <summary>En cas de substitution dans une classe dérivée, obtient le <see cref="T:System.Xml.XPath.XPathNodeType" /> du nœud actuel.</summary>
      <returns>Une des valeurs de <see cref="T:System.Xml.XPath.XPathNodeType" /> représentant le nœud actuel.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.OuterXml">
      <summary>Obtient ou définit le balisage représentant les balises d'ouverture et de fermeture du nœud actuel et de ses nœuds enfants.</summary>
      <returns>
        <see cref="T:System.String" /> qui contient le balisage représentant les balises d'ouverture et de fermeture du nœud actuel et de ses nœuds enfants.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.Prefix">
      <summary>En cas de substitution dans une classe dérivée, obtient le préfixe de l'espace de noms associé au nœud actuel.</summary>
      <returns>
        <see cref="T:System.String" /> qui contient le préfixe de l'espace de noms associé au nœud actuel.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.PrependChild">
      <summary>Retourne un objet <see cref="T:System.Xml.XmlWriter" /> permettant de créer un nœud enfant au début de la liste de nœuds enfants du nœud actuel.</summary>
      <returns>Objet <see cref="T:System.Xml.XmlWriter" /> permettant de créer un nœud enfant au début de la liste de nœuds enfants du nœud actuel.</returns>
      <exception cref="T:System.InvalidOperationException">Le nœud actuel sur lequel <see cref="T:System.Xml.XPath.XPathNavigator" /> est positionné ne permet pas l'ajout d'un nouveau nœud enfant en début de liste.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge l'édition.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.PrependChild(System.String)">
      <summary>Crée un nœud enfant au début de la liste de nœuds enfants du nœud actuel à l'aide de la chaîne XML spécifiée.</summary>
      <param name="newChild">Chaîne de données XML pour le nouveau nœud enfant.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre de la chaîne XML est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Le nœud actuel sur lequel <see cref="T:System.Xml.XPath.XPathNavigator" /> est positionné ne permet pas l'ajout d'un nouveau nœud enfant en début de liste.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge l'édition.</exception>
      <exception cref="T:System.Xml.XmlException">Le paramètre de la chaîne XML n'a pas une forme correcte.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.PrependChild(System.Xml.XmlReader)">
      <summary>Crée un nœud enfant au début de la liste de nœuds enfants du nœud actuel à l'aide du contenu XML de l'objet <see cref="T:System.Xml.XmlReader" /> spécifié.</summary>
      <param name="newChild">Objet <see cref="T:System.Xml.XmlReader" /> positionné sur les données XML pour le nouveau nœud enfant.</param>
      <exception cref="T:System.ArgumentException">L'objet <see cref="T:System.Xml.XmlReader" /> est dans un état d'erreur ou est fermé.</exception>
      <exception cref="T:System.ArgumentNullException">Le paramètre de l'objet <see cref="T:System.Xml.XmlReader" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Le nœud actuel sur lequel <see cref="T:System.Xml.XPath.XPathNavigator" /> est positionné ne permet pas l'ajout d'un nouveau nœud enfant en début de liste.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge l'édition.</exception>
      <exception cref="T:System.Xml.XmlException">Le contenu XML du paramètre objet <see cref="T:System.Xml.XmlReader" /> n'est pas correct.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.PrependChild(System.Xml.XPath.XPathNavigator)">
      <summary>Crée un nœud enfant au début de la liste de nœuds enfants du nœud actuel à l'aide des nœuds de l'objet <see cref="T:System.Xml.XPath.XPathNavigator" /> spécifié.</summary>
      <param name="newChild">Objet <see cref="T:System.Xml.XPath.XPathNavigator" /> positionné sur le nœud à ajouter en tant que nouveau nœud enfant.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre de l'objet <see cref="T:System.Xml.XPath.XPathNavigator" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Le nœud actuel sur lequel <see cref="T:System.Xml.XPath.XPathNavigator" /> est positionné ne permet pas l'ajout d'un nouveau nœud enfant en début de liste.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge l'édition.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.PrependChildElement(System.String,System.String,System.String,System.String)">
      <summary>Crée un élément enfant au début de la liste de nœuds enfants du nœud actuel à l'aide du préfixe d'espace de noms, du nom local et de l'URI d'espace de noms spécifiés avec la valeur spécifiée.</summary>
      <param name="prefix">Préfixe d'espace de noms du nouvel élément enfant (le cas échéant).</param>
      <param name="localName">Nom local du nouvel élément enfant (le cas échéant).</param>
      <param name="namespaceURI">URI de l'espace de noms du nouvel élément enfant (le cas échéant). <see cref="F:System.String.Empty" /> et <see langword="null" /> sont équivalents.</param>
      <param name="value">Valeur du nouvel élément enfant. Si <see cref="F:System.String.Empty" /> ou <see langword="null" /> est passé, un élément vide est créé.</param>
      <exception cref="T:System.InvalidOperationException">Le nœud actuel sur lequel <see cref="T:System.Xml.XPath.XPathNavigator" /> est positionné ne permet pas l'ajout d'un nouveau nœud enfant en début de liste.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge l'édition.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ReadSubtree">
      <summary>Retourne un objet <see cref="T:System.Xml.XmlReader" /> qui contient le nœud actuel et ses nœuds enfants.</summary>
      <returns>Objet <see cref="T:System.Xml.XmlReader" /> qui contient le nœud actuel et ses nœuds enfants.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> n'est pas positionné sur un nœud d'élément ou sur le nœud racine.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ReplaceRange(System.Xml.XPath.XPathNavigator)">
      <summary>Remplace une plage de nœuds frères allant du nœud actuel au nœud spécifié.</summary>
      <param name="lastSiblingToReplace">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> positionné sur le dernier nœud frère de la plage à remplacer.</param>
      <returns>Objet <see cref="T:System.Xml.XmlWriter" /> permettant de spécifier la plage de remplacement.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> spécifié est <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge l'édition.</exception>
      <exception cref="T:System.InvalidOperationException">Le dernier nœud à remplacer spécifié n'est pas un nœud frère valide du nœud actuel.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.String)">
      <summary>Remplace le nœud actuel par le contenu de la chaîne spécifiée.</summary>
      <param name="newNode">Chaîne de données XML pour le nouveau nœud.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre de la chaîne XML est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> n'est pas positionné sur un élément, du texte, une instruction de traitement ou un nœud de commentaire.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge l'édition.</exception>
      <exception cref="T:System.Xml.XmlException">Le paramètre de la chaîne XML n'a pas une forme correcte.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.Xml.XmlReader)">
      <summary>Remplace le nœud actuel par le contenu de l'objet <see cref="T:System.Xml.XmlReader" /> spécifié.</summary>
      <param name="newNode">Objet <see cref="T:System.Xml.XmlReader" /> positionné sur les données XML pour le nouveau nœud.</param>
      <exception cref="T:System.ArgumentException">L'objet <see cref="T:System.Xml.XmlReader" /> est dans un état d'erreur ou est fermé.</exception>
      <exception cref="T:System.ArgumentNullException">Le paramètre de l'objet <see cref="T:System.Xml.XmlReader" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> n'est pas positionné sur un élément, du texte, une instruction de traitement ou un nœud de commentaire.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge l'édition.</exception>
      <exception cref="T:System.Xml.XmlException">Le contenu XML du paramètre objet <see cref="T:System.Xml.XmlReader" /> n'est pas correct.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.Xml.XPath.XPathNavigator)">
      <summary>Remplace le nœud actuel par le contenu de l'objet <see cref="T:System.Xml.XPath.XPathNavigator" /> spécifié.</summary>
      <param name="newNode">Objet <see cref="T:System.Xml.XPath.XPathNavigator" /> positionné sur le nouveau nœud.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre de l'objet <see cref="T:System.Xml.XPath.XPathNavigator" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> n'est pas positionné sur un élément, du texte, une instruction de traitement ou un nœud de commentaire.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge l'édition.</exception>
      <exception cref="T:System.Xml.XmlException">Le contenu XML du paramètre objet <see cref="T:System.Xml.XPath.XPathNavigator" /> n'est pas correct.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.SchemaInfo">
      <summary>Obtient les informations de schéma qui ont été assignées au nœud actuel à la suite de la validation du schéma.</summary>
      <returns>Objet <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> qui contient les informations de schéma du nœud actuel.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Select(System.String)">
      <summary>Sélectionne un ensemble de nœuds à l'aide de l'expression XPath spécifiée.</summary>
      <param name="xpath">Chaîne <see cref="T:System.String" /> représentant une expression XPath.</param>
      <returns>
        <see cref="T:System.Xml.XPath.XPathNodeIterator" /> pointant vers l'ensemble des nœuds sélectionnés.</returns>
      <exception cref="T:System.ArgumentException">L'expression XPath contient une erreur ou son type de retour n'est pas un ensemble de nœuds.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">L'expression XPath n'est pas valide.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Select(System.String,System.Xml.IXmlNamespaceResolver)">
      <summary>Sélectionne un ensemble de nœuds à l'aide de l'expression XPath spécifiée avec l'objet <see cref="T:System.Xml.IXmlNamespaceResolver" /> spécifié pour trouver les préfixes d'espace de noms.</summary>
      <param name="xpath">Chaîne <see cref="T:System.String" /> représentant une expression XPath.</param>
      <param name="resolver">Objet <see cref="T:System.Xml.IXmlNamespaceResolver" /> utilisé pour trouver les préfixes d'espace de noms.</param>
      <returns>
        <see cref="T:System.Xml.XPath.XPathNodeIterator" /> qui pointe vers l'ensemble de nœuds sélectionnés.</returns>
      <exception cref="T:System.ArgumentException">L'expression XPath contient une erreur ou son type de retour n'est pas un ensemble de nœuds.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">L'expression XPath n'est pas valide.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Select(System.Xml.XPath.XPathExpression)">
      <summary>Sélectionne un ensemble de nœuds à l'aide du <see cref="T:System.Xml.XPath.XPathExpression" /> spécifié.</summary>
      <param name="expr">Objet <see cref="T:System.Xml.XPath.XPathExpression" /> contenant la requête XPath compilée.</param>
      <returns>
        <see cref="T:System.Xml.XPath.XPathNodeIterator" /> qui pointe vers l'ensemble de nœuds sélectionnés.</returns>
      <exception cref="T:System.ArgumentException">L'expression XPath contient une erreur ou son type de retour n'est pas un ensemble de nœuds.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">L'expression XPath n'est pas valide.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectAncestors(System.String,System.String,System.Boolean)">
      <summary>Sélectionne tous les nœuds ancêtres du nœud actuel dotés du nom local et de l'URI d'espace de noms spécifiés.</summary>
      <param name="name">Nom local des nœuds ancêtres.</param>
      <param name="namespaceURI">URI d'espace de noms des nœuds ancêtres.</param>
      <param name="matchSelf">
        <see langword="true" /> pour inclure le nœud de contexte dans la sélection ; sinon, <see langword="false" />.</param>
      <returns>
        <see cref="T:System.Xml.XPath.XPathNodeIterator" /> qui contient les nœuds sélectionnés. Les nœuds retournés sont dans l'ordre inverse des documents.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see langword="null" /> ne peut pas être passé en tant que paramètre.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectAncestors(System.Xml.XPath.XPathNodeType,System.Boolean)">
      <summary>Sélectionne tous les nœuds ancêtres du nœud actuel qui possèdent un <see cref="T:System.Xml.XPath.XPathNodeType" /> correspondant.</summary>
      <param name="type">
        <see cref="T:System.Xml.XPath.XPathNodeType" /> des nœuds ancêtres.</param>
      <param name="matchSelf">
        <see langword="true" /> pour inclure le nœud de contexte dans la sélection ; sinon, <see langword="false" />.</param>
      <returns>
        <see cref="T:System.Xml.XPath.XPathNodeIterator" /> qui contient les nœuds sélectionnés. Les nœuds retournés sont dans l'ordre inverse des documents.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectChildren(System.String,System.String)">
      <summary>Sélectionne tous les nœuds enfants du nœud actuel dotés du nom local et de l'URI d'espace de noms spécifiés.</summary>
      <param name="name">Nom local des nœuds enfants.</param>
      <param name="namespaceURI">URI d'espace de noms des nœuds enfants.</param>
      <returns>
        <see cref="T:System.Xml.XPath.XPathNodeIterator" /> qui contient les nœuds sélectionnés.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see langword="null" /> ne peut pas être passé en tant que paramètre.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectChildren(System.Xml.XPath.XPathNodeType)">
      <summary>Sélectionne tous les nœuds enfants du nœud actuel dotés du <see cref="T:System.Xml.XPath.XPathNodeType" /> correspondant.</summary>
      <param name="type">
        <see cref="T:System.Xml.XPath.XPathNodeType" /> des nœuds enfants.</param>
      <returns>
        <see cref="T:System.Xml.XPath.XPathNodeIterator" /> qui contient les nœuds sélectionnés.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectDescendants(System.String,System.String,System.Boolean)">
      <summary>Sélectionne tous les nœuds descendants du nœud actuel dotés du nom local et de l'URI d'espace de noms spécifiés.</summary>
      <param name="name">Nom local des nœuds descendants.</param>
      <param name="namespaceURI">URI d'espace de noms des nœuds descendants.</param>
      <param name="matchSelf">
        <see langword="true" /> pour inclure le nœud de contexte dans la sélection ; sinon, <see langword="false" />.</param>
      <returns>
        <see cref="T:System.Xml.XPath.XPathNodeIterator" /> qui contient les nœuds sélectionnés.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see langword="null" /> ne peut pas être passé en tant que paramètre.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectDescendants(System.Xml.XPath.XPathNodeType,System.Boolean)">
      <summary>Sélectionne tous les nœuds descendants du nœud actuel qui possèdent un <see cref="T:System.Xml.XPath.XPathNodeType" /> correspondant.</summary>
      <param name="type">
        <see cref="T:System.Xml.XPath.XPathNodeType" /> des nœuds descendants.</param>
      <param name="matchSelf">
        <see langword="true" /> pour inclure le nœud de contexte dans la sélection ; sinon, <see langword="false" />.</param>
      <returns>
        <see cref="T:System.Xml.XPath.XPathNodeIterator" /> qui contient les nœuds sélectionnés.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectSingleNode(System.String)">
      <summary>Sélectionne un nœud dans <see cref="T:System.Xml.XPath.XPathNavigator" /> à l'aide de la requête XPath spécifiée.</summary>
      <param name="xpath">Chaîne <see cref="T:System.String" /> représentant une expression XPath.</param>
      <returns>Objet <see cref="T:System.Xml.XPath.XPathNavigator" /> qui contient le premier nœud correspondant pour la requête XPath spécifiée ; sinon, <see langword="null" /> s'il n'y a aucun résultat de requête.</returns>
      <exception cref="T:System.ArgumentException">Une erreur a été trouvée dans la requête XPath ou le type de retour de l'expression XPath n'est pas un nœud.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">La requête XPath n'est pas valide.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectSingleNode(System.String,System.Xml.IXmlNamespaceResolver)">
      <summary>Sélectionne un nœud dans l'objet <see cref="T:System.Xml.XPath.XPathNavigator" /> à l'aide de la requête XPath spécifiée avec l'objet <see cref="T:System.Xml.IXmlNamespaceResolver" /> spécifié pour trouver les préfixes d'espace de noms.</summary>
      <param name="xpath">Chaîne <see cref="T:System.String" /> représentant une expression XPath.</param>
      <param name="resolver">Objet <see cref="T:System.Xml.IXmlNamespaceResolver" /> permettant de trouver les préfixes d'espace de noms dans la requête XPath.</param>
      <returns>Objet <see cref="T:System.Xml.XPath.XPathNavigator" /> qui contient le premier nœud correspondant pour la requête XPath spécifiée ; sinon, <see langword="null" /> s'il n'y a aucun résultat de requête.</returns>
      <exception cref="T:System.ArgumentException">Une erreur a été trouvée dans la requête XPath ou le type de retour de l'expression XPath n'est pas un nœud.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">La requête XPath n'est pas valide.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectSingleNode(System.Xml.XPath.XPathExpression)">
      <summary>Sélectionne un nœud dans <see cref="T:System.Xml.XPath.XPathNavigator" /> à l'aide de l'objet <see cref="T:System.Xml.XPath.XPathExpression" /> spécifiée.</summary>
      <param name="expression">Objet <see cref="T:System.Xml.XPath.XPathExpression" /> contenant la requête XPath compilée.</param>
      <returns>Objet <see cref="T:System.Xml.XPath.XPathNavigator" /> qui contient le premier nœud correspondant pour la requête XPath spécifiée ; sinon, <see langword="null" /> s'il n'y a aucun résultat de requête.</returns>
      <exception cref="T:System.ArgumentException">Une erreur a été trouvée dans la requête XPath ou le type de retour de l'expression XPath n'est pas un nœud.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">La requête XPath n'est pas valide.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SetTypedValue(System.Object)">
      <summary>Définit la valeur typée du nœud actuel.</summary>
      <param name="typedValue">Nouvelle valeur typée du nœud.</param>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge le type de l'objet spécifié.</exception>
      <exception cref="T:System.ArgumentNullException">La valeur spécifiée ne peut pas être <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> n'est pas positionné sur un nœud d'élément ou d'attribut.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge l'édition.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SetValue(System.String)">
      <summary>Définit la valeur du nœud actuel.</summary>
      <param name="value">Nouvelle valeur du nœud.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre de valeur est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Le <see cref="T:System.Xml.XPath.XPathNavigator" /> est placé sur le nœud racine, un nœud d'espace de noms, ou la valeur spécifiée n'est pas valide.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge l'édition.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.System#ICloneable#Clone">
      <summary>Crée une copie de l'objet <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <returns>Nouvelle copie de l’objet <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ToString">
      <summary>Obtient le texte du nœud actuel.</summary>
      <returns>
        <see langword="string" /> qui contient la valeur de texte du nœud actuel.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.TypedValue">
      <summary>Obtient le nœud actuel en tant qu'objet boxed du type .NET Framework le plus approprié.</summary>
      <returns>Nœud actuel en tant qu'objet boxed du type .NET Framework le plus approprié.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.UnderlyingObject">
      <summary>Utilisé par les implémentations de <see cref="T:System.Xml.XPath.XPathNavigator" /> qui fournissent un affichage XML « virtualisé » d'un magasin, en vue de proposer un accès aux objets sous-jacents.</summary>
      <returns>La valeur par défaut est <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Obtient la valeur du nœud actuel en tant que <see cref="T:System.Type" /> spécifié, à l'aide de l'objet <see cref="T:System.Xml.IXmlNamespaceResolver" /> spécifié pour trouver les préfixes d'espace de noms.</summary>
      <param name="returnType">
        <see cref="T:System.Type" /> permettant de retourner la valeur du nœud actuel.</param>
      <param name="nsResolver">Objet <see cref="T:System.Xml.IXmlNamespaceResolver" /> utilisé pour trouver les préfixes d'espace de noms.</param>
      <returns>Valeur du nœud actuel en tant que <see cref="T:System.Type" /> demandé.</returns>
      <exception cref="T:System.FormatException">La valeur du nœud actuel n'est pas correcte pour le type cible.</exception>
      <exception cref="T:System.InvalidCastException">La tentative de cast n'est pas valide.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueAsBoolean">
      <summary>Obtient la valeur du nœud actuel en tant que <see cref="T:System.Boolean" />.</summary>
      <returns>Valeur du nœud actuel en tant que <see cref="T:System.Boolean" />.</returns>
      <exception cref="T:System.FormatException">La valeur de chaîne du nœud actuel ne peut pas être convertie en <see cref="T:System.Boolean" />.</exception>
      <exception cref="T:System.InvalidCastException">La tentative de cast en <see cref="T:System.Boolean" /> n'est pas valide.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueAsDateTime">
      <summary>Obtient la valeur du nœud actuel en tant que <see cref="T:System.DateTime" />.</summary>
      <returns>Valeur du nœud actuel en tant que <see cref="T:System.DateTime" />.</returns>
      <exception cref="T:System.FormatException">La valeur de chaîne du nœud actuel ne peut pas être convertie en <see cref="T:System.DateTime" />.</exception>
      <exception cref="T:System.InvalidCastException">La tentative de cast en <see cref="T:System.DateTime" /> n'est pas valide.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueAsDouble">
      <summary>Obtient la valeur du nœud actuel en tant que <see cref="T:System.Double" />.</summary>
      <returns>Valeur du nœud actuel en tant que <see cref="T:System.Double" />.</returns>
      <exception cref="T:System.FormatException">La valeur de chaîne du nœud actuel ne peut pas être convertie en <see cref="T:System.Double" />.</exception>
      <exception cref="T:System.InvalidCastException">La tentative de cast en <see cref="T:System.Double" /> n'est pas valide.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueAsInt">
      <summary>Obtient la valeur du nœud actuel en tant que <see cref="T:System.Int32" />.</summary>
      <returns>Valeur du nœud actuel en tant que <see cref="T:System.Int32" />.</returns>
      <exception cref="T:System.FormatException">La valeur de chaîne du nœud actuel ne peut pas être convertie en <see cref="T:System.Int32" />.</exception>
      <exception cref="T:System.InvalidCastException">La tentative de cast en <see cref="T:System.Int32" /> n'est pas valide.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueAsLong">
      <summary>Obtient la valeur du nœud actuel en tant que <see cref="T:System.Int64" />.</summary>
      <returns>Valeur du nœud actuel en tant que <see cref="T:System.Int64" />.</returns>
      <exception cref="T:System.FormatException">La valeur de chaîne du nœud actuel ne peut pas être convertie en <see cref="T:System.Int64" />.</exception>
      <exception cref="T:System.InvalidCastException">La tentative de cast en <see cref="T:System.Int64" /> n'est pas valide.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueType">
      <summary>Obtient le nœud actuel <see cref="T:System.Type" /> du .NET Framework.</summary>
      <returns>Nœud actuel <see cref="T:System.Type" /> du .NET Framework. La valeur par défaut est <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.WriteSubtree(System.Xml.XmlWriter)">
      <summary>Transmet en continu le nœud actuel et ses nœuds enfants à l'objet <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="writer">Objet <see cref="T:System.Xml.XmlWriter" /> vers lequel transmettre en continu.</param>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.XmlLang">
      <summary>Obtient la portée <c>xml:lang</c> du nœud actuel.</summary>
      <returns>Qui contient la valeur de la portée <c>XML: lang</c> , ou <see cref="F:System.String.Empty" /> si le nœud actuel n’a aucune valeur de portée <c>XML: lang</c> à retourner. <see cref="T:System.String" /></returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.XmlType">
      <summary>Obtient les informations <see cref="T:System.Xml.Schema.XmlSchemaType" /> pour le nœud actuel.</summary>
      <returns>Objet <see cref="T:System.Xml.Schema.XmlSchemaType" /> ; la valeur par défaut est <see langword="null" />.</returns>
    </member>
    <member name="T:System.Xml.XPath.XPathNodeIterator">
      <summary>Fournit un itérateur pour un ensemble de nœuds sélectionné.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathNodeIterator.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XPath.XPathNodeIterator" />.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathNodeIterator.Clone">
      <summary>En cas de substitution dans une classe dérivée, retourne un clone de cet objet <see cref="T:System.Xml.XPath.XPathNodeIterator" />.</summary>
      <returns>Nouveau clone d'objet <see cref="T:System.Xml.XPath.XPathNodeIterator" /> de cet objet <see cref="T:System.Xml.XPath.XPathNodeIterator" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNodeIterator.Count">
      <summary>Obtient l'index du dernier nœud dans l'ensemble des nœuds sélectionnés.</summary>
      <returns>Index du dernier nœud de l'ensemble de nœuds sélectionné ou 0 s'il n'existe pas de nœuds sélectionnés.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNodeIterator.Current">
      <summary>En cas de substitution dans une classe dérivée, obtient l'objet de <see cref="T:System.Xml.XPath.XPathNavigator" /> pour ce <see cref="T:System.Xml.XPath.XPathNodeIterator" />, placé sur le nœud de contexte actuel.</summary>
      <returns>Objet <see cref="T:System.Xml.XPath.XPathNavigator" /> placé sur le nœud de contexte à partir duquel l'ensemble de nœuds a été sélectionné. La méthode <see cref="M:System.Xml.XPath.XPathNodeIterator.MoveNext" /> doit être appelée pour déplacer <see cref="T:System.Xml.XPath.XPathNodeIterator" /> vers le premier nœud de l'ensemble sélectionné.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNodeIterator.CurrentPosition">
      <summary>En cas de substitution dans une classe dérivée, obtient l'index de la position actuelle dans l'ensemble des nœuds sélectionnés.</summary>
      <returns>Index de la position actuelle.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNodeIterator.GetEnumerator">
      <summary>Retourne un objet <see cref="T:System.Collections.IEnumerator" /> pour itérer au sein de l'ensemble de nœuds sélectionné.</summary>
      <returns>Objet <see cref="T:System.Collections.IEnumerator" /> pour itérer au sein de l'ensemble de nœuds sélectionné.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNodeIterator.MoveNext">
      <summary>En cas de substitution dans une classe dérivée, déplace l'objet <see cref="T:System.Xml.XPath.XPathNavigator" /> retourné par la propriété <see cref="P:System.Xml.XPath.XPathNodeIterator.Current" /> vers le nœud suivant de l'ensemble sélectionné.</summary>
      <returns>
        <see langword="true" /> si l'objet <see cref="T:System.Xml.XPath.XPathNavigator" /> est déplacé vers le nœud suivant ; <see langword="false" /> s'il n'existe plus d'autres nœuds sélectionnés.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNodeIterator.System#ICloneable#Clone">
      <summary>Crée un objet qui est une copie de l'instance actuelle.</summary>
      <returns>Nouvel objet qui est une copie de cette instance.</returns>
    </member>
    <member name="T:System.Xml.XPath.XPathNodeType">
      <summary>Définit les types de nœuds XPath pouvant être retournés à partir de la classe <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.All">
      <summary>Un des types de nœuds <see cref="T:System.Xml.XPath.XPathNodeType" />.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Attribute">
      <summary>Attribut, tel que <c>id=’123’</c>.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Comment">
      <summary>Commentaire, tel que <c>&lt;!-- mon commentaire --&gt;</c></summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Element">
      <summary>Élément, tel que <c>&lt;élément&gt;</c>.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Namespace">
      <summary>Espace de noms, tel que <c>xmlns="espace de noms"</c>.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.ProcessingInstruction">
      <summary>Instruction de traitement, telle que <c>&lt;?pi test?&gt;</c>. Cela n'inclut pas les déclarations XML, lesquelles ne sont pas visibles pour la classe <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Root">
      <summary>Nœud racine du document XML ou arborescence de nœuds.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.SignificantWhitespace">
      <summary>Nœud dont les espaces blancs et <c>xml:space</c> sont définis sur <c>preserve</c>.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Text">
      <summary>Texte d'un nœud. Équivalent aux types de nœuds CDATA et de texte DOM (Document Object Model). Comporte au moins un caractère.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Whitespace">
      <summary>Nœud comportant uniquement des espaces blancs et aucun espace blanc significatif. Les espaces blancs sont <c>#x20</c>, <c>#x9</c>, <c>#xD</c> ou <c>#xA</c>.</summary>
    </member>
    <member name="T:System.Xml.XPath.XPathResultType">
      <summary>Spécifie le type de retour de l'expression XPath.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Any">
      <summary>Un des types de nœuds XPath.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Boolean">
      <summary>Valeur <see cref="T:System.Boolean" /><see langword="true" /> ou <see langword="false" /></summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Error">
      <summary>L'expression ne prend pas la valeur du type XPath correct.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Navigator">
      <summary>Fragment d'arborescence.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.NodeSet">
      <summary>Collection de nœuds.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Number">
      <summary>Valeur numérique.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.String">
      <summary>Valeur <see cref="T:System.String" />.</summary>
    </member>
    <member name="T:System.Xml.Xsl.IXsltContextFunction">
      <summary>Fournit une interface à une fonction donnée définie dans la feuille de style XSLT (Extensible Stylesheet Language for Transformations) au moment de l'exécution.</summary>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextFunction.ArgTypes">
      <summary>Obtient les types XPath (XML Path Language) fournis pour la liste d'arguments de la fonction. Cette information peut être utilisée pour découvrir la signature de la fonction qui vous permet de faire la différence entre les fonctions surchargées.</summary>
      <returns>Tableau de <see cref="T:System.Xml.XPath.XPathResultType" /> représentant les types de la liste d'arguments de la fonction.</returns>
    </member>
    <member name="M:System.Xml.Xsl.IXsltContextFunction.Invoke(System.Xml.Xsl.XsltContext,System.Object[],System.Xml.XPath.XPathNavigator)">
      <summary>Fournit la méthode permettant d'appeler la fonction avec les arguments donnés dans le contexte spécifié.</summary>
      <param name="xsltContext">Contexte XSLT de l'appel de fonction.</param>
      <param name="args">Les arguments de l'appel de la fonction. Chaque argument est un élément d'un tableau.</param>
      <param name="docContext">Nœud de contexte de l'appel de fonction.</param>
      <returns>
        <see cref="T:System.Object" /> représentant la valeur de retour de la fonction.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextFunction.Maxargs">
      <summary>Obtient le nombre maximal d'arguments pour la fonction. Ceci permet à l'utilisateur de faire la différence entre les fonctions surchargées.</summary>
      <returns>Nombre maximal d'arguments pour la fonction.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextFunction.Minargs">
      <summary>Obtient le nombre minimum d'arguments pour la fonction. Ceci permet à l'utilisateur de faire la différence entre les fonctions surchargées.</summary>
      <returns>Nombre minimum d'arguments pour la fonction.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextFunction.ReturnType">
      <summary>Obtient le <see cref="T:System.Xml.XPath.XPathResultType" /> représentant le type XPath retourné par la fonction.</summary>
      <returns>
        <see cref="T:System.Xml.XPath.XPathResultType" /> représentant le type XPath retourné par la fonction.</returns>
    </member>
    <member name="T:System.Xml.Xsl.IXsltContextVariable">
      <summary>Fournit une interface à une variable donnée définie dans la feuille de style au moment de l'exécution.</summary>
    </member>
    <member name="M:System.Xml.Xsl.IXsltContextVariable.Evaluate(System.Xml.Xsl.XsltContext)">
      <summary>Évalue la variable au moment de l'exécution et retourne un objet qui représente la valeur de la variable.</summary>
      <param name="xsltContext">
        <see cref="T:System.Xml.Xsl.XsltContext" /> représentant le contexte d'exécution de la variable.</param>
      <returns>
        <see cref="T:System.Object" /> représentant la valeur de la variable. Plusieurs types de retour sont possibles, notamment un nombre, une chaîne, un booléen, un fragment de document ou un ensemble de nœuds.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextVariable.IsLocal">
      <summary>Obtient une valeur indiquant si la variable est locale.</summary>
      <returns>
        <see langword="true" /> si la variable est une variable locale dans le contexte actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextVariable.IsParam">
      <summary>Obtient une valeur indiquant si la variable est un paramètre XSLT (Extensible Stylesheet Language Transformation). Il peut s'agir d'un paramètre d'une feuille de style ou d'un modèle.</summary>
      <returns>
        <see langword="true" /> si la variable est un paramètre XSLT ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextVariable.VariableType">
      <summary>Obtient <see cref="T:System.Xml.XPath.XPathResultType" />, lequel représente le type XPath (XML Path Language) de la variable.</summary>
      <returns>
        <see cref="T:System.Xml.XPath.XPathResultType" /> représentant le type XPath de la variable.</returns>
    </member>
    <member name="T:System.Xml.Xsl.XslCompiledTransform">
      <summary>Transforme des données XML à l'aide d'une feuille de style XSLT.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Xsl.XslCompiledTransform" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.#ctor(System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> avec les paramètres de débogage spécifiés.</summary>
      <param name="enableDebug">
        <see langword="true" /> pour générer les informations de débogage ; sinon <see langword="false" />. Le fait de la définir à <see langword="true" /> vous permet de déboguer la feuille de style avec le débogueur Microsoft Visual Studio.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Reflection.MethodInfo,System.Byte[],System.Type[])">
      <summary>Charge une méthode à partir d'une feuille de style compilée à l'aide de l'utilitaire <see langword="XSLTC.exe" />.</summary>
      <param name="executeMethod">Objet <see cref="T:System.Reflection.MethodInfo" /> qui représente la méthode <c>execute</c> générée par le compilateur de la feuille de style compilée.</param>
      <param name="queryData">Tableau d’octets de structures de données sérialisées dans le champ <c>staticData</c> de la feuille de style compilée tel qu’il a été généré par la méthode <see cref="M:System.Xml.Xsl.XslCompiledTransform.CompileToType(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver,System.Boolean,System.Reflection.Emit.TypeBuilder,System.String)" />.</param>
      <param name="earlyBoundTypes">Tableau de types stocké dans le champ <c>ebTypes</c> généré par le compilateur de la feuille de style compilée.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.String)">
      <summary>Charge et compile la feuille de style se trouvant à l'URI spécifié.</summary>
      <param name="stylesheetUri">URI de la feuille de style.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stylesheetUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">La feuille de style contient une erreur.</exception>
      <exception cref="T:System.IO.FileNotFoundException">La feuille de style est introuvable.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">La valeur <paramref name="stylesheetUri" /> contient un nom de fichier ou un répertoire qui est introuvable.</exception>
      <exception cref="T:System.Net.WebException">La valeur <paramref name="stylesheetUri" /> ne peut pas être résolue.  

ou - 
Une erreur s’est produite pendant le traitement de la requête.</exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="stylesheetUri" /> n'est pas un URI valide.</exception>
      <exception cref="T:System.Xml.XmlException">Une erreur d'analyse s'est produite lors du chargement de la feuille de style.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.String,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)">
      <summary>Charge et compile la feuille de style XSLT spécifiée par l'URI. <see cref="T:System.Xml.XmlResolver" /> résout tous les éléments XSLT <c>import</c> ou <c>include</c>, et les paramètres XSLT déterminent les autorisations pour la feuille de style.</summary>
      <param name="stylesheetUri">URI de la feuille de style.</param>
      <param name="settings">
        <see cref="T:System.Xml.Xsl.XsltSettings" /> à appliquer à la feuille de style. Si <see langword="null" />, le paramètre <see cref="P:System.Xml.Xsl.XsltSettings.Default" /> est appliqué.</param>
      <param name="stylesheetResolver">
        <see cref="T:System.Xml.XmlResolver" /> utilisé pour résoudre l’URI de feuille de style et toutes les feuilles de style référencées dans les éléments XSLT <c>import</c> et <c>include</c>.</param>
      <exception cref="T:System.ArgumentNullException">La valeur de <paramref name="stylesheetUri" /> ou de <paramref name="stylesheetResolver" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">La feuille de style contient une erreur.</exception>
      <exception cref="T:System.IO.FileNotFoundException">La feuille de style est introuvable.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">La valeur <paramref name="stylesheetUri" /> contient un nom de fichier ou un répertoire qui est introuvable.</exception>
      <exception cref="T:System.Net.WebException">La valeur <paramref name="stylesheetUri" /> ne peut pas être résolue.  

ou - 
Une erreur s’est produite pendant le traitement de la requête.</exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="stylesheetUri" /> n'est pas un URI valide.</exception>
      <exception cref="T:System.Xml.XmlException">Une erreur d'analyse s'est produite lors du chargement de la feuille de style.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Type)">
      <summary>Charge la feuille de style compilée qui a été créée à l’aide du compilateur XSLT (xsltc.exe).</summary>
      <param name="compiledStylesheet">Nom de la classe qui contient la feuille de style compilée.  
 Il s'agit habituellement du nom de la feuille de style. Sauf spécification contraire, l'outil xsltc.exe utilise le nom de la feuille de style pour les noms de la classe et de l'assembly.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XmlReader)">
      <summary>Compile la feuille de style contenue dans <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="stylesheet">
        <see cref="T:System.Xml.XmlReader" /> contenant la feuille de style.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stylesheet" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">La feuille de style contient une erreur.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)">
      <summary>Compile la feuille de style XSLT figurant dans <see cref="T:System.Xml.XmlReader" />. <see cref="T:System.Xml.XmlResolver" /> résout tous les éléments XSLT <c>import</c> ou <c>include</c>, et les paramètres XSLT déterminent les autorisations pour la feuille de style.</summary>
      <param name="stylesheet">
        <see cref="T:System.Xml.XmlReader" /> contenant la feuille de style.</param>
      <param name="settings">
        <see cref="T:System.Xml.Xsl.XsltSettings" /> à appliquer à la feuille de style. Si <see langword="null" />, le paramètre <see cref="P:System.Xml.Xsl.XsltSettings.Default" /> est appliqué.</param>
      <param name="stylesheetResolver">
        <see cref="T:System.Xml.XmlResolver" /> utilisé pour résoudre toute feuille de style référencée dans les éléments <c>import</c> et <c>include</c>. Si la valeur est <see langword="null" />, les ressources externes ne sont pas résolues.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stylesheet" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">La feuille de style contient une erreur.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XPath.IXPathNavigable)">
      <summary>Compile la feuille de style contenue dans l'objet <see cref="T:System.Xml.XPath.IXPathNavigable" />.</summary>
      <param name="stylesheet">Objet implémentant l'interface <see cref="T:System.Xml.XPath.IXPathNavigable" />. Dans Microsoft .NET Framework, il peut s'agir de <see cref="T:System.Xml.XmlNode" /> (généralement <see cref="T:System.Xml.XmlDocument" />) ou de <see cref="T:System.Xml.XPath.XPathDocument" /> contenant la feuille de style.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stylesheet" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">La feuille de style contient une erreur.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)">
      <summary>Compile la feuille de style XSLT figurant dans <see cref="T:System.Xml.XPath.IXPathNavigable" />. <see cref="T:System.Xml.XmlResolver" /> résout tous les éléments XSLT <c>import</c> ou <c>include</c>, et les paramètres XSLT déterminent les autorisations pour la feuille de style.</summary>
      <param name="stylesheet">Objet implémentant l'interface <see cref="T:System.Xml.XPath.IXPathNavigable" />. Dans Microsoft .NET Framework, il peut s'agir de <see cref="T:System.Xml.XmlNode" /> (généralement <see cref="T:System.Xml.XmlDocument" />) ou de <see cref="T:System.Xml.XPath.XPathDocument" /> contenant la feuille de style.</param>
      <param name="settings">
        <see cref="T:System.Xml.Xsl.XsltSettings" /> à appliquer à la feuille de style. Si <see langword="null" />, le paramètre <see cref="P:System.Xml.Xsl.XsltSettings.Default" /> est appliqué.</param>
      <param name="stylesheetResolver">
        <see cref="T:System.Xml.XmlResolver" /> utilisé pour résoudre toute feuille de style référencée dans les éléments <c>import</c> et <c>include</c>. Si la valeur est <see langword="null" />, les ressources externes ne sont pas résolues.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stylesheet" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">La feuille de style contient une erreur.</exception>
    </member>
    <member name="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings">
      <summary>Obtient un objet <see cref="T:System.Xml.XmlWriterSettings" /> qui contient les informations de sortie dérivées de l’élément <c>xsl:output</c> de la feuille de style.</summary>
      <returns>Objet en lecture seule <see cref="T:System.Xml.XmlWriterSettings" /> qui contient les informations de sortie dérivées de l’élément <c>xsl: output</c> de la feuille de style. Cette valeur peut être <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.String)">
      <summary>Exécute la transformation à l'aide du document d'entrée spécifié par l'URI et renvoie les résultats vers un fichier.</summary>
      <param name="inputUri">URI du document d'entrée.</param>
      <param name="resultsFile">URI du fichier de sortie.</param>
      <exception cref="T:System.ArgumentNullException">La valeur de <paramref name="inputUri" /> ou de <paramref name="resultsFile" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Une erreur s'est produite lors de l'exécution de la transformation XSLT.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le document d'entrée est introuvable.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">La valeur <paramref name="inputUri" /> ou <paramref name="resultsFile" /> contient un nom de fichier ou un répertoire qui est introuvable.</exception>
      <exception cref="T:System.Net.WebException">La valeur <paramref name="inputUri" /> ou <paramref name="resultsFile" /> ne peut pas être résolue.  
ou 
Une erreur s'est produite pendant le traitement de la demande.</exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="inputUri" /> ou <paramref name="resultsFile" /> n'est pas un URI valide.</exception>
      <exception cref="T:System.Xml.XmlException">Une erreur d'analyse s'est produite lors du chargement du document d'entrée.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)">
      <summary>Exécute la transformation à l'aide du document d'entrée spécifié par l'URI et renvoie les résultats vers <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="inputUri">URI du document d'entrée.</param>
      <param name="results">
        <see cref="T:System.Xml.XmlWriter" /> vers lequel vous souhaitez exporter.  
Si la feuille de style contient un élément <c>xsl:output</c>, vous devez créer l’objet <see cref="T:System.Xml.XmlWriter" /> à l’aide de l’objet <see cref="T:System.Xml.XmlWriterSettings" /> retourné par la propriété <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Cela garantit que <see cref="T:System.Xml.XmlWriter" /> a des paramètres de sortie corrects.</param>
      <exception cref="T:System.ArgumentNullException">La valeur de <paramref name="inputUri" /> ou de <paramref name="results" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Une erreur s'est produite lors de l'exécution de la transformation XSLT.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">La valeur <paramref name="inputUri" /> contient un nom de fichier ou le répertoire est introuvable.</exception>
      <exception cref="T:System.Net.WebException">La valeur <paramref name="inputUri" /> ne peut pas être résolue.  

ou - 
Une erreur s’est produite pendant le traitement de la requête.</exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="inputUri" /> n'est pas un URI valide.</exception>
      <exception cref="T:System.Xml.XmlException">Une erreur d'analyse s'est produite lors du chargement du document d'entrée.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
      <summary>Exécute la transformation à l'aide du document d'entrée spécifié par l'URI et renvoie les résultats vers un flux. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> fournit des arguments d'exécution supplémentaires.</summary>
      <param name="inputUri">URI du document d'entrée.</param>
      <param name="arguments">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenant des arguments qualifiés par un espace de noms utilisés comme données d'entrée pour la transformation. Cette valeur peut être <see langword="null" />.</param>
      <param name="results">Flux dans lequel vous voulez générer.</param>
      <exception cref="T:System.ArgumentNullException">La valeur de <paramref name="inputUri" /> ou de <paramref name="results" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Une erreur s'est produite lors de l'exécution de la transformation XSLT.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">La valeur <paramref name="inputUri" /> contient un nom de fichier ou le répertoire est introuvable.</exception>
      <exception cref="T:System.Net.WebException">La valeur <paramref name="inputUri" /> ne peut pas être résolue.  

ou - 
Une erreur s'est produite pendant le traitement de la demande.</exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="inputUri" /> n'est pas un URI valide.</exception>
      <exception cref="T:System.Xml.XmlException">Une erreur d'analyse s'est produite lors du chargement du document d'entrée.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
      <summary>Exécute la transformation à l'aide du document d'entrée spécifié par l'URI et renvoie les résultats vers <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="inputUri">URI du document d'entrée.</param>
      <param name="arguments">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenant des arguments qualifiés par un espace de noms utilisés comme données d'entrée pour la transformation. Cette valeur peut être <see langword="null" />.</param>
      <param name="results">
        <see cref="T:System.IO.TextWriter" /> vers lequel vous souhaitez exporter.</param>
      <exception cref="T:System.ArgumentNullException">La valeur de <paramref name="inputUri" /> ou de <paramref name="results" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Une erreur s'est produite lors de l'exécution de la transformation XSLT.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">La valeur <paramref name="inputUri" /> contient un nom de fichier ou le répertoire est introuvable.</exception>
      <exception cref="T:System.Net.WebException">La valeur <paramref name="inputUri" /> ne peut pas être résolue.  

ou - 
Une erreur s'est produite pendant le traitement de la demande.</exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="inputUri" /> n'est pas un URI valide.</exception>
      <exception cref="T:System.Xml.XmlException">Une erreur d'analyse s'est produite lors du chargement du document d'entrée.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
      <summary>Exécute la transformation à l'aide du document d'entrée spécifié par l'URI et renvoie les résultats vers <see cref="T:System.Xml.XmlWriter" />. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> fournit des arguments d'exécution supplémentaires.</summary>
      <param name="inputUri">URI du document d'entrée.</param>
      <param name="arguments">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenant des arguments qualifiés par un espace de noms utilisés comme données d'entrée pour la transformation. Cette valeur peut être <see langword="null" />.</param>
      <param name="results">
        <see cref="T:System.Xml.XmlWriter" /> vers lequel vous souhaitez exporter.  
Si la feuille de style contient un élément <c>xsl:output</c>, vous devez créer l’objet <see cref="T:System.Xml.XmlWriter" /> à l’aide de l’objet <see cref="T:System.Xml.XmlWriterSettings" /> retourné par la propriété <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Cela garantit que <see cref="T:System.Xml.XmlWriter" /> a des paramètres de sortie corrects.</param>
      <exception cref="T:System.ArgumentNullException">La valeur de <paramref name="inputUri" /> ou de <paramref name="results" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Une erreur s'est produite lors de l'exécution de la transformation XSLT.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">La valeur <paramref name="inputtUri" /> contient un nom de fichier ou le répertoire est introuvable.</exception>
      <exception cref="T:System.Net.WebException">La valeur <paramref name="inputUri" /> ne peut pas être résolue.  

ou - 
Une erreur s’est produite pendant le traitement de la requête.</exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="inputUri" /> n'est pas un URI valide.</exception>
      <exception cref="T:System.Xml.XmlException">Une erreur d'analyse s'est produite lors du chargement du document d'entrée.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.XmlWriter)">
      <summary>Exécute la transformation à l'aide du document d'entrée spécifié par l'objet <see cref="T:System.Xml.XmlReader" /> et renvoie les résultats vers <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="input">
        <see cref="T:System.Xml.XmlReader" /> contenant le document d'entrée.</param>
      <param name="results">
        <see cref="T:System.Xml.XmlWriter" /> vers lequel vous souhaitez exporter.  
Si la feuille de style contient un élément <c>xsl:output</c>, vous devez créer l’objet <see cref="T:System.Xml.XmlWriter" /> à l’aide de l’objet <see cref="T:System.Xml.XmlWriterSettings" /> retourné par la propriété <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Cela garantit que <see cref="T:System.Xml.XmlWriter" /> a des paramètres de sortie corrects.</param>
      <exception cref="T:System.ArgumentNullException">La valeur de <paramref name="input" /> ou de <paramref name="results" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Une erreur s'est produite lors de l'exécution de la transformation XSLT.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
      <summary>Exécute la transformation à l'aide du document d'entrée spécifié par l'objet <see cref="T:System.Xml.XmlReader" /> et renvoie les résultats vers un flux. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> fournit des arguments d'exécution supplémentaires.</summary>
      <param name="input">
        <see cref="T:System.Xml.XmlReader" /> contenant le document d'entrée.</param>
      <param name="arguments">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenant des arguments qualifiés par un espace de noms utilisés comme données d'entrée pour la transformation. Cette valeur peut être <see langword="null" />.</param>
      <param name="results">Flux dans lequel vous voulez générer.</param>
      <exception cref="T:System.ArgumentNullException">La valeur de <paramref name="input" /> ou de <paramref name="results" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Une erreur s'est produite lors de l'exécution de la transformation XSLT.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
      <summary>Exécute la transformation à l'aide du document d'entrée spécifié par l'objet <see cref="T:System.Xml.XmlReader" /> et renvoie les résultats vers <see cref="T:System.IO.TextWriter" />. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> fournit des arguments d'exécution supplémentaires.</summary>
      <param name="input">
        <see cref="T:System.Xml.XmlReader" /> contenant le document d'entrée.</param>
      <param name="arguments">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenant des arguments qualifiés par un espace de noms utilisés comme données d'entrée pour la transformation. Cette valeur peut être <see langword="null" />.</param>
      <param name="results">
        <see cref="T:System.IO.TextWriter" /> vers lequel vous souhaitez exporter.</param>
      <exception cref="T:System.ArgumentNullException">La valeur de <paramref name="input" /> ou de <paramref name="results" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Une erreur s'est produite lors de l'exécution de la transformation XSLT.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
      <summary>Exécute la transformation à l'aide du document d'entrée spécifié par l'objet <see cref="T:System.Xml.XmlReader" /> et renvoie les résultats vers <see cref="T:System.Xml.XmlWriter" />. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> fournit des arguments d'exécution supplémentaires.</summary>
      <param name="input">
        <see cref="T:System.Xml.XmlReader" /> contenant le document d'entrée.</param>
      <param name="arguments">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenant des arguments qualifiés par un espace de noms utilisés comme données d'entrée pour la transformation. Cette valeur peut être <see langword="null" />.</param>
      <param name="results">
        <see cref="T:System.Xml.XmlWriter" /> vers lequel vous souhaitez exporter.  
Si la feuille de style contient un élément <c>xsl:output</c>, vous devez créer l’objet <see cref="T:System.Xml.XmlWriter" /> à l’aide de l’objet <see cref="T:System.Xml.XmlWriterSettings" /> retourné par la propriété <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Cela garantit que <see cref="T:System.Xml.XmlWriter" /> a des paramètres de sortie corrects.</param>
      <exception cref="T:System.ArgumentNullException">La valeur de <paramref name="input" /> ou de <paramref name="results" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Une erreur s'est produite lors de l'exécution de la transformation XSLT.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)">
      <summary>Exécute la transformation à l'aide du document d'entrée spécifié par l'objet <see cref="T:System.Xml.XmlReader" /> et renvoie les résultats vers <see cref="T:System.Xml.XmlWriter" />. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> fournit des arguments de runtime supplémentaires et XmlResolver résout la fonction XSLT <c>document()</c>.</summary>
      <param name="input">
        <see cref="T:System.Xml.XmlReader" /> contenant le document d'entrée.</param>
      <param name="arguments">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenant des arguments qualifiés par un espace de noms utilisés comme données d'entrée pour la transformation. Cette valeur peut être <see langword="null" />.</param>
      <param name="results">
        <see cref="T:System.Xml.XmlWriter" /> vers lequel vous souhaitez exporter.  
Si la feuille de style contient un élément <c>xsl:output</c>, vous devez créer l’objet <see cref="T:System.Xml.XmlWriter" /> à l’aide de l’objet <see cref="T:System.Xml.XmlWriterSettings" /> retourné par la propriété <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Cela garantit que <see cref="T:System.Xml.XmlWriter" /> a des paramètres de sortie corrects.</param>
      <param name="documentResolver">
        <see cref="T:System.Xml.XmlResolver" /> utilisé pour résoudre la fonction <c>document()</c> XSLT. S’il s’agit de <see langword="null" />, la fonction <c>document()</c> n’est pas résolue.</param>
      <exception cref="T:System.ArgumentNullException">La valeur de <paramref name="input" /> ou de <paramref name="results" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Une erreur s'est produite lors de l'exécution de la transformation XSLT.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.XmlWriter)">
      <summary>Exécute la transformation à l'aide du document d'entrée spécifié par l'objet <see cref="T:System.Xml.XPath.IXPathNavigable" /> et renvoie les résultats vers <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="input">Objet implémentant l'interface <see cref="T:System.Xml.XPath.IXPathNavigable" />. Dans Microsoft .NET Framework, il peut s'agir de <see cref="T:System.Xml.XmlNode" /> (généralement <see cref="T:System.Xml.XmlDocument" />) ou de <see cref="T:System.Xml.XPath.XPathDocument" /> contenant les données à transformer.</param>
      <param name="results">
        <see cref="T:System.Xml.XmlWriter" /> vers lequel vous souhaitez exporter.  
Si la feuille de style contient un élément <c>xsl:output</c>, vous devez créer l’objet <see cref="T:System.Xml.XmlWriter" /> à l’aide de l’objet <see cref="T:System.Xml.XmlWriterSettings" /> retourné par la propriété <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Cela garantit que <see cref="T:System.Xml.XmlWriter" /> a des paramètres de sortie corrects.</param>
      <exception cref="T:System.ArgumentNullException">La valeur de <paramref name="input" /> ou de <paramref name="results" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Une erreur s'est produite lors de l'exécution de la transformation XSLT.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
      <summary>Exécute la transformation à l'aide du document d'entrée spécifié par l'objet <see cref="T:System.Xml.XPath.IXPathNavigable" /> et renvoie les résultats vers un flux. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> fournit des arguments d'exécution supplémentaires.</summary>
      <param name="input">Objet implémentant l'interface <see cref="T:System.Xml.XPath.IXPathNavigable" />. Dans Microsoft .NET Framework, il peut s'agir de <see cref="T:System.Xml.XmlNode" /> (généralement <see cref="T:System.Xml.XmlDocument" />) ou de <see cref="T:System.Xml.XPath.XPathDocument" /> contenant les données à transformer.</param>
      <param name="arguments">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenant des arguments qualifiés par un espace de noms utilisés comme données d'entrée pour la transformation. Cette valeur peut être <see langword="null" />.</param>
      <param name="results">Flux dans lequel vous voulez générer.</param>
      <exception cref="T:System.ArgumentNullException">La valeur de <paramref name="input" /> ou de <paramref name="results" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Une erreur s'est produite lors de l'exécution de la transformation XSLT.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
      <summary>Exécute la transformation à l'aide du document d'entrée spécifié par l'objet <see cref="T:System.Xml.XPath.IXPathNavigable" /> et renvoie les résultats vers <see cref="T:System.IO.TextWriter" />. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> fournit des arguments d'exécution supplémentaires.</summary>
      <param name="input">Objet implémentant l'interface <see cref="T:System.Xml.XPath.IXPathNavigable" />. Dans Microsoft .NET Framework, il peut s'agir de <see cref="T:System.Xml.XmlNode" /> (généralement <see cref="T:System.Xml.XmlDocument" />) ou de <see cref="T:System.Xml.XPath.XPathDocument" /> contenant les données à transformer.</param>
      <param name="arguments">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenant des arguments qualifiés par un espace de noms utilisés comme données d'entrée pour la transformation. Cette valeur peut être <see langword="null" />.</param>
      <param name="results">
        <see cref="T:System.IO.TextWriter" /> vers lequel vous souhaitez exporter.</param>
      <exception cref="T:System.ArgumentNullException">La valeur de <paramref name="input" /> ou de <paramref name="results" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Une erreur s'est produite lors de l'exécution de la transformation XSLT.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
      <summary>Exécute la transformation à l'aide du document d'entrée spécifié par l'objet <see cref="T:System.Xml.XPath.IXPathNavigable" /> et renvoie les résultats vers <see cref="T:System.Xml.XmlWriter" />. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> fournit des arguments d'exécution supplémentaires.</summary>
      <param name="input">Objet implémentant l'interface <see cref="T:System.Xml.XPath.IXPathNavigable" />. Dans Microsoft .NET Framework, il peut s'agir de <see cref="T:System.Xml.XmlNode" /> (généralement <see cref="T:System.Xml.XmlDocument" />) ou de <see cref="T:System.Xml.XPath.XPathDocument" /> contenant les données à transformer.</param>
      <param name="arguments">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenant des arguments qualifiés par un espace de noms utilisés comme données d'entrée pour la transformation. Cette valeur peut être <see langword="null" />.</param>
      <param name="results">
        <see cref="T:System.Xml.XmlWriter" /> vers lequel vous souhaitez exporter.  
Si la feuille de style contient un élément <c>xsl:output</c>, vous devez créer l’objet <see cref="T:System.Xml.XmlWriter" /> à l’aide de l’objet <see cref="T:System.Xml.XmlWriterSettings" /> retourné par la propriété <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Cela garantit que <see cref="T:System.Xml.XmlWriter" /> a des paramètres de sortie corrects.</param>
      <exception cref="T:System.ArgumentNullException">La valeur de <paramref name="input" /> ou de <paramref name="results" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Une erreur s'est produite lors de l'exécution de la transformation XSLT.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)">
      <summary>Exécute la transformation à l’aide du document d’entrée spécifié par l’objet <see cref="T:System.Xml.XPath.IXPathNavigable" /> et renvoie les résultats vers un <see cref="T:System.Xml.XmlWriter" />. La <see cref="T:System.Xml.Xsl.XsltArgumentList" /> fournit des arguments d’exécution supplémentaires et <see cref="T:System.Xml.XmlResolver" /> résout la fonction XSLT <see langword="document()" />.</summary>
      <param name="input">Le document à transformer spécifié par l’objet <see cref="T:System.Xml.XPath.IXPathNavigable" />.</param>
      <param name="arguments">Liste d’arguments comme <see cref="T:System.Xml.Xsl.XsltArgumentList" />.</param>
      <param name="results">
        <see cref="T:System.Xml.XmlWriter" /> vers lequel vous souhaitez exporter.  
Si la feuille de style contient un élément <see langword="xsl:output" />, vous devez créer l’objet <see cref="T:System.Xml.XmlWriter" /> à l’aide de l’objet <see cref="T:System.Xml.XmlWriterSettings" /> retourné par la propriété <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Cela garantit que <see cref="T:System.Xml.XmlWriter" /> a des paramètres de sortie corrects.</param>
      <param name="documentResolver">Le <see cref="T:System.Xml.XmlResolver" /> utilisé pour résoudre la fonction <see langword="document()" /> XSLT. S’il a la valeur <see langword="null" />, la fonction <see langword="document()" /> n’est pas résolue.</param>
    </member>
    <member name="T:System.Xml.Xsl.XsltArgumentList">
      <summary>Contient un nombre variable d'arguments qui sont soit des paramètres XSLT, soit des objets d'extension.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.#ctor">
      <summary>Implémente une nouvelle instance de <see cref="T:System.Xml.Xsl.XsltArgumentList" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.AddExtensionObject(System.String,System.Object)">
      <summary>Ajoute un nouvel objet à <see cref="T:System.Xml.Xsl.XsltArgumentList" /> et l'associe à l'URI d'espace de noms.</summary>
      <param name="namespaceUri">URI d'espace de noms à associer à l'objet. Pour utiliser l'espace de noms par défaut, spécifiez une chaîne vide.</param>
      <param name="extension">Objet à ajouter à la liste.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="namespaceUri" /> est <see langword="null" /> ou http://www.w3.org/1999/XSL/Transform 
<paramref name="namespaceUri" /> possède déjà un objet d'extension associé.</exception>
      <exception cref="T:System.Security.SecurityException">L'appelant n'a pas les autorisations suffisantes pour appeler cette méthode.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.AddParam(System.String,System.String,System.Object)">
      <summary>Ajoute un paramètre à <see cref="T:System.Xml.Xsl.XsltArgumentList" /> et l'associe au nom qualifié d'espace de noms.</summary>
      <param name="name">Nom à associer au paramètre.</param>
      <param name="namespaceUri">URI d'espace de noms à associer au paramètre. Pour utiliser l'espace de noms par défaut, spécifiez une chaîne vide.</param>
      <param name="parameter">Valeur de paramètre ou objet à ajouter à la liste.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="namespaceUri" /> est <see langword="null" /> ou http://www.w3.org/1999/XSL/Transform.  
<paramref name="name" /> n'est pas un nom valide conformément à la spécification du W3C relative au XML.  
<paramref name="namespaceUri" /> possède déjà un paramètre qui lui est associé.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.Clear">
      <summary>Supprime tous les paramètres et tous les objets d'extension de <see cref="T:System.Xml.Xsl.XsltArgumentList" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.GetExtensionObject(System.String)">
      <summary>Obtient l'objet associé à l'espace de noms spécifié.</summary>
      <param name="namespaceUri">URI d'espace de noms de l'objet.</param>
      <returns>Objet d'URI d'espace de noms ou <see langword="null" />, s'il n'en existe pas.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.GetParam(System.String,System.String)">
      <summary>Obtient le paramètre associé au nom qualifié d'espace de noms.</summary>
      <param name="name">Nom du paramètre. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> ne vérifie pas si le nom passé est un nom local valide ; cependant, ce nom ne peut pas être <see langword="null" />.</param>
      <param name="namespaceUri">URI d'espace de noms associé au paramètre.</param>
      <returns>Objet de paramètre ou <see langword="null" />, s'il n'en existe pas.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.RemoveExtensionObject(System.String)">
      <summary>Supprime l'objet ainsi que l'URI d'espace de noms de <see cref="T:System.Xml.Xsl.XsltArgumentList" />.</summary>
      <param name="namespaceUri">URI d'espace de noms associé à l'objet à supprimer.</param>
      <returns>Objet avec l'URI d'espace de noms ou <see langword="null" />, s'il n'en existe pas.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.RemoveParam(System.String,System.String)">
      <summary>Supprime le paramètre de <see cref="T:System.Xml.Xsl.XsltArgumentList" />.</summary>
      <param name="name">Nom du paramètre à supprimer. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> ne vérifie pas si le nom passé est un nom local valide ; cependant, ce nom ne peut pas être <see langword="null" />.</param>
      <param name="namespaceUri">URI d'espace de noms du paramètre à supprimer.</param>
      <returns>Objet de paramètre ou <see langword="null" />, s'il n'en existe pas.</returns>
    </member>
    <member name="E:System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered">
      <summary>Se produit lorsqu’un message est spécifié dans la feuille de style par l’élément <c>xsl:message</c>.</summary>
    </member>
    <member name="T:System.Xml.Xsl.XsltCompileException">
      <summary>Exception levée par la méthode Load lorsqu’une erreur se produit dans la feuille de style XSLT.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Xsl.XsltCompileException" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.#ctor(System.Exception,System.String,System.Int32,System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see langword="XsltCompileException" />.</summary>
      <param name="inner">
        <see cref="T:System.Exception" /> qui a levé <see langword="XsltCompileException" />.</param>
      <param name="sourceUri">Chemin d'accès de la feuille de style.</param>
      <param name="lineNumber">Numéro de la ligne indiquant l'endroit où l'erreur s'est produite dans la feuille de style.</param>
      <param name="linePosition">Position de ligne indiquant l'endroit où l'erreur s'est produite dans la feuille de style.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see langword="XsltCompileException" /> à l'aide des informations contenues dans les objets <see cref="T:System.Runtime.Serialization.SerializationInfo" /> et <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">Objet <see langword="SerializationInfo" /> contenant toutes les propriétés de <see langword="XsltCompileException" />.</param>
      <param name="context">Objet <see langword="StreamingContext" /> contenant les informations de contexte.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Xsl.XsltCompileException" /> avec un message d'erreur spécifié.</summary>
      <param name="message">Message décrivant l'erreur.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Xsl.XsltCompileException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message décrivant l'erreur.</param>
      <param name="innerException">L'exception qui est la cause de l'exception actuelle ou <see langword="null" /> si aucune exception interne n'est spécifiée.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Transmet toutes les propriétés <see langword="XsltCompileException" /> dans la classe <see cref="T:System.Runtime.Serialization.SerializationInfo" /> pour le <see cref="T:System.Runtime.Serialization.StreamingContext" /> donné.</summary>
      <param name="info">Objet <see langword="SerializationInfo" />.</param>
      <param name="context">Objet <see langword="StreamingContext" />.</param>
    </member>
    <member name="T:System.Xml.Xsl.XsltContext">
      <summary>Encapsule le contexte d'exécution actuel du processeur XSLT (Extensible Stylesheet Language for Transformations) permettant à XPath (XML Path Language) de résoudre des fonctions, des paramètres et des espaces de noms dans des expressions XPath.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Xsl.XsltContext" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.#ctor(System.Xml.NameTable)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Xsl.XsltContext" /> avec le <see cref="T:System.Xml.NameTable" /> spécifié.</summary>
      <param name="table">
        <see cref="T:System.Xml.NameTable" /> à utiliser.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.CompareDocument(System.String,System.String)">
      <summary>En cas de substitution dans une classe dérivée, compare les URI (Uniform Resource Identifier) de base de deux documents dans l'ordre de chargement des documents par le processeur XSLT (c'est-à-dire la classe <see cref="T:System.Xml.Xsl.XslTransform" />).</summary>
      <param name="baseUri">URI de base du premier document à comparer.</param>
      <param name="nextbaseUri">URI de base du deuxième document à comparer.</param>
      <returns>Valeur entière décrivant l’ordre relatif des deux URI de base : -1 si <paramref name="baseUri" /> se produit avant <paramref name="nextbaseUri" /> ; 0 si les deux URI de base sont identiques ; 1 si <paramref name="baseUri" /> se produit après <paramref name="nextbaseUri" />.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.PreserveWhitespace(System.Xml.XPath.XPathNavigator)">
      <summary>Substitué dans une classe dérivée, évalue si les nœuds d'espaces blancs doivent être préservés ou débarrassés du contexte donné.</summary>
      <param name="node">Nœud d'espace blanc à préserver ou à vider dans le contexte en cours.</param>
      <returns>
        <see langword="true" /> si l’espace blanc doit être préservé ; <see langword="false" /> si l’espace blanc doit être supprimé.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.ResolveFunction(System.String,System.String,System.Xml.XPath.XPathResultType[])">
      <summary>En cas de substitution dans une classe dérivée, résout une référence de fonction et retourne un <see cref="T:System.Xml.Xsl.IXsltContextFunction" /> représentant la fonction. <see cref="T:System.Xml.Xsl.IXsltContextFunction" /> est utilisée au moment de l'exécution pour obtenir la valeur de retour de la fonction.</summary>
      <param name="prefix">Préfixe de la fonction tel qu'il apparaît dans l'expression XPath.</param>
      <param name="name">Nom de la fonction.</param>
      <param name="ArgTypes">Tableau de types d'argument pour la fonction en cours de résolution. Ceci vous permet de faire un choix entre les méthodes portant le même nom (par exemple, méthodes surchargées).</param>
      <returns>
        <see cref="T:System.Xml.Xsl.IXsltContextFunction" /> représentant la fonction.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.ResolveVariable(System.String,System.String)">
      <summary>En cas de substitution dans une classe dérivée, résout une référence de variable et retourne un <see cref="T:System.Xml.Xsl.IXsltContextVariable" /> représentant la variable.</summary>
      <param name="prefix">Préfixe de la variable tel qu'il apparaît dans l'expression XPath.</param>
      <param name="name">Nom de la variable.</param>
      <returns>
        <see cref="T:System.Xml.Xsl.IXsltContextVariable" /> représentant la variable au moment de l'exécution.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltContext.Whitespace">
      <summary>En cas de substitution dans une classe dérivée, obtient une valeur indiquant si des nœuds d'espaces blancs doivent être inclus dans le résultat.</summary>
      <returns>
        <see langword="true" /> pour vérifier les nœuds d'espaces blancs dans le document source en vue de leur inclusion dans le résultat ; <see langword="false" /> pour ne pas évaluer les nœuds d'espaces blancs. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="T:System.Xml.Xsl.XsltException">
      <summary>Exception levée lorsqu'une erreur se produit lors du traitement d'une transformation XSLT.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Xsl.XsltException" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see langword="XsltException" /> à l'aide des informations contenues dans les objets <see cref="T:System.Runtime.Serialization.SerializationInfo" /> et <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">Objet <see langword="SerializationInfo" /> contenant toutes les propriétés de <see langword="XsltException" />.</param>
      <param name="context">Objet <see langword="StreamingContext" />.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Xsl.XsltException" /> avec un message d'erreur spécifié.</summary>
      <param name="message">Message décrivant l'erreur.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see langword="XsltException" />.</summary>
      <param name="message">Description de la condition d'erreur.</param>
      <param name="innerException">
        <see cref="T:System.Exception" /> qui a levé le <see langword="XsltException" /> éventuel. Cette valeur peut être <see langword="null" />.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Transmet toutes les propriétés <see langword="XsltException" /> dans la classe <see cref="T:System.Runtime.Serialization.SerializationInfo" /> pour le <see cref="T:System.Runtime.Serialization.StreamingContext" /> donné.</summary>
      <param name="info">Objet <see langword="SerializationInfo" />.</param>
      <param name="context">Objet <see langword="StreamingContext" />.</param>
    </member>
    <member name="P:System.Xml.Xsl.XsltException.LineNumber">
      <summary>Obtient le numéro de la ligne indiquant l'endroit où l'erreur s'est produite dans la feuille de style.</summary>
      <returns>Numéro de la ligne indiquant l'endroit où l'erreur s'est produite dans la feuille de style.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltException.LinePosition">
      <summary>Obtient la position de ligne indiquant l'endroit où l'erreur s'est produite dans la feuille de style.</summary>
      <returns>Position de ligne indiquant l'endroit où l'erreur s'est produite dans la feuille de style.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltException.Message">
      <summary>Obtient le message d'erreur mis en forme qui décrit l'exception en cours.</summary>
      <returns>Message d'erreur mis en forme qui décrit l'exception en cours.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltException.SourceUri">
      <summary>Obtient le chemin d'accès de la feuille de style.</summary>
      <returns>Chemin d'accès de la feuille de style.</returns>
    </member>
    <member name="T:System.Xml.Xsl.XsltMessageEncounteredEventArgs">
      <summary>Fournit des données pour l'événement <see cref="E:System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltMessageEncounteredEventArgs.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Xsl.XsltMessageEncounteredEventArgs" />.</summary>
    </member>
    <member name="P:System.Xml.Xsl.XsltMessageEncounteredEventArgs.Message">
      <summary>Obtient le contenu de l’élément <c>xsl:message</c>.</summary>
      <returns>Contenu de l’élément <c>xsl: message</c> .</returns>
    </member>
    <member name="T:System.Xml.Xsl.XsltMessageEncounteredEventHandler">
      <summary>Représente la méthode qui gérera l'événement <see cref="E:System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered" />.</summary>
      <param name="sender">Source de l'événement.</param>
      <param name="e">
        <see cref="T:System.Xml.Xsl.XsltMessageEncounteredEventArgs" /> contenant les données d'événement.</param>
    </member>
    <member name="T:System.Xml.Xsl.XslTransform">
      <summary>Transforme les données XML à l'aide d'une feuille de style XSLT (Extensible Stylesheet Language for Transformations).</summary>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Xsl.XslTransform" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.String)">
      <summary>Charge la feuille de style XSLT spécifiée par une URL.</summary>
      <param name="url">URL qui spécifie la feuille de style XSLT à charger.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">La ressource chargée n'est pas une feuille de style valide.</exception>
      <exception cref="T:System.Security.SecurityException">La feuille de style contient des scripts incorporés et l'appelant n'a pas d'autorisation <see langword="UnmanagedCode" />.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)">
      <summary>Charge la feuille de style XSLT spécifiée par une URL.</summary>
      <param name="url">URL qui spécifie la feuille de style XSLT à charger.</param>
      <param name="resolver">
        <see cref="T:System.Xml.XmlResolver" /> à utiliser pour charger la feuille de style et toutes les feuilles de style référencées dans les éléments <c>xsl:import</c> et <c>xsl:include</c>.  
S'il a la valeur <see langword="null" />, un <see cref="T:System.Xml.XmlUrlResolver" /> par défaut sans informations d'identification d'utilisateur est employé pour ouvrir la feuille de style. Dans la mesure où le <see cref="T:System.Xml.XmlUrlResolver" /> par défaut n’est pas utilisé pour résoudre des ressources externes dans la feuille de style, les éléments <c>xsl:import</c> et <c>xsl:include</c> ne sont pas résolus.  
<see cref="T:System.Xml.XmlResolver" /> n'est pas mis en cache à la fin de la méthode <see cref="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" />.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">La ressource chargée n'est pas une feuille de style valide.</exception>
      <exception cref="T:System.Security.SecurityException">La feuille de style contient des scripts incorporés et l'appelant n'a pas d'autorisation <see langword="UnmanagedCode" />.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader)">
      <summary>Charge la feuille de style XSLT figurant dans <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="stylesheet">Objet <see cref="T:System.Xml.XmlReader" /> qui contient la feuille de style XSLT.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">Le nœud actuel n'est pas conforme à une feuille de style valide.</exception>
      <exception cref="T:System.Security.SecurityException">La feuille de style contient des scripts incorporés et l'appelant n'a pas d'autorisation <see langword="UnmanagedCode" />.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)">
      <summary>Charge la feuille de style XSLT figurant dans <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="stylesheet">Objet <see cref="T:System.Xml.XmlReader" /> qui contient la feuille de style XSLT.</param>
      <param name="resolver">
        <see cref="T:System.Xml.XmlResolver" /> utilisé pour charger toute feuille de style référencée dans les éléments <c>xsl:import</c> et <c>xsl:include</c>. Si la valeur est <see langword="null" />, les ressources externes ne sont pas résolues.  
<see cref="T:System.Xml.XmlResolver" /> n'est pas mis en cache à la fin de la méthode <see cref="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" />.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">Le nœud actuel n'est pas conforme à une feuille de style valide.</exception>
      <exception cref="T:System.Security.SecurityException">La feuille de style contient des scripts incorporés et l'appelant n'a pas d'autorisation <see langword="UnmanagedCode" />.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable)">
      <summary>Charge la feuille de style XSLT figurant dans <see cref="T:System.Xml.XPath.IXPathNavigable" />.</summary>
      <param name="stylesheet">Objet implémentant l'interface <see cref="T:System.Xml.XPath.IXPathNavigable" />. Dans le .NET Framework, il peut s’agir de <see cref="T:System.Xml.XmlNode" /> (généralement <see cref="T:System.Xml.XmlDocument" />) ou de <see cref="T:System.Xml.XPath.XPathDocument" /> contenant la feuille de style XSLT.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">La ressource chargée n'est pas une feuille de style valide.</exception>
      <exception cref="T:System.Security.SecurityException">La feuille de style contient des scripts incorporés et l'appelant n'a pas d'autorisation <see langword="UnmanagedCode" />.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)">
      <summary>Charge la feuille de style XSLT figurant dans <see cref="T:System.Xml.XPath.IXPathNavigable" />.</summary>
      <param name="stylesheet">Objet implémentant l'interface <see cref="T:System.Xml.XPath.IXPathNavigable" />. Dans le .NET Framework, il peut s’agir de <see cref="T:System.Xml.XmlNode" /> (généralement <see cref="T:System.Xml.XmlDocument" />) ou de <see cref="T:System.Xml.XPath.XPathDocument" /> contenant la feuille de style XSLT.</param>
      <param name="resolver">
        <see cref="T:System.Xml.XmlResolver" /> utilisé pour charger toute feuille de style référencée dans les éléments <c>xsl:import</c> et <c>xsl:include</c>. Si la valeur est <see langword="null" />, les ressources externes ne sont pas résolues.  
<see cref="T:System.Xml.XmlResolver" /> n'est pas mis en cache à la fin de la méthode <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">La ressource chargée n'est pas une feuille de style valide.</exception>
      <exception cref="T:System.Security.SecurityException">La feuille de style contient des scripts incorporés et l'appelant n'a pas d'autorisation <see langword="UnmanagedCode" />.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator)">
      <summary>Charge la feuille de style XSLT figurant dans <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <param name="stylesheet">Objet <see cref="T:System.Xml.XPath.XPathNavigator" /> qui contient la feuille de style XSLT.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">Le nœud actuel n'est pas conforme à une feuille de style valide.</exception>
      <exception cref="T:System.Security.SecurityException">La feuille de style contient des scripts incorporés et l'appelant n'a pas d'autorisation <see langword="UnmanagedCode" />.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)">
      <summary>Charge la feuille de style XSLT figurant dans <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <param name="stylesheet">Objet <see cref="T:System.Xml.XPath.XPathNavigator" /> qui contient la feuille de style XSLT.</param>
      <param name="resolver">
        <see cref="T:System.Xml.XmlResolver" /> utilisé pour charger toute feuille de style référencée dans les éléments <c>xsl:import</c> et <c>xsl:include</c>. Si la valeur est <see langword="null" />, les ressources externes ne sont pas résolues.  
<see cref="T:System.Xml.XmlResolver" /> n'est pas mis en cache à la fin de la méthode <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">Le nœud actuel n'est pas conforme à une feuille de style valide.</exception>
      <exception cref="T:System.Security.SecurityException">La feuille de style contient des scripts incorporés et l'appelant n'a pas d'autorisation <see langword="UnmanagedCode" />.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String)">
      <summary>Convertit les données XML dans le fichier d'entrée et renvoie le résultat dans un fichier de sortie.</summary>
      <param name="inputfile">URL du document source à transformer.</param>
      <param name="outputfile">URL du fichier de sortie.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String,System.Xml.XmlResolver)">
      <summary>Convertit les données XML dans le fichier d'entrée et renvoie le résultat dans un fichier de sortie.</summary>
      <param name="inputfile">URL du document source à transformer.</param>
      <param name="outputfile">URL du fichier de sortie.</param>
      <param name="resolver">
        <see cref="T:System.Xml.XmlResolver" /> utilisé pour résoudre la fonction <c>document()</c> XSLT. S’il s’agit de <see langword="null" />, la fonction <c>document()</c> n’est pas résolue.  
<see cref="T:System.Xml.XmlResolver" /> n'est pas mis en cache à la fin de la méthode <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)">
      <summary>Transforme les données XML dans <see cref="T:System.Xml.XPath.IXPathNavigable" /> en utilisant les <paramref name="args" /> spécifiés et renvoie le résultat dans <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="input">Objet implémentant l'interface <see cref="T:System.Xml.XPath.IXPathNavigable" />. Dans le .NET Framework, il peut s’agir de <see cref="T:System.Xml.XmlNode" /> (généralement <see cref="T:System.Xml.XmlDocument" />) ou de <see cref="T:System.Xml.XPath.XPathDocument" /> contenant les données à transformer.</param>
      <param name="args">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenant des arguments qualifiés par un espace de noms, utilisés comme données d'entrée pour la transformation.</param>
      <returns>
        <see cref="T:System.Xml.XmlReader" /> contenant les résultats de la transformation.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
      <summary>Transforme les données XML dans <see cref="T:System.Xml.XPath.IXPathNavigable" /> en utilisant les <paramref name="args" /> spécifiés et renvoie le résultat dans <see cref="T:System.IO.Stream" />.</summary>
      <param name="input">Objet implémentant l'interface <see cref="T:System.Xml.XPath.IXPathNavigable" />. Dans le .NET Framework, il peut s’agir de <see cref="T:System.Xml.XmlNode" /> (généralement <see cref="T:System.Xml.XmlDocument" />) ou de <see cref="T:System.Xml.XPath.XPathDocument" /> contenant les données à transformer.</param>
      <param name="args">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenant des arguments qualifiés par un espace de noms, utilisés comme données d'entrée pour la transformation.</param>
      <param name="output">Flux dans lequel vous voulez générer.</param>
      <exception cref="T:System.InvalidOperationException">Une erreur s'est produite lors du traitement de la transformation XSLT.  
Remarque : Il s’agit d’un changement de comportement par rapport aux versions précédentes. Une <see cref="T:System.Xml.Xsl.XsltException" /> est levée si vous utilisez Microsoft .NET Framework version 1.1 ou antérieure.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)">
      <summary>Transforme les données XML dans <see cref="T:System.Xml.XPath.IXPathNavigable" /> en utilisant les <paramref name="args" /> spécifiés et renvoie le résultat dans <see cref="T:System.IO.Stream" />.</summary>
      <param name="input">Objet implémentant l'interface <see cref="T:System.Xml.XPath.IXPathNavigable" />. Dans le .NET Framework, il peut s’agir de <see cref="T:System.Xml.XmlNode" /> (généralement <see cref="T:System.Xml.XmlDocument" />) ou de <see cref="T:System.Xml.XPath.XPathDocument" /> contenant les données à transformer.</param>
      <param name="args">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenant des arguments qualifiés par un espace de noms, utilisés comme données d'entrée pour la transformation.</param>
      <param name="output">Flux dans lequel vous voulez générer.</param>
      <param name="resolver">
        <see cref="T:System.Xml.XmlResolver" /> utilisé pour résoudre la fonction <c>document()</c> XSLT. S’il s’agit de <see langword="null" />, la fonction <c>document()</c> n’est pas résolue.  
<see cref="T:System.Xml.XmlResolver" /> n'est pas mis en cache à la fin de la méthode <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />.</param>
      <exception cref="T:System.InvalidOperationException">Une erreur s'est produite lors du traitement de la transformation XSLT.  
Remarque : Il s’agit d’un changement de comportement par rapport aux versions précédentes. Une <see cref="T:System.Xml.Xsl.XsltException" /> est levée si vous utilisez Microsoft .NET Framework version 1.1 ou antérieure.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
      <summary>Transforme les données XML dans <see cref="T:System.Xml.XPath.IXPathNavigable" /> en utilisant les <paramref name="args" /> spécifiés et renvoie le résultat dans <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="input">Objet implémentant l'interface <see cref="T:System.Xml.XPath.IXPathNavigable" />. Dans le .NET Framework, il peut s’agir de <see cref="T:System.Xml.XmlNode" /> (généralement <see cref="T:System.Xml.XmlDocument" />) ou de <see cref="T:System.Xml.XPath.XPathDocument" /> contenant les données à transformer.</param>
      <param name="args">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenant des arguments qualifiés par un espace de noms, utilisés comme données d'entrée pour la transformation.</param>
      <param name="output">
        <see cref="T:System.IO.TextWriter" /> vers lequel vous souhaitez exporter.</param>
      <exception cref="T:System.InvalidOperationException">Une erreur s'est produite lors du traitement de la transformation XSLT.  
Remarque : Il s’agit d’un changement de comportement par rapport aux versions précédentes. Une <see cref="T:System.Xml.Xsl.XsltException" /> est levée si vous utilisez Microsoft .NET Framework version 1.1 ou antérieure.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)">
      <summary>Transforme les données XML dans <see cref="T:System.Xml.XPath.IXPathNavigable" /> en utilisant les <paramref name="args" /> spécifiés et renvoie le résultat dans <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="input">Objet implémentant l'interface <see cref="T:System.Xml.XPath.IXPathNavigable" />. Dans le .NET Framework, il peut s’agir de <see cref="T:System.Xml.XmlNode" /> (généralement <see cref="T:System.Xml.XmlDocument" />) ou de <see cref="T:System.Xml.XPath.XPathDocument" /> contenant les données à transformer.</param>
      <param name="args">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenant des arguments qualifiés par un espace de noms, utilisés comme données d'entrée pour la transformation.</param>
      <param name="output">
        <see cref="T:System.IO.TextWriter" /> vers lequel vous souhaitez exporter.</param>
      <param name="resolver">
        <see cref="T:System.Xml.XmlResolver" /> utilisé pour résoudre la fonction <c>document()</c> XSLT. S’il s’agit de <see langword="null" />, la fonction <c>document()</c> n’est pas résolue.  
<see cref="T:System.Xml.XmlResolver" /> n'est pas mis en cache à la fin de la méthode <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />.</param>
      <exception cref="T:System.InvalidOperationException">Une erreur s'est produite lors du traitement de la transformation XSLT.  
Remarque : Il s’agit d’un changement de comportement par rapport aux versions précédentes. Une <see cref="T:System.Xml.Xsl.XsltException" /> est levée si vous utilisez Microsoft .NET Framework version 1.1 ou antérieure.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)">
      <summary>Transforme les données XML dans <see cref="T:System.Xml.XPath.IXPathNavigable" /> en utilisant les <paramref name="args" /> spécifiés et renvoie le résultat dans <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="input">Objet implémentant l'interface <see cref="T:System.Xml.XPath.IXPathNavigable" />. Dans le .NET Framework, il peut s’agir de <see cref="T:System.Xml.XmlNode" /> (généralement <see cref="T:System.Xml.XmlDocument" />) ou de <see cref="T:System.Xml.XPath.XPathDocument" /> contenant les données à transformer.</param>
      <param name="args">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenant des arguments qualifiés par un espace de noms, utilisés comme données d'entrée pour la transformation.</param>
      <param name="resolver">
        <see cref="T:System.Xml.XmlResolver" /> utilisé pour résoudre la fonction <c>document()</c> XSLT. S’il s’agit de <see langword="null" />, la fonction <c>document()</c> n’est pas résolue.  
<see cref="T:System.Xml.XmlResolver" /> n'est pas mis en cache à la fin de la méthode <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />.</param>
      <returns>
        <see cref="T:System.Xml.XmlReader" /> contenant les résultats de la transformation.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
      <summary>Transforme les données XML dans <see cref="T:System.Xml.XPath.IXPathNavigable" /> en utilisant les <paramref name="args" /> spécifiés et renvoie le résultat dans <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="input">Objet implémentant l'interface <see cref="T:System.Xml.XPath.IXPathNavigable" />. Dans le .NET Framework, il peut s’agir de <see cref="T:System.Xml.XmlNode" /> (généralement <see cref="T:System.Xml.XmlDocument" />) ou de <see cref="T:System.Xml.XPath.XPathDocument" /> contenant les données à transformer.</param>
      <param name="args">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenant des arguments qualifiés par un espace de noms, utilisés comme données d'entrée pour la transformation.</param>
      <param name="output">
        <see cref="T:System.Xml.XmlWriter" /> vers lequel vous souhaitez exporter.</param>
      <exception cref="T:System.InvalidOperationException">Une erreur s'est produite lors du traitement de la transformation XSLT.  
Remarque : Il s’agit d’un changement de comportement par rapport aux versions précédentes. Une <see cref="T:System.Xml.Xsl.XsltException" /> est levée si vous utilisez Microsoft .NET Framework version 1.1 ou antérieure.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)">
      <summary>Transforme les données XML dans <see cref="T:System.Xml.XPath.IXPathNavigable" /> en utilisant les <paramref name="args" /> spécifiés et renvoie le résultat dans <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="input">Objet implémentant l'interface <see cref="T:System.Xml.XPath.IXPathNavigable" />. Dans le .NET Framework, il peut s’agir de <see cref="T:System.Xml.XmlNode" /> (généralement <see cref="T:System.Xml.XmlDocument" />) ou de <see cref="T:System.Xml.XPath.XPathDocument" /> contenant les données à transformer.</param>
      <param name="args">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenant des arguments qualifiés par un espace de noms, utilisés comme données d'entrée pour la transformation.</param>
      <param name="output">
        <see cref="T:System.Xml.XmlWriter" /> vers lequel vous souhaitez exporter.</param>
      <param name="resolver">
        <see cref="T:System.Xml.XmlResolver" /> utilisé pour résoudre la fonction <c>document()</c> XSLT. S’il s’agit de <see langword="null" />, la fonction <c>document()</c> n’est pas résolue.  
<see cref="T:System.Xml.XmlResolver" /> n'est pas mis en cache à la fin de la méthode <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />.</param>
      <exception cref="T:System.InvalidOperationException">Une erreur s'est produite lors du traitement de la transformation XSLT.  
Remarque : Il s’agit d’un changement de comportement par rapport aux versions précédentes. Une <see cref="T:System.Xml.Xsl.XsltException" /> est levée si vous utilisez Microsoft .NET Framework version 1.1 ou antérieure.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)">
      <summary>Transforme les données XML dans <see cref="T:System.Xml.XPath.XPathNavigator" /> en utilisant les <paramref name="args" /> spécifiés et renvoie le résultat dans <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="input">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> contenant les données à transformer.</param>
      <param name="args">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenant des arguments qualifiés par un espace de noms, utilisés comme données d'entrée pour la transformation.</param>
      <returns>
        <see cref="T:System.Xml.XmlReader" /> contenant les résultats de la transformation.</returns>
      <exception cref="T:System.InvalidOperationException">Une erreur s'est produite lors du traitement de la transformation XSLT.  
Remarque : Il s’agit d’un changement de comportement par rapport aux versions précédentes. Une <see cref="T:System.Xml.Xsl.XsltException" /> est levée si vous utilisez Microsoft .NET Framework version 1.1 ou antérieure.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
      <summary>Transforme les données XML dans <see cref="T:System.Xml.XPath.XPathNavigator" /> en utilisant les <paramref name="args" /> spécifiés et renvoie le résultat dans <see cref="T:System.IO.Stream" />.</summary>
      <param name="input">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> contenant les données à transformer.</param>
      <param name="args">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenant des arguments qualifiés par un espace de noms, utilisés comme données d'entrée pour la transformation.</param>
      <param name="output">Flux dans lequel vous voulez générer.</param>
      <exception cref="T:System.InvalidOperationException">Une erreur s'est produite lors du traitement de la transformation XSLT.  
Remarque : Il s’agit d’un changement de comportement par rapport aux versions précédentes. Une <see cref="T:System.Xml.Xsl.XsltException" /> est levée si vous utilisez Microsoft .NET Framework version 1.1 ou antérieure.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)">
      <summary>Transforme les données XML dans <see cref="T:System.Xml.XPath.XPathNavigator" /> en utilisant les <paramref name="args" /> spécifiés et renvoie le résultat dans <see cref="T:System.IO.Stream" />.</summary>
      <param name="input">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> contenant les données à transformer.</param>
      <param name="args">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenant des arguments qualifiés par un espace de noms, utilisés comme données d'entrée pour la transformation.</param>
      <param name="output">Flux dans lequel vous voulez générer.</param>
      <param name="resolver">
        <see cref="T:System.Xml.XmlResolver" /> utilisé pour résoudre la fonction <c>document()</c> XSLT. S’il s’agit de <see langword="null" />, la fonction <c>document()</c> n’est pas résolue.  
<see cref="T:System.Xml.XmlResolver" /> n'est pas mis en cache à la fin de la méthode <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />.</param>
      <exception cref="T:System.InvalidOperationException">Une erreur s'est produite lors du traitement de la transformation XSLT.  
Remarque : Il s’agit d’un changement de comportement par rapport aux versions précédentes. Une <see cref="T:System.Xml.Xsl.XsltException" /> est levée si vous utilisez Microsoft .NET Framework version 1.1 ou antérieure.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
      <summary>Transforme les données XML dans <see cref="T:System.Xml.XPath.XPathNavigator" /> en utilisant les <paramref name="args" /> spécifiés et renvoie le résultat dans <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="input">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> contenant les données à transformer.</param>
      <param name="args">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenant des arguments qualifiés par un espace de noms, utilisés comme données d'entrée pour la transformation.</param>
      <param name="output">
        <see cref="T:System.IO.TextWriter" /> vers lequel vous souhaitez exporter.</param>
      <exception cref="T:System.InvalidOperationException">Une erreur s'est produite lors du traitement de la transformation XSLT.  
Remarque : Il s’agit d’un changement de comportement par rapport aux versions précédentes. Une <see cref="T:System.Xml.Xsl.XsltException" /> est levée si vous utilisez Microsoft .NET Framework version 1.1 ou antérieure.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)">
      <summary>Transforme les données XML dans <see cref="T:System.Xml.XPath.XPathNavigator" /> en utilisant les <paramref name="args" /> spécifiés et renvoie le résultat dans <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="input">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> contenant les données à transformer.</param>
      <param name="args">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenant des arguments qualifiés par un espace de noms, utilisés comme données d'entrée pour la transformation.</param>
      <param name="output">
        <see cref="T:System.IO.TextWriter" /> vers lequel vous souhaitez exporter.</param>
      <param name="resolver">
        <see cref="T:System.Xml.XmlResolver" /> utilisé pour résoudre la fonction <c>document()</c> XSLT. S’il s’agit de <see langword="null" />, la fonction <c>document()</c> n’est pas résolue.  
<see cref="T:System.Xml.XmlResolver" /> n'est pas mis en cache à la fin de la méthode <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />.</param>
      <exception cref="T:System.InvalidOperationException">Une erreur s'est produite lors du traitement de la transformation XSLT.  
Remarque : Il s’agit d’un changement de comportement par rapport aux versions précédentes. Une <see cref="T:System.Xml.Xsl.XsltException" /> est levée si vous utilisez Microsoft .NET Framework version 1.1 ou antérieure.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)">
      <summary>Transforme les données XML dans <see cref="T:System.Xml.XPath.XPathNavigator" /> en utilisant les <paramref name="args" /> spécifiés et renvoie le résultat dans <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="input">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> contenant les données à transformer.</param>
      <param name="args">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenant des arguments qualifiés par un espace de noms, utilisés comme données d'entrée pour la transformation.</param>
      <param name="resolver">
        <see cref="T:System.Xml.XmlResolver" /> utilisé pour résoudre la fonction <c>document()</c> XSLT. S’il s’agit de <see langword="null" />, la fonction <c>document()</c> n’est pas résolue.  
<see cref="T:System.Xml.XmlResolver" /> n'est pas mis en cache à la fin de la méthode <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />.</param>
      <returns>
        <see cref="T:System.Xml.XmlReader" /> contenant les résultats de la transformation.</returns>
      <exception cref="T:System.InvalidOperationException">Une erreur s'est produite lors du traitement de la transformation XSLT.  
Remarque : Il s’agit d’un changement de comportement par rapport aux versions précédentes. Une <see cref="T:System.Xml.Xsl.XsltException" /> est levée si vous utilisez Microsoft .NET Framework version 1.1 ou antérieure.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
      <summary>Convertit les données XML spécifiées dans <see cref="T:System.Xml.XPath.XPathNavigator" /> en utilisant les arguments spécifiés et renvoie le résultat dans <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="input">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> contenant les données à transformer.</param>
      <param name="args">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenant des arguments qualifiés par un espace de noms, utilisés comme données d'entrée pour la transformation.</param>
      <param name="output">
        <see cref="T:System.Xml.XmlWriter" /> vers lequel vous souhaitez exporter.</param>
      <exception cref="T:System.InvalidOperationException">Une erreur s'est produite lors du traitement de la transformation XSLT.  
Remarque : Il s’agit d’un changement de comportement par rapport aux versions précédentes. Une <see cref="T:System.Xml.Xsl.XsltException" /> est levée si vous utilisez Microsoft .NET Framework version 1.1 ou antérieure.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)">
      <summary>Convertit les données XML spécifiées dans <see cref="T:System.Xml.XPath.XPathNavigator" /> en utilisant les arguments spécifiés et renvoie le résultat dans <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="input">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> contenant les données à transformer.</param>
      <param name="args">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenant des arguments qualifiés par un espace de noms, utilisés comme données d'entrée pour la transformation.</param>
      <param name="output">
        <see cref="T:System.Xml.XmlWriter" /> vers lequel vous souhaitez exporter.</param>
      <param name="resolver">
        <see cref="T:System.Xml.XmlResolver" /> utilisé pour résoudre la fonction <c>document()</c> XSLT. S’il s’agit de <see langword="null" />, la fonction <c>document()</c> n’est pas résolue.  
<see cref="T:System.Xml.XmlResolver" /> n'est pas mis en cache à la fin de la méthode <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />.</param>
      <exception cref="T:System.InvalidOperationException">Une erreur s'est produite lors du traitement de la transformation XSLT.  
Remarque : Il s’agit d’un changement de comportement par rapport aux versions précédentes. Une <see cref="T:System.Xml.Xsl.XsltException" /> est levée si vous utilisez Microsoft .NET Framework version 1.1 ou antérieure.</exception>
    </member>
    <member name="P:System.Xml.Xsl.XslTransform.XmlResolver">
      <summary>Définit le <see cref="T:System.Xml.XmlResolver" /> utilisé pour résoudre les ressources externes lorsque la méthode <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> est appelée.</summary>
      <returns>
        <see cref="T:System.Xml.XmlResolver" /> à utiliser pendant la transformation. Si la valeur <see langword="null" />est, la fonction <c>document XSLT ()</c> n’est pas résolue.</returns>
    </member>
    <member name="T:System.Xml.Xsl.XsltSettings">
      <summary>Spécifie les fonctionnalités XSLT à prendre en charge lors de l'exécution de la feuille de style XSLT.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltSettings.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Xsl.XsltSettings" /> avec les paramètres par défaut.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltSettings.#ctor(System.Boolean,System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Xsl.XsltSettings" /> avec les paramètres spécifiés.</summary>
      <param name="enableDocumentFunction">
        <see langword="true" /> pour activer la prise en charge de la fonction <c>document()</c> XSLT ; sinon, <see langword="false" />.</param>
      <param name="enableScript">
        <see langword="true" /> pour activer la prise en charge des blocs de scripts incorporés ; sinon, <see langword="false" />.</param>
    </member>
    <member name="P:System.Xml.Xsl.XsltSettings.Default">
      <summary>Obtient un objet <see cref="T:System.Xml.Xsl.XsltSettings" /> avec les paramètres par défaut. La prise en charge de la fonction <c>document()</c> XSLT et des blocs de script incorporés est désactivée.</summary>
      <returns>Objet <see cref="T:System.Xml.Xsl.XsltSettings" /> dont les propriétés <see cref="P:System.Xml.Xsl.XsltSettings.EnableDocumentFunction" /> et <see cref="P:System.Xml.Xsl.XsltSettings.EnableScript" /> ont la valeur <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltSettings.EnableDocumentFunction">
      <summary>Obtient ou définit une valeur indiquant s’il convient d’activer la prise en charge de la fonction <c>document()</c> XSLT.</summary>
      <returns>
        <see langword="true" />pour prendre en charge la fonction <c>document ()</c> XSLT; Sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltSettings.EnableScript">
      <summary>Obtient ou définit une valeur indiquant s'il convient d'activer la prise en charge des blocs de script incorporés.</summary>
      <returns>
        <see langword="true" /> pour prendre en charge des blocs de script dans les feuilles de style XSLT ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltSettings.TrustedXslt">
      <summary>Obtient un objet <see cref="T:System.Xml.Xsl.XsltSettings" /> qui active la prise en charge de la fonction <c>document()</c> XSLT et des blocs de script incorporés.</summary>
      <returns>Objet <see cref="T:System.Xml.Xsl.XsltSettings" /> dont les propriétés <see cref="P:System.Xml.Xsl.XsltSettings.EnableDocumentFunction" /> et <see cref="P:System.Xml.Xsl.XsltSettings.EnableScript" /> ont la valeur <see langword="true" />.</returns>
    </member>
  </members>
</doc>