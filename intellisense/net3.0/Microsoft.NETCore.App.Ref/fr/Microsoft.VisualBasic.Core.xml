<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.VisualBasic.Core</name>
  </assembly>
  <members>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.ApplicationBase">
      <summary>Fournit des propriétés, méthodes et événements en rapport avec l'application actuelle.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.ApplicationServices.ApplicationBase" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeCulture(System.String)">
      <summary>Change la culture utilisée par le thread actuel pour le traitement et la mise en forme de chaînes.</summary>
      <param name="cultureName">
        <see langword="String" />. Nom de la culture sous la forme d'une chaîne. Pour obtenir la liste des noms possibles, consultez <see cref="T:System.Globalization.CultureInfo" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cultureName" /> est <see langword="Nothing" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="cultureName" /> n’est pas un nom de culture valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeUICulture(System.String)">
      <summary>Change la culture que le thread actuel utilise pour récupérer des ressources spécifiques à la culture.</summary>
      <param name="cultureName">
        <see langword="String" />. Nom de la culture sous la forme d'une chaîne. Pour obtenir la liste des noms possibles, consultez <see cref="T:System.Globalization.CultureInfo" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cultureName" /> a la valeur <see langword="Nothing" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="cultureName" /> n’est pas un nom de culture valide.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Culture">
      <summary>Obtient la culture que le thread actuel utilise pour le traitement et la mise en forme de chaînes.</summary>
      <returns>Objet <see cref="T:System.Globalization.CultureInfo" /> qui représente la culture que le thread actuel utilise pour le traitement et la mise en forme de chaînes.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.GetEnvironmentVariable(System.String)">
      <summary>Retourne la valeur de la variable d'environnement spécifiée.</summary>
      <param name="name">
        <see langword="String" /> contenant le nom de la variable d'environnement.</param>
      <returns>
        <see langword="String" /> contenant la valeur de la variable d'environnement avec le nom <paramref name="name" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> a la valeur <see langword="Nothing" />.</exception>
      <exception cref="T:System.ArgumentException">La variable d'environnement spécifiée par <paramref name="name" /> n'existe pas.</exception>
      <exception cref="T:System.Security.SecurityException">Le code appelant ne dispose pas de <see cref="T:System.Security.Permissions.EnvironmentPermission" /> avec un accès <see langword="Read" />.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info">
      <summary>Obtient un objet qui fournit des propriétés destinées à obtenir des informations à propos de l'assembly de l'application, telles que le numéro de version, la description, et ainsi de suite.</summary>
      <returns>Objet <see cref="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" /> pour l'application en cours.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.UICulture">
      <summary>Obtient la culture que le thread actuel utilise pour récupérer des ressources spécifiques à la culture.</summary>
      <returns>Objet <see cref="T:System.Globalization.CultureInfo" /> qui représente la culture que le thread actuel utilise pour récupérer des ressources spécifiques à la culture.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo">
      <summary>Fournit des propriétés pour obtenir des informations relatives à l'application, telles que le numéro de version, la description, les assemblys chargés, et ainsi de suite.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.#ctor(System.Reflection.Assembly)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" /> à l'aide des informations d'assembly spécifiées.</summary>
      <param name="currentAssembly">
        <see cref="T:System.Reflection.Assembly" />. Assembly pour lequel obtenir ces informations.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName">
      <summary>Obtient le nom, sans extension, du fichier d'assembly pour l'application.</summary>
      <returns>
        <see langword="String" /> contenant le nom du fichier.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.CompanyName">
      <summary>Obtient le nom de la société associée à l'application.</summary>
      <returns>
        <see langword="String" /> qui contient le nom de la société associée à l'application.</returns>
      <exception cref="T:System.InvalidOperationException">L'assembly n'a pas d'attribut <see cref="T:System.Reflection.AssemblyCompanyAttribute" />.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Copyright">
      <summary>Obtient la mention des droits d'auteur associée à l'application.</summary>
      <returns>
        <see langword="String" /> contenant la mention des droits d'auteur associée à l'application.</returns>
      <exception cref="T:System.InvalidOperationException">L'assembly n'a pas d'attribut <see cref="T:System.Reflection.AssemblyCopyrightAttribute" />.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Description">
      <summary>Obtient la description associée à l'application.</summary>
      <returns>
        <see langword="String" /> contenant la description associée à l'application.</returns>
      <exception cref="T:System.InvalidOperationException">L'assembly n'a pas d'attribut <see cref="T:System.Reflection.AssemblyDescriptionAttribute" />.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.DirectoryPath">
      <summary>Obtient le répertoire dans lequel l'application est stockée.</summary>
      <returns>
        <see langword="String" /> qui contient le répertoire dans lequel l'application est stockée.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.LoadedAssemblies">
      <summary>Obtient une collection de tous les assemblys chargés par l'application.</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> de <see cref="T:System.Reflection.Assembly" /> contenant tous les assemblys chargés par l'application.</returns>
      <exception cref="T:System.AppDomainUnloadedException">Le domaine d'application n'est pas chargé.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.ProductName">
      <summary>Obtient le nom du produit associé à l'application.</summary>
      <returns>
        <see langword="String" /> contenant le nom du produit associé à l'application.</returns>
      <exception cref="T:System.InvalidOperationException">L'assembly n'a pas d'attribut <see cref="T:System.Reflection.AssemblyProductAttribute" />.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.StackTrace">
      <summary>Obtient les informations actuelles sur la trace de la pile.</summary>
      <returns>
        <see langword="String" /> contenant les informations actuelles sur la trace de la pile. La valeur de retour peut être <see cref="F:System.String.Empty" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Les informations de trace de la pile demandées sont hors limites.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Title">
      <summary>Obtient le titre associé à l'application.</summary>
      <returns>
        <see langword="String" /> contenant le <see cref="T:System.Reflection.AssemblyTitleAttribute" /> associé à l'application.</returns>
      <exception cref="T:System.InvalidOperationException">L'assembly n'a pas d'attribut <see cref="T:System.Reflection.AssemblyTitleAttribute" />.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Trademark">
      <summary>Obtient la mention de marque associée à l'application.</summary>
      <returns>
        <see langword="String" /> contenant la mention de marque associée à l'application.</returns>
      <exception cref="T:System.InvalidOperationException">L'assembly n'a pas d'attribut <see cref="T:System.Reflection.AssemblyTrademarkAttribute" />.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Version">
      <summary>Obtient le numéro de version de l'application.</summary>
      <returns>Objet <see cref="T:System.Version" /> contenant le numéro de version de l'application.</returns>
      <exception cref="T:System.Security.SecurityException">L'application n'a pas les autorisations suffisantes pour accéder à la version de l'assembly.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.WorkingSet">
      <summary>Obtient la quantité de mémoire physique mappée au contexte du processus.</summary>
      <returns>
        <see langword="Long" /> contenant le nombre d'octets de mémoire physique mappée au contexte du processus.</returns>
      <exception cref="T:System.Security.SecurityException">Il existe une situation de confiance partielle et l'utilisateur ne dispose pas des autorisations nécessaires.</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase">
      <summary>Fournit des propriétés, méthodes et événements en rapport avec l'application actuelle.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase" />.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs">
      <summary>Obtient une collection contenant les arguments de ligne de commande sous la forme de chaînes pour l'application actuelle.</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> de <see langword="String" />, contenant les arguments de ligne de commande sous la forme de chaînes pour l'application actuelle.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.InternalCommandLine">
      <summary>Définit les valeurs à utiliser comme arguments de ligne de commande de l'application actuelle.</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> de <see langword="String" />, contenant les chaînes à utiliser comme arguments de ligne de commande pour l'application actuelle.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs">
      <summary>Fournit des données pour l'événement <see langword="My.Application.Startup" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.String})">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs" />.</summary>
      <param name="args">Objet <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> qui contient les arguments de ligne de commande de l'application.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine">
      <summary>Obtient les arguments de ligne de commande de l'application.</summary>
      <returns>Objet <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> qui contient les arguments de ligne de commande de l'application.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs">
      <summary>Fournit des données pour l'événement <see langword="My.Application.StartupNextInstance" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.String},System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs" />.</summary>
      <param name="args">Objet <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> qui contient les arguments de ligne de commande de l'instance d'application suivante.</param>
      <param name="bringToForegroundFlag">
        <see cref="T:System.Boolean" /> qui indique si la première instance de l'application doit être apportée au premier plan au moment de la fermeture du gestionnaire d'exceptions.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.BringToForeground">
      <summary>Indique si la première instance de l'application doit être apportée au premier plan au moment de la fermeture du gestionnaire d'exceptions.</summary>
      <returns>
        <see cref="T:System.Boolean" /> qui indique si la première instance de l'application doit être apportée au premier plan au moment de la fermeture du gestionnaire d'exceptions.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.CommandLine">
      <summary>Obtient les arguments de ligne de commande de l'instance d'application suivante.</summary>
      <returns>Objet <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> qui contient les arguments de ligne de commande de l'instance d'application suivante.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs">
      <summary>Fournit des données pour l'événement <see langword="My.Application.UnhandledException" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.#ctor(System.Boolean,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs" />.</summary>
      <param name="exitApplication">
        <see cref="T:System.Boolean" /> qui indique si l'application doit se fermer au moment de la fermeture du gestionnaire d'exceptions.</param>
      <param name="exception">
        <see cref="T:System.Exception" /> survenue.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication">
      <summary>Indique si l'application doit se fermer au moment de la fermeture du gestionnaire d'exceptions.</summary>
      <returns>
        <see cref="T:System.Boolean" /> qui indique si l'application doit se fermer au moment de la fermeture du gestionnaire d'exceptions.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.User">
      <summary>Fournit l'accès aux informations concernant l'utilisateur actuel.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.User.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.ApplicationServices.User" />.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal">
      <summary>Obtient ou définit l'entité de sécurité en cours (pour une sécurité basée sur les rôles).</summary>
      <returns>Valeur <see cref="T:System.Security.Principal.IPrincipal" /> représentant le contexte de sécurité.</returns>
      <exception cref="T:System.Security.SecurityException">L’appelant n’a pas l’autorisation nécessaire pour définir le principal.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal">
      <summary>Obtient ou définit l'objet d'entité de sécurité représentant l'utilisateur en cours.</summary>
      <returns>Objet <see cref="T:System.Security.Principal.IPrincipal" /> représentant l'utilisateur en cours.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated">
      <summary>Obtient une valeur qui indique si l'utilisateur a été authentifié.</summary>
      <returns>
        <see langword="True" /> si l'utilisateur a été identifié ; sinon <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.User.IsInRole(System.String)">
      <summary>Détermine si l'utilisateur actuel appartient au rôle spécifié.</summary>
      <param name="role">Nom du rôle pour lequel l'appartenance (membership) doit être vérifiée.</param>
      <returns>
        <see langword="True" /> si l'utilisateur actuel est un membre du rôle spécifié ; sinon, <see langword="False" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.User.Name">
      <summary>Obtient le nom de l'utilisateur en cours.</summary>
      <returns>
        <see langword="String" />. Nom de l'utilisateur actuel.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.AppWinStyle">
      <summary>Indique le style de fenêtre à utiliser pour le programme appelé lors de l'appel de la fonction <see langword="Shell" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.Hide">
      <summary>La fenêtre est cachée et le focus est passé à la fenêtre cachée. Ce membre est équivalent à la constante Visual Basic <see langword="vbHide" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.MaximizedFocus">
      <summary>La fenêtre est agrandie et activée. Ce membre est équivalent à la constante Visual Basic <see langword="vbMaximizedFocus" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.MinimizedFocus">
      <summary>La fenêtre est affichée sous forme d'icône et activée. Ce membre est équivalent à la constante Visual Basic <see langword="vbMinimizedFocus" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.MinimizedNoFocus">
      <summary>La fenêtre est affichée sous forme d'icône. La fenêtre actuellement active reste active. Ce membre est équivalent à la constante Visual Basic <see langword="vbMinimizedNoFocus" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.NormalFocus">
      <summary>La fenêtre a le focus et est restaurée à sa taille et à sa position d'origine. Ce membre est équivalent à la constante Visual Basic <see langword="vbNormalFocus" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.NormalNoFocus">
      <summary>La fenêtre est restaurée à sa taille et à sa position la plus récentes. La fenêtre actuellement active reste active. Ce membre est équivalent à la constante Visual Basic <see langword="vbNormalNoFocus" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CallType">
      <summary>Indique le type de la procédure qui est appelée lors de l'appel à la fonction <see langword="CallByName" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Get">
      <summary>Une valeur de propriété est récupérée.  Ce membre est équivalent à la constante Visual Basic <see langword="vbGet" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Let">
      <summary>Une valeur de propriété Objet est déterminée. Ce membre est équivalent à la constante Visual Basic <see langword="vbLet" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Method">
      <summary>Une méthode est appelée.  Ce membre est équivalent à la constante Visual Basic <see langword="vbMethod" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Set">
      <summary>Une valeur de propriété est déterminée.  Ce membre est équivalent à la constante Visual Basic <see langword="vbSet" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Collection">
      <summary>Une <see langword="Collection" /> Visual Basic est un jeu ordonné d’éléments qui peut être considéré collectivement comme une unité.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.#ctor">
      <summary>Crée et retourne un objet <see cref="T:Microsoft.VisualBasic.Collection" /> Visual Basic.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Add(System.Object,System.String,System.Object,System.Object)">
      <summary>Ajoute un élément à un objet <see langword="Collection" />.</summary>
      <param name="Item">Obligatoire. Objet de tout type qui spécifie les erreurs à ajouter à la collection.</param>
      <param name="Key">Optionnel. Expression <see langword="String" /> unique qui spécifie une chaîne clé qui peut être utilisée au lieu d'un index de position pour accéder à ce nouvel élément dans la collection.</param>
      <param name="Before">Facultatif. Expression qui spécifie une position relative dans la collection. L'élément à ajouter est placé dans la collection avant l'élément identifié par l'argument <paramref name="Before" />. Si <paramref name="Before" /> est une expression numérique, ce doit être un nombre entre 1 et la valeur de la propriété <see cref="P:Microsoft.VisualBasic.Collection.Count" /> de la collection. Si <paramref name="Before" /> est une expression <see langword="String" />, il doit correspondre à la chaîne clé spécifiée au moment où l'élément auquel il est fait référence a été ajouté à la collection. Vous ne pouvez pas spécifier <paramref name="Before" /> et <paramref name="After" />.</param>
      <param name="After">Optionnel. Expression qui spécifie une position relative dans la collection. L'élément à ajouter est placé dans la collection après l'élément identifié par l'argument <paramref name="After" />. Si <paramref name="After" /> est une expression numérique, ce doit être un nombre entre 1 et la valeur de la propriété <see langword="Count" /> de la collection. Si <paramref name="After" /> est une expression <see langword="String" />, il doit correspondre à la chaîne clé spécifiée au moment où l'élément auquel il est fait référence a été ajouté à la collection. Vous ne pouvez pas spécifier <paramref name="Before" /> et <paramref name="After" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Clear">
      <summary>Supprime tous les éléments d'un objet Visual Basic <see langword="Collection" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Contains(System.String)">
      <summary>Retourne une valeur indiquant si un objet Visual Basic <see langword="Collection" /> contient un élément avec une clé spécifique.</summary>
      <param name="Key">Obligatoire. Une expression <see langword="String" /> qui spécifie la clé à rechercher dans les éléments de la collection.</param>
      <returns>
        <see langword="true" /> si un objet Visual Basic <see langword="Collection" /> contient un élément avec une clé spécifique ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Count">
      <summary>Obtient le nombre d’éléments d’une collection.</summary>
      <returns>Nombre d'éléments d'une collection.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.GetEnumerator">
      <summary>Retourne un énumérateur qui itère au sein de la collection.</summary>
      <returns>Énumérateur permettant d'effectuer une itération au sein de la collection.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Item(System.Int32)">
      <summary>Obtient un élément spécifique d’un objet <see langword="Collection" /> en fonction de sa position ou de sa clé.</summary>
      <param name="Index">Expression numérique qui spécifie la position d'un élément de la collection. <paramref name="Index" /> doit être un nombre compris entre 1 et la valeur de la propriété <see cref="P:Microsoft.VisualBasic.Collection.Count" /> de la collection. Ou (B) Une expression <see langword="Object" /> qui spécifie la position ou la chaîne clé d'un élément de la collection.</param>
      <returns>Élément spécifique d’un <see langword="Collection" /> objet par position ou par clé.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Item(System.Object)">
      <summary>Obtient un élément spécifique d’un objet <see langword="Collection" /> en fonction de sa position ou de sa clé.</summary>
      <param name="Index">Expression numérique qui spécifie la position d'un élément de la collection. <paramref name="Index" /> doit être un nombre compris entre 1 et la valeur de la propriété <see cref="P:Microsoft.VisualBasic.Collection.Count" /> de la collection. Ou (B) Une expression <see langword="Object" /> qui spécifie la position ou la chaîne clé d'un élément de la collection.</param>
      <returns>Élément spécifique d’un <see langword="Collection" /> objet par position ou par clé.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Item(System.String)">
      <summary>Obtient un élément spécifique d’un objet <see langword="Collection" /> en fonction de sa position ou de sa clé.</summary>
      <param name="Key">Expression <see langword="String" /> unique qui spécifie une chaîne clé qui peut être utilisée au lieu d'un index de position pour accéder à un élément de la collection. <paramref name="Key" /> doit correspondre à l'argument <paramref name="Key" /> spécifié lorsque l'élément a été ajouté à la collection.</param>
      <returns>Élément spécifique d’un <see langword="Collection" /> objet par position ou par clé.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Remove(System.Int32)">
      <summary>Supprime un élément d'un objet <see langword="Collection" />.</summary>
      <param name="Index">Expression numérique qui spécifie la position d'un élément de la collection. <paramref name="Index" /> doit être un nombre compris entre 1 et la valeur de la propriété <see cref="P:Microsoft.VisualBasic.Collection.Count" /> de la collection.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Remove(System.String)">
      <summary>Supprime un élément d'un objet <see langword="Collection" />.</summary>
      <param name="Key">Expression <see langword="String" /> unique qui spécifie une chaîne clé qui peut être utilisée au lieu d'un index de position pour accéder à un élément de la collection. <paramref name="Key" /> doit correspondre à l'argument <paramref name="Key" /> spécifié lorsque l'élément a été ajouté à la collection.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.ComClassAttribute">
      <summary>L'attribut <see langword="ComClassAttribute" /> donne instruction au compilateur d'ajouter des métadonnées qui autorisent une classe à être exposée comme un objet COM.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see langword="ComClassAttribute" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see langword="ComClassAttribute" />.</summary>
      <param name="_ClassID">Initialise la valeur de la propriété <see langword="ClassID" /> utilisée pour identifier une classe de manière unique.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see langword="ComClassAttribute" />.</summary>
      <param name="_ClassID">Initialise la valeur de la propriété <see langword="ClassID" /> utilisée pour identifier une classe de manière unique.</param>
      <param name="_InterfaceID">Initialise la valeur de la propriété <see langword="InterfaceID" /> utilisée pour identifier une interface de manière unique.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String,System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see langword="ComClassAttribute" />.</summary>
      <param name="_ClassID">Initialise la valeur de la propriété <see langword="ClassID" /> utilisée pour identifier une classe de manière unique.</param>
      <param name="_InterfaceID">Initialise la valeur de la propriété <see langword="InterfaceID" /> utilisée pour identifier une interface de manière unique.</param>
      <param name="_EventId">Initialise la valeur de la propriété <see langword="EventID" /> utilisée pour identifier un événement de manière unique.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.ClassID">
      <summary>Obtient un ID de classe utilisé pour identifier une classe de manière unique.</summary>
      <returns>Lecture seule. Chaîne qui peut être utilisée par le compilateur pour identifier la classe de manière unique lorsqu'un objet COM est créé.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.EventID">
      <summary>Obtient un ID d'événement utilisé pour identifier un événement de manière unique.</summary>
      <returns>En lecture seule. Chaîne qui peut être utilisée par le compilateur pour identifier un événement pour la classe de manière unique lorsqu'un objet COM est créé.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.InterfaceID">
      <summary>Obtient un ID d'interface utilisé pour identifier une interface de manière unique.</summary>
      <returns>Lecture seule. Chaîne qui peut être utilisée par le compilateur pour identifier une interface pour la classe de manière unique lorsqu'un objet COM est créé.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.InterfaceShadows">
      <summary>Indique que le nom de l'interface COM occulte un autre membre de la classe ou de la classe de base.</summary>
      <returns>Valeur <see langword="Boolean" /> qui indique que le nom de l'interface COM occulte un autre membre de la classe ou de la classe de base.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompareMethod">
      <summary>Indique comment comparer des chaînes lors de l'appel de fonctions de comparaison.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CompareMethod.Binary">
      <summary>Effectue une comparaison binaire. Ce membre est équivalent à la constante Visual Basic <see langword="vbBinaryCompare" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CompareMethod.Text">
      <summary>Effectue une comparaison textuelle. Ce membre est équivalent à la constante Visual Basic <see langword="vbTextCompare" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.BooleanType">
      <summary>Cette classe a été déconseillée à partir de Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.BooleanType.FromObject(System.Object)">
      <summary>Retourne une valeur <see langword="Boolean" /> qui correspond à l'objet spécifié.</summary>
      <param name="Value">Obligatoire. Objet à convertir en valeur <see langword="Boolean" />.</param>
      <returns>Valeur <see langword="Boolean" /> qui correspond à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.BooleanType.FromString(System.String)">
      <summary>Retourne une valeur <see langword="Boolean" /> correspondant à la chaîne spécifiée.</summary>
      <param name="Value">Obligatoire. Chaîne à convertir en valeur <see langword="Boolean" />.</param>
      <returns>Valeur <see langword="Boolean" /> qui correspond à <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ByteType">
      <summary>Cette classe a été déconseillée à partir de Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ByteType.FromObject(System.Object)">
      <summary>Retourne une valeur <see langword="Byte" /> qui correspond à l'objet spécifié.</summary>
      <param name="Value">Obligatoire. Objet à convertir en valeur <see langword="Byte" />.</param>
      <returns>Valeur <see langword="Byte" /> qui correspond à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ByteType.FromString(System.String)">
      <summary>Retourne une valeur <see langword="Byte" /> correspondant à la chaîne spécifiée.</summary>
      <param name="Value">Obligatoire. Chaîne à convertir en valeur <see langword="Byte" />.</param>
      <returns>Valeur <see langword="Byte" /> qui correspond à <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.CharArrayType">
      <summary>Cette classe a été déconseillée à partir de Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharArrayType.FromObject(System.Object)">
      <summary>Retourne une valeur <see langword="CharArray" /> qui correspond à l'objet spécifié.</summary>
      <param name="Value">Obligatoire. Objet à convertir en valeur <see langword="CharArray" />.</param>
      <returns>Valeur <see langword="CharArray" /> qui correspond à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharArrayType.FromString(System.String)">
      <summary>Retourne une valeur <see langword="CharArray" /> correspondant à la chaîne spécifiée.</summary>
      <param name="Value">Obligatoire. Chaîne à convertir en valeur <see langword="CharArray" />.</param>
      <returns>Valeur <see langword="CharArray" /> qui correspond à <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.CharType">
      <summary>Cette classe a été déconseillée à partir de Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharType.FromObject(System.Object)">
      <summary>Retourne une valeur <see langword="Char" /> qui correspond à l'objet spécifié.</summary>
      <param name="Value">Obligatoire. Objet à convertir en valeur <see langword="Char" />.</param>
      <returns>Valeur <see langword="Char" /> qui correspond à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharType.FromString(System.String)">
      <summary>Retourne une valeur <see langword="Char" /> correspondant à la chaîne spécifiée.</summary>
      <param name="Value">Obligatoire. Chaîne à convertir en valeur <see langword="Char" />.</param>
      <returns>Valeur <see langword="Char" /> qui correspond à <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Conversions">
      <summary>Fournit des méthodes qui exécutent différentes conversions de types.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ChangeType(System.Object,System.Type)">
      <summary>Convertit un objet dans le type spécifié.</summary>
      <param name="Expression">Objet à convertir.</param>
      <param name="TargetType">Type dans lequel convertir l'objet.</param>
      <returns>Objet du type cible spécifié.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FallbackUserDefinedConversion(System.Object,System.Type)">
      <summary>Convertit un objet dans le type spécifié.</summary>
      <param name="Expression">Objet à convertir.</param>
      <param name="TargetType">Type dans lequel convertir l'objet.</param>
      <returns>Objet du type cible spécifié.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FromCharAndCount(System.Char,System.Int32)">
      <summary>Convertit une valeur <see cref="T:System.Char" /> en chaîne, en fonction d'un nombre d'octets.</summary>
      <param name="Value">Valeur <see langword="Char" /> à convertir.</param>
      <param name="Count">Nombre d'octets de la valeur <see langword="Char" />.</param>
      <returns>Représentation sous forme de chaîne de la valeur spécifiée.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FromCharArray(System.Char[])">
      <summary>Convertit un tableau <see cref="T:System.Char" /> en chaîne.</summary>
      <param name="Value">Tableau <see langword="Char" /> à convertir.</param>
      <returns>Représentation sous forme de chaîne du tableau spécifié.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FromCharArraySubset(System.Char[],System.Int32,System.Int32)">
      <summary>Convertit un sous-ensemble d'un tableau <see cref="T:System.Char" /> en chaîne.</summary>
      <param name="Value">Tableau <see langword="Char" /> à convertir.</param>
      <param name="StartIndex">Index de base zéro de la position de départ.</param>
      <param name="Length">Longueur du sous-ensemble en octets.</param>
      <returns>Représentation sous forme de chaîne du tableau spécifié de la position de départ à la longueur spécifiée.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToBoolean(System.Object)">
      <summary>Convertit un objet en valeur <see cref="T:System.Boolean" />.</summary>
      <param name="Value">Objet à convertir.</param>
      <returns>Valeur <see langword="Boolean" />. Retourne <see langword="False" /> si l'objet est null ; sinon, <see langword="True" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToBoolean(System.String)">
      <summary>Convertit une chaîne en valeur <see cref="T:System.Boolean" />.</summary>
      <param name="Value">Chaîne à convertir.</param>
      <returns>Valeur <see langword="Boolean" />. Retourne <see langword="False" /> si la chaîne est null ; sinon, <see langword="True" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToByte(System.Object)">
      <summary>Convertit un objet en valeur <see cref="T:System.Byte" />.</summary>
      <param name="Value">Objet à convertir.</param>
      <returns>Valeur <see langword="Byte" /> de l'objet.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToByte(System.String)">
      <summary>Convertit une chaîne en valeur <see cref="T:System.Byte" />.</summary>
      <param name="Value">Chaîne à convertir.</param>
      <returns>Valeur <see langword="Byte" /> de la chaîne.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToChar(System.Object)">
      <summary>Convertit un objet en valeur <see cref="T:System.Char" />.</summary>
      <param name="Value">Objet à convertir.</param>
      <returns>Valeur <see langword="Char" /> de l'objet.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToChar(System.String)">
      <summary>Convertit une chaîne en valeur <see cref="T:System.Char" />.</summary>
      <param name="Value">Chaîne à convertir.</param>
      <returns>Valeur <see langword="Char" /> de la chaîne.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToCharArrayRankOne(System.Object)">
      <summary>Convertit un objet en tableau <see cref="T:System.Char" /> unidimensionnel.</summary>
      <param name="Value">Objet à convertir.</param>
      <returns>Tableau <see langword="Char" /> unidimensionnel.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToCharArrayRankOne(System.String)">
      <summary>Convertit une chaîne en tableau <see cref="T:System.Char" /> unidimensionnel.</summary>
      <param name="Value">Chaîne à convertir.</param>
      <returns>Tableau <see langword="Char" /> unidimensionnel.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDate(System.Object)">
      <summary>Convertit un objet en valeur <see cref="T:System.DateTime" />.</summary>
      <param name="Value">Objet à convertir.</param>
      <returns>Valeur <see langword="DateTime" /> de l'objet.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDate(System.String)">
      <summary>Convertit une chaîne en valeur <see cref="T:System.DateTime" />.</summary>
      <param name="Value">Chaîne à convertir.</param>
      <returns>Valeur <see langword="DateTime" /> de la chaîne.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDecimal(System.Boolean)">
      <summary>Convertit une valeur <see cref="T:System.Boolean" /> en valeur <see cref="T:System.Decimal" />.</summary>
      <param name="Value">Valeur Boolean à convertir.</param>
      <returns>Valeur <see langword="Decimal" /> de la valeur Boolean.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDecimal(System.Object)">
      <summary>Convertit un objet en valeur <see cref="T:System.Decimal" />.</summary>
      <param name="Value">Objet à convertir.</param>
      <returns>Valeur <see langword="Decimal" /> de l'objet.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDecimal(System.String)">
      <summary>Convertit une chaîne en valeur <see cref="T:System.Decimal" />.</summary>
      <param name="Value">Chaîne à convertir.</param>
      <returns>Valeur <see langword="Decimal" /> de la chaîne.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDouble(System.Object)">
      <summary>Convertit un objet en valeur <see cref="T:System.Double" />.</summary>
      <param name="Value">Objet à convertir.</param>
      <returns>Valeur <see langword="Double" /> de l'objet.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDouble(System.String)">
      <summary>Convertit une chaîne en valeur <see cref="T:System.Double" />.</summary>
      <param name="Value">Chaîne à convertir.</param>
      <returns>Valeur <see langword="Double" /> de la chaîne.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToGenericParameter``1(System.Object)">
      <summary>Convertit un objet en type générique <paramref name="T" />.</summary>
      <param name="Value">Objet à convertir.</param>
      <typeparam name="T">Type dans lequel convertir <paramref name="Value" />.</typeparam>
      <returns>Structure ou objet de type générique <paramref name="T" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToInteger(System.Object)">
      <summary>Convertit un objet en valeur entière.</summary>
      <param name="Value">Objet à convertir.</param>
      <returns>Valeur <see langword="int" /> de l'objet.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToInteger(System.String)">
      <summary>Convertit une chaîne en valeur entière.</summary>
      <param name="Value">Chaîne à convertir.</param>
      <returns>Valeur <see langword="int" /> de la chaîne.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToLong(System.Object)">
      <summary>Convertit un objet en valeur <see langword="Long" />.</summary>
      <param name="Value">Objet à convertir.</param>
      <returns>Valeur <see langword="Long" /> de l'objet.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToLong(System.String)">
      <summary>Convertit une chaîne en valeur <see langword="Long" />.</summary>
      <param name="Value">Chaîne à convertir.</param>
      <returns>Valeur <see langword="Long" /> de la chaîne.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSByte(System.Object)">
      <summary>Convertit un objet en valeur <see cref="T:System.SByte" />.</summary>
      <param name="Value">Objet à convertir.</param>
      <returns>Valeur <see langword="SByte" /> de l'objet.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSByte(System.String)">
      <summary>Convertit une chaîne en valeur <see cref="T:System.SByte" />.</summary>
      <param name="Value">Chaîne à convertir.</param>
      <returns>Valeur <see langword="SByte" /> de la chaîne.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToShort(System.Object)">
      <summary>Convertit un objet en valeur <see langword="Short" />.</summary>
      <param name="Value">Objet à convertir.</param>
      <returns>Valeur <see langword="Short" /> de l'objet.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToShort(System.String)">
      <summary>Convertit une chaîne en valeur <see langword="Short" />.</summary>
      <param name="Value">Chaîne à convertir.</param>
      <returns>Valeur <see langword="Short" /> de la chaîne.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSingle(System.Object)">
      <summary>Convertit un objet en valeur <see cref="T:System.Single" />.</summary>
      <param name="Value">Objet à convertir.</param>
      <returns>Valeur <see langword="Single" /> de l'objet.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSingle(System.String)">
      <summary>Convertit <see cref="T:System.String" /> en valeur <see cref="T:System.Single" />.</summary>
      <param name="Value">Chaîne à convertir.</param>
      <returns>Valeur <see langword="Single" /> de la chaîne.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Boolean)">
      <summary>Convertit une valeur <see cref="T:System.Boolean" /> en <see cref="T:System.String" />.</summary>
      <param name="Value">Valeur <see langword="Boolean" /> à convertir.</param>
      <returns>Représentation <see langword="String" /> de la valeur <see langword="Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Byte)">
      <summary>Convertit une valeur <see cref="T:System.Byte" /> en <see cref="T:System.String" />.</summary>
      <param name="Value">Valeur <see langword="Byte" /> à convertir.</param>
      <returns>Représentation <see langword="String" /> de la valeur <see langword="Byte" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Char)">
      <summary>Convertit une valeur <see cref="T:System.Char" /> en <see cref="T:System.String" />.</summary>
      <param name="Value">Valeur <see langword="Char" /> à convertir.</param>
      <returns>Représentation <see langword="String" /> de la valeur <see langword="Char" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.DateTime)">
      <summary>Convertit une valeur <see cref="T:System.DateTime" /> en valeur <see cref="T:System.String" />.</summary>
      <param name="Value">Valeur <see langword="DateTime" /> à convertir.</param>
      <returns>Représentation <see langword="String" /> de la valeur <see langword="DateTime" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Decimal)">
      <summary>Convertit une valeur <see cref="T:System.Decimal" /> en valeur <see cref="T:System.String" />.</summary>
      <param name="Value">Valeur <see langword="Decimal" /> à convertir.</param>
      <returns>Représentation <see langword="String" /> de la valeur <see langword="Decimal" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Decimal,System.Globalization.NumberFormatInfo)">
      <summary>Convertit une valeur <see cref="T:System.Decimal" /> en valeur <see cref="T:System.String" />, à l'aide du format numérique spécifié.</summary>
      <param name="Value">Valeur <see langword="decimal" /> à convertir.</param>
      <param name="NumberFormat">Format numérique à utiliser, en fonction de <see cref="T:System.Globalization.NumberFormatInfo" />.</param>
      <returns>Représentation <see langword="String" /> de la valeur <see langword="Decimal" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Double)">
      <summary>Convertit une valeur <see cref="T:System.Double" /> en valeur <see cref="T:System.String" />.</summary>
      <param name="Value">Valeur <see langword="Double" /> à convertir.</param>
      <returns>Représentation <see langword="String" /> de la valeur <see langword="Double" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Double,System.Globalization.NumberFormatInfo)">
      <summary>Convertit une valeur <see cref="T:System.Double" /> en valeur <see cref="T:System.String" />, à l'aide du format numérique spécifié.</summary>
      <param name="Value">Valeur <see langword="Double" /> à convertir.</param>
      <param name="NumberFormat">Format numérique à utiliser, en fonction de <see cref="T:System.Globalization.NumberFormatInfo" />.</param>
      <returns>Représentation <see langword="String" /> de la valeur <see langword="Double" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Int16)">
      <summary>Convertit une valeur <see langword="Short" /> en valeur <see cref="T:System.String" />.</summary>
      <param name="Value">Valeur <see langword="Short" /> à convertir.</param>
      <returns>Représentation <see langword="String" /> de la valeur <see langword="Short" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Int32)">
      <summary>Convertit une valeur entière en valeur <see cref="T:System.String" />.</summary>
      <param name="Value">Valeur <see langword="int" /> à convertir.</param>
      <returns>Représentation <see langword="String" /> de la valeur <see langword="int" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Int64)">
      <summary>Convertit une valeur <see langword="Long" /> en valeur <see cref="T:System.String" />.</summary>
      <param name="Value">Valeur <see langword="Long" /> à convertir.</param>
      <returns>Représentation <see langword="String" /> de la valeur <see langword="Long" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Object)">
      <summary>Convertit un objet en valeur <see cref="T:System.String" />.</summary>
      <param name="Value">Objet à convertir.</param>
      <returns>Représentation <see langword="String" /> de l'objet.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Single)">
      <summary>Convertit une valeur <see cref="T:System.Single" /> (nombre à virgule flottante simple précision) en valeur <see cref="T:System.String" />.</summary>
      <param name="Value">Valeur <see langword="Single" /> à convertir.</param>
      <returns>Représentation <see langword="String" /> de la valeur <see langword="Single" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Single,System.Globalization.NumberFormatInfo)">
      <summary>Convertit une valeur <see cref="T:System.Single" /> en valeur <see cref="T:System.String" />, à l'aide du format numérique spécifié.</summary>
      <param name="Value">Valeur <see langword="Single" /> à convertir.</param>
      <param name="NumberFormat">Format numérique à utiliser, en fonction de <see cref="T:System.Globalization.NumberFormatInfo" />.</param>
      <returns>Représentation <see langword="String" /> de la valeur <see langword="Single" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.UInt32)">
      <summary>Convertit une valeur <see langword="uint" /> en valeur <see cref="T:System.String" />.</summary>
      <param name="Value">Valeur <see langword="Uint" /> à convertir.</param>
      <returns>Représentation <see langword="String" /> de la valeur <see langword="Uint" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.UInt64)">
      <summary>Convertit une valeur <see langword="Ulong" /> en valeur <see cref="T:System.String" />.</summary>
      <param name="Value">Valeur <see langword="Ulong" /> à convertir.</param>
      <returns>Représentation <see langword="String" /> de la valeur <see langword="Ulong" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUInteger(System.Object)">
      <summary>Convertit un objet en valeur <see langword="Uint" />.</summary>
      <param name="Value">Objet à convertir.</param>
      <returns>Valeur <see langword="Uint" /> de l'objet.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUInteger(System.String)">
      <summary>Convertit une chaîne en valeur <see langword="Uint" />.</summary>
      <param name="Value">Chaîne à convertir.</param>
      <returns>Valeur <see langword="Uint" /> de la chaîne.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToULong(System.Object)">
      <summary>Convertit un objet en valeur <see langword="Ulong" />.</summary>
      <param name="Value">Objet à convertir.</param>
      <returns>Valeur <see langword="Ulong" /> de l'objet.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToULong(System.String)">
      <summary>Convertit une chaîne en valeur <see langword="Ulong" />.</summary>
      <param name="Value">Chaîne à convertir.</param>
      <returns>Valeur <see langword="Ulong" /> de la chaîne.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUShort(System.Object)">
      <summary>Convertit un objet en valeur <see langword="Ushort" />.</summary>
      <param name="Value">Objet à convertir.</param>
      <returns>Valeur <see langword="Ushort" /> de l'objet.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUShort(System.String)">
      <summary>Convertit une chaîne en valeur <see langword="Ushort" />.</summary>
      <param name="Value">Chaîne à convertir.</param>
      <returns>Valeur <see langword="Ushort" /> de la chaîne.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DateType">
      <summary>Cette classe a été déconseillée à partir de Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DateType.FromObject(System.Object)">
      <summary>Retourne une valeur <see langword="Date" /> qui correspond à l'objet spécifié.</summary>
      <param name="Value">Obligatoire. Objet à convertir en valeur <see langword="Date" />.</param>
      <returns>Valeur <see langword="Date" /> qui correspond à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DateType.FromString(System.String)">
      <summary>Retourne une valeur <see langword="Date" /> correspondant à la chaîne spécifiée.</summary>
      <param name="Value">Obligatoire. Chaîne à convertir en valeur <see langword="Date" />.</param>
      <returns>Valeur <see langword="Date" /> qui correspond à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DateType.FromString(System.String,System.Globalization.CultureInfo)">
      <summary>Retourne une valeur <see langword="Date" /> qui correspond à la chaîne spécifiée et aux informations de culture.</summary>
      <param name="Value">Obligatoire. Chaîne à convertir en valeur <see langword="Date" />.</param>
      <param name="culture">Obligatoire. Objet <see cref="T:System.Globalization.CultureInfo" /> qui définit la mise en forme et l'affichage des valeurs de date en fonction de la culture.</param>
      <returns>Valeur <see langword="Date" /> qui correspond à <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DecimalType">
      <summary>Cette classe a été déconseillée à partir de Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromBoolean(System.Boolean)">
      <summary>Retourne une valeur <see langword="Decimal" /> correspondant à la valeur <see langword="Boolean" /> spécifiée.</summary>
      <param name="Value">Obligatoire. Valeur <see langword="Boolean" /> à convertir en valeur <see langword="Decimal" />.</param>
      <returns>Valeur <see langword="Decimal" /> qui correspond à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromObject(System.Object)">
      <summary>Retourne une valeur <see langword="Decimal" /> qui correspond à l'objet spécifié.</summary>
      <param name="Value">Obligatoire. Objet à convertir en valeur <see langword="Decimal" />.</param>
      <returns>Valeur <see langword="Decimal" /> qui correspond à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromObject(System.Object,System.Globalization.NumberFormatInfo)">
      <summary>Retourne une valeur <see langword="Decimal" /> correspondant à l'objet spécifié et aux informations relatives au format numérique.</summary>
      <param name="Value">Obligatoire. Objet à convertir en valeur <see langword="Decimal" />.</param>
      <param name="NumberFormat">Objet <see cref="T:System.Globalization.NumberFormatInfo" /> qui définit la mise en forme et l'affichage des valeurs numériques en fonction de la culture.</param>
      <returns>Valeur <see langword="Decimal" /> qui correspond à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromString(System.String)">
      <summary>Retourne une valeur <see langword="Decimal" /> correspondant à la chaîne spécifiée.</summary>
      <param name="Value">Obligatoire. Chaîne à convertir en valeur <see langword="Decimal" />.</param>
      <returns>Valeur <see langword="Decimal" /> qui correspond à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromString(System.String,System.Globalization.NumberFormatInfo)">
      <summary>Retourne une valeur <see langword="Decimal" /> correspondant à la chaîne spécifiée et aux informations relatives au format numérique.</summary>
      <param name="Value">Obligatoire. Chaîne à convertir en valeur <see langword="Decimal" />.</param>
      <param name="NumberFormat">Objet <see cref="T:System.Globalization.NumberFormatInfo" /> qui définit la mise en forme et l'affichage des valeurs numériques en fonction de la culture.</param>
      <returns>Valeur <see langword="Decimal" /> qui correspond à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.Parse(System.String,System.Globalization.NumberFormatInfo)">
      <summary>Retourne une valeur <see langword="Decimal" /> correspondant à la chaîne spécifiée et aux informations relatives au format numérique.</summary>
      <param name="Value">Obligatoire. Chaîne à convertir en valeur <see langword="Decimal" />.</param>
      <param name="NumberFormat">Objet <see cref="T:System.Globalization.NumberFormatInfo" /> qui définit la mise en forme et l'affichage des valeurs numériques en fonction de la culture.</param>
      <returns>Valeur <see langword="Decimal" /> qui correspond à <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute">
      <summary>Lorsqu'il est appliqué à une classe, le compilateur appelle implicitement une méthode d'initialisation de composant à partir du constructeur synthétique par défaut.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute.#ctor">
      <summary>Initialise une nouvelle instance de l'attribut <see cref="T:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DoubleType">
      <summary>Cette classe a été déconseillée à partir de Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromObject(System.Object)">
      <summary>Retourne une valeur <see langword="Double" /> qui correspond à l'objet spécifié.</summary>
      <param name="Value">Obligatoire. Objet à convertir en valeur <see langword="Double" />.</param>
      <returns>Valeur <see langword="Double" /> correspondant à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromObject(System.Object,System.Globalization.NumberFormatInfo)">
      <summary>Retourne une valeur <see langword="Double" /> qui correspond à l'objet spécifié.</summary>
      <param name="Value">Obligatoire. Objet à convertir en valeur <see langword="Double" />.</param>
      <param name="NumberFormat">Objet <see cref="T:System.Globalization.NumberFormatInfo" /> qui définit la mise en forme et l'affichage des valeurs numériques en fonction de la culture.</param>
      <returns>Valeur <see langword="Double" /> correspondant à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromString(System.String)">
      <summary>Retourne une valeur <see langword="Double" /> correspondant à la chaîne spécifiée.</summary>
      <param name="Value">Obligatoire. Chaîne à convertir en valeur <see langword="Double" />.</param>
      <returns>Valeur <see langword="Double" /> correspondant à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromString(System.String,System.Globalization.NumberFormatInfo)">
      <summary>Retourne une valeur <see langword="Double" /> correspondant à la chaîne spécifiée et aux informations relatives au format numérique.</summary>
      <param name="Value">Obligatoire. Chaîne à convertir en valeur <see langword="Double" />.</param>
      <param name="NumberFormat">Objet <see cref="T:System.Globalization.NumberFormatInfo" /> qui définit la mise en forme et l'affichage des valeurs numériques en fonction de la culture.</param>
      <returns>Valeur <see langword="Double" /> correspondant à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.Parse(System.String)">
      <summary>Retourne une valeur <see langword="Double" /> correspondant à la chaîne spécifiée.</summary>
      <param name="Value">Obligatoire. Chaîne à convertir en valeur <see langword="Double" />.</param>
      <returns>Valeur <see langword="Double" /> correspondant à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.Parse(System.String,System.Globalization.NumberFormatInfo)">
      <summary>Retourne une valeur <see langword="Double" /> correspondant à la chaîne spécifiée et aux informations relatives au format numérique.</summary>
      <param name="Value">Obligatoire. Chaîne à convertir en valeur <see langword="Double" />.</param>
      <param name="NumberFormat">Objet <see cref="T:System.Globalization.NumberFormatInfo" /> qui définit la mise en forme et l'affichage des valeurs numériques en fonction de la culture.</param>
      <returns>Valeur <see langword="Double" /> correspondant à <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization">
      <summary>Le compilateur Visual Basic utilise cette classe lors de l'initialisation locale statique ; elle n'est pas destinée à être appelée directement à partir de votre code. Une exception de ce type est levée en cas d'échec d'initialisation d'une variable locale statique.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.IntegerType">
      <summary>Cette classe a été déconseillée à partir de Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IntegerType.FromObject(System.Object)">
      <summary>Retourne une valeur <see langword="Integer" /> qui correspond à l'objet spécifié.</summary>
      <param name="Value">Obligatoire. Objet à convertir en valeur <see langword="Integer" />.</param>
      <returns>Valeur <see langword="Integer" /> qui correspond à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IntegerType.FromString(System.String)">
      <summary>Retourne une valeur <see langword="Integer" /> correspondant à la chaîne spécifiée.</summary>
      <param name="Value">Obligatoire. Chaîne à convertir en une valeur <see langword="Integer" />.</param>
      <returns>Valeur <see langword="Integer" /> qui correspond à <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.LateBinding">
      <summary>Cette classe a été déconseillée depuis Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateCall(System.Object,System.Type,System.String,System.Object[],System.String[],System.Boolean[])">
      <summary>Effectue un appel à liaison tardive à une méthode d'objet.</summary>
      <param name="o">Objet sur lequel appeler une méthode.</param>
      <param name="objType">Type de l'objet.</param>
      <param name="name">Nom de la méthode de <paramref name="o" /> à appeler.</param>
      <param name="args">Tableau de valeurs de paramètre à passer à la méthode.</param>
      <param name="paramnames">Tableau qui contient les noms des paramètres auxquels les valeurs du tableau <paramref name="args" /> sont passées.</param>
      <param name="CopyBack">Tableau de valeurs <see langword="Boolean" />, où <see langword="True" /> indique que <see langword="ByRef" /> est passé au paramètre associé.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateGet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Boolean[])">
      <summary>Retourne une valeur à liaison tardive à partir d'un objet.</summary>
      <param name="o">Objet à partir duquel retourner la valeur.</param>
      <param name="objType">Type de l'objet.</param>
      <param name="name">Nom du membre de <paramref name="o" /> à partir duquel récupérer la valeur.</param>
      <param name="args">Tableau d'une ou de plusieurs valeurs d'index qui spécifient l'emplacement dans <paramref name="o" /> si <paramref name="o" /> est un tableau unidimensionnel ou multidimensionnel, ou de valeurs d'argument à passer à l'objet <paramref name="o" />.</param>
      <param name="paramnames">Tableau qui contient les noms des paramètres auxquels les valeurs du tableau <paramref name="args" /> sont passées.</param>
      <param name="CopyBack">Tableau de valeurs <see langword="Boolean" />, où <see langword="True" /> indique que <see langword="ByRef" /> est passé au paramètre associé.</param>
      <returns>Si <paramref name="o" /> est un tableau, valeur de <paramref name="o" /> à l'emplacement spécifié par <paramref name="args" />. Si <paramref name="o" /> est un objet, valeur de retour de <paramref name="o" /> appelée à l'aide des paramètres nommés dans <paramref name="paramnames" /> et leurs valeurs associées dans <paramref name="args" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateIndexGet(System.Object,System.Object[],System.String[])">
      <summary>Retourne une valeur à liaison tardive d'un objet, à l'aide de l'index ou des paramètres spécifiés.</summary>
      <param name="o">Objet à partir duquel retourner la valeur.</param>
      <param name="args">Tableau d'une ou de plusieurs valeurs d'index qui spécifient l'emplacement dans <paramref name="o" /> si <paramref name="o" /> est un tableau unidimensionnel ou multidimensionnel, ou de valeurs d'argument à passer à l'objet <paramref name="o" />.</param>
      <param name="paramnames">Tableau qui contient les noms des paramètres auxquels les valeurs du tableau <paramref name="args" /> sont passées.</param>
      <returns>Si <paramref name="o" /> est un tableau, valeur de <paramref name="o" /> à l'emplacement spécifié par <paramref name="args" />. Si <paramref name="o" /> est un objet, valeur de retour de <paramref name="o" /> appelée à l'aide des paramètres nommés dans <paramref name="paramnames" /> et leurs valeurs associées dans <paramref name="args" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateIndexSet(System.Object,System.Object[],System.String[])">
      <summary>Définit une valeur à liaison tardive d'un objet, à l'aide des paramètres spécifiés.</summary>
      <param name="o">Objet dont la valeur doit être définie.</param>
      <param name="args">Tableau d'une ou de plusieurs valeurs d'index qui spécifient l'emplacement dans <paramref name="o" /> si <paramref name="o" /> est un tableau unidimensionnel ou multidimensionnel, ou de valeurs d'argument à passer à l'objet <paramref name="o" />.</param>
      <param name="paramnames">Tableau qui contient les noms des paramètres auxquels les valeurs du tableau <paramref name="args" /> sont passées.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary>Définit une valeur à liaison tardive d'un objet, à l'aide des paramètres spécifiés.</summary>
      <param name="o">Objet dont la valeur doit être définie.</param>
      <param name="args">Tableau d'une ou de plusieurs valeurs de paramètre à passer à l'objet <paramref name="o" />.</param>
      <param name="paramnames">Tableau qui contient les noms des paramètres auxquels les valeurs du tableau <paramref name="args" /> sont passées.</param>
      <param name="OptimisticSet">
        <see langword="True" /> pour supprimer l'exception levée lorsque le membre défini est introuvable.</param>
      <param name="RValueBase">
        <see langword="True" /> pour identifier <paramref name="o" /> comme résultat d'une expression à liaison tardive.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[])">
      <summary>Définit une valeur à liaison tardive du membre d'un objet, à l'aide des paramètres spécifiés.</summary>
      <param name="o">Objet dont la valeur du membre doit être définie.</param>
      <param name="objType">Type de l'objet.</param>
      <param name="name">Nom du membre à définir.</param>
      <param name="args">Tableau d'une ou de plusieurs valeurs de paramètre à passer au membre de <paramref name="o" />.</param>
      <param name="paramnames">Tableau qui contient les noms des paramètres auxquels les valeurs du tableau <paramref name="args" /> sont passées.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateSetComplex(System.Object,System.Type,System.String,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary>Définit une valeur à liaison tardive du membre d'un objet, à l'aide des paramètres spécifiés.</summary>
      <param name="o">Objet dont la valeur du membre doit être définie.</param>
      <param name="objType">Type de l'objet.</param>
      <param name="name">Nom du membre à définir.</param>
      <param name="args">Tableau d'une ou de plusieurs valeurs de paramètre à passer au membre de <paramref name="o" />.</param>
      <param name="paramnames">Tableau qui contient les noms des paramètres auxquels les valeurs du tableau <paramref name="args" /> sont passées.</param>
      <param name="OptimisticSet">
        <see langword="True" /> pour supprimer l'exception levée lorsque le membre défini est introuvable.</param>
      <param name="RValueBase">
        <see langword="True" /> pour identifier <paramref name="o" /> comme résultat d'une expression à liaison tardive.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.LikeOperator">
      <summary>Cette classe fournit des assistances que le compilateur Visual Basic utilise afin d’effectuer le travail pour l’opérateur Like. Cela n'est pas conçu pour être directement appelé depuis votre code.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LikeOperator.LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)">
      <summary>Effectue une comparaison de chaînes binaires ou de texte entre deux objets. Cette méthode d'assistance n'est pas conçue pour être directement appelée depuis votre code.</summary>
      <param name="Source">Chaîne à comparer.</param>
      <param name="Pattern">Chaîne par rapport à laquelle <paramref name="Source" /> est comparé.</param>
      <param name="CompareOption">Énumération <see cref="T:Microsoft.VisualBasic.CompareMethod" /> spécifiant si la comparaison textuelle doit être utilisée. Si <see cref="F:Microsoft.VisualBasic.CompareMethod.Text" />, cette méthode utilise la comparaison textuelle ; si <see cref="F:Microsoft.VisualBasic.CompareMethod.Binary" />, cette méthode utilise la comparaison binaire.</param>
      <returns>
        <see langword="True" /> si les chaînes correspondent ; sinon, <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LikeOperator.LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>Effectue une comparaison entre deux chaînes de texte ou binaires. Cette méthode d'assistance n'est pas conçue pour être directement appelée depuis votre code.</summary>
      <param name="Source">Chaîne à comparer.</param>
      <param name="Pattern">Chaîne par rapport à laquelle <paramref name="Source" /> est comparé.</param>
      <param name="CompareOption">Énumération <see cref="T:Microsoft.VisualBasic.CompareMethod" /> spécifiant si la comparaison textuelle doit être utilisée. Si <see cref="F:Microsoft.VisualBasic.CompareMethod.Text" />, cette méthode utilise la comparaison textuelle ; si <see cref="F:Microsoft.VisualBasic.CompareMethod.Binary" />, cette méthode utilise la comparaison binaire.</param>
      <returns>
        <see langword="True" /> si les chaînes correspondent ; sinon, <see langword="False" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.LongType">
      <summary>Cette classe a été déconseillée à partir de Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LongType.FromObject(System.Object)">
      <summary>Retourne une valeur <see langword="Long" /> qui correspond à l'objet spécifié.</summary>
      <param name="Value">Obligatoire. Objet à convertir en valeur <see langword="Long" />.</param>
      <returns>Valeur <see langword="Long" /> qui correspond à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LongType.FromString(System.String)">
      <summary>Retourne une valeur <see langword="Long" /> correspondant à la chaîne spécifiée.</summary>
      <param name="Value">Obligatoire. Chaîne à convertir en valeur <see langword="Long" />.</param>
      <returns>Valeur <see langword="Long" /> qui correspond à <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.NewLateBinding">
      <summary>Cette classe fournit des assistances que le compilateur Visual Basic utilise pour les appels de liaison tardive ; elle n'est pas destinée à être appelée directement à partir de votre code.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackCall(System.Object,System.String,System.Object[],System.String[],System.Boolean)">
      <summary>Exécute un appel de méthode ou de fonction à liaison tardive. Cette méthode d'assistance n'est pas conçue pour être directement appelée depuis votre code.</summary>
      <param name="Instance">Instance de l'objet d'appel exposant la propriété ou la méthode.</param>
      <param name="MemberName">Nom de la propriété ou méthode sur l'objet d'appel.</param>
      <param name="Arguments">Tableau contenant les arguments à passer à la propriété ou à la méthode appelée.</param>
      <param name="ArgumentNames">Tableau des noms d'arguments.</param>
      <param name="IgnoreReturn">Valeur <see langword="Boolean" /> indiquant si la valeur de retour peut être ignorée.</param>
      <returns>Instance de l'objet d'appel.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackGet(System.Object,System.String,System.Object[],System.String[])">
      <summary>Exécute un appel d'obtention de propriété ou d'accès au champ à liaison tardive. Cette méthode d'assistance n'est pas conçue pour être directement appelée depuis votre code.</summary>
      <param name="Instance">Instance de l'objet d'appel exposant la propriété ou la méthode.</param>
      <param name="MemberName">Nom de la propriété ou méthode sur l'objet d'appel.</param>
      <param name="Arguments">Tableau contenant les arguments à passer à la propriété ou à la méthode appelée.</param>
      <param name="ArgumentNames">Tableau des noms d'arguments.</param>
      <returns>Instance de l'objet d'appel.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackIndexSet(System.Object,System.Object[],System.String[])">
      <summary>Exécute un appel de définition de propriété ou d'écriture de champ à liaison tardive. Cette méthode d'assistance n'est pas conçue pour être directement appelée depuis votre code.</summary>
      <param name="Instance">Instance de l'objet d'appel exposant la propriété ou la méthode.</param>
      <param name="Arguments">Tableau contenant les arguments à passer à la propriété ou à la méthode appelée.</param>
      <param name="ArgumentNames">Tableau des noms d'arguments.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary>Exécute un appel de définition de propriété ou d'écriture de champ à liaison tardive. Cette méthode d'assistance n'est pas conçue pour être directement appelée depuis votre code.</summary>
      <param name="Instance">Instance de l'objet d'appel exposant la propriété ou la méthode.</param>
      <param name="Arguments">Tableau contenant les arguments à passer à la propriété ou à la méthode appelée.</param>
      <param name="ArgumentNames">Tableau des noms d'arguments.</param>
      <param name="OptimisticSet">Valeur <see langword="Boolean" /> utilisée pour déterminer si l'opération set fonctionnera. Affectez la valeur <see langword="True" /> lorsque vous pensez qu'une valeur intermédiaire a été définie dans la propriété ou le champ ; sinon, <see langword="False" />.</param>
      <param name="RValueBase">Valeur <see langword="Boolean" /> qui indique le cas échéant si la référence de base de la référence tardive est <see langword="RValue" />. Affectez la valeur <see langword="True" /> lorsque la référence de base de la référence tardive est <see langword="RValue" /> ; ceci vous permet de générer une exception runtime pour les assignations tardives à des champs de <see langword="RValues" /> des types valeur. Sinon, a la valeur <see langword="False" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackInvokeDefault1(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary>Exécute une opération d'obtention à liaison tardive de la propriété ou du champ par défaut ou appelle la méthode ou la fonction par défaut. Cette méthode d'assistance n'est pas conçue pour être directement appelée depuis votre code.</summary>
      <param name="Instance">Instance de l'objet d'appel exposant la propriété ou la méthode. Si <paramref name="Instance" /> est de type <see cref="T:System.Dynamic.IDynamicMetaObjectProvider" />, liez à l'aide du Dynamic Language Runtime ; sinon exécutez la liaison tardive standard.</param>
      <param name="Arguments">Tableau contenant les arguments à passer à la propriété ou à la méthode appelée.</param>
      <param name="ArgumentNames">Tableau des noms d'arguments.</param>
      <param name="ReportErrors">Valeur <see langword="Boolean" /> utilisée pour indiquer si une exception doit être levée en cas d'erreur. Affecter la valeur <see langword="True" /> pour lever des exceptions. Affecter la valeur <see langword="False" /> pour retourner <see langword="Nothing" /> en cas d'erreur.</param>
      <returns>Instance de l'objet d'appel.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackInvokeDefault2(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary>Exécute une opération d'obtention à liaison tardive de la propriété ou du champ par défaut ou appelle la méthode ou la fonction par défaut. Cette méthode d'assistance n'est pas conçue pour être directement appelée depuis votre code.</summary>
      <param name="Instance">Instance de l'objet d'appel exposant la propriété ou la méthode.</param>
      <param name="Arguments">Tableau contenant les arguments à passer à la propriété ou à la méthode appelée.</param>
      <param name="ArgumentNames">Tableau des noms d'arguments.</param>
      <param name="ReportErrors">Valeur <see langword="Boolean" /> utilisée pour indiquer si une exception doit être levée en cas d'erreur. Affecter la valeur <see langword="True" /> pour lever des exceptions. Affecter la valeur <see langword="False" /> pour retourner <see langword="Nothing" /> en cas d'erreur.</param>
      <returns>Instance de l'objet d'appel.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackSet(System.Object,System.String,System.Object[])">
      <summary>Exécute un appel de définition de propriété ou d'écriture de champ à liaison tardive. Cette méthode d'assistance n'est pas conçue pour être directement appelée depuis votre code.</summary>
      <param name="Instance">Instance de l'objet d'appel exposant la propriété ou la méthode.</param>
      <param name="MemberName">Nom de la propriété ou méthode sur l'objet d'appel.</param>
      <param name="Arguments">Tableau contenant les arguments à passer à la propriété ou à la méthode appelée.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackSetComplex(System.Object,System.String,System.Object[],System.Boolean,System.Boolean)">
      <summary>Exécute un appel de définition de propriété ou d'écriture de champ à liaison tardive. Cette méthode d'assistance n'est pas conçue pour être directement appelée depuis votre code.</summary>
      <param name="Instance">Instance de l'objet d'appel exposant la propriété ou la méthode.</param>
      <param name="MemberName">Nom de la propriété ou méthode sur l'objet d'appel.</param>
      <param name="Arguments">Tableau contenant les arguments à passer à la propriété ou à la méthode appelée.</param>
      <param name="OptimisticSet">Valeur <see langword="Boolean" /> utilisée pour déterminer si l'opération set fonctionnera. Affectez la valeur <see langword="True" /> lorsque vous pensez qu'une valeur intermédiaire a été définie dans la propriété ou le champ ; sinon, <see langword="False" />.</param>
      <param name="RValueBase">Valeur <see langword="Boolean" /> qui indique le cas échéant si la référence de base de la référence tardive est <see langword="RValue" />. Affectez la valeur <see langword="True" /> lorsque la référence de base de la référence tardive est <see langword="RValue" /> ; ceci vous permet de générer une exception runtime pour les assignations tardives à des champs de <see langword="RValues" /> des types valeur. Sinon, a la valeur <see langword="False" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateCall(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean[],System.Boolean)">
      <summary>Exécute un appel de méthode ou de fonction à liaison tardive. Cette méthode d'assistance n'est pas conçue pour être directement appelée depuis votre code.</summary>
      <param name="Instance">Instance de l'objet d'appel exposant la propriété ou la méthode.</param>
      <param name="Type">Type de l'objet d'appel.</param>
      <param name="MemberName">Nom de la propriété ou méthode sur l'objet d'appel.</param>
      <param name="Arguments">Tableau contenant les arguments à passer à la propriété ou à la méthode appelée.</param>
      <param name="ArgumentNames">Tableau des noms d'arguments.</param>
      <param name="TypeArguments">Tableau des types d'arguments ; s'utilise uniquement pour les appels génériques afin de passer des types d'arguments.</param>
      <param name="CopyBack">Tableau de valeurs <see langword="Boolean" /> que le classeur tardif utilise pour communiquer au site d'appel les arguments qui correspondent aux paramètres <see langword="ByRef" />. Chaque valeur <see langword="True" /> indique que les arguments correspondaient et qu'ils doivent être extraits après l'appel à <see langword="LateCall" />.</param>
      <param name="IgnoreReturn">Valeur <see langword="Boolean" /> indiquant si la valeur de retour peut être ignorée.</param>
      <returns>Instance de l'objet d'appel.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateCallInvokeDefault(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary>Exécute un appel à liaison tardive vers la méthode ou la fonction par défaut. Cette méthode d'assistance n'est pas conçue pour être directement appelée depuis votre code.</summary>
      <param name="Instance">Instance de l'objet d'appel exposant la propriété ou la méthode.</param>
      <param name="Arguments">Tableau contenant les arguments à passer à la propriété ou à la méthode appelée.</param>
      <param name="ArgumentNames">Tableau des noms d'arguments.</param>
      <param name="ReportErrors">Valeur <see langword="Boolean" /> utilisée pour indiquer si une exception doit être levée en cas d'erreur. Affecter la valeur <see langword="True" /> pour lever des exceptions. Affecter la valeur <see langword="False" /> pour retourner <see langword="Nothing" /> en cas d'erreur.</param>
      <returns>Instance de l'objet d'appel.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateGet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean[])">
      <summary>Exécute un appel d'obtention de propriété ou d'accès au champ à liaison tardive. Cette méthode d'assistance n'est pas conçue pour être directement appelée depuis votre code.</summary>
      <param name="Instance">Instance de l'objet d'appel exposant la propriété ou la méthode.</param>
      <param name="Type">Type de l'objet d'appel.</param>
      <param name="MemberName">Nom de la propriété ou méthode sur l'objet d'appel.</param>
      <param name="Arguments">Tableau contenant les arguments à passer à la propriété ou à la méthode appelée.</param>
      <param name="ArgumentNames">Tableau des noms d'arguments.</param>
      <param name="TypeArguments">Tableau des types d'arguments ; s'utilise uniquement pour les appels génériques afin de passer des types d'arguments.</param>
      <param name="CopyBack">Tableau de valeurs <see langword="Boolean" /> que le classeur tardif utilise pour communiquer au site d'appel les arguments qui correspondent aux paramètres <see langword="ByRef" />. Chaque valeur <see langword="True" /> indique que les arguments correspondaient et qu'ils doivent être extraits après l'appel à <see langword="LateCall" />.</param>
      <returns>Instance de l'objet d'appel.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateGetInvokeDefault(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary>Exécute une opération d'obtention à liaison tardive de la propriété ou du champ par défaut. Cette méthode d'assistance n'est pas conçue pour être directement appelée depuis votre code.</summary>
      <param name="Instance">Instance de l'objet d'appel exposant la propriété ou la méthode.</param>
      <param name="Arguments">Tableau contenant les arguments à passer à la propriété ou à la méthode appelée.</param>
      <param name="ArgumentNames">Tableau des noms d'arguments.</param>
      <param name="ReportErrors">Valeur <see langword="Boolean" /> utilisée pour indiquer si une exception doit être levée en cas d'erreur. Affecter la valeur <see langword="True" /> pour lever des exceptions. Affecter la valeur <see langword="False" /> pour retourner <see langword="Nothing" /> en cas d'erreur.</param>
      <returns>Instance de l'objet d'appel.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexGet(System.Object,System.Object[],System.String[])">
      <summary>Exécute un appel d'obtention de propriété ou d'accès au champ à liaison tardive. Cette méthode d'assistance n'est pas conçue pour être directement appelée depuis votre code.</summary>
      <param name="Instance">Instance de l'objet d'appel exposant la propriété ou la méthode.</param>
      <param name="Arguments">Tableau contenant les arguments à passer à la propriété ou à la méthode appelée.</param>
      <param name="ArgumentNames">Tableau des noms d'arguments.</param>
      <returns>Instance de l'objet d'appel.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexSet(System.Object,System.Object[],System.String[])">
      <summary>Exécute un appel de définition de propriété ou d'écriture de champ à liaison tardive. Cette méthode d'assistance n'est pas conçue pour être directement appelée depuis votre code.</summary>
      <param name="Instance">Instance de l'objet d'appel exposant la propriété ou la méthode.</param>
      <param name="Arguments">Tableau contenant les arguments à passer à la propriété ou à la méthode appelée.</param>
      <param name="ArgumentNames">Tableau des noms d'arguments.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary>Exécute un appel de définition de propriété ou d'écriture de champ à liaison tardive. Cette méthode d'assistance n'est pas conçue pour être directement appelée depuis votre code.</summary>
      <param name="Instance">Instance de l'objet d'appel exposant la propriété ou la méthode.</param>
      <param name="Arguments">Tableau contenant les arguments à passer à la propriété ou à la méthode appelée.</param>
      <param name="ArgumentNames">Tableau des noms d'arguments.</param>
      <param name="OptimisticSet">Valeur <see langword="Boolean" /> utilisée pour déterminer si l'opération set fonctionnera. Affectez la valeur <see langword="True" /> lorsque vous pensez qu'une valeur intermédiaire a été définie dans la propriété ou le champ ; sinon, <see langword="False" />.</param>
      <param name="RValueBase">Valeur <see langword="Boolean" /> qui indique le cas échéant si la référence de base de la référence tardive est <see langword="RValue" />. Affectez la valeur <see langword="True" /> lorsque la référence de base de la référence tardive est <see langword="RValue" /> ; ceci vous permet de générer une exception runtime pour les assignations tardives à des champs de <see langword="RValues" /> des types valeur. Sinon, a la valeur <see langword="False" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[])">
      <summary>Exécute un appel de définition de propriété ou d'écriture de champ à liaison tardive. Cette méthode d'assistance n'est pas conçue pour être directement appelée depuis votre code.</summary>
      <param name="Instance">Instance de l'objet d'appel exposant la propriété ou la méthode.</param>
      <param name="Type">Type de l'objet d'appel.</param>
      <param name="MemberName">Nom de la propriété ou méthode sur l'objet d'appel.</param>
      <param name="Arguments">Tableau contenant les arguments à passer à la propriété ou à la méthode appelée.</param>
      <param name="ArgumentNames">Tableau des noms d'arguments.</param>
      <param name="TypeArguments">Tableau des types d'arguments ; s'utilise uniquement pour les appels génériques afin de passer des types d'arguments.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean,System.Boolean,Microsoft.VisualBasic.CallType)">
      <summary>Exécute un appel de définition de propriété ou d'écriture de champ à liaison tardive. Cette méthode d'assistance n'est pas conçue pour être directement appelée depuis votre code.</summary>
      <param name="Instance">Instance de l'objet d'appel exposant la propriété ou la méthode.</param>
      <param name="Type">Type de l'objet d'appel.</param>
      <param name="MemberName">Nom de la propriété ou méthode sur l'objet d'appel.</param>
      <param name="Arguments">Tableau contenant les arguments à passer à la propriété ou à la méthode appelée.</param>
      <param name="ArgumentNames">Tableau des noms d'arguments.</param>
      <param name="TypeArguments">Tableau des types d'arguments ; s'utilise uniquement pour les appels génériques afin de passer des types d'arguments.</param>
      <param name="OptimisticSet">Valeur <see langword="Boolean" /> utilisée pour déterminer si l'opération set fonctionnera. Affectez la valeur <see langword="True" /> lorsque vous pensez qu'une valeur intermédiaire a été définie dans la propriété ou le champ ; sinon, <see langword="False" />.</param>
      <param name="RValueBase">Valeur <see langword="Boolean" /> qui indique le cas échéant si la référence de base de la référence tardive est <see langword="RValue" />. Affectez la valeur <see langword="True" /> lorsque la référence de base de la référence tardive est <see langword="RValue" /> ; ceci vous permet de générer une exception runtime pour les assignations tardives à des champs de <see langword="RValues" /> des types valeur. Sinon, a la valeur <see langword="False" />.</param>
      <param name="CallType">Membre de l'énumération de type <see cref="T:Microsoft.VisualBasic.CallType" /> représentant le type de la procédure appelée. La valeur de CallType peut être <see langword="Method" />, <see langword="Get" /> ou <see langword="Set" />. Seul <see langword="Set" /> est utilisé.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSetComplex(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean,System.Boolean)">
      <summary>Exécute un appel de définition de propriété ou d'écriture de champ à liaison tardive. Cette méthode d'assistance n'est pas conçue pour être directement appelée depuis votre code.</summary>
      <param name="Instance">Instance de l'objet d'appel exposant la propriété ou la méthode.</param>
      <param name="Type">Type de l'objet d'appel.</param>
      <param name="MemberName">Nom de la propriété ou méthode sur l'objet d'appel.</param>
      <param name="Arguments">Tableau contenant les arguments à passer à la propriété ou à la méthode appelée.</param>
      <param name="ArgumentNames">Tableau des noms d'arguments.</param>
      <param name="TypeArguments">Tableau des types d'arguments ; s'utilise uniquement pour les appels génériques afin de passer des types d'arguments.</param>
      <param name="OptimisticSet">Valeur <see langword="Boolean" /> utilisée pour déterminer si l'opération set fonctionnera. Affectez la valeur <see langword="True" /> lorsque vous pensez qu'une valeur intermédiaire a été définie dans la propriété ou le champ ; sinon, <see langword="False" />.</param>
      <param name="RValueBase">Valeur <see langword="Boolean" /> qui indique le cas échéant si la référence de base de la référence tardive est <see langword="RValue" />. Affectez la valeur <see langword="True" /> lorsque la référence de base de la référence tardive est <see langword="RValue" /> ; ceci vous permet de générer une exception runtime pour les assignations tardives à des champs de <see langword="RValues" /> des types valeur. Sinon, a la valeur <see langword="False" />.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl">
      <summary>Le compilateur Visual Basic utilise cette classe pour le contrôle de flux d'objet ; elle n'est pas destinée à être appelée directement à partir de votre code.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.CheckForSyncLockOnValueType(System.Object)">
      <summary>Vérifie l'existence d'un verrouillage de synchronisation sur le type spécifié.</summary>
      <param name="Expression">Le type de données pour lequel vérifier l'existence d'un verrouillage de synchronisation.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl">
      <summary>Fournit des services au compilateur Visual Basic pour compiler des boucles <see langword="For...Next" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForLoopInitObj(System.Object,System.Object,System.Object,System.Object,System.Object@,System.Object@)">
      <summary>Initialise une boucle <see langword="For...Next" />.</summary>
      <param name="Counter">Variable de compteur de boucle.</param>
      <param name="Start">Valeur initiale du compteur de boucle.</param>
      <param name="Limit">Valeur de l'option <see langword="To" />.</param>
      <param name="StepValue">Valeur de l'option <see langword="Step" />.</param>
      <param name="LoopForResult">Objet qui contient les valeurs de boucle vérifiées.</param>
      <param name="CounterResult">Valeur du compteur d'itération de la boucle suivante.</param>
      <returns>
        <see langword="False" /> si la boucle s'est terminée ; sinon, <see langword="True" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckDec(System.Decimal,System.Decimal,System.Decimal)">
      <summary>Vérifie la validité des valeurs du compteur de boucle, <see langword="Step" />, ainsi que les valeurs <see langword="To" />.</summary>
      <param name="count">Obligatoire. Valeur <see langword="Decimal" /> qui représente la valeur initiale passée pour la variable de compteur de boucle.</param>
      <param name="limit">Obligatoire. Valeur <see langword="Decimal" /> qui représente la valeur passée à l'aide du mot clé <see langword="To" />.</param>
      <param name="StepValue">Obligatoire. Valeur <see langword="Decimal" /> qui représente la valeur passée à l'aide du mot clé <see langword="Step" />.</param>
      <returns>
        <see langword="True" /> si <paramref name="StepValue" /> est supérieur à zéro et <paramref name="count" /> est inférieur ou égal à <paramref name="limit" />, ou si <paramref name="StepValue" /> est inférieur ou égal à zéro et <paramref name="count" /> est supérieur ou égal à <paramref name="limit" /> ; sinon, <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckObj(System.Object,System.Object,System.Object@)">
      <summary>Incrémente une boucle <see langword="For...Next" />.</summary>
      <param name="Counter">Variable de compteur de boucle.</param>
      <param name="LoopObj">Objet qui contient les valeurs de boucle vérifiées.</param>
      <param name="CounterResult">Valeur du compteur d'itération de la boucle suivante.</param>
      <returns>
        <see langword="False" /> si la boucle s'est terminée ; sinon, <see langword="True" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckR4(System.Single,System.Single,System.Single)">
      <summary>Vérifie la validité des valeurs du compteur de boucle, <see langword="Step" />, ainsi que les valeurs <see langword="To" />.</summary>
      <param name="count">Obligatoire. Valeur <see langword="Single" /> qui représente la valeur initiale passée pour la variable de compteur de boucle.</param>
      <param name="limit">Obligatoire. Valeur <see langword="Single" /> qui représente la valeur passée à l'aide du mot clé <see langword="To" />.</param>
      <param name="StepValue">Obligatoire. Valeur <see langword="Single" /> qui représente la valeur passée à l'aide du mot clé <see langword="Step" />.</param>
      <returns>
        <see langword="True" /> si <paramref name="StepValue" /> est supérieur à zéro et <paramref name="count" /> est inférieur ou égal à <paramref name="limit" />, ou si <paramref name="StepValue" /> est inférieur ou égal à zéro et <paramref name="count" /> est supérieur ou égal à <paramref name="limit" /> ; sinon, <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckR8(System.Double,System.Double,System.Double)">
      <summary>Vérifie la validité des valeurs du compteur de boucle, <see langword="Step" />, ainsi que les valeurs <see langword="To" />.</summary>
      <param name="count">Obligatoire. Valeur <see langword="Double" /> qui représente la valeur initiale passée pour la variable de compteur de boucle.</param>
      <param name="limit">Obligatoire. Valeur <see langword="Double" /> qui représente la valeur passée à l'aide du mot clé <see langword="To" />.</param>
      <param name="StepValue">Obligatoire. Valeur <see langword="Double" /> qui représente la valeur passée à l'aide du mot clé <see langword="Step" />.</param>
      <returns>
        <see langword="True" /> si <paramref name="StepValue" /> est supérieur à zéro et <paramref name="count" /> est inférieur ou égal à <paramref name="limit" />, ou si <paramref name="StepValue" /> est inférieur ou égal à zéro et <paramref name="count" /> est supérieur ou égal à <paramref name="limit" /> ; sinon, <see langword="False" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ObjectType">
      <summary>Cette classe a été déconseillée à partir de Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.CompilerServices.ObjectType" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.AddObj(System.Object,System.Object)">
      <summary>Effectue une addition (+).</summary>
      <param name="o1">Obligatoire. Toute expression numérique.</param>
      <param name="o2">Obligatoire. Toute expression numérique.</param>
      <returns>Somme de <paramref name="o1" /> et <paramref name="o2" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitAndObj(System.Object,System.Object)">
      <summary>Effectue une opération <see langword="And" /> de bits.</summary>
      <param name="obj1">Obligatoire. Toute expression <see langword="Boolean" /> ou numérique.</param>
      <param name="obj2">Obligatoire. Toute expression <see langword="Boolean" /> ou numérique.</param>
      <returns>1 si <paramref name="obj1" /> et <paramref name="obj2" /> sont tous deux égaux à 1 ; sinon, 0.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitOrObj(System.Object,System.Object)">
      <summary>Effectue une opération <see langword="Or" /> de bits.</summary>
      <param name="obj1">Obligatoire. Toute expression <see langword="Boolean" /> ou numérique.</param>
      <param name="obj2">Obligatoire. Toute expression <see langword="Boolean" /> ou numérique.</param>
      <returns>0 si <paramref name="obj1" /> et <paramref name="obj2" /> sont tous deux égaux à 0 ; sinon, 1.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitXorObj(System.Object,System.Object)">
      <summary>Effectue une opération <see langword="Xor" />.</summary>
      <param name="obj1">Obligatoire. Toute expression <see langword="Boolean" /> ou numérique.</param>
      <param name="obj2">Obligatoire. Toute expression <see langword="Boolean" /> ou numérique.</param>
      <returns>Valeur numérique représentant l'exclusion de bits (disjonction de bits exclusive) de deux modèles binaires numériques. Pour plus d’informations, consultez Xor, opérateur.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.DivObj(System.Object,System.Object)">
      <summary>Effectue une division (/).</summary>
      <param name="o1">Obligatoire. Toute expression numérique.</param>
      <param name="o2">Obligatoire. Toute expression numérique.</param>
      <returns>Quotient entier de <paramref name="o1" /> divisé par <paramref name="o2" />, y compris tout élément restant.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.GetObjectValuePrimitive(System.Object)">
      <summary>Retourne une valeur de primitive ayant fait l'objet d'un boxing. Cette méthode est utilisée pour empêcher la copie de structures à plusieurs reprises.</summary>
      <param name="o">Obligatoire. Toute expression.</param>
      <returns>Valeur de primitive de <paramref name="o" /> de type objet.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.IDivObj(System.Object,System.Object)">
      <summary>Effectue une division (\) entière.</summary>
      <param name="o1">Obligatoire. Toute expression numérique.</param>
      <param name="o2">Obligatoire. Toute expression numérique.</param>
      <returns>Quotient entier de <paramref name="o1" /> divisé par <paramref name="o2" /> qui abandonne tout élément restant et conserve uniquement la partie entière.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.LikeObj(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)">
      <summary>Effectue une comparaison <see langword="Like" />.</summary>
      <param name="vLeft">Obligatoire. Toute expression.</param>
      <param name="vRight">Obligatoire. Toute expression de chaîne conforme aux critères spéciaux décrits dans Opérateur Like.</param>
      <param name="CompareOption">Obligatoire. Valeur <see cref="T:Microsoft.VisualBasic.CompareMethod" /> qui spécifie que l'opération utilise une comparaison binaire ou une comparaison textuelle.</param>
      <returns>
        <see langword="True" /> si la représentation de chaîne de la valeur de <paramref name="vLeft" /> est conforme au modèle contenu dans <paramref name="vRight" /> ; sinon, <see langword="False" />. <see langword="True" /> si <paramref name="vLeft" /> et <paramref name="vRight" /> sont <see langword="Nothing" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ModObj(System.Object,System.Object)">
      <summary>Effectue une opération de module (<see langword="Mod" />).</summary>
      <param name="o1">Obligatoire. Toute expression numérique.</param>
      <param name="o2">Obligatoire. Toute expression numérique.</param>
      <returns>Le reste après <paramref name="o1" /> est divisé par <paramref name="o2" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.MulObj(System.Object,System.Object)">
      <summary>Effectue une multiplication (*).</summary>
      <param name="o1">Obligatoire. Toute expression numérique.</param>
      <param name="o2">Obligatoire. Toute expression numérique.</param>
      <returns>Produit de <paramref name="o1" /> et <paramref name="o2" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.NegObj(System.Object)">
      <summary>Effectue une opération moins unaire (-).</summary>
      <param name="obj">Obligatoire. Toute expression numérique.</param>
      <returns>Valeur négative de <paramref name="obj" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.NotObj(System.Object)">
      <summary>Effectue une opération <see langword="Not" />.</summary>
      <param name="obj">Obligatoire. Toute expression <see langword="Boolean" /> ou numérique.</param>
      <returns>Pour les opérations <see langword="Boolean" />, <see langword="False" /> si <paramref name="obj" /> est <see langword="True" /> ; sinon, <see langword="True" />. Pour les opérations au niveau du bit, 1 si <paramref name="obj" /> est 0; sinon, 0.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ObjTst(System.Object,System.Object,System.Boolean)">
      <summary>Effectue une comparaison de chaînes binaires ou de texte entre deux objets.</summary>
      <param name="o1">Obligatoire. Toute expression.</param>
      <param name="o2">Obligatoire. Toute expression.</param>
      <param name="TextCompare">Obligatoire. <see langword="True" /> pour effectuer une comparaison de chaînes ne respectant pas la casse ; sinon, <see langword="False" />.</param>
      <returns>Value 
  Condition 
  -1 
 
                <paramref name="o1" /> est inférieur à <paramref name="o2" />.  

  0 
 
                <paramref name="o1" /> est égal à <paramref name="o2" />.  

  1 
 
                <paramref name="o1" /> est supérieur à <paramref name="o2" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.PlusObj(System.Object)">
      <summary>Effectue une opération plus unaire (+).</summary>
      <param name="obj">Obligatoire. Toute expression numérique.</param>
      <returns>la valeur de la propriété <paramref name="obj" /> ; (Le signe de <paramref name="obj" /> est inchangé.)</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.PowObj(System.Object,System.Object)">
      <summary>Effectue une opération d'exposant (^).</summary>
      <param name="obj1">Obligatoire. Toute expression numérique.</param>
      <param name="obj2">Obligatoire. Toute expression numérique.</param>
      <returns>Le résultat de <paramref name="obj1" /> est élevé à la puissance de <paramref name="obj2" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftLeftObj(System.Object,System.Int32)">
      <summary>Effectue un décalage arithmétique vers la gauche (&lt;&lt;).</summary>
      <param name="o1">Obligatoire. Expression numérique entière. Modèle binaire qui doit être décalé. Le type de données doit être un type entier (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> ou <see langword="ULong" />).</param>
      <param name="amount">Obligatoire. Expression numérique. Nombre de bits pour décaler le modèle binaire. Le type de données doit être <see langword="Integer" /> ou étendu à <see langword="Integer" />.</param>
      <returns>Valeur numérique entière. Résultat du décalage du modèle binaire. Le type de données est le même que celui de <paramref name="o1" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftRightObj(System.Object,System.Int32)">
      <summary>Effectue un décalage arithmétique vers la droite (&gt;&gt;).</summary>
      <param name="o1">Obligatoire. Expression numérique entière. Modèle binaire qui doit être décalé. Le type de données doit être un type entier (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> ou <see langword="ULong" />).</param>
      <param name="amount">Obligatoire. Expression numérique. Nombre de bits pour décaler le modèle binaire. Le type de données doit être <see langword="Integer" /> ou étendu à <see langword="Integer" />.</param>
      <returns>Valeur numérique entière. Résultat du décalage du modèle binaire. Le type de données est le même que celui de <paramref name="o1" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.StrCatObj(System.Object,System.Object)">
      <summary>Effectue une concaténation de chaînes (&amp;).</summary>
      <param name="vLeft">Obligatoire. Toute expression.</param>
      <param name="vRight">Obligatoire. Toute expression.</param>
      <returns>Chaîne représentant la concaténation de <paramref name="vLeft" /> et <paramref name="vRight" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.SubObj(System.Object,System.Object)">
      <summary>Effectue une soustraction (-).</summary>
      <param name="o1">Obligatoire. Toute expression numérique.</param>
      <param name="o2">Obligatoire. Toute expression numérique.</param>
      <returns>Différence entre <paramref name="o1" /> et <paramref name="o2" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.XorObj(System.Object,System.Object)">
      <summary>Effectue une comparaison <see langword="Xor" />.</summary>
      <param name="obj1">Obligatoire. Toute expression <see langword="Boolean" /> ou numérique.</param>
      <param name="obj2">Obligatoire. Toute expression <see langword="Boolean" /> ou numérique.</param>
      <returns>
        <see langword="Boolean" /> ou valeur numérique. Pour une comparaison <see langword="Boolean" />, la valeur de retour est l'exclusion logique (disjonction logique exclusive) de deux valeurs <see langword="Boolean" />. Pour les opérations au niveau du bit (numériques), la valeur de retour est une valeur numérique représentant l'exclusion d'opérations de bits (disjonction d'opérations de bits exclusive) de deux modèles binaires numériques. Pour plus d’informations, consultez Xor, opérateur.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Operators">
      <summary>Fournit des opérateurs mathématiques à liaison tardive, tels que <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" /> et <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />, que le compilateur Visual Basic utilise en interne.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)">
      <summary>Représente l'opérateur d'addition (+) Visual Basic.</summary>
      <param name="Left">Obligatoire. Toute expression numérique.</param>
      <param name="Right">Obligatoire. Toute expression numérique.</param>
      <returns>Somme de <paramref name="Left" /> et <paramref name="Right" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.AndObject(System.Object,System.Object)">
      <summary>Représente l'opérateur <see langword="And" /> Visual Basic.</summary>
      <param name="Left">Obligatoire. Toute expression <see langword="Boolean" /> ou numérique.</param>
      <param name="Right">Obligatoire. Toute expression <see langword="Boolean" /> ou numérique.</param>
      <returns>Pour les opérations <see langword="Boolean" />, <see langword="True" /> si <paramref name="Left" /> et <paramref name="Right" /> ont tous deux la valeur <see langword="True" /> ; sinon, <see langword="False" />. Pour les opérations au niveau du bit, 1 si <paramref name="Left" /> et <paramref name="Right" /> ont tous deux la valeur 1 ; sinon, 0.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(System.Object,System.Object,System.Boolean)">
      <summary>Représente l'opérateur d'égalité (=) Visual Basic.</summary>
      <param name="Left">Obligatoire. Toute expression.</param>
      <param name="Right">Obligatoire. Toute expression.</param>
      <param name="TextCompare">Obligatoire. <see langword="True" /> pour effectuer une comparaison de chaînes ne respectant pas la casse ; sinon, <see langword="False" />.</param>
      <returns>
        <see langword="True" /> si <paramref name="Left" /> et <paramref name="Right" /> sont égales ; sinon, <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(System.Object,System.Object,System.Boolean)">
      <summary>Représente l’opérateur supérieur à (&gt;) Visual Basic.</summary>
      <param name="Left">Obligatoire. Toute expression.</param>
      <param name="Right">Obligatoire. Toute expression.</param>
      <param name="TextCompare">Obligatoire. <see langword="True" /> pour effectuer une comparaison de chaînes ne respectant pas la casse ; sinon, <see langword="False" />.</param>
      <returns>
        <see langword="True" /> si <paramref name="Left" /> est supérieur à <paramref name="Right" /> ; sinon, <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)">
      <summary>Représente l’opérateur supérieur ou égal à (&gt;) Visual Basic.</summary>
      <param name="Left">Obligatoire. Toute expression.</param>
      <param name="Right">Obligatoire. Toute expression.</param>
      <param name="TextCompare">Obligatoire. <see langword="True" /> pour effectuer une comparaison de chaînes ne respectant pas la casse ; sinon, <see langword="False" />.</param>
      <returns>
        <see langword="True" /> si <paramref name="Left" /> est supérieur ou égal à <paramref name="Right" /> ; sinon, <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(System.Object,System.Object,System.Boolean)">
      <summary>Représente l’opérateur inférieur à (&lt;) Visual Basic.</summary>
      <param name="Left">Obligatoire. Toute expression.</param>
      <param name="Right">Obligatoire. Toute expression.</param>
      <param name="TextCompare">Obligatoire. <see langword="True" /> pour effectuer une comparaison de chaînes ne respectant pas la casse ; sinon, <see langword="False" />.</param>
      <returns>
        <see langword="True" /> si <paramref name="Left" /> est inférieur à <paramref name="Right" /> ; sinon, <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(System.Object,System.Object,System.Boolean)">
      <summary>Représente l’opérateur inférieur ou égale à (&lt;) Visual Basic.</summary>
      <param name="Left">Obligatoire. Toute expression.</param>
      <param name="Right">Obligatoire. Toute expression.</param>
      <param name="TextCompare">Obligatoire. <see langword="True" /> pour effectuer une comparaison de chaînes ne respectant pas la casse ; sinon, <see langword="False" />.</param>
      <returns>
        <see langword="True" /> si <paramref name="Left" /> est inférieur ou égal à <paramref name="Right" /> ; sinon, <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(System.Object,System.Object,System.Boolean)">
      <summary>Représente l’opérateur différent de (&lt;&gt;) Visual Basic.</summary>
      <param name="Left">Obligatoire. Toute expression.</param>
      <param name="Right">Obligatoire. Toute expression.</param>
      <param name="TextCompare">Obligatoire. <see langword="True" /> pour effectuer une comparaison de chaînes ne respectant pas la casse ; sinon, <see langword="False" />.</param>
      <returns>
        <see langword="True" /> si <paramref name="Left" /> n'est pas égal à <paramref name="Right" /> ; sinon, <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)">
      <summary>Effectue une comparaison entre deux chaînes de texte ou binaires.</summary>
      <param name="Left">Obligatoire. Toute expression <see langword="String" /> .</param>
      <param name="Right">Obligatoire. Toute expression <see langword="String" /> .</param>
      <param name="TextCompare">Obligatoire. <see langword="True" /> pour effectuer une comparaison de chaînes ne respectant pas la casse ; sinon, <see langword="False" />.</param>
      <returns>Value 
  Condition 
  -1 
 
                <paramref name="Left" /> est inférieur à <paramref name="Right" />.  

  0 
 
                <paramref name="Left" /> est égal à <paramref name="Right" />.  

  1 
 
                <paramref name="Left" /> est supérieur à <paramref name="Right" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(System.Object,System.Object)">
      <summary>Représente l’opérateur de concaténation (&amp;) Visual Basic.</summary>
      <param name="Left">Obligatoire. Toute expression.</param>
      <param name="Right">Obligatoire. Toute expression.</param>
      <returns>Chaîne représentant la concaténation de <paramref name="Left" /> et <paramref name="Right" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)">
      <summary>Représente l'opérateur d'égalité (=) surchargé Visual Basic.</summary>
      <param name="Left">Obligatoire. Toute expression.</param>
      <param name="Right">Obligatoire. Toute expression.</param>
      <param name="TextCompare">Obligatoire. <see langword="True" /> pour effectuer une comparaison de chaînes ne respectant pas la casse ; sinon, <see langword="False" />.</param>
      <returns>Résultat de l'opérateur d'égalité surchargé. <see langword="False" /> si la surcharge d'opérateur n'est pas prise en charge.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)">
      <summary>Représente l’opérateur supérieur à surchargé (&gt;) Visual Basic.</summary>
      <param name="Left">Obligatoire. Toute expression.</param>
      <param name="Right">Obligatoire. Toute expression.</param>
      <param name="TextCompare">Obligatoire. <see langword="True" /> pour effectuer une comparaison de chaînes ne respectant pas la casse ; sinon, <see langword="False" />.</param>
      <returns>Résultat de l'opérateur « supérieur à » surchargé. <see langword="False" /> si la surcharge d'opérateur n'est pas prise en charge.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)">
      <summary>Représente l’opérateur supérieur ou égal à surchargé (&gt;=) Visual Basic.</summary>
      <param name="Left">Obligatoire. Toute expression.</param>
      <param name="Right">Obligatoire. Toute expression.</param>
      <param name="TextCompare">Obligatoire. <see langword="True" /> pour effectuer une comparaison de chaînes ne respectant pas la casse ; sinon, <see langword="False" />.</param>
      <returns>Résultat de l'opérateur « supérieur ou égal à » surchargé. <see langword="False" /> si la surcharge d'opérateur n'est pas prise en charge.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)">
      <summary>Représente l’opérateur inférieur à surchargé (&lt;=) Visual Basic.</summary>
      <param name="Left">Obligatoire. Toute expression.</param>
      <param name="Right">Obligatoire. Toute expression.</param>
      <param name="TextCompare">Obligatoire. <see langword="True" /> pour effectuer une comparaison de chaînes ne respectant pas la casse ; sinon, <see langword="False" />.</param>
      <returns>Résultat de l'opérateur « inférieur à » surchargé. <see langword="False" /> si la surcharge d'opérateur n'est pas prise en charge.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)">
      <summary>Représente l’opérateur inférieur ou égal à surchargé (&lt;=) Visual Basic.</summary>
      <param name="Left">Obligatoire. Toute expression.</param>
      <param name="Right">Obligatoire. Toute expression.</param>
      <param name="TextCompare">Obligatoire. <see langword="True" /> pour effectuer une comparaison de chaînes ne respectant pas la casse ; sinon, <see langword="False" />.</param>
      <returns>Résultat de l'opérateur « inférieur ou égal à » surchargé. <see langword="False" /> si la surcharge d'opérateur n'est pas prise en charge.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)">
      <summary>Représente l’opérateur différent de surchargé (&lt;&gt;) Visual Basic.</summary>
      <param name="Left">Obligatoire. Toute expression.</param>
      <param name="Right">Obligatoire. Toute expression.</param>
      <param name="TextCompare">Obligatoire. <see langword="True" /> pour effectuer une comparaison de chaînes ne respectant pas la casse ; sinon, <see langword="False" />.</param>
      <returns>Résultat de l'opérateur de différence surchargé. <see langword="False" /> si la surcharge d'opérateur n'est pas prise en charge.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.DivideObject(System.Object,System.Object)">
      <summary>Représente l'opérateur de division (/) Visual Basic.</summary>
      <param name="Left">Obligatoire. Toute expression numérique.</param>
      <param name="Right">Obligatoire. Toute expression numérique.</param>
      <returns>Quotient entier de <paramref name="Left" /> divisé par <paramref name="Right" />, y compris tout élément restant.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject(System.Object,System.Object)">
      <summary>Représente l'opérateur d'exposant (^) Visual Basic.</summary>
      <param name="Left">Obligatoire. Toute expression numérique.</param>
      <param name="Right">Obligatoire. Toute expression numérique.</param>
      <returns>Le résultat de <paramref name="Left" /> est élevé à la puissance de <paramref name="Right" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator(System.Object,System.Object[])">
      <summary>Exécute une évaluation à liaison tardive d'un opérateur défini par l'utilisateur. Cette méthode d'assistance n'est pas conçue pour être directement appelée depuis votre code.</summary>
      <param name="vbOp">Opérateur défini par l'utilisateur.</param>
      <param name="Arguments">Valeurs d'argument à passer à l'opérateur défini par l'utilisateur.</param>
      <returns>Résultat retourné par l'opérateur défini par l'utilisateur.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject(System.Object,System.Object)">
      <summary>Représente l’opérateur de division entier (\) Visual Basic.</summary>
      <param name="Left">Obligatoire. Toute expression numérique.</param>
      <param name="Right">Obligatoire. Toute expression numérique.</param>
      <returns>Quotient entier de <paramref name="Left" /> divisé par <paramref name="Right" /> qui abandonne tout élément restant et conserve uniquement la partie entière.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)">
      <summary>Représente l’opérateur de décalage arithmétique vers la gauche (&lt;&lt;) Visual Basic.</summary>
      <param name="Operand">Obligatoire. Expression numérique entière. Modèle binaire qui doit être décalé. Le type de données doit être un type entier (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> ou <see langword="ULong" />).</param>
      <param name="Amount">Obligatoire. Expression numérique. Nombre de bits pour décaler le modèle binaire. Le type de données doit être <see langword="Integer" /> ou étendu à <see langword="Integer" />.</param>
      <returns>Valeur numérique entière. Résultat du décalage du modèle binaire. Le type de données est le même que celui de <paramref name="Operand" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ModObject(System.Object,System.Object)">
      <summary>Représente l'opérateur <see langword="Mod" /> Visual Basic.</summary>
      <param name="Left">Obligatoire. Toute expression numérique.</param>
      <param name="Right">Obligatoire. Toute expression numérique.</param>
      <returns>Le reste après <paramref name="Left" /> est divisé par <paramref name="Right" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject(System.Object,System.Object)">
      <summary>Représente l'opérateur de multiplication (*) Visual Basic.</summary>
      <param name="Left">Obligatoire. Toute expression numérique.</param>
      <param name="Right">Obligatoire. Toute expression numérique.</param>
      <returns>Produit de <paramref name="Left" /> et <paramref name="Right" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.NegateObject(System.Object)">
      <summary>Représente l’opérateur moins unaire (-) Visual Basic.</summary>
      <param name="Operand">Obligatoire. Toute expression numérique.</param>
      <returns>Valeur négative de <paramref name="Operand" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.NotObject(System.Object)">
      <summary>Représente l'opérateur <see langword="Not" /> Visual Basic.</summary>
      <param name="Operand">Obligatoire. Toute expression <see langword="Boolean" /> ou numérique.</param>
      <returns>Pour les opérations <see langword="Boolean" />, <see langword="False" /> si <paramref name="Operand" /> est <see langword="True" /> ; sinon, <see langword="True" />. Pour les opérations au niveau du bit, 1 si <paramref name="Operand" /> est 0; sinon, 0.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.OrObject(System.Object,System.Object)">
      <summary>Représente l'opérateur <see langword="Or" /> Visual Basic.</summary>
      <param name="Left">Obligatoire. Toute expression <see langword="Boolean" /> ou numérique.</param>
      <param name="Right">Obligatoire. Toute expression <see langword="Boolean" /> ou numérique.</param>
      <returns>Pour les opérations <see langword="Boolean" />, <see langword="False" /> si <paramref name="Left" /> et <paramref name="Right" /> ont tous deux la valeur <see langword="False" /> ; sinon, <see langword="True" />. Pour les opérations au niveau du bit, 0 si <paramref name="Left" /> et <paramref name="Right" /> ont tous deux la valeur 0 ; sinon, 1.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.PlusObject(System.Object)">
      <summary>Représente l'opérateur plus unaire (–) Visual Basic.</summary>
      <param name="Operand">Obligatoire. Toute expression numérique.</param>
      <returns>la valeur de la propriété <paramref name="Operand" /> ; (Le signe de <paramref name="Operand" /> est inchangé.)</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)">
      <summary>Représente l’opérateur de décalage arithmétique vers la droite (&gt;&gt;) Visual Basic.</summary>
      <param name="Operand">Obligatoire. Expression numérique entière. Modèle binaire qui doit être décalé. Le type de données doit être un type entier (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> ou <see langword="ULong" />).</param>
      <param name="Amount">Obligatoire. Expression numérique. Nombre de bits pour décaler le modèle binaire. Le type de données doit être <see langword="Integer" /> ou étendu à <see langword="Integer" />.</param>
      <returns>Valeur numérique entière. Résultat du décalage du modèle binaire. Le type de données est le même que celui de <paramref name="Operand" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject(System.Object,System.Object)">
      <summary>Représente l’opérateur de soustraction (-) Visual Basic.</summary>
      <param name="Left">Obligatoire. Toute expression numérique.</param>
      <param name="Right">Obligatoire. Toute expression numérique.</param>
      <returns>Différence entre <paramref name="Left" /> et <paramref name="Right" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.XorObject(System.Object,System.Object)">
      <summary>Représente l'opérateur <see langword="Xor" /> Visual Basic.</summary>
      <param name="Left">Obligatoire. Toute expression <see langword="Boolean" /> ou numérique.</param>
      <param name="Right">Obligatoire. Toute expression <see langword="Boolean" /> ou numérique.</param>
      <returns>
        <see langword="Boolean" /> ou valeur numérique. Pour une comparaison <see langword="Boolean" />, la valeur de retour est l'exclusion logique (disjonction logique exclusive) de deux valeurs <see langword="Boolean" />. Pour les opérations au niveau du bit (numériques), la valeur de retour est une valeur numérique représentant l'exclusion d'opérations de bits (disjonction d'opérations de bits exclusive) de deux modèles binaires numériques. Pour plus d’informations, consultez Xor, opérateur.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute">
      <summary>Indique que le paramètre <see langword="Option Compare" /> doit être passé comme valeur par défaut pour un argument.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute">
      <summary>Le compilateur Visual Basic émet cette classe d'assistance pour indiquer (pour le débogage Visual Basic) l'option de comparaison, binaire ou textuelle, qui est utilisée.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute" />. Méthode d'assistance.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ProjectData">
      <summary>Fournit des assistants pour l'objet <see langword="Err" /> Visual Basic.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.ClearProjectError">
      <summary>Effectue le travail pour la méthode <see langword="Clear" /> de l'objet <see langword="Err" />. Méthode d'assistance.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.CreateProjectError(System.Int32)">
      <summary>Effectue le travail pour la méthode <see langword="Raise" /> de l'objet <see langword="Err" />. Méthode d'assistance.</summary>
      <param name="hr">Valeur entière qui identifie la nature de l'erreur. Les erreurs Visual Basic se situent dans la plage 0-65535 ; la plage 0-512 est réservée aux erreurs système ; la plage 513-65535 est disponible pour les erreurs définies par l’utilisateur.</param>
      <returns>Objet <see cref="T:System.Exception" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.EndApp">
      <summary>Ferme tous les fichiers de l'assembly appelant et arrête le processus.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.SetProjectError(System.Exception)">
      <summary>Le compilateur Visual Basic utilise cette méthode d'assistance pour capturer des exceptions dans l'objet <see langword="Err" />.</summary>
      <param name="ex">Objet <see cref="T:System.Exception" /> à intercepter.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.SetProjectError(System.Exception,System.Int32)">
      <summary>Le compilateur Visual Basic utilise cette méthode d'assistance pour capturer des exceptions dans l'objet <see langword="Err" />.</summary>
      <param name="ex">Objet <see cref="T:System.Exception" /> à intercepter.</param>
      <param name="lErl">Numéro de la ligne de l'exception.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ShortType">
      <summary>Cette classe a été déconseillée à partir de Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ShortType.FromObject(System.Object)">
      <summary>Retourne une valeur <see langword="Short" /> qui correspond à l'objet spécifié.</summary>
      <param name="Value">Obligatoire. Objet à convertir en valeur <see langword="Short" />.</param>
      <returns>Valeur <see langword="Short" /> qui correspond à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ShortType.FromString(System.String)">
      <summary>Retourne une valeur <see langword="Short" /> correspondant à la chaîne spécifiée.</summary>
      <param name="Value">Obligatoire. Chaîne à convertir en valeur <see langword="Short" />.</param>
      <returns>Valeur <see langword="Short" /> qui correspond à <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.SingleType">
      <summary>Cette classe a été déconseillée à partir de Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromObject(System.Object)">
      <summary>Retourne une valeur <see langword="Single" /> qui correspond à l'objet spécifié.</summary>
      <param name="Value">Obligatoire. Objet à convertir en valeur <see langword="Single" />.</param>
      <returns>Valeur <see langword="Single" /> correspondant à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromObject(System.Object,System.Globalization.NumberFormatInfo)">
      <summary>Retourne une valeur <see langword="Single" /> qui correspond à l'objet spécifié.</summary>
      <param name="Value">Obligatoire. Objet à convertir en valeur <see langword="Single" />.</param>
      <param name="NumberFormat">Objet <see cref="T:System.Globalization.NumberFormatInfo" /> qui définit la mise en forme et l'affichage des valeurs numériques en fonction de la culture.</param>
      <returns>Valeur <see langword="Single" /> correspondant à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromString(System.String)">
      <summary>Retourne une valeur <see langword="Single" /> correspondant à la chaîne spécifiée.</summary>
      <param name="Value">Obligatoire. Chaîne à convertir en valeur <see langword="Single" />.</param>
      <returns>Valeur <see langword="Single" /> qui correspond à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromString(System.String,System.Globalization.NumberFormatInfo)">
      <summary>Retourne une valeur <see langword="Single" /> correspondant à la chaîne spécifiée et aux informations relatives au format numérique.</summary>
      <param name="Value">Obligatoire. Chaîne à convertir en valeur <see langword="Single" />.</param>
      <param name="NumberFormat">Objet <see cref="T:System.Globalization.NumberFormatInfo" /> qui définit la mise en forme et l'affichage des valeurs numériques en fonction de la culture.</param>
      <returns>Valeur <see langword="Single" /> correspondant à <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute">
      <summary>Cette classe fournit des attributs qui sont appliqués à la construction de module standard lorsqu'elle est émise en code MSIL (Microsoft Intermediate Language). Elle n'est pas destinée à être appelée directement à partir de votre code.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag">
      <summary>Le compilateur Visual Basic utilise cette classe en interne lors de l'initialisation de membres locaux statiques ; il n'est pas destiné à être appelé directement à partir de votre code.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag.State">
      <summary>Retourne l'état de l'indicateur d'initialisation du membre local statique (initialisé ou pas).</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.StringType">
      <summary>Cette classe a été déconseillée à partir de Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromBoolean(System.Boolean)">
      <summary>Retourne une valeur <see langword="String" /> correspondant à la valeur <see langword="Boolean" /> spécifiée.</summary>
      <param name="Value">Obligatoire. <see langword="Boolean" /> pour convertir en valeur <see langword="String" />.</param>
      <returns>Valeur <see langword="String" /> correspondant à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromByte(System.Byte)">
      <summary>Retourne une valeur <see langword="String" /> correspondant à la valeur <see langword="Byte" /> spécifiée.</summary>
      <param name="Value">Obligatoire. <see langword="Byte" /> pour convertir en valeur <see langword="String" />.</param>
      <returns>Valeur <see langword="String" /> correspondant à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromChar(System.Char)">
      <summary>Retourne une valeur <see langword="String" /> correspondant à la valeur <see langword="Char" /> spécifiée.</summary>
      <param name="Value">Obligatoire. <see langword="Char" /> pour convertir en valeur <see langword="String" />.</param>
      <returns>Valeur <see langword="String" /> correspondant à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDate(System.DateTime)">
      <summary>Retourne une valeur <see langword="String" /> qui correspond à la date spécifiée.</summary>
      <param name="Value">Obligatoire. Date à convertir en une valeur <see langword="String" />.</param>
      <returns>Valeur <see langword="String" /> correspondant à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal)">
      <summary>Retourne une valeur <see langword="String" /> correspondant à la valeur <see langword="Decimal" /> spécifiée.</summary>
      <param name="Value">Obligatoire. <see langword="Decimal" /> pour convertir en valeur <see langword="String" />.</param>
      <returns>Valeur <see langword="String" /> correspondant à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal,System.Globalization.NumberFormatInfo)">
      <summary>Retourne une valeur <see langword="String" /> correspondant à la valeur <see langword="Decimal" /> spécifiée et aux informations relatives au format numérique.</summary>
      <param name="Value">Obligatoire. <see langword="Decimal" /> pour convertir en valeur <see langword="String" />.</param>
      <param name="NumberFormat">Objet <see cref="T:System.Globalization.NumberFormatInfo" /> qui définit la mise en forme et l'affichage des valeurs numériques en fonction de la culture.</param>
      <returns>Valeur <see langword="String" /> correspondant à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double)">
      <summary>Retourne une valeur <see langword="String" /> correspondant à la valeur <see langword="Double" /> spécifiée.</summary>
      <param name="Value">Obligatoire. <see langword="Double" /> pour convertir en valeur <see langword="String" />.</param>
      <returns>Valeur <see langword="String" /> correspondant à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double,System.Globalization.NumberFormatInfo)">
      <summary>Retourne une valeur <see langword="String" /> correspondant à la valeur <see langword="Double" /> spécifiée et aux informations relatives au format numérique.</summary>
      <param name="Value">Obligatoire. <see langword="Double" /> pour convertir en valeur <see langword="String" />.</param>
      <param name="NumberFormat">Objet <see cref="T:System.Globalization.NumberFormatInfo" /> qui définit la mise en forme et l'affichage des valeurs numériques en fonction de la culture.</param>
      <returns>Valeur <see langword="String" /> correspondant à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromInteger(System.Int32)">
      <summary>Retourne une valeur <see langword="String" /> correspondant à la valeur <see langword="Integer" /> spécifiée.</summary>
      <param name="Value">Obligatoire. <see langword="Integer" /> pour convertir en valeur <see langword="String" />.</param>
      <returns>Valeur <see langword="String" /> correspondant à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromLong(System.Int64)">
      <summary>Retourne une valeur <see langword="String" /> correspondant à la valeur <see langword="Int64" /> (entier 64 bits) spécifiée.</summary>
      <param name="Value">Obligatoire. <see langword="Int64" /> pour convertir en valeur <see langword="String" />.</param>
      <returns>Valeur <see langword="String" /> correspondant à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromObject(System.Object)">
      <summary>Retourne une valeur <see langword="String" /> qui correspond à l'objet spécifié.</summary>
      <param name="Value">Obligatoire. Objet à convertir en valeur <see langword="String" />.</param>
      <returns>Valeur <see langword="String" /> correspondant à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromShort(System.Int16)">
      <summary>Retourne une valeur <see langword="String" /> correspondant à la valeur <see langword="Int16" /> (entier 16 bits) spécifiée.</summary>
      <param name="Value">Obligatoire. <see langword="Int616" /> pour convertir en valeur <see langword="String" />.</param>
      <returns>Valeur <see langword="String" /> correspondant à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single)">
      <summary>Retourne une valeur <see langword="String" /> correspondant à la valeur <see langword="Single" /> spécifiée.</summary>
      <param name="Value">Obligatoire. <see langword="Single" /> pour convertir en valeur <see langword="String" />.</param>
      <returns>Valeur <see langword="String" /> correspondant à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single,System.Globalization.NumberFormatInfo)">
      <summary>Retourne une valeur <see langword="String" /> correspondant à la valeur <see langword="Single" /> spécifiée et aux informations relatives au format numérique.</summary>
      <param name="Value">Obligatoire. <see langword="Single" /> pour convertir en valeur <see langword="String" />.</param>
      <param name="NumberFormat">Objet <see cref="T:System.Globalization.NumberFormatInfo" /> qui définit la mise en forme et l'affichage des valeurs numériques en fonction de la culture.</param>
      <returns>Valeur <see langword="String" /> correspondant à <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.MidStmtStr(System.String@,System.Int32,System.Int32,System.String)">
      <summary>Remplace le paramètre <paramref name="sDest" /> par le contenu du paramètre <paramref name="sInsert" />.</summary>
      <param name="sDest">Obligatoire. Variable de chaîne à modifier.</param>
      <param name="StartPosition">Obligatoire. Emplacement dans le paramètre <paramref name="sDest" /> à partir duquel commencer le remplacement. L'index est de base 1.</param>
      <param name="MaxInsertLength">Obligatoire. Nombre maximal de caractères à partir du paramètre <paramref name="sInsert" /> à utiliser, en commençant au premier caractère.</param>
      <param name="sInsert">Obligatoire. Valeur de chaîne qui doit remplacer le paramètre <paramref name="sDest" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrCmp(System.String,System.String,System.Boolean)">
      <summary>Compare deux chaînes.</summary>
      <param name="sLeft">Obligatoire. Chaîne à comparer à <paramref name="sRight" />.</param>
      <param name="sRight">Obligatoire. Chaîne à comparer à <paramref name="sLeft" />.</param>
      <param name="TextCompare">Obligatoire. <see langword="True" /> pour effectuer une comparaison ne respectant pas la casse ; sinon, <see langword="False" />.</param>
      <returns>Value 
  Condition 
  zéro 
  Les deux chaînes sont égales.  

  inférieure à zéro 
 
                <paramref name="sLeft" /> est inférieur à <paramref name="sRight" />.  

  supérieure à zéro 
 
                <paramref name="sLeft" /> est supérieur à <paramref name="sRight" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLike(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>Compare les paramètres <paramref name="Source" /> et <paramref name="Pattern" />, puis retourne les mêmes résultats que l'opérateur <see langword="Like" />.</summary>
      <param name="Source">Obligatoire. Toute expression <see langword="String" /> .</param>
      <param name="Pattern">Toute expression <see langword="String" /> conforme aux critères spéciaux décrits dans Opérateur Like.</param>
      <param name="CompareOption">Spécifie comment comparer des chaînes aux modèles, en fonction de <see cref="T:Microsoft.VisualBasic.CompareMethod" />. Peut être <see langword="vbBinaryCompare" /> pour la comparaison binaire ou <see langword="vbTextCompare" /> pour la comparaison à partir d'un ordre tri alphabétique sans respect de la casse déterminé par la valeur <see langword="LocaleID" /> de votre système.</param>
      <returns>Valeur <see langword="Boolean" /> indiquant si la chaîne est conforme, ou non, au modèle. Si la valeur de string respecte le modèle contenu dans pattern, le résultat est <see langword="True" />. Si la chaîne ne respecte pas le modèle, le résultat est <see langword="False" />. Si string et pattern sont tous deux des chaînes vides, le résultat est <see langword="True" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeBinary(System.String,System.String)">
      <summary>Compare les paramètres <paramref name="Source" /> et <paramref name="Pattern" />, puis retourne les mêmes résultats que l'opérateur <see langword="Like" />, à l'aide de la comparaison binaire.</summary>
      <param name="Source">Obligatoire. Toute expression <see langword="String" /> .</param>
      <param name="Pattern">Obligatoire. Toute expression <see langword="String" /> conforme aux critères spéciaux décrits dans Opérateur Like.</param>
      <returns>Valeur <see langword="Boolean" /> indiquant si la chaîne est conforme, ou non, au modèle. Si la valeur de string respecte le modèle contenu dans pattern, le résultat est <see langword="True" />. Si la chaîne ne respecte pas le modèle, le résultat est <see langword="False" />. Si string et pattern sont tous deux des chaînes vides, le résultat est <see langword="True" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeText(System.String,System.String)">
      <summary>Compare les paramètres <paramref name="Source" /> et <paramref name="Pattern" />, puis retourne les mêmes résultats que l'opérateur <see langword="Like" />, à l'aide de la comparaison textuelle.</summary>
      <param name="Source">Obligatoire. Toute expression <see langword="String" /> .</param>
      <param name="Pattern">Obligatoire. Toute expression <see langword="String" /> conforme aux critères spéciaux décrits dans Opérateur Like.</param>
      <returns>Valeur <see langword="Boolean" /> indiquant si la chaîne est conforme, ou non, au modèle. Si la valeur de string respecte le modèle contenu dans pattern, le résultat est <see langword="True" />. Si la chaîne ne respecte pas le modèle, le résultat est <see langword="False" />. Si string et pattern sont tous deux des chaînes vides, le résultat est <see langword="True" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Utils">
      <summary>Contient des utilitaires que le compilateur Visual Basic utilise.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Utils.CopyArray(System.Array,System.Array)">
      <summary>Utilisé par le compilateur Visual Basic en tant qu'application d'assistance pour <see langword="Redim" />.</summary>
      <param name="arySrc">Tableau à copier.</param>
      <param name="aryDest">Tableau de destination.</param>
      <returns>Tableau copié.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Versioned">
      <summary>Le module <see cref="T:Microsoft.VisualBasic.CompilerServices.Versioned" /> contient les procédures utilisées pour interagir avec les objets, les applications et les systèmes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
      <summary>Applique une méthode à un objet, ou définit ou retourne une propriété d'un objet.</summary>
      <param name="Instance">Obligatoire. <see langword="Object" />. Pointeur qui désigne l'objet exposant la propriété ou la méthode.</param>
      <param name="MethodName">Obligatoire. <see langword="String" />. Expression de type chaîne contenant le nom de la propriété ou de la méthode sur l'objet.</param>
      <param name="UseCallType">Obligatoire. Membre de l'énumération de type <see cref="T:Microsoft.VisualBasic.CallType" /> représentant le type de la procédure appelée. La valeur de <see langword="CallType" /> peut être <see langword="Method" />, <see langword="Get" /> ou <see langword="Set" />.</param>
      <param name="Arguments">Optionnel. <see langword="ParamArray" />. Tableau de paramètres contenant les arguments à passer à la propriété ou la méthode appelée.</param>
      <returns>Applique une méthode à un objet, ou définit ou retourne une propriété d'un objet.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.IsNumeric(System.Object)">
      <summary>Retourne une valeur Boolean indiquant si une expression peut être évaluée comme un nombre.</summary>
      <param name="Expression">Obligatoire. Expression <see langword="Object" />.</param>
      <returns>Retourne une valeur Boolean indiquant si une expression peut être évaluée comme un nombre.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.SystemTypeName(System.String)">
      <summary>Retourne une valeur de chaîne contenant le nom du type de données système d'une variable.</summary>
      <param name="VbName">Obligatoire. Variable chaîne contenant un nom de type Visual Basic.</param>
      <returns>Retourne une valeur de chaîne contenant le nom du type de données système d'une variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.TypeName(System.Object)">
      <summary>Retourne une valeur de chaîne contenant des informations sur le type de données d'une variable.</summary>
      <param name="Expression">Obligatoire. Variable <see langword="Object" />. Si <see langword="Option Strict" /> est <see langword="Off" />, vous pouvez passer une variable de tout type de données, à l'exception d'une structure.</param>
      <returns>Retourne une valeur de chaîne contenant des informations sur le type de données d'une variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.VbTypeName(System.String)">
      <summary>Retourne une valeur de chaîne contenant le nom du type de données Visual Basic d'une variable.</summary>
      <param name="SystemName">Obligatoire. Variable chaîne contenant un nom de type utilisé par le Common Language Runtime.</param>
      <returns>Retourne une valeur de chaîne contenant le nom du type de données Visual Basic d'une variable.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Constants">
      <summary>Le module <see langword="Constants" /> contient diverses constantes. Ces constantes peuvent être utilisées partout dans votre code.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbAbort">
      <summary>Indique qu'un clic a été effectué sur le bouton <see langword="Abort" /> dans une boîte de message. Retourné par la fonction <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbAbortRetryIgnore">
      <summary>Indique que les boutons <see langword="Abort" />, <see langword="Retry" /> et <see langword="Ignore" /> sont affichés lorsque la fonction <see langword="MsgBox" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbApplicationModal">
      <summary>Indique que la boîte de message est affichée sous la forme d'une boîte de dialogue modale lorsque la fonction <see langword="MsgBox" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbArchive">
      <summary>Indique que le fichier a changé depuis la dernière opération de sauvegarde pour des fonctions d'accès au fichier.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbArray">
      <summary>Indique que le type d'un objet variant est un tableau. Retourné par la fonction <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbBack">
      <summary>Représente un caractère d'espacement arrière pour l'impression et les fonctions d'affichage.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbBinaryCompare">
      <summary>Spécifie qu'une comparaison binaire doit être effectuée lorsque des fonctions de comparaison sont appelées.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbBoolean">
      <summary>Indique que le type d'un objet variant est <see langword="Boolean" />. Retourné par la fonction <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbByte">
      <summary>Indique que le type d'un objet variant est <see langword="Byte" />. Retourné par la fonction <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCancel">
      <summary>Indique qu'un clic a été effectué sur le bouton <see langword="Cancel" /> dans une boîte de message. Retourné par la fonction <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCr">
      <summary>Représente un caractère de retour chariot pour l'impression et les fonctions d'affichage.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCritical">
      <summary>Indique que l'icône de message critique est affichée lorsque la fonction <see langword="MsgBox" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCrLf">
      <summary>Représente un caractère de retour chariot mixé avec un caractère de retour de ligne pour l'impression et les fonctions d'affichage.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCurrency">
      <summary>Indique que le type d'un objet variant est <see langword="Currency" />. Retourné par la fonction <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDate">
      <summary>Indique que le type d'un objet variant est <see langword="Date" />. Retourné par la fonction <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDecimal">
      <summary>Indique que le type d'un objet variant est <see langword="Decimal" />. Retourné par la fonction <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDefaultButton1">
      <summary>Indique que le bouton situé le plus à gauche est sélectionné comme bouton par défaut lorsque la boîte de message s'affiche.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDefaultButton2">
      <summary>Indique que le deuxième bouton en partant de la gauche est sélectionné comme bouton par défaut lorsque la boîte de message s'affiche.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDefaultButton3">
      <summary>Indique que le troisième bouton en partant de la gauche est sélectionné comme bouton par défaut lorsque la boîte de message s'affiche.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDirectory">
      <summary>Indique que le fichier est un répertoire ou dossier pour les fonctions d'accès au fichier.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDouble">
      <summary>Indique que le type d'un objet variant est <see langword="Double" />. Retourné par la fonction <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbEmpty">
      <summary>Indique que le type d'un objet variant est <see langword="Empty" />. Retourné par la fonction <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbExclamation">
      <summary>Indique que l'icône d'exclamation est affichée lorsque la fonction <see langword="MsgBox" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFalse">
      <summary>Indique qu'une valeur <see langword="Boolean" /> de <see langword="False" /> doit être utilisée lorsque des fonctions de mise en forme de nombres sont appelées.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFirstFourDays">
      <summary>Indique que la première semaine de l'année qui a au moins quatre jours doit être utilisée lorsque des fonctions de date sont appelées.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFirstFullWeek">
      <summary>Indique que la première semaine complète de l'année doit être utilisée lorsque des fonctions de date sont appelées.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFirstJan1">
      <summary>Indique que la semaine de l'année qui inclut le 1er janvier doit être utilisée lorsque des fonctions de date sont appelées.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFormFeed">
      <summary>Représente un caractère de saut de page pour les fonctions d'impression.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFriday">
      <summary>Spécifie que le vendredi doit être utilisé comme premier jour de la semaine lorsque des fonctions de date sont appelées.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbGeneralDate">
      <summary>Indique que le format de date général pour la culture actuelle doit être utilisé lorsque la fonction <see langword="FormatDateTime" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbGet">
      <summary>Spécifie qu'une valeur de propriété doit être extraite lorsque la fonction <see langword="CallByName" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbHidden">
      <summary>Indique que le fichier est un fichier masqué pour les fonctions d'accès au fichier.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbHide">
      <summary>Indique que le style de fenêtre est masqué pour le programme appelé lors de l'appel de la fonction <see langword="Shell" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbHiragana">
      <summary>Indique que les caractères Hiragana doivent être convertis en caractères Katakana lorsque la fonction <see langword="StrConv" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbIgnore">
      <summary>Indique qu'un clic a été effectué sur le bouton <see langword="Ignore" /> dans une boîte de message. Retourné par la fonction <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbInformation">
      <summary>Indique que l'icône d'informations est affichée lorsque la fonction <see langword="MsgBox" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbInteger">
      <summary>Indique que le type d'un objet variant est <see langword="Integer" />. Retourné par la fonction <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbKatakana">
      <summary>Indique que les caractères Katakana doivent être convertis en caractères Hiragana lorsque la fonction <see langword="StrConv" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLet">
      <summary>Indique qu'une valeur de propriété doit avoir pour valeur une instance d'objet lorsque la fonction <see langword="CallByName" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLf">
      <summary>Représente un caractère de retour de ligne pour l'impression et les fonctions d'affichage.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLinguisticCasing">
      <summary>Indique que les caractères doivent être convertis de façon à utiliser des règles linguistiques pour le respect de la casse au lieu de règles de système de fichiers pour le respect de la casse lorsque la fonction <see langword="StrConv" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLong">
      <summary>Indique que le type d'un objet variant est <see langword="Long" />. Retourné par la fonction <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLongDate">
      <summary>Indique que le format de date long pour la culture actuelle doit être utilisé lorsque la fonction <see langword="FormatDateTime" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLongTime">
      <summary>Indique que le format d'heure long pour la culture actuelle doit être utilisé lorsque la fonction <see langword="FormatDateTime" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLowerCase">
      <summary>Indique que les caractères doivent être convertis en minuscules lorsque la fonction <see langword="StrConv" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMaximizedFocus">
      <summary>Indique que le style de fenêtre est agrandi avec le focus pour le programme appelé lors de l'appel de la fonction <see langword="Shell" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMethod">
      <summary>Spécifie qu'une méthode doit être appelée lorsque la fonction <see langword="CallByName" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMinimizedFocus">
      <summary>Indique que le style de fenêtre est réduit avec le focus pour le programme appelé lors de l'appel de la fonction <see langword="Shell" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMinimizedNoFocus">
      <summary>Indique que le style de fenêtre est réduit sans le focus pour le programme appelé lors de l'appel de la fonction <see langword="Shell" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMonday">
      <summary>Spécifie que le lundi doit être utilisé comme premier jour de la semaine lorsque des fonctions de date sont appelées.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxHelp">
      <summary>Indique que le bouton <see langword="Help" /> est affiché lorsque la fonction <see langword="MsgBox" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxRight">
      <summary>Indique que le texte est aligné à droite lorsque la fonction <see langword="MsgBox" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxRtlReading">
      <summary>Indique que le texte à lecture de droite à gauche (systèmes hébreu et arabe) est affiché lorsque la fonction <see langword="MsgBox" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxSetForeground">
      <summary>Indique que la boîte de message s'affiche au premier plan lorsque la fonction <see langword="MsgBox" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNarrow">
      <summary>Indique que les caractères larges (codés sur deux octets) doivent être convertis en caractères étroits (codés sur un octet) lorsque la fonction <see langword="StrConv" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNewLine">
      <summary>Représente un caractère de saut de ligne pour l'impression et les fonctions d'affichage.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNo">
      <summary>Indique qu'un clic a été effectué sur le bouton <see langword="No" /> dans une boîte de message. Retourné par la fonction <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNormal">
      <summary>Indique que le fichier est un fichier normal pour les fonctions d'accès au fichier.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNormalFocus">
      <summary>Indique que le style de fenêtre est normal avec le focus pour le programme appelé lors de l'appel de la fonction <see langword="Shell" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNormalNoFocus">
      <summary>Indique que le style de fenêtre est normal sans le focus pour le programme appelé lors de l'appel de la fonction <see langword="Shell" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNull">
      <summary>Indique que le type d'un objet variant est <see langword="Nothing" />. Retourné par la fonction <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNullChar">
      <summary>Représente un caractère Null pour l'impression et les fonctions d'affichage.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNullString">
      <summary>Représente une chaîne de longueur nulle pour l'impression et les fonctions d'affichage, et pour appeler des procédures auxiliaires.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbObject">
      <summary>Indique que le type d'un objet variant est <see langword="Object" />. Retourné par la fonction <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbObjectError">
      <summary>Représente le numéro d'erreur de l'objet. Les numéros d'erreur définis par l'utilisateur doivent être supérieurs à cette valeur.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbOK">
      <summary>Indique qu'un clic a été effectué sur le bouton <see langword="OK" /> dans une boîte de message. Retourné par la fonction <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbOKCancel">
      <summary>Indique que les boutons <see langword="OK" /> et <see langword="Cancel" /> sont affichés lorsque la fonction <see langword="MsgBox" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbOKOnly">
      <summary>Indique que seul le bouton <see langword="OK" /> est affiché lorsque la fonction <see langword="MsgBox" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbProperCase">
      <summary>Indique que la première lettre de chaque mot dans une chaîne doit être convertie en majuscule et les caractères restants en minuscules lorsque la fonction <see langword="StrConv" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbQuestion">
      <summary>Indique que l'icône de question est affichée lorsque la fonction <see langword="MsgBox" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbReadOnly">
      <summary>Indique que le fichier est un fichier en lecture seule pour les fonctions d'accès au fichier.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbRetry">
      <summary>Indique qu'un clic a été effectué sur le bouton <see langword="Retry" /> dans une boîte de message. Retourné par la fonction <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbRetryCancel">
      <summary>Indique que les boutons <see langword="Retry" /> et <see langword="Cancel" /> sont affichés lorsque la fonction <see langword="MsgBox" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSaturday">
      <summary>Spécifie que le samedi doit être utilisé comme premier jour de la semaine lorsque des fonctions de date sont appelées.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSet">
      <summary>Indique qu'une valeur de propriété doit être définie lorsque la fonction <see langword="CallByName" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbShortDate">
      <summary>Indique que le format de date court pour la culture actuelle doit être utilisé lorsque la fonction <see langword="FormatDateTime" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbShortTime">
      <summary>Indique que le format d'heure court pour la culture actuelle doit être utilisé lorsque la fonction <see langword="FormatDateTime" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSimplifiedChinese">
      <summary>Indique que les caractères doivent être convertis en Chinois simplifié lorsque la fonction <see langword="StrConv" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSingle">
      <summary>Indique que le type d'un objet variant est <see langword="Single" />. Retourné par la fonction <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbString">
      <summary>Indique que le type d'un objet variant est <see langword="String" />. Retourné par la fonction <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSunday">
      <summary>Spécifie que le dimanche doit être utilisé comme premier jour de la semaine lorsque des fonctions de date sont appelées.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSystem">
      <summary>Indique que le fichier est un fichier système pour les fonctions d'accès au fichier.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSystemModal">
      <summary>Indique que la boîte de message est affichée sous la forme d'une boîte de dialogue modale lorsque la fonction <see langword="MsgBox" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTab">
      <summary>Représente un caractère de tabulation pour l'impression et les fonctions d'affichage.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTextCompare">
      <summary>Indique qu'une comparaison de texte doit être effectuée lorsque des fonctions de comparaison sont appelées.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbThursday">
      <summary>Spécifie que le jeudi doit être utilisé comme premier jour de la semaine lorsque des fonctions de date sont appelées.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTraditionalChinese">
      <summary>Indique que les caractères doivent être convertis en Chinois traditionnel lorsque la fonction <see langword="StrConv" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTrue">
      <summary>Indique qu'une valeur <see langword="Boolean" /> de <see langword="True" /> doit être utilisée lorsque des fonctions de mise en forme de nombres sont appelées.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTuesday">
      <summary>Spécifie que le mardi doit être utilisé comme premier jour de la semaine lorsque des fonctions de date sont appelées.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUpperCase">
      <summary>Indique que les caractères doivent être convertis en majuscules lorsque la fonction <see langword="StrConv" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUseDefault">
      <summary>Indique que la valeur <see langword="Boolean" /> par défaut doit être utilisée lorsque des fonctions de mise en forme de nombres sont appelées.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUserDefinedType">
      <summary>Indique que le type d'un objet variant est un type défini par l'utilisateur. Retourné par la fonction <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUseSystem">
      <summary>Indique que la semaine spécifiée par votre système comme première semaine de l'année doit être utilisée lorsque des fonctions de date sont appelées.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUseSystemDayOfWeek">
      <summary>Indique que le jour spécifié par votre système comme premier jour de la semaine doit être utilisé lorsque des fonctions de date sont appelées.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbVariant">
      <summary>Indique que le type d'un objet variant est <see langword="Variant" />. Retourné par la fonction <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbVerticalTab">
      <summary>Représente un caractère de retour chariot pour les fonctions d'impression.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbVolume">
      <summary>Indique l'attribut de fichier de nom de volume pour les fonctions d'accès au fichier.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbWednesday">
      <summary>Spécifie que le mercredi doit être utilisé comme premier jour de la semaine lorsque des fonctions de date sont appelées.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbWide">
      <summary>Indique que les caractères étroits (codés sur un octet) doivent être convertis en caractères larges (codés sur deux octets) lorsque la fonction <see langword="StrConv" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbYes">
      <summary>Indique qu'un clic a été effectué sur le bouton <see langword="Yes" /> dans une boîte de message. Retourné par la fonction <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbYesNo">
      <summary>Indique que les boutons <see langword="Yes" /> et <see langword="No" /> sont affichés lorsque la fonction <see langword="MsgBox" /> est appelée.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbYesNoCancel">
      <summary>Indique que les boutons <see langword="Yes" />, <see langword="No" /> et <see langword="Cancel" /> sont affichés lorsque la fonction <see langword="MsgBox" /> est appelée.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ControlChars">
      <summary>Le module <see langword="ControlChars" /> contient les constantes utilisées comme caractères de contrôle. Ces constantes peuvent être utilisées partout dans votre code.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ControlChars.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.ControlChars" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Back">
      <summary>Représente un caractère de retour arrière (<see langword="vbBack" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Cr">
      <summary>Représente un caractère de retour chariot (<see langword="vbCr" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.CrLf">
      <summary>Représente une combinaison de caractères retour chariot/saut de ligne (<see langword="vbCrLf" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.FormFeed">
      <summary>Représente un caractère de saut de page pour les fonctions d'impression (<see langword="vbFormFeed" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Lf">
      <summary>Représente un caractère de saut de ligne (<see langword="vbLf" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.NewLine">
      <summary>Représente un caractère de retour à la ligne (<see langword="vbNewLine" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.NullChar">
      <summary>Représente un caractère Null (<see langword="vbNullChar" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Quote">
      <summary>Représente un caractère de guillemet.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Tab">
      <summary>Représente un caractère de tabulation (<see langword="vbTab" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.VerticalTab">
      <summary>Représente un caractère de tabulation verticale (<see langword="vbVerticalTab" />).</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Conversion">
      <summary>Le module <see langword="Conversion" /> contient les procédures utilisées pour exécuter différentes opérations de conversion.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.CTypeDynamic(System.Object,System.Type)">
      <summary>Convertit un objet dans le type spécifié.</summary>
      <param name="Expression">Objet à convertir.</param>
      <param name="TargetType">Type dans lequel convertir l'objet.</param>
      <returns>Objet dont le type au moment de l'exécution est le type cible demandé.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.CTypeDynamic``1(System.Object)">
      <summary>Convertit un objet dans le type générique spécifié.</summary>
      <param name="Expression">Objet à convertir.</param>
      <typeparam name="TargetType">Type dans lequel convertir l'objet.</typeparam>
      <returns>Objet typé statiquement comme type générique demandé.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.ErrorToString">
      <summary>Retourne le message d'erreur qui correspond à un numéro d'erreur donné.</summary>
      <returns>Message d'erreur qui correspond à l'erreur d'exécution la plus récente.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="ErrorNumber" /> est hors limites.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.ErrorToString(System.Int32)">
      <summary>Retourne le message d'erreur qui correspond à un numéro d'erreur donné.</summary>
      <param name="ErrorNumber">Facultatif. Tout numéro d'erreur valide.</param>
      <returns>Message d'erreur qui correspond à un numéro d'erreur donné.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="ErrorNumber" /> est hors limites.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Decimal)">
      <summary>Renvoie la partie entière d’un nombre.</summary>
      <param name="Number">Obligatoire. Nombre de type <see langword="Decimal" /> ou toute expression numérique valide.</param>
      <returns>Partie entière d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException">Number n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException">Number n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Double)">
      <summary>Renvoie la partie entière d’un nombre.</summary>
      <param name="Number">Obligatoire. Nombre de type <see langword="Double" /> ou toute expression numérique valide.</param>
      <returns>Partie entière d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException">Number n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException">Number n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Int16)">
      <summary>Renvoie la partie entière d’un nombre.</summary>
      <param name="Number">Obligatoire. Nombre de type <see langword="Short" /> ou toute expression numérique valide.</param>
      <returns>Partie entière d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException">Number n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException">Number n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Int32)">
      <summary>Renvoie la partie entière d’un nombre.</summary>
      <param name="Number">Obligatoire. Nombre de type <see langword="Integer" /> ou toute expression numérique valide.</param>
      <returns>Partie entière d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException">Number n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException">Number n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Int64)">
      <summary>Renvoie la partie entière d’un nombre.</summary>
      <param name="Number">Obligatoire. Nombre de type <see langword="Long" /> ou toute expression numérique valide.</param>
      <returns>Partie entière d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException">Number n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException">Number n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Object)">
      <summary>Renvoie la partie entière d’un nombre.</summary>
      <param name="Number">Obligatoire. Nombre de type <see langword="Object" /> ou toute expression numérique valide. Si l'argument <paramref name="Number" /> contient une valeur de type <see langword="Nothing" />, <see langword="Nothing" /> est retourné.</param>
      <returns>Partie entière d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException">Number n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException">Number n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Single)">
      <summary>Renvoie la partie entière d’un nombre.</summary>
      <param name="Number">Obligatoire. Nombre de type <see langword="Single" /> ou toute expression numérique valide.</param>
      <returns>Partie entière d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException">Number n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException">Number n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Byte)">
      <summary>Retourne une chaîne représentant la valeur hexadécimale d'un nombre.</summary>
      <param name="Number">Obligatoire. Toute expression numérique ou expression <see langword="String" /> valide.</param>
      <returns>Une chaîne représentant la valeur hexadécimale d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Int16)">
      <summary>Retourne une chaîne représentant la valeur hexadécimale d'un nombre.</summary>
      <param name="Number">Obligatoire. Toute expression numérique ou expression <see langword="String" /> valide.</param>
      <returns>Une chaîne représentant la valeur hexadécimale d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Int32)">
      <summary>Retourne une chaîne représentant la valeur hexadécimale d'un nombre.</summary>
      <param name="Number">Obligatoire. Toute expression numérique ou expression <see langword="String" /> valide.</param>
      <returns>Une chaîne représentant la valeur hexadécimale d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Int64)">
      <summary>Retourne une chaîne représentant la valeur hexadécimale d'un nombre.</summary>
      <param name="Number">Obligatoire. Toute expression numérique ou expression <see langword="String" /> valide.</param>
      <returns>Une chaîne représentant la valeur hexadécimale d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Object)">
      <summary>Retourne une chaîne représentant la valeur hexadécimale d'un nombre.</summary>
      <param name="Number">Obligatoire. Toute expression numérique ou expression <see langword="String" /> valide.</param>
      <returns>Une chaîne représentant la valeur hexadécimale d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.SByte)">
      <summary>Retourne une chaîne représentant la valeur hexadécimale d'un nombre.</summary>
      <param name="Number">Obligatoire. Toute expression numérique ou expression <see langword="String" /> valide.</param>
      <returns>Une chaîne représentant la valeur hexadécimale d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt16)">
      <summary>Retourne une chaîne représentant la valeur hexadécimale d'un nombre.</summary>
      <param name="Number">Obligatoire. Toute expression numérique ou expression <see langword="String" /> valide.</param>
      <returns>Une chaîne représentant la valeur hexadécimale d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt32)">
      <summary>Retourne une chaîne représentant la valeur hexadécimale d'un nombre.</summary>
      <param name="Number">Obligatoire. Toute expression numérique ou expression <see langword="String" /> valide.</param>
      <returns>Une chaîne représentant la valeur hexadécimale d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt64)">
      <summary>Retourne une chaîne représentant la valeur hexadécimale d'un nombre.</summary>
      <param name="Number">Obligatoire. Toute expression numérique ou expression <see langword="String" /> valide.</param>
      <returns>Une chaîne représentant la valeur hexadécimale d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Decimal)">
      <summary>Renvoie la partie entière d’un nombre.</summary>
      <param name="Number">Obligatoire. Nombre de type <see langword="Decimal" /> ou toute expression numérique valide.</param>
      <returns>Partie entière d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException">Number n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException">Number n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Double)">
      <summary>Renvoie la partie entière d’un nombre.</summary>
      <param name="Number">Obligatoire. Nombre de type <see langword="Double" /> ou toute expression numérique valide.</param>
      <returns>Partie entière d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException">Number n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException">Number n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Int16)">
      <summary>Renvoie la partie entière d’un nombre.</summary>
      <param name="Number">Obligatoire. Nombre de type <see langword="Short" /> ou toute expression numérique valide.</param>
      <returns>Partie entière d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException">Number n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException">Number n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Int32)">
      <summary>Renvoie la partie entière d’un nombre.</summary>
      <param name="Number">Obligatoire. Nombre de type <see langword="Integer" /> ou toute expression numérique valide.</param>
      <returns>Partie entière d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException">Number n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException">Number n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Int64)">
      <summary>Renvoie la partie entière d’un nombre.</summary>
      <param name="Number">Obligatoire. Nombre de type <see langword="Long" /> ou toute expression numérique valide.</param>
      <returns>Partie entière d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException">Number n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException">Number n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Object)">
      <summary>Renvoie la partie entière d’un nombre.</summary>
      <param name="Number">Obligatoire. Nombre de type <see langword="Object" /> ou toute expression numérique valide. Si l'argument <paramref name="Number" /> contient une valeur de type <see langword="Nothing" />, <see langword="Nothing" /> est retourné.</param>
      <returns>Partie entière d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException">Number n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException">Number n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Single)">
      <summary>Renvoie la partie entière d’un nombre.</summary>
      <param name="Number">Obligatoire. Nombre de type <see langword="Single" /> ou toute expression numérique valide.</param>
      <returns>Partie entière d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException">Number n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException">Number n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Byte)">
      <summary>Retourne une chaîne représentant la valeur octale d'un nombre.</summary>
      <param name="Number">Obligatoire. Toute expression numérique ou expression <see langword="String" /> valide.</param>
      <returns>Une chaîne représentant la valeur octale d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Int16)">
      <summary>Retourne une chaîne représentant la valeur octale d'un nombre.</summary>
      <param name="Number">Obligatoire. Toute expression numérique ou expression <see langword="String" /> valide.</param>
      <returns>Une chaîne représentant la valeur octale d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Int32)">
      <summary>Retourne une chaîne représentant la valeur octale d'un nombre.</summary>
      <param name="Number">Obligatoire. Toute expression numérique ou expression <see langword="String" /> valide.</param>
      <returns>Une chaîne représentant la valeur octale d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Int64)">
      <summary>Retourne une chaîne représentant la valeur octale d'un nombre.</summary>
      <param name="Number">Obligatoire. Toute expression numérique ou expression <see langword="String" /> valide.</param>
      <returns>Une chaîne représentant la valeur octale d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Object)">
      <summary>Retourne une chaîne représentant la valeur octale d'un nombre.</summary>
      <param name="Number">Obligatoire. Toute expression numérique ou expression <see langword="String" /> valide.</param>
      <returns>Une chaîne représentant la valeur octale d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.SByte)">
      <summary>Retourne une chaîne représentant la valeur octale d'un nombre.</summary>
      <param name="Number">Obligatoire. Toute expression numérique ou expression <see langword="String" /> valide.</param>
      <returns>Une chaîne représentant la valeur octale d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt16)">
      <summary>Retourne une chaîne représentant la valeur octale d'un nombre.</summary>
      <param name="Number">Obligatoire. Toute expression numérique ou expression <see langword="String" /> valide.</param>
      <returns>Une chaîne représentant la valeur octale d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt32)">
      <summary>Retourne une chaîne représentant la valeur octale d'un nombre.</summary>
      <param name="Number">Obligatoire. Toute expression numérique ou expression <see langword="String" /> valide.</param>
      <returns>Une chaîne représentant la valeur octale d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt64)">
      <summary>Retourne une chaîne représentant la valeur octale d'un nombre.</summary>
      <param name="Number">Obligatoire. Toute expression numérique ou expression <see langword="String" /> valide.</param>
      <returns>Une chaîne représentant la valeur octale d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> n'est pas spécifié.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Str(System.Object)">
      <summary>Retourne une représentation <see langword="String" /> d'un nombre.</summary>
      <param name="Number">Obligatoire. <see langword="Object" /> contenant toute expression numérique valide.</param>
      <returns>Représentation <see langword="String" /> d’un nombre.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> n'est pas spécifié.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="Number" /> n'est pas un type numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Val(System.Char)">
      <summary>Renvoie les nombres contenus dans une chaîne en tant que valeur numérique du type adéquat.</summary>
      <param name="Expression">Obligatoire. Toute expression <see langword="String" />, variable <see langword="Object" /> ou valeur <see langword="Char" /> valide. Si <paramref name="Expression" /> est de type <see langword="Object" />, sa valeur doit être convertible en <see langword="String" />, ou une erreur <see cref="T:System.ArgumentException" /> se produit.</param>
      <returns>Nombres contenus dans une chaîne en tant que valeur numérique du type approprié.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="InputStr" /> est trop grand.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Expression" /> est une expression de type <see langword="Object" /> non convertible en <see langword="String" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Val(System.Object)">
      <summary>Renvoie les nombres contenus dans une chaîne en tant que valeur numérique du type adéquat.</summary>
      <param name="Expression">Obligatoire. Toute expression <see langword="String" />, variable <see langword="Object" /> ou valeur <see langword="Char" /> valide. Si <paramref name="Expression" /> est de type <see langword="Object" />, sa valeur doit être convertible en <see langword="String" />, ou une erreur <see cref="T:System.ArgumentException" /> se produit.</param>
      <returns>Nombres contenus dans une chaîne en tant que valeur numérique du type approprié.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="InputStr" /> est trop grand.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Expression" /> est une expression de type <see langword="Object" /> non convertible en <see langword="String" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Val(System.String)">
      <summary>Renvoie les nombres contenus dans une chaîne en tant que valeur numérique du type adéquat.</summary>
      <param name="InputStr">Obligatoire. Toute expression <see langword="String" />, variable <see langword="Object" /> ou valeur <see langword="Char" /> valide. Si <paramref name="Expression" /> est de type <see langword="Object" />, sa valeur doit être convertible en <see langword="String" />, ou une erreur <see cref="T:System.ArgumentException" /> se produit.</param>
      <returns>Nombres contenus dans une chaîne en tant que valeur numérique du type approprié.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="InputStr" /> est trop grand.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Expression" /> est une expression de type <see langword="Object" /> non convertible en <see langword="String" />.</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.DateAndTime">
      <summary>Le module <see langword="DateAndTime" /> contient les procédures et propriétés utilisées pour les opérations de date et d'heure.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateAdd(Microsoft.VisualBasic.DateInterval,System.Double,System.DateTime)">
      <summary>Retourne une valeur contenant une valeur de date et d’heure auxquelles un intervalle de temps spécifié a été ajouté.</summary>
      <param name="Interval">Obligatoire. Valeur d’énumération <see cref="T:Microsoft.VisualBasic.DateInterval" /> ou expression de chaîne représentant l’intervalle de temps que vous souhaitez ajouter.</param>
      <param name="Number">Obligatoire. Expression à virgule flottante représentant le nombre d'intervalles à ajouter. Peut être positif (pour obtenir des valeurs date/heure à venir) ou négatif (pour obtenir des valeurs date/heure passées). Elle peut contenir une partie décimale lorsque <paramref name="Interval" /> spécifie des heures, minutes ou secondes. Pour les autres valeurs de <paramref name="Interval" />, toute partie décimale de <paramref name="Number" /> est ignorée.</param>
      <param name="DateValue">Obligatoire. Expression représentant la date et l'heure auxquelles l'intervalle doit être ajouté. <paramref name="DateValue" /> proprement dit n'est pas modifié dans le programme appelant.</param>
      <returns>Valeur contenant une valeur de date et d’heure auxquelles un intervalle de temps spécifié a été ajouté.</returns>
      <exception cref="T:System.InvalidCastException">
        <paramref name="DateValue" /> ne peut pas être converti en <see langword="Date" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Interval" /> n'est pas valide.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La date calculée est antérieure à 00:00:00 le 1er janvier de l'année 1 ou ultérieure à 23:59:59 le 31 décembre 9999.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateAdd(System.String,System.Double,System.Object)">
      <summary>Retourne une valeur contenant une valeur de date et d’heure auxquelles un intervalle de temps spécifié a été ajouté.</summary>
      <param name="Interval">Obligatoire. Valeur d’énumération <see cref="T:Microsoft.VisualBasic.DateInterval" /> ou expression de chaîne représentant l’intervalle de temps que vous souhaitez ajouter.</param>
      <param name="Number">Obligatoire. Expression à virgule flottante représentant le nombre d'intervalles à ajouter. <paramref name="Number" /> peut être positif (pour obtenir des valeurs date/heure à venir) ou négatif (pour représenter des valeurs date/heure passées). Elle peut contenir une partie décimale lorsque <paramref name="Interval" /> spécifie des heures, minutes ou secondes. Pour les autres valeurs de <paramref name="Interval" />, toute partie décimale de <paramref name="Number" /> est ignorée.</param>
      <param name="DateValue">Obligatoire. Expression représentant la date et l'heure auxquelles l'intervalle doit être ajouté. <paramref name="DateValue" /> proprement dit n'est pas modifié dans le programme appelant.</param>
      <returns>Valeur contenant une valeur de date et d’heure auxquelles un intervalle de temps spécifié a été ajouté.</returns>
      <exception cref="T:System.InvalidCastException">
        <paramref name="DateValue" /> ne peut pas être converti en <see langword="Date" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Interval" /> n'est pas valide.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La date calculée est antérieure à 00:00:00 le 1er janvier de l'année 1 ou ultérieure à 23:59:59 le 31 décembre 9999.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateDiff(Microsoft.VisualBasic.DateInterval,System.DateTime,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary>Retourne une valeur longue spécifiant le nombre d’intervalles de temps entre deux valeurs <see langword="Date" />.</summary>
      <param name="Interval">Obligatoire. Valeur d’énumération <see cref="T:Microsoft.VisualBasic.DateInterval" /> ou expression de chaîne représentant l’intervalle de temps que vous souhaitez utiliser comme unité de différence entre <paramref name="Date1" /> et <paramref name="Date2" />.</param>
      <param name="Date1">Obligatoire. La première valeur de date/d'heure que vous souhaitez utiliser dans le calcul.</param>
      <param name="Date2">Obligatoire. La deuxième valeur de date/d'heure que vous souhaitez utiliser dans le calcul.</param>
      <param name="DayOfWeek">Optionnel. Valeur choisie dans l'énumération <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> qui spécifie le premier jour de la semaine. En l'absence de spécification, <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" /> est utilisé.</param>
      <param name="WeekOfYear">Optionnel. Valeur choisie dans l'énumération <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> qui spécifie la première semaine de l'année. En l'absence de spécification, <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" /> est utilisé.</param>
      <returns>Valeur longue spécifiant le nombre d’intervalles de temps entre deux valeurs <see langword="Date" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Date1" />, <paramref name="Date2" />, or <paramref name="DayofWeek" /> est hors limites.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="Date1" /> ou <paramref name="Date2" /> est d'un type non valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary>Retourne une valeur longue spécifiant le nombre d’intervalles de temps entre deux valeurs <see langword="Date" />.</summary>
      <param name="Interval">Obligatoire. Valeur d’énumération <see cref="T:Microsoft.VisualBasic.DateInterval" /> ou expression de chaîne représentant l’intervalle de temps que vous souhaitez utiliser comme unité de différence entre <paramref name="Date1" /> et <paramref name="Date2" />.</param>
      <param name="Date1">Obligatoire. La première valeur de date/d'heure que vous souhaitez utiliser dans le calcul.</param>
      <param name="Date2">Obligatoire. La deuxième valeur de date/d'heure que vous souhaitez utiliser dans le calcul.</param>
      <param name="DayOfWeek">Optionnel. Valeur choisie dans l'énumération <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> qui spécifie le premier jour de la semaine. En l'absence de spécification, <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" /> est utilisé.</param>
      <param name="WeekOfYear">Optionnel. Valeur choisie dans l'énumération <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> qui spécifie la première semaine de l'année. En l'absence de spécification, <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" /> est utilisé.</param>
      <returns>Valeur longue spécifiant le nombre d’intervalles de temps entre deux valeurs <see langword="Date" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Date1" />, <paramref name="Date2" />, or <paramref name="DayofWeek" /> est hors limites.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="Date1" /> ou <paramref name="Date2" /> est d'un type non valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary>Retourne une valeur entière contenant le composant spécifié d’une valeur <see langword="Date" /> donnée.</summary>
      <param name="Interval">Obligatoire. Valeur d’énumération <see cref="T:Microsoft.VisualBasic.DateInterval" /> ou expression de chaîne représentant la partie de la valeur de date/heure que vous souhaitez retourner.</param>
      <param name="DateValue">Obligatoire. Valeur <see langword="Date" /> que vous souhaitez évaluer.</param>
      <param name="FirstDayOfWeekValue">Facultatif. Valeur choisie dans l'énumération <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> qui spécifie le premier jour de la semaine. En l'absence de spécification, <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" /> est utilisé.</param>
      <param name="FirstWeekOfYearValue">Optionnel. Valeur choisie dans l'énumération <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> qui spécifie la première semaine de l'année. En l'absence de spécification, <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" /> est utilisé.</param>
      <returns>Valeur entière contenant le composant spécifié d’une valeur <see langword="Date" /> donnée.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Interval" /> n'est pas valide.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="DateValue" /> ne peut pas être converti en <see langword="Date" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary>Retourne une valeur contenant le composant spécifié d’une valeur <see langword="Date" /> donnée.</summary>
      <param name="Interval">Obligatoire. Valeur d’énumération <see cref="T:Microsoft.VisualBasic.DateInterval" /> ou expression de chaîne représentant la partie de la valeur de date/heure que vous souhaitez retourner.</param>
      <param name="DateValue">Obligatoire. Valeur <see langword="Date" /> que vous souhaitez évaluer.</param>
      <param name="DayOfWeek">Optionnel. Valeur choisie dans l'énumération <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> qui spécifie le premier jour de la semaine. En l'absence de spécification, <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" /> est utilisé.</param>
      <param name="WeekOfYear">Optionnel. Valeur choisie dans l'énumération <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> qui spécifie la première semaine de l'année. En l'absence de spécification, <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" /> est utilisé.</param>
      <returns>Valeur entière contenant le composant spécifié d’une valeur <see langword="Date" /> donnée.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Interval" /> n'est pas valide.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="DateValue" /> ne peut pas être converti en <see langword="Date" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)">
      <summary>Retourne une valeur <see langword="Date" /> représentant une année, un mois et un jour spécifiés, l'indication d'heure ayant la valeur minuit (00:00:00).</summary>
      <param name="Year">Obligatoire. Expression entière comprise entre 1 et 9999. Toutefois, les valeurs inférieures à cette plage sont également acceptées. Si <paramref name="Year" /> à une valeur entre 0 et 99, celle-ci est interprétée comme étant comprise entre 1930 et 2029, comme expliqué dans la section « Notes » ci-après. Si <paramref name="Year" /> est inférieure à 1, elle est soustraite de l'année actuelle.</param>
      <param name="Month">Obligatoire. Expression entière comprise entre 1 et 12. Cependant, les valeurs non comprises dans cette plage sont également acceptées. La valeur de <paramref name="Month" /> est décalée de 1 et appliquée au mois de janvier de l'année calculée. En d'autres termes, (<paramref name="Month" /> - 1) est ajouté à janvier. L'année est recalculée si nécessaire. Les résultats suivants illustrent cet effet : 
Si <paramref name="Month" /> a la valeur 1, le résultat est le mois de janvier de l'année calculée.  
Si <paramref name="Month" /> a la valeur 0, le résultat est décembre de l'année précédente.  
Si <paramref name="Month" /> a la valeur -1, le résultat est novembre de l'année précédente.  
Si <paramref name="Month" /> a la valeur 13, le résultat est le mois de janvier de l'année suivante.</param>
      <param name="Day">Obligatoire. Expression entière comprise entre 1 et 31. Cependant, les valeurs non comprises dans cette plage sont également acceptées. La valeur de <paramref name="Day" /> est décalée de 1 et appliquée au premier jour du mois calculé. En d'autres termes, (<paramref name="Day" /> - 1) est ajouté au premier du mois. Le mois et l'année sont recalculés si nécessaire. Les résultats suivants illustrent cet effet : 
Si <paramref name="Day" /> a la valeur 1, le résultat est le premier jour du mois calculé.  
Si <paramref name="Day" /> a la valeur 0, le résultat est le dernier jour du mois précédent.  
Si <paramref name="Day" /> a la valeur -1, le résultat est l'avant-dernier jour du mois précédent.  
Si <paramref name="Day" /> est ultérieur à la fin du mois en cours, le résultat est le jour correspondant du mois suivant. Par exemple, si <paramref name="Month" /> a la valeur 4 et <paramref name="Day" /> la valeur 31, le résultat est le 1er mai.</param>
      <returns>Valeur <see langword="Date" /> représentant une année, un mois et un jour spécifiés, l’indication d’heure ayant la valeur minuit (00:00:00).</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.DateString">
      <summary>Retourne ou définit une valeur de chaîne représentant la date actuelle indiquée par votre système.</summary>
      <returns>Retourne ou définit une valeur de chaîne représentant la date actuelle indiquée par votre système.</returns>
      <exception cref="T:System.InvalidCastException">Format non valide utilisé pour définir la valeur de <see cref="P:Microsoft.VisualBasic.DateAndTime.DateString" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateValue(System.String)">
      <summary>Retourne une valeur <see langword="Date" /> contenant l'indication de date représentée par une chaîne, l'indication d'heure ayant la valeur minuit (00:00:00).</summary>
      <param name="StringDate">Obligatoire. Expression de chaîne représentant une valeur de date/heure comprise entre 00:00:00 le 1er janvier de l’an 1 et 23:59:59 le 31 décembre 9999.</param>
      <returns>Valeur <see langword="Date" /> contenant l’indication de date représentée par une chaîne, l’indication d’heure ayant la valeur minuit (00:00:00).</returns>
      <exception cref="T:System.InvalidCastException">
        <paramref name="StringDate" /> comprend une indication d'heure non valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)">
      <summary>Retourne une valeur entière comprise entre 1 et 31 représentant le jour du mois.</summary>
      <param name="DateValue">Obligatoire. Valeur <see langword="Date" /> de laquelle vous souhaitez extraire le jour.</param>
      <returns>Valeur entière comprise entre 1 et 31 représentant le jour du mois.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)">
      <summary>Retourne une valeur entière comprise entre 0 et 23 représentant l’heure du jour.</summary>
      <param name="TimeValue">Obligatoire. Valeur <see langword="Date" /> de laquelle vous souhaitez extraire l’heure.</param>
      <returns>Valeur entière comprise entre 0 et 23 représentant l’heure du jour.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)">
      <summary>Retourne une valeur entière comprise entre 0 et 59 représentant la minute de l’heure.</summary>
      <param name="TimeValue">Obligatoire. Valeur <see langword="Date" /> de laquelle vous souhaitez extraire la minute.</param>
      <returns>Valeur entière comprise entre 0 et 59 représentant la minute de l’heure.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)">
      <summary>Retourne une valeur entière comprise entre 1 et 12 représentant le mois de l’année.</summary>
      <param name="DateValue">Obligatoire. Valeur <see langword="Date" /> de laquelle vous souhaitez extraire le mois.</param>
      <returns>Valeur entière comprise entre 1 et 12 représentant le mois de l’année.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.MonthName(System.Int32,System.Boolean)">
      <summary>Retourne une valeur de chaîne contenant le nom du mois spécifié.</summary>
      <param name="Month">Obligatoire. Désignation numérique du mois, entre 1 et 13 ; 1 représente janvier et 12, décembre. Vous pouvez utiliser la valeur 13 avec un calendrier de 13 mois. Si votre système utilise un calendrier de 12 mois et si la valeur de <paramref name="Month" /> est 13, <c>MonthName</c> retourne une chaîne vide.</param>
      <param name="Abbreviate">Facultatif. <see langword="True" /> pour abréger le nom du mois ; sinon, <see langword="False" />. La valeur par défaut est <see langword="False" />.</param>
      <returns>Valeur de chaîne contenant le nom du mois spécifié.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Month" /> est inférieur à 1 ou supérieur à 13.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.Now">
      <summary>Retourne une valeur contenant la date et l’heure en cours indiquées par votre système.</summary>
      <returns>Date et heure actuelles en fonction de votre système.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)">
      <summary>Retourne une valeur entière comprise entre 0 et 59 représentant la seconde de la minute.</summary>
      <param name="TimeValue">Obligatoire. Valeur <see langword="Date" /> de laquelle vous souhaitez extraire la seconde.</param>
      <returns>Valeur entière comprise entre 0 et 59 représentant la seconde de la minute.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay">
      <summary>Retourne ou définit une valeur <see langword="Date" /> contenant l'heure en cours indiquée par votre système.</summary>
      <returns>Retourne ou définit une valeur <see langword="Date" /> contenant l'heure en cours indiquée par votre système.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.Timer">
      <summary>Retourne une valeur de type <see cref="T:System.Double" /> représentant le nombre de secondes écoulées depuis minuit.</summary>
      <returns>Valeur représentant le nombre de secondes écoulées depuis minuit.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)">
      <summary>Retourne une valeur <see langword="Date" /> représentant une heure, une minute et une seconde spécifiées, l'indication de date ayant la valeur 1er janvier de l'année 1.</summary>
      <param name="Hour">Obligatoire. Expression entière comprise entre 0 et 23. Cependant, les valeurs non comprises dans cette plage sont également acceptées.</param>
      <param name="Minute">Obligatoire. Expression entière comprise entre 0 et 59. Cependant, les valeurs non comprises dans cette plage sont également acceptées. La valeur de <paramref name="Minute" /> est ajoutée à l'heure calculée, ce qui signifie qu'une valeur négative spécifie les minutes avant cette heure.</param>
      <param name="Second">Obligatoire. Expression entière comprise entre 0 et 59. Cependant, les valeurs non comprises dans cette plage sont également acceptées. La valeur de <paramref name="Second" /> est ajoutée à la minute calculée, ce qui signifie qu'une valeur négative spécifie les secondes avant cette minute.</param>
      <returns>Valeur <see langword="Date" /> représentant une heure, une minute et une seconde spécifiées, l’indication de date ayant la valeur 1er janvier de l’an 1.</returns>
      <exception cref="T:System.ArgumentException">Un argument se trouve en dehors de la plage s'étendant de -2 147 483 648 à 2 147 483 647</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">L'heure calculée est inférieure à -24 heures.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.TimeString">
      <summary>Retourne ou définit une valeur de chaîne représentant l’heure actuelle indiquée par votre système.</summary>
      <returns>Retourne ou définit une valeur de chaîne représentant l’heure actuelle indiquée par votre système.</returns>
      <exception cref="T:System.InvalidCastException">Format non valide utilisé pour définir la valeur de <see langword="TimeString" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)">
      <summary>Retourne une valeur <see langword="Date" /> contenant l'indication d'heure représentée par une chaîne, l'indication de date ayant la valeur 1er janvier de l'année 1.</summary>
      <param name="StringTime">Obligatoire. Expression de chaîne représentant une valeur de date/heure comprise entre 00:00:00 le 1er janvier de l’an 1 et 23:59:59 le 31 décembre 9999.</param>
      <returns>Valeur <see langword="Date" /> contenant l’indication d’heure représentée par une chaîne, l’indication de date ayant la valeur 1er janvier de l’an 1.</returns>
      <exception cref="T:System.InvalidCastException">
        <paramref name="StringTime" /> inclut des informations de date non valides.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.Today">
      <summary>Retourne ou définit une valeur <see langword="Date" /> représentant la date actuelle indiquée par votre système.</summary>
      <returns>Retourne ou définit une valeur <see langword="Date" /> représentant la date actuelle indiquée par votre système.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)">
      <summary>Retourne une valeur entière contenant un nombre représentant le jour de la semaine.</summary>
      <param name="DateValue">Obligatoire. Valeur <see langword="Date" /> pour laquelle vous souhaitez déterminer le jour de la semaine.</param>
      <param name="DayOfWeek">Facultatif. Valeur choisie dans l'énumération <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> qui spécifie le premier jour de la semaine. En l'absence de spécification, <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" /> est utilisé.</param>
      <returns>Valeur entière contenant un nombre représentant le jour de la semaine.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="DayOfWeek" /> est inférieur à 0 ou supérieur à 7.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)">
      <summary>Retourne une valeur de chaîne contenant le nom du jour de la semaine spécifié.</summary>
      <param name="Weekday">Obligatoire. Integer. Désignation numérique du jour de la semaine, de 1 à 7 ; 1 représente le premier jour de la semaine et 7 le dernier. Les identités du premier et du dernier jour dépendent du paramètre de <paramref name="FirstDayOfWeekValue" />.</param>
      <param name="Abbreviate">Optionnel. Valeur <see langword="Boolean" /> qui indique si le nom du jour de la semaine sera abrégé. Si elle n'est pas spécifiée, la valeur par défaut est <see langword="False" />, ce qui signifie que le nom du jour de la semaine n'est pas abrégé.</param>
      <param name="FirstDayOfWeekValue">Facultatif. Valeur choisie dans l'énumération <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> qui spécifie le premier jour de la semaine. En l'absence de spécification, <see langword="FirstDayOfWeek.System" /> est utilisé.</param>
      <returns>Valeur de chaîne contenant le nom du jour de la semaine spécifié.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Weekday" /> est inférieur à 1 ou supérieur à 7 ou <paramref name="FirstDayOfWeekValue" /> est inférieur à 0 ou supérieur à 7.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)">
      <summary>Retourne une valeur entière comprise entre 1 et 9999 représentant l’année.</summary>
      <param name="DateValue">Obligatoire. Valeur <see langword="Date" /> de laquelle vous souhaitez extraire l’année.</param>
      <returns>Valeur entière comprise entre 1 et 9999 représentant l’année.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.DateFormat">
      <summary>Indique comment afficher les dates lors de l'appel de la fonction <see langword="FormatDateTime" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.GeneralDate">
      <summary>Pour les nombres réels, affiche une date et une heure. i le nombre n'a pas de partie fractionnaire, affiche seulement une date. i le nombre n'a pas de partie entière, affiche seulement l'heure. Le mode d'affichage de la date et de l'heure est fonction des paramètres régionaux de votre ordinateur. Ce membre est équivalent à la constante Visual Basic <see langword="vbGeneralDate" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.LongDate">
      <summary>Affiche une date dans le format de date longue spécifié dans les paramètres régionaux de votre ordinateur. Ce membre est équivalent à la constante Visual Basic <see langword="vbLongDate" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.LongTime">
      <summary>Affiche une heure dans le format d'heure longue spécifié dans les paramètres régionaux de votre ordinateur. Ce membre est équivalent à la constante Visual Basic <see langword="vbLongTime" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.ShortDate">
      <summary>Affiche une date dans le format de date court spécifié dans les paramètres régionaux de votre ordinateur. Ce membre est équivalent à la constante Visual Basic <see langword="vbShortDate" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.ShortTime">
      <summary>Affiche une heure dans le format d'heure court spécifié dans les paramètres régionaux de votre ordinateur. Ce membre est équivalent à la constante Visual Basic <see langword="vbShortTime" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.DateInterval">
      <summary>Indique comment déterminer et mettre en forme les intervalles de date pendant l’appel des fonctions de date.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Day">
      <summary>Jour du mois (1 à 31)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.DayOfYear">
      <summary>Jour de l’année (1 à 366)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Hour">
      <summary>Heure (0 à 23)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Minute">
      <summary>Minute (0 à 59)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Month">
      <summary>Mois (1 à 12)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Quarter">
      <summary>Trimestre de l’année (1 à 4)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Second">
      <summary>Seconde (0 à 59)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Weekday">
      <summary>Jour de la semaine (1 à 7)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.WeekOfYear">
      <summary>Semaine de l’année (1 à 53)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Year">
      <summary>Année</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Audio">
      <summary>Fournit des méthodes permettant de lire des sons.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Audio.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.Devices.Audio" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Clock">
      <summary>Fournit des propriétés permettant d’accéder à l’heure locale actuelle et à l’heure UTC (Universal Coordinated Time), équivalent à l’heure GMT (Greenwich Mean Time), à partir de l’horloge système.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Clock.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.Devices.Clock" />.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Clock.GmtTime">
      <summary>Obtient un objet <see langword="Date" /> qui contient la date et l'heure locales actuelles sur l'ordinateur, exprimées en temps universel (UTC ou GMT).</summary>
      <returns>Objet <see langword="Date" /> qui contient la date et l'heure actuelles exprimées en temps UTC (GMT).</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Clock.LocalTime">
      <summary>Obtient un objet <see langword="Date" /> qui contient la date et l'heure locales actuelles sur cet ordinateur.</summary>
      <returns>Objet <see langword="Date" /> qui contient la date et l'heure locales actuelles.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Clock.TickCount">
      <summary>Obtient le nombre de millisecondes de l'horloge système de l'ordinateur.</summary>
      <returns>
        <see langword="Integer" /> contenant le nombre de millisecondes de l'horloge système de l'ordinateur.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Computer">
      <summary>Fournit des propriétés permettant de manipuler des composants informatiques tels que le son, l’horloge, le clavier, le système de fichiers, etc.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Computer.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.Devices.Computer" />.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Audio">
      <summary>Obtient un objet qui fournit des propriétés pour les méthodes destinées à la lecture des sons.</summary>
      <returns>Objet <see langword="My.Computer.Audio" /> pour l'ordinateur.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Clipboard">
      <summary>Obtient un objet qui fournit des méthodes pour manipuler le Presse-papiers.</summary>
      <returns>Objet <see langword="My.Computer.Clipboard" /> pour l'ordinateur.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Keyboard">
      <summary>Obtient un objet qui fournit des propriétés pour accéder à l'état actuel du clavier, par exemple les touches actuellement enfoncées et fournit une méthode destinée à envoyer des séquences de touches à la fenêtre active.</summary>
      <returns>Objet <see langword="My.Computer.Keyboard" /> pour l'ordinateur.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Mouse">
      <summary>Obtient un objet qui fournit des propriétés pour obtenir des informations concernant le format et la configuration de la souris installée sur l'ordinateur local.</summary>
      <returns>Objet <see langword="My.Computer.Mouse" /> pour l'ordinateur.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Ports">
      <summary>Obtient un objet qui fournit une propriété et une méthode pour accéder aux ports série de l'ordinateur.</summary>
      <returns>Objet <see langword="My.Computer.Ports" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.ComputerInfo">
      <summary>Fournit des propriétés permettant d’obtenir des informations sur la mémoire, les assemblys chargés, le nom et le système d’exploitation de l’ordinateur.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.ComputerInfo.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.Devices.ComputerInfo" />.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory">
      <summary>Obtient la quantité totale de mémoire physique libre de l'ordinateur.</summary>
      <returns>
        <see langword="ULong" /> contenant le nombre d'octets de mémoire physique libre de l'ordinateur.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">L'application ne peut pas obtenir l'état de la mémoire.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory">
      <summary>Obtient la quantité totale d'espace d'adresse virtuelle libre de l'ordinateur.</summary>
      <returns>
        <see langword="ULong" /> contenant le nombre d'octets d'espace d'adresse virtuelle libre de l'ordinateur.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">L'application ne peut pas obtenir l'état de la mémoire.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture">
      <summary>Obtient la culture de l'interface utilisateur installée avec le système d'exploitation.</summary>
      <returns>Un objet <see cref="T:System.Globalization.CultureInfo" /> représente la culture de l'interface utilisateur installée sur l'ordinateur.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform">
      <summary>Reçoit l'identificateur de plateforme pour le système d'exploitation de l'ordinateur.</summary>
      <returns>
        <see langword="String" /> contenant l'identificateur de plateforme pour le système d'exploitation de l'ordinateur, choisi dans les noms des membres de l'énumération <see cref="T:System.PlatformID" />.</returns>
      <exception cref="T:System.ExecutionEngineException">L'application ne peut pas obtenir les informations sur la plateforme du système d'exploitation.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion">
      <summary>Obtient la version du système d'exploitation de l'ordinateur.</summary>
      <returns>
        <see langword="String" /> contenant le numéro de version actuelle du système d'exploitation.</returns>
      <exception cref="T:System.ExecutionEngineException">L'application ne peut pas obtenir les informations relatives à la version du système d'exploitation.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory">
      <summary>Obtient la quantité totale de mémoire physique de l'ordinateur.</summary>
      <returns>
        <see langword="ULong" /> contenant le nombre d'octets de mémoire physique de l'ordinateur.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">L'application ne peut pas obtenir l'état de la mémoire.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory">
      <summary>Obtient la quantité totale d'espace d'adresse virtuelle disponible de l'ordinateur.</summary>
      <returns>
        <see langword="ULong" /> contenant le nombre d'octets d'espace d'adresse virtuelle disponible de l'ordinateur.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">L'application ne peut pas obtenir l'état de la mémoire.</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Keyboard">
      <summary>Fournit des propriétés utilisées pour accéder à l’état actuel du clavier, par exemple pour savoir quelles touches sont actuellement utilisées, et fournit une méthode permettant d’envoyer des séquences de touches à la fenêtre active.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Keyboard.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.Devices.Keyboard" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Mouse">
      <summary>Fournit des propriétés pour obtenir des informations concernant le format et la configuration de la souris installée sur l'ordinateur local.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Mouse.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.Devices.Mouse" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Network">
      <summary>Fournit une propriété, un événement et des méthodes pour interagir avec le réseau auquel l'ordinateur est connecté.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.Devices.Network" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs">
      <summary>Fournit des données pour les événements <see langword="My.Application.NetworkAvailabilityChanged" /> et <see langword="My.Computer.Network.NetworkAvailabilityChanged" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.#ctor(System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs" />.</summary>
      <param name="networkAvailable">
        <see cref="T:System.Boolean" /> qui indique si un réseau est disponible pour l'application.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.IsNetworkAvailable">
      <summary>Obtient une valeur indiquant si un réseau est disponible pour l'application.</summary>
      <returns>
        <see cref="T:System.Boolean" /> qui indique si un réseau est disponible pour l'application.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Ports">
      <summary>Fournit une propriété et une méthode permettant d’accéder aux ports série de l’ordinateur.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Ports.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.Devices.Ports" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.ServerComputer">
      <summary>Fournit des propriétés permettant de manipuler des composants informatiques tels que le son, l’horloge, le clavier, le système de fichiers, etc.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.ServerComputer.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.Devices.ServerComputer" />.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Clock">
      <summary>Obtient un objet qui fournit des propriétés permettant d'accéder à l'heure locale actuelle et au temps UTC (Universal Coordinated Time, équivalent du Greenwich Mean Time) de l'horloge système.</summary>
      <returns>Objet <see langword="My.Computer.Clock" /> pour l'ordinateur.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.FileSystem">
      <summary>Obtient un objet qui fournit des propriétés et méthodes à utiliser avec les lecteurs, fichiers et répertoires.</summary>
      <returns>Objet <see langword="My.Computer.FileSystem" /> pour l'ordinateur.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Info">
      <summary>Obtient un objet qui fournit des propriétés pour l'obtention des informations concernant la mémoire de l'ordinateur, les assemblys chargés, le nom et le système d'exploitation.</summary>
      <returns>Objet <see langword="My.Computer.Info" /> pour l'ordinateur.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Name">
      <summary>Obtient le nom de l'ordinateur.</summary>
      <returns>
        <see langword="String" /> contenant le nom de l'ordinateur.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Network">
      <summary>Obtient un objet qui fournit une propriété et des méthodes pour interagir avec le réseau auquel l'ordinateur est connecté.</summary>
      <returns>Objet <see langword="My.Computer.Network" /> pour l'ordinateur.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry">
      <summary>Obtient un objet qui fournit des propriétés et des méthodes pour manipuler le Registre.</summary>
      <returns>Objet <see langword="My.Computer.Registry" /> pour l'ordinateur.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.DueDate">
      <summary>Indique la date d'échéance des paiements lors de l'appel à des méthodes financières.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DueDate.BegOfPeriod">
      <summary>Tombe au début de l'intervalle de date</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DueDate.EndOfPeriod">
      <summary>Tombe à la fin de l'intervalle de date</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ErrObject">
      <summary>Le module <see langword="ErrObject" /> contient des propriétés et procédures permettant d'identifier et de gérer les erreurs d'exécution à l'aide de l'objet <see langword="Err" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ErrObject.Clear">
      <summary>Efface tous les paramètres de propriété de l'objet <see langword="Err" />.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Description">
      <summary>Retourne ou définit une expression <see langword="String" /> contenant une chaîne descriptive associée à une erreur. Lecture/écriture.</summary>
      <returns>Retourne ou définit une expression <see langword="String" /> contenant une chaîne descriptive associée à une erreur. Lecture/écriture.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Erl">
      <summary>Obtient un entier indiquant le numéro de ligne de la dernière instruction exécutée.</summary>
      <returns>Numéro de ligne de la dernière instruction exécutée.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ErrObject.GetException">
      <summary>Retourne l'exception représentant l'erreur survenue.</summary>
      <returns>L’exception représentant l’erreur survenue.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.LastDllError">
      <summary>Obtient un code d’erreur système produit par un appel à une bibliothèque de liens dynamiques (DLL).</summary>
      <returns>Code d’erreur système produit par un appel à une bibliothèque de liens dynamiques (DLL).</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Number">
      <summary>Retourne ou définit une valeur numérique spécifiant une erreur. Lecture/écriture.</summary>
      <returns>Retourne ou définit une valeur numérique spécifiant une erreur. Lecture/écriture.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> est supérieur à 65535.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
      <summary>Génère une erreur d'exécution ; peut être utilisé au lieu de l'instruction <see langword="Error" />.</summary>
      <param name="Number">Obligatoire. Entier <see langword="Long" /> qui identifie la nature de l'erreur. Les erreurs Visual Basic se situent dans la plage 0-65535 ; la plage 0-512 est réservée aux erreurs système ; la plage 513-65535 est disponible pour les erreurs définies par l’utilisateur. Lorsque vous définissez la propriété <see langword="Number" /> à votre propre code d'erreur dans un module de classe, vous ajoutez votre numéro de code d'erreur à la constante <see langword="vbObjectError" />. Par exemple, pour générer le numéro d’erreur 513, affectez la valeur <c>vbObjectError + 513</c> à la propriété <see langword="Number" />.</param>
      <param name="Source">Facultatif. Expression <see langword="String" /> nommant l'objet ou l'application qui a généré l'erreur. Lorsque vous définissez cette propriété pour un objet, utilisez la forme <c>project</c>.<c>class</c>. Si <paramref name="Source" /> n'est pas spécifié, l'ID de processus du projet Visual Basic actuel est utilisé.</param>
      <param name="Description">Optionnel. Expression <see langword="String" /> décrivant l'erreur. Si elle est non spécifiée, la valeur dans la propriété <see langword="Number" /> est examinée. Si elle peut être mappée à un code d'erreur d'exécution Visual Basic, la chaîne qui serait retournée par la fonction <see langword="Error" /> est utilisée comme propriété <see langword="Description" />. S'il n'y a aucune erreur Visual Basic correspondant à la propriété <see langword="Number" />, le message "Erreur définie par l'application ou par l'objet" est utilisé.</param>
      <param name="HelpFile">Facultatif. Chemin qualifié complet au fichier d'aide dans lequel l'aide concernant cette erreur peut être recherchée. S'il n'est pas spécifié, Visual Basic utilise le lecteur, le chemin d'accès et le nom de fichier qualifiés complets du fichier d'aide Visual Basic.</param>
      <param name="HelpContext">Optionnel. L'ID de contexte identifiant une rubrique dans <paramref name="HelpFile" /> qui fournit une aide pour l'erreur. S'il est omis, l'ID de contexte du fichier d'aide Visual Basic pour l'erreur correspondant à la propriété <see langword="Number" /> est utilisé, s'il existe.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.FileAttribute">
      <summary>Indique les attributs de fichier à utiliser lors de l'appel de fonctions d'accès aux fichiers.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Archive">
      <summary>Le fichier a été modifié depuis sa dernière sauvegarde. Ce membre est équivalent à la constante Visual Basic <see langword="vbArchive" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Directory">
      <summary>Répertoire ou dossier. Ce membre est équivalent à la constante Visual Basic <see langword="vbDirectory" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Hidden">
      <summary>Masqué. Ce membre est équivalent à la constante Visual Basic <see langword="vbHidden" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Normal">
      <summary>Normal (valeur par défaut pour <see langword="Dir" /> et <see langword="SetAttr" />). Aucune caractéristique spéciale ne s'applique à ce fichier. Ce membre est équivalent à la constante Visual Basic <see langword="vbNormal" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.ReadOnly">
      <summary>En lecture seule. Ce membre est équivalent à la constante Visual Basic <see langword="vbReadOnly" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.System">
      <summary>Fichier système. Ce membre est équivalent à la constante Visual Basic <see langword="vbSystem" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Volume">
      <summary>Nom de volume. Cet attribut n'est pas valide lorsqu'il est utilisé avec <see langword="SetAttr" />. Ce membre est équivalent à la constante Visual Basic <see langword="vbVolume" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption">
      <summary>Spécifie l'opération à effectuer lorsqu'un répertoire à supprimer contient des fichiers ou des répertoires.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.DeleteAllContents">
      <summary>Supprime le contenu du répertoire avec le répertoire. Par défaut.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.ThrowIfDirectoryNonEmpty">
      <summary>Lève une exception <see cref="T:System.IO.IOException" /> si le répertoire n'est pas vide. La propriété <see langword="Data" /> de l'exception répertorie le ou les fichiers qui n'ont pas pu être supprimés.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.FieldType">
      <summary>Indique si les champs de texte sont délimités ou à largeur fixe.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.FieldType.Delimited">
      <summary>Indique que les champs sont délimités.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.FieldType.FixedWidth">
      <summary>Indique que les champs sont à largeur fixe.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.FileSystem">
      <summary>Fournit des propriétés et des méthodes destinées à être utilisées avec les lecteurs, les fichiers et les répertoires.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CombinePath(System.String,System.String)">
      <summary>Associe deux chemins d'accès et retourne un chemin d'accès correctement mis en forme.</summary>
      <param name="baseDirectory">
        <see langword="String" />. Premier chemin d'accès à combiner.</param>
      <param name="relativePath">
        <see langword="String" />. Deuxième chemin d'accès à combiner.</param>
      <returns>Combinaison des chemins d'accès spécifiés.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="baseDirectory" /> ou <paramref name="relativePath" /> sont des chemins d'accès incorrects.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String)">
      <summary>Copie le contenu d'un répertoire dans un autre répertoire.</summary>
      <param name="sourceDirectoryName">Répertoire à copier.</param>
      <param name="destinationDirectoryName">Emplacement dans lequel le contenu du répertoire doit être copié.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> ou <paramref name="sourceDirectoryName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le répertoire source n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le chemin source et le chemin cible sont identiques.</exception>
      <exception cref="T:System.InvalidOperationException">L'opération est cyclique.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Un fichier de destination existe mais est inaccessible.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>Copie le contenu d'un répertoire dans un autre répertoire.</summary>
      <param name="sourceDirectoryName">Répertoire à copier.</param>
      <param name="destinationDirectoryName">Emplacement dans lequel le contenu du répertoire doit être copié.</param>
      <param name="showUI">Indique si un suivi visuel de l'avancement de l'opération est nécessaire. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> ou <paramref name="sourceDirectoryName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le répertoire source n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le chemin source et le chemin cible sont identiques.</exception>
      <exception cref="T:System.InvalidOperationException">L'opération est cyclique.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Un fichier de destination existe mais est inaccessible.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="ShowUI" /> a la valeur <see langword="UIOption.AllDialogs" /> et l'utilisateur annule l'opération, ou un ou plusieurs fichiers du répertoire ne peuvent pas être copiés.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Copie le contenu d'un répertoire dans un autre répertoire.</summary>
      <param name="sourceDirectoryName">Répertoire à copier.</param>
      <param name="destinationDirectoryName">Emplacement dans lequel le contenu du répertoire doit être copié.</param>
      <param name="showUI">Indique si un suivi visuel de l'avancement de l'opération est nécessaire. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="onUserCancel">Indique ce qu’il convient de faire si l’utilisateur clique sur Annuler pendant l’opération. La valeur par défaut est <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> ou <paramref name="sourceDirectoryName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le répertoire source n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le chemin source et le chemin cible sont identiques.</exception>
      <exception cref="T:System.InvalidOperationException">L'opération est cyclique.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Un fichier de destination existe mais est inaccessible.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="ShowUI" /> a la valeur <see langword="UIOption.AllDialogs" /> et l'utilisateur annule l'opération, ou un ou plusieurs fichiers du répertoire ne peuvent pas être copiés.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,System.Boolean)">
      <summary>Copie le contenu d'un répertoire dans un autre répertoire.</summary>
      <param name="sourceDirectoryName">Répertoire à copier.</param>
      <param name="destinationDirectoryName">Emplacement dans lequel le contenu du répertoire doit être copié.</param>
      <param name="overwrite">
        <see langword="True" /> pour remplacer les fichiers existants ; sinon, <see langword="False" />. La valeur par défaut est <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> ou <paramref name="sourceDirectoryName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le répertoire source n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le chemin source et le chemin cible sont identiques.</exception>
      <exception cref="T:System.InvalidOperationException">L'opération est cyclique.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Un fichier de destination existe mais est inaccessible.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)">
      <summary>Copie un fichier vers un nouvel emplacement.</summary>
      <param name="sourceFileName">Fichier à copier.</param>
      <param name="destinationFileName">Emplacement vers lequel le fichier doit être copié.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> contient des informations de chemin d’accès.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> ou <paramref name="sourceFileName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier source n'est pas valide ou n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Un fichier du répertoire cible portant le même nom est en cours d'utilisation.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas l'autorisation requise.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>Copie un fichier vers un nouvel emplacement.</summary>
      <param name="sourceFileName">Fichier à copier.</param>
      <param name="destinationFileName">Emplacement vers lequel le fichier doit être copié.</param>
      <param name="showUI">Indique si un suivi visuel de l'avancement de l'opération est nécessaire. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> contient des informations de chemin d’accès.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> ou <paramref name="sourceFileName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier source n'est pas valide ou n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier de destination existe et <paramref name="overwrite" /> a la valeur <see langword="False" /> ().</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas l'autorisation requise.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Copie un fichier vers un nouvel emplacement.</summary>
      <param name="sourceFileName">Fichier à copier.</param>
      <param name="destinationFileName">Emplacement vers lequel le fichier doit être copié.</param>
      <param name="showUI">Indique si un suivi visuel de l'avancement de l'opération est nécessaire. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="onUserCancel">Indique ce qu’il convient de faire si l’utilisateur clique sur Annuler pendant l’opération. La valeur par défaut est <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> contient des informations de chemin d’accès.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> ou <paramref name="sourceFileName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier source n'est pas valide ou n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier de destination existe et <paramref name="overwrite" /> a la valeur <see langword="False" /> ().</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas l'autorisation requise.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="UICancelOption" /> a la valeur <see langword="ThrowException" /> et l'utilisateur a annulé l'opération ou une erreur d'E/S non spécifiée s'est produit.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,System.Boolean)">
      <summary>Copie un fichier vers un nouvel emplacement.</summary>
      <param name="sourceFileName">Fichier à copier.</param>
      <param name="destinationFileName">Emplacement vers lequel le fichier doit être copié.</param>
      <param name="overwrite">
        <see langword="True" /> si les fichiers existants doivent être remplacés ; sinon, <see langword="False" />. La valeur par défaut est <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> contient des informations de chemin d’accès.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> ou <paramref name="sourceFileName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier source n'est pas valide ou n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier de destination existe et <paramref name="overwrite" /> a la valeur <see langword="False" /> ().</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas l'autorisation requise.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)">
      <summary>Crée un répertoire.</summary>
      <param name="directory">Nom et emplacement du répertoire.</param>
      <exception cref="T:System.ArgumentException">Le format du nom du répertoire est incorrect. Par exemple, il contient des caractères non valides ou se compose uniquement d'espace blanc.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le nom de répertoire est trop long.</exception>
      <exception cref="T:System.NotSupportedException">Le nom du répertoire se compose uniquement du signe deux-points (:).</exception>
      <exception cref="T:System.IO.IOException">Le répertoire parent du répertoire à créer est en lecture seule.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'est pas autorisé à créer le répertoire.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory">
      <summary>Obtient ou définit le répertoire actif.</summary>
      <returns>Répertoire actif pour les opérations d'E/S de fichier.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le chemin d'accès n'est pas valide.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas les autorisations nécessaires.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)">
      <summary>Supprime un répertoire.</summary>
      <param name="directory">Répertoire à supprimer.</param>
      <param name="onDirectoryNotEmpty">Spécifie l'opération à effectuer lorsqu'un répertoire à supprimer contient des fichiers ou des répertoires. La valeur par défaut est <see langword="DeleteDirectoryOption.DeleteAllContents" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin d'accès est une chaîne de longueur nulle, est incorrect, se compose uniquement d'espace blanc ou contient des caractères incorrects (y compris des caractères génériques). Le chemin d’accès est un chemin d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le répertoire n'existe pas ou est un fichier.</exception>
      <exception cref="T:System.IO.IOException">Un fichier du répertoire ou du sous-répertoire est en cours d'utilisation.</exception>
      <exception cref="T:System.NotSupportedException">Le nom de répertoire contient un signe deux points (:).</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations requises.</exception>
      <exception cref="T:System.OperationCanceledException">L'utilisateur annule l'opération ou le répertoire ne peut pas être supprimé.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary>Supprime un répertoire.</summary>
      <param name="directory">Répertoire à supprimer.</param>
      <param name="showUI">Spécifie s'il faut effectuer un suivi visuel de l'avancement de l'opération. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="recycle">Spécifie si le fichier supprimé doit être ou non envoyé à la Corbeille. La valeur par défaut est <see langword="RecycleOption.DeletePermanently" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin d'accès est une chaîne de longueur nulle, est incorrect, se compose uniquement d'espace blanc ou contient des caractères incorrects (y compris des caractères génériques). Le chemin d’accès est un chemin d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le répertoire n'existe pas ou est un fichier.</exception>
      <exception cref="T:System.IO.IOException">Un fichier du répertoire ou du sous-répertoire est en cours d'utilisation.</exception>
      <exception cref="T:System.NotSupportedException">Le nom de répertoire contient un signe deux points (:).</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations requises.</exception>
      <exception cref="T:System.OperationCanceledException">L'utilisateur annule l'opération ou le répertoire ne peut pas être supprimé.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Supprime un répertoire.</summary>
      <param name="directory">Répertoire à supprimer.</param>
      <param name="showUI">Spécifie s'il faut effectuer un suivi visuel de l'avancement de l'opération. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="recycle">Spécifie si le fichier supprimé doit être ou non envoyé à la Corbeille. La valeur par défaut est <see langword="RecycleOption.DeletePermanently" />.</param>
      <param name="onUserCancel">Spécifie si une exception doit être levée quand l’utilisateur clique sur Annuler.</param>
      <exception cref="T:System.ArgumentException">Le chemin d'accès est une chaîne de longueur nulle, est incorrect, se compose uniquement d'espace blanc ou contient des caractères incorrects (y compris des caractères génériques). Le chemin d’accès est un chemin d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le répertoire n'existe pas ou est un fichier.</exception>
      <exception cref="T:System.IO.IOException">Un fichier du répertoire ou du sous-répertoire est en cours d'utilisation.</exception>
      <exception cref="T:System.NotSupportedException">Le nom de répertoire contient un signe deux points (:).</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations requises.</exception>
      <exception cref="T:System.OperationCanceledException">L'utilisateur annule l'opération ou le répertoire ne peut pas être supprimé.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String)">
      <summary>Supprime un fichier.</summary>
      <param name="file">Nom et chemin d'accès du fichier à supprimer.</param>
      <exception cref="T:System.ArgumentException">Le chemin d’accès n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il contient une barre oblique finale alors qu’un fichier doit être spécifié ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est en cours d'utilisation.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier n'existe pas.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas l'autorisation nécessaire pour supprimer le fichier ou le fichier est en lecture seule.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary>Supprime un fichier.</summary>
      <param name="file">Nom et chemin d'accès du fichier à supprimer.</param>
      <param name="showUI">Indique si un suivi visuel de l'avancement de l'opération est nécessaire. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="recycle">Spécifie si le fichier supprimé doit être envoyé à la Corbeille. La valeur par défaut est <see langword="RecycleOption.DeletePermanently" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin d’accès n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il contient une barre oblique finale alors qu’un fichier doit être spécifié ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est en cours d'utilisation.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier n'existe pas.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas l'autorisation nécessaire pour supprimer le fichier ou le fichier est en lecture seule.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Supprime un fichier.</summary>
      <param name="file">Nom et chemin d'accès du fichier à supprimer.</param>
      <param name="showUI">Indique si un suivi visuel de l'avancement de l'opération est nécessaire. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="recycle">Spécifie si le fichier supprimé doit être envoyé à la Corbeille. La valeur par défaut est <see langword="RecycleOption.DeletePermanently" />.</param>
      <param name="onUserCancel">Spécifie si oui ou non une exception est levée lorsque l'utilisateur annule l'opération. La valeur par défaut est <see langword="UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin d’accès n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il contient une barre oblique finale alors qu’un fichier doit être spécifié ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est en cours d'utilisation.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier n'existe pas.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas l'autorisation nécessaire pour supprimer le fichier ou le fichier est en lecture seule.</exception>
      <exception cref="T:System.OperationCanceledException">L'utilisateur a annulé l'opération et <paramref name="onUserCancel" /> a la valeur <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists(System.String)">
      <summary>Retourne la valeur <see langword="True" /> si le répertoire spécifié existe.</summary>
      <param name="directory">Chemin d'accès du répertoire.</param>
      <returns>
        <see langword="True" /> si le répertoire existe ; sinon <see langword="False" />. Cette méthode retourne également <see langword="False" /> si le paramètre représente le nom et le chemin d’accès d’un fichier, et non un répertoire.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.FileSystem.Drives">
      <summary>Retourne une collection en lecture seule de tous les noms de lecteurs disponibles.</summary>
      <returns>Collection en lecture seule de tous les lecteurs disponibles en tant qu'objets <see cref="T:System.IO.DriveInfo" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.FileExists(System.String)">
      <summary>Retourne la valeur <see langword="True" /> si le fichier spécifié existe.</summary>
      <param name="file">Nom et chemin d'accès du fichier.</param>
      <returns>Retourne <see langword="True" /> si le fichier existe ; sinon, cette méthode retourne <see langword="False" />. Cette méthode retourne également <see langword="False" /> si le paramètre représente le chemin d’accès d’un répertoire au lieu d’un fichier.</returns>
      <exception cref="T:System.ArgumentException">Le nom du fichier se termine par une barre oblique inverse (\).</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)">
      <summary>Retourne une collection en lecture seule de chaînes qui représentent le nom des fichiers contenant le texte spécifié.</summary>
      <param name="directory">Répertoire dans lequel effectuer la recherche.</param>
      <param name="containsText">Texte de la recherche.</param>
      <param name="ignoreCase">
        <see langword="True" /> si la recherche doit respecter la casse ; sinon, <see langword="False" />. La valeur par défaut est <see langword="True" />.</param>
      <param name="searchType">Inclure, ou non, les sous-dossiers. La valeur par défaut est <see langword="SearchOption.SearchTopLevelOnly" />.</param>
      <returns>Collection en lecture seule des noms des fichiers contenant le texte spécifié.</returns>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur nulle, il ne contient que des espaces blancs, il contient des caractères non valides ou il s’agit d’un chemin d’appareil (qui commence par <c>\.&lt;/code&gt;).</c></exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le dossier spécifié n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le répertoire spécifié pointe vers un fichier existant.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Le chemin d'accès du répertoire spécifié contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas les autorisations nécessaires.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>Retourne une collection en lecture seule de chaînes qui représentent le nom des fichiers contenant le texte spécifié.</summary>
      <param name="directory">Répertoire dans lequel effectuer la recherche.</param>
      <param name="containsText">Texte de la recherche.</param>
      <param name="ignoreCase">
        <see langword="True" /> si la recherche doit respecter la casse ; sinon, <see langword="False" />. La valeur par défaut est <see langword="True" />.</param>
      <param name="searchType">Inclure, ou non, les sous-dossiers. La valeur par défaut est <see langword="SearchOption.SearchTopLevelOnly" />.</param>
      <param name="fileWildcards">Modèle auquel correspondre.</param>
      <returns>Collection en lecture seule des noms des fichiers contenant le texte spécifié.</returns>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur nulle, il ne contient que des espaces blancs, il contient des caractères non valides ou il s’agit d’un chemin d’appareil (qui commence par <c>\.&lt;/code&gt;).</c></exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le dossier spécifié n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le répertoire spécifié pointe vers un fichier existant.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Le chemin d'accès du répertoire spécifié contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas les autorisations nécessaires.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String)">
      <summary>Retourne une collection de chaînes représentant les chemins d'accès de sous-répertoires présents dans un répertoire.</summary>
      <param name="directory">Nom et chemin d'accès du répertoire.</param>
      <returns>Collection en lecture seule des noms de chemin d'accès des sous-répertoires dans le répertoire spécifié.</returns>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le dossier spécifié n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le répertoire spécifié pointe vers un fichier existant.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas les autorisations nécessaires.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>Retourne une collection de chaînes représentant les chemins d'accès de sous-répertoires présents dans un répertoire.</summary>
      <param name="directory">Nom et chemin d'accès du répertoire.</param>
      <param name="searchType">Inclure, ou non, les sous-dossiers. La valeur par défaut est <see langword="SearchOption.SearchTopLevelOnly" />.</param>
      <param name="wildcards">Modèle permettant d'établir une correspondance entre les noms.</param>
      <returns>Collection en lecture seule des noms de chemin d'accès des sous-répertoires dans le répertoire spécifié.</returns>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">Un ou plusieurs des caractères génériques spécifiés ont une valeur <see langword="Nothing" />, une chaîne vide ou contiennent uniquement des espaces.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le dossier spécifié n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le répertoire spécifié pointe vers un fichier existant.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas les autorisations nécessaires.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)">
      <summary>Retourne un objet <see cref="T:System.IO.DirectoryInfo" /> pour le fichier spécifié.</summary>
      <param name="directory">
        <see langword="String" />. Chemin d'accès du répertoire.</param>
      <returns>Objet <see cref="T:System.IO.DirectoryInfo" /> pour le chemin spécifié.</returns>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Le chemin d'accès du répertoire contient un signe deux-points (:) ou n'a pas un format valide.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo(System.String)">
      <summary>Retourne un objet <see cref="T:System.IO.DriveInfo" /> pour le fichier spécifié.</summary>
      <param name="drive">Lecteur à examiner.</param>
      <returns>Objet <see cref="T:System.IO.DriveInfo" /> pour le lecteur spécifié.</returns>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="drive" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)">
      <summary>Retourne un objet <see cref="T:System.IO.FileInfo" /> pour le fichier spécifié.</summary>
      <param name="file">Nom et chemin d'accès du fichier.</param>
      <returns>Objet <see cref="T:System.IO.FileInfo" /> pour le fichier spécifié</returns>
      <exception cref="T:System.ArgumentException">Le chemin d'accès est mal formé. Par exemple, il contient des caractères non valides ou se compose uniquement d'espace blanc. Le nom du fichier contient une marque de barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.NotSupportedException">Le chemin d'accès contient le signe deux-points au milieu de la chaîne.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès est trop long.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas l'accès ACL (liste de contrôle d'accès) au fichier.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String)">
      <summary>Retourne une collection en lecture seule de chaînes qui représentent le nom des fichiers d'un répertoire.</summary>
      <param name="directory">Répertoire dans lequel effectuer la recherche.</param>
      <returns>Collection en lecture seule de noms de fichiers issus du répertoire spécifié.</returns>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> est <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le dossier à rechercher n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="directory" /> pointe vers un fichier existant.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas les autorisations nécessaires.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>Retourne une collection en lecture seule de chaînes qui représentent le nom des fichiers d'un répertoire.</summary>
      <param name="directory">Répertoire dans lequel effectuer la recherche.</param>
      <param name="searchType">Inclure, ou non, les sous-dossiers. La valeur par défaut est <see langword="SearchOption.SearchTopLevelOnly" />.</param>
      <param name="wildcards">Modèle auquel correspondre.</param>
      <returns>Collection en lecture seule de noms de fichiers issus du répertoire spécifié.</returns>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> est <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le dossier à rechercher n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="directory" /> pointe vers un fichier existant.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas les autorisations nécessaires.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetName(System.String)">
      <summary>Analyse le nom du fichier à partir du chemin d'accès fourni.</summary>
      <param name="path">Obligatoire. Chemin d'accès à analyser. <see langword="String" />.</param>
      <returns>Nom de fichier à partir du chemin d'accès spécifié.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath(System.String)">
      <summary>Retourne le chemin d'accès parent du chemin d'accès fourni.</summary>
      <param name="path">Chemin d'accès à examiner.</param>
      <returns>Chemin d'accès parent du chemin d'accès fourni.</returns>
      <exception cref="T:System.ArgumentException">Le chemin d'accès n'a pas de chemin parent car il s'agit d'un chemin d'accès racine.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> est <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName">
      <summary>Crée un fichier temporaire de zéro octet nommé de manière unique sur le disque et retourne le chemin d'accès complet de ce fichier.</summary>
      <returns>
        <see langword="String" /> contenant le chemin d'accès complet du fichier temporaire.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String)">
      <summary>Déplace un répertoire d'un emplacement à l'autre.</summary>
      <param name="sourceDirectoryName">Chemin d'accès au répertoire à déplacer.</param>
      <param name="destinationDirectoryName">Chemin d'accès au répertoire dans lequel le répertoire source est déplacé.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> ou <paramref name="destinationDirectoryName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le répertoire n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">La source est un répertoire racine ou le chemin source et le chemin cible sont identiques.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.InvalidOperationException">L'opération est cyclique.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas l'autorisation requise.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>Déplace un répertoire d'un emplacement à l'autre.</summary>
      <param name="sourceDirectoryName">Chemin d'accès au répertoire à déplacer.</param>
      <param name="destinationDirectoryName">Chemin d'accès au répertoire dans lequel le répertoire source est déplacé.</param>
      <param name="showUI">Spécifie s'il faut effectuer un suivi visuel de l'avancement de l'opération. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> ou <paramref name="destinationDirectoryName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le répertoire n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le répertoire cible existe déjà et <paramref name="overwrite" /> est défini à <see langword="False" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.InvalidOperationException">L'opération est cyclique.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas l'autorisation requise.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Déplace un répertoire d'un emplacement à l'autre.</summary>
      <param name="sourceDirectoryName">Chemin d'accès au répertoire à déplacer.</param>
      <param name="destinationDirectoryName">Chemin d'accès au répertoire dans lequel le répertoire source est déplacé.</param>
      <param name="showUI">Spécifie s'il faut effectuer un suivi visuel de l'avancement de l'opération. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="onUserCancel">Spécifie si oui ou non une exception est levée lorsque l'utilisateur annule l'opération. La valeur par défaut est <see langword="UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> ou <paramref name="destinationDirectoryName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le répertoire n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="onUserCancel" /> a la valeur <see langword="ThrowException" /> et un sous-répertoire du fichier ne peut pas être copié.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="onUserCancel" /> a la valeur <see langword="ThrowException" /> et l'utilisateur annule l'opération ou l'opération ne peut pas être effectuée.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.InvalidOperationException">L'opération est cyclique.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas l'autorisation requise.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,System.Boolean)">
      <summary>Déplace un répertoire d'un emplacement à l'autre.</summary>
      <param name="sourceDirectoryName">Chemin d'accès au répertoire à déplacer.</param>
      <param name="destinationDirectoryName">Chemin d'accès au répertoire dans lequel le répertoire source est déplacé.</param>
      <param name="overwrite">
        <see langword="True" /> si les répertoires existants doivent être remplacés ; sinon, <see langword="False" />. La valeur par défaut est <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> ou <paramref name="destinationDirectoryName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le répertoire n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le répertoire cible existe déjà et <paramref name="overwrite" /> est défini à <see langword="False" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.InvalidOperationException">L'opération est cyclique.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas l'autorisation requise.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String)">
      <summary>Déplace un fichier vers un nouvel emplacement.</summary>
      <param name="sourceFileName">Chemin d'accès au fichier à déplacer.</param>
      <param name="destinationFileName">Chemin d'accès au répertoire dans lequel le fichier doit être déplacé.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier source n'est pas valide ou n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>Déplace un fichier vers un nouvel emplacement.</summary>
      <param name="sourceFileName">Chemin d'accès au fichier à déplacer.</param>
      <param name="destinationFileName">Chemin d'accès au répertoire dans lequel le fichier doit être déplacé.</param>
      <param name="showUI">Spécifie s'il faut effectuer un suivi visuel de l'avancement de l'opération. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier source n'est pas valide ou n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Déplace un fichier vers un nouvel emplacement.</summary>
      <param name="sourceFileName">Chemin d'accès au fichier à déplacer.</param>
      <param name="destinationFileName">Chemin d'accès au répertoire dans lequel le fichier doit être déplacé.</param>
      <param name="showUI">Spécifie s'il faut effectuer un suivi visuel de l'avancement de l'opération. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="onUserCancel">Spécifie si oui ou non une exception est levée lorsque l'utilisateur annule l'opération. La valeur par défaut est <see langword="UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier source n'est pas valide ou n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="onUserCancel" /> a la valeur <see langword="ThrowException" /> et l'utilisateur a annulé l'opération ou une erreur d'E/S non spécifiée s'est produit.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,System.Boolean)">
      <summary>Déplace un fichier vers un nouvel emplacement.</summary>
      <param name="sourceFileName">Chemin d'accès au fichier à déplacer.</param>
      <param name="destinationFileName">Chemin d'accès au répertoire dans lequel le fichier doit être déplacé.</param>
      <param name="overwrite">
        <see langword="True" /> pour remplacer les fichiers existants ; sinon, <see langword="False" />. La valeur par défaut est <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier source n'est pas valide ou n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)">
      <summary>La méthode <see langword="OpenTextFieldParser" /> vous permet de créer un objet <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> et d’analyser ainsi efficacement et facilement les fichiers texte structurés, comme les journaux. L'objet <see langword="TextFieldParser" /> peut être utilisé pour lire des fichiers délimités et à largeur fixe.</summary>
      <param name="file">Fichier à ouvrir avec <see langword="TextFieldParser" />.</param>
      <returns>
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> pour lire le fichier spécifié.</returns>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> est <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">Une ligne ne peut pas être analysée avec le format spécifié. Le message d’exception spécifie la ligne qui provoque l’exception, tandis que la propriété <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> est assignée au texte contenu dans la ligne.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.Int32[])">
      <summary>La méthode <see langword="OpenTextFieldParser" /> vous permet de créer un objet <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> et d'analyser ainsi efficacement et facilement les fichiers texte structurés, comme les journaux. L'objet <see langword="TextFieldParser" /> peut être utilisé pour lire des fichiers délimités et à largeur fixe.</summary>
      <param name="file">Fichier à ouvrir avec <see langword="TextFieldParser" />.</param>
      <param name="fieldWidths">Largeur des champs.</param>
      <returns>
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> pour lire le fichier spécifié.</returns>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> est <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">Une ligne ne peut pas être analysée avec le format spécifié. Le message d’exception spécifie la ligne qui provoque l’exception, tandis que la propriété <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> est assignée au texte contenu dans la ligne.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.String[])">
      <summary>La méthode <see langword="OpenTextFieldParser" /> vous permet de créer un objet <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> et d'analyser ainsi efficacement et facilement les fichiers texte structurés, comme les journaux. L'objet <see langword="TextFieldParser" /> peut être utilisé pour lire des fichiers délimités et à largeur fixe.</summary>
      <param name="file">Fichier à ouvrir avec <see langword="TextFieldParser" />.</param>
      <param name="delimiters">Séparateurs de champs.</param>
      <returns>
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> pour lire le fichier spécifié.</returns>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> est <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">Une ligne ne peut pas être analysée avec le format spécifié. Le message d’exception spécifie la ligne qui provoque l’exception, tandis que la propriété <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> est assignée au texte contenu dans la ligne.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String)">
      <summary>Ouvre un objet <see cref="T:System.IO.StreamReader" /> à lire à partir d'un fichier.</summary>
      <param name="file">Fichier à lire.</param>
      <returns>Objet <see cref="T:System.IO.StreamReader" /> à lire à partir du fichier</returns>
      <exception cref="T:System.ArgumentException">Le nom de fichier se termine par une barre oblique inverse (\).</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier spécifié est introuvable.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour lire le fichier.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String,System.Text.Encoding)">
      <summary>Ouvre un objet <see cref="T:System.IO.StreamReader" /> à lire à partir d'un fichier.</summary>
      <param name="file">Fichier à lire.</param>
      <param name="encoding">Encodage à utiliser pour le contenu du fichier. La valeur par défaut est ASCII.</param>
      <returns>Objet <see cref="T:System.IO.StreamReader" /> à lire à partir du fichier</returns>
      <exception cref="T:System.ArgumentException">Le nom de fichier se termine par une barre oblique inverse (\).</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier spécifié est introuvable.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour lire le fichier.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean)">
      <summary>Ouvre un objet <see cref="T:System.IO.StreamWriter" /> à écrire dans le fichier spécifié.</summary>
      <param name="file">Fichier dans lequel écrire.</param>
      <param name="append">
        <see langword="True" /> pour ajouter au contenu du fichier ; <see langword="False" /> pour remplacer le contenu du fichier. La valeur par défaut est <see langword="False" />.</param>
      <returns>Objet <see cref="T:System.IO.StreamWriter" /> à écrire dans le fichier spécifié.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.ArgumentException">Le nom de fichier se termine par une barre oblique finale.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)">
      <summary>Ouvre un <see cref="T:System.IO.StreamWriter" /> pour écrire dans le fichier spécifié.</summary>
      <param name="file">Fichier dans lequel écrire.</param>
      <param name="append">
        <see langword="True" /> pour ajouter au contenu du fichier  ; <see langword="False" /> pour remplacer le contenu du fichier. La valeur par défaut est <see langword="False" />.</param>
      <param name="encoding">Encodage à utiliser lors de l'écriture dans le fichier. La valeur par défaut est ASCII.</param>
      <returns>Objet <see cref="T:System.IO.StreamWriter" /> à écrire dans le fichier spécifié.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.ArgumentException">Le nom de fichier se termine par une barre oblique finale.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes(System.String)">
      <summary>Retourne le contenu d'un fichier sous la forme d'un tableau d'octets.</summary>
      <param name="file">Fichier à lire.</param>
      <returns>Tableau <see langword="Byte" /> contenant le contenu du fichier.</returns>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> est <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.OutOfMemoryException">Il n'y a pas assez de mémoire pour écrire la chaîne dans la mémoire tampon.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String)">
      <summary>Retourne le contenu d'un fichier texte sous forme de <see langword="String" />.</summary>
      <param name="file">Nom et chemin d'accès du fichier à lire.</param>
      <returns>
        <see langword="String" /> contenant le contenu du fichier.</returns>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> est <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.OutOfMemoryException">Il n'y a pas assez de mémoire pour écrire la chaîne dans la mémoire tampon.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String,System.Text.Encoding)">
      <summary>Retourne le contenu d'un fichier texte sous forme de <see langword="String" />.</summary>
      <param name="file">Nom et chemin d'accès du fichier à lire.</param>
      <param name="encoding">Encodage de caractères à utiliser pour la lecture du fichier. La valeur par défaut est UTF-8.</param>
      <returns>
        <see langword="String" /> contenant le contenu du fichier.</returns>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> est <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.OutOfMemoryException">Il n'y a pas assez de mémoire pour écrire la chaîne dans la mémoire tampon.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory(System.String,System.String)">
      <summary>Renomme un répertoire.</summary>
      <param name="directory">Chemin d'accès et nom du répertoire à renommer.</param>
      <param name="newName">Nouveau nom du répertoire.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="newName" /> contient des informations de chemin d’accès.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> est <see langword="Nothing" />.  
ou 
 <paramref name="newName" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le répertoire n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Un fichier ou répertoire existe avec le nom spécifié dans <paramref name="newName" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas l'autorisation requise.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.RenameFile(System.String,System.String)">
      <summary>Renomme un fichier.</summary>
      <param name="file">Fichier à renommer.</param>
      <param name="newName">Nouveau nom du fichier.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="newName" /> contient des informations relatives au chemin d’accès ou se termine par une barre oblique inverse (\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> est <see langword="Nothing" />.  
ou 
 <paramref name="newName" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le répertoire n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Un fichier ou répertoire existe avec le nom spécifié dans <paramref name="newName" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas l'autorisation requise.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes(System.String,System.Byte[],System.Boolean)">
      <summary>Écrit des données dans un fichier binaire.</summary>
      <param name="file">Chemin d'accès et nom du fichier dans lequel écrire.</param>
      <param name="data">Données à écrire dans le fichier.</param>
      <param name="append">
        <see langword="True" /> pour ajouter au contenu du fichier  ; <see langword="False" /> pour remplacer le contenu du fichier. La valeur par défaut est <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> est <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.OutOfMemoryException">Il n'y a pas assez de mémoire pour écrire la chaîne dans la mémoire tampon.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean)">
      <summary>Écrit du texte dans un fichier.</summary>
      <param name="file">Fichier dans lequel écrire.</param>
      <param name="text">Texte à écrire dans le fichier.</param>
      <param name="append">
        <see langword="True" /> pour ajouter au contenu du fichier ; <see langword="False" /> pour remplacer le contenu du fichier.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> est <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.OutOfMemoryException">Il n'y a pas assez de mémoire pour écrire la chaîne dans la mémoire tampon.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)">
      <summary>Écrit du texte dans un fichier.</summary>
      <param name="file">Fichier dans lequel écrire.</param>
      <param name="text">Texte à écrire dans le fichier.</param>
      <param name="append">
        <see langword="True" /> pour ajouter au contenu du fichier ; <see langword="False" /> pour remplacer le contenu du fichier.</param>
      <param name="encoding">Encodage à utiliser lors de l'écriture dans le fichier.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> est <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.OutOfMemoryException">Il n'y a pas assez de mémoire pour écrire la chaîne dans la mémoire tampon.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.MalformedLineException">
      <summary>Exception qui est levée lorsque la méthode <see cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields" /> ne peut pas analyser de ligne à l'aide du format spécifié.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> avec des données sérialisées.</summary>
      <param name="info">Objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> qui contient les données d’objet sérialisées relatives à l’exception levée.</param>
      <param name="context">Structure <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui contient des informations contextuelles sur la source ou la destination.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> avec un message d'erreur spécifié.</summary>
      <param name="message">Message qui décrit l'erreur.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">
        <see cref="T:System.String" /> décrivant l'erreur.</param>
      <param name="innerException">Objet <see cref="T:System.Exception" /> qui constitue la cause de l'exception actuelle. Si le paramètre <see cref="P:System.Exception.InnerException" /> n'est pas une référence null (<see langword="Nothing" /> en Visual Basic), l'exception en cours est levée dans un bloc catch qui gère l'exception interne.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Int64)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> avec un message d'erreur spécifié et un numéro de ligne.</summary>
      <param name="message">Message pour l'exception.</param>
      <param name="lineNumber">Numéro de la ligne incorrecte.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Int64,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message pour l'exception.</param>
      <param name="lineNumber">Numéro de la ligne incorrecte.</param>
      <param name="innerException">
        <see cref="T:System.Exception" /> qui constitue la cause de l'exception actuelle. Si le paramètre <see cref="P:System.Exception.InnerException" /> n'est pas une référence Null (<see langword="Nothing" /> en Visual Basic), l'exception en cours est levée dans un bloc catch gérant l'exception interne.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Définit l'objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> à partir d'informations relatives à l'exception.</summary>
      <param name="info">Objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> qui contient les données d’objet sérialisées relatives à l’exception levée.</param>
      <param name="context">Structure <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui contient des informations contextuelles sur la source ou la destination.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.MalformedLineException.LineNumber">
      <summary>Obtient le numéro de la ligne incorrecte.</summary>
      <returns>Numéro de la ligne incorrecte.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.ToString">
      <summary>Crée et retourne une chaîne représentant l'exception actuelle.</summary>
      <returns>Représentation sous forme de chaîne de l'exception actuelle.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.RecycleOption">
      <summary>Spécifie si un fichier doit être supprimé définitivement ou être placé dans la Corbeille.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.RecycleOption.DeletePermanently">
      <summary>Supprime définitivement le fichier ou répertoire. Par défaut.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.RecycleOption.SendToRecycleBin">
      <summary>Envoie le fichier ou répertoire à la Corbeille.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.SearchOption">
      <summary>Spécifie s'il faut effectuer la recherche dans tous les répertoires ou seulement dans les répertoires de niveau supérieur.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.SearchOption.SearchAllSubDirectories">
      <summary>Effectue la recherche dans le répertoire spécifié et tous les sous-répertoires qu'il contient. Par défaut.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.SearchOption.SearchTopLevelOnly">
      <summary>Effectue une recherche uniquement dans le répertoire spécifié, en excluant les sous-répertoires.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.SpecialDirectories">
      <summary>Fournit des propriétés utilisées pour accéder aux répertoires communément référencés.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.SpecialDirectories.#ctor">
      <summary>Retourne une instance de la classe <see cref="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories" />.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.AllUsersApplicationData">
      <summary>Obtient un nom de chemin d'accès pointant sur le répertoire des données d'application pour tous les utilisateurs.</summary>
      <returns>Chemin d'accès au répertoire de données d'application pour tous les utilisateurs.</returns>
      <exception cref="T:System.Security.Permissions.EnvironmentPermission">Contrôle l'accès aux variables du système et de l'environnement utilisateur. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le chemin d'accès est vide, généralement parce que le système d'exploitation ne prend pas en charge le répertoire.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.CurrentUserApplicationData">
      <summary>Obtient un nom de chemin d'accès pointant sur le répertoire des données d'application pour l'utilisateur en cours.</summary>
      <returns>Chemin d'accès au répertoire de données d'application pour l'utilisateur en cours.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le chemin d'accès est vide, généralement parce que le système d'exploitation ne prend pas en charge le répertoire.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Desktop">
      <summary>Obtient un nom de chemin d'accès pointant sur le répertoire Desktop.</summary>
      <returns>Chemin d'accès au répertoire Bureau.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le chemin d'accès est vide, généralement parce que le système d'exploitation ne prend pas en charge le répertoire.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyDocuments">
      <summary>Obtient un nom de chemin d'accès pointant vers le répertoire Mes documents.</summary>
      <returns>Chemin d'accès au répertoire Mes documents.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le chemin d'accès est vide, généralement parce que le système d'exploitation ne prend pas en charge le répertoire.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyMusic">
      <summary>Obtient un nom de chemin d'accès pointant sur le répertoire My Music.</summary>
      <returns>Chemin d'accès au répertoire Ma musique.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le chemin d'accès est vide, généralement parce que le système d'exploitation ne prend pas en charge le répertoire.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyPictures">
      <summary>Obtient un nom de chemin d'accès pointant sur le répertoire My Pictures.</summary>
      <returns>Chemin d'accès au répertoire Mes images.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le chemin d'accès est vide, généralement parce que le système d'exploitation ne prend pas en charge le répertoire.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.ProgramFiles">
      <summary>Obtient un chemin d’accès pointant sur le répertoire Program Files.</summary>
      <returns>Chemin d’accès au répertoire Program Files .</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le chemin d'accès est vide, généralement parce que le système d'exploitation ne prend pas en charge le répertoire.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Programs">
      <summary>Obtient un nom de chemin d'accès pointant sur le répertoire Programs.</summary>
      <returns>Chemin d'accès au répertoire Programmes.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le chemin d'accès est vide, généralement parce que le système d'exploitation ne prend pas en charge le répertoire.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Temp">
      <summary>Obtient un nom de chemin d'accès pointant sur le répertoire Temp.</summary>
      <returns>Chemin d'accès au répertoire Temp.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le chemin d'accès est vide, généralement parce que le système d'exploitation ne prend pas en charge le répertoire.</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.TextFieldParser">
      <summary>Fournit des méthodes et des propriétés pour analyser des fichiers texte structurés.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream)">
      <summary>Initialise une nouvelle instance de la classe <see langword="TextFieldParser" />.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" />. Flux à analyser.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> a la valeur <see langword="Nothing" />.</exception>
      <exception cref="T:System.ArgumentException">Il n'est pas possible de lire depuis <paramref name="stream" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding)">
      <summary>Initialise une nouvelle instance de la classe <see langword="TextFieldParser" />.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" />. Flux à analyser.</param>
      <param name="defaultEncoding">
        <see cref="T:System.Text.Encoding" />. Encodage de caractères à utiliser si l'encodage n'est pas déterminé à partir du fichier. La valeur par défaut est <see cref="P:System.Text.Encoding.UTF8" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> ou <paramref name="defaultEncoding" /> est <see langword="Nothing" />.</exception>
      <exception cref="T:System.ArgumentException">Il n'est pas possible de lire depuis <paramref name="stream" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see langword="TextFieldParser" />.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" />. Flux à analyser.</param>
      <param name="defaultEncoding">
        <see cref="T:System.Text.Encoding" />. Encodage de caractères à utiliser si l'encodage n'est pas déterminé à partir du fichier. La valeur par défaut est <see cref="P:System.Text.Encoding.UTF8" />.</param>
      <param name="detectEncoding">
        <see langword="Boolean" />. Indique s'il faut rechercher les marques d'ordre des octets au début du fichier. La valeur par défaut est <see langword="True" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> ou <paramref name="defaultEncoding" /> est <see langword="Nothing" />.</exception>
      <exception cref="T:System.ArgumentException">Il n'est pas possible de lire depuis <paramref name="stream" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see langword="TextFieldParser" />.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" />. Flux à analyser.</param>
      <param name="defaultEncoding">
        <see cref="T:System.Text.Encoding" />. Encodage de caractères à utiliser si l'encodage n'est pas déterminé à partir du fichier. La valeur par défaut est <see cref="P:System.Text.Encoding.UTF8" />.</param>
      <param name="detectEncoding">
        <see langword="Boolean" />. Indique s'il faut rechercher les marques d'ordre des octets au début du fichier. La valeur par défaut est <see langword="True" />.</param>
      <param name="leaveOpen">
        <see langword="Boolean" />. Indique si <paramref name="stream" /> doit être laissé ouvert lorsque l'objet <see langword="TextFieldParser" /> est fermé. La valeur par défaut est <see langword="False" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> ou <paramref name="defaultEncoding" /> est <see langword="Nothing" />.</exception>
      <exception cref="T:System.ArgumentException">Il n'est pas possible de lire depuis <paramref name="stream" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.TextReader)">
      <summary>Initialise une nouvelle instance de la classe <see langword="TextFieldParser" />.</summary>
      <param name="reader">
        <see cref="T:System.IO.TextReader" />. Flux <see cref="T:System.IO.TextReader" /> à analyser.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> a la valeur <see langword="Nothing" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see langword="TextFieldParser" />.</summary>
      <param name="path">
        <see langword="String" />. Chemin d'accès complet au fichier à analyser.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> est une chaîne vide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding)">
      <summary>Initialise une nouvelle instance de la classe <see langword="TextFieldParser" />.</summary>
      <param name="path">
        <see langword="String" />. Chemin d'accès complet au fichier à analyser.</param>
      <param name="defaultEncoding">
        <see cref="T:System.Text.Encoding" />. Encodage de caractères à utiliser si l'encodage n'est pas déterminé à partir du fichier. La valeur par défaut est <see cref="P:System.Text.Encoding.UTF8" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> est une chaîne vide ou <paramref name="defaultEncoding" /> est <see langword="Nothing" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see langword="TextFieldParser" />.</summary>
      <param name="path">
        <see langword="String" />. Chemin d'accès complet au fichier à analyser.</param>
      <param name="defaultEncoding">
        <see cref="T:System.Text.Encoding" />. Encodage de caractères à utiliser si l'encodage n'est pas déterminé à partir du fichier. La valeur par défaut est <see cref="P:System.Text.Encoding.UTF8" />.</param>
      <param name="detectEncoding">
        <see langword="Boolean" />. Indique s'il faut rechercher les marques d'ordre des octets au début du fichier. La valeur par défaut est <see langword="True" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> est une chaîne vide ou <paramref name="defaultEncoding" /> est <see langword="Nothing" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Close">
      <summary>Ferme l'objet <see langword="TextFieldParser" /> en cours.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens">
      <summary>Définit des jetons de commentaire. Un jeton de commentaire est une chaîne qui, lorsqu'elle est placée au début d'une ligne, indique que la ligne est un commentaire et doit être ignorée par l'analyseur.</summary>
      <returns>Tableau de chaînes qui contient tous les jetons de commentaires pour l'objet <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />.</returns>
      <exception cref="T:System.ArgumentException">Un jeton de commentaire contient un espace blanc.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters">
      <summary>Définit les séparateurs pour un fichier texte.</summary>
      <returns>Tableau de chaînes qui contient tous séparateurs de champs pour l'objet <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />.</returns>
      <exception cref="T:System.ArgumentException">Une valeur de séparateur est un caractère de saut de ligne, une chaîne vide ou <see langword="Nothing" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose(System.Boolean)">
      <summary>Libère les ressources utilisées par l’objet <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />.</summary>
      <param name="disposing">Propriété booléenne. <see langword="True" /> libère les ressources managées et non managées ; <see langword="False" /> libère uniquement les ressources non managées.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData">
      <summary>Retourne <see langword="True" /> s'il n'y a aucune ligne non vide, sans commentaire, entre la position actuelle du curseur et la fin du fichier.</summary>
      <returns>
        <see langword="True" /> s'il n'y a plus de données à lire ; sinon, <see langword="False" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine">
      <summary>Retourne la ligne qui a provoqué l'exception <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> la plus récente.</summary>
      <returns>Ligne qui a provoqué l'exception <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> la plus récente.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber">
      <summary>Retourne le numéro de la ligne qui a provoqué l'exception <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> la plus récente.</summary>
      <returns>Numéro de la ligne qui a provoqué l'exception <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> la plus récente.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths">
      <summary>Désigne la largeur de chaque colonne du fichier texte en cours d'analyse.</summary>
      <returns>Tableau d'entiers qui contient la largeur de chaque colonne dans le fichier texte en cours d'analyse.</returns>
      <exception cref="T:System.ArgumentException">Une valeur de largeur dans un emplacement autre que la dernière entrée du tableau est inférieure ou égale à zéro.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Finalize">
      <summary>Permet à l'objet <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> de tenter de libérer des ressources et d'effectuer d'autres opérations de nettoyage avant d'être récupéré par l'opération garbage collection.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes">
      <summary>Indique si les champs sont placés entre guillemets lorsqu'un fichier délimité est analysé.</summary>
      <returns>
        <see langword="True" /> si les champs sont placés entre guillemets ; sinon, <see langword="False" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber">
      <summary>Retourne le nombre de lignes en cours, ou retourne -1 si aucun caractère n'est disponible dans le flux.</summary>
      <returns>Numéro de ligne active.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)">
      <summary>Lit le nombre spécifié de caractères sans avancer le curseur.</summary>
      <param name="numberOfChars">
        <see langword="Int32" />. Nombre de caractères à lire. Obligatoire.</param>
      <returns>Chaîne qui contient le nombre spécifié de caractères à lire.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="numberOfChars" /> est inférieur à 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
      <summary>Lit tous les champs sur la ligne active, les retourne sous la forme d'un tableau de chaînes et avance le curseur vers la ligne suivante contenant des données.</summary>
      <returns>Tableau de chaînes qui contient les valeurs de champs pour la ligne active.</returns>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">Un champ ne peut pas être analysé à l'aide du format spécifié.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine">
      <summary>Retourne la ligne active en tant que chaîne et avance le curseur vers la ligne suivante.</summary>
      <returns>Ligne active du fichier ou du flux.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd">
      <summary>Lit le reste du fichier texte et le retourne en tant que chaîne.</summary>
      <returns>Texte restant du fichier ou du flux.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])">
      <summary>Affecte les valeurs spécifiées aux séparateurs pour le lecteur et la valeur <see langword="Delimited" /> au type de champ.</summary>
      <param name="delimiters">Tableau de type <see langword="String" />.</param>
      <exception cref="T:System.ArgumentException">Un délimiteur est de longueur nulle.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])">
      <summary>Affecte les valeurs spécifiées aux séparateurs pour le lecteur.</summary>
      <param name="fieldWidths">Tableau d'<see langword="Integer" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.System#IDisposable#Dispose">
      <summary>Libère les ressources utilisées par l’objet <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType">
      <summary>Indique si le fichier à analyser est délimité ou à largeur fixe.</summary>
      <returns>Valeur <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType" /> qui indique si le fichier à analyser est délimité ou de longueur fixe.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace">
      <summary>Indique si les espaces blancs de début et de fin doivent être supprimés des valeurs de champs.</summary>
      <returns>
        <see langword="True" /> si les espaces blancs de début et de fin doivent être supprimés des valeurs de champs ; sinon, <see langword="False" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.UICancelOption">
      <summary>Spécifie si une exception est levée lorsque l’utilisateur clique sur Annuler pendant une opération.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UICancelOption.DoNothing">
      <summary>Ne rien faire lorsque l’utilisateur clique sur Annuler.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException">
      <summary>Lever une exception lorsque l’utilisateur clique sur Annuler.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.UIOption">
      <summary>Spécifie les boîtes de dialogue à afficher lors de la copie, de la suppression ou du déplacement de fichiers ou répertoires.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UIOption.AllDialogs">
      <summary>Affiche une boîte de dialogue de progression et toutes les boîtes de dialogue d'erreur.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UIOption.OnlyErrorDialogs">
      <summary>Affiche uniquement les boîtes de dialogue d'erreur et masque les boîtes de dialogue de progression. Par défaut.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileSystem">
      <summary>Le module <see langword="FileSystem" /> contient les procédures utilisées pour exécuter des opérations sur des fichiers, des répertoires ou des dossiers et les opérations système. La fonctionnalité <see langword="My" /> permet une meilleure productivité et de meilleures performances dans les opérations d'E/S de fichier que le module <see langword="FileSystem" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)">
      <summary>Modifie le répertoire ou dossier actif. La fonctionnalité <see langword="My" /> permet une meilleure productivité et de meilleures performances dans les opérations d’E/S de fichier que la fonction <see langword="ChDir" />. Pour plus d'informations, consultez <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</summary>
      <param name="Path">Obligatoire. Expression de chaîne qui identifie le répertoire ou dossier qui devient le nouveau répertoire ou dossier par défaut. <paramref name="Path" /> peut inclure le lecteur. Si aucun lecteur n'est spécifié, <see langword="ChDir" /> modifie le répertoire ou le dossier par défaut du lecteur actif.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Path" /> est vide.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Un lecteur non valide est spécifié ou le lecteur est indisponible.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.ChDrive(System.Char)">
      <summary>Modifie le lecteur actif.</summary>
      <param name="Drive">Obligatoire. Expression String qui spécifie un lecteur existant. Si vous fournissez une chaîne de longueur nulle (""), le lecteur actif n'est pas modifié. Si l'argument <paramref name="Drive" /> est une chaîne de plusieurs caractères, <see langword="ChDrive" /> n'utilise que la première lettre.</param>
      <exception cref="T:System.IO.IOException">Un lecteur non valide est spécifié ou le lecteur est indisponible.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.ChDrive(System.String)">
      <summary>Modifie le lecteur actif.</summary>
      <param name="Drive">Obligatoire. Expression String qui spécifie un lecteur existant. Si vous fournissez une chaîne de longueur nulle (""), le lecteur actif n'est pas modifié. Si l'argument <paramref name="Drive" /> est une chaîne de plusieurs caractères, <see langword="ChDrive" /> n'utilise que la première lettre.</param>
      <exception cref="T:System.IO.IOException">Un lecteur non valide est spécifié ou le lecteur est indisponible.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.CurDir">
      <summary>Retourne une chaîne représentant le chemin d'accès en cours. Le <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> permet une meilleure productivité et de meilleures performances dans les opérations d'E/S de fichier que <see langword="CurDir" />. Pour plus d'informations, consultez <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</summary>
      <returns>Chaîne représentant le chemin d'accès actuel.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.CurDir(System.Char)">
      <summary>Retourne une chaîne représentant le chemin d'accès en cours. Le <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> permet une meilleure productivité et de meilleures performances dans les opérations d'E/S de fichier que <see langword="CurDir" />. Pour plus d'informations, consultez <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</summary>
      <param name="Drive">Optionnel. Expression <see langword="Char" /> qui spécifie un lecteur existant. Si aucun lecteur n'est spécifié ou si <paramref name="Drive" /> est une chaîne de longueur nulle (""), <see langword="CurDir" /> retourne le chemin d'accès du lecteur actif.</param>
      <returns>Chaîne représentant le chemin d'accès actuel.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Dir">
      <summary>Retourne une chaîne représentant le nom d'un fichier, d'un répertoire ou d'un dossier qui correspond à un modèle ou un attribut de fichier spécifié ou au nom de volume d'un lecteur. Le <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> permet une meilleure productivité et de meilleures performances dans les opérations d'E/S de fichier que la fonction <see langword="Dir" />. Pour plus d'informations, voir <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" />.</summary>
      <returns>Chaîne représentant le nom d'un fichier, d'un répertoire ou d'un dossier qui correspond à un attribut de fichier ou de modèle spécifié ou au nom de volume d'un lecteur.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Dir(System.String,Microsoft.VisualBasic.FileAttribute)">
      <summary>Retourne une chaîne représentant le nom d'un fichier, d'un répertoire ou d'un dossier qui correspond à un modèle ou un attribut de fichier spécifié ou au nom de volume d'un lecteur. Le <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> permet une meilleure productivité et de meilleures performances dans les opérations d'E/S de fichier que la fonction <see langword="Dir" />. Pour plus d'informations, voir <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" />.</summary>
      <param name="PathName">Facultatif. Une expression de chaîne qui spécifie un nom de fichier, de répertoire ou de dossier, ou l’étiquette du volume d’un lecteur. Une chaîne de longueur nulle (<see langword="&quot;&quot;" />) est retournée si <paramref name="PathName" /> n'est pas trouvé.</param>
      <param name="Attributes">Optionnel. Énumération ou expression numérique dont la valeur spécifie des attributs de fichier. En cas d'omission, <see langword="Dir" /> retourne des fichiers qui correspondent à <paramref name="Pathname" />, mais n'ont pas d'attributs.</param>
      <returns>Chaîne représentant le nom d'un fichier, d'un répertoire ou d'un dossier qui correspond à un attribut de fichier ou de modèle spécifié ou au nom de volume d'un lecteur.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.EOF(System.Int32)">
      <summary>Retourne une valeur booléenne <see langword="True" /> lorsque la fin d'un fichier ouvert pour <see langword="Random" /> ou <see langword="Input" /> séquentiel a été atteinte.</summary>
      <param name="FileNumber">Obligatoire. <see langword="Integer" /> qui contient un numéro de fichier valide.</param>
      <returns>Une valeur booléenne <see langword="True" /> lorsque la fin d’un fichier ouvert pour <see langword="Random" /> ou <see langword="Input" /> séquentiel a été atteinte.</returns>
      <exception cref="T:System.IO.IOException">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileAttr(System.Int32)">
      <summary>Retourne une énumération qui représente le mode de fichier pour les fichiers ouverts à l'aide de la fonction <see langword="FileOpen" />. Le <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> permet une meilleure productivité et de meilleures performances dans les opérations d'E/S de fichier que la fonction <see langword="FileAttr" />. Pour plus d'informations, voir <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />.</summary>
      <param name="FileNumber">Obligatoire. <see langword="Integer" />. N’importe quel numéro de fichier valide.</param>
      <returns>Les valeurs d'énumération suivantes indiquent le mode d'accès au fichier : 
  Value 
  Mode 
  1 
 <see langword="OpenMode.Input" /> 2 
 <see langword="OpenMode.Output" /> 4 
 <see langword="OpenMode.Random" /> 8 
 <see langword="OpenMode.Append" /> 32 
 <see langword="OpenMode.Binary" /></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileClose(System.Int32[])">
      <summary>Termine les opérations d'entrée/sortie (E/S) dans un fichier ouvert à l'aide de la fonction <see langword="FileOpen" />. <see langword="My" /> permet une meilleure productivité et de meilleures performances dans les opérations d'E/S de fichier. Pour plus d'informations, voir <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumbers">Facultatif. Tableau de paramètres de 0 ou plus de canaux à fermer.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> n’existe pas.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileCopy(System.String,System.String)">
      <summary>Copie un fichier. Le <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> permet une meilleure productivité et de meilleures performances dans les opérations d'E/S de fichier que <see langword="FileCopy" />. Pour plus d'informations, voir <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)" />.</summary>
      <param name="Source">Obligatoire. Une expression de chaîne qui spécifie le nom du fichier à copier. <paramref name="Source" /> peut inclure le répertoire ou le dossier du fichier source, ainsi que son lecteur.</param>
      <param name="Destination">Obligatoire. Une expression de chaîne qui spécifie le nom du fichier de destination. <paramref name="Destination" /> peut inclure le répertoire ou le dossier, ainsi que le lecteur, du fichier de destination.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Source" /> ou <paramref name="Destination" /> n'est pas valide ou n'est pas spécifié.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est déjà ouvert.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier n'existe pas.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileDateTime(System.String)">
      <summary>Retourne une valeur <see langword="Date" /> qui indique la date et l'heure à laquelle un fichier a été écrit. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FileDateTime" />. Pour plus d'informations, consultez <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" /></summary>
      <param name="PathName">Obligatoire. Une expression de chaîne qui spécifie un nom de fichier. <paramref name="PathName" /> peut inclure le répertoire ou le dossier, et le lecteur.</param>
      <returns>Valeur <see langword="Date" /> qui indique la date et l'heure à laquelle un fichier a été créé ou modifié pour la dernière fois.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="PathName" /> n'est pas valide ou contient des caractères génériques.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier cible n'existe pas.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Array@,System.Int64,System.Boolean,System.Boolean)">
      <summary>Lit les données d’un fichier disque ouvert dans une variable. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FileGet" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value">Obligatoire. Nom de la variable valide dans laquelle les données sont lues.</param>
      <param name="RecordNumber">Facultatif. Numéro d'enregistrement (fichiers en mode <see langword="Random" />) ou numéro d’octet (fichiers en mode <see langword="Binary" />) auquel la lecture débute.</param>
      <param name="ArrayIsDynamic">Facultatif. S'applique uniquement lors de l'écriture d'un tableau. Spécifie si le tableau sera traité comme dynamique et si un descripteur de tableau décrivant la taille et les limites du tableau est nécessaire.</param>
      <param name="StringIsFixedLength">Facultatif. S'applique uniquement lors de l'écriture d'une chaîne. Spécifie s'il est nécessaire d'écrire un descripteur à deux octets pour la chaîne décrivant la longueur. La valeur par défaut est <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 et différent de -1.</exception>
      <exception cref="T:System.IO.IOException">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Boolean@,System.Int64)">
      <summary>Lit les données d’un fichier disque ouvert dans une variable. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FileGet" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /></summary>
      <param name="FileNumber">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value">Obligatoire. Nom de la variable valide dans laquelle les données sont lues.</param>
      <param name="RecordNumber">Optionnel. Numéro d'enregistrement (fichiers en mode <see langword="Random" />) ou numéro d’octet (fichiers en mode <see langword="Binary" />) auquel la lecture débute.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 et différent de -1.</exception>
      <exception cref="T:System.IO.IOException">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Byte@,System.Int64)">
      <summary>Lit les données d’un fichier disque ouvert dans une variable. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FileGet" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value">Obligatoire. Nom de la variable valide dans laquelle les données sont lues.</param>
      <param name="RecordNumber">Facultatif. Numéro d'enregistrement (fichiers en mode <see langword="Random" />) ou numéro d’octet (fichiers en mode <see langword="Binary" />) auquel la lecture débute.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 et différent de -1.</exception>
      <exception cref="T:System.IO.IOException">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Char@,System.Int64)">
      <summary>Lit les données d’un fichier disque ouvert dans une variable. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FileGet" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value">Obligatoire. Nom de la variable valide dans laquelle les données sont lues.</param>
      <param name="RecordNumber">Optionnel. Numéro d'enregistrement (fichiers en mode <see langword="Random" />) ou numéro d’octet (fichiers en mode <see langword="Binary" />) auquel la lecture débute.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 et différent de -1.</exception>
      <exception cref="T:System.IO.IOException">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.DateTime@,System.Int64)">
      <summary>Lit les données d’un fichier disque ouvert dans une variable. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FileGet" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value">Obligatoire. Nom de la variable valide dans laquelle les données sont lues.</param>
      <param name="RecordNumber">Facultatif. Numéro d'enregistrement (fichiers en mode <see langword="Random" />) ou numéro d’octet (fichiers en mode <see langword="Binary" />) auquel la lecture débute.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 et différent de -1.</exception>
      <exception cref="T:System.IO.IOException">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Decimal@,System.Int64)">
      <summary>Lit les données d’un fichier disque ouvert dans une variable. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FileGet" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value">Obligatoire. Nom de la variable valide dans laquelle les données sont lues.</param>
      <param name="RecordNumber">Optionnel. Numéro d'enregistrement (fichiers en mode <see langword="Random" />) ou numéro d’octet (fichiers en mode <see langword="Binary" />) auquel la lecture débute.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 et différent de -1.</exception>
      <exception cref="T:System.IO.IOException">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Double@,System.Int64)">
      <summary>Lit les données d’un fichier disque ouvert dans une variable. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FileGet" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value">Obligatoire. Nom de la variable valide dans laquelle les données sont lues.</param>
      <param name="RecordNumber">Facultatif. Numéro d'enregistrement (fichiers en mode <see langword="Random" />) ou numéro d’octet (fichiers en mode <see langword="Binary" />) auquel la lecture débute.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 et différent de -1.</exception>
      <exception cref="T:System.IO.IOException">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int16@,System.Int64)">
      <summary>Lit les données d’un fichier disque ouvert dans une variable. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FileGet" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value">Obligatoire. Nom de la variable valide dans laquelle les données sont lues.</param>
      <param name="RecordNumber">Facultatif. Numéro d'enregistrement (fichiers en mode <see langword="Random" />) ou numéro d’octet (fichiers en mode <see langword="Binary" />) auquel la lecture débute.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 et différent de -1.</exception>
      <exception cref="T:System.IO.IOException">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int32@,System.Int64)">
      <summary>Lit les données d’un fichier disque ouvert dans une variable. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FileGet" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value">Obligatoire. Nom de la variable valide dans laquelle les données sont lues.</param>
      <param name="RecordNumber">Optionnel. Numéro d'enregistrement (fichiers en mode <see langword="Random" />) ou numéro d’octet (fichiers en mode <see langword="Binary" />) auquel la lecture débute.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 et différent de -1.</exception>
      <exception cref="T:System.IO.IOException">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int64@,System.Int64)">
      <summary>Lit les données d’un fichier disque ouvert dans une variable. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FileGet" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value">Obligatoire. Nom de la variable valide dans laquelle les données sont lues.</param>
      <param name="RecordNumber">Optionnel. Numéro d'enregistrement (fichiers en mode <see langword="Random" />) ou numéro d’octet (fichiers en mode <see langword="Binary" />) auquel la lecture débute.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 et différent de -1.</exception>
      <exception cref="T:System.IO.IOException">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Single@,System.Int64)">
      <summary>Lit les données d’un fichier disque ouvert dans une variable. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FileGet" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value">Obligatoire. Nom de la variable valide dans laquelle les données sont lues.</param>
      <param name="RecordNumber">Optionnel. Numéro d'enregistrement (fichiers en mode <see langword="Random" />) ou numéro d’octet (fichiers en mode <see langword="Binary" />) auquel la lecture débute.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 et différent de -1.</exception>
      <exception cref="T:System.IO.IOException">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.String@,System.Int64,System.Boolean)">
      <summary>Lit les données d’un fichier disque ouvert dans une variable. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FileGet" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value">Obligatoire. Nom de la variable valide dans laquelle les données sont lues.</param>
      <param name="RecordNumber">Facultatif. Numéro d'enregistrement (fichiers en mode <see langword="Random" />) ou numéro d’octet (fichiers en mode <see langword="Binary" />) auquel la lecture débute.</param>
      <param name="StringIsFixedLength">Optionnel. S'applique uniquement lors de l'écriture d'une chaîne. Spécifie s'il est nécessaire d'écrire un descripteur à deux octets pour la chaîne décrivant la longueur. La valeur par défaut est <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 et différent de -1.</exception>
      <exception cref="T:System.IO.IOException">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.ValueType@,System.Int64)">
      <summary>Lit les données d’un fichier disque ouvert dans une variable. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FileGet" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value">Obligatoire. Nom de la variable valide dans laquelle les données sont lues.</param>
      <param name="RecordNumber">Optionnel. Numéro d'enregistrement (fichiers en mode <see langword="Random" />) ou numéro d’octet (fichiers en mode <see langword="Binary" />) auquel la lecture débute.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 et différent de -1.</exception>
      <exception cref="T:System.IO.IOException">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)">
      <summary>Lit les données d’un fichier disque ouvert dans une variable.  La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FileGetObject" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value">Obligatoire. Nom de la variable valide dans laquelle les données sont lues.</param>
      <param name="RecordNumber">Optionnel. Numéro d'enregistrement (fichiers en mode <see langword="Random" />) ou numéro d’octet (fichiers en mode <see langword="Binary" />) auquel la lecture débute.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileLen(System.String)">
      <summary>Retourne une valeur qui spécifie la longueur d’un fichier en octets. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FileLen" />. Pour plus d'informations, consultez <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />.</summary>
      <param name="PathName">Obligatoire. Une expression de chaîne qui spécifie un fichier. <paramref name="PathName" /> peut inclure le répertoire ou le dossier, et le lecteur.</param>
      <returns>Longueur du fichier en octets.</returns>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier n'existe pas.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)">
      <summary>Ouvre un fichier pour entrée ou sortie. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FileOpen" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatoire. N’importe quel numéro de fichier valide. Utilisez la fonction <see langword="FreeFile" /> pour obtenir le numéro du prochain fichier disponible.</param>
      <param name="FileName">Obligatoire. Une expression de chaîne qui spécifie un nom de fichier. Peut inclure le répertoire ou le dossier, ainsi que le lecteur.</param>
      <param name="Mode">Obligatoire. Énumération spécifiant le mode de fichier : <see langword="Append" />, <see langword="Binary" />, <see langword="Input" />, <see langword="Output" /> ou <see langword="Random" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.OpenMode" />.</param>
      <param name="Access">Optionnel. Énumération spécifiant quelles sont les opérations autorisées sur le fichier ouvert : <see langword="Read" />, <see langword="Write" /> ou <see langword="ReadWrite" />. La valeur par défaut est <see langword="ReadWrite" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.OpenAccess" />.</param>
      <param name="Share">Optionnel. Énumération spécifiant les opérations non autorisées sur le fichier ouvert par d'autres processus : <see langword="Shared" />, <see langword="Lock Read" />, <see langword="Lock Write" /> et <see langword="Lock Read Write" />. La valeur par défaut est <see langword="Lock Read Write" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.OpenShare" />.</param>
      <param name="RecordLength">Optionnel. Nombre inférieur ou égal à 32 767 (octets). Pour les fichiers ouverts pour accès aléatoire, cette valeur est la longueur de l'enregistrement. Pour les fichiers à accès séquentiel, cette valeur est le nombre de caractères mis en mémoire tampon.</param>
      <exception cref="T:System.ArgumentException">La longueur d'enregistrement est négative (et différente de -1).</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileName" /> est déjà ouvert ou <paramref name="FileName" /> n'est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Array,System.Int64,System.Boolean,System.Boolean)">
      <summary>Écrit les données d'une variable dans un fichier sur disque. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FilePut" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value">Obligatoire. Nom de variable valide contenant les données écrites sur le disque.</param>
      <param name="RecordNumber">Optionnel. Numéro de l'enregistrement (fichiers ouverts en mode <see langword="Random" />) ou de l'octet (fichiers ouverts en mode <see langword="Binary" />) par lequel l'écriture débute.</param>
      <param name="ArrayIsDynamic">Facultatif. S'applique uniquement lors de l'écriture d'un tableau. Spécifie si le tableau est traité comme dynamique, et s'il faut écrire un descripteur de tableau pour la chaîne décrivant la longueur.</param>
      <param name="StringIsFixedLength">Optionnel. S'applique uniquement lors de l'écriture d'une chaîne. Spécifie s'il faut écrire, sur le fichier, un descripteur de longueur de chaîne à deux octets pour la chaîne. La valeur par défaut est <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 et différent de -1.</exception>
      <exception cref="T:System.IO.IOException">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Boolean,System.Int64)">
      <summary>Écrit les données d'une variable dans un fichier sur disque. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FilePut" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value">Obligatoire. Nom de variable valide contenant les données écrites sur le disque.</param>
      <param name="RecordNumber">Optionnel. Numéro de l'enregistrement (fichiers ouverts en mode <see langword="Random" />) ou de l'octet (fichiers ouverts en mode <see langword="Binary" />) par lequel l'écriture débute.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 et différent de -1.</exception>
      <exception cref="T:System.IO.IOException">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Byte,System.Int64)">
      <summary>Écrit les données d'une variable dans un fichier sur disque. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FilePut" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value">Obligatoire. Nom de variable valide contenant les données écrites sur le disque.</param>
      <param name="RecordNumber">Optionnel. Numéro de l'enregistrement (fichiers ouverts en mode <see langword="Random" />) ou de l'octet (fichiers ouverts en mode <see langword="Binary" />) par lequel l'écriture débute.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 et différent de -1.</exception>
      <exception cref="T:System.IO.IOException">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Char,System.Int64)">
      <summary>Écrit les données d'une variable dans un fichier sur disque. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FilePut" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value">Obligatoire. Nom de variable valide contenant les données écrites sur le disque.</param>
      <param name="RecordNumber">Facultatif. Numéro de l'enregistrement (fichiers ouverts en mode <see langword="Random" />) ou de l'octet (fichiers ouverts en mode <see langword="Binary" />) par lequel l'écriture débute.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 et différent de -1.</exception>
      <exception cref="T:System.IO.IOException">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.DateTime,System.Int64)">
      <summary>Écrit les données d'une variable dans un fichier sur disque. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FilePut" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value">Obligatoire. Nom de variable valide contenant les données écrites sur le disque.</param>
      <param name="RecordNumber">Optionnel. Numéro de l'enregistrement (fichiers ouverts en mode <see langword="Random" />) ou de l'octet (fichiers ouverts en mode <see langword="Binary" />) par lequel l'écriture débute.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 et différent de -1.</exception>
      <exception cref="T:System.IO.IOException">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Decimal,System.Int64)">
      <summary>Écrit les données d'une variable dans un fichier sur disque. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FilePut" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value">Obligatoire. Nom de variable valide contenant les données écrites sur le disque.</param>
      <param name="RecordNumber">Optionnel. Numéro de l'enregistrement (fichiers ouverts en mode <see langword="Random" />) ou de l'octet (fichiers ouverts en mode <see langword="Binary" />) par lequel l'écriture débute.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 et différent de -1.</exception>
      <exception cref="T:System.IO.IOException">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Double,System.Int64)">
      <summary>Écrit les données d'une variable dans un fichier sur disque. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FilePut" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value">Obligatoire. Nom de variable valide contenant les données écrites sur le disque.</param>
      <param name="RecordNumber">Optionnel. Numéro de l'enregistrement (fichiers ouverts en mode <see langword="Random" />) ou de l'octet (fichiers ouverts en mode <see langword="Binary" />) par lequel l'écriture débute.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 et différent de -1.</exception>
      <exception cref="T:System.IO.IOException">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int16,System.Int64)">
      <summary>Écrit les données d'une variable dans un fichier sur disque. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FilePut" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value">Obligatoire. Nom de variable valide contenant les données écrites sur le disque.</param>
      <param name="RecordNumber">Optionnel. Numéro de l'enregistrement (fichiers ouverts en mode <see langword="Random" />) ou de l'octet (fichiers ouverts en mode <see langword="Binary" />) par lequel l'écriture débute.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 et différent de -1.</exception>
      <exception cref="T:System.IO.IOException">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int32,System.Int64)">
      <summary>Écrit les données d'une variable dans un fichier sur disque. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FilePut" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value">Obligatoire. Nom de variable valide contenant les données écrites sur le disque.</param>
      <param name="RecordNumber">Facultatif. Numéro de l'enregistrement (fichiers ouverts en mode <see langword="Random" />) ou de l'octet (fichiers ouverts en mode <see langword="Binary" />) par lequel l'écriture débute.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 et différent de -1.</exception>
      <exception cref="T:System.IO.IOException">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int64,System.Int64)">
      <summary>Écrit les données d'une variable dans un fichier sur disque. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FilePut" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value">Obligatoire. Nom de variable valide contenant les données écrites sur le disque.</param>
      <param name="RecordNumber">Optionnel. Numéro de l'enregistrement (fichiers ouverts en mode <see langword="Random" />) ou de l'octet (fichiers ouverts en mode <see langword="Binary" />) par lequel l'écriture débute.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 et différent de -1.</exception>
      <exception cref="T:System.IO.IOException">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Single,System.Int64)">
      <summary>Écrit les données d'une variable dans un fichier sur disque. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FilePut" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value">Obligatoire. Nom de variable valide contenant les données écrites sur le disque.</param>
      <param name="RecordNumber">Facultatif. Numéro de l'enregistrement (fichiers ouverts en mode <see langword="Random" />) ou de l'octet (fichiers ouverts en mode <see langword="Binary" />) par lequel l'écriture débute.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 et différent de -1.</exception>
      <exception cref="T:System.IO.IOException">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.String,System.Int64,System.Boolean)">
      <summary>Écrit les données d'une variable dans un fichier sur disque. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FilePut" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value">Obligatoire. Nom de variable valide contenant les données écrites sur le disque.</param>
      <param name="RecordNumber">Optionnel. Numéro de l'enregistrement (fichiers ouverts en mode <see langword="Random" />) ou de l'octet (fichiers ouverts en mode <see langword="Binary" />) par lequel l'écriture débute.</param>
      <param name="StringIsFixedLength">Optionnel. S'applique uniquement lors de l'écriture d'une chaîne. Spécifie s'il faut écrire, sur le fichier, un descripteur de longueur de chaîne à deux octets pour la chaîne. La valeur par défaut est <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 et différent de -1.</exception>
      <exception cref="T:System.IO.IOException">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.ValueType,System.Int64)">
      <summary>Écrit les données d'une variable dans un fichier sur disque. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FilePut" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value">Obligatoire. Nom de variable valide contenant les données écrites sur le disque.</param>
      <param name="RecordNumber">Optionnel. Numéro de l'enregistrement (fichiers ouverts en mode <see langword="Random" />) ou de l'octet (fichiers ouverts en mode <see langword="Binary" />) par lequel l'écriture débute.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 et différent de -1.</exception>
      <exception cref="T:System.IO.IOException">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Object,System.Object,System.Object)">
      <summary>Écrit les données d'une variable dans un fichier sur disque. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FilePut" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value">Obligatoire. Nom de variable valide contenant les données écrites sur le disque.</param>
      <param name="RecordNumber">Optionnel. Numéro de l'enregistrement (fichiers ouverts en mode <see langword="Random" />) ou de l'octet (fichiers ouverts en mode <see langword="Binary" />) par lequel l'écriture débute.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 et différent de -1.</exception>
      <exception cref="T:System.IO.IOException">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePutObject(System.Int32,System.Object,System.Int64)">
      <summary>Écrit les données d'une variable dans un fichier sur disque.  La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FilePutObject" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value">Obligatoire. Nom de variable valide contenant les données écrites sur le disque.</param>
      <param name="RecordNumber">Facultatif. Numéro de l'enregistrement (fichiers ouverts en mode <see langword="Random" />) ou de l'octet (fichiers ouverts en mode <see langword="Binary" />) par lequel l'écriture débute.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileWidth(System.Int32,System.Int32)">
      <summary>Assigne une largeur de ligne de sortie à un fichier ouvert à l'aide de la fonction <see langword="FileOpen" />.</summary>
      <param name="FileNumber">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="RecordWidth">Obligatoire. Expression numérique comprise dans la plage 0-255, limites incluses, qui indique combien de caractères apparaissent sur une ligne avant de commencer une nouvelle ligne. Si <paramref name="RecordWidth" /> égale 0, il n'y a aucune limite à la longueur d'une ligne. La valeur par défaut <paramref name="RecordWidth" /> est 0.</param>
      <exception cref="T:System.IO.IOException">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FreeFile">
      <summary>Retourne une valeur <see langword="Integer" /> qui représente le prochain numéro de fichier utilisable par la fonction <see langword="FileOpen" />.</summary>
      <returns>Une valeur entière qui représente le prochain numéro de fichier utilisable par la fonction <see langword="FileOpen" />.</returns>
      <exception cref="T:System.IO.IOException">Plus de 255 fichiers sont en cours d'utilisation.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)">
      <summary>Retourne une valeur <see langword="FileAttribute" /> qui représente les attributs d'un fichier, répertoire ou dossier. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="FileAttribute" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="PathName">Obligatoire. Une expression de chaîne qui spécifie un nom de fichier, de répertoire ou de dossier. <paramref name="PathName" /> peut inclure le répertoire ou le dossier, ainsi que le lecteur.</param>
      <returns>Combinaison d'opérations de bits des valeurs d'énumération.</returns>
      <exception cref="T:System.IO.IOException">
        <paramref name="Pathname" /> n'est pas valide ou contient des caractères génériques.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier cible n'existe pas.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Boolean@)">
      <summary>Lit des données dans un fichier séquentiel ouvert et les assigne à des variables.</summary>
      <param name="FileNumber">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value">Obligatoire. Variable à laquelle ont été assignées les valeurs lues dans le fichier. Ne peut pas être une variable tableau ou objet.</param>
      <exception cref="T:System.IO.IOException">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Byte@)">
      <summary>Lit des données dans un fichier séquentiel ouvert et les assigne à des variables.</summary>
      <param name="FileNumber">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value">Obligatoire. Variable à laquelle ont été assignées les valeurs lues dans le fichier. Ne peut pas être une variable tableau ou objet.</param>
      <exception cref="T:System.IO.IOException">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Char@)">
      <summary>Lit des données dans un fichier séquentiel ouvert et les assigne à des variables.</summary>
      <param name="FileNumber">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value">Obligatoire. Variable à laquelle ont été assignées les valeurs lues dans le fichier. Ne peut pas être une variable tableau ou objet.</param>
      <exception cref="T:System.IO.IOException">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.DateTime@)">
      <summary>Lit des données dans un fichier séquentiel ouvert et les assigne à des variables.</summary>
      <param name="FileNumber">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value">Obligatoire. Variable à laquelle ont été assignées les valeurs lues dans le fichier. Ne peut pas être une variable tableau ou objet.</param>
      <exception cref="T:System.IO.IOException">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Decimal@)">
      <summary>Lit des données dans un fichier séquentiel ouvert et les assigne à des variables.</summary>
      <param name="FileNumber">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value">Obligatoire. Variable à laquelle ont été assignées les valeurs lues dans le fichier. Ne peut pas être une variable tableau ou objet.</param>
      <exception cref="T:System.IO.IOException">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Double@)">
      <summary>Lit des données dans un fichier séquentiel ouvert et les assigne à des variables.</summary>
      <param name="FileNumber">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value">Obligatoire. Variable à laquelle ont été assignées les valeurs lues dans le fichier. Ne peut pas être une variable tableau ou objet.</param>
      <exception cref="T:System.IO.IOException">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int16@)">
      <summary>Lit des données dans un fichier séquentiel ouvert et les assigne à des variables.</summary>
      <param name="FileNumber">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value">Obligatoire. Variable à laquelle ont été assignées les valeurs lues dans le fichier. Ne peut pas être une variable tableau ou objet.</param>
      <exception cref="T:System.IO.IOException">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int32@)">
      <summary>Lit des données dans un fichier séquentiel ouvert et les assigne à des variables.</summary>
      <param name="FileNumber">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value">Obligatoire. Variable à laquelle ont été assignées les valeurs lues dans le fichier. Ne peut pas être une variable tableau ou objet.</param>
      <exception cref="T:System.IO.IOException">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int64@)">
      <summary>Lit des données dans un fichier séquentiel ouvert et les assigne à des variables.</summary>
      <param name="FileNumber">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value">Obligatoire. Variable à laquelle ont été assignées les valeurs lues dans le fichier. Ne peut pas être une variable tableau ou objet.</param>
      <exception cref="T:System.IO.IOException">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Object@)">
      <summary>Lit des données dans un fichier séquentiel ouvert et les assigne à des variables.</summary>
      <param name="FileNumber">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value">Obligatoire. Variable à laquelle ont été assignées les valeurs lues dans le fichier. Ne peut pas être une variable tableau ou objet.</param>
      <exception cref="T:System.IO.IOException">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Single@)">
      <summary>Lit des données dans un fichier séquentiel ouvert et les assigne à des variables.</summary>
      <param name="FileNumber">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value">Obligatoire. Variable à laquelle ont été assignées les valeurs lues dans le fichier. Ne peut pas être une variable tableau ou objet.</param>
      <exception cref="T:System.IO.IOException">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.String@)">
      <summary>Lit des données dans un fichier séquentiel ouvert et les assigne à des variables.</summary>
      <param name="FileNumber">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Value">Obligatoire. Variable à laquelle ont été assignées les valeurs lues dans le fichier. Ne peut pas être une variable tableau ou objet.</param>
      <exception cref="T:System.IO.IOException">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)">
      <summary>Retourne une valeur <see langword="String" /> qui contient des caractères provenant d'un fichier ouvert en mode <see langword="Input" /> ou <see langword="Binary" />. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="InputString" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="CharCount">Obligatoire. Toute expression numérique valide qui spécifie le nombre de caractères à lire.</param>
      <returns>Une chaîne qui contient des caractères provenant d’un fichier ouvert en mode <see langword="Input" /> ou <see langword="Binary" />. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="InputString" />.</returns>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> n’existe pas.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="CharCount" /> &lt; 0 ou &gt; 214.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Kill(System.String)">
      <summary>Supprime des fichiers d'un disque. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="Kill" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="PathName">Obligatoire. Une expression de chaîne qui spécifie un ou plusieurs noms de fichiers à supprimer. <paramref name="PathName" /> peut inclure le répertoire ou le dossier, ainsi que le lecteur.</param>
      <exception cref="T:System.IO.IOException">Le ou les fichiers cibles sont ouverts.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le ou les fichiers cibles sont introuvables.</exception>
      <exception cref="T:System.Security.SecurityException">Autorisation refusée.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.LineInput(System.Int32)">
      <summary>Lit une ligne seule dans un fichier à accès séquentiel ouvert et l'assigne à une variable <see langword="String" />.</summary>
      <param name="FileNumber">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <returns>Lit une ligne seule dans un fichier à accès séquentiel ouvert et l'assigne à une variable <see langword="String" />.</returns>
      <exception cref="T:System.IO.EndOfStreamException">La fin du fichier est atteinte.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> n’existe pas.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)">
      <summary>Retourne une valeur qui spécifie la position lecture/écriture actuelle d’un fichier ouvert.</summary>
      <param name="FileNumber">Obligatoire. Tout numéro de fichier <see langword="Integer" /> valide.</param>
      <returns>La position de lecture/écriture actuelle dans un fichier ouvert.</returns>
      <exception cref="T:System.IO.IOException">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32)">
      <summary>Contrôle l'accès par d'autres processus à tout ou partie d'un fichier ouvert à l'aide de la fonction <see langword="Open" />. La fonctionnalité <see langword="My" /> permet une meilleure productivité et de meilleures performances dans les opérations d'E/S de fichier que <see langword="Lock" /> et <see langword="Unlock" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <exception cref="T:System.IO.IOException">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32,System.Int64)">
      <summary>Contrôle l'accès par d'autres processus à tout ou partie d'un fichier ouvert à l'aide de la fonction <see langword="Open" />. La fonctionnalité <see langword="My" /> permet une meilleure productivité et de meilleures performances dans les opérations d'E/S de fichier que <see langword="Lock" /> et <see langword="Unlock" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Record">Optionnel. Numéro du seul enregistrement ou octet à verrouiller ou déverrouiller.</param>
      <exception cref="T:System.IO.IOException">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32,System.Int64,System.Int64)">
      <summary>Contrôle l'accès par d'autres processus à tout ou partie d'un fichier ouvert à l'aide de la fonction <see langword="Open" />. La fonctionnalité <see langword="My" /> permet une meilleure productivité et de meilleures performances dans les opérations d'E/S de fichier que <see langword="Lock" /> et <see langword="Unlock" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="FromRecord">Optionnel. Numéro du premier enregistrement ou octet à verrouiller ou déverrouiller</param>
      <param name="ToRecord">Optionnel. Numéro du dernier enregistrement ou octet à verrouiller ou déverrouiller</param>
      <exception cref="T:System.IO.IOException">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.LOF(System.Int32)">
      <summary>Retourne la taille, en octets, d’un fichier ouvert à l’aide de la fonction <see langword="FileOpen" />. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="LOF" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatoire. Une entier qui contient un numéro de fichier valide.</param>
      <returns>La taille, en octets, d’un fichier ouvert à l’aide de la fonction <see langword="FileOpen" />. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="LOF" />.</returns>
      <exception cref="T:System.IO.IOException">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)">
      <summary>Crée un répertoire. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="MkDir" />. Pour plus d'informations, consultez <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)" />.</summary>
      <param name="Path">Obligatoire. Une expression de chaîne qui identifie le répertoire à créer. Le <paramref name="Path" /> peut inclure le lecteur. Si aucun lecteur n'est spécifié, <see langword="MkDir" /> crée le nouveau répertoire sur le lecteur actif.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Path" /> n'est pas spécifié ou il est vide.</exception>
      <exception cref="T:System.Security.SecurityException">Autorisation refusée.</exception>
      <exception cref="T:System.IO.IOException">Le répertoire existe déjà.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])">
      <summary>Écrit des données formatées dans un fichier séquentiel.</summary>
      <param name="FileNumber">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Output">Facultatif. Zéro, une ou plusieurs expressions délimitées par des virgules à écrire dans un fichier.  
Les paramètres de l’argument <paramref name="Output" /> sont : 
 <see langword="T:System.IO.IOException" />: Le mode de fichier n’est pas valide.  
 <see langword="T:System.IO.IOException" /> : <paramref name="FileNumber" /> n'existe pas.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])">
      <summary>Écrit des données formatées dans un fichier séquentiel.</summary>
      <param name="FileNumber">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Output">Optionnel. Zéro, une ou plusieurs expressions délimitées par des virgules à écrire dans un fichier.  
Les paramètres de l’argument <paramref name="Output" /> sont : 
 <see langword="T:System.IO.IOException" />: Le mode de fichier n’est pas valide.  
 <see langword="T:System.IO.IOException" /> : <paramref name="FileNumber" /> n'existe pas.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Rename(System.String,System.String)">
      <summary>Renomme un fichier ou un répertoire sur un disque. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="Rename" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="OldPath">Obligatoire. Une expression de chaîne qui spécifie le nom et l’emplacement du fichier existant. <paramref name="OldPath" /> peut inclure le répertoire et le lecteur du fichier.</param>
      <param name="NewPath">Obligatoire. Une expression de chaîne qui spécifie le nom et l’emplacement du nouveau fichier. <paramref name="NewPath" /> peut inclure le répertoire et le lecteur de l'emplacement de destination. Le nom de fichier spécifié par <paramref name="NewPath" /> ne peut pas déjà exister.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier <paramref name="OldPath" /> n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Impossible de renommer vers un autre périphérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Reset">
      <summary>Ferme tous les fichiers disque ouverts à l'aide de la fonction <see langword="FileOpen" />. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="Reset" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)">
      <summary>Supprime un répertoire existant. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="RmDir" />. Pour plus d'informations, consultez <see cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory" />.</summary>
      <param name="Path">Obligatoire. Une expression de chaîne qui identifie le répertoire ou le dossier à supprimer. <paramref name="Path" /> peut inclure le lecteur. Si aucun lecteur n'est spécifié, <see langword="RmDir" /> supprime le répertoire du lecteur actif.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Path" /> n'est pas spécifié ou il est vide.</exception>
      <exception cref="T:System.IO.IOException">Le répertoire cible contient des fichiers.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le répertoire n'existe pas.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Seek(System.Int32)">
      <summary>Retourne un <see langword="Long" /> qui spécifie la position de lecture/écriture actuelle dans un fichier ouvert à l'aide de la fonction <see langword="FileOpen" /> ou définit la position de la prochaine opération de lecture/écriture dans un fichier ouvert via la fonction <see langword="FileOpen" />. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="Seek" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatoire. <see langword="Integer" /> qui contient un numéro de fichier valide.</param>
      <returns>Un <see langword="Long" /> qui spécifie la position de lecture/écriture actuelle dans un fichier ouvert à l’aide de la fonction <see langword="FileOpen" /> ou définit la position de la prochaine opération de lecture/écriture dans un fichier ouvert via la fonction <see langword="FileOpen" />.</returns>
      <exception cref="T:System.IO.IOException">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Seek(System.Int32,System.Int64)">
      <summary>Retourne un <see langword="Long" /> qui spécifie la position de lecture/écriture actuelle dans un fichier ouvert à l'aide de la fonction <see langword="FileOpen" /> ou définit la position de la prochaine opération de lecture/écriture dans un fichier ouvert via la fonction <see langword="FileOpen" />. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="Seek" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatoire. <see langword="Integer" /> qui contient un numéro de fichier valide.</param>
      <param name="Position">Obligatoire. Nombre compris dans la plage 1-2 147 483 647 inclus, qui indique où l’opération de lecture/écriture suivante doit avoir lieu.</param>
      <exception cref="T:System.IO.IOException">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)">
      <summary>Définit les informations d'attribut d'un fichier. La fonctionnalité <see langword="My" /> améliore la productivité et les performances des opérations d’E/S de fichier par rapport à <see langword="SetAttr" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="PathName">Obligatoire. Une expression de chaîne qui spécifie un nom de fichier. <paramref name="PathName" /> peut inclure le répertoire ou le dossier, ainsi que le lecteur.</param>
      <param name="Attributes">Obligatoire. Constante ou expression numérique dont la somme spécifie des attributs de fichier.</param>
      <exception cref="T:System.ArgumentException">Le type <paramref name="Attribute" />' n'est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)">
      <summary>Utilisé avec la fonction <see langword="Print" /> ou <see langword="PrintLine" /> pour positionner la sortie.</summary>
      <param name="Count">Obligatoire. Nombre d'espaces à insérer avant d'afficher ou d'écrire l'expression suivante dans une liste.</param>
      <returns>Utilisé avec la fonction <see langword="Print" /> ou <see langword="PrintLine" /> pour positionner la sortie.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.TAB">
      <summary>S'utilise avec les fonctions <see langword="Print" /> ou <see langword="PrintLine" /> pour positionner la sortie.</summary>
      <returns>S'utilise avec les fonctions <see langword="Print" /> ou <see langword="PrintLine" /> pour positionner la sortie.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.TAB(System.Int16)">
      <summary>S'utilise avec les fonctions <see langword="Print" /> ou <see langword="PrintLine" /> pour positionner la sortie.</summary>
      <param name="Column">Optionnel. Le numéro de colonne atteint avant d'afficher ou d'imprimer l'expression suivante dans une liste. En cas d'omission, <see langword="TAB" /> déplace le point d'insertion au début de la zone d'impression suivante.</param>
      <returns>S'utilise avec les fonctions <see langword="Print" /> ou <see langword="PrintLine" /> pour positionner la sortie.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32)">
      <summary>Contrôle l'accès par d'autres processus à tout ou partie d'un fichier ouvert à l'aide de la fonction <see langword="Open" />. La fonctionnalité <see langword="My" /> permet une meilleure productivité et de meilleures performances dans les opérations d'E/S de fichier que <see langword="Lock" /> et <see langword="Unlock" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <exception cref="T:System.IO.IOException">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32,System.Int64)">
      <summary>Contrôle l'accès par d'autres processus à tout ou partie d'un fichier ouvert à l'aide de la fonction <see langword="Open" />. La fonctionnalité <see langword="My" /> permet une meilleure productivité et de meilleures performances dans les opérations d'E/S de fichier que <see langword="Lock" /> et <see langword="Unlock" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="Record">Optionnel. Numéro du seul enregistrement ou octet à verrouiller ou déverrouiller</param>
      <exception cref="T:System.IO.IOException">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32,System.Int64,System.Int64)">
      <summary>Contrôle l'accès par d'autres processus à tout ou partie d'un fichier ouvert à l'aide de la fonction <see langword="Open" />. La fonctionnalité <see langword="My" /> permet une meilleure productivité et de meilleures performances dans les opérations d'E/S de fichier que <see langword="Lock" /> et <see langword="Unlock" />. Pour plus d'informations, consultez <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatoire. N’importe quel numéro de fichier valide.</param>
      <param name="FromRecord">Optionnel. Numéro du premier enregistrement ou octet à verrouiller ou déverrouiller</param>
      <param name="ToRecord">Optionnel. Numéro du dernier enregistrement ou octet à verrouiller ou déverrouiller</param>
      <exception cref="T:System.IO.IOException">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])">
      <summary>Écrit des données dans un fichier séquentiel. Les données écrites avec <see langword="Write" /> sont généralement lues à partir d’un fichier à l’aide de <see langword="Input" />.</summary>
      <param name="FileNumber">Obligatoire. Une expression <see langword="Integer" /> qui contient un numéro de fichier valide.</param>
      <param name="Output">Optionnel. Une ou plusieurs expressions délimitées par des virgules à écrire dans un fichier.</param>
      <exception cref="T:System.IO.IOException">Le mode de fichier n’est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])">
      <summary>Écrit des données dans un fichier séquentiel. Les données écrites avec <see langword="Write" /> sont généralement lues à partir d’un fichier à l’aide de <see langword="Input" />.</summary>
      <param name="FileNumber">Obligatoire. Une expression <see langword="Integer" /> qui contient un numéro de fichier valide.</param>
      <param name="Output">Optionnel. Une ou plusieurs expressions délimitées par des virgules à écrire dans un fichier.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Financial">
      <summary>Le module <see langword="Financial" /> contient des procédures utilisées pour exécuter des opérations financières.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>Retourne une valeur indiquant la valeur d’amortissement d’un bien sur une période déterminée en utilisant la méthode d’amortissement dégressif à taux double ou toute autre méthode spécifiée.</summary>
      <param name="Cost">Obligatoire. Coût initial du bien.</param>
      <param name="Salvage">Obligatoire. Valeur du bien à la fin de son cycle de vie.</param>
      <param name="Life">Obligatoire. Durée du cycle de vie du bien.</param>
      <param name="Period">Obligatoire. Période sur laquelle l’amortissement du bien est calculé.</param>
      <param name="Factor">Optionnel. Taux utilisé pour le calcul de l’amortissement. Si cet argument est omis, la valeur 2 (méthode d'amortissement dégressif à taux double) est utilisée par défaut.</param>
      <returns>Valeur d’amortissement d’un bien sur une période déterminée en utilisant la méthode d’amortissement dégressif à taux double ou toute autre méthode spécifiée.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Factor" /> &lt;= 0, <paramref name="Salvage" /> &lt; 0, <paramref name="Period" /> &lt;= 0 ou <paramref name="Period" /> &gt; <paramref name="Life." /></exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.FV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>Retourne une valeur indiquant le futur montant d’une annuité basée sur des versements constants et périodiques et sur un taux d’intérêt fixe.</summary>
      <param name="Rate">Obligatoire. Taux d’intérêt par période. Par exemple, si vous obtenez un prêt à un taux d'intérêt annuel (TIA) de 10 pour cent et que vous effectuez des remboursements mensuels, le taux par échéance est de 0,1/12, soit 0,0083.</param>
      <param name="NPer">Obligatoire. Nombre total d’échéances de l’annuité. Par exemple, si vous effectuez des remboursements mensuels dans le cadre d'un emprunt d'une durée de quatre ans, votre emprunt comporte un total de 48 (4 x 12) échéances.</param>
      <param name="Pmt">Obligatoire. Versement à effectuer à chaque échéance. Les paiements comprennent généralement le capital et les intérêts qui ne sont pas modifiés au cours de l'annuité.</param>
      <param name="PV">Optionnel. Valeur actuelle (ou montant forfaitaire) d’une série de paiements futurs. Par exemple, lorsque vous empruntez de l'argent pour acheter une voiture, le montant du prêt correspond pour le prêteur à la valeur actuelle des remboursements mensuels que vous allez effectuer pour la voiture. Si cet argument est omis, la position 0 est utilisée par défaut.</param>
      <param name="Due">Optionnel. Objet de type <see cref="T:Microsoft.VisualBasic.DueDate" /> qui spécifie la date d'échéance des paiements. Cet argument doit avoir la valeur <see langword="DueDate.EndOfPeriod" /> si les paiements sont dus à terme échu ou <see langword="DueDate.BegOfPeriod" /> si les paiements sont dus à terme à échoir. En cas d'omission, <see langword="DueDate.EndOfPeriod" /> est utilisé par défaut.</param>
      <returns>Montant futur d’une annuité basée sur des versements constants et périodiques et sur un taux d’intérêt fixe.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.IPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>Retourne une valeur indiquant les intérêts, pour une période donnée, d’une annuité basée sur des versements constants et périodiques et sur un taux d’intérêt fixe.</summary>
      <param name="Rate">Obligatoire. Taux d’intérêt par période. Par exemple, si vous obtenez un prêt à un taux d'intérêt annuel (TIA) de 10 pour cent et que vous effectuez des remboursements mensuels, le taux par échéance est de 0,1/12, soit 0,0083.</param>
      <param name="Per">Obligatoire. Période de remboursement dans la plage comprise entre 1 et <paramref name="NPer" />.</param>
      <param name="NPer">Obligatoire. Nombre total d’échéances de l’annuité. Par exemple, si vous effectuez des remboursements mensuels dans le cadre d'un emprunt d'une durée de quatre ans, votre emprunt comporte un total de 48 (4 x 12) échéances.</param>
      <param name="PV">Obligatoire. Valeur actuelle, ou valeur du jour, d’une série de paiements ou d’encaissements futurs. Par exemple, lorsque vous empruntez de l'argent pour acheter une voiture, le montant du prêt correspond pour le prêteur à la valeur actuelle des remboursements mensuels que vous allez effectuer pour la voiture.</param>
      <param name="FV">Facultatif. Valeur future ou solde de caisse souhaité au terme du dernier remboursement. Par exemple, la valeur future d'un emprunt est de 0 € car il s'agit de sa valeur après le dernier remboursement. Toutefois, si vous souhaitez économiser 50 000 € sur 18 ans pour les études de votre enfant, ce montant constitue la valeur future. Si cet argument est omis, la position 0 est utilisée par défaut.</param>
      <param name="Due">Facultatif. Objet de type <see cref="T:Microsoft.VisualBasic.DueDate" /> qui spécifie la date d'échéance des paiements. Cet argument doit avoir la valeur <c>DueDate.EndOfPeriod</c> si les paiements sont dus à terme échu ou <c>DueDate.BegOfPeriod</c> si les paiements sont dus à terme à échoir. Si cet argument est omis, la valeur <c>DueDate.EndOfPeriod</c> est utilisée par défaut.</param>
      <returns>Intérêts, pour une période donnée, d’une annuité basée sur des versements constants et périodiques et sur un taux d’intérêt fixe.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Per" /> &lt;= 0 ou <paramref name="Per" /> &gt; <paramref name="NPer" /></exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)">
      <summary>Valeur indiquant le taux de rendement interne d’une série de liquidités périodiques (paiements et encaissements).</summary>
      <param name="ValueArray">Obligatoire. Tableau de <see langword="Double" /> représentant les valeurs des liquidités. Le tableau doit contenir au moins une valeur négative (un paiement) et une valeur positive (un encaissement).</param>
      <param name="Guess">Optionnel. Objet indiquant la valeur qui devrait être retournée par <see langword="IRR" />. Si cet argument est omis, la valeur <paramref name="Guess" /> 0,1 (10 pour cent) est utilisée par défaut.</param>
      <returns>Taux de rendement interne d’une série de liquidités périodiques (paiements et encaissements).</returns>
      <exception cref="T:System.ArgumentException">Valeurs d’argument de tableau non valides ou <paramref name="Guess" /> &lt;= -1.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)">
      <summary>Valeur indiquant le taux de rendement interne modifié d’une série de liquidités périodiques (paiements et encaissements).</summary>
      <param name="ValueArray">Obligatoire. Tableau de <see langword="Double" /> représentant les valeurs des liquidités. Le tableau doit contenir au moins une valeur négative (un paiement) et une valeur positive (un encaissement).</param>
      <param name="FinanceRate">Obligatoire. Taux d’intérêt payé pour couvrir le coût du financement.</param>
      <param name="ReinvestRate">Obligatoire. Taux d’intérêt perçu sur les gains tirés des sommes réinvesties.</param>
      <returns>Taux de rendement interne modifié d’une série de liquidités périodiques (paiements et encaissements).</returns>
      <exception cref="T:System.ArgumentException">Un rang de <paramref name="ValueArray" /> n'est pas égal à 1, <paramref name="FinanceRate" /> = -1 ou <paramref name="ReinvestRate" /> = -1</exception>
      <exception cref="T:System.DivideByZeroException">Une division par zéro s'est produite.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.NPer(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>Retourne une valeur spécifiant le nombre d’échéances d’une annuité basée sur des versements constants et périodiques et sur un taux d’intérêt fixe.</summary>
      <param name="Rate">Obligatoire. Taux d’intérêt par période. Par exemple, si vous obtenez un prêt à un taux d'intérêt annuel (TIA) de 10 pour cent et que vous effectuez des remboursements mensuels, le taux par échéance est de 0,1/12, soit 0,0083.</param>
      <param name="Pmt">Obligatoire. Versement à effectuer à chaque échéance. Les paiements comprennent généralement le capital et les intérêts qui ne sont pas modifiés au cours de l'annuité.</param>
      <param name="PV">Obligatoire. Valeur actuelle, ou valeur du jour, d’une série de paiements ou d’encaissements futurs. Par exemple, lorsque vous empruntez de l'argent pour acheter une voiture, le montant du prêt correspond pour le prêteur à la valeur actuelle des remboursements mensuels que vous allez effectuer pour la voiture.</param>
      <param name="FV">Facultatif. Valeur future ou solde de caisse souhaité au terme du dernier remboursement. Par exemple, la valeur future d'un emprunt est de 0 €, car il s'agit de sa valeur après le dernier remboursement. Toutefois, si vous souhaitez économiser 50 000 € sur 18 ans pour les études de votre enfant, ce montant constitue la valeur future. Si cet argument est omis, la position 0 est utilisée par défaut.</param>
      <param name="Due">Optionnel. Objet de type <see cref="T:Microsoft.VisualBasic.DueDate" /> qui spécifie la date d'échéance des paiements. Cet argument doit avoir la valeur <c>DueDate.EndOfPeriod</c> si les paiements sont dus à terme échu ou <c>DueDate.BegOfPeriod</c> si les paiements sont dus à terme à échoir. Si cet argument est omis, la valeur <c>DueDate.EndOfPeriod</c> est utilisée par défaut.</param>
      <returns>Nombre d’échéances d’une annuité basée sur des versements constants et périodiques et sur un taux d’intérêt fixe.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Rate" /> = 0 et <paramref name="Pmt" /> = 0</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)">
      <summary>Retourne une valeur indiquant la valeur nette actuelle d’un investissement, calculée en fonction d’une série de liquidités périodiques (paiements et encaissements) et d’un taux d’escompte.</summary>
      <param name="Rate">Obligatoire. Taux d’escompte sur la période, exprimé sous la forme d’un nombre décimal.</param>
      <param name="ValueArray">Obligatoire. Tableau de <see langword="Double" /> représentant les valeurs des liquidités. Le tableau doit contenir au moins une valeur négative (un paiement) et une valeur positive (un encaissement).</param>
      <returns>Valeur nette actuelle d’un investissement, calculée en fonction d’une série de liquidités périodiques (paiements et encaissements) et d’un taux d’escompte.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="ValueArray" /> a la valeur <see langword="Nothing" />, rang de <paramref name="ValueArray" /> &lt;&gt; 1 ou <paramref name="Rate" /> = -1</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.Pmt(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>Retourne une valeur indiquant le montant d’une annuité basée sur des versements constants et périodiques et sur un taux d’intérêt fixe.</summary>
      <param name="Rate">Obligatoire. Taux d’intérêt par période. Par exemple, si vous obtenez un prêt à un taux d'intérêt annuel (TIA) de 10 pour cent et que vous effectuez des remboursements mensuels, le taux par échéance est de 0,1/12, soit 0,0083.</param>
      <param name="NPer">Obligatoire. Nombre total d’échéances de l’annuité. Par exemple, si vous effectuez des remboursements mensuels dans le cadre d'un emprunt d'une durée de quatre ans, votre emprunt comporte un total de 48 (4 x 12) échéances.</param>
      <param name="PV">Obligatoire. Valeur actuelle (ou montant forfaitaire) d’une série de paiements devant être effectués dans le futur. Par exemple, lorsque vous empruntez de l'argent pour acheter une voiture, le montant du prêt correspond pour le prêteur à la valeur actuelle des remboursements mensuels que vous allez effectuer pour la voiture.</param>
      <param name="FV">Facultatif. Valeur future ou solde de caisse souhaité au terme du dernier remboursement. Par exemple, la valeur future d'un emprunt est de 0 €, car il s'agit de sa valeur après le dernier remboursement. Toutefois, si vous souhaitez économiser 50 000 € sur 18 ans pour les études de votre enfant, ce montant constitue la valeur future. Si cet argument est omis, la position 0 est utilisée par défaut.</param>
      <param name="Due">Optionnel. Objet de type <see cref="T:Microsoft.VisualBasic.DueDate" /> qui spécifie la date d'échéance des paiements. Cet argument doit avoir la valeur <c>DueDate.EndOfPeriod</c> si les paiements sont dus à terme échu ou <c>DueDate.BegOfPeriod</c> si les paiements sont dus à terme à échoir. Si cet argument est omis, la valeur <c>DueDate.EndOfPeriod</c> est utilisée par défaut.</param>
      <returns>Montant d’une annuité basée sur des versements constants et périodiques et sur un taux d’intérêt fixe.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="NPer" /> = 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.PPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>Retourne une valeur indiquant le remboursement du capital, pour une période donnée, d’une annuité basée sur des versements constants et périodiques et sur un taux d’intérêt fixe.</summary>
      <param name="Rate">Obligatoire. Taux d’intérêt par période. Par exemple, si vous obtenez un prêt à un taux d'intérêt annuel (TIA) de 10 pour cent et que vous effectuez des remboursements mensuels, le taux par échéance est de 0,1/12, soit 0,0083.</param>
      <param name="Per">Obligatoire. Période de remboursement dans la plage comprise entre 1 et <paramref name="NPer" />.</param>
      <param name="NPer">Obligatoire. Nombre total d’échéances de l’annuité. Par exemple, si vous effectuez des remboursements mensuels dans le cadre d'un emprunt d'une durée de quatre ans, votre emprunt comporte un total de 48 (4 x 12) échéances.</param>
      <param name="PV">Obligatoire. Valeur actuelle d’une série de paiements ou d’encaissements futurs. Par exemple, lorsque vous empruntez de l'argent pour acheter une voiture, le montant du prêt correspond pour le prêteur à la valeur actuelle des remboursements mensuels que vous allez effectuer pour la voiture.</param>
      <param name="FV">Optionnel. Valeur future ou solde de caisse souhaité au terme du dernier remboursement. Par exemple, la valeur future d'un emprunt est de 0 €, car il s'agit de sa valeur après le dernier remboursement. Toutefois, si vous souhaitez économiser 50 000 € sur 18 ans pour les études de votre enfant, ce montant constitue la valeur future. Si cet argument est omis, la position 0 est utilisée par défaut.</param>
      <param name="Due">Facultatif. Objet de type <see cref="T:Microsoft.VisualBasic.DueDate" /> qui spécifie la date d'échéance des paiements. Cet argument doit avoir la valeur <c>DueDate.EndOfPeriod</c> si les paiements sont dus à terme échu ou <c>DueDate.BegOfPeriod</c> si les paiements sont dus à terme à échoir. Si cet argument est omis, la valeur <c>DueDate.EndOfPeriod</c> est utilisée par défaut.</param>
      <returns>Remboursement du capital, pour une période donnée, d’une annuité basée sur des versements constants et périodiques et sur un taux d’intérêt fixe.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Per" /> &lt;=0 ou <paramref name="Per" /> &gt; <paramref name="NPer" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.PV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>Retourne une valeur indiquant le montant actuel d’une annuité basée sur des échéances futures constantes et périodiques et sur un taux d’intérêt fixe.</summary>
      <param name="Rate">Obligatoire. Taux d’intérêt par période. Par exemple, si vous obtenez un prêt à un taux d'intérêt annuel (TIA) de 10 pour cent et que vous effectuez des remboursements mensuels, le taux par échéance est de 0,1/12, soit 0,0083.</param>
      <param name="NPer">Obligatoire. Nombre total d’échéances de l’annuité. Par exemple, si vous effectuez des remboursements mensuels dans le cadre d'un emprunt d'une durée de quatre ans, votre emprunt comporte 48 (4 x 12) échéances.</param>
      <param name="Pmt">Obligatoire. Versement à effectuer à chaque échéance. Les paiements comprennent généralement le capital et les intérêts qui ne sont pas modifiés au cours de l'annuité.</param>
      <param name="FV">Optionnel. Valeur future ou solde de caisse souhaité au terme du dernier remboursement. Par exemple, la valeur future d'un emprunt est de 0 €, car il s'agit de sa valeur après le dernier remboursement. Toutefois, si vous souhaitez économiser 50 000 € sur 18 ans pour les études de votre enfant, ce montant constitue la valeur future. Si cet argument est omis, la position 0 est utilisée par défaut.</param>
      <param name="Due">Optionnel. Objet de type <see cref="T:Microsoft.VisualBasic.DueDate" /> qui spécifie la date d'échéance des paiements. Cet argument doit avoir la valeur <c>DueDate.EndOfPeriod</c> si les paiements sont dus à terme échu ou <c>DueDate.BegOfPeriod</c> si les paiements sont dus à terme à échoir. Si cet argument est omis, la valeur <c>DueDate.EndOfPeriod</c> est utilisée par défaut.</param>
      <returns>Montant actuel d’une annuité basée sur des échéances futures constantes et périodiques et sur un taux d’intérêt fixe.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.Rate(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate,System.Double)">
      <summary>Retourne une valeur indiquant le taux d’intérêt par échéance pour une annuité.</summary>
      <param name="NPer">Obligatoire. Nombre total d’échéances de l’annuité. Par exemple, si vous effectuez des remboursements mensuels dans le cadre d'un emprunt d'une durée de quatre ans, votre emprunt comporte un total de 4 * 12 (soit 48) échéances.</param>
      <param name="Pmt">Obligatoire. Versement à effectuer à chaque échéance. Les paiements comprennent généralement le capital et les intérêts qui ne sont pas modifiés au cours de l'annuité.</param>
      <param name="PV">Obligatoire. Valeur actuelle, ou valeur du jour, d’une série de paiements ou d’encaissements futurs. Par exemple, lorsque vous empruntez de l'argent pour acheter une voiture, le montant du prêt correspond pour le prêteur à la valeur actuelle des remboursements mensuels que vous allez effectuer pour la voiture.</param>
      <param name="FV">Optionnel. Valeur future ou solde de caisse souhaité au terme du dernier remboursement. Par exemple, la valeur future d'un emprunt est de 0 €, car il s'agit de sa valeur après le dernier remboursement. Toutefois, si vous souhaitez économiser 50 000 € sur 18 ans pour les études de votre enfant, ce montant constitue la valeur future. Si cet argument est omis, la position 0 est utilisée par défaut.</param>
      <param name="Due">Optionnel. Objet de type <see cref="T:Microsoft.VisualBasic.DueDate" /> qui spécifie la date d'échéance des paiements. Cet argument doit avoir la valeur <c>DueDate.EndOfPeriod</c> si les paiements sont dus à terme échu ou <c>DueDate.BegOfPeriod</c> si les paiements sont dus à terme à échoir. Si cet argument est omis, la valeur <c>DueDate.EndOfPeriod</c> est utilisée par défaut.</param>
      <param name="Guess">Optionnel. Valeur que vous estimez être retournée par <see langword="Rate" />. Si cet argument est omis, la valeur <paramref name="Guess" /> 0,1 (10 pour cent) est utilisée par défaut.</param>
      <returns>Taux d’intérêt par échéance pour une annuité.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="NPer" /> &lt;= 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)">
      <summary>Retourne une valeur indiquant l’amortissement linéaire d’un bien pour une période donnée.</summary>
      <param name="Cost">Obligatoire. Coût initial du bien.</param>
      <param name="Salvage">Obligatoire. Valeur du bien à la fin de son cycle de vie.</param>
      <param name="Life">Obligatoire. Durée du cycle de vie du bien.</param>
      <returns>Amortissement linéaire d’un bien pour une période donnée.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Life" /> = 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)">
      <summary>Retourne une valeur indiquant l’amortissement global d’un bien sur une période donnée.</summary>
      <param name="Cost">Obligatoire. Coût initial du bien.</param>
      <param name="Salvage">Obligatoire. Valeur du bien à la fin de son cycle de vie.</param>
      <param name="Life">Obligatoire. Durée du cycle de vie du bien.</param>
      <param name="Period">Obligatoire. Période sur laquelle l’amortissement du bien est calculé.</param>
      <returns>Amortissement global d’un bien sur une période donnée.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Salvage" /> &lt; 0, <paramref name="Period" /> &gt; <paramref name="Life" /> or <paramref name="Period" /> &lt;=0.</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.FirstDayOfWeek">
      <summary>Indique le premier jour de la semaine à utiliser lors de l'appel de fonctions liées aux dates.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Friday">
      <summary>Vendredi. Ce membre est l'équivalent de la constante <see langword="vbFriday" /> dans Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Monday">
      <summary>Lundi. Ce membre est l'équivalent de la constante <see langword="vbMonday" /> dans Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Saturday">
      <summary>Samedi. Ce membre est l'équivalent de la constante <see langword="vbSaturday" /> dans Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday">
      <summary>Dimanche (par défaut). Ce membre est l'équivalent de la constante <see langword="vbSunday" /> dans Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.System">
      <summary>Le premier jour de la semaine tel que spécifié dans vos paramètres système. Ce membre est l'équivalent de la constante <see langword="vbUseSystemDayOfWeek" /> dans Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Thursday">
      <summary>Jeudi. Ce membre est l'équivalent de la constante <see langword="vbThursday" /> dans Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Tuesday">
      <summary>Mardi. Ce membre est l'équivalent de la constante <see langword="vbTuesday" /> dans Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Wednesday">
      <summary>Mercredi. Ce membre est l'équivalent de la constante <see langword="vbWednesday" /> dans Visual Basic.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FirstWeekOfYear">
      <summary>Indique la première semaine de l'année à utiliser lors de l'appel de fonctions liées aux dates.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.FirstFourDays">
      <summary>Première semaine comportant au moins quatre jours dans la nouvelle année. Ce membre est équivalent à la constante Visual Basic <see langword="vbFirstFourDays" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.FirstFullWeek">
      <summary>Première semaine complète de l'année. Ce membre est équivalent à la constante Visual Basic <see langword="vbFirstFullWeek" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1">
      <summary>Semaine comprenant le 1er janvier (valeur par défaut). Ce membre est équivalent à la constante Visual Basic <see langword="vbFirstJan1" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.System">
      <summary>Semaine spécifiée dans vos paramètres système en tant que première semaine de l’année. Ce membre est équivalent à la constante Visual Basic <see langword="vbUseSystem" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.HideModuleNameAttribute">
      <summary>L'attribut <see langword="HideModuleNameAttribute" />, lorsqu'il est appliqué à un module, permet aux membres de module d'être accessibles seulement à l'aide de la qualification nécessaire pour le module.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.HideModuleNameAttribute.#ctor">
      <summary>Initialise une nouvelle instance de l'attribut <see cref="T:Microsoft.VisualBasic.HideModuleNameAttribute" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Information">
      <summary>Le module <see langword="Information" /> contient les procédures utilisées pour retourner, tester ou vérifier les informations.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.Err">
      <summary>Contient des informations relatives aux erreurs d’exécution.</summary>
      <returns>Contient des informations relatives aux erreurs d’exécution.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsArray(System.Object)">
      <summary>Retourne une valeur <see langword="Boolean" /> indiquant si une variable pointe vers un tableau.</summary>
      <param name="VarName">Obligatoire. Variable <see langword="Object" />.</param>
      <returns>Retourne une valeur <see langword="Boolean" /> indiquant si une variable pointe vers un tableau.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsDate(System.Object)">
      <summary>Retourne une valeur <see langword="Boolean" /> indiquant si une expression représente une valeur <see langword="Date" /> valide.</summary>
      <param name="Expression">Obligatoire. Expression <see langword="Object" />.</param>
      <returns>Retourne une valeur <see langword="Boolean" /> indiquant si une expression représente une valeur <see langword="Date" /> valide.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)">
      <summary>Retourne une valeur <see langword="Boolean" /> indiquant si une expression correspond à la classe <see cref="T:System.DBNull" />.</summary>
      <param name="Expression">Obligatoire. Expression <see langword="Object" />.</param>
      <returns>Retourne une valeur <see langword="Boolean" /> indiquant si une expression correspond à la classe <see cref="T:System.DBNull" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsError(System.Object)">
      <summary>Retourne une valeur <see langword="Boolean" /> indiquant si une expression est un type d'exception.</summary>
      <param name="Expression">Obligatoire. Expression <see langword="Object" />.</param>
      <returns>Retourne une valeur <see langword="Boolean" /> indiquant si une expression est un type d'exception.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)">
      <summary>Retourne une valeur <see langword="Boolean" /> indiquant si aucun objet n'est assigné à une expression.</summary>
      <param name="Expression">Obligatoire. Expression <see langword="Object" />.</param>
      <returns>Retourne une valeur <see langword="Boolean" /> indiquant si aucun objet n'est assigné à une expression.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)">
      <summary>Retourne une valeur <see langword="Boolean" /> indiquant si une expression peut être évaluée comme un nombre.</summary>
      <param name="Expression">Obligatoire. Expression <see langword="Object" />.</param>
      <returns>Retourne une valeur <see langword="Boolean" /> indiquant si une expression peut être évaluée comme un nombre.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsReference(System.Object)">
      <summary>Retourne une valeur <see langword="Boolean" /> indiquant si une expression correspond à un type référence.</summary>
      <param name="Expression">Obligatoire. Expression <see langword="Object" />.</param>
      <returns>Retourne une valeur <see langword="Boolean" /> indiquant si une expression correspond à un type référence.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
      <summary>Retourne le plus petit indice disponible pour la dimension indiquée d'un tableau.</summary>
      <param name="Array">Obligatoire. Tableau de tout type de données. Tableau dans lequel vous voulez trouver le plus petit indice possible d'une dimension.</param>
      <param name="Rank">Facultatif. <see langword="Integer" />. Dimension pour laquelle le plus petit indice possible doit être retourné. Utilisez la valeur 1 pour la première dimension, la valeur 2 pour la deuxième, etc. Si <paramref name="Rank" /> cet argument est omis, la position 1 est utilisée par défaut.</param>
      <returns>
        <see langword="Integer" />. Valeur la plus basse que l'indice de la dimension spécifiée peut contenir. <see langword="LBound" /> retourne toujours 0 à condition que <paramref name="Array" /> ait été initialisé, même s'il n'a pas d'éléments, par exemple s'il s'agit d'une chaîne de longueur nulle. Si <paramref name="Array" /> est <see langword="Nothing" />, <see langword="LBound" /> lève une <see cref="T:System.ArgumentNullException" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Array" /> a la valeur <see langword="Nothing" />.</exception>
      <exception cref="T:System.RankException">
        <paramref name="Rank" /> est inférieur à 1 ou <paramref name="Rank" /> est supérieur au rang de <paramref name="Array" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
      <summary>Retourne une valeur <see langword="Integer" /> représentant le code couleur RVB correspondant au nombre de couleurs spécifié.</summary>
      <param name="Color">Obligatoire. Nombre entier compris entre 0 et 15.</param>
      <returns>Retourne une valeur <see langword="Integer" /> représentant le code couleur RVB correspondant au nombre de couleurs spécifié.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Color" /> est en dehors de la plage comprise entre 0 et 15 inclus.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
      <summary>Retourne une valeur <see langword="Integer" /> représentant une valeur de couleur RVB à partir d'un ensemble de composantes de couleur rouge, vert et bleu.</summary>
      <param name="Red">Obligatoire. <see langword="Integer" /> compris entre 0 et 255 inclus, représentant l’intensité de la composante rouge de la couleur.</param>
      <param name="Green">Obligatoire. <see langword="Integer" /> compris entre 0 et 255 inclus, représentant l’intensité de la composante verte de la couleur.</param>
      <param name="Blue">Obligatoire. <see langword="Integer" /> compris entre 0 et 255 inclus, représentant l’intensité de la composante bleue de la couleur.</param>
      <returns>Retourne une valeur <see langword="Integer" /> représentant une valeur de couleur RVB à partir d'un ensemble de composantes de couleur rouge, vert et bleu.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Green" />, <paramref name="Blue" /> ou <paramref name="Red" /> est en dehors de la plage comprise entre 0 et 255 inclus.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.SystemTypeName(System.String)">
      <summary>Retourne une valeur <see langword="String" /> contenant le nom du type de données système d'une variable.</summary>
      <param name="VbName">Obligatoire. Variable <see langword="String" /> contenant un nom de type Visual Basic.</param>
      <returns>Retourne une valeur <see langword="String" /> contenant le nom du type de données système d'une variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
      <summary>Retourne une valeur <see langword="String" /> contenant des informations sur le type de données d'une variable.</summary>
      <param name="VarName">Obligatoire. Variable <see langword="Object" />. Si <see langword="Option Strict" /> est <see langword="Off" />, vous pouvez passer une variable de tout type de données, à l'exception d'une structure.</param>
      <returns>Retourne une valeur <see langword="String" /> contenant des informations sur le type de données d'une variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
      <summary>Retourne le plus grand indice disponible pour la dimension indiquée d'un tableau.</summary>
      <param name="Array">Obligatoire. Tableau de tout type de données. Tableau dans lequel vous voulez trouver le plus grand indice possible d'une dimension.</param>
      <param name="Rank">Facultatif. <see langword="Integer" />. Dimension pour laquelle le plus grand indice possible doit être retourné. Utilisez la valeur 1 pour la première dimension, la valeur 2 pour la deuxième, etc. Si <paramref name="Rank" /> cet argument est omis, la position 1 est utilisée par défaut.</param>
      <returns>
        <see langword="Integer" />. Valeur la plus élevée que l'indice pour la dimension spécifiée peut contenir. Si <paramref name="Array" /> a un seul élément, <see langword="UBound" /> retourne 0. Si <paramref name="Array" /> n'a pas d'éléments, par exemple si c'est une chaîne de longueur nulle, <see langword="UBound" /> retourne -1.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Array" /> a la valeur <see langword="Nothing" />.</exception>
      <exception cref="T:System.RankException">
        <paramref name="Rank" /> est inférieur à 1 ou <paramref name="Rank" /> est supérieur au rang de <paramref name="Array" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.VarType(System.Object)">
      <summary>Retourne une valeur <see langword="Integer" /> contenant la classification de type de données d'une variable.</summary>
      <param name="VarName">Obligatoire. Variable <see langword="Object" />. Si <see langword="Option Strict" /> est <see langword="Off" />, vous pouvez passer une variable de tout type de données, à l'exception d'une structure.</param>
      <returns>Retourne une valeur <see langword="Integer" /> contenant la classification de type de données d'une variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.VbTypeName(System.String)">
      <summary>Retourne une valeur <see langword="String" /> contenant le nom du type de données Visual Basic d'une variable.</summary>
      <param name="UrtName">Obligatoire. Variable <see langword="String" /> contenant un nom de type utilisé par le common language runtime.</param>
      <returns>Retourne une valeur <see langword="String" /> contenant le nom du type de données Visual Basic d'une variable.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Interaction">
      <summary>Le module <see langword="Interaction" /> contient les procédures utilisées pour interagir avec les objets, les applications et les systèmes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Beep">
      <summary>Émet un signal sonore par le haut-parleur de l'ordinateur.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
      <summary>Applique une méthode à un objet, ou définit ou retourne une propriété d'un objet.</summary>
      <param name="ObjectRef">Obligatoire. <see langword="Object" />. Pointeur qui désigne l'objet exposant la propriété ou la méthode.</param>
      <param name="ProcName">Obligatoire. <see langword="String" />. Expression de type chaîne contenant le nom de la propriété ou de la méthode sur l'objet.</param>
      <param name="UseCallType">Obligatoire. Membre de l'énumération de type <see cref="T:Microsoft.VisualBasic.CallType" /> représentant le type de la procédure appelée. La valeur de <see langword="CallType" /> peut être <see langword="Method" />, <see langword="Get" /> ou <see langword="Set" />.</param>
      <param name="Args">Facultatif. <see langword="ParamArray" />. Tableau de paramètres contenant les arguments à passer à la propriété ou la méthode appelée.</param>
      <returns>Applique une méthode à un objet, ou définit ou retourne une propriété d'un objet.</returns>
      <exception cref="T:System.ArgumentException">Valeur <paramref name="UseCallType" /> non valide ; doit être <see langword="Method" />, <see langword="Get" /> ou <see langword="Set" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
      <summary>Crée et retourne une référence à un objet COM. <see langword="CreateObject" /> ne peut être utilisé pour créer des instances de classes en Visual Basic à moins que ces classes soient exposées explicitement en tant que composants COM.</summary>
      <param name="ProgId">Obligatoire. <see langword="String" />. ID de programme de l'objet à créer.</param>
      <param name="ServerName">Optionnel. <see langword="String" />. Nom du serveur réseau où l'objet sera créé. Si <paramref name="ServerName" /> est une chaîne vide (""), l'ordinateur local est utilisé.</param>
      <returns>Crée et retourne une référence à un objet COM. <see langword="CreateObject" /> ne peut être utilisé pour créer des instances de classes en Visual Basic à moins que ces classes soient exposées explicitement en tant que composants COM.</returns>
      <exception cref="T:System.Exception">Le serveur est indisponible.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Aucun objet du type spécifié n'existe</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)">
      <summary>Retourne un ou deux objets selon l'évaluation d'une expression.</summary>
      <param name="Expression">Obligatoire. <see langword="Boolean" />. Expression à évaluer.</param>
      <param name="TruePart">Obligatoire. <see langword="Object" />. Retourné si <paramref name="Expression" /> a la valeur <see langword="True" />.</param>
      <param name="FalsePart">Obligatoire. <see langword="Object" />. Retourné si <paramref name="Expression" /> a la valeur <see langword="False" />.</param>
      <returns>Retourne un ou deux objets selon l'évaluation d'une expression.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.MsgBoxResult">
      <summary>Indique le bouton qui a été enfoncé dans une boîte de message, retourné par la fonction <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Abort">
      <summary>Le bouton Abandonner a été enfoncé. Ce membre est équivalent à la constante Visual Basic <see langword="vbAbort" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Cancel">
      <summary>Le bouton Annuler a été enfoncé. Ce membre est équivalent à la constante <see langword="vbCancel" />de Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Ignore">
      <summary>Le bouton Ignorer a été enfoncé. Ce membre est équivalent à la constante Visual Basic <see langword="vbIgnore" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.No">
      <summary>Le bouton Non a été enfoncé. Ce membre est équivalent à la constante Visual Basic <see langword="vbNo" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Ok">
      <summary>Le bouton OK a été enfoncé. Ce membre est équivalent à la constante Visual Basic <see langword="vbOK" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Retry">
      <summary>Le bouton Réessayer a été enfoncé. Ce membre est équivalent à la constante Visual Basic <see langword="vbRetry" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Yes">
      <summary>Le bouton Oui a été enfoncé. Ce membre est équivalent à la constante Visual Basic <see langword="vbYes" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.MsgBoxStyle">
      <summary>Indique les boutons à afficher lors de l’appel de la fonction <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.AbortRetryIgnore">
      <summary>Boutons Abandonner, Réessayer et Ignorer. Ce membre est équivalent à la constante Visual Basic <see langword="vbAbortRetryIgnore" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.ApplicationModal">
      <summary>Boîte de dialogue modale de l’application. Ce membre est équivalent à la constante Visual Basic <see langword="vbApplicationModal" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Critical">
      <summary>Message critique. Ce membre est équivalent à la constante Visual Basic <see langword="vbCritical" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.DefaultButton1">
      <summary>Le premier bouton est la valeur par défaut. Ce membre est équivalent à la constante Visual Basic <see langword="vbDefaultButton1" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.DefaultButton2">
      <summary>Le deuxième bouton est la valeur par défaut. Ce membre est équivalent à la constante Visual Basic <see langword="vbDefaultButton2" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.DefaultButton3">
      <summary>Le troisième bouton est la valeur par défaut. Ce membre est équivalent à la constante Visual Basic <see langword="vbDefaultButton3" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Exclamation">
      <summary>Message d'avertissement. Ce membre est équivalent à la constante Visual Basic <see langword="vbExclamation" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Information">
      <summary>Message d'informations. Ce membre est équivalent à la constante Visual Basic <see langword="vbInformation" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxHelp">
      <summary>Texte d'aide. Ce membre est équivalent à la constante Visual Basic <see langword="vbMsgBoxHelp" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxRight">
      <summary>Texte aligné à droite. Ce membre est équivalent à la constante Visual Basic <see langword="vbMsgBoxRight" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxRtlReading">
      <summary>Texte lu de droite à gauche (systèmes hébreu et arabe). Ce membre est équivalent à la constante Visual Basic <see langword="vbMsgBoxRtlReading" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxSetForeground">
      <summary>Fenêtre de message au premier plan. Ce membre est équivalent à la constante Visual Basic <see langword="vbMsgBoxSetForeground" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.OkCancel">
      <summary>Boutons OK et Annuler. Ce membre est équivalent à la constante Visual Basic <see langword="vbOKCancel" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.OkOnly">
      <summary>Bouton OK uniquement (par défaut). Ce membre est équivalent à la constante Visual Basic <see langword="vbOKOnly" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Question">
      <summary>Requête d’avertissement. Ce membre est équivalent à la constante Visual Basic <see langword="vbQuestion" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.RetryCancel">
      <summary>Boutons Réessayer et Annuler. Ce membre est équivalent à la constante Visual Basic <see langword="vbRetryCancel" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.SystemModal">
      <summary>Boîte de dialogue modale du système. Ce membre est équivalent à la constante Visual Basic <see langword="vbSystemModal" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.YesNo">
      <summary>Boutons Oui et Non. Ce membre est équivalent à la constante Visual Basic <see langword="vbYesNo" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.YesNoCancel">
      <summary>Boutons Oui, Non et Annuler. Ce membre est équivalent à la constante Visual Basic <see langword="vbYesNoCancel" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.MyGroupCollectionAttribute">
      <summary>Cet attribut prend en charge <see langword="My.Forms" /> et <see langword="My.WebServices" /> dans Visual Basic.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.MyGroupCollectionAttribute.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Cet attribut prend en charge <see langword="My.Forms" /> et <see langword="My.WebServices" /> dans Visual Basic.</summary>
      <param name="typeToCollect">
        <see langword="String" />. Initialise la propriété <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.MyGroupName" />. Le compilateur génère des propriétés d'accesseur pour les classes dérivées de ce type.</param>
      <param name="createInstanceMethodName">
        <see langword="String" />. Initialise la propriété <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.CreateMethod" />. Spécifie la méthode de la classe qui crée les instances du type.</param>
      <param name="disposeInstanceMethodName">
        <see langword="String" />. Initialise la propriété <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DisposeMethod" />. Spécifie la méthode de la classe qui supprime les instances du type.</param>
      <param name="defaultInstanceAlias">
        <see langword="String" />. Initialise la propriété <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DefaultInstanceAlias" />. Spécifie le nom de la propriété qui retourne l'instance par défaut de la classe.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.CreateMethod">
      <summary>Cette propriété prend en charge <see langword="My" /> en Visual Basic.</summary>
      <returns>Spécifie la méthode de la classe qui crée les instances du type.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DefaultInstanceAlias">
      <summary>Cette propriété prend en charge <see langword="My" /> en Visual Basic.</summary>
      <returns>Spécifie le nom de la propriété qui retourne l'instance par défaut de la classe.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DisposeMethod">
      <summary>Cette propriété prend en charge <see langword="My" /> en Visual Basic.</summary>
      <returns>Spécifie la méthode de la classe qui supprime les instances du type.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.MyGroupName">
      <summary>Cette propriété prend en charge <see langword="My" /> en Visual Basic.</summary>
      <returns>Spécifie le nom du type pour lequel le compilateur génère des propriétés d'accesseur.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.ClipboardProxy">
      <summary>Fournit des méthodes permettant de manipuler le Presse-papiers.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.FileSystemProxy">
      <summary>Fournit des propriétés et des méthodes destinées à être utilisées avec les lecteurs, les fichiers et les répertoires.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CombinePath(System.String,System.String)">
      <summary>Associe deux chemins d'accès et retourne un chemin d'accès correctement mis en forme.</summary>
      <param name="baseDirectory">
        <see langword="String" />. Premier chemin d'accès à combiner.</param>
      <param name="relativePath">
        <see langword="String" />. Deuxième chemin d'accès à combiner.</param>
      <returns>Combinaison des chemins d'accès spécifiés.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="baseDirectory" /> ou <paramref name="relativePath" /> sont des chemins d'accès incorrects.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String)">
      <summary>Copie un répertoire dans un autre répertoire.</summary>
      <param name="sourceDirectoryName">Répertoire à copier.</param>
      <param name="destinationDirectoryName">Emplacement vers lequel le répertoire doit être copié.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> ou <paramref name="sourceDirectoryName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le répertoire source n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le chemin source et le chemin cible sont identiques.</exception>
      <exception cref="T:System.InvalidOperationException">L'opération est cyclique.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Un fichier de destination existe mais est inaccessible.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>Copie un répertoire dans un autre répertoire.</summary>
      <param name="sourceDirectoryName">Répertoire à copier.</param>
      <param name="destinationDirectoryName">Emplacement vers lequel le répertoire doit être copié.</param>
      <param name="showUI">Indique si un suivi visuel de l'avancement de l'opération est nécessaire. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> ou <paramref name="sourceDirectoryName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le répertoire source n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le chemin source et le chemin cible sont identiques.</exception>
      <exception cref="T:System.InvalidOperationException">L'opération est cyclique.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Un fichier de destination existe mais est inaccessible.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="ShowUI" /> a la valeur <see langword="UIOption.AllDialogs" /> et l'utilisateur annule l'opération, ou un ou plusieurs fichiers du répertoire ne peuvent pas être copiés.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Copie un répertoire dans un autre répertoire.</summary>
      <param name="sourceDirectoryName">Répertoire à copier.</param>
      <param name="destinationDirectoryName">Emplacement vers lequel le répertoire doit être copié.</param>
      <param name="showUI">Indique si un suivi visuel de l'avancement de l'opération est nécessaire. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="onUserCancel">Indique ce qu’il convient de faire si l’utilisateur clique sur Annuler pendant l’opération. La valeur par défaut est <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> ou <paramref name="sourceDirectoryName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le répertoire source n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le chemin source et le chemin cible sont identiques.</exception>
      <exception cref="T:System.InvalidOperationException">L'opération est cyclique.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Un fichier de destination existe mais est inaccessible.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="ShowUI" /> a la valeur <see langword="UIOption.AllDialogs" /> et l'utilisateur annule l'opération, ou un ou plusieurs fichiers du répertoire ne peuvent pas être copiés.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,System.Boolean)">
      <summary>Copie un répertoire dans un autre répertoire.</summary>
      <param name="sourceDirectoryName">Répertoire à copier.</param>
      <param name="destinationDirectoryName">Emplacement vers lequel le répertoire doit être copié.</param>
      <param name="overwrite">
        <see langword="True" /> pour remplacer les fichiers existants ; sinon, <see langword="False" />. La valeur par défaut est <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> ou <paramref name="sourceDirectoryName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le répertoire source n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le chemin source et le chemin cible sont identiques.</exception>
      <exception cref="T:System.InvalidOperationException">L'opération est cyclique.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Un fichier de destination existe mais est inaccessible.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String)">
      <summary>Copie un fichier vers un nouvel emplacement.</summary>
      <param name="sourceFileName">Fichier à copier.</param>
      <param name="destinationFileName">Emplacement vers lequel le fichier doit être copié.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> contient des informations de chemin d’accès.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> ou <paramref name="sourceFileName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier source n'est pas valide ou n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Un fichier du répertoire cible portant le même nom est en cours d'utilisation.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas l'autorisation requise.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>Copie un fichier vers un nouvel emplacement.</summary>
      <param name="sourceFileName">Fichier à copier.</param>
      <param name="destinationFileName">Emplacement vers lequel le fichier doit être copié.</param>
      <param name="showUI">Indique si un suivi visuel de l'avancement de l'opération est nécessaire. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> contient des informations de chemin d’accès.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> ou <paramref name="sourceFileName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier source n'est pas valide ou n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier de destination existe et <paramref name="overwrite" /> a la valeur <see langword="False" /> ().</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas l'autorisation requise.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Copie un fichier vers un nouvel emplacement.</summary>
      <param name="sourceFileName">Fichier à copier.</param>
      <param name="destinationFileName">Emplacement vers lequel le fichier doit être copié.</param>
      <param name="showUI">Indique si un suivi visuel de l'avancement de l'opération est nécessaire. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="onUserCancel">Indique ce qu’il convient de faire si l’utilisateur clique sur Annuler pendant l’opération. La valeur par défaut est <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> contient des informations de chemin d’accès.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> ou <paramref name="sourceFileName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier source n'est pas valide ou n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier de destination existe et <paramref name="overwrite" /> a la valeur <see langword="False" /> ().</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas l'autorisation requise.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="UICancelOption" /> a la valeur <see langword="ThrowException" /> et l'utilisateur a annulé l'opération ou une erreur d'E/S non spécifiée s'est produit.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,System.Boolean)">
      <summary>Copie un fichier vers un nouvel emplacement.</summary>
      <param name="sourceFileName">Fichier à copier.</param>
      <param name="destinationFileName">Emplacement vers lequel le fichier doit être copié.</param>
      <param name="overwrite">
        <see langword="True" /> si les fichiers existants doivent être remplacés ; sinon, <see langword="False" />. La valeur par défaut est <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> contient des informations de chemin d’accès.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> ou <paramref name="sourceFileName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier source n'est pas valide ou n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier de destination existe et <paramref name="overwrite" /> a la valeur <see langword="False" /> ().</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas l'autorisation requise.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CreateDirectory(System.String)">
      <summary>Crée un répertoire.</summary>
      <param name="directory">Nom et emplacement du répertoire.</param>
      <exception cref="T:System.ArgumentException">Le format du nom du répertoire est incorrect. Par exemple, il contient des caractères non valides ou se compose uniquement d'espace blanc.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le nom de répertoire est trop long.</exception>
      <exception cref="T:System.NotSupportedException">Le nom du répertoire se compose uniquement du signe deux-points (:).</exception>
      <exception cref="T:System.IO.IOException">Le répertoire parent du répertoire à créer est en lecture seule.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'est pas autorisé à créer le répertoire.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.CurrentDirectory">
      <summary>Obtient ou définit le répertoire actif.</summary>
      <returns>Répertoire actif pour les opérations d'E/S de fichier.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le chemin d'accès n'est pas valide.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas les autorisations nécessaires.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)">
      <summary>Supprime un répertoire.</summary>
      <param name="directory">Répertoire à supprimer.</param>
      <param name="onDirectoryNotEmpty">Spécifie l'opération à effectuer lorsqu'un répertoire à supprimer contient des fichiers ou des répertoires. La valeur par défaut est <see langword="DeleteDirectoryOption.DeleteAllContents" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin d'accès est une chaîne de longueur nulle, est incorrect, se compose uniquement d'espace blanc ou contient des caractères incorrects (y compris des caractères génériques). Le chemin d’accès est un chemin d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le répertoire n'existe pas ou est un fichier.</exception>
      <exception cref="T:System.IO.IOException">Un fichier du répertoire ou du sous-répertoire est en cours d'utilisation.</exception>
      <exception cref="T:System.NotSupportedException">Le nom de répertoire contient un signe deux points (:).</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations requises.</exception>
      <exception cref="T:System.OperationCanceledException">L'utilisateur annule l'opération ou le répertoire ne peut pas être supprimé.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary>Supprime un répertoire.</summary>
      <param name="directory">Répertoire à supprimer.</param>
      <param name="showUI">Spécifie s'il faut effectuer un suivi visuel de l'avancement de l'opération. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="recycle">Spécifie si le fichier supprimé doit être ou non envoyé à la Corbeille. La valeur par défaut est <see langword="RecycleOption.DeletePermanently" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin d'accès est une chaîne de longueur nulle, est incorrect, se compose uniquement d'espace blanc ou contient des caractères incorrects (y compris des caractères génériques). Le chemin d’accès est un chemin d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le répertoire n'existe pas ou est un fichier.</exception>
      <exception cref="T:System.IO.IOException">Un fichier du répertoire ou du sous-répertoire est en cours d'utilisation.</exception>
      <exception cref="T:System.NotSupportedException">Le nom de répertoire contient un signe deux points (:).</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations requises.</exception>
      <exception cref="T:System.OperationCanceledException">L'utilisateur annule l'opération ou le répertoire ne peut pas être supprimé.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Supprime un répertoire.</summary>
      <param name="directory">Répertoire à supprimer.</param>
      <param name="showUI">Spécifie s'il faut effectuer un suivi visuel de l'avancement de l'opération. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="recycle">Spécifie si le fichier supprimé doit être ou non envoyé à la Corbeille. La valeur par défaut est <see langword="RecycleOption.DeletePermanently" />.</param>
      <param name="onUserCancel">Spécifie si une exception doit être levée quand l’utilisateur clique sur Annuler.</param>
      <exception cref="T:System.ArgumentException">Le chemin d'accès est une chaîne de longueur nulle, est incorrect, se compose uniquement d'espace blanc ou contient des caractères incorrects (y compris des caractères génériques). Le chemin d’accès est un chemin d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le répertoire n'existe pas ou est un fichier.</exception>
      <exception cref="T:System.IO.IOException">Un fichier du répertoire ou du sous-répertoire est en cours d'utilisation.</exception>
      <exception cref="T:System.NotSupportedException">Le nom de répertoire contient un signe deux points (:).</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations requises.</exception>
      <exception cref="T:System.OperationCanceledException">L'utilisateur annule l'opération ou le répertoire ne peut pas être supprimé.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String)">
      <summary>Supprime un fichier.</summary>
      <param name="file">Nom et chemin d'accès du fichier à supprimer.</param>
      <exception cref="T:System.ArgumentException">Le chemin d’accès n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il contient une barre oblique finale alors qu’un fichier doit être spécifié ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est en cours d'utilisation.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier n'existe pas.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas l'autorisation nécessaire pour supprimer le fichier ou le fichier est en lecture seule.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary>Supprime un fichier.</summary>
      <param name="file">Nom et chemin d'accès du fichier à supprimer.</param>
      <param name="showUI">Indique si un suivi visuel de l'avancement de l'opération est nécessaire. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="recycle">Spécifie si le fichier supprimé doit être envoyé à la Corbeille. La valeur par défaut est <see langword="RecycleOption.DeletePermanently" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin d’accès n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il contient une barre oblique finale alors qu’un fichier doit être spécifié ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est en cours d'utilisation.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier n'existe pas.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas l'autorisation nécessaire pour supprimer le fichier ou le fichier est en lecture seule.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Supprime un fichier.</summary>
      <param name="file">Nom et chemin d'accès du fichier à supprimer.</param>
      <param name="showUI">Indique si un suivi visuel de l'avancement de l'opération est nécessaire. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="recycle">Spécifie si le fichier supprimé doit être envoyé à la Corbeille. La valeur par défaut est <see langword="RecycleOption.DeletePermanently" />.</param>
      <param name="onUserCancel">Spécifie si oui ou non une exception est levée lorsque l'utilisateur annule l'opération. La valeur par défaut est <see langword="UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin d’accès n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il contient une barre oblique finale alors qu’un fichier doit être spécifié ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est en cours d'utilisation.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier n'existe pas.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas l'autorisation nécessaire pour supprimer le fichier ou le fichier est en lecture seule.</exception>
      <exception cref="T:System.OperationCanceledException">L'utilisateur a annulé l'opération et <paramref name="onUserCancel" /> a la valeur <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DirectoryExists(System.String)">
      <summary>Retourne la valeur <see langword="True" /> si le répertoire spécifié existe.</summary>
      <param name="directory">Chemin d'accès du répertoire.</param>
      <returns>
        <see langword="True" /> si le répertoire existe ; sinon <see langword="False" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.Drives">
      <summary>Retourne une collection en lecture seule de tous les noms de lecteurs disponibles.</summary>
      <returns>Collection en lecture seule de tous les lecteurs disponibles en tant qu'objets <see cref="T:System.IO.DriveInfo" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.FileExists(System.String)">
      <summary>Retourne la valeur <see langword="True" /> si le fichier spécifié existe.</summary>
      <param name="file">Nom et chemin d'accès du fichier.</param>
      <returns>Retourne <see langword="True" /> si le fichier existe ; sinon, cette méthode retourne <see langword="False" />.</returns>
      <exception cref="T:System.ArgumentException">Le nom du fichier se termine par une barre oblique inverse (\).</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)">
      <summary>Retourne une collection en lecture seule de chaînes qui représentent le nom des fichiers contenant le texte spécifié.</summary>
      <param name="directory">Répertoire dans lequel effectuer la recherche.</param>
      <param name="containsText">Texte de la recherche.</param>
      <param name="ignoreCase">
        <see langword="True" /> si la recherche doit respecter la casse ; sinon, <see langword="False" />. La valeur par défaut est <see langword="True" />.</param>
      <param name="searchType">Inclure, ou non, les sous-dossiers. La valeur par défaut est <see langword="SearchOption.SearchTopLevelOnly" />.</param>
      <returns>Collection en lecture seule des noms des fichiers contenant le texte spécifié.</returns>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur nulle, il ne contient que des espaces blancs, il contient des caractères non valides ou il s’agit d’un chemin d’appareil (qui commence par <c>\.&lt;/code&gt;).</c></exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le dossier spécifié n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le répertoire spécifié pointe vers un fichier existant.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Le chemin d'accès du répertoire spécifié contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas les autorisations nécessaires.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>Retourne une collection en lecture seule de chaînes qui représentent le nom des fichiers contenant le texte spécifié.</summary>
      <param name="directory">Répertoire dans lequel effectuer la recherche.</param>
      <param name="containsText">Texte de la recherche.</param>
      <param name="ignoreCase">
        <see langword="True" /> si la recherche doit respecter la casse ; sinon, <see langword="False" />. La valeur par défaut est <see langword="True" />.</param>
      <param name="searchType">Inclure, ou non, les sous-dossiers. La valeur par défaut est <see langword="SearchOption.SearchTopLevelOnly" />.</param>
      <param name="fileWildcards">Modèle auquel correspondre.</param>
      <returns>Collection en lecture seule des noms des fichiers contenant le texte spécifié.</returns>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur nulle, il ne contient que des espaces blancs, il contient des caractères non valides ou il s’agit d’un chemin d’appareil (qui commence par <c>\.&lt;/code&gt;).</c></exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le dossier spécifié n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le répertoire spécifié pointe vers un fichier existant.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Le chemin d'accès du répertoire spécifié contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas les autorisations nécessaires.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(System.String)">
      <summary>Retourne une collection de chaînes représentant les chemins d'accès de sous-répertoires présents dans un répertoire.</summary>
      <param name="directory">Nom et chemin d'accès du répertoire.</param>
      <returns>Collection en lecture seule des noms de chemin d'accès des sous-répertoires dans le répertoire spécifié.</returns>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le dossier spécifié n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le répertoire spécifié pointe vers un fichier existant.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas les autorisations nécessaires.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>Retourne une collection de chaînes représentant les chemins d'accès de sous-répertoires présents dans un répertoire.</summary>
      <param name="directory">Nom et chemin d'accès du répertoire.</param>
      <param name="searchType">Inclure, ou non, les sous-dossiers. La valeur par défaut est <see langword="SearchOption.SearchTopLevelOnly" />.</param>
      <param name="wildcards">Modèle permettant d'établir une correspondance entre les noms.</param>
      <returns>Collection en lecture seule des noms de chemin d'accès des sous-répertoires dans le répertoire spécifié.</returns>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">Un ou plusieurs des caractères génériques spécifiés ont une valeur <see langword="Nothing" />, une chaîne vide ou contiennent uniquement des espaces.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le dossier spécifié n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le répertoire spécifié pointe vers un fichier existant.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas les autorisations nécessaires.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectoryInfo(System.String)">
      <summary>Retourne un objet <see cref="T:System.IO.DirectoryInfo" /> pour le fichier spécifié.</summary>
      <param name="directory">
        <see langword="String" />. Chemin d'accès du répertoire.</param>
      <returns>Objet <see cref="T:System.IO.DirectoryInfo" /> pour le chemin spécifié.</returns>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Le chemin d'accès du répertoire contient un signe deux-points (:) ou n'a pas un format valide.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDriveInfo(System.String)">
      <summary>Retourne un objet <see cref="T:System.IO.DriveInfo" /> pour le fichier spécifié.</summary>
      <param name="drive">Lecteur à examiner.</param>
      <returns>Objet <see cref="T:System.IO.DriveInfo" /> pour le lecteur spécifié.</returns>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="drive" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFileInfo(System.String)">
      <summary>Retourne un objet <see cref="T:System.IO.FileInfo" /> pour le fichier spécifié.</summary>
      <param name="file">Nom et chemin d'accès du fichier.</param>
      <returns>Objet <see cref="T:System.IO.FileInfo" /> pour le fichier spécifié</returns>
      <exception cref="T:System.ArgumentException">Le chemin d'accès est mal formé. Par exemple, il contient des caractères non valides ou se compose uniquement d'espace blanc. Le nom du fichier contient une marque de barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.NotSupportedException">Le chemin d'accès contient le signe deux-points au milieu de la chaîne.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès est trop long.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas l'accès ACL (liste de contrôle d'accès) au fichier.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(System.String)">
      <summary>Retourne une collection en lecture seule de chaînes qui représentent le nom des fichiers d'un répertoire.</summary>
      <param name="directory">Répertoire dans lequel effectuer la recherche.</param>
      <returns>Collection en lecture seule de noms de fichiers issus du répertoire spécifié.</returns>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> est <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le dossier à rechercher n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="directory" /> pointe vers un fichier existant.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas les autorisations nécessaires.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>Retourne une collection en lecture seule de chaînes qui représentent le nom des fichiers d'un répertoire.</summary>
      <param name="directory">Répertoire dans lequel effectuer la recherche.</param>
      <param name="searchType">Inclure, ou non, les sous-dossiers. La valeur par défaut est <see langword="SearchOption.SearchTopLevelOnly" />.</param>
      <param name="wildcards">Modèle auquel correspondre.</param>
      <returns>Collection en lecture seule de noms de fichiers issus du répertoire spécifié.</returns>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> a la valeur <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le dossier à rechercher n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="directory" /> pointe vers un fichier existant.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas les autorisations nécessaires.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetName(System.String)">
      <summary>Analyse le nom du fichier à partir du chemin d'accès fourni.</summary>
      <param name="path">Obligatoire. Chemin d'accès à analyser. <see langword="String" />.</param>
      <returns>Nom de fichier à partir du chemin d'accès spécifié.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetParentPath(System.String)">
      <summary>Retourne le chemin d'accès parent du chemin d'accès fourni.</summary>
      <param name="path">Chemin d'accès à examiner.</param>
      <returns>Chemin d'accès parent du chemin d'accès fourni.</returns>
      <exception cref="T:System.ArgumentException">Le chemin d'accès n'a pas de chemin parent car il s'agit d'un chemin d'accès racine.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> a la valeur <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetTempFileName">
      <summary>Crée un fichier temporaire de zéro octet nommé de manière unique sur le disque et retourne le chemin d'accès complet de ce fichier.</summary>
      <returns>
        <see langword="String" /> contenant le chemin d'accès complet du fichier temporaire.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String)">
      <summary>Déplace un répertoire d'un emplacement à l'autre.</summary>
      <param name="sourceDirectoryName">Chemin d'accès au répertoire à déplacer.</param>
      <param name="destinationDirectoryName">Chemin d'accès au répertoire dans lequel le répertoire source est déplacé.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> ou <paramref name="destinationDirectoryName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le répertoire n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">La source est un répertoire racine ou le chemin source et le chemin cible sont identiques.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.InvalidOperationException">L'opération est cyclique.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas l'autorisation requise.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>Déplace un répertoire d'un emplacement à l'autre.</summary>
      <param name="sourceDirectoryName">Chemin d'accès au répertoire à déplacer.</param>
      <param name="destinationDirectoryName">Chemin d'accès au répertoire dans lequel le répertoire source est déplacé.</param>
      <param name="showUI">Spécifie s'il faut effectuer un suivi visuel de l'avancement de l'opération. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> ou <paramref name="destinationDirectoryName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le répertoire n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le répertoire cible existe déjà et <paramref name="overwrite" /> est défini à <see langword="False" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.InvalidOperationException">L'opération est cyclique.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas l'autorisation requise.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Déplace un répertoire d'un emplacement à l'autre.</summary>
      <param name="sourceDirectoryName">Chemin d'accès au répertoire à déplacer.</param>
      <param name="destinationDirectoryName">Chemin d'accès au répertoire dans lequel le répertoire source est déplacé.</param>
      <param name="showUI">Spécifie s'il faut effectuer un suivi visuel de l'avancement de l'opération. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="onUserCancel">Spécifie si oui ou non une exception est levée lorsque l'utilisateur annule l'opération. La valeur par défaut est <see langword="UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> ou <paramref name="destinationDirectoryName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le répertoire n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="onUserCancel" /> a la valeur <see langword="ThrowException" /> et un sous-répertoire du fichier ne peut pas être copié.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="onUserCancel" /> a la valeur <see langword="ThrowException" /> et l'utilisateur annule l'opération ou l'opération ne peut pas être effectuée.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.InvalidOperationException">L'opération est cyclique.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas l'autorisation requise.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,System.Boolean)">
      <summary>Déplace un répertoire d'un emplacement à l'autre.</summary>
      <param name="sourceDirectoryName">Chemin d'accès au répertoire à déplacer.</param>
      <param name="destinationDirectoryName">Chemin d'accès au répertoire dans lequel le répertoire source est déplacé.</param>
      <param name="overwrite">
        <see langword="True" /> si les répertoires existants doivent être remplacés ; sinon, <see langword="False" />. La valeur par défaut est <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> ou <paramref name="destinationDirectoryName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le répertoire n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le répertoire cible existe déjà et <paramref name="overwrite" /> est défini à <see langword="False" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.InvalidOperationException">L'opération est cyclique.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas l'autorisation requise.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String)">
      <summary>Déplace un fichier vers un nouvel emplacement.</summary>
      <param name="sourceFileName">Chemin d'accès au fichier à déplacer.</param>
      <param name="destinationFileName">Chemin d'accès au répertoire dans lequel le fichier doit être déplacé.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier source n'est pas valide ou n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>Déplace un fichier vers un nouvel emplacement.</summary>
      <param name="sourceFileName">Chemin d'accès au fichier à déplacer.</param>
      <param name="destinationFileName">Chemin d'accès au répertoire dans lequel le fichier doit être déplacé.</param>
      <param name="showUI">Spécifie s'il faut effectuer un suivi visuel de l'avancement de l'opération. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier source n'est pas valide ou n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Déplace un fichier vers un nouvel emplacement.</summary>
      <param name="sourceFileName">Chemin d'accès au fichier à déplacer.</param>
      <param name="destinationFileName">Chemin d'accès au répertoire dans lequel le fichier doit être déplacé.</param>
      <param name="showUI">Spécifie s'il faut effectuer un suivi visuel de l'avancement de l'opération. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="onUserCancel">Spécifie si oui ou non une exception est levée lorsque l'utilisateur annule l'opération. La valeur par défaut est <see langword="UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier source n'est pas valide ou n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="onUserCancel" /> a la valeur <see langword="ThrowException" /> et l'utilisateur a annulé l'opération ou une erreur d'E/S non spécifiée s'est produit.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,System.Boolean)">
      <summary>Déplace un fichier vers un nouvel emplacement.</summary>
      <param name="sourceFileName">Chemin d'accès au fichier à déplacer.</param>
      <param name="destinationFileName">Chemin d'accès au répertoire dans lequel le fichier doit être déplacé.</param>
      <param name="overwrite">
        <see langword="True" /> pour remplacer les fichiers existants ; sinon, <see langword="False" />. La valeur par défaut est <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier source n'est pas valide ou n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String)">
      <summary>La méthode <see langword="OpenTextFieldParser" /> vous permet de créer un objet <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> et d'analyser ainsi efficacement et facilement les fichiers texte structurés, comme les journaux. L'objet <see langword="TextFieldParser" /> peut être utilisé pour lire des fichiers délimités et à largeur fixe.</summary>
      <param name="file">Fichier à ouvrir avec <see langword="TextFieldParser" />.</param>
      <returns>
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> pour lire le fichier spécifié.</returns>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> a la valeur <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">Une ligne ne peut pas être analysée avec le format spécifié. Le message d’exception spécifie la ligne qui provoque l’exception, tandis que la propriété <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> est assignée au texte contenu dans la ligne.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String,System.Int32[])">
      <summary>La méthode <see langword="OpenTextFieldParser" /> vous permet de créer un objet <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> et d'analyser ainsi efficacement et facilement les fichiers texte structurés, comme les journaux. L'objet <see langword="TextFieldParser" /> peut être utilisé pour lire des fichiers délimités et à largeur fixe.</summary>
      <param name="file">Fichier à ouvrir avec <see langword="TextFieldParser" />.</param>
      <param name="fieldWidths">Largeur des champs.</param>
      <returns>
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> pour lire le fichier spécifié.</returns>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> a la valeur <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">Une ligne ne peut pas être analysée avec le format spécifié. Le message d’exception spécifie la ligne qui provoque l’exception, tandis que la propriété <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> est assignée au texte contenu dans la ligne.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String,System.String[])">
      <summary>La méthode <see langword="OpenTextFieldParser" /> vous permet de créer un objet <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> et d'analyser ainsi efficacement et facilement les fichiers texte structurés, comme les journaux. L'objet <see langword="TextFieldParser" /> peut être utilisé pour lire des fichiers délimités et à largeur fixe.</summary>
      <param name="file">Fichier à ouvrir avec <see langword="TextFieldParser" />.</param>
      <param name="delimiters">Séparateurs de champs.</param>
      <returns>
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> pour lire le fichier spécifié.</returns>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> a la valeur <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">Une ligne ne peut pas être analysée avec le format spécifié. Le message d’exception spécifie la ligne qui provoque l’exception, tandis que la propriété <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> est assignée au texte contenu dans la ligne.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(System.String)">
      <summary>Ouvre un objet <see cref="T:System.IO.StreamReader" /> à lire à partir d'un fichier.</summary>
      <param name="file">Fichier à lire.</param>
      <returns>Objet <see cref="T:System.IO.StreamReader" /> à lire à partir du fichier</returns>
      <exception cref="T:System.ArgumentException">Le nom de fichier se termine par une barre oblique inverse (\).</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier spécifié est introuvable.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour lire le fichier.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(System.String,System.Text.Encoding)">
      <summary>Ouvre un objet <see cref="T:System.IO.StreamReader" /> à lire à partir d'un fichier.</summary>
      <param name="file">Fichier à lire.</param>
      <param name="encoding">Encodage à utiliser pour le contenu du fichier. La valeur par défaut est ASCII.</param>
      <returns>Objet <see cref="T:System.IO.StreamReader" /> à lire à partir du fichier</returns>
      <exception cref="T:System.ArgumentException">Le nom de fichier se termine par une barre oblique inverse (\).</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier spécifié est introuvable.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour lire le fichier.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(System.String,System.Boolean)">
      <summary>Ouvre un objet <see cref="T:System.IO.StreamWriter" /> à écrire dans le fichier spécifié.</summary>
      <param name="file">Fichier dans lequel écrire.</param>
      <param name="append">
        <see langword="True" /> pour ajouter au contenu du fichier ; <see langword="False" /> pour remplacer le contenu du fichier. La valeur par défaut est <see langword="False" />.</param>
      <returns>Objet <see cref="T:System.IO.StreamWriter" /> à écrire dans le fichier spécifié.</returns>
      <exception cref="T:System.ArgumentException">Le nom de fichier se termine par une barre oblique finale.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)">
      <summary>Ouvre un <see cref="T:System.IO.StreamWriter" /> pour écrire dans le fichier spécifié.</summary>
      <param name="file">Fichier dans lequel écrire.</param>
      <param name="append">
        <see langword="True" /> pour ajouter au contenu du fichier  ; <see langword="False" /> pour remplacer le contenu du fichier. La valeur par défaut est <see langword="False" />.</param>
      <param name="encoding">Encodage à utiliser lors de l'écriture dans le fichier. La valeur par défaut est ASCII.</param>
      <returns>Objet <see cref="T:System.IO.StreamWriter" /> à écrire dans le fichier spécifié.</returns>
      <exception cref="T:System.ArgumentException">Le nom de fichier se termine par une barre oblique finale.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllBytes(System.String)">
      <summary>Retourne le contenu d'un fichier sous la forme d'un tableau d'octets.</summary>
      <param name="file">Fichier à lire.</param>
      <returns>Tableau <see langword="Byte" /> contenant le contenu du fichier.</returns>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> a la valeur <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.OutOfMemoryException">Il n'y a pas assez de mémoire pour écrire la chaîne dans la mémoire tampon.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(System.String)">
      <summary>Retourne le contenu d'un fichier texte sous forme de <see langword="String" />.</summary>
      <param name="file">Nom et chemin d'accès du fichier à lire.</param>
      <returns>
        <see langword="String" /> contenant le contenu du fichier.</returns>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> est <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.OutOfMemoryException">Il n'y a pas assez de mémoire pour écrire la chaîne dans la mémoire tampon.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(System.String,System.Text.Encoding)">
      <summary>Retourne le contenu d'un fichier texte sous forme de <see langword="String" />.</summary>
      <param name="file">Nom et chemin d'accès du fichier à lire.</param>
      <param name="encoding">Encodage de caractères à utiliser pour la lecture du fichier. La valeur par défaut est UTF-8.</param>
      <returns>
        <see langword="String" /> contenant le contenu du fichier.</returns>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> a la valeur <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.OutOfMemoryException">Il n'y a pas assez de mémoire pour écrire la chaîne dans la mémoire tampon.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameDirectory(System.String,System.String)">
      <summary>Renomme un répertoire.</summary>
      <param name="directory">Chemin d'accès et nom du répertoire à renommer.</param>
      <param name="newName">Nouveau nom du répertoire.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="newName" /> contient des informations de chemin d’accès.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> est <see langword="Nothing" />.  

ou - 
<paramref name="newName" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le répertoire n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Un fichier ou répertoire existe avec le nom spécifié dans <paramref name="newName" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas l'autorisation requise.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameFile(System.String,System.String)">
      <summary>Renomme un fichier.</summary>
      <param name="file">Fichier à renommer.</param>
      <param name="newName">Nouveau nom du fichier.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="newName" /> contient des informations relatives au chemin d’accès ou se termine par une barre oblique inverse (\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> a la valeur <see langword="Nothing" />.  

ou - 
<paramref name="newName" /> est <see langword="Nothing" /> ou est une chaîne vide.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Un fichier ou répertoire existe avec le nom spécifié dans <paramref name="newName" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas l'autorisation requise.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories">
      <summary>Obtient un objet qui fournit des propriétés pour accéder aux répertoires communément référencés.</summary>
      <returns>Cette propriété retourne l'objet <see cref="T:Microsoft.VisualBasic.FileIO.SpecialDirectories" /> de l'ordinateur.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllBytes(System.String,System.Byte[],System.Boolean)">
      <summary>Écrit des données dans un fichier binaire.</summary>
      <param name="file">Chemin d'accès et nom du fichier dans lequel écrire.</param>
      <param name="data">Données à écrire dans le fichier.</param>
      <param name="append">
        <see langword="True" /> pour ajouter au contenu du fichier  ; <see langword="False" /> pour remplacer le contenu du fichier. La valeur par défaut est <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> est <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.OutOfMemoryException">Il n'y a pas assez de mémoire pour écrire la chaîne dans la mémoire tampon.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(System.String,System.String,System.Boolean)">
      <summary>Écrit du texte dans un fichier.</summary>
      <param name="file">Fichier dans lequel écrire.</param>
      <param name="text">Texte à écrire dans le fichier.</param>
      <param name="append">
        <see langword="True" /> pour ajouter au contenu du fichier ; <see langword="False" /> pour remplacer le contenu du fichier. La valeur par défaut est <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> a la valeur <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.OutOfMemoryException">Il n'y a pas assez de mémoire pour écrire la chaîne dans la mémoire tampon.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)">
      <summary>Écrit du texte dans un fichier.</summary>
      <param name="file">Fichier dans lequel écrire.</param>
      <param name="text">Texte à écrire dans le fichier.</param>
      <param name="append">
        <see langword="True" /> pour ajouter au contenu du fichier ; <see langword="False" /> pour remplacer le contenu du fichier. La valeur par défaut est <see langword="False" />.</param>
      <param name="encoding">Encodage à utiliser lors de l'écriture dans le fichier. La valeur par défaut est UTF-8.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> a la valeur <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.OutOfMemoryException">Il n'y a pas assez de mémoire pour écrire la chaîne dans la mémoire tampon.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.RegistryProxy">
      <summary>Fournit des propriétés et des méthodes permettant de manipuler le Registre.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy">
      <summary>Fournit des propriétés utilisées pour accéder aux répertoires communément référencés.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.AllUsersApplicationData">
      <summary>Obtient un nom de chemin d'accès pointant sur le répertoire des données d'application pour tous les utilisateurs.</summary>
      <returns>Chemin d'accès au répertoire de données d'application pour tous les utilisateurs.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le chemin d'accès est vide, généralement parce que le système d'exploitation ne prend pas en charge le répertoire.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.CurrentUserApplicationData">
      <summary>Obtient un nom de chemin d'accès pointant sur le répertoire des données d'application pour l'utilisateur en cours.</summary>
      <returns>Chemin d'accès au répertoire de données d'application pour l'utilisateur en cours.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le chemin d'accès est vide, généralement parce que le système d'exploitation ne prend pas en charge le répertoire.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.Desktop">
      <summary>Obtient un nom de chemin d'accès pointant sur le répertoire Desktop.</summary>
      <returns>Chemin d'accès au répertoire Bureau.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le chemin d'accès est vide, généralement parce que le système d'exploitation ne prend pas en charge le répertoire.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.MyDocuments">
      <summary>Obtient un nom de chemin d'accès pointant vers le répertoire Mes documents.</summary>
      <returns>Chemin d'accès au répertoire Mes documents.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le chemin d'accès est vide, généralement parce que le système d'exploitation ne prend pas en charge le répertoire.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.MyMusic">
      <summary>Obtient un nom de chemin d'accès pointant sur le répertoire My Music.</summary>
      <returns>Chemin d'accès au répertoire Ma musique.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le chemin d'accès est vide, généralement parce que le système d'exploitation ne prend pas en charge le répertoire.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.MyPictures">
      <summary>Obtient un nom de chemin d'accès pointant sur le répertoire My Pictures.</summary>
      <returns>Chemin d'accès au répertoire Mes images.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le chemin d'accès est vide, généralement parce que le système d'exploitation ne prend pas en charge le répertoire.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.ProgramFiles">
      <summary>Obtient un chemin d’accès pointant sur le répertoire Program Files.</summary>
      <returns>Chemin d’accès au répertoire Program Files .</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le chemin d'accès est vide, généralement parce que le système d'exploitation ne prend pas en charge le répertoire.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.Programs">
      <summary>Obtient un nom de chemin d'accès pointant sur le répertoire Programs.</summary>
      <returns>Chemin d'accès au répertoire Programmes.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le chemin d'accès est vide, généralement parce que le système d'exploitation ne prend pas en charge le répertoire.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.Temp">
      <summary>Obtient un nom de chemin d'accès pointant sur le répertoire Temp.</summary>
      <returns>Chemin d'accès au répertoire Temp.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le chemin d'accès est vide, généralement parce que le système d'exploitation ne prend pas en charge le répertoire.</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.OpenAccess">
      <summary>Indique comment ouvrir un fichier lors de l'appel à des fonctions d'accès aux fichiers.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.Default">
      <summary>Accès en lecture et en écriture autorisé. Il s'agit de la valeur par défaut.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.Read">
      <summary>Accès en lecture autorisé.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.ReadWrite">
      <summary>Accès en lecture et en écriture autorisé.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.Write">
      <summary>Accès en écriture autorisé.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.OpenMode">
      <summary>Indique comment ouvrir un fichier lors de l'appel à des fonctions d'accès aux fichiers.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Append">
      <summary>Fichier ouvert pour être ajouté. Par défaut.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Binary">
      <summary>Fichier ouvert pour un accès binaire.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Input">
      <summary>Fichier ouvert pour un accès en lecture.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Output">
      <summary>Fichier ouvert pour un accès en écriture.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Random">
      <summary>Fichier ouvert pour un accès aléatoire.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.OpenShare">
      <summary>Indique comment ouvrir un fichier lors de l'appel à des fonctions d'accès aux fichiers.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.Default">
      <summary>
        <see langword="LockReadWrite" />. Il s'agit de la valeur par défaut.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.LockRead">
      <summary>Les autres processus ne peuvent pas lire le fichier.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.LockReadWrite">
      <summary>Les autres processus ne peuvent pas accéder en lecture ou écriture au fichier.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.LockWrite">
      <summary>Les autres processus ne peuvent pas écrire dans le fichier.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.Shared">
      <summary>Tout autre processus peut accéder en lecture ou écriture au fichier.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.SpcInfo">
      <summary>Cette classe prend en charge les fonctions Visual Basic <see langword="Print" /> et <see langword="PrintLine" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.SpcInfo.Count">
      <summary>Ce champ prend en charge les fonctions Visual Basic <see langword="Print" /> et <see langword="PrintLine" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Strings">
      <summary>Le module <see langword="Strings" /> contient les procédures utilisées pour effectuer des opérations de chaînes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Asc(System.Char)">
      <summary>Retourne une valeur entière représentant le code de caractère correspondant à un caractère.</summary>
      <param name="String">Obligatoire. Toute expression <see langword="Char" /> ou <see langword="String" /> valide. Si <paramref name="String" /> est une expression <see langword="String" />, seul le premier caractère de la chaîne est utilisé pour l'entrée. Si <paramref name="String" /> a la valeur <see langword="Nothing" /> ou ne contient aucun caractère, une erreur <see cref="T:System.ArgumentException" /> se produit.</param>
      <returns>Code de caractères correspondant à un caractère.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Asc(System.String)">
      <summary>Retourne une valeur entière représentant le code de caractère correspondant à un caractère.</summary>
      <param name="String">Obligatoire. Toute expression <see langword="Char" /> ou <see langword="String" /> valide. Si <paramref name="String" /> est une expression <see langword="String" />, seul le premier caractère de la chaîne est utilisé pour l'entrée. Si <paramref name="String" /> a la valeur <see langword="Nothing" /> ou ne contient aucun caractère, une erreur <see cref="T:System.ArgumentException" /> se produit.</param>
      <returns>Code de caractères correspondant à un caractère.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.AscW(System.Char)">
      <summary>Retourne une valeur entière représentant le code de caractère correspondant à un caractère.</summary>
      <param name="String">Obligatoire. Toute expression <see langword="Char" /> ou <see langword="String" /> valide. Si <paramref name="String" /> est une expression <see langword="String" />, seul le premier caractère de la chaîne est utilisé pour l'entrée. Si <paramref name="String" /> a la valeur <see langword="Nothing" /> ou ne contient aucun caractère, une erreur <see cref="T:System.ArgumentException" /> se produit.</param>
      <returns>Code de caractères correspondant à un caractère.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.AscW(System.String)">
      <summary>Retourne une valeur entière représentant le code de caractère correspondant à un caractère.</summary>
      <param name="String">Obligatoire. Toute expression <see langword="Char" /> ou <see langword="String" /> valide. Si <paramref name="String" /> est une expression <see langword="String" />, seul le premier caractère de la chaîne est utilisé pour l'entrée. Si <paramref name="String" /> a la valeur <see langword="Nothing" /> ou ne contient aucun caractère, une erreur <see cref="T:System.ArgumentException" /> se produit.</param>
      <returns>Code de caractères correspondant à un caractère.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
      <summary>Retourne le caractère associé au code de caractère spécifié.</summary>
      <param name="CharCode">Obligatoire. Expression <see langword="Integer" /> représentant l’<c>élément de code</c>, ou code de caractère, du caractère.</param>
      <returns>Le caractère associé au code de caractère spécifié.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="CharCode" /> &lt; 0 ou &gt; 255 pour <see langword="Chr" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
      <summary>Retourne le caractère associé au code de caractère spécifié.</summary>
      <param name="CharCode">Obligatoire. Expression <see langword="Integer" /> représentant l’<c>élément de code</c>, ou code de caractère, du caractère.</param>
      <returns>Le caractère associé au code de caractère spécifié.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="CharCode" /> &lt; -32768 ou &gt; 65535 pour <see langword="ChrW" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
      <summary>Retourne un tableau de base zéro et contenant un sous-ensemble d'un tableau de chaînes (<see langword="String" />) basé sur des critères de filtre spécifiés.</summary>
      <param name="Source">Obligatoire. Tableau unidimensionnel de chaînes dans lequel la recherche doit être effectuée.</param>
      <param name="Match">Obligatoire. Chaîne à rechercher.</param>
      <param name="Include">Optionnel. Valeur <see langword="Boolean" /> qui indique s'il faut retourner les sous-chaînes incluant ou excluant <paramref name="Match" />. Si <paramref name="Include" /> a la valeur <see langword="True" />, la fonction <see langword="Filter" /> retourne le sous-ensemble du tableau contenant <paramref name="Match" /> comme sous-chaîne. Si <paramref name="Include" /> a la valeur <see langword="False" />, la fonction <see langword="Filter" /> retourne le sous-ensemble du tableau ne contenant pas <paramref name="Match" /> comme sous-chaîne.</param>
      <param name="Compare">Optionnel. Valeur numérique indiquant le type de comparaison de chaîne à utiliser. Pour connaître les valeurs, consultez la rubrique « Paramètres ».</param>
      <returns>Un tableau de base zéro et contenant un sous-ensemble d’un tableau de chaînes (<see langword="String" />) basé sur des critères de filtre spécifiés.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Source" /> a la valeur <see langword="Nothing" /> ou n'est pas un tableau unidimensionnel.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
      <summary>Retourne un tableau de base zéro et contenant un sous-ensemble d'un tableau de chaînes (<see langword="String" />) basé sur des critères de filtre spécifiés.</summary>
      <param name="Source">Obligatoire. Tableau unidimensionnel de chaînes dans lequel la recherche doit être effectuée.</param>
      <param name="Match">Obligatoire. Chaîne à rechercher.</param>
      <param name="Include">Optionnel. Valeur <see langword="Boolean" /> qui indique s'il faut retourner les sous-chaînes incluant ou excluant <paramref name="Match" />. Si <paramref name="Include" /> a la valeur <see langword="True" />, la fonction <see langword="Filter" /> retourne le sous-ensemble du tableau contenant <paramref name="Match" /> comme sous-chaîne. Si <paramref name="Include" /> a la valeur <see langword="False" />, la fonction <see langword="Filter" /> retourne le sous-ensemble du tableau ne contenant pas <paramref name="Match" /> comme sous-chaîne.</param>
      <param name="Compare">Optionnel. Valeur numérique indiquant le type de comparaison de chaîne à utiliser. Pour connaître les valeurs, consultez la rubrique « Paramètres ».</param>
      <returns>Un tableau de base zéro et contenant un sous-ensemble d’un tableau de chaînes (<see langword="String" />) basé sur des critères de filtre spécifiés.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Source" /> a la valeur <see langword="Nothing" /> ou n'est pas un tableau unidimensionnel.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
      <summary>Retourne une chaîne mise en forme conformément aux instructions contenues dans une expression <see langword="String" /> de format.</summary>
      <param name="Expression">Obligatoire. Toute expression valide.</param>
      <param name="Style">Optionnel. Expression <see langword="String" /> de format nommée ou définie par l'utilisateur valide.</param>
      <returns>Une chaîne mise en forme conformément aux instructions contenues dans une expression <see langword="String" /> de format.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
      <summary>Retourne une expression sous forme de valeur monétaire utilisant le symbole monétaire défini dans le Panneau de configuration du système.</summary>
      <param name="Expression">Obligatoire. Expression à mettre en forme.</param>
      <param name="NumDigitsAfterDecimal">Optionnel. Valeur numérique indiquant le nombre de décimales affichées. La valeur par défaut est -1, ce qui indique que les paramètres régionaux de l’ordinateur sont utilisés.</param>
      <param name="IncludeLeadingDigit">Facultatif. Énumération <see cref="T:Microsoft.VisualBasic.TriState" /> qui indique si un zéro non significatif s'affiche pour les valeurs décimales. Consultez « Remarques » pour plus d'informations sur les valeurs.</param>
      <param name="UseParensForNegativeNumbers">Optionnel. Énumération <see cref="T:Microsoft.VisualBasic.TriState" /> qui indique si les valeurs négatives doivent ou non être placées entre parenthèses. Consultez « Remarques » pour plus d'informations sur les valeurs.</param>
      <param name="GroupDigits">Optionnel. Énumération <see cref="T:Microsoft.VisualBasic.TriState" /> qui indique si les nombres doivent ou non être regroupés en utilisant le délimiteur de groupe spécifié dans les paramètres régionaux de l'ordinateur. Consultez « Remarques » pour plus d'informations sur les valeurs.</param>
      <returns>Une expression sous forme de valeur monétaire utilisant le symbole monétaire défini dans le Panneau de configuration du système.</returns>
      <exception cref="T:System.ArgumentException">Le nombre de chiffres après la virgule est supérieur à 99.</exception>
      <exception cref="T:System.InvalidCastException">Le type n’est pas numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
      <summary>Retourne une expression de chaîne représentant une valeur de date/d'heure.</summary>
      <param name="Expression">Obligatoire. Expression <see langword="Date" /> à mettre en forme.</param>
      <param name="NamedFormat">Optionnel. Valeur numérique qui indique le format de date/d'heure utilisé. Si cette valeur est omise, <see langword="DateFormat.GeneralDate" /> est utilisé.</param>
      <returns>Une expression de chaîne représentant une valeur de date/d’heure.</returns>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="NamedFormat" /> n'est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
      <summary>Retourne une expression sous forme de nombre.</summary>
      <param name="Expression">Obligatoire. Expression à mettre en forme.</param>
      <param name="NumDigitsAfterDecimal">Facultatif. Valeur numérique indiquant le nombre de décimales affichées. La valeur par défaut est -1, ce qui indique que les paramètres régionaux de l’ordinateur sont utilisés.</param>
      <param name="IncludeLeadingDigit">Facultatif. Constante <see cref="T:Microsoft.VisualBasic.TriState" /> qui indique si un 0 non significatif s'affiche pour les valeurs décimales. Pour connaître les valeurs, consultez la rubrique « Paramètres ».</param>
      <param name="UseParensForNegativeNumbers">Optionnel. Constante <see cref="T:Microsoft.VisualBasic.TriState" /> qui indique si les valeurs négatives doivent ou non être placées entre parenthèses. Pour connaître les valeurs, consultez la rubrique « Paramètres ».</param>
      <param name="GroupDigits">Optionnel. Constante <see cref="T:Microsoft.VisualBasic.TriState" /> qui indique si les nombres sont regroupés ou non selon le délimiteur de groupe spécifié dans les paramètres régionaux. Pour connaître les valeurs, consultez la rubrique « Paramètres ».</param>
      <returns>Une expression sous forme de nombre.</returns>
      <exception cref="T:System.InvalidCastException">Le type n’est pas numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
      <summary>Retourne une expression au format pourcentage (c’est-à-dire multipliée par 100) avec le caractère de fin %.</summary>
      <param name="Expression">Obligatoire. Expression à mettre en forme.</param>
      <param name="NumDigitsAfterDecimal">Optionnel. Valeur numérique indiquant le nombre de positions affichées à droite du séparateur décimal. La valeur par défaut est -1, ce qui indique que les paramètres régionaux sont utilisés.</param>
      <param name="IncludeLeadingDigit">Facultatif. Constante <see cref="T:Microsoft.VisualBasic.TriState" /> qui indique si un zéro non significatif s’affiche pour les valeurs décimales. Pour connaître les valeurs, consultez la rubrique « Paramètres ».</param>
      <param name="UseParensForNegativeNumbers">Optionnel. Constante <see cref="T:Microsoft.VisualBasic.TriState" /> qui indique si les valeurs négatives doivent être mises entre parenthèses. Pour connaître les valeurs, consultez la rubrique « Paramètres ».</param>
      <param name="GroupDigits">Facultatif. Constante <see cref="T:Microsoft.VisualBasic.TriState" /> qui indique si les nombres sont regroupés ou non selon le délimiteur de groupe spécifié dans les paramètres régionaux. Pour connaître les valeurs, consultez la rubrique « Paramètres ».</param>
      <returns>Une expression au format pourcentage (c’est-à-dire multipliée par 100) avec le caractère de fin %.</returns>
      <exception cref="T:System.InvalidCastException">Le type n’est pas numérique.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.GetChar(System.String,System.Int32)">
      <summary>Retourne une valeur <see langword="Char" /> qui représente le caractère de l'index spécifié dans la chaîne fournie.</summary>
      <param name="str">Obligatoire. Toute expression <see langword="String" /> valide.</param>
      <param name="Index">Obligatoire. Expression <see langword="Integer" />. Index (de base 1) du caractère de <paramref name="str" /> à retourner.</param>
      <returns>Valeur <see langword="Char" /> qui représente le caractère de l'index spécifié dans la chaîne fournie.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="str" /> a la valeur <see langword="Nothing" />, <paramref name="Index" /> &lt; 1 ou <paramref name="Index" /> est supérieur à l’index du dernier caractère de <paramref name="str" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>Retourne un entier spécifiant la position de début de la première occurrence d'une chaîne à l'intérieur d'une autre.</summary>
      <param name="Start">Optionnel. Expression numérique qui définit la position de départ de chaque recherche. Si ce paramètre est omis, la recherche commence à la position du premier caractère. L'index de début est de base 1.</param>
      <param name="String1">Obligatoire. Expression <see langword="String" /> dans laquelle est effectuée la recherche.</param>
      <param name="String2">Obligatoire. Expression <see langword="String" /> recherchée.</param>
      <param name="Compare">Facultatif. Spécifie le type de comparaison de chaînes. Si <paramref name="Compare" /> est omis, le paramètre <see langword="Option Compare" /> détermine le type de comparaison.</param>
      <returns>If 
  La fonction InStr retourne 
 
                <paramref name="String1" /> est de longueur nulle ou <see langword="Nothing" /> 0 
 
                <paramref name="String2" /> est de longueur nulle ou <see langword="Nothing" /><paramref name="start" /><paramref name="String2" /> est introuvable. 
  0 
 
                <paramref name="String2" /> se trouve dans <paramref name="String1" /> Position où commence la correspondance 
 
                <paramref name="Start" /> &gt; longueur de <paramref name="String1" /> 0</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Start" /> &lt; 1.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>Retourne un entier spécifiant la position de début de la première occurrence d'une chaîne à l'intérieur d'une autre.</summary>
      <param name="String1">Obligatoire. Expression <see langword="String" /> dans laquelle est effectuée la recherche.</param>
      <param name="String2">Obligatoire. Expression <see langword="String" /> recherchée.</param>
      <param name="Compare">Optionnel. Spécifie le type de comparaison de chaînes. Si <paramref name="Compare" /> est omis, le paramètre <see langword="Option Compare" /> détermine le type de comparaison.</param>
      <returns>If 
  La fonction InStr retourne 
 
                <paramref name="String1" /> est de longueur nulle ou <see langword="Nothing" /> 0 
 
                <paramref name="String2" /> est de longueur nulle ou <see langword="Nothing" /> Position de départ de la recherche, qui correspond par défaut à la première position de caractère.  

 
                <paramref name="String2" /> est introuvable. 
  0 
 
                <paramref name="String2" /> se trouve dans <paramref name="String1" /> Position où commence la correspondance</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
      <summary>Retourne la position de la première occurrence d'une chaîne dans une autre, à partir du côté droit de la chaîne.</summary>
      <param name="StringCheck">Obligatoire. Expression String dans laquelle est effectuée la recherche.</param>
      <param name="StringMatch">Obligatoire. Expression String recherchée.</param>
      <param name="Start">Optionnel. Expression numérique définissant la position de départ de base 1 pour chaque recherche, en partant de la gauche de la chaîne. Si <paramref name="Start" /> est omis, la valeur -1 est utilisée, ce qui signifie que la recherche commence à la position du dernier caractère. La recherche se poursuit alors de droite à gauche.</param>
      <param name="Compare">Optionnel. Valeur numérique indiquant le type de comparaison à utiliser pour l'évaluation des sous-chaînes. Si ce paramètre est omis, une comparaison binaire est effectuée. Consultez la section « Paramètres » pour obtenir les valeurs.</param>
      <returns>If 
  Valeur retournée par la fonction InStrRev 
 
                <paramref name="StringCheck" /> est de longueur nulle 
  0 
 
                <paramref name="StringMatch" /> est de longueur nulle 
 
                <paramref name="Start" /><paramref name="StringMatch" /> est introuvable. 
  0 
 
                <paramref name="StringMatch" /> se trouve dans <paramref name="StringCheck" /> Position à laquelle la première correspondance est trouvée, à partir du côté droit de la chaîne.  

 
                <paramref name="Start" /> est supérieur à la longueur de <paramref name="StringMatch" />. 0</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Start" /> = 0 ou <paramref name="Start" /> &lt; -1.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)">
      <summary>Retourne une chaîne créée par la jonction de plusieurs sous-chaînes contenues dans un tableau.</summary>
      <param name="SourceArray">Obligatoire. Tableau unidimensionnel contenant les sous-chaînes qui doivent faire l'objet d'une jointure.</param>
      <param name="Delimiter">Optionnel. Chaîne quelconque, utilisée pour séparer les sous-chaînes dans la chaîne retournée. Si ce paramètre est omis, le caractère espace (" ") est utilisé. Si <paramref name="Delimiter" /> est une chaîne de longueur nulle ("") ou a la valeur <see langword="Nothing" />, tous les éléments de la liste sont concaténés sans délimiteurs.</param>
      <returns>Une chaîne créée par la jonction de plusieurs sous-chaînes contenues dans un tableau.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="SourceArray" /> n'est pas unidimensionnel.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Join(System.String[],System.String)">
      <summary>Retourne une chaîne créée par la jonction de plusieurs sous-chaînes contenues dans un tableau.</summary>
      <param name="SourceArray">Obligatoire. Tableau unidimensionnel contenant les sous-chaînes qui doivent faire l'objet d'une jointure.</param>
      <param name="Delimiter">Facultatif. Chaîne quelconque, utilisée pour séparer les sous-chaînes dans la chaîne retournée. Si ce paramètre est omis, le caractère espace (" ") est utilisé. Si <paramref name="Delimiter" /> est une chaîne de longueur nulle ("") ou a la valeur <see langword="Nothing" />, tous les éléments de la liste sont concaténés sans délimiteurs.</param>
      <returns>Une chaîne créée par la jonction de plusieurs sous-chaînes contenues dans un tableau.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="SourceArray" /> n'est pas unidimensionnel.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LCase(System.Char)">
      <summary>Retourne une chaîne ou un caractère converti en lettres minuscules.</summary>
      <param name="Value">Obligatoire. Toute expression <see langword="String" /> ou <see langword="Char" /> valide.</param>
      <returns>Une chaîne ou un caractère converti en lettres minuscules.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LCase(System.String)">
      <summary>Retourne une chaîne ou un caractère converti en lettres minuscules.</summary>
      <param name="Value">Obligatoire. Toute expression <see langword="String" /> ou <see langword="Char" /> valide.</param>
      <returns>Une chaîne ou un caractère converti en lettres minuscules.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)">
      <summary>Retourne une chaîne contenant un nombre spécifié de caractères en partant de la gauche d'une chaîne.</summary>
      <param name="str">Obligatoire. Expression <see langword="String" /> dont les caractères situés le plus à gauche sont retournés.</param>
      <param name="Length">Obligatoire. Expression <see langword="Integer" />. Expression numérique indiquant le nombre de caractères à retourner. Si ce paramètre a la valeur 0, une chaîne de longueur nulle ("") est retournée. Si sa valeur est supérieure ou égale au nombre de caractères de <paramref name="str" />, la chaîne est retournée dans son intégralité.</param>
      <returns>Une chaîne contenant un nombre spécifié de caractères en partant de la gauche d’une chaîne.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Length" /> &lt; 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)">
      <summary>Retourne un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d'octets requis pour stocker une variable.</summary>
      <param name="Expression">Toute expression <see langword="String" /> ou nom de variable valide. Si <paramref name="Expression" /> est de type <see langword="Object" />, la fonction <see langword="Len" /> retourne la taille telle qu'elle sera écrite dans le fichier par la fonction <see langword="FilePut" />.</param>
      <returns>Un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Byte)">
      <summary>Retourne un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d'octets requis pour stocker une variable.</summary>
      <param name="Expression">Toute expression <see langword="String" /> ou nom de variable valide. Si <paramref name="Expression" /> est de type <see langword="Object" />, la fonction <see langword="Len" /> retourne la taille telle qu'elle sera écrite dans le fichier par la fonction <see langword="FilePut" />.</param>
      <returns>Un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Char)">
      <summary>Retourne un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d'octets requis pour stocker une variable.</summary>
      <param name="Expression">Toute expression <see langword="String" /> ou nom de variable valide. Si <paramref name="Expression" /> est de type <see langword="Object" />, la fonction <see langword="Len" /> retourne la taille telle qu'elle sera écrite dans le fichier par la fonction <see langword="FilePut" />.</param>
      <returns>Un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)">
      <summary>Retourne un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d'octets requis pour stocker une variable.</summary>
      <param name="Expression">Toute expression <see langword="String" /> ou nom de variable valide. Si <paramref name="Expression" /> est de type <see langword="Object" />, la fonction <see langword="Len" /> retourne la taille telle qu'elle sera écrite dans le fichier par la fonction <see langword="FilePut" />.</param>
      <returns>Un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)">
      <summary>Retourne un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d'octets requis pour stocker une variable.</summary>
      <param name="Expression">Toute expression <see langword="String" /> ou nom de variable valide. Si <paramref name="Expression" /> est de type <see langword="Object" />, la fonction <see langword="Len" /> retourne la taille telle qu'elle sera écrite dans le fichier par la fonction <see langword="FilePut" />.</param>
      <returns>Un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Double)">
      <summary>Retourne un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d'octets requis pour stocker une variable.</summary>
      <param name="Expression">Toute expression <see langword="String" /> ou nom de variable valide. Si <paramref name="Expression" /> est de type <see langword="Object" />, la fonction <see langword="Len" /> retourne la taille telle qu'elle sera écrite dans le fichier par la fonction <see langword="FilePut" />.</param>
      <returns>Un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Int16)">
      <summary>Retourne un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d'octets requis pour stocker une variable.</summary>
      <param name="Expression">Toute expression <see langword="String" /> ou nom de variable valide. Si <paramref name="Expression" /> est de type <see langword="Object" />, la fonction <see langword="Len" /> retourne la taille telle qu'elle sera écrite dans le fichier par la fonction <see langword="FilePut" />.</param>
      <returns>Un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Int32)">
      <summary>Retourne un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d'octets requis pour stocker une variable.</summary>
      <param name="Expression">Toute expression <see langword="String" /> ou nom de variable valide. Si <paramref name="Expression" /> est de type <see langword="Object" />, la fonction <see langword="Len" /> retourne la taille telle qu'elle sera écrite dans le fichier par la fonction <see langword="FilePut" />.</param>
      <returns>Un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Int64)">
      <summary>Retourne un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d'octets requis pour stocker une variable.</summary>
      <param name="Expression">Toute expression <see langword="String" /> ou nom de variable valide. Si <paramref name="Expression" /> est de type <see langword="Object" />, la fonction <see langword="Len" /> retourne la taille telle qu'elle sera écrite dans le fichier par la fonction <see langword="FilePut" />.</param>
      <returns>Un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Object)">
      <summary>Retourne un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d'octets requis pour stocker une variable.</summary>
      <param name="Expression">Toute expression <see langword="String" /> ou nom de variable valide. Si <paramref name="Expression" /> est de type <see langword="Object" />, la fonction <see langword="Len" /> retourne la taille telle qu'elle sera écrite dans le fichier par la fonction <see langword="FilePut" />.</param>
      <returns>Un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.SByte)">
      <summary>Retourne un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d'octets requis pour stocker une variable.</summary>
      <param name="Expression">Toute expression <see langword="String" /> ou nom de variable valide. Si <paramref name="Expression" /> est de type <see langword="Object" />, la fonction <see langword="Len" /> retourne la taille telle qu'elle sera écrite dans le fichier par la fonction <see langword="FilePut" />.</param>
      <returns>Un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Single)">
      <summary>Retourne un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d'octets requis pour stocker une variable.</summary>
      <param name="Expression">Toute expression <see langword="String" /> ou nom de variable valide. Si <paramref name="Expression" /> est de type <see langword="Object" />, la fonction <see langword="Len" /> retourne la taille telle qu'elle sera écrite dans le fichier par la fonction <see langword="FilePut" />.</param>
      <returns>Un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.String)">
      <summary>Retourne un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d'octets requis pour stocker une variable.</summary>
      <param name="Expression">Toute expression <see langword="String" /> ou nom de variable valide. Si <paramref name="Expression" /> est de type <see langword="Object" />, la fonction <see langword="Len" /> retourne la taille telle qu'elle sera écrite dans le fichier par la fonction <see langword="FilePut" />.</param>
      <returns>Un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)">
      <summary>Retourne un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d'octets requis pour stocker une variable.</summary>
      <param name="Expression">Toute expression <see langword="String" /> ou nom de variable valide. Si <paramref name="Expression" /> est de type <see langword="Object" />, la fonction <see langword="Len" /> retourne la taille telle qu'elle sera écrite dans le fichier par la fonction <see langword="FilePut" />.</param>
      <returns>Un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)">
      <summary>Retourne un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d'octets requis pour stocker une variable.</summary>
      <param name="Expression">Toute expression <see langword="String" /> ou nom de variable valide. Si <paramref name="Expression" /> est de type <see langword="Object" />, la fonction <see langword="Len" /> retourne la taille telle qu'elle sera écrite dans le fichier par la fonction <see langword="FilePut" />.</param>
      <returns>Un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)">
      <summary>Retourne un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d'octets requis pour stocker une variable.</summary>
      <param name="Expression">Toute expression <see langword="String" /> ou nom de variable valide. Si <paramref name="Expression" /> est de type <see langword="Object" />, la fonction <see langword="Len" /> retourne la taille telle qu'elle sera écrite dans le fichier par la fonction <see langword="FilePut" />.</param>
      <returns>Un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)">
      <summary>Retourne une chaîne alignée à gauche contenant la chaîne spécifiée ajustée à la longueur spécifiée.</summary>
      <param name="Source">Obligatoire. Expression <see langword="String" />. Nom de la variable chaîne.</param>
      <param name="Length">Obligatoire. Expression <see langword="Integer" />. Longueur de la chaîne retournée.</param>
      <returns>Une chaîne alignée à gauche contenant la chaîne spécifiée ajustée à la longueur spécifiée.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LTrim(System.String)">
      <summary>Retourne une chaîne contenant la copie d'une chaîne spécifiée sans espaces à gauche (<see langword="LTrim" />), sans espaces à droite (<see langword="RTrim" />) ou sans espaces à droite ni à gauche (<see langword="Trim" />).</summary>
      <param name="str">Obligatoire. Toute expression <see langword="String" /> valide.</param>
      <returns>Une chaîne contenant la copie d’une chaîne spécifiée sans espaces à gauche (<see langword="LTrim" />), sans espaces à droite (<see langword="RTrim" />) ou sans espaces à droite ni à gauche (<see langword="Trim" />).</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)">
      <summary>Retourne une chaîne contenant tous les caractères à partir d'un emplacement spécifié dans une chaîne.</summary>
      <param name="str">Obligatoire. Expression <see langword="String" /> à partir de laquelle les caractères sont retournés.</param>
      <param name="Start">Obligatoire. Expression <see langword="Integer" />. Position de départ des caractères à retourner. Si <paramref name="Start" /> est supérieur au nombre de caractères de <paramref name="str" />, la fonction <see langword="Mid" /> retourne une chaîne de longueur nulle (""). <paramref name="Start" /> est de base 1.</param>
      <returns>Chaîne qui se compose de tous les caractères à partir de l'emplacement spécifié dans la chaîne.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Start" /> &lt;= 0 ou <paramref name="Length" /> &lt; 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
      <summary>Retourne une chaîne contenant un nombre spécifié de caractères à partir d'un emplacement spécifié dans une chaîne.</summary>
      <param name="str">Obligatoire. Expression <see langword="String" /> à partir de laquelle les caractères sont retournés.</param>
      <param name="Start">Obligatoire. Expression <see langword="Integer" />. Position de départ des caractères à retourner. Si <paramref name="Start" /> est supérieur au nombre de caractères de <paramref name="str" />, la fonction <see langword="Mid" /> retourne une chaîne de longueur nulle (""). <paramref name="Start" /> est de base 1.</param>
      <param name="Length">Optionnel. Expression <see langword="Integer" />. Nombre de caractères à retourner. Si ce paramètre est omis ou s'il y a moins de <paramref name="Length" /> caractères dans le texte (y compris le caractère situé à la position <paramref name="Start" />), tous les caractères de la position de départ à la fin de la chaîne sont retournés.</param>
      <returns>Chaîne qui indique le nombre spécifié de caractères à partir de l'emplacement spécifié dans la chaîne.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Start" /> &lt;= 0 ou <paramref name="Length" /> &lt; 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
      <summary>Retourne une chaîne dans laquelle une sous-chaîne spécifiée a été remplacée par une autre sous-chaîne, un nombre de fois déterminé.</summary>
      <param name="Expression">Obligatoire. Expression de chaîne contenant la sous-chaîne à remplacer.</param>
      <param name="Find">Obligatoire. Sous-chaîne recherchée.</param>
      <param name="Replacement">Obligatoire. Sous-chaîne de remplacement.</param>
      <param name="Start">Optionnel. Positionnez dans <paramref name="Expression" /> qui démarre une sous-chaîne utilisée pour le remplacement. La valeur de retour de <see langword="Replace" /> est une chaîne qui commence à <paramref name="Start" />, avec les substitutions appropriées. Si cet argument est omis, la position 1 est utilisée par défaut.</param>
      <param name="Count">Optionnel. Nombre de remplacements de la sous-chaîne à effectuer. Si cet argument est omis, la valeur par défaut est -1, ce qui signifie « faire tous les remplacements possibles ».</param>
      <param name="Compare">Facultatif. Valeur numérique indiquant le type de comparaison à utiliser pour l'évaluation des sous-chaînes. Consultez la section « Paramètres » pour obtenir les valeurs.</param>
      <returns>
        <see langword="Replace" /> retourne les valeurs suivantes.  
  If 
  Valeur retournée par la fonction Replace 
 <paramref name="Find" /> est de longueur nulle ou <see langword="Nothing" /> Copie de <paramref name="Expression" /><paramref name="Replace" /> est de longueur nulle 
  Copie de <paramref name="Expression" /> sans occurrence de <paramref name="Find" /><paramref name="Expression" /> est de longueur nulle ou <see langword="Nothing" />, ou <paramref name="Start" /> est supérieur à la longueur de <paramref name="Expression" /><see langword="Nothing" />L'argument <paramref name="Count" /> a la valeur 0 
  Copie de <paramref name="Expression" /></returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Count" /> &lt; -1 ou <paramref name="Start" /> &lt;= 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)">
      <summary>Retourne une chaîne contenant un nombre spécifié de caractères depuis la partie droite d'une chaîne.</summary>
      <param name="str">Obligatoire. Expression <see langword="String" /> dont les caractères situés le plus à droite sont retournés.</param>
      <param name="Length">Obligatoire. <see langword="Integer" />. Expression numérique indiquant le nombre de caractères à retourner. Si ce paramètre a la valeur 0, une chaîne de longueur nulle ("") est retournée. Si sa valeur est supérieure ou égale au nombre de caractères de <paramref name="str" />, la chaîne est retournée dans son intégralité.</param>
      <returns>Une chaîne contenant un nombre spécifié de caractères depuis la partie droite d’une chaîne.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Length" /> &lt; 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)">
      <summary>Retourne une chaîne alignée à droite contenant la chaîne spécifiée ajustée à la longueur spécifiée.</summary>
      <param name="Source">Obligatoire. Expression <see langword="String" />. Nom de la variable chaîne.</param>
      <param name="Length">Obligatoire. Expression <see langword="Integer" />. Longueur de la chaîne retournée.</param>
      <returns>Une chaîne alignée à droite contenant la chaîne spécifiée ajustée à la longueur spécifiée.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.RTrim(System.String)">
      <summary>Retourne une chaîne contenant la copie d'une chaîne spécifiée sans espaces à gauche (<see langword="LTrim" />), sans espaces à droite (<see langword="RTrim" />) ou sans espaces à droite ni à gauche (<see langword="Trim" />).</summary>
      <param name="str">Obligatoire. Toute expression <see langword="String" /> valide.</param>
      <returns>Une chaîne contenant la copie d’une chaîne spécifiée sans espaces à gauche (<see langword="LTrim" />), sans espaces à droite (<see langword="RTrim" />) ou sans espaces à droite ni à gauche (<see langword="Trim" />).</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Space(System.Int32)">
      <summary>Retourne une chaîne composée d'un nombre spécifié d'espaces.</summary>
      <param name="Number">Obligatoire. Expression <see langword="Integer" />. Nombre d'espaces voulu dans la chaîne.</param>
      <returns>Une chaîne composée d’un nombre spécifié d’espaces.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> &lt; 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
      <summary>Retourne un tableau à une dimension de base zéro et contenant le nombre spécifié de sous-chaînes.</summary>
      <param name="Expression">Obligatoire. Expression <see langword="String" /> contenant des sous-chaînes et des délimiteurs.</param>
      <param name="Delimiter">Optionnel. Tout caractère utilisé pour identifier les limites des sous-chaînes. Si <paramref name="Delimiter" /> est omis, le caractère espace (" ") est utilisé par défaut comme délimiteur.</param>
      <param name="Limit">Optionnel. Nombre maximal de sous-chaînes à obtenir après fractionnement de la chaîne d'entrée. La valeur par défaut, -1, indique que la chaîne d’entrée doit être fractionnée à chaque occurrence de la chaîne <paramref name="Delimiter" />.</param>
      <param name="Compare">Optionnel. Valeur numérique indiquant la comparaison à utiliser pour l'évaluation des sous-chaînes. Pour connaître les valeurs, consultez la rubrique « Paramètres ».</param>
      <returns>Tableau<see langword="String" /> . Si <paramref name="Expression" /> est une chaîne de longueur nulle (""), <see langword="Split" /> retourne un tableau à un seul élément qui contient une chaîne de longueur nulle. Si <paramref name="Delimiter" /> est une chaîne de longueur nulle, ou s'il n'apparaît nulle part dans <paramref name="Expression" />, <see langword="Split" /> retourne un tableau à un seul élément qui contient la chaîne <paramref name="Expression" /> dans son intégralité.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>Retourne -1, 0 ou 1, à partir du résultat d'une comparaison de chaînes.</summary>
      <param name="String1">Obligatoire. Toute expression <see langword="String" /> valide.</param>
      <param name="String2">Obligatoire. Toute expression <see langword="String" /> valide.</param>
      <param name="Compare">Facultatif. Spécifie le type de comparaison de chaînes. Si <paramref name="Compare" /> est omis, le paramètre <see langword="Option Compare" /> détermine le type de comparaison.</param>
      <returns>La fonction <see langword="StrComp" /> retourne les valeurs suivantes :  
  If 
  La fonction StrComp retourne 
 <paramref name="String1" /> se situe avant <paramref name="String2" /> -1 
 <paramref name="String1" /> est égal à <paramref name="String2" />. 0 
 <paramref name="String1" /> se situe après <paramref name="String2" /> 1</returns>
      <exception cref="T:System.ArgumentException">La valeur <paramref name="Compare" /> n'est pas valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
      <summary>Retourne une chaîne convertie comme spécifié.</summary>
      <param name="str">Obligatoire. Expression <see langword="String" /> à convertir.</param>
      <param name="Conversion">Obligatoire. Membre <see cref="T:Microsoft.VisualBasic.VbStrConv" />. Valeur d'énumération qui spécifie le type de conversion à effectuer.</param>
      <param name="LocaleID">Optionnel. Valeur <see langword="LocaleID" />, si différente de la valeur <see langword="LocaleID" /> du système. (La valeur <see langword="LocaleID" /> du système est la valeur par défaut.)</param>
      <returns>Une chaîne convertie comme spécifié.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="LocaleID" />, <paramref name="Conversion" /> &lt; 0 ou &gt; 2048 non pris en charge, ou conversion non prise en charge pour les paramètres régionaux spécifiés.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)">
      <summary>Retourne une chaîne ou un objet constitué du caractère spécifié répété le nombre de fois spécifié.</summary>
      <param name="Number">Obligatoire. Expression <see langword="Integer" />. Longueur de la chaîne à retourner.</param>
      <param name="Character">Obligatoire. Toute expression <see langword="Char" />, <see langword="String" /> ou <see langword="Object" /> valide. Seul le premier caractère de l'expression sera utilisé. Si le caractère est de type <see langword="Object" />, il doit contenir une valeur <see langword="Char" /> ou <see langword="String" />.</param>
      <returns>Une chaîne ou un objet constitué du caractère spécifié répété le nombre de fois spécifié.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> est inférieur à 0 ou le type <paramref name="Character" /> n'est pas valide.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Character" /> est <see langword="Nothing" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)">
      <summary>Retourne une chaîne ou un objet constitué du caractère spécifié répété le nombre de fois spécifié.</summary>
      <param name="Number">Obligatoire. Expression <see langword="Integer" />. Longueur de la chaîne à retourner.</param>
      <param name="Character">Obligatoire. Toute expression <see langword="Char" />, <see langword="String" /> ou <see langword="Object" /> valide. Seul le premier caractère de l'expression sera utilisé. Si le caractère est de type <see langword="Object" />, il doit contenir une valeur <see langword="Char" /> ou <see langword="String" />.</param>
      <returns>Une chaîne ou un objet constitué du caractère spécifié répété le nombre de fois spécifié.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> est inférieur à 0 ou le type <paramref name="Character" /> n'est pas valide.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Character" /> est <see langword="Nothing" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)">
      <summary>Retourne une chaîne ou un objet constitué du caractère spécifié répété le nombre de fois spécifié.</summary>
      <param name="Number">Obligatoire. Expression <see langword="Integer" />. Longueur de la chaîne à retourner.</param>
      <param name="Character">Obligatoire. Toute expression <see langword="Char" />, <see langword="String" /> ou <see langword="Object" /> valide. Seul le premier caractère de l'expression sera utilisé. Si le caractère est de type <see langword="Object" />, il doit contenir une valeur <see langword="Char" /> ou <see langword="String" />.</param>
      <returns>Une chaîne ou un objet constitué du caractère spécifié répété le nombre de fois spécifié.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> est inférieur à 0 ou le type <paramref name="Character" /> n'est pas valide.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Character" /> a la valeur <see langword="Nothing" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrReverse(System.String)">
      <summary>Retourne une chaîne dans laquelle l'ordre des caractères d'une chaîne donnée a été inversé.</summary>
      <param name="Expression">Obligatoire. Expression de chaîne dont les caractères doivent être inversés. Si <paramref name="Expression" /> est une chaîne de longueur nulle (""), une chaîne de longueur nulle est retournée.</param>
      <returns>Une chaîne dans laquelle l’ordre des caractères d’une chaîne donnée a été inversé.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Trim(System.String)">
      <summary>Retourne une chaîne contenant la copie d'une chaîne spécifiée sans espaces à gauche (<see langword="LTrim" />), sans espaces à droite (<see langword="RTrim" />) ou sans espaces à droite ni à gauche (<see langword="Trim" />).</summary>
      <param name="str">Obligatoire. Toute expression <see langword="String" /> valide.</param>
      <returns>Une chaîne contenant la copie d’une chaîne spécifiée sans espaces à gauche (<see langword="LTrim" />), sans espaces à droite (<see langword="RTrim" />) ou sans espaces à droite ni à gauche (<see langword="Trim" />).</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.UCase(System.Char)">
      <summary>Retourne une chaîne ou un caractère contenant la chaîne spécifiée convertie en majuscules.</summary>
      <param name="Value">Obligatoire. Toute expression <see langword="String" /> ou <see langword="Char" /> valide.</param>
      <returns>Une chaîne ou un caractère contenant la chaîne spécifiée convertie en majuscules.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.UCase(System.String)">
      <summary>Retourne une chaîne ou un caractère contenant la chaîne spécifiée convertie en majuscules.</summary>
      <param name="Value">Obligatoire. Toute expression <see langword="String" /> ou <see langword="Char" /> valide.</param>
      <returns>Une chaîne ou un caractère contenant la chaîne spécifiée convertie en majuscules.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.TabInfo">
      <summary>Cette classe prend en charge les fonctions Visual Basic <see langword="Print" /> et <see langword="PrintLine" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TabInfo.Column">
      <summary>Ce champ prend en charge les fonctions Visual Basic <see langword="Print" /> et <see langword="PrintLine" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.TriState">
      <summary>Indique une valeur Boolean ou si la valeur par défaut doit être utilisée lors de l'appel de fonctions liées au format des nombres.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TriState.False">
      <summary>False. La valeur numérique de ce membre est 0.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TriState.True">
      <summary>True. La valeur numérique de ce membre est -1.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TriState.UseDefault">
      <summary>Paramètre par défaut. La valeur numérique de ce membre est -2.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.VariantType">
      <summary>Indique le type d'un objet variant, retourné par la fonction <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Array">
      <summary>Array. Ce membre est équivalent à la constante Visual Basic <see langword="vbArray" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Boolean">
      <summary>
        <see langword="Boolean" />. (<see langword="True" /> ou <see langword="False" />). Ce membre est équivalent à la constante <see langword="vbBoolean" /> de Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Byte">
      <summary>
        <see langword="Byte" />. (0 à 255) Ce membre est équivalent à la constante Visual Basic <see langword="vbByte" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Char">
      <summary>
        <see langword="Char" />. (0 à 65535) Ce membre est équivalent à la constante Visual Basic <see langword="vbChar" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Currency">
      <summary>Currency. Ce membre est équivalent à la constante Visual Basic <see langword="vbCurrency" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.DataObject">
      <summary>DataObject.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Date">
      <summary>
        <see langword="Date" />. (Du 1er janvier 0001 0:00:00 au 31 décembre 9999 23:59:59.) Ce membre est équivalent à la constante Visual Basic <see langword="vbDate" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Decimal">
      <summary>
        <see langword="Decimal" />. (0 à +/-79,228,162,514,264,337,593,543,950,335 sans virgule décimale ; 0 à +/-7,9228162514264337593543950335 avec 28 chiffres après la décimale ; le plus petit nombre différent de zéro est +/-0,0000000000000000000000000001.) Ce membre est équivalent à la constante Visual Basic <see langword="vbDecimal" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Double">
      <summary>
        <see langword="Double" />. (-1.79769313486231E+308 à -4.94065645841247E-324 pour les valeurs négatives ; 4,94065645841247E-324 à 1,79769313486231E+308 pour les valeurs positives.) Ce membre est équivalent à la constante Visual Basic <see langword="vbDouble" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Empty">
      <summary>Référence null. Ce membre est équivalent à la constante Visual Basic <see langword="vbEmpty" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Error">
      <summary>
        <see cref="T:System.Exception" />
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Integer">
      <summary>
        <see langword="Integer" />. (-2,147,483,648 à 2,147,483,647). Ce membre est équivalent à la constante Visual Basic <see langword="vbInteger" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Long">
      <summary>
        <see langword="Long" />. (–9 223 372 036 854 775 808 à 9 223 372 036 854 775 807) Ce membre est équivalent à la constante Visual Basic <see langword="vbLong" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Null">
      <summary>Objet null. Ce membre est équivalent à la constante Visual Basic <see langword="vbNull" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Object">
      <summary>Tout type peut être stocké dans une variable de type <see langword="Object" />. Ce membre est équivalent à la constante Visual Basic <see langword="vbObject" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Short">
      <summary>
        <see langword="Short" />. (–32 768 à 32 767)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Single">
      <summary>
        <see langword="Single" />. (-3.402823E+38 à -1.401298E-45 pour les valeurs négatives ; 1,401298E-45 à 3,402823E+38 pour les valeurs positives). Ce membre est équivalent à la constante Visual Basic <see langword="vbSingle" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.String">
      <summary>
        <see langword="String" />. (0 à environ 2 milliards de caractères Unicode). Ce membre est équivalent à la constante Visual Basic <see langword="vbString" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.UserDefinedType">
      <summary>Type défini par l'utilisateur. Chaque membre de la structure a une plage déterminée par son type de données et indépendante des plages des autres membres. Ce membre est équivalent à la constante Visual Basic <see langword="vbUserDefinedType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Variant">
      <summary>
        <see langword="Variant" />. Ce membre est équivalent à la constante Visual Basic <see langword="vbVariant" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.VBFixedArrayAttribute">
      <summary>Indique qu'un tableau dans une structure ou une variable non locale doit être traité comme un tableau de longueur fixe.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBFixedArrayAttribute.#ctor(System.Int32)">
      <summary>Initialise la valeur de la propriété <see langword="Bounds" />.</summary>
      <param name="UpperBound1">Initialise la valeur du champ supérieur, qui représente la taille de la première dimension du tableau.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.VBFixedArrayAttribute.#ctor(System.Int32,System.Int32)">
      <summary>Initialise la valeur de la propriété <see langword="Bounds" />.</summary>
      <param name="UpperBound1">Initialise la valeur du champ supérieur, qui représente la taille de la première dimension du tableau.</param>
      <param name="UpperBound2">Initialise la valeur du champ supérieur, qui représente la taille de la deuxième dimension du tableau.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.VBFixedArrayAttribute.Bounds">
      <summary>Retourne les limites du tableau.</summary>
      <returns>Contient un tableau d'entiers, qui représente les limites du tableau.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.VBFixedArrayAttribute.Length">
      <summary>Retourne la taille du tableau.</summary>
      <returns>Contient un entier qui représente le nombre d'éléments dans le tableau.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.VBFixedStringAttribute">
      <summary>Indique qu'une chaîne doit être traitée comme si elle était de longueur fixe.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBFixedStringAttribute.#ctor(System.Int32)">
      <summary>Initialise la valeur du champ <see langword="SizeConst" />.</summary>
      <param name="Length">Longueur de la chaîne fixe.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.VBFixedStringAttribute.Length">
      <summary>Obtient la longueur de la chaîne.</summary>
      <returns>Longueur de la chaîne.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.VBMath">
      <summary>Le module <see langword="VbMath" /> contient les procédures utilisées pour effectuer des opérations mathématiques.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Randomize">
      <summary>Initialise le générateur de nombres aléatoires.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Randomize(System.Double)">
      <summary>Initialise le générateur de nombres aléatoires.</summary>
      <param name="Number">Optionnel. <see langword="Object" /> ou toute expression numérique valide.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Rnd">
      <summary>Retourne un nombre aléatoire de type <see langword="Single" />.</summary>
      <returns>Le nombre aléatoire suivant dans la série.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Rnd(System.Single)">
      <summary>Retourne un nombre aléatoire de type <see langword="Single" />.</summary>
      <param name="Number">Facultatif. Une valeur <see langword="Single" /> ou toute expression <see langword="Single" /> valide.</param>
      <returns>Si le nombre est inférieur à zéro, Rnd génère même nombre à chaque fois, en utilisant l'argument <paramref name="Number" />comme valeur initiale. Si le nombre est supérieur à zéro, Rnd génère le nombre aléatoire suivant dans la séquence. Si le nombre est égal à zéro, Rnd génère le dernier nombre généré. Si le nombre n'est pas fourni, Rnd génère le nombre aléatoire suivant dans la séquence.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.VbStrConv">
      <summary>Indique le type de conversion à exécuter lors de l’appel de la fonction <see langword="StrConv" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Hiragana">
      <summary>Convertit les caractères Katakana dans la chaîne en caractères Hiragana . S’applique aux paramètres régionaux japonais uniquement. Ce membre est équivalent à la constante Visual Basic <see langword="vbHiragana" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Katakana">
      <summary>Convertit les caractères Hiragana dans la chaîne en caractères Katakana. S’applique aux paramètres régionaux japonais uniquement. Ce membre est équivalent à la constante Visual Basic <see langword="vbKatakana" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.LinguisticCasing">
      <summary>Convertit la chaîne depuis les règles de système de fichiers pour la casse en règles linguistiques. Ce membre est équivalent à la constante Visual Basic <see langword="vbLinguisticCasing" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Lowercase">
      <summary>Convertit la chaîne spécifiée en minuscules. Ce membre est équivalent à la constante Visual Basic <see langword="vbLowerCase" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Narrow">
      <summary>Convertit des caractères larges (double octet) dans la chaîne en caractères étroits (simple octet). S’applique aux paramètres régionaux asiatiques. Ce membre est équivalent à la constante Visual Basic <see langword="vbNarrow" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.None">
      <summary>N’exécute aucune conversion.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.ProperCase">
      <summary>Convertit la première lettre de chaque mot de la chaîne en majuscule. Ce membre est équivalent à la constante Visual Basic <see langword="vbProperCase" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.SimplifiedChinese">
      <summary>Convertit la chaîne en caractères Chinois simplifié. Ce membre est équivalent à la constante Visual Basic <see langword="vbSimplifiedChinese" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.TraditionalChinese">
      <summary>Convertit la chaîne en caractères Chinois traditionnel. Ce membre est équivalent à la constante Visual Basic <see langword="vbTraditionalChinese" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Uppercase">
      <summary>Convertit la chaîne spécifiée en majuscules. Ce membre est équivalent à la constante Visual Basic <see langword="vbUpperCase" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Wide">
      <summary>Convertit des caractères étroits (simple octet) dans la chaîne en caractères larges (double octet). S’applique aux paramètres régionaux asiatiques. Ce membre est équivalent à la constante Visual Basic <see langword="vbWide" />. La conversion peut utiliser la forme de normalisation C même si un caractère d’entrée est déjà en pleine chasse. Par exemple, la chaîne « は゛ » (qui est déjà en pleine chasse) est normalisée en « ば ». Consultez Unicode normalization forms.</summary>
    </member>
  </members>
</doc>