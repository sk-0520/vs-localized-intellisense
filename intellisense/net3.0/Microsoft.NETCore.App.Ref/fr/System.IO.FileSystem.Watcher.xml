<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.IO.FileSystem.Watcher</name>
  </assembly>
  <members>
    <member name="T:System.IO.ErrorEventArgs">
      <summary>Fournit des données pour l'événement <see cref="E:System.IO.FileSystemWatcher.Error" />.</summary>
    </member>
    <member name="M:System.IO.ErrorEventArgs.#ctor(System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IO.ErrorEventArgs" />.</summary>
      <param name="exception">
        <see cref="T:System.Exception" /> représentant l’erreur qui s’est produite.</param>
    </member>
    <member name="M:System.IO.ErrorEventArgs.GetException">
      <summary>Obtient <see cref="T:System.Exception" /> représentant l’erreur qui s’est produite.</summary>
      <returns>
        <see cref="T:System.Exception" /> représentant l’erreur qui s’est produite.</returns>
    </member>
    <member name="T:System.IO.ErrorEventHandler">
      <summary>Représente la méthode destinée à gérer l’événement <see cref="E:System.IO.FileSystemWatcher.Error" /> d’un objet <see cref="T:System.IO.FileSystemWatcher" />.</summary>
      <param name="sender">Source de l'événement.</param>
      <param name="e">Objet <see cref="T:System.IO.ErrorEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="T:System.IO.FileSystemEventArgs">
      <summary>Fournit des données pour les événements de répertoire : <see cref="E:System.IO.FileSystemWatcher.Changed" />, <see cref="E:System.IO.FileSystemWatcher.Created" />, <see cref="E:System.IO.FileSystemWatcher.Deleted" />.</summary>
    </member>
    <member name="M:System.IO.FileSystemEventArgs.#ctor(System.IO.WatcherChangeTypes,System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IO.FileSystemEventArgs" />.</summary>
      <param name="changeType">Une des valeurs <see cref="T:System.IO.WatcherChangeTypes" /> qui représente le type de modification détecté dans le système de fichiers.</param>
      <param name="directory">Répertoire racine du fichier ou du répertoire affecté.</param>
      <param name="name">Nom du fichier ou du répertoire affecté.</param>
    </member>
    <member name="P:System.IO.FileSystemEventArgs.ChangeType">
      <summary>Obtient le type d’événement de répertoire survenu.</summary>
      <returns>Une des valeurs <see cref="T:System.IO.WatcherChangeTypes" /> qui représente le type de modification détecté dans le système de fichiers.</returns>
    </member>
    <member name="P:System.IO.FileSystemEventArgs.FullPath">
      <summary>Obtient le chemin qualifié complet du fichier ou du répertoire affecté.</summary>
      <returns>Chemin d'accès du fichier ou du répertoire affecté.</returns>
    </member>
    <member name="P:System.IO.FileSystemEventArgs.Name">
      <summary>Obtient le nom du fichier ou du répertoire affecté.</summary>
      <returns>Nom du fichier ou du répertoire affecté.</returns>
    </member>
    <member name="T:System.IO.FileSystemEventHandler">
      <summary>Représente la méthode destinée à gérer l’événement <see cref="E:System.IO.FileSystemWatcher.Changed" />, <see cref="E:System.IO.FileSystemWatcher.Created" /> ou <see cref="E:System.IO.FileSystemWatcher.Deleted" /> d’une classe <see cref="T:System.IO.FileSystemWatcher" />.</summary>
      <param name="sender">Source de l'événement.</param>
      <param name="e">
        <see cref="T:System.IO.FileSystemEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="T:System.IO.FileSystemWatcher">
      <summary>Écoute les notifications de modifications du système de fichiers et déclenche un événement lorsqu'un répertoire ou un fichier d'un répertoire est modifié.</summary>
    </member>
    <member name="M:System.IO.FileSystemWatcher.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IO.FileSystemWatcher" />.</summary>
    </member>
    <member name="M:System.IO.FileSystemWatcher.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IO.FileSystemWatcher" /> en fonction du répertoire spécifié à surveiller.</summary>
      <param name="path">Répertoire à surveiller en notation standard ou UNC (Universal Naming Convention).</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="path" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="path" /> est une chaîne vide ("").  

ou - 
Le chemin d'accès spécifié via le paramètre <paramref name="path" /> n'existe pas.</exception>
      <exception cref="T:System.IO.PathTooLongException">
        <paramref name="path" /> est trop longue.</exception>
    </member>
    <member name="M:System.IO.FileSystemWatcher.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IO.FileSystemWatcher" /> en fonction du répertoire spécifié et du type de fichiers à surveiller.</summary>
      <param name="path">Répertoire à surveiller en notation standard ou UNC (Universal Naming Convention).</param>
      <param name="filter">Type de fichier dont le suivi doit être assuré. Par exemple, "*.txt" assure le suivi des modifications apportées à tous les fichiers texte.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="path" /> a la valeur <see langword="null" />.  

ou - 
Le paramètre <paramref name="filter" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="path" /> est une chaîne vide ("").  

ou - 
Le chemin d'accès spécifié via le paramètre <paramref name="path" /> n'existe pas.</exception>
      <exception cref="T:System.IO.PathTooLongException">
        <paramref name="path" /> est trop longue.</exception>
    </member>
    <member name="M:System.IO.FileSystemWatcher.BeginInit">
      <summary>Lance l'initialisation d'un élément <see cref="T:System.IO.FileSystemWatcher" /> utilisé sur un formulaire ou par un autre composant. L'initialisation se produit au moment de l'exécution.</summary>
    </member>
    <member name="E:System.IO.FileSystemWatcher.Changed">
      <summary>Se produit lorsqu'un fichier ou un répertoire du <see cref="P:System.IO.FileSystemWatcher.Path" /> spécifié est modifié.</summary>
    </member>
    <member name="E:System.IO.FileSystemWatcher.Created">
      <summary>Se produit lorsqu'un fichier ou un répertoire du <see cref="P:System.IO.FileSystemWatcher.Path" /> spécifié est créé.</summary>
    </member>
    <member name="E:System.IO.FileSystemWatcher.Deleted">
      <summary>Se produit lorsqu'un fichier ou un répertoire du <see cref="P:System.IO.FileSystemWatcher.Path" /> spécifié est supprimé.</summary>
    </member>
    <member name="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)">
      <summary>Libère les ressources non managées utilisées par <see cref="T:System.IO.FileSystemWatcher" /> et libère éventuellement les ressources managées.</summary>
      <param name="disposing">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="P:System.IO.FileSystemWatcher.EnableRaisingEvents">
      <summary>Obtient ou définit une valeur indiquant si le composant est activé.</summary>
      <returns>
        <see langword="true" /> si le composant est activé ; sinon <see langword="false" />. La valeur par défaut est <see langword="false" />. Si vous utilisez le composant sur un concepteur dans Visual Studio 2005, la valeur par défaut est <see langword="true" />.</returns>
      <exception cref="T:System.ObjectDisposedException">L’objet <see cref="T:System.IO.FileSystemWatcher" /> a été supprimé.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Le système d’exploitation actuel n’est pas Microsoft Windows NT ou une version ultérieure.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le répertoire spécifié dans <see cref="P:System.IO.FileSystemWatcher.Path" /> est introuvable.</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.IO.FileSystemWatcher.Path" /> n'a pas été défini ou n'est pas valide.</exception>
    </member>
    <member name="M:System.IO.FileSystemWatcher.EndInit">
      <summary>Termine l'initialisation d'un <see cref="T:System.IO.FileSystemWatcher" /> qui est utilisé dans un formulaire ou par un autre composant. L'initialisation se produit au moment de l'exécution.</summary>
    </member>
    <member name="E:System.IO.FileSystemWatcher.Error">
      <summary>Se produit lorsque l'instance de <see cref="T:System.IO.FileSystemWatcher" /> ne peut pas continuer à surveiller des modifications ou lorsque la mémoire tampon interne excède.</summary>
    </member>
    <member name="P:System.IO.FileSystemWatcher.Filter">
      <summary>Obtient ou définit la chaîne de filtrage utilisée pour déterminer les fichiers à surveiller dans un répertoire.</summary>
      <returns>Chaîne de filtrage. La valeur par défaut est «*. *«(Surveille tous les fichiers.)</returns>
    </member>
    <member name="P:System.IO.FileSystemWatcher.Filters">
      <summary>Obtient ou la collection de tous les filtres utilisés pour déterminer les fichiers à surveiller dans un répertoire.</summary>
      <returns>Collection de filtres.</returns>
    </member>
    <member name="P:System.IO.FileSystemWatcher.IncludeSubdirectories">
      <summary>Obtient ou définit une valeur indiquant si les sous-répertoires du chemin d'accès spécifié doivent être surveillés.</summary>
      <returns>
        <see langword="true" /> si vous voulez surveiller les sous-répertoires ; sinon <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.IO.FileSystemWatcher.InternalBufferSize">
      <summary>Obtient ou définit la taille (en octets) de la mémoire tampon interne.</summary>
      <returns>Taille de la mémoire tampon interne en octets. La valeur par défaut est 8192 (8 Ko).</returns>
    </member>
    <member name="P:System.IO.FileSystemWatcher.NotifyFilter">
      <summary>Obtient ou définit le type de modifications à surveiller.</summary>
      <returns>Une des valeurs de <see cref="T:System.IO.NotifyFilters" />. La valeur par défaut est la combinaison d'opérations de bits OR de <see langword="LastWrite" />, <see langword="FileName" /> et de <see langword="DirectoryName" />.</returns>
      <exception cref="T:System.ArgumentException">La valeur n'est pas une combinaison d'opérations de bits OR valide des valeurs <see cref="T:System.IO.NotifyFilters" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">La valeur qui est définie n'est pas valide.</exception>
    </member>
    <member name="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)">
      <summary>Déclenche l'événement <see cref="E:System.IO.FileSystemWatcher.Changed" />.</summary>
      <param name="e">
        <see cref="T:System.IO.FileSystemEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)">
      <summary>Déclenche l'événement <see cref="E:System.IO.FileSystemWatcher.Created" />.</summary>
      <param name="e">
        <see cref="T:System.IO.FileSystemEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)">
      <summary>Déclenche l'événement <see cref="E:System.IO.FileSystemWatcher.Deleted" />.</summary>
      <param name="e">
        <see cref="T:System.IO.FileSystemEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)">
      <summary>Déclenche l'événement <see cref="E:System.IO.FileSystemWatcher.Error" />.</summary>
      <param name="e">
        <see cref="T:System.IO.ErrorEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)">
      <summary>Déclenche l'événement <see cref="E:System.IO.FileSystemWatcher.Renamed" />.</summary>
      <param name="e">
        <see cref="T:System.IO.RenamedEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="P:System.IO.FileSystemWatcher.Path">
      <summary>Obtient ou définit le chemin d'accès du répertoire à surveiller.</summary>
      <returns>Chemin d'accès à surveiller. La valeur par défaut est une chaîne vide ("").</returns>
      <exception cref="T:System.ArgumentException">Le chemin d'accès spécifié n'existe pas ou est introuvable.  
 ou  
 Le chemin d'accès spécifié contient des caractères génériques.  
 ou  
 Le chemin d'accès spécifié contient des caractères de chemin non valides.</exception>
    </member>
    <member name="E:System.IO.FileSystemWatcher.Renamed">
      <summary>Se produit lorsqu'un fichier ou un répertoire du <see cref="P:System.IO.FileSystemWatcher.Path" /> spécifié est renommé.</summary>
    </member>
    <member name="P:System.IO.FileSystemWatcher.Site">
      <summary>Obtient ou définit un élément <see cref="T:System.ComponentModel.ISite" /> pour l'élément <see cref="T:System.IO.FileSystemWatcher" />.</summary>
      <returns>
        <see cref="T:System.ComponentModel.ISite" /> pour <see cref="T:System.IO.FileSystemWatcher" />.</returns>
    </member>
    <member name="P:System.IO.FileSystemWatcher.SynchronizingObject">
      <summary>Obtient ou définit l'objet utilisé pour marshaler des appels du gestionnaire d'événements consécutifs à un changement de répertoire.</summary>
      <returns>
        <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> qui représente l'objet utilisé pour marshaler des appels du gestionnaire d'événements consécutifs à un changement de répertoire. La valeur par défaut est <see langword="null" />.</returns>
    </member>
    <member name="M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes)">
      <summary>Méthode synchrone qui retourne une structure contenant des informations spécifiques sur les modifications apportées, en fonction des types de modifications à surveiller.</summary>
      <param name="changeType">
        <see cref="T:System.IO.WatcherChangeTypes" /> dont le suivi doit être effectué.</param>
      <returns>
        <see cref="T:System.IO.WaitForChangedResult" /> qui contient des informations spécifiques sur les modifications apportées.</returns>
    </member>
    <member name="M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes,System.Int32)">
      <summary>Méthode synchrone qui retourne une structure contenant des informations spécifiques sur les modifications apportées, en fonction des types de modifications à surveiller et du délai d'attente (en millisecondes).</summary>
      <param name="changeType">
        <see cref="T:System.IO.WatcherChangeTypes" /> dont le suivi doit être effectué.</param>
      <param name="timeout">Délai d'attente, en millisecondes.</param>
      <returns>
        <see cref="T:System.IO.WaitForChangedResult" /> qui contient des informations spécifiques sur les modifications apportées.</returns>
    </member>
    <member name="T:System.IO.InternalBufferOverflowException">
      <summary>Exception levée en cas de saturation de la mémoire tampon interne.</summary>
    </member>
    <member name="M:System.IO.InternalBufferOverflowException.#ctor">
      <summary>Initialise une nouvelle instance par défaut de la classe <see cref="T:System.IO.InternalBufferOverflowException" />.</summary>
    </member>
    <member name="M:System.IO.InternalBufferOverflowException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance vide de la classe <see cref="T:System.IO.InternalBufferOverflowException" /> qui est sérialisable à l’aide des objets<see cref="T:System.Runtime.Serialization.SerializationInfo" /> et <see cref="T:System.Runtime.Serialization.StreamingContext" /> spécifiés.</summary>
      <param name="info">Informations obligatoires pour sérialiser l’objet T:System.IO.InternalBufferOverflowException.</param>
      <param name="context">Les source et destination du flux sérialisé associées à l’objet T:System.IO.InternalBufferOverflowException.</param>
    </member>
    <member name="M:System.IO.InternalBufferOverflowException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IO.InternalBufferOverflowException" /> avec le message d’erreur à afficher spécifié.</summary>
      <param name="message">Message à assigner à l’exception.</param>
    </member>
    <member name="M:System.IO.InternalBufferOverflowException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IO.InternalBufferOverflowException" /> avec le message à afficher et l’exception interne générée spécifiés.</summary>
      <param name="message">Message à assigner à l’exception.</param>
      <param name="inner">Exception interne.</param>
    </member>
    <member name="T:System.IO.NotifyFilters">
      <summary>Définit les modifications à observer dans un fichier ou dans un dossier.</summary>
    </member>
    <member name="F:System.IO.NotifyFilters.Attributes">
      <summary>Attributs du fichier ou du dossier.</summary>
    </member>
    <member name="F:System.IO.NotifyFilters.CreationTime">
      <summary>Heure de création du fichier ou du dossier.</summary>
    </member>
    <member name="F:System.IO.NotifyFilters.DirectoryName">
      <summary>Nom du répertoire.</summary>
    </member>
    <member name="F:System.IO.NotifyFilters.FileName">
      <summary>Nom du fichier.</summary>
    </member>
    <member name="F:System.IO.NotifyFilters.LastAccess">
      <summary>Date à laquelle le fichier ou le dossier a été ouvert pour la dernière fois.</summary>
    </member>
    <member name="F:System.IO.NotifyFilters.LastWrite">
      <summary>Date de la dernière écriture dans le fichier ou le dossier.</summary>
    </member>
    <member name="F:System.IO.NotifyFilters.Security">
      <summary>Paramètres de sécurité du fichier ou du dossier.</summary>
    </member>
    <member name="F:System.IO.NotifyFilters.Size">
      <summary>Taille du fichier ou du dossier.</summary>
    </member>
    <member name="T:System.IO.RenamedEventArgs">
      <summary>Fournit des données pour l'événement <see cref="E:System.IO.FileSystemWatcher.Renamed" />.</summary>
    </member>
    <member name="M:System.IO.RenamedEventArgs.#ctor(System.IO.WatcherChangeTypes,System.String,System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IO.RenamedEventArgs" />.</summary>
      <param name="changeType">Une des valeurs de l'objet <see cref="T:System.IO.WatcherChangeTypes" />.</param>
      <param name="directory">Nom du fichier ou du répertoire affecté.</param>
      <param name="name">Nom du fichier ou du répertoire affecté.</param>
      <param name="oldName">Ancien nom du fichier ou du répertoire affecté.</param>
    </member>
    <member name="P:System.IO.RenamedEventArgs.OldFullPath">
      <summary>Obtient le précédent chemin d'accès qualifié complet du fichier ou du répertoire affecté.</summary>
      <returns>Précédent chemin d'accès qualifié complet du fichier ou du répertoire affecté.</returns>
    </member>
    <member name="P:System.IO.RenamedEventArgs.OldName">
      <summary>Obtient l'ancien nom du fichier ou du répertoire affecté.</summary>
      <returns>Ancien nom du fichier ou du répertoire affecté.</returns>
    </member>
    <member name="T:System.IO.RenamedEventHandler">
      <summary>Représente la méthode destinée à gérer l’événement <see cref="E:System.IO.FileSystemWatcher.Renamed" /> d’une classe <see cref="T:System.IO.FileSystemWatcher" />.</summary>
      <param name="sender">Source de l'événement.</param>
      <param name="e">
        <see cref="T:System.IO.RenamedEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="T:System.IO.WaitForChangedResult">
      <summary>Contient des informations sur la modification effectuée.</summary>
    </member>
    <member name="P:System.IO.WaitForChangedResult.ChangeType">
      <summary>Obtient ou définit le type de modification effectuée.</summary>
      <returns>Une des valeurs de l'objet <see cref="T:System.IO.WatcherChangeTypes" />.</returns>
    </member>
    <member name="P:System.IO.WaitForChangedResult.Name">
      <summary>Obtient ou définit le nom du fichier ou du répertoire qui a été modifié.</summary>
      <returns>Nom du fichier ou du répertoire qui a été modifié.</returns>
    </member>
    <member name="P:System.IO.WaitForChangedResult.OldName">
      <summary>Obtient ou définit le nom d’origine du fichier ou du répertoire qui a été renommé.</summary>
      <returns>Nom d'origine du fichier ou du répertoire qui a été renommé.</returns>
    </member>
    <member name="P:System.IO.WaitForChangedResult.TimedOut">
      <summary>Obtient ou définit une valeur indiquant si le délai de l’opération d’attente a expiré.</summary>
      <returns>
        <see langword="true" /> si le délai de la méthode <see cref="M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes)" /> a expiré ; sinon <see langword="false" />.</returns>
    </member>
    <member name="T:System.IO.WatcherChangeTypes">
      <summary>Modifications pouvant être effectuées dans un fichier ou dans un répertoire.</summary>
    </member>
    <member name="F:System.IO.WatcherChangeTypes.All">
      <summary>Création, suppression, modification d'un fichier ou d'un dossier ou attribution d'un nouveau nom de fichier ou de dossier.</summary>
    </member>
    <member name="F:System.IO.WatcherChangeTypes.Changed">
      <summary>Modification d'un fichier ou d'un dossier. Les types de modification comprennent : modification de la taille, des attributs, des paramètres de sécurité, de l'heure de la dernière écriture ou du dernier accès.</summary>
    </member>
    <member name="F:System.IO.WatcherChangeTypes.Created">
      <summary>Création d'un fichier ou d'un dossier.</summary>
    </member>
    <member name="F:System.IO.WatcherChangeTypes.Deleted">
      <summary>Suppression d'un fichier ou d'un dossier.</summary>
    </member>
    <member name="F:System.IO.WatcherChangeTypes.Renamed">
      <summary>Attribution d'un nouveau nom à un fichier ou à un dossier.</summary>
    </member>
  </members>
</doc>