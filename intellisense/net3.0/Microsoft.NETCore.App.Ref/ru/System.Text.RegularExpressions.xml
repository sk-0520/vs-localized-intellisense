<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Text.RegularExpressions</name>
  </assembly>
  <members>
    <member name="T:System.Text.RegularExpressions.Capture">
      <summary>Представляет результаты из одной успешной записи части выражения.</summary>
    </member>
    <member name="P:System.Text.RegularExpressions.Capture.Index">
      <summary>Позиция в исходной строке, в которой обнаружен первый символ записанной подстроки.</summary>
      <returns>Начальная позиция с отсчетом с нуля в исходной строке, в которой обнаружена записанная подстрока.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Capture.Length">
      <summary>Получает длину записанной подстроки.</summary>
      <returns>Длина записанной подстроки.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Capture.ToString">
      <summary>Извлекает записанную подстроку из входной строки путем вызова свойства <see cref="P:System.Text.RegularExpressions.Capture.Value" />.</summary>
      <returns>Подстрока, записанная по совпадению.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Capture.Value">
      <summary>Получает записанную подстроку из входной строки.</summary>
      <returns>Подстрока, записанная по совпадению.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.CaptureCollection">
      <summary>Представляет набор записей, сделанных одной и той же группой записи.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Array,System.Int32)">
      <summary>Копирует все элементы коллекции в данный массив, начиная с данного индекса.</summary>
      <param name="array">Массив, в который необходимо скопировать коллекцию.</param>
      <param name="arrayIndex">Позиция в конечном массиве, в которой следует начать копирование.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="array" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="arrayIndex" /> выходит за пределы массива <paramref name="array" />.  

или - 
Сумма значений <paramref name="arrayIndex" /> и <see cref="P:System.Text.RegularExpressions.CaptureCollection.Count" /> выходит за пределы массива <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Text.RegularExpressions.Capture[],System.Int32)">
      <param name="array" />
      <param name="arrayIndex" />
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.Count">
      <summary>Получает количество подстрок, записанных группой.</summary>
      <returns>Число элементов в объекте <see cref="T:System.Text.RegularExpressions.CaptureCollection" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.GetEnumerator">
      <summary>Предоставляет перечислитель, выполняющий итерацию по элементам в коллекции.</summary>
      <returns>Объект, содержащий все объекты <see cref="T:System.Text.RegularExpressions.Capture" /> коллекции <see cref="T:System.Text.RegularExpressions.CaptureCollection" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.IsReadOnly">
      <summary>Возвращает значение, указывающее на то, доступна ли коллекция только для чтения.</summary>
      <returns>Значение <see langword="true" /> во всех случаях.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.IsSynchronized">
      <summary>Получает значение, указывающее, является ли доступ к коллекции синхронизированным (потокобезопасным).</summary>
      <returns>Значение <see langword="false" /> во всех случаях.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.Item(System.Int32)">
      <summary>Получает отдельный член коллекции.</summary>
      <param name="i">Индекс в коллекцию записи.</param>
      <returns>Записанная подстрока в позиции <paramref name="i" /> в коллекции.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="i" /> имеет значение меньше 0 или больше <see cref="P:System.Text.RegularExpressions.CaptureCollection.Count" />.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.SyncRoot">
      <summary>Возвращает объект, который можно использовать для синхронизации доступа к коллекции.</summary>
      <returns>Объект, который можно использовать для синхронизации доступа к коллекции.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Add(System.Text.RegularExpressions.Capture)">
      <param name="item" />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Clear" />
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Contains(System.Text.RegularExpressions.Capture)">
      <param name="item" />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Remove(System.Text.RegularExpressions.Capture)">
      <param name="item" />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IEnumerable{System#Text#RegularExpressions#Capture}#GetEnumerator" />
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#IndexOf(System.Text.RegularExpressions.Capture)">
      <param name="item" />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#Insert(System.Int32,System.Text.RegularExpressions.Capture)">
      <param name="index" />
      <param name="item" />
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#Item(System.Int32)">
      <param name="index" />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#RemoveAt(System.Int32)">
      <param name="index" />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Add(System.Object)">
      <param name="value" />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Clear" />
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Contains(System.Object)">
      <param name="value" />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#IndexOf(System.Object)">
      <param name="value" />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <param name="index" />
      <param name="value" />
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#IsFixedSize" />
    <member name="P:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Item(System.Int32)">
      <param name="index" />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Remove(System.Object)">
      <param name="value" />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <param name="index" />
    </member>
    <member name="T:System.Text.RegularExpressions.Group">
      <summary>Представляет результаты отдельной группы записи.</summary>
    </member>
    <member name="P:System.Text.RegularExpressions.Group.Captures">
      <summary>Получает коллекцию всех записей, соответствующих группе записи, в порядке, в котором первыми расположены внутренние слева направо (или внутренние справа налево, если регулярное выражение изменено с помощью параметра <see cref="F:System.Text.RegularExpressions.RegexOptions.RightToLeft" />). Коллекция может иметь ноль и более элементов.</summary>
      <returns>Коллекция подстрок, соответствующих группе.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Group.Name">
      <summary>Возвращает имя группы записи, представляемой текущим экземпляром.</summary>
      <returns>Имя захватываемой группы, представляемое текущим экземпляром.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Group.Success">
      <summary>Получает значение, указывающее на то, успешно ли совпадение.</summary>
      <returns>Значение <see langword="true" />, если совпадение успешно, иначе значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Group.Synchronized(System.Text.RegularExpressions.Group)">
      <summary>Возвращает объект <see langword="Group" />, эквивалентный тому из предоставленных, который можно безопасно разделить между несколькими потоками.</summary>
      <param name="inner">Входной объект <see cref="T:System.Text.RegularExpressions.Group" />.</param>
      <returns>Объект регулярного выражения <see langword="Group" />.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="inner" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="T:System.Text.RegularExpressions.GroupCollection">
      <summary>Возвращает набор записанных групп в одном сопоставлении.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.ContainsKey(System.String)">
      <summary>Определяет, содержит ли коллекция группы захватываемую группу, обозначенную указанным именем.</summary>
      <param name="key">Строка с именем захватываемой группы, которую нужно найти.</param>
      <returns>
        <see langword="true" />, если коллекция группы содержит захватываемую группу, обозначенную <paramref name="key" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
      <summary>Копирует все элементы коллекции в данный массив, начиная с данного индекса.</summary>
      <param name="array">Массив, в который необходимо скопировать коллекцию.</param>
      <param name="arrayIndex">Позиция в конечном массиве, в которой необходимо начать копирование.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="array" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Значение параметра <paramref name="arrayIndex" /> выходит за пределы массива <paramref name="array" />.

или -

Сумма значений <paramref name="arrayIndex" /> и <see cref="P:System.Text.RegularExpressions.GroupCollection.Count" /> выходит за пределы массива <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Text.RegularExpressions.Group[],System.Int32)">
      <summary>Копирует элементы коллекции групп в массив <see cref="System.Text.RegularExpressions.Group[]" />, начиная с определенного индекса в массиве.</summary>
      <param name="array">Одномерный массив, куда копируются элементы из данной коллекции групп. Индекс в массиве должен начинаться с нуля.</param>
      <param name="arrayIndex">Отсчитываемый от нуля индекс в массиве <paramref name="array" />, указывающий начало копирования.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="arrayIndex" /> меньше нуля.

или -

Значение <paramref name="arrayIndex" /> превышает длину <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentException">Длина <paramref name="array" /> - <paramref name="arrayIndex" /> меньше количества коллекции групп.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Count">
      <summary>Возвращает количество групп в коллекции.</summary>
      <returns>Число групп в коллекции.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.GetEnumerator">
      <summary>Предоставляет перечислитель, выполняющий итерацию по элементам в коллекции.</summary>
      <returns>Перечислитель, содержащий все объекты <see cref="T:System.Text.RegularExpressions.Group" /> в коллекции <see cref="T:System.Text.RegularExpressions.GroupCollection" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.IsReadOnly">
      <summary>Возвращает значение, указывающее на то, доступна ли коллекция только для чтения.</summary>
      <returns>Значение <see langword="true" /> во всех случаях.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.IsSynchronized">
      <summary>Получает значение, определяющее, является ли доступ к коллекции <see cref="T:System.Text.RegularExpressions.GroupCollection" /> синхронизированным (потокобезопасным).</summary>
      <returns>Значение <see langword="false" /> во всех случаях.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
      <summary>Включает доступ к члену коллекции с помощью целочисленного индекса.</summary>
      <param name="groupnum">Отсчитываемый от нуля индекс извлекаемого элемента коллекции.</param>
      <returns>Элемент коллекции, заданный параметром <paramref name="groupnum" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
      <summary>Включает доступ к члену коллекции с помощью строкового индекса.</summary>
      <param name="groupname">Имя группы записи.</param>
      <returns>Элемент коллекции, заданный параметром <paramref name="groupname" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Keys">
      <summary>Возвращает перечисление строк, содержащее ключи имени коллекции групп.</summary>
      <returns>Ключи имени коллекции групп.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.SyncRoot">
      <summary>Получает объект, с помощью которого можно синхронизировать доступ к коллекции <see cref="T:System.Text.RegularExpressions.GroupCollection" />.</summary>
      <returns>Копия объекта <see cref="T:System.Text.RegularExpressions.Match" /> для синхронизации.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Group}#Add(System.Text.RegularExpressions.Group)">
      <summary>Добавляет <see cref="T:System.Text.RegularExpressions.Group" /> в коллекцию. При вызове этого метода всегда возникает исключение <see cref="T:System.NotSupportedException" />.</summary>
      <param name="item">Группа, добавляемая в коллекцию.</param>
      <exception cref="T:System.NotSupportedException">Этот метод не поддерживается. Данная коллекция доступна только для чтения.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Group}#Clear">
      <summary>Очищает коллекцию. При вызове этого метода всегда возникает исключение <see cref="T:System.NotSupportedException" />.</summary>
      <exception cref="T:System.NotSupportedException">Этот метод не поддерживается. Данная коллекция доступна только для чтения.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Group}#Contains(System.Text.RegularExpressions.Group)">
      <summary>Определяет, содержит ли коллекция групп указанный элемент группы.</summary>
      <param name="item">Группа, которую необходимо найти в коллекции групп.</param>
      <returns>Значение <see langword="true" />, если элемент группы найден в коллекции. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Group}#Remove(System.Text.RegularExpressions.Group)">
      <summary>Удаляет объект <see cref="T:System.Text.RegularExpressions.Group" /> из коллекции. При вызове этого метода всегда возникает исключение <see cref="T:System.NotSupportedException" />.</summary>
      <param name="item">Удаляемая группа.</param>
      <returns>Этот метод не поддерживается. Возвращаемое значение отсутствует.</returns>
      <exception cref="T:System.NotSupportedException">Этот метод не поддерживается. Данная коллекция доступна только для чтения.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String@System#Text#RegularExpressions#Group}}#GetEnumerator">
      <summary>Предоставляет перечислитель, выполняющий итерацию по элементам в коллекции групп.</summary>
      <returns>Перечислитель, содержащий все имена и объекты, расположенные в коллекции <see cref="T:System.Text.RegularExpressions.Group" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IEnumerable{System#Text#RegularExpressions#Group}#GetEnumerator">
      <summary>Предоставляет перечислитель, выполняющий итерацию по элементам в коллекции групп.</summary>
      <returns>Перечислитель, содержащий все расположенные в коллекции групп объекты <see cref="T:System.Text.RegularExpressions.Group" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Group}#IndexOf(System.Text.RegularExpressions.Group)">
      <summary>Определяет индекс определенной группы в коллекции групп.</summary>
      <param name="item">Группа, которую необходимо найти в коллекции групп.</param>
      <returns>Индекс &lt;paramref. name="item"&gt;&lt;/paramref.&gt;, если он найден; в противном случае — значение –1.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Group}#Insert(System.Int32,System.Text.RegularExpressions.Group)">
      <summary>Вставляет <see cref="T:System.Text.RegularExpressions.Group" /> в коллекцию. При вызове этого метода всегда возникает исключение <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index">Позиция, в которую вставляется группа.</param>
      <param name="item">Вставляемая группа.</param>
      <exception cref="T:System.NotSupportedException">Этот метод не поддерживается. Данная коллекция доступна только для чтения.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Group}#Item(System.Int32)">
      <summary>Помещает группу в заданную позицию в коллекции.</summary>
      <param name="index">Отсчитываемый от нуля индекс группы в коллекции групп.</param>
      <returns>Группа в нужной должности.</returns>
      <exception cref="T:System.NotSupportedException">Не удается задать элемент. Данная коллекция доступна только для чтения.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Group}#RemoveAt(System.Int32)">
      <summary>Удаляет из коллекции <see cref="T:System.Text.RegularExpressions.Group" /> с заданным индексом. При вызове этого метода всегда возникает исключение <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index">Отсчитываемый от нуля индекс удаляемой группы.</param>
      <exception cref="T:System.NotSupportedException">Этот метод не поддерживается. Данная коллекция доступна только для чтения.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Add(System.Object)">
      <summary>Добавляет объект в коллекцию групп. При вызове этого метода всегда возникает исключение <see cref="T:System.NotSupportedException" />.</summary>
      <param name="value">Объект, добавляемый в коллекцию групп.</param>
      <exception cref="T:System.NotSupportedException">Этот метод не поддерживается. Данная коллекция доступна только для чтения.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Clear">
      <summary>Очищает коллекцию. При вызове этого метода всегда возникает исключение <see cref="T:System.NotSupportedException" />.</summary>
      <exception cref="T:System.NotSupportedException">Этот метод не поддерживается. Данная коллекция доступна только для чтения.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Contains(System.Object)">
      <summary>Определяет, содержит ли коллекция групп указанный элемент группы.</summary>
      <param name="value">Группа, которую необходимо найти в коллекции групп.</param>
      <returns>Значение <see langword="true" />, если элемент группы найден в коллекции. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>Определяет индекс определенной группы в коллекции групп.</summary>
      <param name="value">Группа, которую необходимо найти в коллекции групп.</param>
      <returns>Индекс &lt;paramref. name="item"&gt;&lt;/paramref.&gt;, если он найден; в противном случае — значение –1.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Вставляет <see cref="T:System.Text.RegularExpressions.Group" /> в коллекцию. При вызове этого метода всегда возникает исключение <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index">Позиция, в которую вставляется группа.</param>
      <param name="value">Вставляемая группа.</param>
      <exception cref="T:System.NotSupportedException">Этот метод не поддерживается. Данная коллекция доступна только для чтения.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#IsFixedSize">
      <summary>Получает значение, указывающее, имеет ли коллекция групп фиксированный размер.</summary>
      <returns>Всегда <see langword="true" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Item(System.Int32)">
      <summary>Возвращает группу в желаемой позиции.</summary>
      <param name="index">Отсчитываемый от нуля индекс позиции группы в коллекции групп.</param>
      <returns>Группа в нужной должности.</returns>
      <exception cref="T:System.NotSupportedException">Не удается задать элемент. Данная коллекция доступна только для чтения.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Remove(System.Object)">
      <summary>Удаляет объект <see cref="T:System.Text.RegularExpressions.Group" /> из коллекции. При вызове этого метода всегда возникает исключение <see cref="T:System.NotSupportedException" />.</summary>
      <param name="value">Удаляемая группа.</param>
      <exception cref="T:System.NotSupportedException">Этот метод не поддерживается. Данная коллекция доступна только для чтения.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>Удаляет из коллекции <see cref="T:System.Text.RegularExpressions.Group" /> с заданным индексом. При вызове этого метода всегда возникает исключение <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index">Отсчитываемый от нуля индекс удаляемой группы.</param>
      <exception cref="T:System.NotSupportedException">Этот метод не поддерживается. Данная коллекция доступна только для чтения.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.TryGetValue(System.String,System.Text.RegularExpressions.Group@)">
      <summary>Пытается получить группу, определяемую предоставленным ключом имени, если она существует в коллекции групп.</summary>
      <param name="key">Строка с искомым ключом имени группы.</param>
      <param name="value">Метод возвращает группу, имя которой <paramref name="key" />, если она найдена; в противном случае — значение <see langword="null" />, если она не найдена.</param>
      <returns>
        <see langword="true" />, если группа, определяемая предоставленным ключом имени, существует; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Values">
      <summary>Возвращает перечисление групп со всеми группами в коллекции групп.</summary>
      <returns>Перечисление групп.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.Match">
      <summary>Представляет результаты из отдельного совпадения регулярного выражения.</summary>
    </member>
    <member name="P:System.Text.RegularExpressions.Match.Empty">
      <summary>Получает пустую группу. Все неудавшиеся совпадения возвращают это пустое совпадение.</summary>
      <returns>Пустое совпадение.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Match.Groups">
      <summary>Получает коллекцию групп, соответствующих регулярному выражению.</summary>
      <returns>Группы символов, соответствующие шаблону.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Match.NextMatch">
      <summary>Возвращает новый объект <see cref="T:System.Text.RegularExpressions.Match" /> с результатами для следующего сопоставления, начиная с позиции, на которой завершилось последнее сопоставление (с символа после последнего сопоставленного символа).</summary>
      <returns>Следующее сопоставление регулярному выражению.</returns>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Время ожидания истекло.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Match.Result(System.String)">
      <summary>Возвращает расширение указанного шаблона замены.</summary>
      <param name="replacement">Шаблон замены для использования.</param>
      <returns>Расширенная версия параметра <paramref name="replacement" />.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="replacement" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Расширение для этого шаблона не разрешено.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Match.Synchronized(System.Text.RegularExpressions.Match)">
      <summary>Возвращает экземпляр <see cref="T:System.Text.RegularExpressions.Match" />, эквивалентный одному из предоставленных экземпляров, пригодному для совместного использования несколькими потоками.</summary>
      <param name="inner">Сопоставление регулярному выражению, эквивалентное ожидаемому.</param>
      <returns>Сопоставление регулярному выражению, пригодное для разделения между несколькими потоками.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="inner" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="T:System.Text.RegularExpressions.MatchCollection">
      <summary>Представляет набор успешных совпадений, обнаруженных путем итеративного применения шаблона регулярного выражения к входной строке.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Array,System.Int32)">
      <summary>Копирует все элементы коллекции в данный массив, начиная с данного индекса.</summary>
      <param name="array">Массив, в который необходимо скопировать коллекцию.</param>
      <param name="arrayIndex">Позиция в массиве, в которой следует начать копирование.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> является многомерным массивом.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Значение параметра <paramref name="arrayIndex" /> выходит за пределы массива <paramref name="array" />.  

или - 
Сумма значений <paramref name="arrayIndex" /> и <see cref="P:System.Text.RegularExpressions.MatchCollection.Count" /> выходит за пределы массива <paramref name="array" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Время ожидания истекло.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Text.RegularExpressions.Match[],System.Int32)">
      <param name="array" />
      <param name="arrayIndex" />
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.Count">
      <summary>Получает количество соответствий.</summary>
      <returns>Количество соответствий.</returns>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Время ожидания истекло.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.GetEnumerator">
      <summary>Предоставляет перечислитель, выполняющий итерацию по элементам в коллекции.</summary>
      <returns>Объект, содержащий все объекты <see cref="T:System.Text.RegularExpressions.Match" /> коллекции <see cref="T:System.Text.RegularExpressions.MatchCollection" />.</returns>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Время ожидания истекло.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.IsReadOnly">
      <summary>Возвращает значение, указывающее на то, доступна ли коллекция только для чтения.</summary>
      <returns>Значение <see langword="true" /> во всех случаях.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.IsSynchronized">
      <summary>Получает значение, указывающее на то, синхронизирован ли доступ к коллекции (потокобезопасный).</summary>
      <returns>Значение <see langword="false" /> во всех случаях.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.Item(System.Int32)">
      <summary>Получает отдельный член коллекции.</summary>
      <param name="i">Индекс в коллекции <see cref="T:System.Text.RegularExpressions.Match" />.</param>
      <returns>Записанная подстрока в позиции <paramref name="i" /> в коллекции.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="i" /> меньше 0 или больше либо равно <see cref="P:System.Text.RegularExpressions.MatchCollection.Count" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Время ожидания истекло.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.SyncRoot">
      <summary>Возвращает объект, который можно использовать для синхронизации доступа к коллекции.</summary>
      <returns>Объект, который можно использовать для синхронизации доступа к коллекции. Это свойство всегда возвращает сам объект.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Match}#Add(System.Text.RegularExpressions.Match)">
      <param name="item" />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Match}#Clear" />
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Match}#Contains(System.Text.RegularExpressions.Match)">
      <param name="item" />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Match}#Remove(System.Text.RegularExpressions.Match)">
      <param name="item" />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IEnumerable{System#Text#RegularExpressions#Match}#GetEnumerator" />
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Match}#IndexOf(System.Text.RegularExpressions.Match)">
      <param name="item" />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Match}#Insert(System.Int32,System.Text.RegularExpressions.Match)">
      <param name="index" />
      <param name="item" />
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Match}#Item(System.Int32)">
      <param name="index" />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Match}#RemoveAt(System.Int32)">
      <param name="index" />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Add(System.Object)">
      <param name="value" />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Clear" />
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Contains(System.Object)">
      <param name="value" />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#IndexOf(System.Object)">
      <param name="value" />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <param name="index" />
      <param name="value" />
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#IsFixedSize" />
    <member name="P:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Item(System.Int32)">
      <param name="index" />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Remove(System.Object)">
      <param name="value" />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <param name="index" />
    </member>
    <member name="T:System.Text.RegularExpressions.MatchEvaluator">
      <summary>Представляет метод, вызываемый каждый раз, когда обнаружено совпадение регулярного выражения во время работы метода <see cref="Overload:System.Text.RegularExpressions.Regex.Replace" />.</summary>
      <param name="match">Объект <see cref="T:System.Text.RegularExpressions.Match" />, представляющий отдельное совпадение регулярного выражения во время работы метода <see cref="Overload:System.Text.RegularExpressions.Regex.Replace" />.</param>
      <returns>Строка, возвращенная методом, представленным делегатом <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.Regex">
      <summary>Представляет постоянное регулярное выражение.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Text.RegularExpressions.Regex" />, используя сериализованные данные.</summary>
      <param name="info">Объект, содержащий сериализованный шаблон и сведения <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</param>
      <param name="context">Целевой объект этой сериализации. (Этот параметр не используется; задайте значение <see langword="null" />.)</param>
      <exception cref="T:System.ArgumentException">Произошла ошибка анализа регулярного выражения.</exception>
      <exception cref="T:System.ArgumentNullException">Шаблон, содержащий <paramref name="info" />, имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="info" /> содержит недопустимый флаг <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Text.RegularExpressions.Regex" /> для заданного регулярного выражения.</summary>
      <param name="pattern">Шаблон регулярного выражения для сопоставления.</param>
      <exception cref="T:System.ArgumentException">Произошла ошибка анализа регулярного выражения.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pattern" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Text.RegularExpressions.Regex" /> для указанного регулярного выражения с параметрами, изменяющими шаблон.</summary>
      <param name="pattern">Шаблон регулярного выражения для сопоставления.</param>
      <param name="options">Побитовое сочетание значений перечисления, изменяющих регулярное выражение.</param>
      <exception cref="T:System.ArgumentException">Произошла ошибка анализа регулярного выражения.</exception>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="pattern" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> содержит недопустимый флаг.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Text.RegularExpressions.Regex" /> для указанного регулярного выражения с параметрами, которые изменяют шаблон, и значение, указывающее, как долго метод сравнения с шаблоном должен пытаться найти совпадение, прежде чем время ожидания истечет.</summary>
      <param name="pattern">Шаблон регулярного выражения для сопоставления.</param>
      <param name="options">Побитовое сочетание значений перечисления, изменяющих регулярное выражение.</param>
      <param name="matchTimeout">Интервал времени ожидания или <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, чтобы указать, что метод не должен превышать время ожидания.</param>
      <exception cref="T:System.ArgumentException">Произошла ошибка анализа регулярного выражения.</exception>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="pattern" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> не является допустимым значением <see cref="T:System.Text.RegularExpressions.RegexOptions" />.  

или - 
Значение параметра <paramref name="matchTimeout" /> отрицательное, равно нулю или больше, чем приблизительно 24 дня.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.CacheSize">
      <summary>Возвращает или задает максимальное количество записей в текущей статической кэш-памяти скомпилированных регулярных выражений.</summary>
      <returns>Максимальное количество записей в статической кэш-памяти.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение в операции задания меньше нуля.</exception>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.capnames">
      <summary>Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.CapNames">
      <summary>Получает или задает словарь, сопоставляющий именованные захватываемые группы со значениями их индексов.</summary>
      <returns>Словарь, сопоставляющий именованные захватываемые группы со значениями их индексов.</returns>
      <exception cref="T:System.ArgumentNullException">Значение, присвоенное свойству <see cref="P:System.Text.RegularExpressions.Regex.CapNames" /> в операции задания, равно <see langword="null" />.</exception>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.caps">
      <summary>Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.Caps">
      <summary>Получает или задает словарь, сопоставляющий нумерованные захватываемые группы со значениями их индексов.</summary>
      <returns>Словарь, сопоставляющий нумерованные захватываемые группы со значениями их индексов.</returns>
      <exception cref="T:System.ArgumentNullException">Значение, присвоенное свойству <see cref="P:System.Text.RegularExpressions.Regex.Caps" /> в операции задания, равно <see langword="null" />.</exception>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.capsize">
      <summary>Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.capslist">
      <summary>Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)">
      <summary>Компилирует один или несколько указанных объектов <see cref="T:System.Text.RegularExpressions.Regex" /> в именованную сборку.</summary>
      <param name="regexinfos">Массив, описывающий регулярные выражения для компилирования.</param>
      <param name="assemblyname">Имя файла сборки.</param>
      <exception cref="T:System.ArgumentException">Значением свойства <see cref="P:System.Reflection.AssemblyName.Name" /> параметра <paramref name="assemblyname" /> является пустая или нулевая строка.  
-или- 
Шаблон регулярного выражения одного или более объектов в <paramref name="regexinfos" /> содержит недопустимый синтаксис.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="assemblyname" /> или <paramref name="regexinfos" /> — <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Только в .NET Core: создание сборки скомпилированных регулярных выражений не поддерживается.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder[])">
      <summary>Компилирует один или несколько указанных объектов <see cref="T:System.Text.RegularExpressions.Regex" /> в именованную сборку с заданными атрибутами.</summary>
      <param name="regexinfos">Массив, описывающий регулярные выражения для компилирования.</param>
      <param name="assemblyname">Имя файла сборки.</param>
      <param name="attributes">Массив, определяющий атрибуты, применяемые к сборке.</param>
      <exception cref="T:System.ArgumentException">Значением свойства <see cref="P:System.Reflection.AssemblyName.Name" /> параметра <paramref name="assemblyname" /> является пустая или нулевая строка.  
-или- 
Шаблон регулярного выражения одного или более объектов в <paramref name="regexinfos" /> содержит недопустимый синтаксис.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="assemblyname" /> или <paramref name="regexinfos" /> — <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Только в .NET Core: создание сборки скомпилированных регулярных выражений не поддерживается.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder[],System.String)">
      <summary>Компилирует один или несколько указанных объектов <see cref="T:System.Text.RegularExpressions.Regex" /> и указанный файл ресурсов в именованную сборку с заданными атрибутами.</summary>
      <param name="regexinfos">Массив, описывающий регулярные выражения для компилирования.</param>
      <param name="assemblyname">Имя файла сборки.</param>
      <param name="attributes">Массив, определяющий атрибуты, применяемые к сборке.</param>
      <param name="resourceFile">Имя файла ресурса Win32 для включения в сборку.</param>
      <exception cref="T:System.ArgumentException">Значением свойства <see cref="P:System.Reflection.AssemblyName.Name" /> параметра <paramref name="assemblyname" /> является пустая или нулевая строка.  
-или- 
Шаблон регулярного выражения одного или более объектов в <paramref name="regexinfos" /> содержит недопустимый синтаксис.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="assemblyname" /> или <paramref name="regexinfos" /> — <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">Параметр <paramref name="resourceFile" /> назначает недопустимый файл ресурсов Win32.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Не удается найти файл, заданный свойством <paramref name="resourceFile" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Только в .NET Core: создание сборки скомпилированных регулярных выражений не поддерживается.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Escape(System.String)">
      <summary>Преобразует минимальный набор символов (\, *, +, ?, |, {, [, (,), ^, $,., # и пробел), заменяя их escape-кодами. При этом обработчику регулярных выражений дается команда интерпретировать эти символы буквально, а не как метасимволы.</summary>
      <param name="str">Входная строка, содержащая преобразуемый текст.</param>
      <returns>Строка символов с метасимволами, приведенными в преобразованную форму.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="str" /> — <see langword="null" />.</exception>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.factory">
      <summary>Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GetGroupNames">
      <summary>Возвращает массив имен группы записи для регулярного выражения.</summary>
      <returns>Строковый массив имен группы.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GetGroupNumbers">
      <summary>Возвращает массив номеров групп записи, что соответствует именам групп в массиве.</summary>
      <returns>Целочисленный массив номеров групп.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GroupNameFromNumber(System.Int32)">
      <summary>Получает имя группы, соответствующее указанному номеру группы.</summary>
      <param name="i">Номер группы для преобразования в соответствующее имя группы.</param>
      <returns>Строка, содержащая имя группы, связанное с указанным номером группы. При отсутствии имени группы, соответствующей параметру <paramref name="i" />, метод возвращает значение <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GroupNumberFromName(System.String)">
      <summary>Возвращает номер группы, соответствующий указанному имени группы.</summary>
      <param name="name">Имя группы для преобразования в соответствующий номер группы.</param>
      <returns>Номер группы, соответствующий указанному имени группы, или -1, если <paramref name="name" /> является недопустимым именем группы.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="name" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout">
      <summary>Указывает, что для операции сравнения с шаблоном не используется конечное время ожидания.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.InitializeReferences">
      <summary>Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <exception cref="T:System.NotSupportedException">Ссылки уже инициализированы.</exception>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.internalMatchTimeout">
      <summary>Максимальное время, которое может пройти в операции сравнения с шаблоном перед истечением срока ожидания операции.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String)">
      <summary>Указывает, обнаружено ли в указанной входной строке соответствие регулярному выражению, заданному в конструкторе <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
      <param name="input">Строка для поиска соответствия.</param>
      <returns>Значение <see langword="true" />, если регулярное выражение обнаруживает соответствие; в противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="input" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Время ожидания истекло. Дополнительные сведения о времени ожидания см. в разделе "Примечания".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.Int32)">
      <summary>Указывает, обнаружено ли в указанной входной строке соответствие (начинающееся с указанной позиции в этой строке) регулярному выражению, заданному в конструкторе <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
      <param name="input">Строка для поиска соответствия.</param>
      <param name="startat">Расположение символа, с которого необходимо начать поиск.</param>
      <returns>Значение <see langword="true" />, если регулярное выражение обнаруживает соответствие; в противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="input" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="startat" /> имеет значение меньше нуля или больше длины <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Время ожидания истекло. Дополнительные сведения о времени ожидания см. в разделе "Примечания".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String)">
      <summary>Указывает, обнаружено ли в указанной входной строке соответствие заданному регулярному выражению.</summary>
      <param name="input">Строка для поиска соответствия.</param>
      <param name="pattern">Шаблон регулярного выражения для сопоставления.</param>
      <returns>Значение <see langword="true" />, если регулярное выражение обнаруживает соответствие; в противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Произошла ошибка анализа регулярного выражения.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр<paramref name="input" /> или <paramref name="pattern" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Время ожидания истекло. Дополнительные сведения о времени ожидания см. в разделе "Примечания".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>Указывает, обнаружено ли в указанной входной строке соответствие заданному регулярному выражению, используя указанные параметры сопоставления.</summary>
      <param name="input">Строка для поиска соответствия.</param>
      <param name="pattern">Шаблон регулярного выражения для сопоставления.</param>
      <param name="options">Побитовая комбинация значений перечисления, предоставляющая параметры для сопоставления.</param>
      <returns>Значение <see langword="true" />, если регулярное выражение обнаруживает соответствие; в противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Произошла ошибка анализа регулярного выражения.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="input" /> или <paramref name="pattern" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> не является допустимым значением <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Время ожидания истекло. Дополнительные сведения о времени ожидания см. в разделе "Примечания".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary>Указывает, обнаружено ли в указанной входной строке соответствие заданному регулярному выражению, с помощью указанных параметров сопоставления и интервала времени ожидания.</summary>
      <param name="input">Строка для поиска соответствия.</param>
      <param name="pattern">Шаблон регулярного выражения для сопоставления.</param>
      <param name="options">Побитовая комбинация значений перечисления, предоставляющая параметры для сопоставления.</param>
      <param name="matchTimeout">Интервал времени ожидания или <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, чтобы указать, что метод не должен превышать время ожидания.</param>
      <returns>Значение <see langword="true" />, если регулярное выражение обнаруживает соответствие; в противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Произошла ошибка анализа регулярного выражения.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="input" /> или <paramref name="pattern" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> не является допустимым значением <see cref="T:System.Text.RegularExpressions.RegexOptions" />.  

или - 
Значение параметра <paramref name="matchTimeout" /> отрицательное, равно нулю или больше, чем приблизительно 24 дня.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Время ожидания истекло.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String)">
      <summary>Ищет в указанной входной строке первое вхождение регулярного выражения, указанного в конструкторе <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
      <param name="input">Строка для поиска соответствия.</param>
      <returns>Объект, содержащий сведения о совпадении.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> — <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Время ожидания истекло. Дополнительные сведения о времени ожидания см. в разделе "Примечания".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.Int32)">
      <summary>Ищет во входной строке первое вхождение регулярного выражения, начиная с указанной начальной позиции.</summary>
      <param name="input">Строка для поиска соответствия.</param>
      <param name="startat">Отсчитываемая от нуля позиция символа, с которой начинается поиск.</param>
      <returns>Объект, содержащий сведения о совпадении.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="input" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="startat" /> имеет значение меньше нуля или больше длины <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Время ожидания истекло. Дополнительные сведения о времени ожидания см. в разделе "Примечания".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.Int32,System.Int32)">
      <summary>Ищет во входной строке первое вхождение регулярного выражения, начиная с указанной начальной позиции и выполняя поиск только по указанному количеству символов.</summary>
      <param name="input">Строка для поиска соответствия.</param>
      <param name="beginning">Отсчитываемая от нуля позиция символа во входной строке, определяющая самую левую позицию диапазона поиска.</param>
      <param name="length">Количество символов в подстроке для включения в поиск.</param>
      <returns>Объект, содержащий сведения о совпадении.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр<paramref name="beginning" /> имеет значение меньше нуля или больше длины <paramref name="input" />.  

или - 
Параметр <paramref name="length" /> имеет значение меньше нуля или больше длины <paramref name="input" />.  

или - 
<paramref name="beginning" /><see langword="+" /><paramref name="length" /><see langword="-1" /> определяет позицию, которая находится вне диапазона <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Время ожидания истекло. Дополнительные сведения о времени ожидания см. в разделе "Примечания".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String)">
      <summary>Ищет в указанной входной строке первое вхождение заданного регулярного выражения.</summary>
      <param name="input">Строка для поиска соответствия.</param>
      <param name="pattern">Шаблон регулярного выражения для сопоставления.</param>
      <returns>Объект, содержащий сведения о совпадении.</returns>
      <exception cref="T:System.ArgumentException">Произошла ошибка анализа регулярного выражения.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="input" /> или <paramref name="pattern" /> — <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Время ожидания истекло. Дополнительные сведения о времени ожидания см. в разделе "Примечания".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>Ищет во входной строке первое вхождение заданного регулярного выражения, используя указанные параметры сопоставления.</summary>
      <param name="input">Строка для поиска соответствия.</param>
      <param name="pattern">Шаблон регулярного выражения для сопоставления.</param>
      <param name="options">Побитовая комбинация значений перечисления, предоставляющая параметры для сопоставления.</param>
      <returns>Объект, содержащий сведения о совпадении.</returns>
      <exception cref="T:System.ArgumentException">Произошла ошибка анализа регулярного выражения.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="input" /> или <paramref name="pattern" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="options" /> не является допустимой битовой комбинацией значений <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Время ожидания истекло. Дополнительные сведения о времени ожидания см. в разделе "Примечания".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary>Ищет во входной строке первое вхождение заданного регулярного выражения, используя указанные параметры сопоставления и интервал времени ожидания.</summary>
      <param name="input">Строка для поиска соответствия.</param>
      <param name="pattern">Шаблон регулярного выражения для сопоставления.</param>
      <param name="options">Побитовая комбинация значений перечисления, предоставляющая параметры для сопоставления.</param>
      <param name="matchTimeout">Интервал времени ожидания или <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, чтобы указать, что метод не должен превышать время ожидания.</param>
      <returns>Объект, содержащий сведения о совпадении.</returns>
      <exception cref="T:System.ArgumentException">Произошла ошибка анализа регулярного выражения.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="input" /> или <paramref name="pattern" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> не является допустимой битовой комбинацией значений <see cref="T:System.Text.RegularExpressions.RegexOptions" /> .  

или - 
Значение параметра <paramref name="matchTimeout" /> отрицательное, равно нулю или больше, чем приблизительно 24 дня.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Время ожидания истекло. Дополнительные сведения о времени ожидания см. в разделе "Примечания".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String)">
      <summary>Ищет в указанной входной строке все вхождения регулярного выражения.</summary>
      <param name="input">Строка для поиска соответствия.</param>
      <returns>Коллекция объектов <see cref="T:System.Text.RegularExpressions.Match" />, найденных при поиске. Если соответствующие объекты не найдены, метод возвращает пустой объект коллекции.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="input" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.Int32)">
      <summary>Ищет в указанной входной строке все вхождения регулярного выражения, начиная с указанной начальной позиции.</summary>
      <param name="input">Строка для поиска соответствия.</param>
      <param name="startat">Позиция символа во входной строке, с которой необходимо начать поиск.</param>
      <returns>Коллекция объектов <see cref="T:System.Text.RegularExpressions.Match" />, найденных при поиске. Если соответствующие объекты не найдены, метод возвращает пустой объект коллекции.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="startat" /> имеет значение меньше нуля или больше длины <paramref name="input" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String)">
      <summary>Ищет в указанной входной строке все вхождения заданного регулярного выражения.</summary>
      <param name="input">Строка для поиска соответствия.</param>
      <param name="pattern">Шаблон регулярного выражения для сопоставления.</param>
      <returns>Коллекция объектов <see cref="T:System.Text.RegularExpressions.Match" />, найденных при поиске. Если соответствующие объекты не найдены, метод возвращает пустой объект коллекции.</returns>
      <exception cref="T:System.ArgumentException">Произошла ошибка анализа регулярного выражения.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="input" /> или <paramref name="pattern" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>Ищет в указанной входной строке все вхождения заданного регулярного выражения, используя указанные параметры сопоставления.</summary>
      <param name="input">Строка для поиска соответствия.</param>
      <param name="pattern">Шаблон регулярного выражения для сопоставления.</param>
      <param name="options">Побитовая комбинация значений перечисления, задающая параметры для сопоставления.</param>
      <returns>Коллекция объектов <see cref="T:System.Text.RegularExpressions.Match" />, найденных при поиске. Если соответствующие объекты не найдены, метод возвращает пустой объект коллекции.</returns>
      <exception cref="T:System.ArgumentException">Произошла ошибка анализа регулярного выражения.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="input" /> или <paramref name="pattern" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="options" /> не является допустимой битовой комбинацией значений <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary>Ищет в указанной входной строке все вхождения заданного регулярного выражения, используя указанные параметры сопоставления и интервал времени ожидания.</summary>
      <param name="input">Строка для поиска соответствия.</param>
      <param name="pattern">Шаблон регулярного выражения для сопоставления.</param>
      <param name="options">Побитовая комбинация значений перечисления, задающая параметры для сопоставления.</param>
      <param name="matchTimeout">Интервал времени ожидания или <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, чтобы указать, что метод не должен превышать время ожидания.</param>
      <returns>Коллекция объектов <see cref="T:System.Text.RegularExpressions.Match" />, найденных при поиске. Если соответствующие объекты не найдены, метод возвращает пустой объект коллекции.</returns>
      <exception cref="T:System.ArgumentException">Произошла ошибка анализа регулярного выражения.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="input" /> или <paramref name="pattern" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> не является допустимой битовой комбинацией значений <see cref="T:System.Text.RegularExpressions.RegexOptions" /> .  

или - 
Значение параметра <paramref name="matchTimeout" /> отрицательное, равно нулю или больше, чем приблизительно 24 дня.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.MatchTimeout">
      <summary>Получает интервал времени ожидания текущего экземпляра.</summary>
      <returns>Максимальный интервал времени, который может пройти в операции сравнения с шаблоном, прежде чем возникнет исключение <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" />, или <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, если контроль времени ожидания отключен.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.Options">
      <summary>Получает параметр, которые были переданы в конструктор <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
      <returns>Один или несколько членов перечисления <see cref="T:System.Text.RegularExpressions.RegexOptions" />, представляющих параметры, переданные в конструктор <see cref="T:System.Text.RegularExpressions.Regex" /></returns>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.pattern">
      <summary>Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String)">
      <summary>В указанной входной строке заменяет все строки, соответствующие шаблону регулярного выражения, указанной строкой замены.</summary>
      <param name="input">Строка для поиска соответствия.</param>
      <param name="replacement">Строка замены.</param>
      <returns>Новая строка, идентичная входной строке, за исключением того что строка замены занимает место каждой соответствующей строки. Если в текущем экземпляре нет соответствия шаблону регулярных выражений, метод возвращает текущий экземпляр без изменений.</returns>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="input" /> или <paramref name="replacement" /> — <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Время ожидания истекло. Дополнительные сведения о времени ожидания см. в разделе "Примечания".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32)">
      <summary>В указанной входной строке заменяет указанное максимальное количество строк, соответствующих шаблону регулярного выражения, указанной строкой замены.</summary>
      <param name="input">Строка для поиска соответствия.</param>
      <param name="replacement">Строка замены.</param>
      <param name="count">Максимальное количество возможных случаев замены.</param>
      <returns>Новая строка, идентичная входной строке, за исключением того что строка замены занимает место каждой соответствующей строки. Если в текущем экземпляре нет соответствия шаблону регулярных выражений, метод возвращает текущий экземпляр без изменений.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="input" /> или <paramref name="replacement" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Время ожидания истекло. Дополнительные сведения о времени ожидания см. в разделе "Примечания".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32,System.Int32)">
      <summary>В указанной входной подстроке заменяет указанное максимальное количество строк, соответствующих шаблону регулярного выражения, указанной строкой замены.</summary>
      <param name="input">Строка для поиска соответствия.</param>
      <param name="replacement">Строка замены.</param>
      <param name="count">Максимальное возможное количество случаев замены.</param>
      <param name="startat">Позиция символа во входной строке, с которой начинается поиск.</param>
      <returns>Новая строка, идентичная входной строке, за исключением того что строка замены занимает место каждой соответствующей строки. Если в текущем экземпляре нет соответствия шаблону регулярных выражений, метод возвращает текущий экземпляр без изменений.</returns>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="input" /> или <paramref name="replacement" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="startat" /> имеет значение меньше нуля или больше длины <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Время ожидания истекло. Дополнительные сведения о времени ожидания см. в разделе "Примечания".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String)">
      <summary>В указанной входной строке заменяет все строки, соответствующие указанному регулярному выражению, указанной строкой замены.</summary>
      <param name="input">Строка для поиска соответствия.</param>
      <param name="pattern">Шаблон регулярного выражения для сопоставления.</param>
      <param name="replacement">Строка замены.</param>
      <returns>Новая строка, идентичная входной строке, за исключением того что строка замены занимает место каждой соответствующей строки. Если для <paramref name="pattern" /> не найдено соответствия в текущем экземпляре, метод возвращает текущий экземпляр без изменений.</returns>
      <exception cref="T:System.ArgumentException">Произошла ошибка анализа регулярного выражения.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="input" />, <paramref name="pattern" /> или <paramref name="replacement" /> равно <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Время ожидания истекло. Дополнительные сведения о времени ожидания см. в разделе "Примечания".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>В указанной входной строке заменяет все строки, соответствующие указанному регулярному выражению, указанной строкой замены. Указанные параметры изменяют операцию сопоставления.</summary>
      <param name="input">Строка для поиска соответствия.</param>
      <param name="pattern">Шаблон регулярного выражения для сопоставления.</param>
      <param name="replacement">Строка замены.</param>
      <param name="options">Побитовая комбинация значений перечисления, предоставляющая параметры для сопоставления.</param>
      <returns>Новая строка, идентичная входной строке, за исключением того что строка замены занимает место каждой соответствующей строки. Если для <paramref name="pattern" /> не найдено соответствия в текущем экземпляре, метод возвращает текущий экземпляр без изменений.</returns>
      <exception cref="T:System.ArgumentException">Произошла ошибка анализа регулярного выражения.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="input" />, <paramref name="pattern" /> или <paramref name="replacement" /> равно <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="options" /> не является допустимой битовой комбинацией значений <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Время ожидания истекло. Дополнительные сведения о времени ожидания см. в разделе "Примечания".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary>В указанной входной строке заменяет все строки, соответствующие указанному регулярному выражению, указанной строкой замены. Дополнительные параметры определяют параметры, которые изменяют соответствующую операцию и интервал времени ожидания, если совпадение не найдено.</summary>
      <param name="input">Строка для поиска соответствия.</param>
      <param name="pattern">Шаблон регулярного выражения для сопоставления.</param>
      <param name="replacement">Строка замены.</param>
      <param name="options">Побитовая комбинация значений перечисления, предоставляющая параметры для сопоставления.</param>
      <param name="matchTimeout">Интервал времени ожидания или <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, чтобы указать, что метод не должен превышать время ожидания.</param>
      <returns>Новая строка, идентичная входной строке, за исключением того что строка замены занимает место каждой соответствующей строки. Если для <paramref name="pattern" /> не найдено соответствия в текущем экземпляре, метод возвращает текущий экземпляр без изменений.</returns>
      <exception cref="T:System.ArgumentException">Произошла ошибка анализа регулярного выражения.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="input" />, <paramref name="pattern" /> или <paramref name="replacement" /> равно <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="options" /> не является допустимой битовой комбинацией значений <see cref="T:System.Text.RegularExpressions.RegexOptions" />.  
-или- 
 Значение параметра <paramref name="matchTimeout" /> отрицательное, равно нулю или больше, чем приблизительно 24 дня.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Время ожидания истекло. Дополнительные сведения о времени ожидания см. в разделе "Примечания".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator)">
      <summary>В указанной входной строке заменяет все строки, соответствующие указанному регулярному выражению, строкой, возвращенной делегатом <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />.</summary>
      <param name="input">Строка для поиска соответствия.</param>
      <param name="pattern">Шаблон регулярного выражения для сопоставления.</param>
      <param name="evaluator">Пользовательский метод, анализирующий каждое совпадение и возвращающий либо исходную строку с совпадениями, либо строку замены.</param>
      <returns>Новая строка, идентичная входной строке, за исключением того что строка замены занимает место каждой соответствующей строки. Если для <paramref name="pattern" /> не найдено соответствия в текущем экземпляре, метод возвращает текущий экземпляр без изменений.</returns>
      <exception cref="T:System.ArgumentException">Произошла ошибка анализа регулярного выражения.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="input" />, <paramref name="pattern" /> или <paramref name="evaluator" /> равно <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Время ожидания истекло. Дополнительные сведения о времени ожидания см. в разделе "Примечания".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions)">
      <summary>В указанной входной строке заменяет все строки, соответствующие указанному регулярному выражению, строкой, возвращенной делегатом <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />. Указанные параметры изменяют операцию сопоставления.</summary>
      <param name="input">Строка для поиска соответствия.</param>
      <param name="pattern">Шаблон регулярного выражения для сопоставления.</param>
      <param name="evaluator">Пользовательский метод, анализирующий каждое совпадение и возвращающий либо исходную строку с совпадениями, либо строку замены.</param>
      <param name="options">Побитовая комбинация значений перечисления, предоставляющая параметры для сопоставления.</param>
      <returns>Новая строка, идентичная входной строке, за исключением того что строка замены занимает место каждой соответствующей строки. Если для <paramref name="pattern" /> не найдено соответствия в текущем экземпляре, метод возвращает текущий экземпляр без изменений.</returns>
      <exception cref="T:System.ArgumentException">Произошла ошибка анализа регулярного выражения.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="input" />, <paramref name="pattern" /> или <paramref name="evaluator" /> равно <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="options" /> не является допустимой битовой комбинацией значений <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Время ожидания истекло. Дополнительные сведения о времени ожидания см. в разделе "Примечания".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary>В указанной входной строке заменяет все подстроки, соответствующие указанному регулярному выражению, строкой, возвращенной делегатом <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />. Дополнительные параметры определяют параметры, которые изменяют соответствующую операцию и интервал времени ожидания, если совпадение не найдено.</summary>
      <param name="input">Строка для поиска соответствия.</param>
      <param name="pattern">Шаблон регулярного выражения для сопоставления.</param>
      <param name="evaluator">Пользовательский метод, анализирующий каждое совпадение и возвращающий либо исходную строку с совпадениями, либо строку замены.</param>
      <param name="options">Побитовая комбинация значений перечисления, предоставляющих параметры для сопоставления.</param>
      <param name="matchTimeout">Интервал времени ожидания или <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, чтобы указать, что метод не должен превышать время ожидания.</param>
      <returns>Новая строка, идентичная входной строке, за исключением того что строка замены занимает место каждой соответствующей строки. Если для <paramref name="pattern" /> не найдено соответствия в текущем экземпляре, метод возвращает текущий экземпляр без изменений.</returns>
      <exception cref="T:System.ArgumentException">Произошла ошибка анализа регулярного выражения.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="input" />, <paramref name="pattern" /> или <paramref name="evaluator" /> равно <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="options" /> не является допустимой битовой комбинацией значений <see cref="T:System.Text.RegularExpressions.RegexOptions" />.  
-или- 
 Значение параметра <paramref name="matchTimeout" /> отрицательное, равно нулю или больше, чем приблизительно 24 дня.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Время ожидания истекло. Дополнительные сведения о времени ожидания см. в разделе "Примечания".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator)">
      <summary>В указанной входной строке заменяет все строки, соответствующие указанному регулярному выражению, строкой, возвращенной делегатом <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />.</summary>
      <param name="input">Строка для поиска соответствия.</param>
      <param name="evaluator">Пользовательский метод, анализирующий каждое совпадение и возвращающий либо исходную строку с совпадениями, либо строку замены.</param>
      <returns>Новая строка, идентичная входной строке, за исключением того что строка замены занимает место каждой соответствующей строки. Если в текущем экземпляре нет соответствия шаблону регулярных выражений, метод возвращает текущий экземпляр без изменений.</returns>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="input" /> или <paramref name="evaluator" /> — <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Время ожидания истекло. Дополнительные сведения о времени ожидания см. в разделе "Примечания".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32)">
      <summary>В указанной входной строке заменяется указанное максимальное количество строк, соответствующих шаблону регулярного выражения, строкой, возвращенной делегатом <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />.</summary>
      <param name="input">Строка для поиска соответствия.</param>
      <param name="evaluator">Пользовательский метод, анализирующий каждое совпадение и возвращающий либо исходную строку с совпадениями, либо строку замены.</param>
      <param name="count">Максимальное количество возможных случаев замены.</param>
      <returns>Новая строка, идентичная входной строке, за исключением того что строка замены занимает место каждой соответствующей строки. Если в текущем экземпляре нет соответствия шаблону регулярных выражений, метод возвращает текущий экземпляр без изменений.</returns>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="input" /> или <paramref name="evaluator" /> — <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Время ожидания истекло. Дополнительные сведения о времени ожидания см. в разделе "Примечания".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32,System.Int32)">
      <summary>В указанной входной подстроке заменяется указанное максимальное количество строк, соответствующих шаблону регулярного выражения, строкой, возвращенной делегатом <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />.</summary>
      <param name="input">Строка для поиска соответствия.</param>
      <param name="evaluator">Пользовательский метод, анализирующий каждое совпадение и возвращающий либо исходную строку с совпадениями, либо строку замены.</param>
      <param name="count">Максимальное количество возможных случаев замены.</param>
      <param name="startat">Позиция символа во входной строке, с которой начинается поиск.</param>
      <returns>Новая строка, идентичная входной строке, за исключением того что строка замены занимает место каждой соответствующей строки. Если в текущем экземпляре нет соответствия шаблону регулярных выражений, метод возвращает текущий экземпляр без изменений.</returns>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="input" /> или <paramref name="evaluator" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="startat" /> имеет значение меньше нуля или больше длины <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Время ожидания истекло. Дополнительные сведения о времени ожидания см. в разделе "Примечания".</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.RightToLeft">
      <summary>Получает значение, указывающее на то, выполняется ли регулярным выражением поиск справа налево.</summary>
      <returns>Значение <see langword="true" />, если регулярное выражение выполняет поиск справа налево; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.roptions">
      <summary>Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String)">
      <summary>Разделяет входную строку в массив подстрок в позициях, определенных шаблоном регулярного выражения, указанным в конструкторе <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
      <param name="input">Строка для разделения.</param>
      <returns>Массив строк.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="input" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Время ожидания истекло. Дополнительные сведения о времени ожидания см. в разделе "Примечания".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.Int32)">
      <summary>Разделяет входную строку указанное максимальное количество раз в массив подстрок в позициях, определенных регулярным выражением, указанным в конструкторе <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
      <param name="input">Строка для разделения.</param>
      <param name="count">Максимальное количество возможных случаев разделения.</param>
      <returns>Массив строк.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="input" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Время ожидания истекло. Дополнительные сведения о времени ожидания см. в разделе "Примечания".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.Int32,System.Int32)">
      <summary>Разделяет входную строку указанное максимальное количество раз в массив подстрок в позициях, определенных регулярным выражением, указанным в конструкторе <see cref="T:System.Text.RegularExpressions.Regex" />. Поиск шаблона регулярного выражения начинается с указанной позиции элемента во входной строке.</summary>
      <param name="input">Строка для разделения.</param>
      <param name="count">Максимальное количество возможных случаев разделения.</param>
      <param name="startat">Позиция символа во входной строке, с которой начинается поиск.</param>
      <returns>Массив строк.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="input" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="startat" /> имеет значение меньше нуля или больше длины <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Время ожидания истекло. Дополнительные сведения о времени ожидания см. в разделе "Примечания".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String)">
      <summary>Разделяет входную строку в массив подстрок в позициях, определенных шаблоном регулярного выражения.</summary>
      <param name="input">Строка для разделения.</param>
      <param name="pattern">Шаблон регулярного выражения для сопоставления.</param>
      <returns>Массив строк.</returns>
      <exception cref="T:System.ArgumentException">Произошла ошибка анализа регулярного выражения.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="input" /> или <paramref name="pattern" /> — <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Время ожидания истекло. Дополнительные сведения о времени ожидания см. в разделе "Примечания".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>Разделяет входную строку в массив подстрок в позициях, определенных указанным шаблоном регулярного выражения. Указанные параметры изменяют операцию сопоставления.</summary>
      <param name="input">Строка для разделения.</param>
      <param name="pattern">Шаблон регулярного выражения для сопоставления.</param>
      <param name="options">Побитовая комбинация значений перечисления, предоставляющая параметры для сопоставления.</param>
      <returns>Массив строк.</returns>
      <exception cref="T:System.ArgumentException">Произошла ошибка анализа регулярного выражения.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="input" /> или <paramref name="pattern" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="options" /> не является допустимой битовой комбинацией значений <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Время ожидания истекло. Дополнительные сведения о времени ожидания см. в разделе "Примечания".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary>Разделяет входную строку в массив подстрок в позициях, определенных указанным шаблоном регулярного выражения. Дополнительные параметры определяют параметры, которые изменяют соответствующую операцию и интервал времени ожидания, если совпадение не найдено.</summary>
      <param name="input">Строка для разделения.</param>
      <param name="pattern">Шаблон регулярного выражения для сопоставления.</param>
      <param name="options">Побитовая комбинация значений перечисления, предоставляющая параметры для сопоставления.</param>
      <param name="matchTimeout">Интервал времени ожидания или <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, чтобы указать, что метод не должен превышать время ожидания.</param>
      <returns>Массив строк.</returns>
      <exception cref="T:System.ArgumentException">Произошла ошибка анализа регулярного выражения.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="input" /> или <paramref name="pattern" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> не является допустимой битовой комбинацией значений <see cref="T:System.Text.RegularExpressions.RegexOptions" /> .  

или - 
Значение параметра <paramref name="matchTimeout" /> отрицательное, равно нулю или больше, чем приблизительно 24 дня.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Время ожидания истекло. Дополнительные сведения о времени ожидания см. в разделе "Примечания".</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Заполняет объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> данными даты, необходимыми для десериализации текущего объекта <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
      <param name="si">Объект, который требуется заполнить информацией о сериализации.</param>
      <param name="context">Место для хранения и извлечения сериализованных данных. Этот параметр зарезервирован для использования в будущем.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.ToString">
      <summary>Возвращает шаблон регулярного выражения, который был передан в конструктор <see langword="Regex" />.</summary>
      <returns>Параметр <paramref name="pattern" />, который был передан в конструктор <see langword="Regex" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Unescape(System.String)">
      <summary>Преобразует все escape-символы во входной строке обратно в символы.</summary>
      <param name="str">Входная строка, содержащая текст для преобразования.</param>
      <returns>Строка символов с любыми преобразованными символами, приведенными в их непреобразованную форму.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="str" /> включает нераспознанную escape-последовательность.</exception>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="str" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.UseOptionC">
      <summary>Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <returns>Значение <see langword="true" />, если свойство <see cref="P:System.Text.RegularExpressions.Regex.Options" /> содержит параметр <see cref="F:System.Text.RegularExpressions.RegexOptions.Compiled" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.UseOptionR">
      <summary>Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <returns>Значение <see langword="true" />, если свойство <see cref="P:System.Text.RegularExpressions.Regex.Options" /> содержит параметр <see cref="F:System.Text.RegularExpressions.RegexOptions.RightToLeft" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.ValidateMatchTimeout(System.TimeSpan)">
      <summary>Проверяет, попадает ли интервал времени ожидания в допустимый диапазон.</summary>
      <param name="matchTimeout">Время ожидания, которое требуется проверить.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Указанное время ожидания выходит за пределы допустимого диапазона.</exception>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexCompilationInfo">
      <summary>Представляет сведения о регулярном выражении, используемые для компиляции регулярного выражения в отдельную сборку.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" />, содержащего сведения о регулярном выражении, которое должно быть включено в сборку.</summary>
      <param name="pattern">Регулярное выражение для компилирования.</param>
      <param name="options">Параметры регулярного выражения для использования при компилировании регулярного выражения.</param>
      <param name="name">Имя типа, представляющего скомпилированное регулярное выражение.</param>
      <param name="fullnamespace">Пространство имен, к которому принадлежит новый тип.</param>
      <param name="ispublic">Значение <see langword="true" />, чтобы сделать скомпилированное регулярное выражение видимым для всех, иначе значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException">Свойство <paramref name="name" /> имеет значение <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pattern" /> — <see langword="null" />.  

или - 
<paramref name="name" /> — <see langword="null" />.  

или - 
<paramref name="fullnamespace" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" />, содержащего сведения о регулярном выражении с указанным значение времени ожидания, которое должно быть включено в сборку.</summary>
      <param name="pattern">Регулярное выражение для компилирования.</param>
      <param name="options">Параметры регулярного выражения для использования при компилировании регулярного выражения.</param>
      <param name="name">Имя типа, представляющего скомпилированное регулярное выражение.</param>
      <param name="fullnamespace">Пространство имен, к которому принадлежит новый тип.</param>
      <param name="ispublic">Значение <see langword="true" />, чтобы сделать скомпилированное регулярное выражение видимым для всех, иначе значение <see langword="false" />.</param>
      <param name="matchTimeout">Интервал времени ожидания по умолчанию для регулярного выражения.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> — <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pattern" /> — <see langword="null" />.  

или - 
Свойство <paramref name="name" /> имеет значение <see langword="null" />.  

или - 
Свойство <paramref name="fullnamespace" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="matchTimeout" /> отрицательное, равно нулю или больше, чем приблизительно 24 дня.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.IsPublic">
      <summary>Получает или задает значение, указывающее на то, обладает ли скомпилированное регулярное выражение общей видимостью.</summary>
      <returns>Значение <see langword="true" />, если регулярное выражение обладает общей видимостью, иначе значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
      <summary>Получает или задает интервал времени ожидания по умолчанию регулярного выражения.</summary>
      <returns>Максимальный интервал времени по умолчанию, который может пройти в операции сравнения с шаблоном, прежде чем возникнет исключение <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" />, или <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, если контроль времени ожидания отключен.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.Name">
      <summary>Получает или задает имя типа, представляющего скомпилированное регулярное выражение.</summary>
      <returns>Имя нового типа.</returns>
      <exception cref="T:System.ArgumentNullException">Значением этого свойства является <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Значением для этого свойства является пустая строка.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.Namespace">
      <summary>Получает или задает пространство имен, к которому принадлежит новый тип.</summary>
      <returns>Пространство имен нового типа.</returns>
      <exception cref="T:System.ArgumentNullException">Значением этого свойства является <see langword="null" />.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.Options">
      <summary>Получает или задает параметры для использования при компилировании регулярного выражения.</summary>
      <returns>Побитовое сочетание значений перечисления.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.Pattern">
      <summary>Получает или задает регулярное выражение для компилирования.</summary>
      <returns>Регулярное выражение для компилирования.</returns>
      <exception cref="T:System.ArgumentNullException">Значением этого свойства является <see langword="null" />.</exception>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
      <summary>Исключение, которое возникает, если время выполнения метода сопоставления шаблонов регулярного выражения превышает его интервал времени ожидания.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" />, используя системное сообщение.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> с сериализованными данными.</summary>
      <param name="info">Объект, содержащий сериализованные данные.</param>
      <param name="context">Поток, содержащий сериализованные данные.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> указанной строкой сообщения.</summary>
      <param name="message">Строка, описывающая исключение.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message">Строка, описывающая исключение.</param>
      <param name="inner">Исключение, которое является причиной текущего исключения.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.String,System.TimeSpan)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> сведениями о шаблоне регулярного выражения, входном тексте и интервалом времени ожидания.</summary>
      <param name="regexInput">Входной текст, обработанный обработчиком регулярных выражений, если истекло время ожидания.</param>
      <param name="regexPattern">Шаблон, используемый обработчиком регулярных выражений, если истекло время ожидания.</param>
      <param name="matchTimeout">Интервал времени ожидания.</param>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexMatchTimeoutException.Input">
      <summary>Получает входной текст, который обрабатывался обработчиком регулярных выражений, когда истекло время ожидания.</summary>
      <returns>Входной текст регулярного выражения.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout">
      <summary>Получает интервал времени для сравнения регулярного выражения.</summary>
      <returns>Интервал времени ожидания.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexMatchTimeoutException.Pattern">
      <summary>Получает шаблон регулярного выражения, который использовался в операции сравнения, когда истекло время ожидания.</summary>
      <returns>Шаблон регулярного выражения.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Заполняет объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> данными, необходимыми для сериализации объекта <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" />.</summary>
      <param name="si">Объект, который требуется заполнить данными.</param>
      <param name="context">Целевой объект этой сериализации.</param>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexOptions">
      <summary>Предоставляет перечисленные значения для использования при задании параметров регулярных выражений.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.Compiled">
      <summary>Указывает, что регулярное выражение скомпилировано в сборку. Это порождает более быстрое исполнение, но увеличивает время запуска. Это значение не должно назначаться свойству <see cref="P:System.Text.RegularExpressions.RegexCompilationInfo.Options" /> при обращении к методу <see cref="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" />. Дополнительные сведения см. в подразделе "Скомпилированные регулярные выражения" раздела Параметры регулярных выражений.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.CultureInvariant">
      <summary>Указывает игнорирование региональных языковых различий. Дополнительные сведения см. в подразделе "Сравнение с использованием инвариантного языка и региональных параметров" раздела Параметры регулярных выражений.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.ECMAScript">
      <summary>Включает ECMAScript-совместимое поведение для выражения. Это значение может быть использовано только вместе со значениями <see cref="F:System.Text.RegularExpressions.RegexOptions.IgnoreCase" />, <see cref="F:System.Text.RegularExpressions.RegexOptions.Multiline" /> и <see cref="F:System.Text.RegularExpressions.RegexOptions.Compiled" />. Использование этого значения вместе с любыми другими приводит к исключению.  
Дополнительные сведения о параметре <see cref="F:System.Text.RegularExpressions.RegexOptions.ECMAScript" /> см. в подразделе "Поведение сопоставления ECMAScript" раздела Параметры регулярных выражений.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.ExplicitCapture">
      <summary>Указывает, что единственные допустимые записи являются явно именованными или нумерованными группами в форме (?&lt;name&gt;...). Это позволяет использовать неименованные круглые скобки в качестве незахватываемых групп, тем самым не допуская синтаксической громоздкости выражения (?:...). Дополнительные сведения см. в подразделе "Только явные захваты" раздела Параметры регулярных выражений.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.IgnoreCase">
      <summary>Указывает соответствие, не учитывающее регистр. Дополнительные сведения см. в подразделе "Сопоставление без учета регистра" раздела Параметры регулярных выражений.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.IgnorePatternWhitespace">
      <summary>Устраняет из шаблона неизбежные пробелы и включает комментарии, помеченные "#". Однако это значение не затрагивает и не устраняет пробелы в классах символов, числовых квантификаторах или токенах, отмечающих начало отдельных языковых элементов регулярных выражений. Дополнительные сведения см. в подразделе "Пропуск пробелов" раздела Параметры регулярных выражений.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.Multiline">
      <summary>Многострочный режим. Изменяет значение символов "^" и "$" так, что они совпадают, соответственно, в начале и конце любой строки, а не только в начале и конце целой строки. Дополнительные сведения см. в подразделе "Многострочный режим" раздела Параметры регулярных выражений.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.None">
      <summary>Указывает на отсутствие заданных параметров. Дополнительные сведения о поведении по умолчанию обработчика регулярных выражений см. в подразделе "Параметры по умолчанию" раздела Параметры регулярных выражений.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.RightToLeft">
      <summary>Указывает, что поиск будет выполнен в направлении справа налево, а не слева направо. Дополнительные сведения см. в подразделе "Режим справа налево" раздела Параметры регулярных выражений.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.Singleline">
      <summary>Указывает однострочный режим. Изменяет значение точки (.) так, что она соответствует любому символу (вместо любого символа, кроме "\n"). Дополнительные сведения см. в подразделе "Однострочный режим" раздела Параметры регулярных выражений.</summary>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexRunner">
      <summary>Класс <see cref="T:System.Text.RegularExpressions.RegexRunner" /> является базовым классом для скомпилированных регулярных выражений.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Text.RegularExpressions.RegexRunner" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Capture(System.Int32,System.Int32,System.Int32)">
      <summary>Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="capnum">Номер записи.</param>
      <param name="start">Начальное положение записи.</param>
      <param name="end">Конечное положение записи.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.CharInClass(System.Char,System.String)">
      <summary>Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />. Определяет, находится ли символ в классе символов.</summary>
      <param name="ch">Символ для проверки.</param>
      <param name="charClass">Внутреннее имя класса символов.</param>
      <returns>Значение <see langword="true" />, если параметр <paramref name="ch" /> находится в классе символов, указанном параметром <paramref name="charClass" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.CharInSet(System.Char,System.String,System.String)">
      <summary>Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="ch">Символ.</param>
      <param name="set">Набор символов.</param>
      <param name="category">Категория символов.</param>
      <returns>Возвращает <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.CheckTimeout">
      <summary>Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Crawl(System.Int32)">
      <summary>Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="i">Число для сохранения.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Crawlpos">
      <summary>Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <returns>Возвращает <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.DoubleCrawl">
      <summary>Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" /> , который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> .</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.DoubleStack">
      <summary>Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.DoubleTrack">
      <summary>Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.EnsureStorage">
      <summary>Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.FindFirstChar">
      <summary>Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <returns>Возвращает <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Go">
      <summary>Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" /> , который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> .</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.InitTrackCount">
      <summary>Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.IsBoundary(System.Int32,System.Int32,System.Int32)">
      <summary>Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="index">Возможное положение границ.</param>
      <param name="startpos">Начальное положение.</param>
      <param name="endpos">Конечное положение.</param>
      <returns>Возвращает <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.IsECMABoundary(System.Int32,System.Int32,System.Int32)">
      <summary>Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="index">Возможное положение границ ECMA.</param>
      <param name="startpos">Начальное положение.</param>
      <param name="endpos">Конечное положение.</param>
      <returns>Возвращает <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.IsMatched(System.Int32)">
      <summary>Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="cap">Номер записи.</param>
      <returns>Возвращает <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.MatchIndex(System.Int32)">
      <summary>Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="cap">Номер записи.</param>
      <returns>Возвращает <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.MatchLength(System.Int32)">
      <summary>Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="cap">Номер записи.</param>
      <returns>Возвращает <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Popcrawl">
      <summary>Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <returns>Возвращает <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runcrawl">
      <summary>Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" /> , который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> .</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runcrawlpos">
      <summary>Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runmatch">
      <summary>Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runregex">
      <summary>Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runstack">
      <summary>Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runstackpos">
      <summary>Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtext">
      <summary>Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtextbeg">
      <summary>Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtextend">
      <summary>Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtextpos">
      <summary>Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtextstart">
      <summary>Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtrack">
      <summary>Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtrackcount">
      <summary>Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtrackpos">
      <summary>Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Scan(System.Text.RegularExpressions.Regex,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="regex">Экземпляр механизма регулярных выражений.</param>
      <param name="text">Текст для проверки на соответствие шаблону.</param>
      <param name="textbeg">Отсчитываемая с нуля начальная позиция в <paramref name="text" />, из которой механизм регулярных выражений начинает проверку на совпадения.</param>
      <param name="textend">Отсчитываемая с нуля конечная позиция в <paramref name="text" />, в которой механизм регулярных выражений заканчивает проверку на совпадения.</param>
      <param name="textstart">Отсчитываемая с нуля начальная позиция для проверки на совпадения.</param>
      <param name="prevlen">Число символов в предыдущем совпадении.</param>
      <param name="quick">Значение <see langword="true" /> для проверки на совпадения в быстром режиме. В противном случае — <see langword="false" />.</param>
      <returns>Совпадение.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Scan(System.Text.RegularExpressions.Regex,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.TimeSpan)">
      <summary>Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="regex">Экземпляр механизма регулярных выражений.</param>
      <param name="text">Текст для проверки на соответствие шаблону.</param>
      <param name="textbeg">Отсчитываемая с нуля начальная позиция в <paramref name="text" />, из которой механизм регулярных выражений начинает проверку на совпадения.</param>
      <param name="textend">Отсчитываемая с нуля конечная позиция в <paramref name="text" />, в которой механизм регулярных выражений заканчивает проверку на совпадения.</param>
      <param name="textstart">Отсчитываемая с нуля начальная позиция для проверки на совпадения.</param>
      <param name="prevlen">Число символов в предыдущем совпадении.</param>
      <param name="quick">Значение <see langword="true" /> для проверки на совпадения в быстром режиме. В противном случае — <see langword="false" />.</param>
      <param name="timeout">Интервал времени ожидания.</param>
      <returns>Совпадение.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.TransferCapture(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="capnum">Номер записи.</param>
      <param name="uncapnum">Сохраненный номер записи.</param>
      <param name="start">Начальное положение.</param>
      <param name="end">Конечное положение.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Uncapture">
      <summary>Используется объектом <see cref="T:System.Text.RegularExpressions.Regex" />, который создан методом <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexRunnerFactory">
      <summary>Создает класс <see cref="T:System.Text.RegularExpressions.RegexRunner" /> для скомпилированного регулярного выражения.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunnerFactory.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Text.RegularExpressions.RegexRunnerFactory" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunnerFactory.CreateInstance">
      <summary>При переопределении в производный класс создает объект <see cref="T:System.Text.RegularExpressions.RegexRunner" /> для конкретного скомпилированного регулярного выражения.</summary>
      <returns>Объект <see cref="T:System.Text.RegularExpressions.RegexRunner" /> разработан для выполнения конкретного скомпилированного регулярного выражения.</returns>
    </member>
  </members>
</doc>