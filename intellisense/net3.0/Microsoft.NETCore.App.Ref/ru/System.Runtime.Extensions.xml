<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Runtime.Extensions</name>
  </assembly>
  <members>
    <member name="T:System.AppDomain">
      <summary>Представляет домен приложения, являющийся изолированной средой, в которой выполняются приложения. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.AppDomain.AppendPrivatePath(System.String)">
      <summary>Добавляет указанное имя каталога к закрытому списку путей.</summary>
      <param name="path">Имя каталога, который следует добавить в закрытый путь.</param>
      <exception cref="T:System.AppDomainUnloadedException">Предпринята попытка выполнения операции с выгруженным доменом приложения.</exception>
    </member>
    <member name="M:System.AppDomain.ApplyPolicy(System.String)">
      <summary>Возвращает отображаемое имя сборки после применения политики.</summary>
      <param name="assemblyName">Отображаемое имя сборки в форме, заданной свойством <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <returns>Строка, содержащая отображаемое имя сборки после применения политики.</returns>
    </member>
    <member name="E:System.AppDomain.AssemblyLoad">
      <summary>происходит, когда загружена сборка.</summary>
    </member>
    <member name="E:System.AppDomain.AssemblyResolve">
      <summary>Происходит, когда разрешение сборки завершается неудачей.</summary>
    </member>
    <member name="P:System.AppDomain.BaseDirectory">
      <summary>Возвращает базовый каталог, в котором распознаватель сборок производит поиск.</summary>
      <returns>Базовый каталог, в котором распознаватель сборок производит поиск.</returns>
      <exception cref="T:System.AppDomainUnloadedException">Предпринята попытка выполнения операции с выгруженным доменом приложения.</exception>
    </member>
    <member name="M:System.AppDomain.ClearPrivatePath">
      <summary>Сбрасывает путь, указывающий на размещение закрытых сборок, присваивая ему пустую строку ("").</summary>
      <exception cref="T:System.AppDomainUnloadedException">Предпринята попытка выполнения операции с выгруженным доменом приложения.</exception>
    </member>
    <member name="M:System.AppDomain.ClearShadowCopyPath">
      <summary>Сбрасывает список каталогов, содержащих теневые копии сборок, присваивая ему пустую строку ("").</summary>
      <exception cref="T:System.AppDomainUnloadedException">Предпринята попытка выполнения операции с выгруженным доменом приложения.</exception>
    </member>
    <member name="M:System.AppDomain.CreateDomain(System.String)">
      <summary>Создает новый домен приложения с заданным именем.</summary>
      <param name="friendlyName">Понятное имя домена.</param>
      <returns>Вновь созданный домен приложения.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="friendlyName" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Метод не поддерживается в .NET Core.</exception>
    </member>
    <member name="M:System.AppDomain.CreateInstance(System.String,System.String)">
      <summary>Создает новый экземпляр заданного типа, определенного в указанной сборке.</summary>
      <param name="assemblyName">Отображаемое имя сборки. См. раздел <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <param name="typeName">Полное имя запрошенного типа, включая пространство имен, но не сборку (см. описание свойства <see cref="P:System.Type.FullName" />).</param>
      <returns>Объект, являющийся оболочкой для нового экземпляра, заданного параметром <paramref name="typeName" />. Необходимо распаковать возвращенное значение, чтобы получить доступ к реальному объекту.</returns>
      <exception cref="T:System.AppDomainUnloadedException">Предпринята попытка выполнения операции с выгруженным доменом приложения.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="assemblyName" /> или <paramref name="typeName" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> не является допустимой сборкой.  

или - 
В настоящий момент загружена версия 2.0 среды CLR, а параметр <paramref name="assemblyName" /> был скомпилирован в более поздней версии.</exception>
      <exception cref="T:System.IO.FileLoadException">Сборка или модуль был загружен дважды с двумя разными свидетельствами.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Не удалось найти <paramref name="assemblyName" />.</exception>
      <exception cref="T:System.MethodAccessException">Вызывающий код не имеет разрешения на вызов этого конструктора.</exception>
      <exception cref="T:System.MissingMethodException">Соответствующий открытый конструктор не найден.</exception>
      <exception cref="T:System.TypeLoadException">Не удалось найти <paramref name="typename" /> в <paramref name="assemblyName" />.</exception>
      <exception cref="T:System.NullReferenceException">Этот экземпляр имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.AppDomain.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
      <summary>Создает новый экземпляр заданного типа, определенного в указанной сборке. Параметры определяют средство связывания, флаги привязки, аргументы конструктора, сведения, связанные с языком и региональными параметрами, используемые для интерпретации аргументов, и необязательные атрибуты активации.</summary>
      <param name="assemblyName">Отображаемое имя сборки. См. раздел <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <param name="typeName">Полное имя запрошенного типа, включая пространство имен, но не сборку (см. описание свойства <see cref="P:System.Type.FullName" />).</param>
      <param name="ignoreCase">Логическое значение, указывающее, следует ли учитывать регистр при поиске.</param>
      <param name="bindingAttr">Сочетание битовых флагов, влияющих на поиск конструктора <paramref name="typeName" />. Если значение параметра <paramref name="bindingAttr" /> равно нулю, проводится поиск открытых конструкторов с учетом регистра.</param>
      <param name="binder">Объект, позволяющий осуществлять привязку, приведение типов аргументов, вызов элементов, а также поиск объектов <see cref="T:System.Reflection.MemberInfo" /> с помощью отражения. Если параметр <paramref name="binder" /> имеет значение null, то используется модуль привязки по умолчанию.</param>
      <param name="args">Аргументы для передачи конструктору. Массив аргументов должен соответствовать по числу, порядку и типу параметров вызываемому конструктору. Если предпочтителен конструктор без параметров, то объект <paramref name="args" /> должен быть пустым массивом или значением NULL.</param>
      <param name="culture">Сведения о языке и региональных параметрах, которые влияют на приведение <paramref name="args" /> к формальным типам, объявленным для конструктора <paramref name="typeName" />. Если параметр <paramref name="culture" /> имеет значение <see langword="null" />, для текущего потока используется объект <see cref="T:System.Globalization.CultureInfo" />.</param>
      <param name="activationAttributes">Массив, состоящий из одного или нескольких атрибутов, которые могут участвовать в активации. Обычно это массив, содержащий один объект <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" />, определяющий URL-адрес, необходимый для активации удаленного объекта.  
Этот параметр связан с объектами, активируемыми клиентом. Активация клиентом — это устаревшая технология, которая сохраняется с целью обеспечения обратной совместимости; ее не рекомендуется использовать для разработки новых приложений. Сейчас в распределенных приложениях следует использовать Windows Communication Foundation.</param>
      <returns>Объект, являющийся оболочкой для нового экземпляра, заданного параметром <paramref name="typeName" />. Необходимо распаковать возвращенное значение, чтобы получить доступ к реальному объекту.</returns>
      <exception cref="T:System.AppDomainUnloadedException">Предпринята попытка выполнения операции с выгруженным доменом приложения.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="assemblyName" /> или <paramref name="typeName" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> не является допустимой сборкой.  

или - 
Сборка <paramref name="assemblyName" /> была скомпилирована в более поздней версии среды CLR, чем версия, загруженная в текущий момент.</exception>
      <exception cref="T:System.IO.FileLoadException">Сборка или модуль был загружен дважды с двумя разными свидетельствами.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Не удалось найти <paramref name="assemblyName" />.</exception>
      <exception cref="T:System.MethodAccessException">Вызывающий объект не имеет разрешения на вызов этого конструктора.</exception>
      <exception cref="T:System.MissingMethodException">Соответствующий конструктор не найден.</exception>
      <exception cref="T:System.NotSupportedException">Вызывающий объект не может предоставить атрибуты активации для объекта, который не является производным от <see cref="T:System.MarshalByRefObject" />.</exception>
      <exception cref="T:System.TypeLoadException">Не удалось найти <paramref name="typename" /> в <paramref name="assemblyName" />.</exception>
      <exception cref="T:System.NullReferenceException">Этот экземпляр имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.AppDomain.CreateInstance(System.String,System.String,System.Object[])">
      <summary>Создает новый экземпляр заданного типа, определенного в указанной сборке. Параметр определяет массив атрибутов активации.</summary>
      <param name="assemblyName">Отображаемое имя сборки. См. раздел <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <param name="typeName">Полное имя запрошенного типа, включая пространство имен, но не сборку (см. описание свойства <see cref="P:System.Type.FullName" />).</param>
      <param name="activationAttributes">Массив, состоящий из одного или нескольких атрибутов, которые могут участвовать в активации. Обычно это массив, содержащий один объект <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" />, определяющий URL-адрес, необходимый для активации удаленного объекта.  
Этот параметр связан с объектами, активируемыми клиентом. Активация клиентом — это устаревшая технология, которая сохраняется с целью обеспечения обратной совместимости; ее не рекомендуется использовать для разработки новых приложений. Сейчас в распределенных приложениях следует использовать Windows Communication Foundation.</param>
      <returns>Объект, являющийся оболочкой для нового экземпляра, заданного параметром <paramref name="typeName" />. Необходимо распаковать возвращенное значение, чтобы получить доступ к реальному объекту.</returns>
      <exception cref="T:System.AppDomainUnloadedException">Предпринята попытка выполнения операции с выгруженным доменом приложения.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="assemblyName" /> или <paramref name="typeName" /> — <see langword="null" />.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> не является допустимой сборкой.  

или - 
В настоящий момент загружена версия 2.0 среды CLR, а параметр <paramref name="assemblyName" /> был скомпилирован в более поздней версии.</exception>
      <exception cref="T:System.IO.FileLoadException">Сборка или модуль был загружен дважды с двумя разными свидетельствами.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Не удалось найти <paramref name="assemblyName" />.</exception>
      <exception cref="T:System.MethodAccessException">Вызывающий код не имеет разрешения на вызов этого конструктора.</exception>
      <exception cref="T:System.MissingMethodException">Соответствующий общий конструктор не найден.</exception>
      <exception cref="T:System.NotSupportedException">Вызывающий объект не может предоставить атрибуты активации для объекта, который не является производным от <see cref="T:System.MarshalByRefObject" />.</exception>
      <exception cref="T:System.TypeLoadException">Не удалось найти <paramref name="typename" /> в <paramref name="assemblyName" />.</exception>
      <exception cref="T:System.NullReferenceException">Этот экземпляр имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.AppDomain.CreateInstanceAndUnwrap(System.String,System.String)">
      <summary>Создает новый экземпляр заданного типа. Параметры задают сборку, где определен тип, и имя типа.</summary>
      <param name="assemblyName">Отображаемое имя сборки. См. раздел <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <param name="typeName">Полное имя запрошенного типа, включая пространство имен, но не сборку, возвращаемое свойством <see cref="P:System.Type.FullName" />.</param>
      <returns>Экземпляр объекта, заданного параметром <paramref name="typeName" />.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="assemblyName" /> или <paramref name="typeName" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.MissingMethodException">Соответствующий общий конструктор не найден.</exception>
      <exception cref="T:System.TypeLoadException">Не удалось найти <paramref name="typename" /> в <paramref name="assemblyName" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Не удалось найти <paramref name="assemblyName" />.</exception>
      <exception cref="T:System.MethodAccessException">Вызывающий объект не имеет разрешения на вызов этого конструктора.</exception>
      <exception cref="T:System.AppDomainUnloadedException">Предпринята попытка выполнения операции с выгруженным доменом приложения.</exception>
      <exception cref="T:System.BadImageFormatException">Сборка, определенная параметром <paramref name="assemblyName" />, является недопустимой.  
-или- 
В настоящий момент загружена версия 2.0 среды CLR, а параметр <paramref name="assemblyName" /> был скомпилирован в более поздней версии.</exception>
      <exception cref="T:System.IO.FileLoadException">Сборка или модуль был загружен дважды с двумя разными свидетельствами.</exception>
    </member>
    <member name="M:System.AppDomain.CreateInstanceAndUnwrap(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
      <summary>Создает новый экземпляр заданного типа, определенного в заданной сборке, указывая, игнорируется ли регистр имени типа; атрибуты привязки и средство привязки, используемые для выбора создаваемого типа; аргументы конструктора; язык и региональные параметры; и атрибуты активации.</summary>
      <param name="assemblyName">Отображаемое имя сборки. См. раздел <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <param name="typeName">Полное имя запрошенного типа, включая пространство имен, но не сборку (см. описание свойства <see cref="P:System.Type.FullName" />).</param>
      <param name="ignoreCase">Логическое значение, указывающее, следует ли учитывать регистр при поиске.</param>
      <param name="bindingAttr">Сочетание битовых флагов, влияющих на поиск конструктора <paramref name="typeName" />. Если значение параметра <paramref name="bindingAttr" /> равно нулю, проводится поиск открытых конструкторов с учетом регистра.</param>
      <param name="binder">Объект, позволяющий осуществлять привязку, приведение типов аргументов, вызов элементов, а также поиск объектов <see cref="T:System.Reflection.MemberInfo" /> с помощью отражения. Если параметр <paramref name="binder" /> имеет значение null, то используется модуль привязки по умолчанию.</param>
      <param name="args">Аргументы для передачи конструктору. Массив аргументов должен соответствовать по числу, порядку и типу параметров вызываемому конструктору. Если предпочтителен конструктор без параметров, то объект <paramref name="args" /> должен быть пустым массивом или значением NULL.</param>
      <param name="culture">Объект, зависящий от языка и региональных параметров, который используется для управления приведением типов. Если значение параметра <paramref name="culture" /> равно <see langword="null" />, для текущего потока используется объект <see langword="CultureInfo" />.</param>
      <param name="activationAttributes">Массив, состоящий из одного или нескольких атрибутов, которые могут участвовать в активации. Как правило, массив, который содержит единственный объект <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" />. который определяет URL-адрес, необходимый для активации удаленного объекта.  
Этот параметр связан с объектами, активируемыми клиентом. Активация клиентом — это устаревшая технология, которая сохраняется с целью обеспечения обратной совместимости; ее не рекомендуется использовать для разработки новых приложений. Сейчас в распределенных приложениях следует использовать Windows Communication Foundation.</param>
      <returns>Экземпляр объекта, заданного параметром <paramref name="typeName" />.</returns>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="assemblyName" /> или <paramref name="typeName" /> — <see langword="null" />.</exception>
      <exception cref="T:System.MissingMethodException">Соответствующий конструктор не найден.</exception>
      <exception cref="T:System.TypeLoadException">Не удалось найти <paramref name="typename" /> в <paramref name="assemblyName" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Не удалось найти <paramref name="assemblyName" />.</exception>
      <exception cref="T:System.MethodAccessException">Вызывающий объект не имеет разрешения на вызов этого конструктора.</exception>
      <exception cref="T:System.NotSupportedException">Вызывающий объект не может предоставить атрибуты активации для объекта, который не является производным от <see cref="T:System.MarshalByRefObject" />.</exception>
      <exception cref="T:System.AppDomainUnloadedException">Предпринята попытка выполнения операции с выгруженным доменом приложения.</exception>
      <exception cref="T:System.BadImageFormatException">Сборка, определенная параметром <paramref name="assemblyName" />, является недопустимой.  
-или- 
 Сборка <paramref name="assemblyName" /> была скомпилирована в более поздней версии среды CLR, чем версия, загруженная в текущий момент.</exception>
      <exception cref="T:System.IO.FileLoadException">Сборка или модуль был загружен дважды с двумя разными свидетельствами.</exception>
    </member>
    <member name="M:System.AppDomain.CreateInstanceAndUnwrap(System.String,System.String,System.Object[])">
      <summary>Создает новый экземпляр заданного типа. Параметры задают сборку, где определен тип, имя типа и массив атрибутов активации.</summary>
      <param name="assemblyName">Отображаемое имя сборки. См. раздел <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <param name="typeName">Полное имя запрошенного типа, включая пространство имен, но не сборку (см. описание свойства <see cref="P:System.Type.FullName" />).</param>
      <param name="activationAttributes">Массив, состоящий из одного или нескольких атрибутов, которые могут участвовать в активации. Обычно это массив, содержащий один объект <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" />, определяющий URL-адрес, необходимый для активации удаленного объекта.  
Этот параметр связан с объектами, активируемыми клиентом. Активация клиентом — это устаревшая технология, которая сохраняется с целью обеспечения обратной совместимости; ее не рекомендуется использовать для разработки новых приложений. Сейчас в распределенных приложениях следует использовать Windows Communication Foundation.</param>
      <returns>Экземпляр объекта, заданного параметром <paramref name="typeName" />.</returns>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="assemblyName" /> или <paramref name="typeName" /> — <see langword="null" />.</exception>
      <exception cref="T:System.MissingMethodException">Соответствующий общий конструктор не найден.</exception>
      <exception cref="T:System.TypeLoadException">Не удалось найти <paramref name="typename" /> в <paramref name="assemblyName" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Не удалось найти <paramref name="assemblyName" />.</exception>
      <exception cref="T:System.MethodAccessException">Вызывающий объект не имеет разрешения на вызов этого конструктора.</exception>
      <exception cref="T:System.NotSupportedException">Вызывающий объект не может предоставить атрибуты активации для объекта, который не является производным от <see cref="T:System.MarshalByRefObject" />.</exception>
      <exception cref="T:System.AppDomainUnloadedException">Предпринята попытка выполнения операции с выгруженным доменом приложения.</exception>
      <exception cref="T:System.BadImageFormatException">Сборка, определенная параметром <paramref name="assemblyName" />, является недопустимой.  

или - 
В настоящий момент загружена версия 2.0 среды CLR, а параметр <paramref name="assemblyName" /> был скомпилирован в более поздней версии.</exception>
      <exception cref="T:System.IO.FileLoadException">Сборка или модуль был загружен дважды с двумя разными свидетельствами.</exception>
    </member>
    <member name="M:System.AppDomain.CreateInstanceFrom(System.String,System.String)">
      <summary>Создает новый экземпляр заданного типа, определенного в указанном файле сборки.</summary>
      <param name="assemblyFile">Имя (включая путь) файла, который содержит сборку, определяющую запрошенный тип. Сборка загружается с помощью метода <see cref="M:System.Reflection.Assembly.LoadFrom(System.String)" />.</param>
      <param name="typeName">Полное имя запрошенного типа, включая пространство имен, но не сборку (см. описание свойства <see cref="P:System.Type.FullName" />).</param>
      <returns>Объект, являющийся оболочкой для нового экземпляра, или значение <see langword="null" />, если <paramref name="typeName" /> не найден. Необходимо распаковать возвращенное значение, чтобы получить доступ к реальному объекту.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="assemblyFile" /> имеет значение <see langword="null" />.  

или - 
Свойство <paramref name="typeName" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Файл <paramref name="assemblyFile" /> не найден.</exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typeName" /> в сборке <paramref name="assemblyFile" /> не найден.</exception>
      <exception cref="T:System.AppDomainUnloadedException">Предпринята попытка выполнения операции с выгруженным доменом приложения.</exception>
      <exception cref="T:System.MissingMethodException">Открытый конструктор без параметров не найден.</exception>
      <exception cref="T:System.MethodAccessException">Вызывающий код не имеет достаточных разрешений на вызов этого конструктора.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyFile" /> не является допустимой сборкой.  

или - 
В настоящий момент загружена версия 2.0 среды CLR, а параметр <paramref name="assemblyFile" /> был скомпилирован в более поздней версии.</exception>
      <exception cref="T:System.IO.FileLoadException">Сборка или модуль был загружен дважды с двумя разными свидетельствами.</exception>
      <exception cref="T:System.NullReferenceException">Этот экземпляр имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.AppDomain.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
      <summary>Создает новый экземпляр заданного типа, определенного в указанном файле сборки.</summary>
      <param name="assemblyFile">Имя (включая путь) файла, который содержит сборку, определяющую запрошенный тип. Сборка загружается с помощью метода <see cref="M:System.Reflection.Assembly.LoadFrom(System.String)" />.</param>
      <param name="typeName">Полное имя запрошенного типа, включая пространство имен, но не сборку (см. описание свойства <see cref="P:System.Type.FullName" />).</param>
      <param name="ignoreCase">Логическое значение, указывающее, следует ли учитывать регистр при поиске.</param>
      <param name="bindingAttr">Сочетание битовых флагов, влияющих на поиск конструктора <paramref name="typeName" />. Если значение параметра <paramref name="bindingAttr" /> равно нулю, проводится поиск открытых конструкторов с учетом регистра.</param>
      <param name="binder">Объект, который допускает привязку, приведение типов аргументов, вызов элементов и извлечение объектов <see cref="T:System.Reflection.MemberInfo" /> путем отражения. Если значением параметра <paramref name="binder" /> является null, то используется средство связывания по умолчанию.</param>
      <param name="args">Аргументы для передачи конструктору. Массив аргументов должен соответствовать по числу, порядку и типу параметров вызываемому конструктору. Если предпочтителен конструктор без параметров, то объект <paramref name="args" /> должен быть пустым массивом или значением NULL.</param>
      <param name="culture">Сведения о языке и региональных параметрах, которые влияют на приведение <paramref name="args" /> к формальным типам, объявленным для конструктора <paramref name="typeName" />. Если параметр <paramref name="culture" /> имеет значение <see langword="null" />, для текущего потока используется объект <see cref="T:System.Globalization.CultureInfo" />.</param>
      <param name="activationAttributes">Массив, состоящий из одного или нескольких атрибутов, которые могут участвовать в активации. Обычно это массив, содержащий один объект <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" />, определяющий URL-адрес, необходимый для активации удаленного объекта.  
Этот параметр связан с объектами, активируемыми клиентом. Активация клиентом — это устаревшая технология, которая сохраняется с целью обеспечения обратной совместимости; ее не рекомендуется использовать для разработки новых приложений. Сейчас в распределенных приложениях следует использовать Windows Communication Foundation.</param>
      <returns>Объект, являющийся оболочкой для нового экземпляра, или значение <see langword="null" />, если <paramref name="typeName" /> не найден. Необходимо распаковать возвращенное значение, чтобы получить доступ к реальному объекту.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="assemblyFile" /> имеет значение <see langword="null" />.  

или - 
Свойство <paramref name="typeName" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Вызывающий объект не может предоставить атрибуты активации для объекта, который не является производным от <see cref="T:System.MarshalByRefObject" />.</exception>
      <exception cref="T:System.AppDomainUnloadedException">Предпринята попытка выполнения операции с выгруженным доменом приложения.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Не удалось найти <paramref name="assemblyFile" />.</exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typeName" /> не найден в <paramref name="assemblyFile" />.</exception>
      <exception cref="T:System.MissingMethodException">Соответствующий общий конструктор не найден.</exception>
      <exception cref="T:System.MethodAccessException">Вызывающий объект не имеет достаточно разрешений для вызова этого конструктора.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyFile" /> не является допустимой сборкой.  
-или- 
 Сборка <paramref name="assemblyFile" /> была скомпилирована в более поздней версии среды CLR, чем версия, загруженная в текущий момент.</exception>
      <exception cref="T:System.IO.FileLoadException">Сборка или модуль был загружен дважды с двумя разными свидетельствами.</exception>
      <exception cref="T:System.NullReferenceException">Этот экземпляр имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.AppDomain.CreateInstanceFrom(System.String,System.String,System.Object[])">
      <summary>Создает новый экземпляр заданного типа, определенного в указанном файле сборки.</summary>
      <param name="assemblyFile">Имя (включая путь) файла, который содержит сборку, определяющую запрошенный тип. Сборка загружается с помощью метода <see cref="M:System.Reflection.Assembly.LoadFrom(System.String)" />.</param>
      <param name="typeName">Полное имя запрошенного типа, включая пространство имен, но не сборку (см. описание свойства <see cref="P:System.Type.FullName" />).</param>
      <param name="activationAttributes">Массив, состоящий из одного или нескольких атрибутов, которые могут участвовать в активации. Обычно это массив, содержащий один объект <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" />, определяющий URL-адрес, необходимый для активации удаленного объекта.  
Этот параметр связан с объектами, активируемыми клиентом. Активация клиентом — это устаревшая технология, которая сохраняется с целью обеспечения обратной совместимости; ее не рекомендуется использовать для разработки новых приложений. Сейчас в распределенных приложениях следует использовать Windows Communication Foundation.</param>
      <returns>Объект, являющийся оболочкой для нового экземпляра, или значение <see langword="null" />, если <paramref name="typeName" /> не найден. Необходимо распаковать возвращенное значение, чтобы получить доступ к реальному объекту.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyFile" /> — <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Файл <paramref name="assemblyFile" /> не найден.</exception>
      <exception cref="T:System.TypeLoadException">Не удалось найти <paramref name="typeName" /> в <paramref name="assemblyFile" />.</exception>
      <exception cref="T:System.MethodAccessException">Вызывающий объект не имеет достаточно разрешений для вызова этого конструктора.</exception>
      <exception cref="T:System.MissingMethodException">Соответствующий общий конструктор не найден.</exception>
      <exception cref="T:System.NotSupportedException">Вызывающий объект не может предоставить атрибуты активации для объекта, который не является производным от <see cref="T:System.MarshalByRefObject" />.</exception>
      <exception cref="T:System.AppDomainUnloadedException">Предпринята попытка выполнения операции с выгруженным доменом приложения.</exception>
      <exception cref="T:System.BadImageFormatException">Сборка, определенная параметром <paramref name="assemblyFile" />, является недопустимой.  
-или- 
В настоящий момент загружена версия 2.0 среды CLR, а параметр <paramref name="assemblyFile" /> был скомпилирован в более поздней версии.</exception>
      <exception cref="T:System.IO.FileLoadException">Сборка или модуль был загружен дважды с двумя разными свидетельствами.</exception>
      <exception cref="T:System.NullReferenceException">Этот экземпляр имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.AppDomain.CreateInstanceFromAndUnwrap(System.String,System.String)">
      <summary>Создает новый экземпляр заданного типа, определенного в указанном файле сборки.</summary>
      <param name="assemblyName">Имя файла и путь сборки, которая определяет запрошенный тип.</param>
      <param name="typeName">Полное имя запрошенного типа, включая пространство имен, но не сборку (см. описание свойства <see cref="P:System.Type.FullName" />).</param>
      <returns>Запрашиваемый объект или значение <see langword="null" />, если объект <paramref name="typeName" /> не найден.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> — <see langword="null" />.  

или - 
<paramref name="typeName" /> — <see langword="null" />.</exception>
      <exception cref="T:System.AppDomainUnloadedException">Предпринята попытка выполнения операции с выгруженным доменом приложения.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Не удалось найти <paramref name="assemblyName" />.</exception>
      <exception cref="T:System.TypeLoadException">Не удалось найти <paramref name="typeName" /> в <paramref name="assemblyName" />.</exception>
      <exception cref="T:System.MissingMethodException">Открытый конструктор без параметров не найден.</exception>
      <exception cref="T:System.MethodAccessException">Вызывающий код не имеет достаточных разрешений на вызов этого конструктора.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> не является допустимой сборкой.  

или - 
В настоящий момент загружена версия 2.0 среды CLR, а параметр <paramref name="assemblyName" /> был скомпилирован в более поздней версии.</exception>
      <exception cref="T:System.IO.FileLoadException">Сборка или модуль был загружен дважды с двумя разными свидетельствами.</exception>
    </member>
    <member name="M:System.AppDomain.CreateInstanceFromAndUnwrap(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
      <summary>Создает новый экземпляр заданного типа, определенного в заданном файле сборки, указывая, игнорируется ли регистр имени типа; атрибуты привязки и средство привязки, используемые для выбора создаваемого типа; аргументы конструктора; язык и региональные параметры; и атрибуты активации.</summary>
      <param name="assemblyFile">Имя файла и путь сборки, которая определяет запрошенный тип.</param>
      <param name="typeName">Полное имя запрошенного типа, включая пространство имен, но не сборку (см. описание свойства <see cref="P:System.Type.FullName" />).</param>
      <param name="ignoreCase">Логическое значение, указывающее, следует ли учитывать регистр при поиске.</param>
      <param name="bindingAttr">Сочетание битовых флагов, влияющих на поиск конструктора <paramref name="typeName" />. Если значение параметра <paramref name="bindingAttr" /> равно нулю, проводится поиск открытых конструкторов с учетом регистра.</param>
      <param name="binder">Объект, который допускает привязку, приведение типов аргументов, вызов элементов и извлечение объектов <see cref="T:System.Reflection.MemberInfo" /> путем отражения. Если значением параметра <paramref name="binder" /> является null, то используется средство связывания по умолчанию.</param>
      <param name="args">Аргументы для передачи конструктору. Массив аргументов должен соответствовать по числу, порядку и типу параметров вызываемому конструктору. Если предпочтителен конструктор без параметров, то объект <paramref name="args" /> должен быть пустым массивом или значением NULL.</param>
      <param name="culture">Сведения о языке и региональных параметрах, которые влияют на приведение <paramref name="args" /> к формальным типам, объявленным для конструктора <paramref name="typeName" />. Если параметр <paramref name="culture" /> имеет значение <see langword="null" />, для текущего потока используется объект <see cref="T:System.Globalization.CultureInfo" />.</param>
      <param name="activationAttributes">Массив, состоящий из одного или нескольких атрибутов, которые могут участвовать в активации. Обычно это массив, содержащий один объект <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" />, определяющий URL-адрес, необходимый для активации удаленного объекта.  
Этот параметр связан с объектами, активируемыми клиентом. Активация клиентом — это устаревшая технология, которая сохраняется с целью обеспечения обратной совместимости; ее не рекомендуется использовать для разработки новых приложений. Сейчас в распределенных приложениях следует использовать Windows Communication Foundation.</param>
      <returns>Запрашиваемый объект или значение <see langword="null" />, если объект <paramref name="typeName" /> не найден.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="assemblyName" /> имеет значение <see langword="null" />.  
-или- 
 Свойство <paramref name="typeName" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Вызывающий объект не может предоставить атрибуты активации для объекта, который не является производным от <see cref="T:System.MarshalByRefObject" />.</exception>
      <exception cref="T:System.AppDomainUnloadedException">Предпринята попытка выполнения операции с выгруженным доменом приложения.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Не удалось найти <paramref name="assemblyName" />.</exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typeName" /> не найден в <paramref name="assemblyName" />.</exception>
      <exception cref="T:System.MissingMethodException">Соответствующий общий конструктор не найден.</exception>
      <exception cref="T:System.MethodAccessException">Вызывающий объект не имеет достаточно разрешений для вызова этого конструктора.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> не является допустимой сборкой.  
-или- 
 Сборка <paramref name="assemblyName" /> скомпилирована в более поздней версии среды CLR, чем версия, загруженная в текущий момент.</exception>
      <exception cref="T:System.IO.FileLoadException">Сборка или модуль был загружен дважды с двумя разными свидетельствами.</exception>
    </member>
    <member name="M:System.AppDomain.CreateInstanceFromAndUnwrap(System.String,System.String,System.Object[])">
      <summary>Создает новый экземпляр заданного типа, определенного в указанном файле сборки.</summary>
      <param name="assemblyName">Имя файла и путь сборки, которая определяет запрошенный тип.</param>
      <param name="typeName">Полное имя запрошенного типа, включая пространство имен, но не сборку (см. описание свойства <see cref="P:System.Type.FullName" />).</param>
      <param name="activationAttributes">Массив, состоящий из одного или нескольких атрибутов, которые могут участвовать в активации. Обычно это массив, содержащий один объект <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" />, определяющий URL-адрес, необходимый для активации удаленного объекта.  
Этот параметр связан с объектами, активируемыми клиентом. Активация клиентом — это устаревшая технология, которая сохраняется с целью обеспечения обратной совместимости; ее не рекомендуется использовать для разработки новых приложений. Сейчас в распределенных приложениях следует использовать Windows Communication Foundation.</param>
      <returns>Запрашиваемый объект или значение <see langword="null" />, если объект <paramref name="typeName" /> не найден.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> — <see langword="null" />.  

или - 
<paramref name="typeName" /> — <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Вызывающий объект не может предоставить атрибуты активации для объекта, который не является производным от <see cref="T:System.MarshalByRefObject" />.</exception>
      <exception cref="T:System.AppDomainUnloadedException">Предпринята попытка выполнения операции с выгруженным доменом приложения.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Не удалось найти <paramref name="assemblyName" />.</exception>
      <exception cref="T:System.TypeLoadException">Не удалось найти <paramref name="typeName" /> в <paramref name="assemblyName" />.</exception>
      <exception cref="T:System.MissingMethodException">Открытый конструктор без параметров не найден.</exception>
      <exception cref="T:System.MethodAccessException">Вызывающий код не имеет достаточных разрешений на вызов этого конструктора.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> не является допустимой сборкой.  
-или- 
В настоящий момент загружена версия 2.0 среды CLR, а параметр <paramref name="assemblyName" /> был скомпилирован в более поздней версии.</exception>
      <exception cref="T:System.IO.FileLoadException">Сборка или модуль был загружен дважды с двумя разными свидетельствами.</exception>
    </member>
    <member name="P:System.AppDomain.CurrentDomain">
      <summary>Возвращает текущий домен приложения для текущего объекта <see cref="T:System.Threading.Thread" />.</summary>
      <returns>Текущий домен приложения.</returns>
    </member>
    <member name="E:System.AppDomain.DomainUnload">
      <summary>Происходит непосредственно перед выгрузкой объекта <see cref="T:System.AppDomain" />.</summary>
    </member>
    <member name="P:System.AppDomain.DynamicDirectory">
      <summary>Возвращает каталог, в котором распознаватель сборок производит поиск динамически созданных сборок.</summary>
      <returns>Каталог, в котором распознаватель сборок производит поиск динамически созданных сборок.</returns>
      <exception cref="T:System.AppDomainUnloadedException">Предпринята попытка выполнения операции с выгруженным доменом приложения.</exception>
    </member>
    <member name="M:System.AppDomain.ExecuteAssembly(System.String)">
      <summary>Выполняет сборку, содержащуюся в указанном файле.</summary>
      <param name="assemblyFile">Имя файла, содержащего сборку, которую необходимо выполнить.</param>
      <returns>Значение, возвращаемое точкой входа сборки.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyFile" /> — <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyFile" /> не найден.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyFile" /> не является допустимой сборкой.  

или - 
Сейчас загружена среда CLR 2.0 или более поздней версии. Сборка <paramref name="assemblyFile" /> скомпилирована в более поздней версии.</exception>
      <exception cref="T:System.AppDomainUnloadedException">Предпринята попытка выполнения операции с выгруженным доменом приложения.</exception>
      <exception cref="T:System.IO.FileLoadException">Сборка или модуль был загружен дважды с двумя разными свидетельствами.</exception>
      <exception cref="T:System.MissingMethodException">Указанная сборка не имеет точку входа.</exception>
    </member>
    <member name="M:System.AppDomain.ExecuteAssembly(System.String,System.String[])">
      <summary>Выполняет сборку, содержащуюся в указанном файле, с использованием заданных аргументов.</summary>
      <param name="assemblyFile">Имя файла, содержащего сборку, которую необходимо выполнить.</param>
      <param name="args">Аргументы, передаваемые в точку входа сборки.</param>
      <returns>Значение, возвращаемое точкой входа сборки.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="assemblyFile" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyFile" /> не найден.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyFile" /> не является допустимой сборкой.  

или - 
<paramref name="assemblyFile" /> была скомпилирована для версии среды CLR, которая является более поздней, чем версия, которая в настоящий момент загружена.</exception>
      <exception cref="T:System.AppDomainUnloadedException">Предпринята попытка выполнения операции с выгруженным доменом приложения.</exception>
      <exception cref="T:System.IO.FileLoadException">Сборка или модуль был загружен дважды с двумя разными свидетельствами.</exception>
      <exception cref="T:System.MissingMethodException">Указанная сборка не имеет точку входа.</exception>
    </member>
    <member name="M:System.AppDomain.ExecuteAssembly(System.String,System.String[],System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)">
      <summary>Выполняет сборку, содержащуюся в указанном файле, с использованием заданных аргументов, хэш-значения и хэш-алгоритма.</summary>
      <param name="assemblyFile">Имя файла, содержащего сборку, которую необходимо выполнить.</param>
      <param name="args">Аргументы, передаваемые в точку входа сборки.</param>
      <param name="hashValue">Представляет значение вычисляемого хэш-кода.</param>
      <param name="hashAlgorithm">Представляет алгоритм хэширования, используемый манифестом сборки.</param>
      <returns>Значение, возвращаемое точкой входа сборки.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyFile" /> — <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyFile" /> не найден.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyFile" /> не является допустимой сборкой.  
-или- 
 <paramref name="assemblyFile" /> была скомпилирована для версии среды CLR, которая является более поздней, чем версия, которая в настоящий момент загружена.</exception>
      <exception cref="T:System.AppDomainUnloadedException">Предпринята попытка выполнения операции с выгруженным доменом приложения.</exception>
      <exception cref="T:System.IO.FileLoadException">Сборка или модуль был загружен дважды с двумя разными свидетельствами.</exception>
      <exception cref="T:System.MissingMethodException">Указанная сборка не имеет точку входа.</exception>
    </member>
    <member name="M:System.AppDomain.ExecuteAssemblyByName(System.Reflection.AssemblyName,System.String[])">
      <summary>Выполняет сборку с заданным <see cref="T:System.Reflection.AssemblyName" /> с использованием заданных аргументов.</summary>
      <param name="assemblyName">Объект <see cref="T:System.Reflection.AssemblyName" />, представляющий имя сборки.</param>
      <param name="args">Аргументы командной строки для передачи при запуске процесса.</param>
      <returns>Значение, возвращаемое точкой входа сборки.</returns>
      <exception cref="T:System.IO.FileNotFoundException">Сборка, заданная параметром <paramref name="assemblyName" />, не найдена.</exception>
      <exception cref="T:System.IO.FileLoadException">Сборка, заданная параметром <paramref name="assemblyName" /> найдена, но ее невозможно загрузить.</exception>
      <exception cref="T:System.BadImageFormatException">Сборка, заданная параметром <paramref name="assemblyName" />, недопустимая.  
-или- 
 <paramref name="assemblyName" /> была скомпилирована для версии среды CLR, которая является более поздней, чем версия, которая в настоящий момент загружена.</exception>
      <exception cref="T:System.AppDomainUnloadedException">Предпринята попытка выполнения операции с выгруженным доменом приложения.</exception>
      <exception cref="T:System.MissingMethodException">Указанная сборка не имеет точку входа.</exception>
    </member>
    <member name="M:System.AppDomain.ExecuteAssemblyByName(System.String)">
      <summary>Выполняет сборку, определенную ее отображаемым именем.</summary>
      <param name="assemblyName">Отображаемое имя сборки. См. раздел <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <returns>Значение, возвращаемое точкой входа сборки.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="assemblyName" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Сборка, заданная параметром <paramref name="assemblyName" />, не найдена.</exception>
      <exception cref="T:System.BadImageFormatException">Сборка, заданная параметром <paramref name="assemblyName" />, не является допустимой сборкой.  
-или- 
Сейчас загружена среда CLR 2.0 или более поздней версии. Сборка <paramref name="assemblyName" /> скомпилирована в более поздней версии.</exception>
      <exception cref="T:System.AppDomainUnloadedException">Предпринята попытка выполнения операции с выгруженным доменом приложения.</exception>
      <exception cref="T:System.IO.FileLoadException">Сборка, заданная параметром <paramref name="assemblyName" />, найдена, но загрузить ее не удалось.</exception>
      <exception cref="T:System.MissingMethodException">Указанная сборка не имеет точку входа.</exception>
    </member>
    <member name="M:System.AppDomain.ExecuteAssemblyByName(System.String,System.String[])">
      <summary>Выполняет сборку с заданным отображаемым именем с использованием заданных аргументов.</summary>
      <param name="assemblyName">Отображаемое имя сборки. См. раздел <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <param name="args">Аргументы командной строки для передачи при запуске процесса.</param>
      <returns>Значение, возвращаемое точкой входа сборки.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="assemblyName" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Сборка, заданная параметром <paramref name="assemblyName" />, не найдена.</exception>
      <exception cref="T:System.IO.FileLoadException">Сборка, заданная параметром <paramref name="assemblyName" /> найдена, но ее невозможно загрузить.</exception>
      <exception cref="T:System.BadImageFormatException">Сборка, заданная параметром <paramref name="assemblyName" />, недопустимая.  

или - 
<paramref name="assemblyName" /> была скомпилирована для версии среды CLR, которая является более поздней, чем версия, которая в настоящий момент загружена.</exception>
      <exception cref="T:System.AppDomainUnloadedException">Предпринята попытка выполнения операции с выгруженным доменом приложения.</exception>
      <exception cref="T:System.MissingMethodException">Указанная сборка не имеет точку входа.</exception>
    </member>
    <member name="E:System.AppDomain.FirstChanceException">
      <summary>Происходит при создании исключения в управляемом коде, перед тем как среда выполнения ищет стек вызовов для обработчика исключений в домене приложений.</summary>
    </member>
    <member name="P:System.AppDomain.FriendlyName">
      <summary>Возвращает понятное имя этого домена приложения.</summary>
      <returns>Понятное имя этого домена приложения.</returns>
      <exception cref="T:System.AppDomainUnloadedException">Предпринята попытка выполнения операции с выгруженным доменом приложения.</exception>
    </member>
    <member name="M:System.AppDomain.GetAssemblies">
      <summary>Возвращает сборки, которые были загружены в контекст выполнения этого домена приложения.</summary>
      <returns>Массив сборок в этом домене приложения.</returns>
      <exception cref="T:System.AppDomainUnloadedException">Предпринята попытка выполнения операции с выгруженным доменом приложения.</exception>
    </member>
    <member name="M:System.AppDomain.GetCurrentThreadId">
      <summary>Получает текущий идентификатор потока.</summary>
      <returns>32-битовое целое число со знаком, являющееся идентификатором текущего потока.</returns>
    </member>
    <member name="M:System.AppDomain.GetData(System.String)">
      <summary>Возвращает значение, сохраненное в текущем домене приложения для заданного имени.</summary>
      <param name="name">Имя предопределенного свойства домена приложения или имя определенного вами свойства домена приложения.</param>
      <returns>Значение свойства <paramref name="name" /> или значение <see langword="null" />, если это свойство не существует.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="name" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.AppDomainUnloadedException">Предпринята попытка выполнения операции с выгруженным доменом приложения.</exception>
    </member>
    <member name="P:System.AppDomain.Id">
      <summary>Возвращает целое число, однозначно идентифицирующее домен приложения в процессе.</summary>
      <returns>Целое число, идентифицирующее домен приложения.</returns>
    </member>
    <member name="M:System.AppDomain.IsCompatibilitySwitchSet(System.String)">
      <summary>Получает логическое значение, допускающее значения NULL, которое указывает, установлены ли какие-либо переключатели совместимости и, если установлены, установлен ли заданный переключатель совместимости.</summary>
      <param name="value">Проверяемый переключатель совместимости.</param>
      <returns>Пустая ссылка (<see langword="Nothing" /> в Visual Basic), если переключатели совместимости не установлены; в противном случае логическое значение, указывающее, установлен ли переключатель совместимости, заданный параметром <paramref name="value" />.</returns>
    </member>
    <member name="M:System.AppDomain.IsDefaultAppDomain">
      <summary>Возвращает значение, указывающее, является ли домен приложения используемым по умолчанию доменом для процесса.</summary>
      <returns>
        <see langword="true" />, если текущий объект <see cref="T:System.AppDomain" /> представляет используемый по умолчанию домен приложения для процесса, в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.AppDomain.IsFinalizingForUnload">
      <summary>Определяет, выгружен ли этот домен приложения, и были ли закрыты средой CLR объекты, которые он содержал.</summary>
      <returns>Значение <see langword="true" />, если этот домен приложения выгружен, и среда CLR начала вызов методов завершения, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.AppDomain.IsFullyTrusted">
      <summary>Получает значение, указывающее, выполняются ли сборки, загруженные в текущий домен приложения, с полным доверием.</summary>
      <returns>Значение <see langword="true" />, если сборки, загруженные в текущий домен приложения, выполняются с полным доверием; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.AppDomain.IsHomogenous">
      <summary>Возвращает значение, указывающее, имеет ли текущий домен приложения набор разрешений, которые предоставляются всем сборкам, загружаемым в домен приложения.</summary>
      <returns>Значение <see langword="true" />, если текущий домен приложения имеет однородный набор разрешений; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.AppDomain.Load(System.Byte[])">
      <summary>Загружает объект <see cref="T:System.Reflection.Assembly" /> с образом в формате COFF, содержащим созданный объект <see cref="T:System.Reflection.Assembly" />.</summary>
      <param name="rawAssembly">Массив типа <see langword="byte" />, который является образом в формате COFF, содержащим порожденную сборку.</param>
      <returns>Загруженная сборка.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="rawAssembly" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="rawAssembly" /> не является допустимой сборкой.  

или - 
Сейчас загружена среда CLR 2.0 или более поздней версии. Сборка <paramref name="rawAssembly" /> скомпилирована в более поздней версии.</exception>
      <exception cref="T:System.AppDomainUnloadedException">Предпринята попытка выполнения операции с выгруженным доменом приложения.</exception>
      <exception cref="T:System.IO.FileLoadException">Сборка или модуль был загружен дважды с двумя разными свидетельствами.</exception>
    </member>
    <member name="M:System.AppDomain.Load(System.Byte[],System.Byte[])">
      <summary>Загружает объект <see cref="T:System.Reflection.Assembly" /> с образом в формате COFF, содержащим порожденный объект <see cref="T:System.Reflection.Assembly" />. Загружаются также необработанные байты, представляющие символы для <see cref="T:System.Reflection.Assembly" />.</summary>
      <param name="rawAssembly">Массив типа <see langword="byte" />, который является образом в формате COFF, содержащим порожденную сборку.</param>
      <param name="rawSymbolStore">Массив типа <see langword="byte" />, содержащий необработанные байты, которые представляют символы для сборки.</param>
      <returns>Загруженная сборка.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="rawAssembly" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="rawAssembly" /> не является допустимой сборкой.  

или - 
Сейчас загружена среда CLR 2.0 или более поздней версии. Сборка <paramref name="rawAssembly" /> скомпилирована в более поздней версии.</exception>
      <exception cref="T:System.AppDomainUnloadedException">Предпринята попытка выполнения операции с выгруженным доменом приложения.</exception>
      <exception cref="T:System.IO.FileLoadException">Сборка или модуль был загружен дважды с двумя разными свидетельствами.</exception>
    </member>
    <member name="M:System.AppDomain.Load(System.Reflection.AssemblyName)">
      <summary>Загружает сборку <see cref="T:System.Reflection.Assembly" />, заданную ее именем <see cref="T:System.Reflection.AssemblyName" />.</summary>
      <param name="assemblyRef">Объект, который описывает сборку, подлежащую загрузке.</param>
      <returns>Загруженная сборка.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="assemblyRef" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyRef" /> не найден.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyRef" /> не является допустимой сборкой.  

или - 
Сейчас загружена среда CLR 2.0 или более поздней версии. Сборка <paramref name="assemblyRef" /> скомпилирована в более поздней версии.</exception>
      <exception cref="T:System.AppDomainUnloadedException">Предпринята попытка выполнения операции с выгруженным доменом приложения.</exception>
      <exception cref="T:System.IO.FileLoadException">Сборка или модуль был загружен дважды с двумя разными свидетельствами.</exception>
    </member>
    <member name="M:System.AppDomain.Load(System.String)">
      <summary>Загружает сборку <see cref="T:System.Reflection.Assembly" />, заданную ее отображаемым именем.</summary>
      <param name="assemblyString">Отображаемое имя сборки. См. раздел <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <returns>Загруженная сборка.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyString" /> равно <see langword="null" /></exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyString" /> не найден.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyString" /> не является допустимой сборкой.  

или - 
Сейчас загружена среда CLR 2.0 или более поздней версии. Сборка <paramref name="assemblyString" /> скомпилирована в более поздней версии.</exception>
      <exception cref="T:System.AppDomainUnloadedException">Предпринята попытка выполнения операции с выгруженным доменом приложения.</exception>
      <exception cref="T:System.IO.FileLoadException">Сборка или модуль был загружен дважды с двумя разными свидетельствами.</exception>
    </member>
    <member name="P:System.AppDomain.MonitoringIsEnabled">
      <summary>Получает или задает значение, указывающее, включен ли мониторинг ЦП и памяти доменов приложений для текущего процесса. После того, как мониторинг для процесса включен, отключить его невозможно.</summary>
      <returns>Значение <see langword="true" />, если мониторинг включен; в противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Текущий процесс попытался присвоить значение <see langword="false" /> этому свойству.</exception>
    </member>
    <member name="P:System.AppDomain.MonitoringSurvivedMemorySize">
      <summary>Возвращает количество байтов, оставшихся после последнего сбора, и про которые известно, что на них ссылается текущий домен приложения.</summary>
      <returns>Количество оставшихся байтов.</returns>
      <exception cref="T:System.InvalidOperationException">Для свойства <see langword="static" /> (<see langword="Shared" /> в Visual Basic) <see cref="P:System.AppDomain.MonitoringIsEnabled" /> задано значение <see langword="false" />.</exception>
    </member>
    <member name="P:System.AppDomain.MonitoringSurvivedProcessMemorySize">
      <summary>Получает общее количество байтов, оставшихся после последнего сбора для всех доменов приложений в процессе.</summary>
      <returns>Общее количество оставшихся байтов для процесса.</returns>
      <exception cref="T:System.InvalidOperationException">Для свойства <see langword="static" /> (<see langword="Shared" /> в Visual Basic) <see cref="P:System.AppDomain.MonitoringIsEnabled" /> задано значение <see langword="false" />.</exception>
    </member>
    <member name="P:System.AppDomain.MonitoringTotalAllocatedMemorySize">
      <summary>Получает общий размер в байтах для всех операций выделения памяти, выполненных доменом приложения с момента его создания, без вычитания собранной памяти.</summary>
      <returns>Общий размер для всех операций выделения памяти.</returns>
      <exception cref="T:System.InvalidOperationException">Для свойства <see langword="static" /> (<see langword="Shared" /> в Visual Basic) <see cref="P:System.AppDomain.MonitoringIsEnabled" /> задано значение <see langword="false" />.</exception>
    </member>
    <member name="P:System.AppDomain.MonitoringTotalProcessorTime">
      <summary>Получает общее процессорное время, использованное всеми потоками при выполнении в текущем домене приложения с момента запуска процесса.</summary>
      <returns>Общее процессорное время для текущего домена приложения.</returns>
      <exception cref="T:System.InvalidOperationException">Для свойства <see langword="static" /> (<see langword="Shared" /> в Visual Basic) <see cref="P:System.AppDomain.MonitoringIsEnabled" /> задано значение <see langword="false" />.</exception>
    </member>
    <member name="P:System.AppDomain.PermissionSet">
      <summary>Получает набор разрешений изолированного домена приложения.</summary>
      <returns>Набор разрешений изолированного домена приложения.</returns>
    </member>
    <member name="E:System.AppDomain.ProcessExit">
      <summary>Происходит при завершении работы родительского процесса домена приложения по умолчанию.</summary>
    </member>
    <member name="E:System.AppDomain.ReflectionOnlyAssemblyResolve">
      <summary>Происходит, когда разрешение сборки завершается неудачей в контексте, поддерживающем только отражение.</summary>
    </member>
    <member name="M:System.AppDomain.ReflectionOnlyGetAssemblies">
      <summary>Возвращает сборки, которые были загружены в контекст, поддерживающий только отражение домена приложения.</summary>
      <returns>Массив объектов <see cref="T:System.Reflection.Assembly" />, представляющих сборки, которые были загружены в контекст домена приложения, поддерживающий только отражение.</returns>
      <exception cref="T:System.AppDomainUnloadedException">Предпринимается попытка выполнить операцию в незагруженном домене приложения.</exception>
    </member>
    <member name="P:System.AppDomain.RelativeSearchPath">
      <summary>Возвращает путь, к каталогу, находящемуся в базовом каталоге, где распознаватель сборок будет производить поиск закрытых сборок.</summary>
      <returns>Путь, к каталогу, находящемуся в базовом каталоге, где распознаватель сборок будет производить поиск закрытых сборок.</returns>
      <exception cref="T:System.AppDomainUnloadedException">Предпринята попытка выполнения операции с выгруженным доменом приложения.</exception>
    </member>
    <member name="E:System.AppDomain.ResourceResolve">
      <summary>происходит, когда разрешение ресурса завершается неудачей, из-за того, что он не является допустимым связанным или внедренным ресурсом в сборке.</summary>
    </member>
    <member name="M:System.AppDomain.SetCachePath(System.String)">
      <summary>Устанавливает заданный путь каталога в качестве места, куда копируются теневые сборки.</summary>
      <param name="path">Полный путь к расположению теневых копий.</param>
      <exception cref="T:System.AppDomainUnloadedException">Предпринята попытка выполнения операции с выгруженным доменом приложения.</exception>
    </member>
    <member name="M:System.AppDomain.SetData(System.String,System.Object)">
      <summary>Устанавливает заданное значение для свойства указанного домена приложения.</summary>
      <param name="name">Имя пользовательского свойства домена приложения для создания или изменения.</param>
      <param name="data">Значение свойства.</param>
      <exception cref="T:System.AppDomainUnloadedException">Предпринята попытка выполнения операции с выгруженным доменом приложения.</exception>
    </member>
    <member name="M:System.AppDomain.SetDynamicBase(System.String)">
      <summary>Устанавливает заданный путь каталога в качестве базового каталога для подкаталогов, в которых сохраняются и становятся доступными динамически созданные файлы.</summary>
      <param name="path">Полный путь, который является базовым каталогом для подкаталогов, в которых хранятся динамические сборки.</param>
      <exception cref="T:System.AppDomainUnloadedException">Предпринята попытка выполнения операции с выгруженным доменом приложения.</exception>
    </member>
    <member name="M:System.AppDomain.SetPrincipalPolicy(System.Security.Principal.PrincipalPolicy)">
      <summary>Указывает, как участники и объекты удостоверений должны присоединяться к потоку, если поток пытается выполнить привязку к участнику при выполнении в этом домене приложения.</summary>
      <param name="policy">Одно из значений <see cref="T:System.Security.Principal.PrincipalPolicy" />, определяющее тип объекта-участника, который необходимо подключить к потоку.</param>
      <exception cref="T:System.AppDomainUnloadedException">Предпринята попытка выполнения операции с выгруженным доменом приложения.</exception>
    </member>
    <member name="M:System.AppDomain.SetShadowCopyFiles">
      <summary>Включает теневое копирование.</summary>
      <exception cref="T:System.AppDomainUnloadedException">Предпринята попытка выполнения операции с выгруженным доменом приложения.</exception>
    </member>
    <member name="M:System.AppDomain.SetShadowCopyPath(System.String)">
      <summary>Устанавливает заданный путь каталога в качестве места для теневого копирования сборок.</summary>
      <param name="path">Список имен каталогов, разделенных знаком точки с запятой.</param>
      <exception cref="T:System.AppDomainUnloadedException">Предпринята попытка выполнения операции с выгруженным доменом приложения.</exception>
    </member>
    <member name="M:System.AppDomain.SetThreadPrincipal(System.Security.Principal.IPrincipal)">
      <summary>Задает объект-участник по умолчанию, который необходимо присоединять к потокам, в случае если они пытаются выполнить привязку к объекту-участнику во время выполнения в этом домене приложения.</summary>
      <param name="principal">Объект-участник, который необходимо присоединить к потоку.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="principal" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Security.Policy.PolicyException">Установленный объект-участник потока.</exception>
      <exception cref="T:System.AppDomainUnloadedException">Предпринята попытка выполнения операции с выгруженным доменом приложения.</exception>
    </member>
    <member name="P:System.AppDomain.SetupInformation">
      <summary>Возвращает сведения о конфигурации домена приложения для этого экземпляра.</summary>
      <returns>Сведения об инициализации домена приложения.</returns>
      <exception cref="T:System.AppDomainUnloadedException">Предпринята попытка выполнения операции с выгруженным доменом приложения.</exception>
    </member>
    <member name="P:System.AppDomain.ShadowCopyFiles">
      <summary>Возвращает указание на то, настроен ли домен приложения для теневого копирования файлов.</summary>
      <returns>Значение <see langword="true" />, если домен приложения настроен для теневого копирования файлов; в противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.AppDomainUnloadedException">Предпринята попытка выполнения операции с выгруженным доменом приложения.</exception>
    </member>
    <member name="M:System.AppDomain.ToString">
      <summary>Получает строку, включающую понятное имя домена приложения и политики контекста.</summary>
      <returns>Строка, полученная путем сцепления литеральной строки "Name:", понятного имени домена приложения и либо строкового представления политик контекста, либо строки "Политики контекста отсутствуют".</returns>
      <exception cref="T:System.AppDomainUnloadedException">Домен приложения, представленный текущим <see cref="T:System.AppDomain" />, выгружен.</exception>
    </member>
    <member name="E:System.AppDomain.TypeResolve">
      <summary>Происходит, когда разрешении типа завершается неудачей.</summary>
    </member>
    <member name="E:System.AppDomain.UnhandledException">
      <summary>Происходит, если выброшенное исключение остается не перехваченным.</summary>
    </member>
    <member name="M:System.AppDomain.Unload(System.AppDomain)">
      <summary>Выгружает заданный домен приложения.</summary>
      <param name="domain">Домен приложения, который нужно выгрузить.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="domain" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.CannotUnloadAppDomainException">Домен, определенный параметром <paramref name="domain" />, не может быть выгружен.</exception>
      <exception cref="T:System.Exception">Во время выполнения выгрузки произошла ошибка.</exception>
    </member>
    <member name="T:System.AppDomainSetup">
      <summary>Предоставляет сведения о привязке сборок, которые могут быть добавлены к экземпляру класса <see cref="T:System.AppDomain" />.</summary>
    </member>
    <member name="P:System.AppDomainSetup.ApplicationBase">
      <summary>Возвращает или задает имя каталога, содержащего приложение.</summary>
      <returns>Имя базовой папки приложения.</returns>
    </member>
    <member name="P:System.AppDomainSetup.TargetFrameworkName">
      <summary>Получает или задает строку, которая задает целевую версию и профиль .NET Framework для домена приложения, в формате, который может быть проанализирован конструктором <see cref="M:System.Runtime.Versioning.FrameworkName.#ctor(System.String)" />.</summary>
      <returns>Целевая версия и профиль платформы .NET Framework.</returns>
    </member>
    <member name="T:System.AppDomainUnloadedException">
      <summary>Исключение, выбрасываемое при попытке доступа к выгруженному домену приложения.</summary>
    </member>
    <member name="M:System.AppDomainUnloadedException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.AppDomainUnloadedException" />.</summary>
    </member>
    <member name="M:System.AppDomainUnloadedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.AppDomainUnloadedException" /> с сериализованными данными.</summary>
      <param name="info">Объект, содержащий сериализованные данные объекта.</param>
      <param name="context">Контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:System.AppDomainUnloadedException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.AppDomainUnloadedException" /> с указанным сообщением об ошибке.</summary>
      <param name="message">Сообщение, описывающее ошибку.</param>
    </member>
    <member name="M:System.AppDomainUnloadedException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.AppDomainUnloadedException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message">Сообщение, описывающее ошибку.</param>
      <param name="innerException">Исключение, которое является причиной текущего исключения. Если параметр <paramref name="innerException" /> не является указателем NULL, текущее исключение возникло в блоке <see langword="catch" />, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.ApplicationId">
      <summary>Содержит сведения, используемые для уникальной идентификации приложения на основе манифеста. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.ApplicationId.#ctor(System.Byte[],System.String,System.Version,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ApplicationId" />.</summary>
      <param name="publicKeyToken">Массив данных в байтах, представляющий необработанные данные открытого ключа.</param>
      <param name="name">Имя приложения.</param>
      <param name="version">Объект <see cref="T:System.Version" />, задающий версию приложения.</param>
      <param name="processorArchitecture">Архитектура процессора приложения.</param>
      <param name="culture">Язык и региональные параметры приложения.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="name" /> имеет значение <see langword="null" />.  

или - 
Свойство <paramref name="version" /> имеет значение <see langword="null" />.  

или - 
<paramref name="publicKeyToken" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="name" /> равен пустой строке.</exception>
    </member>
    <member name="M:System.ApplicationId.Copy">
      <summary>Создает и возвращает идентичную копию текущего удостоверения приложения.</summary>
      <returns>Объект <see cref="T:System.ApplicationId" /> представляющий точную копию оригинала.</returns>
    </member>
    <member name="P:System.ApplicationId.Culture">
      <summary>Возвращает строку, представляющую сведения о языке и региональных параметрах приложения.</summary>
      <returns>Сведения о языке и региональных параметрах приложения.</returns>
    </member>
    <member name="M:System.ApplicationId.Equals(System.Object)">
      <summary>Определяет, эквивалентен ли заданный объект <see cref="T:System.ApplicationId" /> текущему объекту <see cref="T:System.ApplicationId" />.</summary>
      <param name="o">Объект <see cref="T:System.ApplicationId" />, который требуется сравнить с текущим объектом <see cref="T:System.ApplicationId" />.</param>
      <returns>Значение <see langword="true" />, если указанный объект <see cref="T:System.ApplicationId" /> эквивалентен текущему объекту <see cref="T:System.ApplicationId" />, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.ApplicationId.GetHashCode">
      <summary>Возвращает хэш-код текущего удостоверения приложения.</summary>
      <returns>Хэш-код текущего удостоверения приложения.</returns>
    </member>
    <member name="P:System.ApplicationId.Name">
      <summary>Возвращает имя приложения.</summary>
      <returns>Имя приложения.</returns>
    </member>
    <member name="P:System.ApplicationId.ProcessorArchitecture">
      <summary>Возвращает архитектуру целевого процессора приложения.</summary>
      <returns>Архитектура процессора приложения.</returns>
    </member>
    <member name="P:System.ApplicationId.PublicKeyToken">
      <summary>Возвращает для приложения токен открытого ключа.</summary>
      <returns>Массив байтов, содержащий токен открытого ключа приложения.</returns>
    </member>
    <member name="M:System.ApplicationId.ToString">
      <summary>Создает и возвращает строковое представление удостоверения приложения.</summary>
      <returns>Строковое представление удостоверения приложения.</returns>
    </member>
    <member name="P:System.ApplicationId.Version">
      <summary>Возвращает версию приложения.</summary>
      <returns>Объект <see cref="T:System.Version" />, задающий версию приложения.</returns>
    </member>
    <member name="T:System.AssemblyLoadEventArgs">
      <summary>Предоставляет данные для события <see cref="E:System.AppDomain.AssemblyLoad" />.</summary>
    </member>
    <member name="M:System.AssemblyLoadEventArgs.#ctor(System.Reflection.Assembly)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.AssemblyLoadEventArgs" /> с использованием указанного объекта <see cref="T:System.Reflection.Assembly" />.</summary>
      <param name="loadedAssembly">Экземпляр, представляющий текущую загруженную сборку.</param>
    </member>
    <member name="P:System.AssemblyLoadEventArgs.LoadedAssembly">
      <summary>Возвращает объект <see cref="T:System.Reflection.Assembly" />, представляющий текущую загруженную сборку.</summary>
      <returns>Экземпляр объекта <see cref="T:System.Reflection.Assembly" />, представляющий текущую загруженную сборку.</returns>
    </member>
    <member name="T:System.AssemblyLoadEventHandler">
      <summary>Представляет метод, обрабатывающий событие <see cref="E:System.AppDomain.AssemblyLoad" /> класса <see cref="T:System.AppDomain" />.</summary>
      <param name="sender">Источник события.</param>
      <param name="args">Объект класса <see cref="T:System.AssemblyLoadEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="T:System.Base64FormattingOptions">
      <summary>Указывает, вставляют ли соответствующие методы <see cref="Overload:System.Convert.ToBase64CharArray" /> и <see cref="Overload:System.Convert.ToBase64String" /> символы разрыва строки в свои результаты.</summary>
    </member>
    <member name="F:System.Base64FormattingOptions.InsertLineBreaks">
      <summary>Вставляет символ разрыва строки после каждых 76 символов строчного представления.</summary>
    </member>
    <member name="F:System.Base64FormattingOptions.None">
      <summary>Не вставляет символ разрыва строки после каждых 76 символов строчного представления.</summary>
    </member>
    <member name="T:System.BitConverter">
      <summary>Преобразует базовые типы данных в массив байтов, а массив байтов — в базовые типы данных.</summary>
    </member>
    <member name="M:System.BitConverter.DoubleToInt64Bits(System.Double)">
      <summary>Преобразует указанное число двойной точности с плавающей запятой в 64-битовое целое число со знаком.</summary>
      <param name="value">Преобразуемое число.</param>
      <returns>Значение 64-битового знакового целого числа эквивалентно <paramref name="value" />.</returns>
    </member>
    <member name="M:System.BitConverter.GetBytes(System.Boolean)">
      <summary>Возвращает указанное логическое значение в виде массива байтов.</summary>
      <param name="value">Значение типа Boolean.</param>
      <returns>Массив байтов длиной 1.</returns>
    </member>
    <member name="M:System.BitConverter.GetBytes(System.Char)">
      <summary>Возвращает указанное значение знака Юникода в виде массива байтов.</summary>
      <param name="value">Преобразуемый знак.</param>
      <returns>Массив байтов длиной 2.</returns>
    </member>
    <member name="M:System.BitConverter.GetBytes(System.Double)">
      <summary>Возвращает указанное значение двойной точности с плавающей запятой в виде массива байтов.</summary>
      <param name="value">Преобразуемое число.</param>
      <returns>Массив байтов с шириной 8.</returns>
    </member>
    <member name="M:System.BitConverter.GetBytes(System.Int16)">
      <summary>Возвращает указанное значение 16-битового целого числа со знаком в виде массива байтов.</summary>
      <param name="value">Преобразуемое число.</param>
      <returns>Массив байтов длиной 2.</returns>
    </member>
    <member name="M:System.BitConverter.GetBytes(System.Int32)">
      <summary>Возвращает указанное 32-разрядное целое число со знаком в качестве массива байтов.</summary>
      <param name="value">Преобразуемое число.</param>
      <returns>Массив байтов длиной 4.</returns>
    </member>
    <member name="M:System.BitConverter.GetBytes(System.Int64)">
      <summary>Возвращает указанное 64-разрядные целые числа со знаком в качестве массива байтов.</summary>
      <param name="value">Преобразуемое число.</param>
      <returns>Массив байтов с шириной 8.</returns>
    </member>
    <member name="M:System.BitConverter.GetBytes(System.Single)">
      <summary>Возвращает указанное значение с плавающей запятой с обычной точностью в виде массива байтов.</summary>
      <param name="value">Преобразуемое число.</param>
      <returns>Массив байтов длиной 4.</returns>
    </member>
    <member name="M:System.BitConverter.GetBytes(System.UInt16)">
      <summary>Возвращает указанное значение 16-битового целого числа без знака в виде массива байтов.</summary>
      <param name="value">Преобразуемое число.</param>
      <returns>Массив байтов длиной 2.</returns>
    </member>
    <member name="M:System.BitConverter.GetBytes(System.UInt32)">
      <summary>Возвращает указанное 32-разрядное целое число без знака в виде массива байтов.</summary>
      <param name="value">Преобразуемое число.</param>
      <returns>Массив байтов длиной 4.</returns>
    </member>
    <member name="M:System.BitConverter.GetBytes(System.UInt64)">
      <summary>Возвращает указанное 64-разрядное целое число без знака в виде массива байтов.</summary>
      <param name="value">Преобразуемое число.</param>
      <returns>Массив байтов с шириной 8.</returns>
    </member>
    <member name="M:System.BitConverter.Int32BitsToSingle(System.Int32)">
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.Int64BitsToDouble(System.Int64)">
      <summary>Преобразует указанное 64-битовое целое число со знаком в число двойной точности с плавающей запятой.</summary>
      <param name="value">Преобразуемое число.</param>
      <returns>Значение числа двойной точности с плавающей запятой эквивалентно <paramref name="value" />.</returns>
    </member>
    <member name="F:System.BitConverter.IsLittleEndian">
      <summary>Указывает порядок байтов (порядок следования байтов), по которому данные сохраняются в архитектуре этого компьютера.</summary>
    </member>
    <member name="M:System.BitConverter.SingleToInt32Bits(System.Single)">
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.ToBoolean(System.Byte[],System.Int32)">
      <summary>Возвращает логическое значение, преобразованное из байта в указанной позиции в массиве байтов.</summary>
      <param name="value">Массив байтов.</param>
      <param name="startIndex">Индекс байта в <paramref name="value" />.</param>
      <returns>Значение <see langword="true" />, если байт в <paramref name="startIndex" /> в параметре <paramref name="value" /> отличен от нуля; в противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> меньше нуля или больше, чем длина <paramref name="value" /> минус 1.</exception>
    </member>
    <member name="M:System.BitConverter.ToBoolean(System.ReadOnlySpan{System.Byte})">
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.ToChar(System.Byte[],System.Int32)">
      <summary>Возвращает знак Юникода, преобразованный из двух байтов с указанной позицией в массив байтов.</summary>
      <param name="value">Массив.</param>
      <param name="startIndex">Начальная позиция в <paramref name="value" />.</param>
      <returns>Знак, образованный двумя байтами, начинающимися с <paramref name="startIndex" />.</returns>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="startIndex" /> равен длине <paramref name="value" /> минус 1.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> меньше нуля или больше, чем длина <paramref name="value" /> минус 1.</exception>
    </member>
    <member name="M:System.BitConverter.ToChar(System.ReadOnlySpan{System.Byte})">
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.ToDouble(System.Byte[],System.Int32)">
      <summary>Возвращает число двойной точности с плавающей запятой, преобразованное из восьми байтов с указанной позицией в массив байтов.</summary>
      <param name="value">Массив байтов.</param>
      <param name="startIndex">Начальная позиция в <paramref name="value" />.</param>
      <returns>Число двойной точности с плавающей запятой, образованное восемью байтами, начинающимися с <paramref name="startIndex" />.</returns>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="startIndex" /> больше или равно длине параметра <paramref name="value" /> минус 7 и меньше или равно длине параметра <paramref name="value" /> минус 1.</exception>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="value" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> меньше нуля или больше, чем длина <paramref name="value" /> минус 1.</exception>
    </member>
    <member name="M:System.BitConverter.ToDouble(System.ReadOnlySpan{System.Byte})">
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.ToInt16(System.Byte[],System.Int32)">
      <summary>Возвращает 16-битовое целое число со знаком, преобразованное из двух байтов с указанной позицией в массив байтов.</summary>
      <param name="value">Массив байтов.</param>
      <param name="startIndex">Начальная позиция в <paramref name="value" />.</param>
      <returns>16-битовое знаковое целое число, образованное двумя байтами, начинающимися с <paramref name="startIndex" />.</returns>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="startIndex" /> равен длине <paramref name="value" /> минус 1.</exception>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="value" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> меньше нуля или больше, чем длина <paramref name="value" /> минус 1.</exception>
    </member>
    <member name="M:System.BitConverter.ToInt16(System.ReadOnlySpan{System.Byte})">
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.ToInt32(System.Byte[],System.Int32)">
      <summary>Возвращает 32-битовое целое число со знаком, преобразованное из четырех байтов с указанной позицией в массив байтов.</summary>
      <param name="value">Массив байтов.</param>
      <param name="startIndex">Начальная позиция в <paramref name="value" />.</param>
      <returns>32-битовое знаковое целое число, образованное четырьмя байтами, начинающимися с <paramref name="startIndex" />.</returns>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="startIndex" /> больше или равно длине параметра <paramref name="value" /> минус 3 и меньше или равно длине параметра <paramref name="value" /> минус 1.</exception>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="value" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> меньше нуля или больше, чем длина <paramref name="value" /> минус 1.</exception>
    </member>
    <member name="M:System.BitConverter.ToInt32(System.ReadOnlySpan{System.Byte})">
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.ToInt64(System.Byte[],System.Int32)">
      <summary>Возвращает 64-битовое целое число со знаком, преобразованное из восьми байт с указанной позицией в массив байтов.</summary>
      <param name="value">Массив байтов.</param>
      <param name="startIndex">Начальная позиция в <paramref name="value" />.</param>
      <returns>64-битовое знаковое целое число, сформированное восемью байтами, начинающимися с <paramref name="startIndex" />.</returns>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="startIndex" /> больше или равно длине параметра <paramref name="value" /> минус 7 и меньше или равно длине параметра <paramref name="value" /> минус 1.</exception>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="value" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> меньше нуля или больше, чем длина <paramref name="value" /> минус 1.</exception>
    </member>
    <member name="M:System.BitConverter.ToInt64(System.ReadOnlySpan{System.Byte})">
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.ToSingle(System.Byte[],System.Int32)">
      <summary>Возвращает число одинарной точности с плавающей запятой, преобразованное из четырех байтов с указанной позицией в массив байтов.</summary>
      <param name="value">Массив байтов.</param>
      <param name="startIndex">Начальная позиция в <paramref name="value" />.</param>
      <returns>Число одинарной точности с плавающей запятой, образованное четырьмя байтами, начинающимися с <paramref name="startIndex" />.</returns>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="startIndex" /> больше или равно длине параметра <paramref name="value" /> минус 3 и меньше или равно длине параметра <paramref name="value" /> минус 1.</exception>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="value" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> меньше нуля или больше, чем длина <paramref name="value" /> минус 1.</exception>
    </member>
    <member name="M:System.BitConverter.ToSingle(System.ReadOnlySpan{System.Byte})">
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.ToString(System.Byte[])">
      <summary>Преобразует числовое значение каждого элемента заданного массива байтов в эквивалентное ему шестнадцатеричное строковое представление.</summary>
      <param name="value">Массив байтов.</param>
      <returns>Строка, состоящая из шестнадцатеричных пар, разделенных дефисами, где каждая пара предоставляет соответствующий элемент в <paramref name="value" />; например: "7F-2C-4A-00".</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="value" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.BitConverter.ToString(System.Byte[],System.Int32)">
      <summary>Преобразует числовое значение каждого элемента заданного подмассива байтов в эквивалентное ему шестнадцатеричное строковое представление.</summary>
      <param name="value">Массив байтов.</param>
      <param name="startIndex">Начальная позиция в <paramref name="value" />.</param>
      <returns>Строка, состоящая из шестнадцатеричных пар, разделенных дефисами, где каждая пара предоставляет соответствующий элемент в подмассиве <paramref name="value" />; например, "7F-2C-4A-00".</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> меньше нуля или больше, чем длина <paramref name="value" /> минус 1.</exception>
    </member>
    <member name="M:System.BitConverter.ToString(System.Byte[],System.Int32,System.Int32)">
      <summary>Преобразует числовое значение каждого элемента заданного подмассива байтов в эквивалентное ему шестнадцатеричное строковое представление.</summary>
      <param name="value">Массив байтов.</param>
      <param name="startIndex">Начальная позиция в <paramref name="value" />.</param>
      <param name="length">Количество преобразуемых элементов в массиве <paramref name="value" />.</param>
      <returns>Строка, состоящая из шестнадцатеричных пар, разделенных дефисами, где каждая пара предоставляет соответствующий элемент в подмассиве <paramref name="value" />; например, "7F-2C-4A-00".</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="value" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="startIndex" /> или <paramref name="length" /> меньше нуля.  
-или- 
 Значение параметра <paramref name="startIndex" /> меньше нуля и больше или равно длине <paramref name="value" />.</exception>
      <exception cref="T:System.ArgumentException">Сочетание <paramref name="startIndex" /> и <paramref name="length" /> не задает позицию в <paramref name="value" />; то есть, параметр <paramref name="startIndex" /> больше, чем длина <paramref name="value" /> минус параметр <paramref name="length" />.</exception>
    </member>
    <member name="M:System.BitConverter.ToUInt16(System.Byte[],System.Int32)">
      <summary>Возвращает 16-битовое целое число без знака, преобразованное из двух байтов с указанной позицией в массив байтов.</summary>
      <param name="value">Массив байтов.</param>
      <param name="startIndex">Начальная позиция в <paramref name="value" />.</param>
      <returns>16-битовое целое число без знака, образованное двумя байтами, начинающимися с <paramref name="startIndex" />.</returns>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="startIndex" /> равен длине <paramref name="value" /> минус 1.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> меньше нуля или больше, чем длина <paramref name="value" /> минус 1.</exception>
    </member>
    <member name="M:System.BitConverter.ToUInt16(System.ReadOnlySpan{System.Byte})">
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.ToUInt32(System.Byte[],System.Int32)">
      <summary>Возвращает 32-битовое целое число без знака, преобразованное из четырех байтов с указанной позицией в массив байтов.</summary>
      <param name="value">Массив байтов.</param>
      <param name="startIndex">Начальная позиция в <paramref name="value" />.</param>
      <returns>32-битовое целое число без знака, образованное четырьмя байтами, начинающимися с <paramref name="startIndex" />.</returns>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="startIndex" /> больше или равно длине параметра <paramref name="value" /> минус 3 и меньше или равно длине параметра <paramref name="value" /> минус 1.</exception>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="value" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> меньше нуля или больше, чем длина <paramref name="value" /> минус 1.</exception>
    </member>
    <member name="M:System.BitConverter.ToUInt32(System.ReadOnlySpan{System.Byte})">
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.ToUInt64(System.Byte[],System.Int32)">
      <summary>Возвращает 64-битовое целое число без знака, преобразованное из восьми байтов с указанной позицией в массив байтов.</summary>
      <param name="value">Массив байтов.</param>
      <param name="startIndex">Начальная позиция в <paramref name="value" />.</param>
      <returns>64-битовое целое число без знака, образованное восемью байтами, начинающимися с <paramref name="startIndex" />.</returns>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="startIndex" /> больше или равно длине параметра <paramref name="value" /> минус 7 и меньше или равно длине параметра <paramref name="value" /> минус 1.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> меньше нуля или больше, чем длина <paramref name="value" /> минус 1.</exception>
    </member>
    <member name="M:System.BitConverter.ToUInt64(System.ReadOnlySpan{System.Byte})">
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.Boolean)">
      <param name="destination" />
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.Char)">
      <param name="destination" />
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.Double)">
      <param name="destination" />
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.Int16)">
      <param name="destination" />
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.Int32)">
      <param name="destination" />
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.Int64)">
      <param name="destination" />
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.Single)">
      <param name="destination" />
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.UInt16)">
      <param name="destination" />
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.UInt32)">
      <param name="destination" />
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.UInt64)">
      <param name="destination" />
      <param name="value" />
    </member>
    <member name="T:System.CannotUnloadAppDomainException">
      <summary>Исключение, которое выбрасывается при неудачной попытке выгрузить домен приложения.</summary>
    </member>
    <member name="M:System.CannotUnloadAppDomainException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.CannotUnloadAppDomainException" />.</summary>
    </member>
    <member name="M:System.CannotUnloadAppDomainException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.CannotUnloadAppDomainException" /> из сериализованных данных.</summary>
      <param name="info">Объект, содержащий сериализованные данные объекта.</param>
      <param name="context">Контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:System.CannotUnloadAppDomainException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.CannotUnloadAppDomainException" /> с указанным сообщением об ошибке.</summary>
      <param name="message">Строка <see cref="T:System.String" />, описывающая ошибку.</param>
    </member>
    <member name="M:System.CannotUnloadAppDomainException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.CannotUnloadAppDomainException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="innerException">Исключение, которое вызвало текущее исключение. Если параметр <paramref name="innerException" /> не является указателем null (<see langword="Nothing" /> в Visual Basic), то текущее исключение создается в блоке <see langword="catch" />, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.CodeDom.Compiler.IndentedTextWriter">
      <summary>Предоставляет модуль записи текста, позволяющий делать отступ новой строки с помощью строкового маркера табуляции.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.#ctor(System.IO.TextWriter)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.CodeDom.Compiler.IndentedTextWriter" />, используя указанный модуль записи текста и строку табуляции по умолчанию.</summary>
      <param name="writer">Объект <see cref="T:System.IO.TextWriter" />, предназначенный для вывода данных.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.#ctor(System.IO.TextWriter,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.CodeDom.Compiler.IndentedTextWriter" />, используя указанный модуль записи текста и строку табуляции.</summary>
      <param name="writer">Объект <see cref="T:System.IO.TextWriter" />, предназначенный для вывода данных.</param>
      <param name="tabString">Используемая для отступа строка табуляции.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Close">
      <summary>Закрывает документ, в который производилась запись.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.IndentedTextWriter.DefaultTabString">
      <summary>Указывает строку табуляции по умолчанию. Это поле является константой.</summary>
    </member>
    <member name="P:System.CodeDom.Compiler.IndentedTextWriter.Encoding">
      <summary>Получает кодировку для использования модулем записи текста.</summary>
      <returns>Объект <see cref="T:System.Text.Encoding" /> задает кодировку для использования модулем записи текста.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Flush">
      <summary>Сбрасывает поток.</summary>
    </member>
    <member name="P:System.CodeDom.Compiler.IndentedTextWriter.Indent">
      <summary>Получает или задает количество пробелов для отступа.</summary>
      <returns>Количество пробелов для отступа.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.IndentedTextWriter.InnerWriter">
      <summary>Получает <see cref="T:System.IO.TextWriter" /> для использования.</summary>
      <returns>Используемый <see cref="T:System.IO.TextWriter" />.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.IndentedTextWriter.NewLine">
      <summary>Получает или задает знак новой строки для использования.</summary>
      <returns>Знак новой строки для использования.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.OutputTabs">
      <summary>Выводит строку табуляции один раз для каждого уровня отступа в соответствии со свойством <see cref="P:System.CodeDom.Compiler.IndentedTextWriter.Indent" />.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Boolean)">
      <summary>Записывает текстовое представление логического значения в текстовый поток.</summary>
      <param name="value">Логическое значение для записи.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Char)">
      <summary>Записывает символ в текстовый поток.</summary>
      <param name="value">Записываемый символ.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Char[])">
      <summary>Записывает массив символов в текстовый поток.</summary>
      <param name="buffer">Записываемый массив знаков.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Char[],System.Int32,System.Int32)">
      <summary>Записывает подмассив символов в текстовый поток.</summary>
      <param name="buffer">Массив символов, из которого записываются данные.</param>
      <param name="index">Начальный индекс в буфере.</param>
      <param name="count">Количество символов для записи.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Double)">
      <summary>Записывает текстовое представление значения типа Double в текстовый поток.</summary>
      <param name="value">Документ <see langword="double" /> для записи.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Int32)">
      <summary>Записывает текстовое представление целого числа в текстовый поток.</summary>
      <param name="value">Целое число для записи.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Int64)">
      <summary>Записывает текстовое представление целого числа размером 8 байт в текстовый поток.</summary>
      <param name="value">Целое число размером 8 байт для записи.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Object)">
      <summary>Записывает текстовое представление объекта в текстовый поток.</summary>
      <param name="value">Записываемый объект.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Single)">
      <summary>Записывает текстовое представление значения типа Single в текстовый поток.</summary>
      <param name="value">Документ <see langword="single" /> для записи.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.String)">
      <summary>Записывает указанную строку в текстовый поток.</summary>
      <param name="s">Строка для записи.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.String,System.Object)">
      <summary>Выводит отформатированную строку, используя заданную семантику.</summary>
      <param name="format">Строка форматирования.</param>
      <param name="arg0">Объект для записи в отформатированную строку.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.String,System.Object,System.Object)">
      <summary>Выводит отформатированную строку, используя заданную семантику.</summary>
      <param name="format">Строка форматирования для использования.</param>
      <param name="arg0">Первый объект для записи в форматируемую строку.</param>
      <param name="arg1">Второй объект для записи в форматируемую строку.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.String,System.Object[])">
      <summary>Выводит отформатированную строку, используя заданную семантику.</summary>
      <param name="format">Строка форматирования для использования.</param>
      <param name="arg">Массив аргументов для вывода.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine">
      <summary>Записывает признак конца строки.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Boolean)">
      <summary>Записывает текстовое представление логического значения, за которым следует признак конца строки, в текстовый поток.</summary>
      <param name="value">Логическое значение для записи.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Char)">
      <summary>Записывает в текстовый поток символ, за которым следует признак конца строки.</summary>
      <param name="value">Символ для записи.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Char[])">
      <summary>Записывает в текстовый поток массив символов, за которым следует признак конца строки.</summary>
      <param name="buffer">Записываемый массив знаков.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
      <summary>Записывает в текстовый поток подмассив символов, за которым следует признак конца строки.</summary>
      <param name="buffer">Массив символов, из которого записываются данные.</param>
      <param name="index">Начальный индекс в буфере.</param>
      <param name="count">Количество символов для записи.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Double)">
      <summary>Записывает в текстовый поток текстовое представление значения типа Double, за которым следует признак конца строки.</summary>
      <param name="value">Документ <see langword="double" /> для записи.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Int32)">
      <summary>Записывает в текстовый поток текстовое представление целого числа, за которым следует признак конца строки.</summary>
      <param name="value">Целое число для записи.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Int64)">
      <summary>Записывает в текстовый поток текстовое представление целого числа размером 8 байт, за которым следует признак конца строки.</summary>
      <param name="value">Целое число размером 8 байт для записи.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Object)">
      <summary>Записывает в текстовый поток текстовое представление объекта, за которым следует признак конца строки.</summary>
      <param name="value">Записываемый объект.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Single)">
      <summary>Записывает в текстовый поток текстовое представление значения типа Single, за которым следует признак конца строки.</summary>
      <param name="value">Документ <see langword="single" /> для записи.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.String)">
      <summary>Записывает в текстовый поток указанную строку, за которой следует признак конца строки.</summary>
      <param name="s">Строка для записи.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.String,System.Object)">
      <summary>Выводит отформатированную строку, за которой следует знак конца строки, используя заданную семантику.</summary>
      <param name="format">Строка форматирования.</param>
      <param name="arg0">Объект для записи в отформатированную строку.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.String,System.Object,System.Object)">
      <summary>Выводит отформатированную строку, за которой следует знак конца строки, используя заданную семантику.</summary>
      <param name="format">Строка форматирования для использования.</param>
      <param name="arg0">Первый объект для записи в форматируемую строку.</param>
      <param name="arg1">Второй объект для записи в форматируемую строку.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.String,System.Object[])">
      <summary>Выводит отформатированную строку, за которой следует знак конца строки, используя заданную семантику.</summary>
      <param name="format">Строка форматирования для использования.</param>
      <param name="arg">Массив аргументов для вывода.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.UInt32)">
      <summary>Записывает в текстовый поток текстовое представление значения типа UInt32, за которым следует знак конца строки.</summary>
      <param name="value">Значение типа UInt32 для вывода.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLineNoTabs(System.String)">
      <summary>Записывает указанное строковое значение в строку без табуляций.</summary>
      <param name="s">Строка для записи.</param>
    </member>
    <member name="T:System.Collections.ArrayList">
      <summary>Реализует интерфейс <see cref="T:System.Collections.IList" /> с помощью массива с динамическим изменением размера по требованию.</summary>
    </member>
    <member name="M:System.Collections.ArrayList.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Collections.ArrayList" />, который является пустым и имеет начальную емкость по умолчанию.</summary>
    </member>
    <member name="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Collections.ArrayList" />, который содержит элементы, скопированные из указанной коллекции, и обладает начальной емкостью, равной количеству скопированных элементов.</summary>
      <param name="c">Интерфейс <see cref="T:System.Collections.ICollection" />, элементы которого копируются в новый список.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="c" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.#ctor(System.Int32)">
      <summary>Инициализирует новый пустой экземпляр класса <see cref="T:System.Collections.ArrayList" /> с указанной начальной емкостью.</summary>
      <param name="capacity">Число элементов, которые может изначально вместить новый список.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="capacity" /> меньше нуля.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.Adapter(System.Collections.IList)">
      <summary>Создает оболочку класса <see cref="T:System.Collections.ArrayList" /> для указанного интерфейса <see cref="T:System.Collections.IList" />.</summary>
      <param name="list">Класс <see cref="T:System.Collections.IList" />, для которого создается оболочка.</param>
      <returns>Оболочка <see cref="T:System.Collections.ArrayList" /> интерфейса <see cref="T:System.Collections.IList" />.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="list" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.Add(System.Object)">
      <summary>Добавляет объект в конец очереди <see cref="T:System.Collections.ArrayList" />.</summary>
      <param name="value">Объект <see cref="T:System.Object" />, добавляемый в конец коллекции <see cref="T:System.Collections.ArrayList" />. Допускается значение <see langword="null" />.</param>
      <returns>Индекс <see cref="T:System.Collections.ArrayList" />, по которому добавлен параметр <paramref name="value" />.</returns>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Collections.ArrayList" /> доступен только для чтения.  

или - 
<see cref="T:System.Collections.ArrayList" /> имеет фиксированный размер.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)">
      <summary>Добавляет элементы интерфейса <see cref="T:System.Collections.ICollection" /> в конец списка <see cref="T:System.Collections.ArrayList" />.</summary>
      <param name="c">Интерфейс <see cref="T:System.Collections.ICollection" />, элементы которого добавляются в конец списка <see cref="T:System.Collections.ArrayList" />. Сама коллекция не может иметь значение <see langword="null" />, но может содержать элементы со значением <see langword="null" />.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="c" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Collections.ArrayList" /> доступен только для чтения.  

или - 
<see cref="T:System.Collections.ArrayList" /> имеет фиксированный размер.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)">
      <summary>Выполняет поиск элемента в диапазоне элементов отсортированного списка <see cref="T:System.Collections.ArrayList" />, используя указанную функцию сравнения, и возвращает индекс элемента, отсчитываемый от нуля.</summary>
      <param name="index">Отсчитываемый от нуля индекс начала диапазона поиска.</param>
      <param name="count">Длина диапазона поиска.</param>
      <param name="value">Искомый объект <see cref="T:System.Object" />. Допускается значение <see langword="null" />.</param>
      <param name="comparer">Реализация интерфейса <see cref="T:System.Collections.IComparer" />, которая используется при сравнении элементов.  

или - 
Значение <see langword="null" />, чтобы использовать функцию сравнения по умолчанию, которая является реализацией <see cref="T:System.IComparable" /> для каждого элемента.</param>
      <returns>Начинающийся с нуля индекс элемента <paramref name="value" /> в отсортированном списке <see cref="T:System.Collections.ArrayList" />, если элемент <paramref name="value" /> найден; в противном случае — отрицательное число, которое является двоичным дополнением индекса следующего элемента, большего, чем <paramref name="value" />, или, если большего элемента не существует, двоичным дополнением значения <see cref="P:System.Collections.ArrayList.Count" />.</returns>
      <exception cref="T:System.ArgumentException">Параметры <paramref name="index" /> и <paramref name="count" /> не указывают допустимый диапазон в <see cref="T:System.Collections.ArrayList" />.  

или - 
<paramref name="comparer" /> имеет значение <see langword="null" />, и ни <paramref name="value" />, ни элементы <see cref="T:System.Collections.ArrayList" /> не реализуют интерфейс <see cref="T:System.IComparable" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> имеет значение <see langword="null" />, и тип <paramref name="value" /> не совпадает с типом элементов <see cref="T:System.Collections.ArrayList" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> меньше нуля.  

или - 
Значение параметра <paramref name="count" /> меньше нуля.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.BinarySearch(System.Object)">
      <summary>Выполняет поиск элемента по всему отсортированному списку <see cref="T:System.Collections.ArrayList" />, используя компаратор по умолчанию, и возвращает индекс элемента, отсчитываемый от нуля.</summary>
      <param name="value">Искомый объект <see cref="T:System.Object" />. Допускается значение <see langword="null" />.</param>
      <returns>Начинающийся с нуля индекс элемента <paramref name="value" /> в отсортированном списке <see cref="T:System.Collections.ArrayList" />, если элемент <paramref name="value" /> найден; в противном случае — отрицательное число, которое является двоичным дополнением индекса следующего элемента, большего, чем <paramref name="value" />, или, если большего элемента не существует, двоичным дополнением значения <see cref="P:System.Collections.ArrayList.Count" />.</returns>
      <exception cref="T:System.ArgumentException">Ни один из элементов <paramref name="value" /> и <see cref="T:System.Collections.ArrayList" /> не реализуют интерфейс <see cref="T:System.IComparable" />.</exception>
      <exception cref="T:System.InvalidOperationException">Тип <paramref name="value" /> не совпадает с типом элементов <see cref="T:System.Collections.ArrayList" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.BinarySearch(System.Object,System.Collections.IComparer)">
      <summary>Выполняет поиск элемента по всему отсортированному списку <see cref="T:System.Collections.ArrayList" />, используя указанный компаратор, и возвращает индекс элемента, отсчитываемый от нуля.</summary>
      <param name="value">Искомый объект <see cref="T:System.Object" />. Допускается значение <see langword="null" />.</param>
      <param name="comparer">Реализация интерфейса <see cref="T:System.Collections.IComparer" />, которая используется при сравнении элементов.  

или - 
Значение <see langword="null" />, чтобы использовать функцию сравнения по умолчанию, которая является реализацией <see cref="T:System.IComparable" /> для каждого элемента.</param>
      <returns>Начинающийся с нуля индекс элемента <paramref name="value" /> в отсортированном списке <see cref="T:System.Collections.ArrayList" />, если элемент <paramref name="value" /> найден; в противном случае — отрицательное число, которое является двоичным дополнением индекса следующего элемента, большего, чем <paramref name="value" />, или, если большего элемента не существует, двоичным дополнением значения <see cref="P:System.Collections.ArrayList.Count" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparer" /> имеет значение <see langword="null" />, и ни <paramref name="value" />, ни элементы <see cref="T:System.Collections.ArrayList" /> не реализуют интерфейс <see cref="T:System.IComparable" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> имеет значение <see langword="null" />, и тип <paramref name="value" /> не совпадает с типом элементов <see cref="T:System.Collections.ArrayList" />.</exception>
    </member>
    <member name="P:System.Collections.ArrayList.Capacity">
      <summary>Возвращает или задает число элементов, которое может содержать список <see cref="T:System.Collections.ArrayList" />.</summary>
      <returns>Количество элементов, которое может содержать коллекция <see cref="T:System.Collections.ArrayList" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Для <see cref="P:System.Collections.ArrayList.Capacity" /> установлено значение, которое меньше <see cref="P:System.Collections.ArrayList.Count" />.</exception>
      <exception cref="T:System.OutOfMemoryException">Недостаточно свободной памяти в системе.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.Clear">
      <summary>Удаляет из коллекции <see cref="T:System.Collections.ArrayList" /> все элементы.</summary>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Collections.ArrayList" /> доступен только для чтения.  

или - 
<see cref="T:System.Collections.ArrayList" /> имеет фиксированный размер.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.Clone">
      <summary>Создает неполную копию <see cref="T:System.Collections.ArrayList" />.</summary>
      <returns>Неполная копия <see cref="T:System.Collections.ArrayList" />.</returns>
    </member>
    <member name="M:System.Collections.ArrayList.Contains(System.Object)">
      <summary>Определяет, входит ли элемент в коллекцию <see cref="T:System.Collections.ArrayList" />.</summary>
      <param name="item">Объект <see cref="T:System.Object" />, который требуется найти в коллекции <see cref="T:System.Collections.ArrayList" />. Допускается значение <see langword="null" />.</param>
      <returns>Значение <see langword="true" />, если параметр <paramref name="item" /> найден в коллекции <see cref="T:System.Collections.ArrayList" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.ArrayList.CopyTo(System.Array)">
      <summary>Копирует весь список <see cref="T:System.Collections.ArrayList" /> в совместимый одномерный массив <see cref="T:System.Array" />, начиная с начального элемента целевого массива.</summary>
      <param name="array">Одномерный массив <see cref="T:System.Array" />, в который копируются элементы из интерфейса <see cref="T:System.Collections.ArrayList" />. Массив <see cref="T:System.Array" /> должен иметь индексацию, начинающуюся с нуля.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Массив <paramref name="array" /> является многомерным.  

или - 
Число элементов в исходном массиве <see cref="T:System.Collections.ArrayList" /> больше числа элементов, которые может содержать массив назначения <paramref name="array" />.</exception>
      <exception cref="T:System.InvalidCastException">Тип исходного массива <see cref="T:System.Collections.ArrayList" /> не может быть автоматически приведен к типу массива назначения <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.CopyTo(System.Array,System.Int32)">
      <summary>Копирует целый массив <see cref="T:System.Collections.ArrayList" /> в совместимый одномерный массив <see cref="T:System.Array" />, начиная с заданного индекса целевого массива.</summary>
      <param name="array">Одномерный массив <see cref="T:System.Array" />, в который копируются элементы из интерфейса <see cref="T:System.Collections.ArrayList" />. Массив <see cref="T:System.Array" /> должен иметь индексацию, начинающуюся с нуля.</param>
      <param name="arrayIndex">Отсчитываемый от нуля индекс в массиве <paramref name="array" />, указывающий начало копирования.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="arrayIndex" /> меньше нуля.</exception>
      <exception cref="T:System.ArgumentException">Массив <paramref name="array" /> является многомерным.  

или - 
Число элементов в исходной коллекции <see cref="T:System.Collections.ArrayList" /> больше доступного места от положения, заданного значением параметра <paramref name="arrayIndex" />, до конца массива назначения <paramref name="array" />.</exception>
      <exception cref="T:System.InvalidCastException">Тип исходного массива <see cref="T:System.Collections.ArrayList" /> не может быть автоматически приведен к типу массива назначения <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.CopyTo(System.Int32,System.Array,System.Int32,System.Int32)">
      <summary>Копирует диапазон элементов из списка <see cref="T:System.Collections.ArrayList" /> в совместимый одномерный массив <see cref="T:System.Array" />, начиная с указанного индекса целевого массива.</summary>
      <param name="index">Отсчитываемый от нуля индекс исходного списка <see cref="T:System.Collections.ArrayList" />, с которого начинается копирование.</param>
      <param name="array">Одномерный массив <see cref="T:System.Array" /> , в который копируются элементы из интерфейса <see cref="T:System.Collections.ArrayList" />. Массив <see cref="T:System.Array" /> должен иметь индексацию, начинающуюся с нуля.</param>
      <param name="arrayIndex">Отсчитываемый от нуля индекс в массиве <paramref name="array" />, указывающий начало копирования.</param>
      <param name="count">Число элементов для копирования.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> меньше нуля.  

или - 
Значение параметра <paramref name="arrayIndex" /> меньше нуля.  

или - 
Значение параметра <paramref name="count" /> меньше нуля.</exception>
      <exception cref="T:System.ArgumentException">Массив <paramref name="array" /> является многомерным.  

или - 
Значение параметра <paramref name="index" /> больше или равно значению <see cref="P:System.Collections.ArrayList.Count" /> исходного списка <see cref="T:System.Collections.ArrayList" />.  

-или- 
Число элементов от <paramref name="index" /> до конца исходного списка <see cref="T:System.Collections.ArrayList" /> больше доступного места от положения, заданного значением параметра <paramref name="arrayIndex" />, до конца массива назначения <paramref name="array" />.</exception>
      <exception cref="T:System.InvalidCastException">Тип исходного массива <see cref="T:System.Collections.ArrayList" /> не может быть автоматически приведен к типу массива назначения <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Collections.ArrayList.Count">
      <summary>Получает число элементов, фактически содержащихся в списке <see cref="T:System.Collections.ArrayList" />.</summary>
      <returns>Число элементов, фактически содержащихся в списке <see cref="T:System.Collections.ArrayList" />.</returns>
    </member>
    <member name="M:System.Collections.ArrayList.FixedSize(System.Collections.ArrayList)">
      <summary>Возвращает оболочку <see cref="T:System.Collections.ArrayList" /> фиксированного размера.</summary>
      <param name="list">Класс <see cref="T:System.Collections.ArrayList" />, для которого создается оболочка.</param>
      <returns>Оболочка <see cref="T:System.Collections.ArrayList" /> фиксированного размера.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="list" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.FixedSize(System.Collections.IList)">
      <summary>Возвращает оболочку <see cref="T:System.Collections.IList" /> фиксированного размера.</summary>
      <param name="list">Класс <see cref="T:System.Collections.IList" />, для которого создается оболочка.</param>
      <returns>Оболочка <see cref="T:System.Collections.IList" /> фиксированного размера.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="list" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.GetEnumerator">
      <summary>Возвращает перечислитель для класса <see cref="T:System.Collections.ArrayList" />.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> для всего <see cref="T:System.Collections.ArrayList" />.</returns>
    </member>
    <member name="M:System.Collections.ArrayList.GetEnumerator(System.Int32,System.Int32)">
      <summary>Возвращает перечислитель для диапазона элементов в списке <see cref="T:System.Collections.ArrayList" />.</summary>
      <param name="index">Отсчитываемый от нуля начальный индекс участка списка <see cref="T:System.Collections.ArrayList" />, на который должен ссылаться перечислитель.</param>
      <param name="count">Количество элементов в участке списка <see cref="T:System.Collections.ArrayList" />, на который должен ссылаться перечислитель.</param>
      <returns>Интерфейс <see cref="T:System.Collections.IEnumerator" /> для указанного диапазона элементов списка <see cref="T:System.Collections.ArrayList" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> меньше нуля.  

или - 
Значение параметра <paramref name="count" /> меньше нуля.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> и <paramref name="count" /> не указывают допустимый диапазон в <see cref="T:System.Collections.ArrayList" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)">
      <summary>Возвращает список <see cref="T:System.Collections.ArrayList" />, представляющий подмножество элементов исходного списка <see cref="T:System.Collections.ArrayList" />.</summary>
      <param name="index">Отсчитываемый от нуля индекс списка <see cref="T:System.Collections.ArrayList" />, с которого начинается диапазон.</param>
      <param name="count">Число элементов в диапазоне.</param>
      <returns>Список <see cref="T:System.Collections.ArrayList" />, представляющий подмножество элементов исходного списка <see cref="T:System.Collections.ArrayList" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> меньше нуля.  

или - 
Значение параметра <paramref name="count" /> меньше нуля.</exception>
      <exception cref="T:System.ArgumentException">Параметры <paramref name="index" /> и <paramref name="count" /> не указывают допустимый диапазон элементов в списке <see cref="T:System.Collections.ArrayList" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.IndexOf(System.Object)">
      <summary>Осуществляет поиск указанного объекта <see cref="T:System.Object" /> и возвращает отсчитываемый от нуля индекс первого вхождения в коллекцию <see cref="T:System.Collections.ArrayList" />.</summary>
      <param name="value">Объект <see cref="T:System.Object" />, который требуется найти в коллекции <see cref="T:System.Collections.ArrayList" />. Допускается значение <see langword="null" />.</param>
      <returns>Индекс (с нуля) первого вхождения параметра <paramref name="value" />, если оно найдено в коллекции <see cref="T:System.Collections.ArrayList" />; в противном случае -1.</returns>
    </member>
    <member name="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32)">
      <summary>Осуществляет поиск указанного объекта <see cref="T:System.Object" /> и возвращает отсчитываемый от нуля индекс первого вхождения в диапазоне элементов списка <see cref="T:System.Collections.ArrayList" />, начиная с заданного индекса и до последнего элемента.</summary>
      <param name="value">Объект <see cref="T:System.Object" />, который требуется найти в коллекции <see cref="T:System.Collections.ArrayList" />. Допускается значение <see langword="null" />.</param>
      <param name="startIndex">Индекс (с нуля) начальной позиции поиска. Значение 0 (ноль) действительно в пустом списке.</param>
      <returns>Отсчитываемый от нуля индекс первого вхождения элемента <paramref name="value" /> в диапазоне элементов списка <see cref="T:System.Collections.ArrayList" />, начиная с позиции <paramref name="startIndex" /> и до конца списка, если элемент найден; в противном случае значение –1.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> находится вне диапазона допустимых индексов для <see cref="T:System.Collections.ArrayList" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32,System.Int32)">
      <summary>Выполняет поиск указанного объекта <see cref="T:System.Object" /> и возвращает отсчитываемый от нуля индекс первого вхождения в диапазоне элементов списка <see cref="T:System.Collections.ArrayList" />, который начинается с заданного индекса и содержит указанное число элементов.</summary>
      <param name="value">Объект <see cref="T:System.Object" />, который требуется найти в коллекции <see cref="T:System.Collections.ArrayList" />. Допускается значение <see langword="null" />.</param>
      <param name="startIndex">Индекс (с нуля) начальной позиции поиска. Значение 0 (ноль) действительно в пустом списке.</param>
      <param name="count">Число элементов в диапазоне, в котором выполняется поиск.</param>
      <returns>Отсчитываемый от нуля индекс первого вхождения <paramref name="value" /> в диапазоне элементов списка <see cref="T:System.Collections.ArrayList" />, который начинается с позиции <paramref name="startIndex" /> и содержит <paramref name="count" /> элементов, если искомый объект найден; в противном случае значение –1.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> находится вне диапазона допустимых индексов для <see cref="T:System.Collections.ArrayList" />.  

или - 
Значение параметра <paramref name="count" /> меньше нуля.  

-или- 
 <paramref name="startIndex" /> и <paramref name="count" /> не указывают допустимый раздел в <see cref="T:System.Collections.ArrayList" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)">
      <summary>Вставляет элемент в коллекцию <see cref="T:System.Collections.ArrayList" /> по указанному индексу.</summary>
      <param name="index">Отсчитываемый от нуля индекс, по которому следует вставить элемент <paramref name="value" />.</param>
      <param name="value">Вставляемый объект <see cref="T:System.Object" />. Допускается значение <see langword="null" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> меньше нуля.  

или - 
Значение <paramref name="index" /> больше значения <see cref="P:System.Collections.ArrayList.Count" />.</exception>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Collections.ArrayList" /> доступен только для чтения.  

или - 
<see cref="T:System.Collections.ArrayList" /> имеет фиксированный размер.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)">
      <summary>Вставляет элементы коллекции в список <see cref="T:System.Collections.ArrayList" /> в позиции с указанным индексом.</summary>
      <param name="index">Отсчитываемый от нуля индекс места вставки новых элементов.</param>
      <param name="c">Коллекция <see cref="T:System.Collections.ICollection" />, элементы которой требуется вставить в список <see cref="T:System.Collections.ArrayList" />. Сама коллекция не может иметь значение <see langword="null" />, но может содержать элементы со значением <see langword="null" />.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="c" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> меньше нуля.  
-или- 
 Значение <paramref name="index" /> больше значения <see cref="P:System.Collections.ArrayList.Count" />.</exception>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Collections.ArrayList" /> доступен только для чтения.  
-или- 
<see cref="T:System.Collections.ArrayList" /> имеет фиксированный размер.</exception>
    </member>
    <member name="P:System.Collections.ArrayList.IsFixedSize">
      <summary>Получает значение, указывающее, имеет ли список <see cref="T:System.Collections.ArrayList" /> фиксированный размер.</summary>
      <returns>Значение<see langword="true" /> , если словарь <see cref="T:System.Collections.ArrayList" /> имеет фиксированный размер; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.ArrayList.IsReadOnly">
      <summary>Получает значение, указывающее, является ли объект <see cref="T:System.Collections.ArrayList" /> доступным только для чтения.</summary>
      <returns>Значение<see langword="true" /> , если коллекция <see cref="T:System.Collections.ArrayList" /> доступна только для чтения; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.ArrayList.IsSynchronized">
      <summary>Возвращает значение, показывающее, является ли доступ к коллекции <see cref="T:System.Collections.ArrayList" /> синхронизированным (потокобезопасным).</summary>
      <returns>
        <see langword="true" /> , если доступ к классу <see cref="T:System.Collections.ArrayList" /> является синхронизированным (потокобезопасным); в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.ArrayList.Item(System.Int32)">
      <summary>Возвращает или задает элемент по указанному индексу.</summary>
      <param name="index">Отсчитываемый от нуля индекс элемента, который требуется возвратить или задать.</param>
      <returns>Элемент, расположенный по указанному индексу.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> меньше нуля.  

или - 
Значение параметра <paramref name="index" /> больше или равно значению свойства <see cref="P:System.Collections.ArrayList.Count" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.LastIndexOf(System.Object)">
      <summary>Осуществляет поиск указанного объекта <see cref="T:System.Object" /> и возвращает отсчитываемый от нуля индекс последнего вхождения в коллекцию <see cref="T:System.Collections.ArrayList" />.</summary>
      <param name="value">Объект <see cref="T:System.Object" />, который требуется найти в коллекции <see cref="T:System.Collections.ArrayList" />. Допускается значение <see langword="null" />.</param>
      <returns>Отсчитываемый от нуля индекс последнего вхождения <paramref name="value" /> в пределах всего списка <see cref="T:System.Collections.ArrayList" />, если элемент найден; в противном случае значение –1.</returns>
    </member>
    <member name="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32)">
      <summary>Осуществляет поиск указанного объекта <see cref="T:System.Object" /> и возвращает отсчитываемый от нуля индекс последнего вхождения в диапазоне элементов списка <see cref="T:System.Collections.ArrayList" />, начиная с первого элемента и заканчивая элементом с заданным индексом.</summary>
      <param name="value">Объект <see cref="T:System.Object" />, который требуется найти в коллекции <see cref="T:System.Collections.ArrayList" />. Допускается значение <see langword="null" />.</param>
      <param name="startIndex">Индекс (с нуля) начала диапазона поиска в обратном направлении.</param>
      <returns>Отсчитываемый от нуля индекс последнего вхождения элемента <paramref name="value" /> в диапазоне элементов списка <see cref="T:System.Collections.ArrayList" />, начиная с первого элемента и до позиции <paramref name="startIndex" />, если элемент найден; в противном случае значение -1.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> находится вне диапазона допустимых индексов для <see cref="T:System.Collections.ArrayList" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32,System.Int32)">
      <summary>Выполняет поиск указанного объекта <see cref="T:System.Object" /> и возвращает отсчитываемый от нуля индекс последнего вхождения в диапазоне элементов списка <see cref="T:System.Collections.ArrayList" />, содержащем указанное число элементов и заканчивающемся в позиции с указанным индексом.</summary>
      <param name="value">Объект <see cref="T:System.Object" />, который требуется найти в коллекции <see cref="T:System.Collections.ArrayList" />. Допускается значение <see langword="null" />.</param>
      <param name="startIndex">Индекс (с нуля) начала диапазона поиска в обратном направлении.</param>
      <param name="count">Число элементов в диапазоне, в котором выполняется поиск.</param>
      <returns>Отсчитываемый от нуля индекс последнего вхождения <paramref name="value" /> в диапазоне элементов списка <see cref="T:System.Collections.ArrayList" />, состоящем из <paramref name="count" /> элементов и заканчивающемся в позиции <paramref name="startIndex" />, если элемент найден. В противном случае значение –1.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> находится вне диапазона допустимых индексов для <see cref="T:System.Collections.ArrayList" />.  
-или- 
 Значение параметра <paramref name="count" /> меньше нуля.  

или - 
<paramref name="startIndex" /> и <paramref name="count" /> не указывают допустимый раздел в <see cref="T:System.Collections.ArrayList" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.ReadOnly(System.Collections.ArrayList)">
      <summary>Возвращает программу-оболочку <see cref="T:System.Collections.ArrayList" />, доступную только для чтения.</summary>
      <param name="list">Класс <see cref="T:System.Collections.ArrayList" />, для которого создается оболочка.</param>
      <returns>Доступная только для чтения программа-оболочка <see cref="T:System.Collections.ArrayList" /> для параметра <paramref name="list" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="list" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)">
      <summary>Возвращает программу-оболочку <see cref="T:System.Collections.IList" />, доступную только для чтения.</summary>
      <param name="list">Класс <see cref="T:System.Collections.IList" />, для которого создается оболочка.</param>
      <returns>Доступная только для чтения программа-оболочка <see cref="T:System.Collections.IList" /> для параметра <paramref name="list" />.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="list" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.Remove(System.Object)">
      <summary>Удаляет первое вхождение указанного объекта из коллекции <see cref="T:System.Collections.ArrayList" />.</summary>
      <param name="obj">Элемент <see cref="T:System.Object" />, который требуется удалить из <see cref="T:System.Collections.ArrayList" />. Допускается значение <see langword="null" />.</param>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Collections.ArrayList" /> доступен только для чтения.  

или - 
<see cref="T:System.Collections.ArrayList" /> имеет фиксированный размер.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.RemoveAt(System.Int32)">
      <summary>Удаляет элемент по указанному индексу из коллекции <see cref="T:System.Collections.ArrayList" />.</summary>
      <param name="index">Индекс (с нуля) элемента, который требуется удалить.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> меньше нуля.  
-или- 
 Значение параметра <paramref name="index" /> больше или равно значению свойства <see cref="P:System.Collections.ArrayList.Count" />.</exception>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Collections.ArrayList" /> доступен только для чтения.  

или - 
<see cref="T:System.Collections.ArrayList" /> имеет фиксированный размер.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)">
      <summary>Удаляет диапазон элементов из списка <see cref="T:System.Collections.ArrayList" />.</summary>
      <param name="index">Отсчитываемый от нуля индекс начала диапазона элементов, которые требуется удалить.</param>
      <param name="count">Число удаляемых элементов.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> меньше нуля.  

или - 
Значение параметра <paramref name="count" /> меньше нуля.</exception>
      <exception cref="T:System.ArgumentException">Параметры<paramref name="index" /> и <paramref name="count" /> не указывают допустимый диапазон элементов в списке <see cref="T:System.Collections.ArrayList" />.</exception>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Collections.ArrayList" /> доступен только для чтения.  

или - 
<see cref="T:System.Collections.ArrayList" /> имеет фиксированный размер.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.Repeat(System.Object,System.Int32)">
      <summary>Возвращает список <see cref="T:System.Collections.ArrayList" />, элементы которого являются копиями указанного значения.</summary>
      <param name="value">Объект <see cref="T:System.Object" />, который требуется скопировать несколько раз в новый список <see cref="T:System.Collections.ArrayList" />. Допускается значение <see langword="null" />.</param>
      <param name="count">Количество копий значения <paramref name="value" />.</param>
      <returns>Список <see cref="T:System.Collections.ArrayList" /> с количеством элементов, равным <paramref name="count" />, которые являются копиями объекта <paramref name="value" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="count" /> меньше нуля.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.Reverse">
      <summary>Изменяет порядок элементов во всем списке <see cref="T:System.Collections.ArrayList" /> на обратный.</summary>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Collections.ArrayList" /> доступен только для чтения.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.Reverse(System.Int32,System.Int32)">
      <summary>Изменяет порядок элементов в указанном диапазоне.</summary>
      <param name="index">Отсчитываемый от нуля индекс начала диапазона, порядок элементов которого требуется изменить.</param>
      <param name="count">Число элементов в диапазоне, порядок сортировки в котором требуется изменить.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> меньше нуля.  

или - 
Значение параметра <paramref name="count" /> меньше нуля.</exception>
      <exception cref="T:System.ArgumentException">Параметры<paramref name="index" /> и <paramref name="count" /> не указывают допустимый диапазон элементов в списке <see cref="T:System.Collections.ArrayList" />.</exception>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Collections.ArrayList" /> доступен только для чтения.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)">
      <summary>Копирует элементы коллекции в диапазон элементов списка <see cref="T:System.Collections.ArrayList" />.</summary>
      <param name="index">Отсчитываемый от нуля индекс списка <see cref="T:System.Collections.ArrayList" />, с которого начинается копирование элементов коллекции <paramref name="c" />.</param>
      <param name="c">Интерфейс <see cref="T:System.Collections.ICollection" />, элементы которого копируются в список <see cref="T:System.Collections.ArrayList" />. Сама коллекция не может иметь значение <see langword="null" />, но может содержать элементы со значением <see langword="null" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> меньше нуля.  

или - 
<paramref name="index" /> плюс количество элементов в <paramref name="c" /> больше, чем <see cref="P:System.Collections.ArrayList.Count" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="c" /> — <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Collections.ArrayList" /> доступен только для чтения.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.Sort">
      <summary>Сортирует элементы во всем списке <see cref="T:System.Collections.ArrayList" />.</summary>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Collections.ArrayList" /> доступен только для чтения.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.Sort(System.Collections.IComparer)">
      <summary>Сортирует элементы во всем списке <see cref="T:System.Collections.ArrayList" /> с помощью указанной функции сравнения.</summary>
      <param name="comparer">Реализация интерфейса <see cref="T:System.Collections.IComparer" />, которая используется при сравнении элементов.  

или - 
Пустая ссылка (<see langword="Nothing" /> в Visual Basic) для использования реализации <see cref="T:System.IComparable" /> каждого элемента.</param>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Collections.ArrayList" /> доступен только для чтения.</exception>
      <exception cref="T:System.InvalidOperationException">При сравнении двух элементов возникла ошибка.</exception>
      <exception cref="T:System.ArgumentException">
        <see langword="null" /> передается для <paramref name="comparer" />, а элементы в списке не реализуют <see cref="T:System.IComparable" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
      <summary>Сортирует элементы в диапазоне элементов списка <see cref="T:System.Collections.ArrayList" /> с помощью указанной функции сравнения.</summary>
      <param name="index">Индекс (с нуля) начала диапазона, который требуется отсортировать.</param>
      <param name="count">Длина диапазона сортировки.</param>
      <param name="comparer">Реализация интерфейса <see cref="T:System.Collections.IComparer" />, которая используется при сравнении элементов.  

или - 
Пустая ссылка (<see langword="Nothing" /> в Visual Basic) для использования реализации <see cref="T:System.IComparable" /> каждого элемента.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> меньше нуля.  
-или- 
 Значение параметра <paramref name="count" /> меньше нуля.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> и <paramref name="count" /> не указывают допустимый диапазон в <see cref="T:System.Collections.ArrayList" />.</exception>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Collections.ArrayList" /> доступен только для чтения.</exception>
      <exception cref="T:System.InvalidOperationException">При сравнении двух элементов возникла ошибка.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.Synchronized(System.Collections.ArrayList)">
      <summary>Возвращает синхронизированную (потокобезопасную) оболочку <see cref="T:System.Collections.ArrayList" />.</summary>
      <param name="list">Коллекция <see cref="T:System.Collections.ArrayList" />, которую требуется синхронизировать.</param>
      <returns>Синхронизированная (потокобезопасная) оболочка <see cref="T:System.Collections.ArrayList" />.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="list" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)">
      <summary>Возвращает синхронизированную (потокобезопасную) оболочку <see cref="T:System.Collections.IList" />.</summary>
      <param name="list">Коллекция <see cref="T:System.Collections.IList" />, которую требуется синхронизировать.</param>
      <returns>Синхронизированная (потокобезопасная) оболочка <see cref="T:System.Collections.IList" />.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="list" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="P:System.Collections.ArrayList.SyncRoot">
      <summary>Получает объект, с помощью которого можно синхронизировать доступ к коллекции <see cref="T:System.Collections.ArrayList" />.</summary>
      <returns>Объект, который может использоваться для синхронизации доступа к <see cref="T:System.Collections.ArrayList" />.</returns>
    </member>
    <member name="M:System.Collections.ArrayList.ToArray">
      <summary>Копирует элементы списка <see cref="T:System.Collections.ArrayList" /> в новый массив <see cref="T:System.Object" />.</summary>
      <returns>Массив <see cref="T:System.Object" />, содержащий копии элементов списка <see cref="T:System.Collections.ArrayList" />.</returns>
    </member>
    <member name="M:System.Collections.ArrayList.ToArray(System.Type)">
      <summary>Копирует элементы списка <see cref="T:System.Collections.ArrayList" /> в новый массив с элементами указанного типа.</summary>
      <param name="type">Элемент <see cref="T:System.Type" /> массива назначения, используемый для создания и копирования элементов в этот массив.</param>
      <returns>Массив элементов указанного типа, содержащий копии элементов массива <see cref="T:System.Collections.ArrayList" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> — <see langword="null" />.</exception>
      <exception cref="T:System.InvalidCastException">Тип исходного списка <see cref="T:System.Collections.ArrayList" /> не может быть автоматически приведен к указанному типу.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.TrimToSize">
      <summary>Задает значение емкости, равное действительному количеству элементов в <see cref="T:System.Collections.ArrayList" />.</summary>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Collections.ArrayList" /> доступен только для чтения.  

или - 
<see cref="T:System.Collections.ArrayList" /> имеет фиксированный размер.</exception>
    </member>
    <member name="T:System.Collections.Comparer">
      <summary>Проверяет равенство двух объектов с учетом регистра строк.</summary>
    </member>
    <member name="M:System.Collections.Comparer.#ctor(System.Globalization.CultureInfo)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Collections.Comparer" /> с использованием указанного объекта <see cref="T:System.Globalization.CultureInfo" />.</summary>
      <param name="culture">Объект <see cref="T:System.Globalization.CultureInfo" />, который используется для нового объекта <see cref="T:System.Collections.Comparer" />.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="culture" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Comparer.Compare(System.Object,System.Object)">
      <summary>Выполняет сравнение двух объектов одного типа с учетом регистра и возвращает значение, которое показывает, в каком отношении (меньше, равно или больше) находятся два объекта.</summary>
      <param name="a">Первый из сравниваемых объектов.</param>
      <param name="b">Второй из сравниваемых объектов.</param>
      <returns>Знаковое целое число, которое определяет относительные значения параметров <paramref name="a" /> и <paramref name="b" />, как показано в следующей таблице.  
  Значение 
  Значение 
  Меньше нуля 
 Значение <paramref name="a" /> меньше <paramref name="b" />.  

  Нуль 
 <paramref name="a" /> равняется <paramref name="b" />.  

  Больше нуля 
 Значение <paramref name="a" /> больше значения <paramref name="b" />.</returns>
      <exception cref="T:System.ArgumentException">Ни параметр <paramref name="a" />, ни параметр <paramref name="b" /> не реализует интерфейс <see cref="T:System.IComparable" />.  

или - 
Параметры <paramref name="a" /> и <paramref name="b" /> имеют разные типы и не могут сравниваться друг с другом.</exception>
    </member>
    <member name="F:System.Collections.Comparer.Default">
      <summary>Предоставляет экземпляр класса <see cref="T:System.Collections.Comparer" />, который связан со свойством <see cref="P:System.Threading.Thread.CurrentCulture" /> текущего потока. Это поле доступно только для чтения.</summary>
    </member>
    <member name="F:System.Collections.Comparer.DefaultInvariant">
      <summary>Представляет экземпляр класса <see cref="T:System.Collections.Comparer" />, который связан со свойством <see cref="P:System.Globalization.CultureInfo.InvariantCulture" />. Это поле доступно только для чтения.</summary>
    </member>
    <member name="M:System.Collections.Comparer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Передает объекту <see cref="T:System.Runtime.Serialization.SerializationInfo" /> данные, необходимые для сериализации.</summary>
      <param name="info">Объект, который требуется заполнить данными.</param>
      <param name="context">Контекстные сведения об источнике или назначении сериализации.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="info" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="T:System.Collections.Hashtable">
      <summary>Представляет коллекцию пар «ключ-значение», которые упорядочены по хэш-коду ключа.</summary>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor">
      <summary>Инициализирует новый пустой экземпляр класса <see cref="T:System.Collections.Hashtable" /> с заданными по умолчанию начальной емкостью, показателем загрузки, поставщиком хэш-кода и объектом сравнения.</summary>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary)">
      <summary>Инициализирует новый пустой экземпляр класса <see cref="T:System.Collections.Hashtable" /> посредством копирования элементов из указанного словаря в новый объект <see cref="T:System.Collections.Hashtable" />. У нового объекта <see cref="T:System.Collections.Hashtable" /> исходная емкость равна числу копируемых элементов, и он обладает заданными по умолчанию показателем загрузки, поставщиком хэш-кода и объектом сравнения.</summary>
      <param name="d">Объект <see cref="T:System.Collections.IDictionary" />, предназначенный для копирования в новый объект <see cref="T:System.Collections.Hashtable" />.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="d" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IEqualityComparer)">
      <summary>Инициализирует новый пустой экземпляр класса <see cref="T:System.Collections.Hashtable" /> посредством копирования элементов из указанного словаря в новый объект <see cref="T:System.Collections.Hashtable" />. У нового объекта <see cref="T:System.Collections.Hashtable" /> исходная емкость равна числу копируемых элементов, и он обладает заданным по умолчанию показателем загрузки и указанным объектом сравнения <see cref="T:System.Collections.IEqualityComparer" />.</summary>
      <param name="d">Объект <see cref="T:System.Collections.IDictionary" />, предназначенный для копирования в новый объект <see cref="T:System.Collections.Hashtable" />.</param>
      <param name="equalityComparer">
        <see cref="T:System.Collections.IEqualityComparer" /> — это объект, определяющий поставщик хэш-кода и объект сравнения для использования с объектом <see cref="T:System.Collections.Hashtable" />.  
-или- 
 Значение <see langword="null" /> предусмотрено для использования поставщика хэш-кодов по умолчанию и объекта сравнения по умолчанию. Поставщик хэш-кода по умолчанию является реализацией метода <see cref="M:System.Object.GetHashCode" />, а средство сравнения по умолчанию является реализацией метода <see cref="M:System.Object.Equals(System.Object)" />.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="d" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
      <summary>Инициализирует новый пустой экземпляр класса <see cref="T:System.Collections.Hashtable" /> посредством копирования элементов из указанного словаря в новый объект <see cref="T:System.Collections.Hashtable" />. У нового объекта <see cref="T:System.Collections.Hashtable" /> исходная емкость равна числу копируемых элементов, и он обладает заданным по умолчанию показателем загрузки и указанными поставщиком хэш-кода и объектом сравнения. Этот API устарел. См. <see cref="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IEqualityComparer)" /> для альтернативных шагов.</summary>
      <param name="d">Объект <see cref="T:System.Collections.IDictionary" />, предназначенный для копирования в новый объект <see cref="T:System.Collections.Hashtable" />.</param>
      <param name="hcp">Интерфейс <see cref="T:System.Collections.IHashCodeProvider" /> — это объект, поставляющий хэш-коды для всех ключей в объекте <see cref="T:System.Collections.Hashtable" />.  
-или- 
 Значение <see langword="null" /> предусмотрено для использования поставщика хэш-кода по умолчанию, являющегося реализацией метода <see cref="M:System.Object.GetHashCode" /> для каждого ключа.</param>
      <param name="comparer">Интерфейс <see cref="T:System.Collections.IComparer" />, который используется для определения равенства двух ключей.  
-или- 
 Значение <see langword="null" /> для использования блока сравнения по умолчанию, который является реализацией метода <see cref="M:System.Object.Equals(System.Object)" /> для каждого ключа.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="d" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single)">
      <summary>Инициализирует новый пустой экземпляр класса <see cref="T:System.Collections.Hashtable" /> посредством копирования элементов из указанного словаря в новый объект <see cref="T:System.Collections.Hashtable" />. У нового объекта <see cref="T:System.Collections.Hashtable" /> исходная емкость равна числу копируемых элементов, и он обладает указанным показателем загрузки и заданными по умолчанию поставщиком хэш-кода и объектом сравнения.</summary>
      <param name="d">Объект <see cref="T:System.Collections.IDictionary" />, предназначенный для копирования в новый объект <see cref="T:System.Collections.Hashtable" />.</param>
      <param name="loadFactor">Число в диапазоне от 0,1 до 1,0, умноженное на значение по умолчанию, обеспечивающее наилучшую производительность. Результат определяет максимальное отношение количества элементов к количеству сегментов.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="loadFactor" /> меньше 0,1.  

или - 
Значение <paramref name="loadFactor" /> больше 1,0.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single,System.Collections.IEqualityComparer)">
      <summary>Инициализирует новый пустой экземпляр класса <see cref="T:System.Collections.Hashtable" /> посредством копирования элементов из указанного словаря в новый объект <see cref="T:System.Collections.Hashtable" />. У нового объекта <see cref="T:System.Collections.Hashtable" /> исходная емкость равна числу копируемых элементов, и он обладает указанными показателем загрузки и объектом сравнения <see cref="T:System.Collections.IEqualityComparer" />.</summary>
      <param name="d">Объект <see cref="T:System.Collections.IDictionary" />, предназначенный для копирования в новый объект <see cref="T:System.Collections.Hashtable" />.</param>
      <param name="loadFactor">Число в диапазоне от 0,1 до 1,0, умноженное на значение по умолчанию, обеспечивающее наилучшую производительность. Результат определяет максимальное отношение количества элементов к количеству сегментов.</param>
      <param name="equalityComparer">
        <see cref="T:System.Collections.IEqualityComparer" /> — это объект, определяющий поставщик хэш-кода и объект сравнения для использования с объектом <see cref="T:System.Collections.Hashtable" />.  

или - 
Значение <see langword="null" /> предусмотрено для использования поставщика хэш-кодов по умолчанию и объекта сравнения по умолчанию. Поставщик хэш-кода по умолчанию является реализацией метода <see cref="M:System.Object.GetHashCode" />, а средство сравнения по умолчанию является реализацией метода <see cref="M:System.Object.Equals(System.Object)" />.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="d" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="loadFactor" /> меньше 0,1.  

или - 
Значение <paramref name="loadFactor" /> больше 1,0.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
      <summary>Инициализирует новый пустой экземпляр класса <see cref="T:System.Collections.Hashtable" /> посредством копирования элементов из указанного словаря в новый объект <see cref="T:System.Collections.Hashtable" />. У нового объекта <see cref="T:System.Collections.Hashtable" /> исходная емкость равна числу копируемых элементов, и он обладает указанными показателем загрузки, поставщиком хэш-кода и объектом сравнения.</summary>
      <param name="d">Объект <see cref="T:System.Collections.IDictionary" />, предназначенный для копирования в новый объект <see cref="T:System.Collections.Hashtable" />.</param>
      <param name="loadFactor">Число в диапазоне от 0,1 до 1,0, умноженное на значение по умолчанию, обеспечивающее наилучшую производительность. Результат определяет максимальное отношение количества элементов к количеству сегментов.</param>
      <param name="hcp">Интерфейс <see cref="T:System.Collections.IHashCodeProvider" /> — это объект, поставляющий хэш-коды для всех ключей в объекте <see cref="T:System.Collections.Hashtable" />.  
-или- 
 Значение <see langword="null" /> предусмотрено для использования поставщика хэш-кода по умолчанию, являющегося реализацией метода <see cref="M:System.Object.GetHashCode" /> для каждого ключа.</param>
      <param name="comparer">Интерфейс <see cref="T:System.Collections.IComparer" />, который используется для определения равенства двух ключей.  

или - 
Значение <see langword="null" /> для использования блока сравнения по умолчанию, который является реализацией метода <see cref="M:System.Object.Equals(System.Object)" /> для каждого ключа.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="d" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="loadFactor" /> меньше 0,1.  

или - 
Значение <paramref name="loadFactor" /> больше 1,0.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Collections.IEqualityComparer)">
      <summary>Инициализирует новый пустой экземпляр класса <see cref="T:System.Collections.Hashtable" /> с заданными по умолчанию исходной емкостью и показателем загрузки и указанным объектом сравнения <see cref="T:System.Collections.IEqualityComparer" />.</summary>
      <param name="equalityComparer">
        <see cref="T:System.Collections.IEqualityComparer" /> — это объект, определяющий поставщик хэш-кода и объект сравнения для использования с объектом <see cref="T:System.Collections.Hashtable" />.  

или - 
Значение <see langword="null" /> предусмотрено для использования поставщика хэш-кодов по умолчанию и объекта сравнения по умолчанию. Поставщик хэш-кода по умолчанию является реализацией метода <see cref="M:System.Object.GetHashCode" />, а средство сравнения по умолчанию является реализацией метода <see cref="M:System.Object.Equals(System.Object)" />.</param>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)">
      <summary>Инициализирует новый пустой экземпляр класса <see cref="T:System.Collections.Hashtable" /> с заданными по умолчанию исходной емкостью и показателем загрузки и указанными поставщиком хэш-кода и объектом сравнения.</summary>
      <param name="hcp">Интерфейс <see cref="T:System.Collections.IHashCodeProvider" /> — это объект, поставляющий хэш-коды для всех ключей в объекте <see cref="T:System.Collections.Hashtable" />.  
-или- 
 Значение <see langword="null" /> предусмотрено для использования поставщика хэш-кода по умолчанию, являющегося реализацией метода <see cref="M:System.Object.GetHashCode" /> для каждого ключа.</param>
      <param name="comparer">Интерфейс <see cref="T:System.Collections.IComparer" />, который используется для определения равенства двух ключей.  

или - 
Значение <see langword="null" /> для использования блока сравнения по умолчанию, который является реализацией метода <see cref="M:System.Object.Equals(System.Object)" /> для каждого ключа.</param>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Int32)">
      <summary>Инициализирует новый пустой экземпляр класса <see cref="T:System.Collections.Hashtable" /> с указанной исходной емкостью и заданными по умолчанию показателем загрузки, поставщиком хэш-кода и объектом сравнения.</summary>
      <param name="capacity">Приблизительное количество элементов, которое может первоначально содержать объект <see cref="T:System.Collections.Hashtable" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="capacity" /> меньше нуля.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Int32,System.Collections.IEqualityComparer)">
      <summary>Инициализирует новый пустой экземпляр класса <see cref="T:System.Collections.Hashtable" /> с указанными исходной емкостью и объектом сравнения <see cref="T:System.Collections.IEqualityComparer" /> и заданным по умолчанию показателем загрузки.</summary>
      <param name="capacity">Приблизительное количество элементов, которое может первоначально содержать объект <see cref="T:System.Collections.Hashtable" />.</param>
      <param name="equalityComparer">
        <see cref="T:System.Collections.IEqualityComparer" /> — это объект, определяющий поставщик хэш-кода и объект сравнения для использования с объектом <see cref="T:System.Collections.Hashtable" />.  

или - 
Значение <see langword="null" /> предусмотрено для использования поставщика хэш-кодов по умолчанию и объекта сравнения по умолчанию. Поставщик хэш-кода по умолчанию является реализацией метода <see cref="M:System.Object.GetHashCode" />, а средство сравнения по умолчанию является реализацией метода <see cref="M:System.Object.Equals(System.Object)" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="capacity" /> меньше нуля.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
      <summary>Инициализирует новый пустой экземпляр класса <see cref="T:System.Collections.Hashtable" /> с указанными исходной емкостью, поставщиком хэш-кода и объектом сравнения и заданным по умолчанию показателем загрузки.</summary>
      <param name="capacity">Приблизительное количество элементов, которое может первоначально содержать объект <see cref="T:System.Collections.Hashtable" />.</param>
      <param name="hcp">Интерфейс <see cref="T:System.Collections.IHashCodeProvider" /> — это объект, поставляющий хэш-коды для всех ключей в объекте <see cref="T:System.Collections.Hashtable" />.  

или - 
Значение <see langword="null" /> предусмотрено для использования поставщика хэш-кода по умолчанию, являющегося реализацией метода <see cref="M:System.Object.GetHashCode" /> для каждого ключа.</param>
      <param name="comparer">Интерфейс <see cref="T:System.Collections.IComparer" />, который используется для определения равенства двух ключей.  
-или- 
 Значение <see langword="null" /> для использования блока сравнения по умолчанию, который является реализацией метода <see cref="M:System.Object.Equals(System.Object)" /> для каждого ключа.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="capacity" /> меньше нуля.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Int32,System.Single)">
      <summary>Инициализирует новый пустой экземпляр класса <see cref="T:System.Collections.Hashtable" /> с указанными исходной емкостью и показателем загрузки и заданными по умолчанию поставщиком хэш-кода и объектом сравнения.</summary>
      <param name="capacity">Приблизительное количество элементов, которое может первоначально содержать объект <see cref="T:System.Collections.Hashtable" />.</param>
      <param name="loadFactor">Число в диапазоне от 0,1 до 1,0, умноженное на значение по умолчанию, обеспечивающее наилучшую производительность. Результат определяет максимальное отношение количества элементов к количеству сегментов.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="capacity" /> меньше нуля.  

или - 
Значение <paramref name="loadFactor" /> меньше 0,1.  

или - 
Значение <paramref name="loadFactor" /> больше 1,0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="capacity" /> приводит к переполнению.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Int32,System.Single,System.Collections.IEqualityComparer)">
      <summary>Инициализирует новый пустой экземпляр класса <see cref="T:System.Collections.Hashtable" /> с указанными исходной емкостью, показателем загрузки и объектом сравнения <see cref="T:System.Collections.IEqualityComparer" />.</summary>
      <param name="capacity">Приблизительное количество элементов, которое может первоначально содержать объект <see cref="T:System.Collections.Hashtable" />.</param>
      <param name="loadFactor">Число в диапазоне от 0,1 до 1,0, умноженное на значение по умолчанию, обеспечивающее наилучшую производительность. Результат определяет максимальное отношение количества элементов к количеству сегментов.</param>
      <param name="equalityComparer">
        <see cref="T:System.Collections.IEqualityComparer" /> — это объект, определяющий поставщик хэш-кода и объект сравнения для использования с объектом <see cref="T:System.Collections.Hashtable" />.  

или - 
Значение <see langword="null" /> предусмотрено для использования поставщика хэш-кодов по умолчанию и объекта сравнения по умолчанию. Поставщик хэш-кода по умолчанию является реализацией метода <see cref="M:System.Object.GetHashCode" />, а средство сравнения по умолчанию является реализацией метода <see cref="M:System.Object.Equals(System.Object)" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="capacity" /> меньше нуля.  

или - 
Значение <paramref name="loadFactor" /> меньше 0,1.  

или - 
Значение <paramref name="loadFactor" /> больше 1,0.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Int32,System.Single,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
      <summary>Инициализирует новый пустой экземпляр класса <see cref="T:System.Collections.Hashtable" /> с указанными начальной емкостью, показателем загрузки, поставщиком хэш-кода и объектом сравнения.</summary>
      <param name="capacity">Приблизительное количество элементов, которое может первоначально содержать объект <see cref="T:System.Collections.Hashtable" />.</param>
      <param name="loadFactor">Число в диапазоне от 0,1 до 1,0, умноженное на значение по умолчанию, обеспечивающее наилучшую производительность. Результат определяет максимальное отношение количества элементов к количеству сегментов.</param>
      <param name="hcp">Интерфейс <see cref="T:System.Collections.IHashCodeProvider" /> — это объект, поставляющий хэш-коды для всех ключей в объекте <see cref="T:System.Collections.Hashtable" />.  

или - 
Значение <see langword="null" /> предусмотрено для использования поставщика хэш-кода по умолчанию, являющегося реализацией метода <see cref="M:System.Object.GetHashCode" /> для каждого ключа.</param>
      <param name="comparer">Интерфейс <see cref="T:System.Collections.IComparer" />, который используется для определения равенства двух ключей.  
-или- 
 Значение <see langword="null" /> для использования блока сравнения по умолчанию, который является реализацией метода <see cref="M:System.Object.Equals(System.Object)" /> для каждого ключа.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="capacity" /> меньше нуля.  

или - 
Значение <paramref name="loadFactor" /> меньше 0,1.  

или - 
Значение <paramref name="loadFactor" /> больше 1,0.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый пустой экземпляр класса <see cref="T:System.Collections.Hashtable" />, который может быть сериализован с помощью объектов <see cref="T:System.Runtime.Serialization.SerializationInfo" /> и <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, содержащий сведения, которые требуются для сериализации объекта <see cref="T:System.Collections.Hashtable" />.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий исходный объект и объект назначения для сериализованного потока, связанного с коллекцией <see cref="T:System.Collections.Hashtable" />.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="info" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.Add(System.Object,System.Object)">
      <summary>Добавляет элемент с указанными ключом и значением в словарь <see cref="T:System.Collections.Hashtable" />.</summary>
      <param name="key">Ключ добавляемого элемента.</param>
      <param name="value">Добавляемое значение элемента. Допускается значение <see langword="null" />.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="key" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Элемент с таким ключом уже существует в <see cref="T:System.Collections.Hashtable" />.</exception>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Collections.Hashtable" /> доступен только для чтения.  

или - 
<see cref="T:System.Collections.Hashtable" /> имеет фиксированный размер.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.Clear">
      <summary>Удаляет из коллекции <see cref="T:System.Collections.Hashtable" /> все элементы.</summary>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Collections.Hashtable" /> доступен только для чтения.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.Clone">
      <summary>Создает неполную копию <see cref="T:System.Collections.Hashtable" />.</summary>
      <returns>Неполная копия <see cref="T:System.Collections.Hashtable" />.</returns>
    </member>
    <member name="P:System.Collections.Hashtable.comparer">
      <summary>Получает или задает интерфейс <see cref="T:System.Collections.IComparer" /> для использования применительно к коллекции <see cref="T:System.Collections.Hashtable" />.</summary>
      <returns>Интерфейс <see cref="T:System.Collections.IComparer" />, предназначенный для использования применительно к коллекции <see cref="T:System.Collections.Hashtable" />.</returns>
      <exception cref="T:System.ArgumentException">Свойству присвоено значение, однако хэш-таблица была создана с помощью объекта <see cref="T:System.Collections.IEqualityComparer" />.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.Contains(System.Object)">
      <summary>Определяет, содержит ли объект <see cref="T:System.Collections.Hashtable" /> указанный ключ.</summary>
      <param name="key">Ключ, который требуется найти в <see cref="T:System.Collections.Hashtable" />.</param>
      <returns>
        <see langword="true" />, если <see cref="T:System.Collections.Hashtable" /> содержит элемент с указанным ключом, в противном случае — <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="key" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.ContainsKey(System.Object)">
      <summary>Определяет, содержит ли объект <see cref="T:System.Collections.Hashtable" /> указанный ключ.</summary>
      <param name="key">Ключ, который требуется найти в <see cref="T:System.Collections.Hashtable" />.</param>
      <returns>
        <see langword="true" />, если <see cref="T:System.Collections.Hashtable" /> содержит элемент с указанным ключом, в противном случае — <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="key" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.ContainsValue(System.Object)">
      <summary>Определяет, содержит ли коллекция <see cref="T:System.Collections.Hashtable" /> указанное значение.</summary>
      <param name="value">Значение, которое требуется найти в словаре <see cref="T:System.Collections.Hashtable" />. Допускается значение <see langword="null" />.</param>
      <returns>Значение <see langword="true" />, если объект <see cref="T:System.Collections.Hashtable" /> содержит элемент с указанным значением параметра <paramref name="value" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Hashtable.CopyTo(System.Array,System.Int32)">
      <summary>Копирует элементы коллекции <see cref="T:System.Collections.Hashtable" /> в экземпляр класса одномерного массива <see cref="T:System.Array" /> по указанному индексу.</summary>
      <param name="array">Одномерный массив <see cref="T:System.Array" />, который является назначением для объектов <see cref="T:System.Collections.DictionaryEntry" />, копируемых из коллекции <see cref="T:System.Collections.Hashtable" />. Массив <see cref="T:System.Array" /> должен иметь индексацию, начинающуюся с нуля.</param>
      <param name="arrayIndex">Отсчитываемый от нуля индекс в массиве <paramref name="array" />, указывающий начало копирования.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="arrayIndex" /> меньше нуля.</exception>
      <exception cref="T:System.ArgumentException">Массив <paramref name="array" /> является многомерным.  

или - 
Число элементов в исходной коллекции <see cref="T:System.Collections.Hashtable" /> больше доступного места от положения, заданного значением параметра <paramref name="arrayIndex" />, до конца массива назначения <paramref name="array" />.</exception>
      <exception cref="T:System.InvalidCastException">Тип исходного массива <see cref="T:System.Collections.Hashtable" /> не может быть автоматически приведен к типу массива назначения <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Collections.Hashtable.Count">
      <summary>Возвращает число пар "ключ-значение", содержащихся в словаре <see cref="T:System.Collections.Hashtable" />.</summary>
      <returns>Число пар "ключ-значение", содержащихся в словаре <see cref="T:System.Collections.Hashtable" />.</returns>
    </member>
    <member name="P:System.Collections.Hashtable.EqualityComparer">
      <summary>Получает объект <see cref="T:System.Collections.IEqualityComparer" />, предназначенный для использования применительно к коллекции <see cref="T:System.Collections.Hashtable" />.</summary>
      <returns>Интерфейс <see cref="T:System.Collections.IEqualityComparer" />, предназначенный для использования применительно к коллекции <see cref="T:System.Collections.Hashtable" />.</returns>
      <exception cref="T:System.ArgumentException">Свойству присвоено значение, однако хэш-таблица была создана с помощью интерфейсов <see cref="T:System.Collections.IHashCodeProvider" /> и <see cref="T:System.Collections.IComparer" />.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.GetEnumerator">
      <summary>Возвращает объект <see cref="T:System.Collections.IDictionaryEnumerator" />, осуществляющий перебор <see cref="T:System.Collections.Hashtable" />.</summary>
      <returns>Интерфейс <see cref="T:System.Collections.IDictionaryEnumerator" /> для <see cref="T:System.Collections.Hashtable" />.</returns>
    </member>
    <member name="M:System.Collections.Hashtable.GetHash(System.Object)">
      <summary>Возвращает хэш-код указанного ключа.</summary>
      <param name="key">Объект <see cref="T:System.Object" />, для которого необходимо вернуть хэш-код.</param>
      <returns>Хэш-код параметра <paramref name="key" />.</returns>
      <exception cref="T:System.NullReferenceException">Свойство <paramref name="key" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Реализует интерфейс <see cref="T:System.Runtime.Serialization.ISerializable" /> и возвращает данные, необходимые для сериализации коллекции <see cref="T:System.Collections.Hashtable" />.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, который содержит сведения, требуемые для сериализации коллекции <see cref="T:System.Collections.Hashtable" />.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий исходный объект и объект назначения для сериализованного потока, связанного с коллекцией <see cref="T:System.Collections.Hashtable" />.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="info" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Коллекция была изменена.</exception>
    </member>
    <member name="P:System.Collections.Hashtable.hcp">
      <summary>Получает или задает объект, который может распределять хэш-коды.</summary>
      <returns>Объект, который может распределять хэш-коды.</returns>
      <exception cref="T:System.ArgumentException">Свойству присвоено значение, однако хэш-таблица была создана с помощью объекта <see cref="T:System.Collections.IEqualityComparer" />.</exception>
    </member>
    <member name="P:System.Collections.Hashtable.IsFixedSize">
      <summary>Получает значение, указывающее, имеет ли список <see cref="T:System.Collections.Hashtable" /> фиксированный размер.</summary>
      <returns>Значение<see langword="true" /> , если словарь <see cref="T:System.Collections.Hashtable" /> имеет фиксированный размер; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Hashtable.IsReadOnly">
      <summary>Получает значение, указывающее, является ли объект <see cref="T:System.Collections.Hashtable" /> доступным только для чтения.</summary>
      <returns>Значение<see langword="true" /> , если коллекция <see cref="T:System.Collections.Hashtable" /> доступна только для чтения; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Hashtable.IsSynchronized">
      <summary>Возвращает значение, показывающее, является ли доступ к коллекции <see cref="T:System.Collections.Hashtable" /> синхронизированным (потокобезопасным).</summary>
      <returns>
        <see langword="true" /> , если доступ к классу <see cref="T:System.Collections.Hashtable" /> является синхронизированным (потокобезопасным); в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Hashtable.Item(System.Object)">
      <summary>Получает или задает значение, связанное с заданным ключом.</summary>
      <param name="key">Задаваемое или получаемое значение ключа.</param>
      <returns>Значение, связанное с указанным ключом. Если указанный ключ не найден, при попытке его получения возвращается значение <see langword="null" />, а при попытке задания ключа создается новый элемент с использованием указанного ключа.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="key" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Свойство задано, и список <see cref="T:System.Collections.Hashtable" /> доступен только для чтения.  

или - 
Свойство задано, <paramref name="key" /> не существует в коллекции, а <see cref="T:System.Collections.Hashtable" /> имеет фиксированный размер.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.KeyEquals(System.Object,System.Object)">
      <summary>Сравнивает указанный объект класса <see cref="T:System.Object" /> с указанным ключом, который содержится в коллекции <see cref="T:System.Collections.Hashtable" />.</summary>
      <param name="item">Объект класса <see cref="T:System.Object" />, который требуется сравнить со значением ключа <paramref name="key" />.</param>
      <param name="key">Ключ, существующий в коллекции <see cref="T:System.Collections.Hashtable" />, который требуется сравнить со значением параметра <paramref name="item" />.</param>
      <returns>Значение <see langword="true" />, если <paramref name="item" /> и <paramref name="key" /> равны; в противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="item" /> имеет значение <see langword="null" />.  
-или- 
 <paramref name="key" /> — <see langword="null" />.</exception>
    </member>
    <member name="P:System.Collections.Hashtable.Keys">
      <summary>Получает коллекцию <see cref="T:System.Collections.ICollection" />, содержащую ключи из коллекции <see cref="T:System.Collections.Hashtable" />.</summary>
      <returns>Коллекция <see cref="T:System.Collections.ICollection" />, содержащая ключи из коллекции <see cref="T:System.Collections.Hashtable" />.</returns>
    </member>
    <member name="M:System.Collections.Hashtable.OnDeserialization(System.Object)">
      <summary>Реализует интерфейс <see cref="T:System.Runtime.Serialization.ISerializable" /> и вызывает событие десериализации при завершении десериализации.</summary>
      <param name="sender">Источник события десериализации.</param>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, связанный с текущей коллекцией <see cref="T:System.Collections.Hashtable" />, недействителен.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.Remove(System.Object)">
      <summary>Удаляет элемент с указанным ключом из объекта <see cref="T:System.Collections.Hashtable" />.</summary>
      <param name="key">Ключ элемента, который требуется удалить.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="key" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Collections.Hashtable" /> доступен только для чтения.  
-или- 
<see cref="T:System.Collections.Hashtable" /> имеет фиксированный размер.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)">
      <summary>Возвращает синхронизированную (потокобезопасную) оболочку коллекции <see cref="T:System.Collections.Hashtable" />.</summary>
      <param name="table">Коллекция <see cref="T:System.Collections.Hashtable" />, которую требуется синхронизировать.</param>
      <returns>Синхронизированная (потокобезопасная) оболочка коллекции <see cref="T:System.Collections.Hashtable" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="table" /> — <see langword="null" />.</exception>
    </member>
    <member name="P:System.Collections.Hashtable.SyncRoot">
      <summary>Получает объект, с помощью которого можно синхронизировать доступ к коллекции <see cref="T:System.Collections.Hashtable" />.</summary>
      <returns>Объект, который может использоваться для синхронизации доступа к <see cref="T:System.Collections.Hashtable" />.</returns>
    </member>
    <member name="M:System.Collections.Hashtable.System#Collections#IEnumerable#GetEnumerator">
      <summary>Возвращает перечислитель, который осуществляет итерацию по коллекции.</summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" />, который может использоваться для итерации элементов коллекции.</returns>
    </member>
    <member name="P:System.Collections.Hashtable.Values">
      <summary>Возвращает интерфейс <see cref="T:System.Collections.ICollection" />, содержащий значения из <see cref="T:System.Collections.Hashtable" />.</summary>
      <returns>Коллекция <see cref="T:System.Collections.ICollection" />, содержащая значения из словаря <see cref="T:System.Collections.Hashtable" />.</returns>
    </member>
    <member name="T:System.Collections.IHashCodeProvider">
      <summary>Предоставляет хеш-код объекта, используя пользовательскую хеш-функцию.</summary>
    </member>
    <member name="M:System.Collections.IHashCodeProvider.GetHashCode(System.Object)">
      <summary>Возвращает хэш-код указанного объекта.</summary>
      <param name="obj">Объект <see cref="T:System.Object" />, для которого необходимо вернуть хэш-код.</param>
      <returns>Хэш-код указанного объекта.</returns>
      <exception cref="T:System.ArgumentNullException">Тип <paramref name="obj" /> является ссылочным типом и <paramref name="obj" /> — <see langword="null" />.</exception>
    </member>
    <member name="T:System.ContextBoundObject">
      <summary>Определяет базовый класс для всех классов с привязкой к контексту.</summary>
    </member>
    <member name="M:System.ContextBoundObject.#ctor">
      <summary>Создает экземпляр класса <see cref="T:System.ContextBoundObject" />.</summary>
    </member>
    <member name="T:System.ContextMarshalException">
      <summary>Исключение, возникающее при неудачной попытке маршалинга объекта через границы контекста.</summary>
    </member>
    <member name="M:System.ContextMarshalException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ContextMarshalException" /> стандартными свойствами.</summary>
    </member>
    <member name="M:System.ContextMarshalException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ContextMarshalException" /> с сериализованными данными.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />, хранящий сериализованные данные объекта, относящиеся к выдаваемому исключению.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:System.ContextMarshalException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ContextMarshalException" /> с указанным сообщением об ошибке.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
    </member>
    <member name="M:System.ContextMarshalException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ContextMarshalException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="inner">Исключение, которое является причиной текущего исключения. Если значение параметра <paramref name="inner" /> не равно <see langword="null" />, текущее исключение сгенерировано в блоке <see langword="catch" />, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.ContextStaticAttribute">
      <summary>Указывает, что значение статического поля уникально для определенного контекста.</summary>
    </member>
    <member name="M:System.ContextStaticAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ContextStaticAttribute" />.</summary>
    </member>
    <member name="T:System.Convert">
      <summary>Преобразует значение одного базового типа данных к другому базовому типу данных.</summary>
    </member>
    <member name="M:System.Convert.ChangeType(System.Object,System.Type)">
      <summary>Возвращает объект указанного типа, значение которого эквивалентно заданному объекту.</summary>
      <param name="value">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />.</param>
      <param name="conversionType">Тип возвращаемого объекта.</param>
      <returns>Объект, тип которого равен <paramref name="conversionType" />, а значение эквивалентно <paramref name="value" />.  
-или- 
Пустая ссылка (<see langword="Nothing" /> в Visual Basic), если <paramref name="value" /> равняется <see langword="null" />, а <paramref name="conversionType" /> не является типом значения.</returns>
      <exception cref="T:System.InvalidCastException">Данное преобразование не поддерживается.  

или - 
Значение <paramref name="value" /> — <see langword="null" />, а <paramref name="conversionType" /> — это тип значения.  

-или- 
 <paramref name="value" /> не реализует интерфейс <see cref="T:System.IConvertible" /> .</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> не является форматом, распознаваемым типом <paramref name="conversionType" />.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> представляет число, которое не входит в диапазон <paramref name="conversionType" />.</exception>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="conversionType" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
      <summary>Возвращает объект указанного типа, чье значение эквивалентно заданному объекту. Параметр предоставляет сведения об особенностях форматирования, связанных с языком и региональными параметрами.</summary>
      <param name="value">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />.</param>
      <param name="conversionType">Тип возвращаемого объекта.</param>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <returns>Объект, тип которого равен <paramref name="conversionType" />, а значение эквивалентно <paramref name="value" />.  

или - 
<paramref name="value" />, если <see cref="T:System.Type" /> параметра <paramref name="value" /> равен <paramref name="conversionType" />.  

или - 
Пустая ссылка (<see langword="Nothing" /> в Visual Basic), если <paramref name="value" /> равняется <see langword="null" />, а <paramref name="conversionType" /> не является типом значения.</returns>
      <exception cref="T:System.InvalidCastException">Данное преобразование не поддерживается.  

или - 
Значение <paramref name="value" /> — <see langword="null" />, а <paramref name="conversionType" /> — это тип значения.  

или - 
<paramref name="value" /> не реализует интерфейс <see cref="T:System.IConvertible" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> не является форматом для типа <paramref name="conversionType" />, распознаваемым поставщиком <paramref name="provider" />.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> представляет число, которое не входит в диапазон <paramref name="conversionType" />.</exception>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="conversionType" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Convert.ChangeType(System.Object,System.TypeCode)">
      <summary>Возвращает объект указанного типа, чье значение эквивалентно заданному объекту.</summary>
      <param name="value">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />.</param>
      <param name="typeCode">Тип возвращаемого объекта.</param>
      <returns>Объект, базовый тип которого равен <paramref name="typeCode" />, а значение эквивалентно <paramref name="value" />.  
-или- 
Пустая ссылка (<see langword="Nothing" /> в Visual Basic), если <paramref name="value" /> равняется <see langword="null" />, а <paramref name="typeCode" /> равняется <see cref="F:System.TypeCode.Empty" />, <see cref="F:System.TypeCode.String" /> или <see cref="F:System.TypeCode.Object" />.</returns>
      <exception cref="T:System.InvalidCastException">Данное преобразование не поддерживается.  

или - 
<paramref name="value" /> равен <see langword="null" /> и <paramref name="typeCode" /> указывает тип значения.  

или - 
<paramref name="value" /> не реализует интерфейс <see cref="T:System.IConvertible" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> не является форматом, распознаваемым типом <paramref name="typeCode" />.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> представляет число, которое не входит в диапазон типа <paramref name="typeCode" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="typeCode" /> недопустим.</exception>
    </member>
    <member name="M:System.Convert.ChangeType(System.Object,System.TypeCode,System.IFormatProvider)">
      <summary>Возвращает объект указанного типа, чье значение эквивалентно заданному объекту. Параметр предоставляет сведения об особенностях форматирования, связанных с языком и региональными параметрами.</summary>
      <param name="value">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />.</param>
      <param name="typeCode">Тип возвращаемого объекта.</param>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <returns>Объект, базовый тип которого равен <paramref name="typeCode" />, а значение эквивалентно <paramref name="value" />.  

или - 
Пустая ссылка (<see langword="Nothing" /> в Visual Basic), если <paramref name="value" /> равняется <see langword="null" />, а <paramref name="typeCode" /> равняется <see cref="F:System.TypeCode.Empty" />, <see cref="F:System.TypeCode.String" /> или <see cref="F:System.TypeCode.Object" />.</returns>
      <exception cref="T:System.InvalidCastException">Данное преобразование не поддерживается.  

или - 
<paramref name="value" /> равен <see langword="null" /> и <paramref name="typeCode" /> указывает тип значения.  

-или- 
 <paramref name="value" /> не реализует интерфейс <see cref="T:System.IConvertible" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> не является форматом для типа <paramref name="typeCode" />, распознаваемым <paramref name="provider" />.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> представляет число, которое не входит в диапазон типа <paramref name="typeCode" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="typeCode" /> недопустим.</exception>
    </member>
    <member name="F:System.Convert.DBNull">
      <summary>Константа, представляющая не содержащий данных столбец базы данных, то есть значение NULL базы данных.</summary>
    </member>
    <member name="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)">
      <summary>Преобразует подмножество массива знаков Юникода, представляющих двоичные данные в виде цифр в кодировке Base64, в эквивалентный массив 8-разрядных целых чисел без знака. Параметры задают подмножество входного массива и количество преобразуемых элементов.</summary>
      <param name="inArray">Массив знаков Юникода.</param>
      <param name="offset">Позиция в массиве <paramref name="inArray" />.</param>
      <param name="length">Число преобразуемых элементов массива <paramref name="inArray" />.</param>
      <returns>Массив 8-битовых целых чисел без знака, эквивалентный <paramref name="length" /> элементам с позиции <paramref name="offset" /> в массиве <paramref name="inArray" />.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="inArray" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> или <paramref name="length" /> меньше 0.  
-или- 
 <paramref name="offset" /> плюс <paramref name="length" /> указывает на позицию за пределами <paramref name="inArray" />.</exception>
      <exception cref="T:System.FormatException">Длина <paramref name="inArray" />, не учитывая символы пробелов, не равна нулю и не кратна 4.  

или - 
Недопустимый формат <paramref name="inArray" />. <paramref name="inArray" /> содержит символ в кодировке, отличной от Base 64, больше двух символов заполнения или символ, не являющийся пробелом, среди символов заполнения.</exception>
    </member>
    <member name="M:System.Convert.FromBase64String(System.String)">
      <summary>Преобразует заданную строку, представляющую двоичные данные в виде цифр в кодировке Base64, в эквивалентный массив 8-разрядных целых чисел без знака.</summary>
      <param name="s">Преобразуемая строка.</param>
      <returns>Массив 8-разрядных целых чисел без знака, эквивалентный <paramref name="s" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> — <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">Длина <paramref name="s" />, не учитывая символы пробелов, не равна нулю и не кратна 4.  

или - 
Недопустимый формат <paramref name="s" />. <paramref name="s" /> содержит символ в кодировке, отличной от Base 64, больше двух символов заполнения или символ, не являющийся пробелом, среди символов заполнения.</exception>
    </member>
    <member name="M:System.Convert.GetTypeCode(System.Object)">
      <summary>Возвращает <see cref="T:System.TypeCode" /> для заданного объекта.</summary>
      <param name="value">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />.</param>
      <returns>
        <see cref="T:System.TypeCode" /> для <paramref name="value" /> или <see cref="F:System.TypeCode.Empty" />, если <paramref name="value" /> имеет значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Convert.IsDBNull(System.Object)">
      <summary>Возвращает значение, указывающее, имеет ли заданный объект тип <see cref="T:System.DBNull" />.</summary>
      <param name="value">Объект.</param>
      <returns>
        <see langword="true" />, если <paramref name="value" /> имеет тип <see cref="T:System.DBNull" />; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
      <summary>Преобразует подмножество массива 8-разрядных целых чисел без знака в эквивалентное подмножество массива знаков Юникода, состоящее из цифр в кодировке Base64. Подмножества задаются с помощью параметров как смещение во входном и выходном массивах и количество преобразуемых элементов входного массива.</summary>
      <param name="inArray">Входной массив 8-битовых целых чисел без знака.</param>
      <param name="offsetIn">Позиция в массиве <paramref name="inArray" />.</param>
      <param name="length">Число преобразуемых элементов <paramref name="inArray" />.</param>
      <param name="outArray">Выходной массив знаков Юникода.</param>
      <param name="offsetOut">Позиция в массиве <paramref name="outArray" />.</param>
      <returns>32-битовое целое число со знаком, представляющее число байтов в массиве <paramref name="outArray" />.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="inArray" /> или <paramref name="outArray" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offsetIn" />, <paramref name="offsetOut" /> или <paramref name="length" /> является отрицательным значением.  

или - 
Сумма значений <paramref name="offsetIn" /> и <paramref name="length" /> превышает длину массива <paramref name="inArray" />.  

или - 
<paramref name="offsetOut" /> плюс количество возвращаемых элементов превышает длину массива <paramref name="outArray" />.</exception>
    </member>
    <member name="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Base64FormattingOptions)">
      <summary>Преобразует подмножество массива 8-разрядных целых чисел без знака в эквивалентное подмножество массива знаков Юникода, состоящее из цифр в кодировке Base64. В параметрах задаются подмножества как смещение во входном и выходном массивах и количество преобразуемых элементов входного массива, а также значение, указывающее, следует ли вставлять в выходной массив разрывы строки.</summary>
      <param name="inArray">Входной массив 8-битовых целых чисел без знака.</param>
      <param name="offsetIn">Позиция в массиве <paramref name="inArray" />.</param>
      <param name="length">Число преобразуемых элементов <paramref name="inArray" />.</param>
      <param name="outArray">Выходной массив знаков Юникода.</param>
      <param name="offsetOut">Позиция в массиве <paramref name="outArray" />.</param>
      <param name="options">
        <see cref="F:System.Base64FormattingOptions.InsertLineBreaks" /> для вставки разрыва строки после каждых 76 знаков или <see cref="F:System.Base64FormattingOptions.None" />, чтобы разрывы строки не вставлялись.</param>
      <returns>32-битовое целое число со знаком, представляющее число байтов в массиве <paramref name="outArray" />.</returns>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="inArray" /> или <paramref name="outArray" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offsetIn" />, <paramref name="offsetOut" /> или <paramref name="length" /> является отрицательным значением.  

или - 
Сумма значений <paramref name="offsetIn" /> и <paramref name="length" /> превышает длину массива <paramref name="inArray" />.  

-или- 
 <paramref name="offsetOut" /> плюс количество возвращаемых элементов превышает длину массива <paramref name="outArray" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="options" /> не является допустимым значением <see cref="T:System.Base64FormattingOptions" />.</exception>
    </member>
    <member name="M:System.Convert.ToBase64String(System.Byte[])">
      <summary>Преобразует массив 8-разрядных целых чисел без знака в эквивалентное строковое представление, состоящее из цифр в кодировке Base64.</summary>
      <param name="inArray">Массив 8-битовых целых чисел без знака.</param>
      <returns>Строковое представление содержимого массива <paramref name="inArray" /> в кодировке Base64.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="inArray" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Convert.ToBase64String(System.Byte[],System.Base64FormattingOptions)">
      <summary>Преобразует массив 8-разрядных целых чисел без знака в эквивалентное строковое представление, состоящее из цифр в кодировке Base64. Параметр указывает, следует ли вставлять в возвращаемое значение разрывы строки.</summary>
      <param name="inArray">Массив 8-битовых целых чисел без знака.</param>
      <param name="options">
        <see cref="F:System.Base64FormattingOptions.InsertLineBreaks" /> для вставки разрыва строки после каждых 76 знаков или <see cref="F:System.Base64FormattingOptions.None" />, чтобы разрывы строки не вставлялись.</param>
      <returns>Строковое представление элементов массива <paramref name="inArray" /> в кодировке Base64.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inArray" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="options" /> не является допустимым значением <see cref="T:System.Base64FormattingOptions" />.</exception>
    </member>
    <member name="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32)">
      <summary>Преобразует подмножество массива 8-разрядных целых чисел без знака в эквивалентное строковое представление, состоящее из цифр в кодировке Base64. В параметрах задается подмножество как смещение во входном массиве и количество преобразуемых элементов этого массива.</summary>
      <param name="inArray">Массив 8-битовых целых чисел без знака.</param>
      <param name="offset">Смещение в массиве <paramref name="inArray" />.</param>
      <param name="length">Число преобразуемых элементов <paramref name="inArray" />.</param>
      <returns>Строковое представление <paramref name="length" /> элементов массива <paramref name="inArray" /> в кодировке Base64, начиная с позиции <paramref name="offset" />.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="inArray" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> или <paramref name="length" /> является отрицательным значением.  

или - 
Сумма значений <paramref name="offset" /> и <paramref name="length" /> превышает длину массива <paramref name="inArray" />.</exception>
    </member>
    <member name="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32,System.Base64FormattingOptions)">
      <summary>Преобразует подмножество массива 8-разрядных целых чисел без знака в эквивалентное строковое представление, состоящее из цифр в кодировке Base64. В параметрах задаются подмножество как смещение во входном массиве и количество преобразуемых элементов этого массива, а также значение, указывающее, следует ли вставлять в выходной массив разрывы строки.</summary>
      <param name="inArray">Массив 8-битовых целых чисел без знака.</param>
      <param name="offset">Смещение в массиве <paramref name="inArray" />.</param>
      <param name="length">Число преобразуемых элементов <paramref name="inArray" />.</param>
      <param name="options">
        <see cref="F:System.Base64FormattingOptions.InsertLineBreaks" /> для вставки разрыва строки после каждых 76 знаков или <see cref="F:System.Base64FormattingOptions.None" />, чтобы разрывы строки не вставлялись.</param>
      <returns>Строковое представление <paramref name="length" /> элементов массива <paramref name="inArray" /> в кодировке Base64, начиная с позиции <paramref name="offset" />.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="inArray" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> или <paramref name="length" /> является отрицательным значением.  

или - 
Сумма значений <paramref name="offset" /> и <paramref name="length" /> превышает длину массива <paramref name="inArray" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="options" /> не является допустимым значением <see cref="T:System.Base64FormattingOptions" />.</exception>
    </member>
    <member name="M:System.Convert.ToBase64String(System.ReadOnlySpan{System.Byte},System.Base64FormattingOptions)">
      <param name="bytes" />
      <param name="options" />
    </member>
    <member name="M:System.Convert.ToBoolean(System.Boolean)">
      <summary>Возвращает заданное логическое значение; фактическое преобразование не производится.</summary>
      <param name="value">Возвращаемое логическое значение.</param>
      <returns>
        <paramref name="value" /> возвращается без изменений.</returns>
    </member>
    <member name="M:System.Convert.ToBoolean(System.Byte)">
      <summary>Преобразует значение заданного 8-битового целого числа без знака в эквивалентное логическое значение.</summary>
      <param name="value">8-разрядное целое число без знака для преобразования.</param>
      <returns>
        <see langword="true" />, если значение параметра <paramref name="value" /> не равно нулю; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Convert.ToBoolean(System.Char)">
      <summary>При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Знак Юникода, который необходимо преобразовать.</param>
      <returns>Данное преобразование не поддерживается. Возвращаемое значение отсутствует.</returns>
      <exception cref="T:System.InvalidCastException">Данное преобразование не поддерживается.</exception>
    </member>
    <member name="M:System.Convert.ToBoolean(System.DateTime)">
      <summary>При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Значение даты и времени для преобразования.</param>
      <returns>Данное преобразование не поддерживается. Возвращаемое значение отсутствует.</returns>
      <exception cref="T:System.InvalidCastException">Данное преобразование не поддерживается.</exception>
    </member>
    <member name="M:System.Convert.ToBoolean(System.Decimal)">
      <summary>Преобразует значение заданного десятичного числа в эквивалентное логическое значение.</summary>
      <param name="value">Преобразуемое число.</param>
      <returns>
        <see langword="true" />, если значение параметра <paramref name="value" /> не равно нулю; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Convert.ToBoolean(System.Double)">
      <summary>Преобразует значение заданного числа двойной точности с плавающей запятой в эквивалентное логическое значение.</summary>
      <param name="value">Число с плавающей запятой двойной точности, которое нужно преобразовать.</param>
      <returns>
        <see langword="true" />, если значение параметра <paramref name="value" /> не равно нулю; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Convert.ToBoolean(System.Int16)">
      <summary>Преобразует значение заданного 16-битового целого числа со знаком в эквивалентное логическое значение.</summary>
      <param name="value">16-разрядное целое число со знаком для преобразования.</param>
      <returns>
        <see langword="true" />, если значение параметра <paramref name="value" /> не равно нулю; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Convert.ToBoolean(System.Int32)">
      <summary>Преобразует значение заданного 32-битового целого числа со знаком в эквивалентное логическое значение.</summary>
      <param name="value">32-разрядное целое число со знаком для преобразования.</param>
      <returns>
        <see langword="true" />, если значение параметра <paramref name="value" /> не равно нулю; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Convert.ToBoolean(System.Int64)">
      <summary>Преобразует значение заданного 64-битового целого числа со знаком в эквивалентное логическое значение.</summary>
      <param name="value">64-разрядное целое число со знаком для преобразования.</param>
      <returns>
        <see langword="true" />, если значение параметра <paramref name="value" /> не равно нулю; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Convert.ToBoolean(System.Object)">
      <summary>Преобразует значение заданного объекта в эквивалентное логическое значение.</summary>
      <param name="value">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />, или значение <see langword="null" />.</param>
      <returns>
        <see langword="true" /> или <see langword="false" />, отражающее значение, возвращаемое методом <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /> при вызове для базового типа параметра <paramref name="value" />. Если значением параметра <paramref name="value" /> является <see langword="null" />, метод возвращает <see langword="false" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> является строкой, которая не равна <see cref="F:System.Boolean.TrueString" /> или <see cref="F:System.Boolean.FalseString" />.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> не реализует интерфейс <see cref="T:System.IConvertible" />.  
-или- 
Преобразование <paramref name="value" /> в <see cref="T:System.Boolean" /> не поддерживается.</exception>
    </member>
    <member name="M:System.Convert.ToBoolean(System.Object,System.IFormatProvider)">
      <summary>Преобразует значение заданного объекта в эквивалентное логическое значение, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</summary>
      <param name="value">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />, или значение <see langword="null" />.</param>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <returns>
        <see langword="true" /> или <see langword="false" />, отражающее значение, возвращаемое методом <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /> при вызове для базового типа параметра <paramref name="value" />. Если значением параметра <paramref name="value" /> является <see langword="null" />, метод возвращает <see langword="false" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> является строкой, которая не равна <see cref="F:System.Boolean.TrueString" /> или <see cref="F:System.Boolean.FalseString" />.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> не реализует интерфейс <see cref="T:System.IConvertible" />.  

или - 
Преобразование <paramref name="value" /> в <see cref="T:System.Boolean" /> не поддерживается.</exception>
    </member>
    <member name="M:System.Convert.ToBoolean(System.SByte)">
      <summary>Преобразует значение заданного 8-битового целого числа со знаком в эквивалентное логическое значение.</summary>
      <param name="value">8-разрядное целое число со знаком для преобразования.</param>
      <returns>
        <see langword="true" />, если значение параметра <paramref name="value" /> не равно нулю; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Convert.ToBoolean(System.Single)">
      <summary>Преобразует значение заданного числа с плавающей запятой одиночной точности в эквивалентное логическое значение.</summary>
      <param name="value">Число с плавающей запятой одиночной точности, которое нужно преобразовать.</param>
      <returns>
        <see langword="true" />, если значение параметра <paramref name="value" /> не равно нулю; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Convert.ToBoolean(System.String)">
      <summary>Преобразует заданное строковое представление логического значения в эквивалентное логическое значение.</summary>
      <param name="value">Строка, содержащая значение <see cref="F:System.Boolean.TrueString" /> или <see cref="F:System.Boolean.FalseString" />.</param>
      <returns>
        <see langword="true" />, если параметр <paramref name="value" /> имеет значение <see cref="F:System.Boolean.TrueString" />, или <see langword="false" />, если параметр <paramref name="value" /> имеет значение <see cref="F:System.Boolean.FalseString" /> либо <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">Параметр <paramref name="value" /> не равен <see cref="F:System.Boolean.TrueString" /> или <see cref="F:System.Boolean.FalseString" />.</exception>
    </member>
    <member name="M:System.Convert.ToBoolean(System.String,System.IFormatProvider)">
      <summary>Преобразует заданное строковое представление логического значения в эквивалентное логическое значение, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</summary>
      <param name="value">Строка, содержащая значение <see cref="F:System.Boolean.TrueString" /> или <see cref="F:System.Boolean.FalseString" />.</param>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров. Этот параметр не учитывается.</param>
      <returns>
        <see langword="true" />, если параметр <paramref name="value" /> имеет значение <see cref="F:System.Boolean.TrueString" />, или <see langword="false" />, если параметр <paramref name="value" /> имеет значение <see cref="F:System.Boolean.FalseString" /> либо <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">Параметр <paramref name="value" /> не равен <see cref="F:System.Boolean.TrueString" /> или <see cref="F:System.Boolean.FalseString" />.</exception>
    </member>
    <member name="M:System.Convert.ToBoolean(System.UInt16)">
      <summary>Преобразует значение заданного 16-битового целого числа без знака в эквивалентное логическое значение.</summary>
      <param name="value">16-разрядное целое число без знака для преобразования.</param>
      <returns>
        <see langword="true" />, если значение параметра <paramref name="value" /> не равно нулю; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Convert.ToBoolean(System.UInt32)">
      <summary>Преобразует значение заданного 32-битового целого числа без знака в эквивалентное логическое значение.</summary>
      <param name="value">32-разрядное целое число без знака для преобразования.</param>
      <returns>
        <see langword="true" />, если значение параметра <paramref name="value" /> не равно нулю; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Convert.ToBoolean(System.UInt64)">
      <summary>Преобразует значение заданного 64-битового целого числа без знака в эквивалентное логическое значение.</summary>
      <param name="value">64-разрядное целое число без знака для преобразования.</param>
      <returns>
        <see langword="true" />, если значение параметра <paramref name="value" /> не равно нулю; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Convert.ToByte(System.Boolean)">
      <summary>Преобразует заданное логическое значение в эквивалентное 8-битовое целое число без знака.</summary>
      <param name="value">Логическое значение, которое необходимо преобразовать.</param>
      <returns>Число 1, если <paramref name="value" /> имеет значение <see langword="true" />; в противном случае — 0.</returns>
    </member>
    <member name="M:System.Convert.ToByte(System.Byte)">
      <summary>Возвращает заданное 8-битовое целое число без знака; фактическое преобразование не производится.</summary>
      <param name="value">Возвращаемое 8-разрядное целое число без знака.</param>
      <returns>
        <paramref name="value" /> возвращается без изменений.</returns>
    </member>
    <member name="M:System.Convert.ToByte(System.Char)">
      <summary>Преобразует значение заданного символа Юникода в эквивалентное 8-битовое целое число без знака.</summary>
      <param name="value">Знак Юникода, который необходимо преобразовать.</param>
      <returns>8-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> представляет число, которое больше <see cref="F:System.Byte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.DateTime)">
      <summary>При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Значение даты и времени для преобразования.</param>
      <returns>Данное преобразование не поддерживается. Возвращаемое значение отсутствует.</returns>
      <exception cref="T:System.InvalidCastException">Данное преобразование не поддерживается.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.Decimal)">
      <summary>Преобразует значение заданного десятичного числа в эквивалентное 8-битовое целое число без знака.</summary>
      <param name="value">Преобразуемое число.</param>
      <returns>Значение <paramref name="value" />, округленное до ближайшего 8-разрядного целого числа без знака. Если <paramref name="value" /> имеет среднее значение между двумя целыми числами, будет возвращено четное число; так, значение 4,5 преобразуется в 4, а 5,5 — в 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> больше <see cref="F:System.Byte.MaxValue" /> или меньше <see cref="F:System.Byte.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.Double)">
      <summary>Преобразует значение заданного числа с плавающей запятой двойной точности в эквивалентное 8-битовое целое число без знака.</summary>
      <param name="value">Число с плавающей запятой двойной точности, которое нужно преобразовать.</param>
      <returns>Значение <paramref name="value" />, округленное до ближайшего 8-разрядного целого числа без знака. Если <paramref name="value" /> имеет среднее значение между двумя целыми числами, будет возвращено четное число; так, значение 4,5 преобразуется в 4, а 5,5 — в 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> больше <see cref="F:System.Byte.MaxValue" /> или меньше <see cref="F:System.Byte.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.Int16)">
      <summary>Преобразует значение заданного 16-битового целого числа со знаком в эквивалентное 8-битовое целое число без знака.</summary>
      <param name="value">16-разрядное целое число со знаком для преобразования.</param>
      <returns>8-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">Значение <paramref name="value" /> меньше <see cref="F:System.Byte.MinValue" /> или больше <see cref="F:System.Byte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.Int32)">
      <summary>Преобразует значение заданного 32-битового целого числа со знаком в эквивалентное 8-битовое целое число без знака.</summary>
      <param name="value">32-разрядное целое число со знаком для преобразования.</param>
      <returns>8-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">Значение <paramref name="value" /> меньше <see cref="F:System.Byte.MinValue" /> или больше <see cref="F:System.Byte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.Int64)">
      <summary>Преобразует значение заданного 64-битового целого числа со знаком в эквивалентное 8-битовое целое число без знака.</summary>
      <param name="value">64-разрядное целое число со знаком для преобразования.</param>
      <returns>8-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">Значение <paramref name="value" /> меньше <see cref="F:System.Byte.MinValue" /> или больше <see cref="F:System.Byte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.Object)">
      <summary>Преобразует значение заданного объекта в 8-разрядное целое число без знака.</summary>
      <param name="value">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />, или значение <see langword="null" />.</param>
      <returns>8-разрядное целое число без знака, эквивалентное значению <paramref name="value" />, или нуль, если <paramref name="value" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> не является форматом свойства для значения <see cref="T:System.Byte" />.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> не реализует <see cref="T:System.IConvertible" />.  

или - 
Преобразование из <paramref name="value" /> в тип <see cref="T:System.Byte" /> не поддерживается.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Byte.MinValue" /> или больше <see cref="F:System.Byte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.Object,System.IFormatProvider)">
      <summary>Преобразует значение заданного объекта в эквивалентное 8-разрядное целое число без знака, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</summary>
      <param name="value">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />.</param>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <returns>8-разрядное целое число без знака, эквивалентное значению <paramref name="value" />, или нуль, если <paramref name="value" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> не является форматом свойства для значения <see cref="T:System.Byte" />.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> не реализует <see cref="T:System.IConvertible" />.  

или - 
Преобразование из <paramref name="value" /> в тип <see cref="T:System.Byte" /> не поддерживается.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Byte.MinValue" /> или больше <see cref="F:System.Byte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.SByte)">
      <summary>Преобразует значение заданного 8-битового целого числа со знаком в эквивалентное 8-битовое целое число без знака.</summary>
      <param name="value">8-разрядное целое число со знаком для преобразования.</param>
      <returns>8-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">Значение <paramref name="value" /> меньше <see cref="F:System.Byte.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.Single)">
      <summary>Преобразует значение заданного числа с плавающей запятой одиночной точности в эквивалентное 8-битовое целое число без знака.</summary>
      <param name="value">Число одиночной точности с плавающей запятой.</param>
      <returns>Значение <paramref name="value" />, округленное до ближайшего 8-разрядного целого числа без знака. Если <paramref name="value" /> имеет среднее значение между двумя целыми числами, будет возвращено четное число; так, значение 4,5 преобразуется в 4, а 5,5 — в 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> больше <see cref="F:System.Byte.MaxValue" /> или меньше <see cref="F:System.Byte.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.String)">
      <summary>Преобразует заданное строковое представление числа в эквивалентное 8-битовое целое число без знака.</summary>
      <param name="value">Строка, содержащая преобразуемое число.</param>
      <returns>8-разрядное целое число без знака, эквивалентное значению <paramref name="value" />, или нуль, если <paramref name="value" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> не состоит из необязательного знака, за которым следует последовательность цифр (0–9).</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Byte.MinValue" /> или больше <see cref="F:System.Byte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.String,System.IFormatProvider)">
      <summary>Преобразует заданное строковое представление числа в эквивалентное 8-разрядное целое число без знака, учитывая сведения об особенностях форматирования, связанных с языком и региональными параметрами.</summary>
      <param name="value">Строка, содержащая преобразуемое число.</param>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <returns>8-разрядное целое число без знака, эквивалентное значению <paramref name="value" />, или нуль, если <paramref name="value" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> не состоит из необязательного знака, за которым следует последовательность цифр (0–9).</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Byte.MinValue" /> или больше <see cref="F:System.Byte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.String,System.Int32)">
      <summary>Преобразует строковое представление числа с указанным основанием системы счисления в эквивалентное ему 8-битовое целое число без знака.</summary>
      <param name="value">Строка, содержащая преобразуемое число.</param>
      <param name="fromBase">Основание системы счисления, используемой для представления числа, заданного в параметре <paramref name="value" />, равное 2, 8, 10 или 16.</param>
      <returns>8-разрядное целое число без знака, которое эквивалентно значению параметра <paramref name="value" />, или 0 (нуль), если <paramref name="value" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="fromBase" /> не равно 2, 8, 10 или 16.  

или - 
Значение <paramref name="value" />, представляющее недесятичное число без знака, использовано со знаком минус.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Свойство <paramref name="value" /> имеет значение <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> содержит символ, который не является допустимой цифрой в основании, заданном параметром <paramref name="fromBase" />. Сообщение об исключении указывает, что отсутствуют цифры для преобразования, если первый символ в <paramref name="value" /> недопустим; в противном случае сообщение указывает, что <paramref name="value" /> содержит недопустимые конечные символы.</exception>
      <exception cref="T:System.OverflowException">Параметру <paramref name="value" />, представляющему десятичное число без знака, предшествует знак минус.  

или - 
Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Byte.MinValue" /> или больше <see cref="F:System.Byte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.UInt16)">
      <summary>Преобразует значение заданного 16-битового целого числа без знака в эквивалентное 8-битовое целое число без знака.</summary>
      <param name="value">16-разрядное целое число без знака для преобразования.</param>
      <returns>8-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">Значение <paramref name="value" /> больше значения <see cref="F:System.Byte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.UInt32)">
      <summary>Преобразует значение заданного 32-битового целого числа без знака в эквивалентное 8-битовое целое число без знака.</summary>
      <param name="value">32-разрядное целое число без знака для преобразования.</param>
      <returns>8-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">Значение <paramref name="value" /> больше значения <see cref="F:System.Byte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.UInt64)">
      <summary>Преобразует значение заданного 64-разрядного целого числа без знака в эквивалентное 8-разрядное целое число без знака.</summary>
      <param name="value">64-разрядное целое число без знака для преобразования.</param>
      <returns>8-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">Значение <paramref name="value" /> больше значения <see cref="F:System.Byte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.Boolean)">
      <summary>При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Логическое значение, которое необходимо преобразовать.</param>
      <returns>Данное преобразование не поддерживается. Возвращаемое значение отсутствует.</returns>
      <exception cref="T:System.InvalidCastException">Данное преобразование не поддерживается.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.Byte)">
      <summary>Преобразует значение заданного 8-разрядного целого числа без знака в эквивалентный символ Юникода.</summary>
      <param name="value">8-разрядное целое число без знака для преобразования.</param>
      <returns>Знак Юникода, который эквивалентен значению <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToChar(System.Char)">
      <summary>Возвращает заданное значение символа Юникода; фактическое преобразование не производится.</summary>
      <param name="value">Возвращаемый знак Юникода.</param>
      <returns>
        <paramref name="value" /> возвращается без изменений.</returns>
    </member>
    <member name="M:System.Convert.ToChar(System.DateTime)">
      <summary>При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Значение даты и времени для преобразования.</param>
      <returns>Данное преобразование не поддерживается. Возвращаемое значение отсутствует.</returns>
      <exception cref="T:System.InvalidCastException">Данное преобразование не поддерживается.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.Decimal)">
      <summary>При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Десятичное число для преобразования.</param>
      <returns>Данное преобразование не поддерживается. Возвращаемое значение отсутствует.</returns>
      <exception cref="T:System.InvalidCastException">Данное преобразование не поддерживается.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.Double)">
      <summary>При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Число с плавающей запятой двойной точности, которое нужно преобразовать.</param>
      <returns>Данное преобразование не поддерживается. Возвращаемое значение отсутствует.</returns>
      <exception cref="T:System.InvalidCastException">Данное преобразование не поддерживается.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.Int16)">
      <summary>Преобразует значение заданного 16-битового целого числа со знаком в эквивалентный символ Юникода.</summary>
      <param name="value">16-разрядное целое число со знаком для преобразования.</param>
      <returns>Знак Юникода, который эквивалентен значению <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">Значение <paramref name="value" /> меньше <see cref="F:System.Char.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.Int32)">
      <summary>Преобразует значение заданного 32-битового целого числа со знаком в эквивалентный символ Юникода.</summary>
      <param name="value">32-разрядное целое число со знаком для преобразования.</param>
      <returns>Знак Юникода, который эквивалентен значению <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">Значение <paramref name="value" /> меньше <see cref="F:System.Char.MinValue" /> или больше <see cref="F:System.Char.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.Int64)">
      <summary>Преобразует значение заданного 64-битового целого числа со знаком в эквивалентный символ Юникода.</summary>
      <param name="value">64-разрядное целое число со знаком для преобразования.</param>
      <returns>Знак Юникода, который эквивалентен значению <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">Значение <paramref name="value" /> меньше <see cref="F:System.Char.MinValue" /> или больше <see cref="F:System.Char.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.Object)">
      <summary>Преобразует значение заданного объекта в знак Юникода.</summary>
      <param name="value">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />.</param>
      <returns>Знак Юникода, который эквивалентен значению, или <see cref="F:System.Char.MinValue" />, если <paramref name="value" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="value" /> является пустой строкой.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> не реализует интерфейс <see cref="T:System.IConvertible" />.  

или - 
Преобразование <paramref name="value" /> в <see cref="T:System.Char" /> не поддерживается.</exception>
      <exception cref="T:System.OverflowException">Значение <paramref name="value" /> меньше <see cref="F:System.Char.MinValue" /> или больше <see cref="F:System.Char.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.Object,System.IFormatProvider)">
      <summary>Преобразует значение заданного объекта в эквивалентный знак Юникода, используя указанные сведения о форматировании, связанные с языком и региональными параметрами.</summary>
      <param name="value">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />.</param>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <returns>Знак Юникода, который эквивалентен <paramref name="value" />, или <see cref="F:System.Char.MinValue" />, если <paramref name="value" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="value" /> является пустой строкой.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> не реализует интерфейс <see cref="T:System.IConvertible" />.  

или - 
Преобразование <paramref name="value" /> в <see cref="T:System.Char" /> не поддерживается.</exception>
      <exception cref="T:System.OverflowException">Значение <paramref name="value" /> меньше <see cref="F:System.Char.MinValue" /> или больше <see cref="F:System.Char.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.SByte)">
      <summary>Преобразует значение заданного 8-битового целого числа со знаком в эквивалентный символ Юникода.</summary>
      <param name="value">8-разрядное целое число со знаком для преобразования.</param>
      <returns>Знак Юникода, который эквивалентен значению <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">Значение <paramref name="value" /> меньше <see cref="F:System.Char.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.Single)">
      <summary>При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Число с плавающей запятой одиночной точности, которое нужно преобразовать.</param>
      <returns>Данное преобразование не поддерживается. Возвращаемое значение отсутствует.</returns>
      <exception cref="T:System.InvalidCastException">Данное преобразование не поддерживается.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.String)">
      <summary>Преобразует первый знак указанной строки в знак Юникода.</summary>
      <param name="value">Строка длиной в 1 знак.</param>
      <returns>Знак Юникода, эквивалентный первому и единственному знаку в <paramref name="value" />.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="value" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">Длина <paramref name="value" /> не равна 1.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.String,System.IFormatProvider)">
      <summary>Преобразует первый знак заданной строки в знак Юникода, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</summary>
      <param name="value">Строка длиной в 1 знак или <see langword="null" />.</param>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров. Этот параметр не учитывается.</param>
      <returns>Знак Юникода, эквивалентный первому и единственному знаку в <paramref name="value" />.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="value" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">Длина <paramref name="value" /> не равна 1.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.UInt16)">
      <summary>Преобразует значение заданного 16-разрядного целого числа без знака в эквивалентный символ Юникода.</summary>
      <param name="value">16-разрядное целое число без знака для преобразования.</param>
      <returns>Знак Юникода, который эквивалентен значению <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToChar(System.UInt32)">
      <summary>Преобразует значение заданного 32-разрядного целого числа без знака в эквивалентный символ Юникода.</summary>
      <param name="value">32-разрядное целое число без знака для преобразования.</param>
      <returns>Знак Юникода, который эквивалентен значению <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">Значение <paramref name="value" /> больше значения <see cref="F:System.Char.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.UInt64)">
      <summary>Преобразует значение заданного 64-разрядного целого числа без знака в эквивалентный символ Юникода.</summary>
      <param name="value">64-разрядное целое число без знака для преобразования.</param>
      <returns>Знак Юникода, который эквивалентен значению <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">Значение <paramref name="value" /> больше значения <see cref="F:System.Char.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.Boolean)">
      <summary>При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Логическое значение, которое необходимо преобразовать.</param>
      <returns>Данное преобразование не поддерживается. Возвращаемое значение отсутствует.</returns>
      <exception cref="T:System.InvalidCastException">Данное преобразование не поддерживается.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.Byte)">
      <summary>При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">8-разрядное целое число без знака для преобразования.</param>
      <returns>Данное преобразование не поддерживается. Возвращаемое значение отсутствует.</returns>
      <exception cref="T:System.InvalidCastException">Данное преобразование не поддерживается.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.Char)">
      <summary>При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Знак Юникода, который необходимо преобразовать.</param>
      <returns>Данное преобразование не поддерживается. Возвращаемое значение отсутствует.</returns>
      <exception cref="T:System.InvalidCastException">Данное преобразование не поддерживается.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.DateTime)">
      <summary>Возвращает заданный объект <see cref="T:System.DateTime" />; фактическое преобразование не производится.</summary>
      <param name="value">Значение даты и времени.</param>
      <returns>
        <paramref name="value" /> возвращается без изменений.</returns>
    </member>
    <member name="M:System.Convert.ToDateTime(System.Decimal)">
      <summary>При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Преобразуемое число.</param>
      <returns>Данное преобразование не поддерживается. Возвращаемое значение отсутствует.</returns>
      <exception cref="T:System.InvalidCastException">Данное преобразование не поддерживается.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.Double)">
      <summary>При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Значение с плавающей запятой двойной точности, которое нужно преобразовать.</param>
      <returns>Данное преобразование не поддерживается. Возвращаемое значение отсутствует.</returns>
      <exception cref="T:System.InvalidCastException">Данное преобразование не поддерживается.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.Int16)">
      <summary>При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">16-разрядное целое число со знаком для преобразования.</param>
      <returns>Данное преобразование не поддерживается. Возвращаемое значение отсутствует.</returns>
      <exception cref="T:System.InvalidCastException">Данное преобразование не поддерживается.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.Int32)">
      <summary>При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">32-разрядное целое число со знаком для преобразования.</param>
      <returns>Данное преобразование не поддерживается. Возвращаемое значение отсутствует.</returns>
      <exception cref="T:System.InvalidCastException">Данное преобразование не поддерживается.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.Int64)">
      <summary>При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">64-разрядное целое число со знаком для преобразования.</param>
      <returns>Данное преобразование не поддерживается. Возвращаемое значение отсутствует.</returns>
      <exception cref="T:System.InvalidCastException">Данное преобразование не поддерживается.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.Object)">
      <summary>Преобразует значение указанного объекта в объект <see cref="T:System.DateTime" />.</summary>
      <param name="value">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />, или значение <see langword="null" />.</param>
      <returns>Дата и время, эквивалентные значению <paramref name="value" />, или дата и время, эквивалентные значению <see cref="F:System.DateTime.MinValue" />, если значение <paramref name="value" /> равно <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> не является допустимым значением даты и времени.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> не реализует интерфейс <see cref="T:System.IConvertible" />.  

или - 
Преобразование не поддерживается.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.Object,System.IFormatProvider)">
      <summary>Преобразует значение заданного объекта в объект <see cref="T:System.DateTime" />, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</summary>
      <param name="value">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />.</param>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <returns>Дата и время, эквивалентные значению <paramref name="value" />, или дата и время, эквивалентные значению <see cref="F:System.DateTime.MinValue" />, если значение <paramref name="value" /> равно <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> не является допустимым значением даты и времени.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> не реализует интерфейс <see cref="T:System.IConvertible" />.  
-или- 
Преобразование не поддерживается.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.SByte)">
      <summary>При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">8-разрядное целое число со знаком для преобразования.</param>
      <returns>Данное преобразование не поддерживается. Возвращаемое значение отсутствует.</returns>
      <exception cref="T:System.InvalidCastException">Данное преобразование не поддерживается.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.Single)">
      <summary>При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Значение с плавающей запятой одиночной точности, которое нужно преобразовать.</param>
      <returns>Данное преобразование не поддерживается. Возвращаемое значение отсутствует.</returns>
      <exception cref="T:System.InvalidCastException">Данное преобразование не поддерживается.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.String)">
      <summary>Преобразует заданное строковое представление даты и времени в эквивалентное значение даты и времени.</summary>
      <param name="value">Строковое представление даты и времени.</param>
      <returns>Дата и время, эквивалентные значению <paramref name="value" />, или дата и время, эквивалентные значению <see cref="F:System.DateTime.MinValue" />, если значение <paramref name="value" /> равно <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> является неправильно отформатированной строкой даты и времени.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.String,System.IFormatProvider)">
      <summary>Преобразует заданное строковое представление числа в эквивалентное значение даты и времени, учитывая указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</summary>
      <param name="value">Строка, содержащая дату и время, которые нужно преобразовать.</param>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <returns>Дата и время, эквивалентные значению <paramref name="value" />, или дата и время, эквивалентные значению <see cref="F:System.DateTime.MinValue" />, если значение <paramref name="value" /> равно <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> является неправильно отформатированной строкой даты и времени.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.UInt16)">
      <summary>При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">16-разрядное целое число без знака для преобразования.</param>
      <returns>Данное преобразование не поддерживается. Возвращаемое значение отсутствует.</returns>
      <exception cref="T:System.InvalidCastException">Данное преобразование не поддерживается.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.UInt32)">
      <summary>При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">32-разрядное целое число без знака для преобразования.</param>
      <returns>Данное преобразование не поддерживается. Возвращаемое значение отсутствует.</returns>
      <exception cref="T:System.InvalidCastException">Данное преобразование не поддерживается.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.UInt64)">
      <summary>При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">64-разрядное целое число без знака для преобразования.</param>
      <returns>Данное преобразование не поддерживается. Возвращаемое значение отсутствует.</returns>
      <exception cref="T:System.InvalidCastException">Данное преобразование не поддерживается.</exception>
    </member>
    <member name="M:System.Convert.ToDecimal(System.Boolean)">
      <summary>Преобразует заданное логическое значение в эквивалентное десятичное число.</summary>
      <param name="value">Логическое значение, которое необходимо преобразовать.</param>
      <returns>Число 1, если <paramref name="value" /> имеет значение <see langword="true" />; в противном случае — 0.</returns>
    </member>
    <member name="M:System.Convert.ToDecimal(System.Byte)">
      <summary>Преобразует значение заданного 8-разрядного целого число без знака в эквивалентное десятичное число.</summary>
      <param name="value">8-разрядное целое число без знака для преобразования.</param>
      <returns>Десятичное число, которое эквивалентно значению <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToDecimal(System.Char)">
      <summary>При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Знак Юникода, который необходимо преобразовать.</param>
      <returns>Данное преобразование не поддерживается. Возвращаемое значение отсутствует.</returns>
      <exception cref="T:System.InvalidCastException">Данное преобразование не поддерживается.</exception>
    </member>
    <member name="M:System.Convert.ToDecimal(System.DateTime)">
      <summary>При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Значение даты и времени для преобразования.</param>
      <returns>Данное преобразование не поддерживается. Возвращаемое значение отсутствует.</returns>
      <exception cref="T:System.InvalidCastException">Данное преобразование не поддерживается.</exception>
    </member>
    <member name="M:System.Convert.ToDecimal(System.Decimal)">
      <summary>Возвращает заданное десятичное число; фактическое преобразование не производится.</summary>
      <param name="value">Десятичное число.</param>
      <returns>
        <paramref name="value" /> возвращается без изменений.</returns>
    </member>
    <member name="M:System.Convert.ToDecimal(System.Double)">
      <summary>Преобразует значение заданного числа с плавающей запятой двойной точности в эквивалентное десятичное число.</summary>
      <param name="value">Число с плавающей запятой двойной точности, которое нужно преобразовать.</param>
      <returns>Десятичное число, которое эквивалентно значению <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> больше <see cref="F:System.Decimal.MaxValue" /> или меньше <see cref="F:System.Decimal.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToDecimal(System.Int16)">
      <summary>Преобразует значение заданного 16-разрядного знакового целого числа в эквивалентное десятичное число.</summary>
      <param name="value">16-разрядное целое число со знаком для преобразования.</param>
      <returns>Десятичное число, которое эквивалентно значению <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToDecimal(System.Int32)">
      <summary>Преобразует значение заданного 32-разрядного знакового целого числа в эквивалентное десятичное число.</summary>
      <param name="value">32-разрядное целое число со знаком для преобразования.</param>
      <returns>Десятичное число, которое эквивалентно значению <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToDecimal(System.Int64)">
      <summary>Преобразует значение заданного 64-разрядного знакового целого числа в эквивалентное десятичное число.</summary>
      <param name="value">64-разрядное целое число со знаком для преобразования.</param>
      <returns>Десятичное число, которое эквивалентно значению <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToDecimal(System.Object)">
      <summary>Преобразует значение заданного объекта в эквивалентное десятичное число.</summary>
      <param name="value">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />, или значение <see langword="null" />.</param>
      <returns>Десятичное число, эквивалентное <paramref name="value" />, или 0 (нуль), если <paramref name="value" /> равняется <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> имеет неправильный формат для типа <see cref="T:System.Decimal" />.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> не реализует интерфейс <see cref="T:System.IConvertible" />.  

или - 
Преобразование не поддерживается.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Decimal.MinValue" /> или больше <see cref="F:System.Decimal.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToDecimal(System.Object,System.IFormatProvider)">
      <summary>Преобразует значение заданного объекта в эквивалентное десятичное число, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</summary>
      <param name="value">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />.</param>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <returns>Десятичное число, эквивалентное <paramref name="value" />, или 0 (нуль), если <paramref name="value" /> равняется <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> имеет неправильный формат для типа <see cref="T:System.Decimal" />.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> не реализует интерфейс <see cref="T:System.IConvertible" />.  
-или- 
Преобразование не поддерживается.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Decimal.MinValue" /> или больше <see cref="F:System.Decimal.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToDecimal(System.SByte)">
      <summary>Преобразует значение заданного 8-разрядного знакового целого числа в эквивалентное десятичное число.</summary>
      <param name="value">8-разрядное целое число со знаком для преобразования.</param>
      <returns>Десятичное число, которое эквивалентно значению <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToDecimal(System.Single)">
      <summary>Преобразует значение заданного числа с плавающей запятой одиночной точности в эквивалентное десятичное число.</summary>
      <param name="value">Число с плавающей запятой одиночной точности, которое нужно преобразовать.</param>
      <returns>Десятичное число, которое эквивалентно значению <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> больше <see cref="F:System.Decimal.MaxValue" /> или меньше <see cref="F:System.Decimal.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToDecimal(System.String)">
      <summary>Преобразует заданное строковое представление числа в эквивалентное десятичное число.</summary>
      <param name="value">Строка, содержащая преобразуемое число.</param>
      <returns>Десятичное число, эквивалентное числу <paramref name="value" />, или 0 (нуль), если <paramref name="value" /> равняется <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> не является числом в допустимом формате.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Decimal.MinValue" /> или больше <see cref="F:System.Decimal.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToDecimal(System.String,System.IFormatProvider)">
      <summary>Преобразует заданное строковое представление числа в эквивалентное десятичное число, учитывая указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</summary>
      <param name="value">Строка, содержащая преобразуемое число.</param>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <returns>Десятичное число, эквивалентное числу <paramref name="value" />, или 0 (нуль), если <paramref name="value" /> равняется <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> не является числом в допустимом формате.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Decimal.MinValue" /> или больше <see cref="F:System.Decimal.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToDecimal(System.UInt16)">
      <summary>Преобразует значение заданного 16-разрядного целого числа без знака в эквивалентное десятичное число.</summary>
      <param name="value">16-разрядное целое число без знака для преобразования.</param>
      <returns>Десятичное число, которое эквивалентно значению <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToDecimal(System.UInt32)">
      <summary>Преобразует значение заданного 32-разрядного целого числа без знака в эквивалентное десятичное число.</summary>
      <param name="value">32-разрядное целое число без знака для преобразования.</param>
      <returns>Десятичное число, которое эквивалентно значению <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToDecimal(System.UInt64)">
      <summary>Преобразует значение заданного 64-разрядного целого числа без знака в эквивалентное десятичное число.</summary>
      <param name="value">64-разрядное целое число без знака для преобразования.</param>
      <returns>Десятичное число, которое эквивалентно значению <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToDouble(System.Boolean)">
      <summary>Преобразует заданное логическое значение в эквивалентное число с плавающей запятой двойной точности.</summary>
      <param name="value">Логическое значение, которое необходимо преобразовать.</param>
      <returns>Число 1, если <paramref name="value" /> имеет значение <see langword="true" />; в противном случае — 0.</returns>
    </member>
    <member name="M:System.Convert.ToDouble(System.Byte)">
      <summary>Преобразует значение заданного 8-разрядного целого числа без знака в эквивалентное число с плавающей запятой двойной точности.</summary>
      <param name="value">8-разрядное целое число без знака для преобразования.</param>
      <returns>Число с плавающей запятой двойной точности, которое эквивалентно значению <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToDouble(System.Char)">
      <summary>При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Знак Юникода, который необходимо преобразовать.</param>
      <returns>Данное преобразование не поддерживается. Возвращаемое значение отсутствует.</returns>
      <exception cref="T:System.InvalidCastException">Данное преобразование не поддерживается.</exception>
    </member>
    <member name="M:System.Convert.ToDouble(System.DateTime)">
      <summary>При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Значение даты и времени для преобразования.</param>
      <returns>Данное преобразование не поддерживается. Возвращаемое значение отсутствует.</returns>
      <exception cref="T:System.InvalidCastException">Данное преобразование не поддерживается.</exception>
    </member>
    <member name="M:System.Convert.ToDouble(System.Decimal)">
      <summary>Преобразует значение заданного десятичного числа в эквивалентное число с плавающей запятой двойной точности.</summary>
      <param name="value">Десятичное число для преобразования.</param>
      <returns>Число с плавающей запятой двойной точности, которое эквивалентно значению <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToDouble(System.Double)">
      <summary>Возвращает заданное число с плавающей запятой двойной точности; фактическое преобразование не производится.</summary>
      <param name="value">Возвращаемое число с плавающей запятой двойной точности.</param>
      <returns>
        <paramref name="value" /> возвращается без изменений.</returns>
    </member>
    <member name="M:System.Convert.ToDouble(System.Int16)">
      <summary>Преобразует значение заданного 16-разрядного знакового целого числа в эквивалентное число с плавающей запятой двойной точности.</summary>
      <param name="value">16-разрядное целое число со знаком для преобразования.</param>
      <returns>Число с плавающей запятой двойной точности, эквивалентное значению <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToDouble(System.Int32)">
      <summary>Преобразует значение заданного 32-разрядного знакового целого числа в эквивалентное число с плавающей запятой двойной точности.</summary>
      <param name="value">32-разрядное целое число со знаком для преобразования.</param>
      <returns>Число с плавающей запятой двойной точности, которое эквивалентно значению <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToDouble(System.Int64)">
      <summary>Преобразует значение заданного 64-разрядного знакового целого числа в эквивалентное число с плавающей запятой двойной точности.</summary>
      <param name="value">64-разрядное целое число со знаком для преобразования.</param>
      <returns>Число с плавающей запятой двойной точности, которое эквивалентно значению <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToDouble(System.Object)">
      <summary>Преобразует значение заданного объекта в число с плавающей запятой двойной точности.</summary>
      <param name="value">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />, или значение <see langword="null" />.</param>
      <returns>Число с плавающей запятой двойной точности, эквивалентное значению <paramref name="value" />, или нуль, если <paramref name="value" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> имеет неправильный формат для типа <see cref="T:System.Double" />.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> не реализует интерфейс <see cref="T:System.IConvertible" />.  
-или- 
Преобразование не поддерживается.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Double.MinValue" /> или больше <see cref="F:System.Double.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToDouble(System.Object,System.IFormatProvider)">
      <summary>Преобразует значение заданного объекта в число с плавающей запятой двойной точности, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</summary>
      <param name="value">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />.</param>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <returns>Число с плавающей запятой двойной точности, эквивалентное значению <paramref name="value" />, или нуль, если <paramref name="value" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> имеет неправильный формат для типа <see cref="T:System.Double" />.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> не реализует интерфейс <see cref="T:System.IConvertible" />.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Double.MinValue" /> или больше <see cref="F:System.Double.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToDouble(System.SByte)">
      <summary>Преобразует значение заданного 8-разрядного знакового целого числа в эквивалентное число с плавающей запятой двойной точности.</summary>
      <param name="value">8-разрядное целое число со знаком для преобразования.</param>
      <returns>8-разрядное целое число со знаком, которое эквивалентно значению <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToDouble(System.Single)">
      <summary>Преобразует значение заданного числа с плавающей запятой одинарной точности в эквивалентное число с плавающей запятой двойной точности.</summary>
      <param name="value">Число с плавающей запятой одиночной точности.</param>
      <returns>Число с плавающей запятой двойной точности, которое эквивалентно значению <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToDouble(System.String)">
      <summary>Преобразует заданное строковое представление числа в эквивалентное число с плавающей запятой двойной точности.</summary>
      <param name="value">Строка, содержащая преобразуемое число.</param>
      <returns>Число с плавающей запятой двойной точности, эквивалентное числу <paramref name="value" />, или 0 (нуль), если <paramref name="value" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> не является числом в допустимом формате.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Double.MinValue" /> или больше <see cref="F:System.Double.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToDouble(System.String,System.IFormatProvider)">
      <summary>Преобразует заданное строковое представление числа в эквивалентное число с плавающей запятой двойной точности, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</summary>
      <param name="value">Строка, содержащая преобразуемое число.</param>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <returns>Число с плавающей запятой двойной точности, эквивалентное числу <paramref name="value" />, или 0 (нуль), если <paramref name="value" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> не является числом в допустимом формате.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Double.MinValue" /> или больше <see cref="F:System.Double.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToDouble(System.UInt16)">
      <summary>Преобразует значение заданного 16-разрядного целого числа без знака в эквивалентное число с плавающей запятой двойной точности.</summary>
      <param name="value">16-разрядное целое число без знака для преобразования.</param>
      <returns>Число с плавающей запятой двойной точности, которое эквивалентно значению <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToDouble(System.UInt32)">
      <summary>Преобразует значение заданного 32-разрядного целого числа без знака в эквивалентное число двойной точности с плавающей запятой.</summary>
      <param name="value">32-разрядное целое число без знака для преобразования.</param>
      <returns>Число с плавающей запятой двойной точности, которое эквивалентно значению <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToDouble(System.UInt64)">
      <summary>Преобразует значение заданного 64-разрядного целого числа без знака в эквивалентное число двойной точности с плавающей запятой.</summary>
      <param name="value">64-разрядное целое число без знака для преобразования.</param>
      <returns>Число с плавающей запятой двойной точности, которое эквивалентно значению <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToInt16(System.Boolean)">
      <summary>Преобразует заданное логическое значение в эквивалентное 16-битовое целое число со знаком.</summary>
      <param name="value">Логическое значение, которое необходимо преобразовать.</param>
      <returns>Число 1, если <paramref name="value" /> имеет значение <see langword="true" />; в противном случае — 0.</returns>
    </member>
    <member name="M:System.Convert.ToInt16(System.Byte)">
      <summary>Преобразует значение заданного 8-битового целого числа без знака в эквивалентное 16-битовое целое число со знаком.</summary>
      <param name="value">8-разрядное целое число без знака для преобразования.</param>
      <returns>16-разрядное целое число со знаком, которое эквивалентно значению <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToInt16(System.Char)">
      <summary>Преобразует значение заданного символа Юникода в эквивалентное 16-битовое целое число со знаком.</summary>
      <param name="value">Знак Юникода, который необходимо преобразовать.</param>
      <returns>16-разрядное целое число со знаком, которое эквивалентно значению <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">Значение <paramref name="value" /> больше значения <see cref="F:System.Int16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt16(System.DateTime)">
      <summary>При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Значение даты и времени для преобразования.</param>
      <returns>Данное преобразование не поддерживается. Возвращаемое значение отсутствует.</returns>
      <exception cref="T:System.InvalidCastException">Данное преобразование не поддерживается.</exception>
    </member>
    <member name="M:System.Convert.ToInt16(System.Decimal)">
      <summary>Преобразует значение заданного десятичного числа в эквивалентное 16-битовое целое число со знаком.</summary>
      <param name="value">Десятичное число для преобразования.</param>
      <returns>Значение <paramref name="value" />, округленное до ближайшего 16-разрядного целого числа со знаком. Если <paramref name="value" /> имеет среднее значение между двумя целыми числами, будет возвращено четное число; так, значение 4,5 преобразуется в 4, а 5,5 — в 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> больше <see cref="F:System.Int16.MaxValue" /> или меньше <see cref="F:System.Int16.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt16(System.Double)">
      <summary>Преобразует значение заданного числа с плавающей запятой двойной точности в эквивалентное 16-битовое целое число со знаком.</summary>
      <param name="value">Число с плавающей запятой двойной точности, которое нужно преобразовать.</param>
      <returns>Значение <paramref name="value" />, округленное до ближайшего 16-разрядного целого числа со знаком. Если <paramref name="value" /> имеет среднее значение между двумя целыми числами, будет возвращено четное число; так, значение 4,5 преобразуется в 4, а 5,5 — в 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> больше <see cref="F:System.Int16.MaxValue" /> или меньше <see cref="F:System.Int16.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt16(System.Int16)">
      <summary>Возвращает заданное 16-битовое целое число со знаком; фактическое преобразование не производится.</summary>
      <param name="value">Возвращаемое 16-разрядное целое число со знаком.</param>
      <returns>
        <paramref name="value" /> возвращается без изменений.</returns>
    </member>
    <member name="M:System.Convert.ToInt16(System.Int32)">
      <summary>Преобразует значение заданного 32-битового целого числа со знаком в эквивалентное 16-битовое целое число со знаком.</summary>
      <param name="value">32-разрядное целое число со знаком для преобразования.</param>
      <returns>16-разрядное целое число со знаком, эквивалентное <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> больше <see cref="F:System.Int16.MaxValue" /> или меньше <see cref="F:System.Int16.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt16(System.Int64)">
      <summary>Преобразует значение заданного 64-битового целого числа со знаком в эквивалентное 16-битовое целое число со знаком.</summary>
      <param name="value">64-разрядное целое число со знаком для преобразования.</param>
      <returns>16-разрядное целое число со знаком, которое эквивалентно значению <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> больше <see cref="F:System.Int16.MaxValue" /> или меньше <see cref="F:System.Int16.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt16(System.Object)">
      <summary>Преобразует значение заданного объекта в 16-битовое целое число со знаком.</summary>
      <param name="value">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />, или значение <see langword="null" />.</param>
      <returns>16-разрядное знаковое целое число, эквивалентное значению <paramref name="value" />, или нуль, если <paramref name="value" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> имеет неправильный формат для типа <see cref="T:System.Int16" />.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> не реализует интерфейс <see cref="T:System.IConvertible" />.  

или - 
Преобразование не поддерживается.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Int16.MinValue" /> или больше <see cref="F:System.Int16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt16(System.Object,System.IFormatProvider)">
      <summary>Преобразует значение заданного объекта в эквивалентное 16-битовое целое число со знаком, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</summary>
      <param name="value">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />.</param>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <returns>16-разрядное знаковое целое число, эквивалентное значению <paramref name="value" />, или нуль, если <paramref name="value" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> имеет неправильный формат для типа <see cref="T:System.Int16" />.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> не реализует <see cref="T:System.IConvertible" />.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Int16.MinValue" /> или больше <see cref="F:System.Int16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt16(System.SByte)">
      <summary>Преобразует значение заданного 8-битового целого числа со знаком в эквивалентное 16-битовое целое число со знаком.</summary>
      <param name="value">8-разрядное целое число со знаком для преобразования.</param>
      <returns>8-разрядное знаковое целое число, которое эквивалентно значению <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToInt16(System.Single)">
      <summary>Преобразует значение заданного числа с плавающей запятой одиночной точности в эквивалентное 16-битовое целое число со знаком.</summary>
      <param name="value">Число с плавающей запятой одиночной точности, которое нужно преобразовать.</param>
      <returns>Значение <paramref name="value" />, округленное до ближайшего 16-разрядного целого числа со знаком. Если <paramref name="value" /> имеет среднее значение между двумя целыми числами, будет возвращено четное число; так, значение 4,5 преобразуется в 4, а 5,5 — в 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> больше <see cref="F:System.Int16.MaxValue" /> или меньше <see cref="F:System.Int16.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt16(System.String)">
      <summary>Преобразует заданное строковое представление числа в эквивалентное 16-битовое целое число со знаком.</summary>
      <param name="value">Строка, содержащая преобразуемое число.</param>
      <returns>16-разрядное знаковое целое число, которое эквивалентно значению параметра <paramref name="value" />, или 0 (нуль), если <paramref name="value" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> не состоит из необязательного знака, за которым следует последовательность цифр (0–9).</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Int16.MinValue" /> или больше <see cref="F:System.Int16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt16(System.String,System.IFormatProvider)">
      <summary>Преобразует заданное строковое представление числа в эквивалентное 16-битовое целое число со знаком, учитывая указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</summary>
      <param name="value">Строка, содержащая преобразуемое число.</param>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <returns>16-разрядное знаковое целое число, которое эквивалентно значению параметра <paramref name="value" />, или 0 (нуль), если <paramref name="value" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> не состоит из необязательного знака, за которым следует последовательность цифр (0–9).</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Int16.MinValue" /> или больше <see cref="F:System.Int16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt16(System.String,System.Int32)">
      <summary>Преобразует строковое представление числа с указанным основанием системы счисления в эквивалентное ему 16-битовое целое число со знаком.</summary>
      <param name="value">Строка, содержащая преобразуемое число.</param>
      <param name="fromBase">Основание системы счисления, используемой для представления числа, заданного в параметре <paramref name="value" />, равное 2, 8, 10 или 16.</param>
      <returns>16-разрядное знаковое целое число, которое эквивалентно значению параметра <paramref name="value" />, или 0 (нуль), если <paramref name="value" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="fromBase" /> не равно 2, 8, 10 или 16.  

или - 
Значению <paramref name="value" />, представляющему недесятичное число со знаком, предшествует отрицательный знак.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> — <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> содержит символ, который не является допустимой цифрой в основании, заданном параметром <paramref name="fromBase" />. Сообщение об исключении указывает, что отсутствуют цифры для преобразования, если первый символ в <paramref name="value" /> недопустим; в противном случае сообщение указывает, что <paramref name="value" /> содержит недопустимые конечные символы.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" />, представляющему число со знаком, не основанное на десятеричной системе счисления, предшествует знак минус.  
-или- 
 Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Int16.MinValue" /> или больше <see cref="F:System.Int16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt16(System.UInt16)">
      <summary>Преобразует значение заданного 16-битового целого числа без знака в эквивалентное 16-битовое целое число со знаком.</summary>
      <param name="value">16-разрядное целое число без знака для преобразования.</param>
      <returns>16-разрядное целое число со знаком, которое эквивалентно значению <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">Значение <paramref name="value" /> больше значения <see cref="F:System.Int16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt16(System.UInt32)">
      <summary>Преобразует значение заданного 32-битового целого числа без знака в эквивалентное 16-битовое целое число со знаком.</summary>
      <param name="value">32-разрядное целое число без знака для преобразования.</param>
      <returns>16-разрядное целое число со знаком, которое эквивалентно значению <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">Значение <paramref name="value" /> больше значения <see cref="F:System.Int16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt16(System.UInt64)">
      <summary>Преобразует значение заданного 64-битового целого числа без знака в эквивалентное 16-битовое целое число со знаком.</summary>
      <param name="value">64-разрядное целое число без знака для преобразования.</param>
      <returns>16-разрядное целое число со знаком, которое эквивалентно значению <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">Значение <paramref name="value" /> больше значения <see cref="F:System.Int16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt32(System.Boolean)">
      <summary>Преобразует заданное логическое значение в эквивалентное 32-битовое целое число со знаком.</summary>
      <param name="value">Логическое значение, которое необходимо преобразовать.</param>
      <returns>Число 1, если <paramref name="value" /> имеет значение <see langword="true" />; в противном случае — 0.</returns>
    </member>
    <member name="M:System.Convert.ToInt32(System.Byte)">
      <summary>Преобразует значение заданного 8-битового целого числа без знака в эквивалентное 32-битовое целое число со знаком.</summary>
      <param name="value">8-разрядное целое число без знака для преобразования.</param>
      <returns>32-разрядное знаковое целое число, которое эквивалентно значению <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToInt32(System.Char)">
      <summary>Преобразует значение заданного символа Юникода в эквивалентное 32-битовое целое число со знаком.</summary>
      <param name="value">Знак Юникода, который необходимо преобразовать.</param>
      <returns>32-разрядное знаковое целое число, которое эквивалентно значению <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToInt32(System.DateTime)">
      <summary>При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Значение даты и времени для преобразования.</param>
      <returns>Данное преобразование не поддерживается. Возвращаемое значение отсутствует.</returns>
      <exception cref="T:System.InvalidCastException">Данное преобразование не поддерживается.</exception>
    </member>
    <member name="M:System.Convert.ToInt32(System.Decimal)">
      <summary>Преобразует значение заданного десятичного числа в эквивалентное 32-битовое целое число со знаком.</summary>
      <param name="value">Десятичное число для преобразования.</param>
      <returns>Значение <paramref name="value" />, округленное до ближайшего 32-разрядного целого числа со знаком. Если <paramref name="value" /> имеет среднее значение между двумя целыми числами, будет возвращено четное число; так, значение 4,5 преобразуется в 4, а 5,5 — в 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> больше <see cref="F:System.Int32.MaxValue" /> или меньше <see cref="F:System.Int32.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt32(System.Double)">
      <summary>Преобразует значение заданного числа с плавающей запятой двойной точности в эквивалентное 32-битовое целое число со знаком.</summary>
      <param name="value">Число с плавающей запятой двойной точности, которое нужно преобразовать.</param>
      <returns>Значение <paramref name="value" />, округленное до ближайшего 32-разрядного целого числа со знаком. Если <paramref name="value" /> имеет среднее значение между двумя целыми числами, будет возвращено четное число; так, значение 4,5 преобразуется в 4, а 5,5 — в 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> больше <see cref="F:System.Int32.MaxValue" /> или меньше <see cref="F:System.Int32.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt32(System.Int16)">
      <summary>Преобразует значение заданного 16-битового целого числа со знаком в эквивалентное 32-битовое целое число со знаком.</summary>
      <param name="value">16-разрядное целое число со знаком для преобразования.</param>
      <returns>32-разрядное знаковое целое число, которое эквивалентно значению <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToInt32(System.Int32)">
      <summary>Возвращает заданное 32-битовое целое число со знаком; фактическое преобразование не производится.</summary>
      <param name="value">Возвращаемое 32-разрядное целое число со знаком.</param>
      <returns>
        <paramref name="value" /> возвращается без изменений.</returns>
    </member>
    <member name="M:System.Convert.ToInt32(System.Int64)">
      <summary>Преобразует значение заданного 64-битового целого числа со знаком в эквивалентное 32-битовое целое число со знаком.</summary>
      <param name="value">64-разрядное целое число со знаком для преобразования.</param>
      <returns>32-разрядное знаковое целое число, которое эквивалентно значению <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> больше <see cref="F:System.Int32.MaxValue" /> или меньше <see cref="F:System.Int32.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt32(System.Object)">
      <summary>Преобразует значение заданного объекта в 32-битовое целое число со знаком.</summary>
      <param name="value">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />, или значение <see langword="null" />.</param>
      <returns>32-разрядное целое число со знаком, эквивалентное значению <paramref name="value" />, или нуль, если <paramref name="value" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">Параметр <paramref name="value" /> имеет неправильный формат.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> не реализует интерфейс <see cref="T:System.IConvertible" />.  
-или- 
Преобразование не поддерживается.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Int32.MinValue" /> или больше <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt32(System.Object,System.IFormatProvider)">
      <summary>Преобразует значение заданного объекта в эквивалентное 32-битовое целое число со знаком, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</summary>
      <param name="value">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />.</param>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <returns>32-разрядное знаковое целое число, эквивалентное значению <paramref name="value" />, или нуль, если <paramref name="value" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">Параметр <paramref name="value" /> имеет неправильный формат.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> не реализует <see cref="T:System.IConvertible" />.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Int32.MinValue" /> или больше <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt32(System.SByte)">
      <summary>Преобразует значение заданного 8-разрядного целого числа со знаком в эквивалентное 32-разрядное целое число со знаком.</summary>
      <param name="value">8-разрядное целое число со знаком для преобразования.</param>
      <returns>8-разрядное знаковое целое число, которое эквивалентно значению <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToInt32(System.Single)">
      <summary>Преобразует значение заданного числа с плавающей запятой одиночной точности в эквивалентное 32-битовое целое число со знаком.</summary>
      <param name="value">Число с плавающей запятой одиночной точности, которое нужно преобразовать.</param>
      <returns>Значение <paramref name="value" />, округленное до ближайшего 32-разрядного целого числа со знаком. Если <paramref name="value" /> имеет среднее значение между двумя целыми числами, будет возвращено четное число; так, значение 4,5 преобразуется в 4, а 5,5 — в 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> больше <see cref="F:System.Int32.MaxValue" /> или меньше <see cref="F:System.Int32.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt32(System.String)">
      <summary>Преобразует заданное строковое представление числа в эквивалентное 32-битовое целое число со знаком.</summary>
      <param name="value">Строка, содержащая преобразуемое число.</param>
      <returns>32-разрядное знаковое целое число, которое эквивалентно значению параметра <paramref name="value" />, или 0 (нуль), если <paramref name="value" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> не состоит из необязательного знака, за которым следует последовательность цифр (0–9).</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Int32.MinValue" /> или больше <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt32(System.String,System.IFormatProvider)">
      <summary>Преобразует заданное строковое представление числа в эквивалентное 32-битовое целое число со знаком, учитывая указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</summary>
      <param name="value">Строка, содержащая преобразуемое число.</param>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <returns>32-разрядное знаковое целое число, которое эквивалентно значению параметра <paramref name="value" />, или 0 (нуль), если <paramref name="value" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> не состоит из необязательного знака, за которым следует последовательность цифр (0–9).</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Int32.MinValue" /> или больше <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt32(System.String,System.Int32)">
      <summary>Преобразует строковое представление числа с указанным основанием системы счисления в эквивалентное ему 32-битовое целое число со знаком.</summary>
      <param name="value">Строка, содержащая преобразуемое число.</param>
      <param name="fromBase">Основание системы счисления, используемой для представления числа, заданного в параметре <paramref name="value" />, равное 2, 8, 10 или 16.</param>
      <returns>32-разрядное знаковое целое число, которое эквивалентно значению параметра <paramref name="value" />, или 0 (нуль), если <paramref name="value" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="fromBase" /> не равно 2, 8, 10 или 16.  

или - 
Значению <paramref name="value" />, представляющему недесятичное число со знаком, предшествует отрицательный знак.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Свойство <paramref name="value" /> имеет значение <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> содержит символ, который не является допустимой цифрой в основании, заданном параметром <paramref name="fromBase" />. Сообщение об исключении указывает, что отсутствуют цифры для преобразования, если первый символ в <paramref name="value" /> недопустим; в противном случае сообщение указывает, что <paramref name="value" /> содержит недопустимые конечные символы.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" />, представляющему число со знаком, не основанное на десятеричной системе счисления, предшествует знак минус.  

или - 
Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Int32.MinValue" /> или больше <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt32(System.UInt16)">
      <summary>Преобразует значение заданного 16-битового целого числа без знака в эквивалентное 32-битовое целое число со знаком.</summary>
      <param name="value">16-разрядное целое число без знака для преобразования.</param>
      <returns>32-разрядное знаковое целое число, которое эквивалентно значению <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToInt32(System.UInt32)">
      <summary>Преобразует значение заданного 32-битового целого числа без знака в эквивалентное 32-битовое целое число со знаком.</summary>
      <param name="value">32-разрядное целое число без знака для преобразования.</param>
      <returns>32-разрядное знаковое целое число, которое эквивалентно значению <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">Значение <paramref name="value" /> больше значения <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt32(System.UInt64)">
      <summary>Преобразует значение заданного 64-разрядного целого числа без знака в эквивалентное 32-разрядное целое число со знаком.</summary>
      <param name="value">64-разрядное целое число без знака для преобразования.</param>
      <returns>32-разрядное знаковое целое число, которое эквивалентно значению <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">Значение <paramref name="value" /> больше значения <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt64(System.Boolean)">
      <summary>Преобразует заданное логическое значение в эквивалентное 64-битовое целое число со знаком.</summary>
      <param name="value">Логическое значение, которое необходимо преобразовать.</param>
      <returns>Число 1, если <paramref name="value" /> имеет значение <see langword="true" />; в противном случае — 0.</returns>
    </member>
    <member name="M:System.Convert.ToInt64(System.Byte)">
      <summary>Преобразует значение заданного 8-битового целого числа без знака в эквивалентное 64-битовое целое число со знаком.</summary>
      <param name="value">8-разрядное целое число без знака для преобразования.</param>
      <returns>64-разрядное знаковое целое число, которое эквивалентно значению <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToInt64(System.Char)">
      <summary>Преобразует значение заданного символа Юникода в эквивалентное 64-битовое целое число со знаком.</summary>
      <param name="value">Знак Юникода, который необходимо преобразовать.</param>
      <returns>64-разрядное знаковое целое число, которое эквивалентно значению <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToInt64(System.DateTime)">
      <summary>При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Значение даты и времени для преобразования.</param>
      <returns>Данное преобразование не поддерживается. Возвращаемое значение отсутствует.</returns>
      <exception cref="T:System.InvalidCastException">Данное преобразование не поддерживается.</exception>
    </member>
    <member name="M:System.Convert.ToInt64(System.Decimal)">
      <summary>Преобразует значение заданного десятичного числа в эквивалентное 64-битовое целое число со знаком.</summary>
      <param name="value">Десятичное число для преобразования.</param>
      <returns>Значение <paramref name="value" />, округленное до ближайшего 64-разрядного целого числа со знаком. Если <paramref name="value" /> имеет среднее значение между двумя целыми числами, будет возвращено четное число; так, значение 4,5 преобразуется в 4, а 5,5 — в 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> больше <see cref="F:System.Int64.MaxValue" /> или меньше <see cref="F:System.Int64.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt64(System.Double)">
      <summary>Преобразует значение заданного числа с плавающей запятой двойной точности в эквивалентное 64-битовое целое число со знаком.</summary>
      <param name="value">Число с плавающей запятой двойной точности, которое нужно преобразовать.</param>
      <returns>Значение <paramref name="value" />, округленное до ближайшего 64-разрядного целого числа со знаком. Если <paramref name="value" /> имеет среднее значение между двумя целыми числами, будет возвращено четное число; так, значение 4,5 преобразуется в 4, а 5,5 — в 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> больше <see cref="F:System.Int64.MaxValue" /> или меньше <see cref="F:System.Int64.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt64(System.Int16)">
      <summary>Преобразует значение заданного 16-разрядного целого числа со знаком в эквивалентное 64-разрядное целое число со знаком.</summary>
      <param name="value">16-разрядное целое число со знаком для преобразования.</param>
      <returns>64-разрядное знаковое целое число, которое эквивалентно значению <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToInt64(System.Int32)">
      <summary>Преобразует значение заданного 32-битового целого числа со знаком в эквивалентное 64-битовое целое число со знаком.</summary>
      <param name="value">32-разрядное целое число со знаком для преобразования.</param>
      <returns>64-разрядное знаковое целое число, которое эквивалентно значению <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToInt64(System.Int64)">
      <summary>Возвращает заданное 64-битовое целое число со знаком; фактическое преобразование не производится.</summary>
      <param name="value">64-разрядное целое число со знаком.</param>
      <returns>
        <paramref name="value" /> возвращается без изменений.</returns>
    </member>
    <member name="M:System.Convert.ToInt64(System.Object)">
      <summary>Преобразует значение заданного объекта в 64-битовое целое число со знаком.</summary>
      <param name="value">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />, или значение <see langword="null" />.</param>
      <returns>64-разрядное знаковое целое число, эквивалентное значению <paramref name="value" />, или нуль, если <paramref name="value" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">Параметр <paramref name="value" /> имеет неправильный формат.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> не реализует интерфейс <see cref="T:System.IConvertible" />.  
-или- 
Преобразование не поддерживается.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Int64.MinValue" /> или больше <see cref="F:System.Int64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt64(System.Object,System.IFormatProvider)">
      <summary>Преобразует значение заданного объекта в эквивалентное 64-битовое целое число со знаком, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</summary>
      <param name="value">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />.</param>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <returns>64-разрядное знаковое целое число, эквивалентное значению <paramref name="value" />, или нуль, если <paramref name="value" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">Параметр <paramref name="value" /> имеет неправильный формат.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> не реализует интерфейс <see cref="T:System.IConvertible" />.  

или - 
Преобразование не поддерживается.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Int64.MinValue" /> или больше <see cref="F:System.Int64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt64(System.SByte)">
      <summary>Преобразует значение заданного 8-разрядного целого числа со знаком в эквивалентное 64-разрядное целое число со знаком.</summary>
      <param name="value">8-разрядное целое число со знаком для преобразования.</param>
      <returns>64-разрядное знаковое целое число, которое эквивалентно значению <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToInt64(System.Single)">
      <summary>Преобразует значение заданного числа с плавающей запятой одиночной точности в эквивалентное 64-битовое целое число со знаком.</summary>
      <param name="value">Число с плавающей запятой одиночной точности, которое нужно преобразовать.</param>
      <returns>Значение <paramref name="value" />, округленное до ближайшего 64-разрядного целого числа со знаком. Если <paramref name="value" /> имеет среднее значение между двумя целыми числами, будет возвращено четное число; так, значение 4,5 преобразуется в 4, а 5,5 — в 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> больше <see cref="F:System.Int64.MaxValue" /> или меньше <see cref="F:System.Int64.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt64(System.String)">
      <summary>Преобразует заданное строковое представление числа в эквивалентное 64-битовое целое число со знаком.</summary>
      <param name="value">Строка, содержащая преобразуемое число.</param>
      <returns>64-разрядное знаковое целое число, которое эквивалентно значению параметра <paramref name="value" />, или 0 (нуль), если <paramref name="value" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> не состоит из необязательного знака, за которым следует последовательность цифр (0–9).</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Int64.MinValue" /> или больше <see cref="F:System.Int64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt64(System.String,System.IFormatProvider)">
      <summary>Преобразует заданное строковое представление числа в эквивалентное 64-битовое целое число со знаком, учитывая указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</summary>
      <param name="value">Строка, содержащая преобразуемое число.</param>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <returns>64-разрядное знаковое целое число, которое эквивалентно значению параметра <paramref name="value" />, или 0 (нуль), если <paramref name="value" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> не состоит из необязательного знака, за которым следует последовательность цифр (0–9).</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Int64.MinValue" /> или больше <see cref="F:System.Int64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt64(System.String,System.Int32)">
      <summary>Преобразует строковое представление числа с указанным основанием системы счисления в эквивалентное ему 64-битовое целое число со знаком.</summary>
      <param name="value">Строка, содержащая преобразуемое число.</param>
      <param name="fromBase">Основание системы счисления, используемой для представления числа, заданного в параметре <paramref name="value" />, равное 2, 8, 10 или 16.</param>
      <returns>64-разрядное знаковое целое число, которое эквивалентно значению параметра <paramref name="value" />, или 0 (нуль), если <paramref name="value" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="fromBase" /> не равно 2, 8, 10 или 16.  
-или- 
 Значению <paramref name="value" />, представляющему недесятичное число со знаком, предшествует отрицательный знак.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Свойство <paramref name="value" /> имеет значение <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> содержит символ, который не является допустимой цифрой в основании, заданном параметром <paramref name="fromBase" />. Сообщение об исключении указывает, что отсутствуют цифры для преобразования, если первый символ в <paramref name="value" /> недопустим; в противном случае сообщение указывает, что <paramref name="value" /> содержит недопустимые конечные символы.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" />, представляющему число со знаком, не основанное на десятеричной системе счисления, предшествует знак минус.  

или - 
Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Int64.MinValue" /> или больше <see cref="F:System.Int64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt64(System.UInt16)">
      <summary>Преобразует значение заданного 16-битового целого числа без знака в эквивалентное 64-битовое целое число со знаком.</summary>
      <param name="value">16-разрядное целое число без знака для преобразования.</param>
      <returns>64-разрядное знаковое целое число, которое эквивалентно значению <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToInt64(System.UInt32)">
      <summary>Преобразует значение заданного 32-битового целого числа без знака в эквивалентное 64-битовое целое число со знаком.</summary>
      <param name="value">32-разрядное целое число без знака для преобразования.</param>
      <returns>64-разрядное знаковое целое число, которое эквивалентно значению <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToInt64(System.UInt64)">
      <summary>Преобразует значение заданного 64-битового целого числа без знака в эквивалентное 64-битовое целое число со знаком.</summary>
      <param name="value">64-разрядное целое число без знака для преобразования.</param>
      <returns>64-разрядное знаковое целое число, которое эквивалентно значению <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">Значение <paramref name="value" /> больше значения <see cref="F:System.Int64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.Boolean)">
      <summary>Преобразует заданное логическое значение в эквивалентное 8-битовое целое число со знаком.</summary>
      <param name="value">Логическое значение, которое необходимо преобразовать.</param>
      <returns>Число 1, если <paramref name="value" /> имеет значение <see langword="true" />; в противном случае — 0.</returns>
    </member>
    <member name="M:System.Convert.ToSByte(System.Byte)">
      <summary>Преобразует значение заданного 8-битового целого числа без знака в эквивалентное 8-битовое целое число со знаком.</summary>
      <param name="value">8-разрядное целое число без знака для преобразования.</param>
      <returns>8-разрядное знаковое целое число, которое эквивалентно значению <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">Значение <paramref name="value" /> больше значения <see cref="F:System.SByte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.Char)">
      <summary>Преобразует значение заданного символа Юникода в эквивалентное 8-битовое целое число со знаком.</summary>
      <param name="value">Знак Юникода, который необходимо преобразовать.</param>
      <returns>8-разрядное знаковое целое число, которое эквивалентно значению <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">Значение <paramref name="value" /> больше значения <see cref="F:System.SByte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.DateTime)">
      <summary>При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Значение даты и времени для преобразования.</param>
      <returns>Данное преобразование не поддерживается. Возвращаемое значение отсутствует.</returns>
      <exception cref="T:System.InvalidCastException">Данное преобразование не поддерживается.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.Decimal)">
      <summary>Преобразует значение заданного десятичного числа в эквивалентное 8-битовое целое число со знаком.</summary>
      <param name="value">Десятичное число для преобразования.</param>
      <returns>Значение <paramref name="value" />, округленное до ближайшего 8-разрядного целого числа со знаком. Если <paramref name="value" /> имеет среднее значение между двумя целыми числами, будет возвращено четное число; так, значение 4,5 преобразуется в 4, а 5,5 — в 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> больше <see cref="F:System.SByte.MaxValue" /> или меньше <see cref="F:System.SByte.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.Double)">
      <summary>Преобразует значение заданного числа с плавающей запятой двойной точности в эквивалентное 8-битовое целое число со знаком.</summary>
      <param name="value">Число с плавающей запятой двойной точности, которое нужно преобразовать.</param>
      <returns>Значение <paramref name="value" />, округленное до ближайшего 8-разрядного целого числа со знаком. Если <paramref name="value" /> имеет среднее значение между двумя целыми числами, будет возвращено четное число; так, значение 4,5 преобразуется в 4, а 5,5 — в 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> больше <see cref="F:System.SByte.MaxValue" /> или меньше <see cref="F:System.SByte.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.Int16)">
      <summary>Преобразует значение заданного 16-битового целого числа со знаком в эквивалентное 8-битовое целое число со знаком.</summary>
      <param name="value">16-разрядное целое число со знаком для преобразования.</param>
      <returns>8-разрядное знаковое целое число, которое эквивалентно значению <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> больше <see cref="F:System.SByte.MaxValue" /> или меньше <see cref="F:System.SByte.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.Int32)">
      <summary>Преобразует значение заданного 32-битового целого числа со знаком в эквивалентное 8-битовое целое число со знаком.</summary>
      <param name="value">32-разрядное целое число со знаком для преобразования.</param>
      <returns>8-разрядное знаковое целое число, которое эквивалентно значению <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> больше <see cref="F:System.SByte.MaxValue" /> или меньше <see cref="F:System.SByte.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.Int64)">
      <summary>Преобразует значение заданного 64-битового целого числа со знаком в эквивалентное 8-битовое целое число со знаком.</summary>
      <param name="value">64-разрядное целое число со знаком для преобразования.</param>
      <returns>8-разрядное знаковое целое число, которое эквивалентно значению <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> больше <see cref="F:System.SByte.MaxValue" /> или меньше <see cref="F:System.SByte.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.Object)">
      <summary>Преобразует значение заданного объекта в 8-битовое целое число со знаком.</summary>
      <param name="value">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />, или значение <see langword="null" />.</param>
      <returns>8-разрядное знаковое целое число, эквивалентное значению <paramref name="value" />, или нуль, если <paramref name="value" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">Параметр <paramref name="value" /> имеет неправильный формат.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> не реализует интерфейс <see cref="T:System.IConvertible" />.  

или - 
Преобразование не поддерживается.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.SByte.MinValue" /> или больше <see cref="F:System.SByte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.Object,System.IFormatProvider)">
      <summary>Преобразует значение заданного объекта в эквивалентное 8-разрядное знаковое целое число, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</summary>
      <param name="value">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />.</param>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <returns>8-разрядное знаковое целое число, эквивалентное значению <paramref name="value" />, или нуль, если <paramref name="value" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">Параметр <paramref name="value" /> имеет неправильный формат.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> не реализует интерфейс <see cref="T:System.IConvertible" />.  

или - 
Преобразование не поддерживается.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.SByte.MinValue" /> или больше <see cref="F:System.SByte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.SByte)">
      <summary>Возвращает заданное 8-битовое целое число со знаком; фактическое преобразование не производится.</summary>
      <param name="value">Возвращаемое 8-разрядное целое число со знаком.</param>
      <returns>
        <paramref name="value" /> возвращается без изменений.</returns>
    </member>
    <member name="M:System.Convert.ToSByte(System.Single)">
      <summary>Преобразует значение заданного числа с плавающей запятой одиночной точности в эквивалентное 8-битовое целое число со знаком.</summary>
      <param name="value">Число с плавающей запятой одиночной точности, которое нужно преобразовать.</param>
      <returns>Значение <paramref name="value" />, округленное до ближайшего 8-разрядного целого числа со знаком. Если <paramref name="value" /> имеет среднее значение между двумя целыми числами, будет возвращено четное число; так, значение 4,5 преобразуется в 4, а 5,5 — в 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> больше <see cref="F:System.SByte.MaxValue" /> или меньше <see cref="F:System.SByte.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.String)">
      <summary>Преобразует заданное строковое представление числа в эквивалентное 8-битовое целое число со знаком.</summary>
      <param name="value">Строка, содержащая преобразуемое число.</param>
      <returns>8-разрядное целое число со знаком, которое эквивалентно значению параметра <paramref name="value" />, или 0 (нуль), если значение равно <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> не состоит из необязательного знака, за которым следует последовательность цифр (0–9).</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.SByte.MinValue" /> или больше <see cref="F:System.SByte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.String,System.IFormatProvider)">
      <summary>Преобразует заданное строковое представление числа в эквивалентное 8-битовое целое число со знаком, учитывая указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</summary>
      <param name="value">Строка, содержащая преобразуемое число.</param>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <returns>8-разрядное знаковое целое число, которое эквивалентно значению <paramref name="value" />.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="value" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> не состоит из необязательного знака, за которым следует последовательность цифр (0–9).</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.SByte.MinValue" /> или больше <see cref="F:System.SByte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.String,System.Int32)">
      <summary>Преобразует строковое представление числа с указанным основанием системы счисления в эквивалентное ему 8-битовое целое число со знаком.</summary>
      <param name="value">Строка, содержащая преобразуемое число.</param>
      <param name="fromBase">Основание системы счисления, используемой для представления числа, заданного в параметре <paramref name="value" />, равное 2, 8, 10 или 16.</param>
      <returns>8-разрядное целое число со знаком, которое эквивалентно значению параметра <paramref name="value" />, или 0 (нуль), если <paramref name="value" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="fromBase" /> не равно 2, 8, 10 или 16.  
-или- 
 Значению <paramref name="value" />, представляющему недесятичное число со знаком, предшествует отрицательный знак.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Свойство <paramref name="value" /> имеет значение <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> содержит символ, который не является допустимой цифрой в основании, заданном параметром <paramref name="fromBase" />. Сообщение об исключении указывает, что отсутствуют цифры для преобразования, если первый символ в <paramref name="value" /> недопустим; в противном случае сообщение указывает, что <paramref name="value" /> содержит недопустимые конечные символы.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" />, представляющему число со знаком, не основанное на десятеричной системе счисления, предшествует знак минус.  
-или- 
 Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.SByte.MinValue" /> или больше <see cref="F:System.SByte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.UInt16)">
      <summary>Преобразует значение заданного 16-битового целого числа без знака в эквивалентное 8-битовое целое число со знаком.</summary>
      <param name="value">16-разрядное целое число без знака для преобразования.</param>
      <returns>8-разрядное знаковое целое число, которое эквивалентно значению <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">Значение <paramref name="value" /> больше значения <see cref="F:System.SByte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.UInt32)">
      <summary>Преобразует значение заданного 32-битового целого числа без знака в эквивалентное 8-битовое целое число со знаком.</summary>
      <param name="value">32-разрядное целое число без знака для преобразования.</param>
      <returns>8-разрядное знаковое целое число, которое эквивалентно значению <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> больше <see cref="F:System.SByte.MaxValue" /> или меньше <see cref="F:System.SByte.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.UInt64)">
      <summary>Преобразует значение заданного 64-битового целого числа без знака в эквивалентное 8-битовое целое число со знаком.</summary>
      <param name="value">64-разрядное целое число без знака для преобразования.</param>
      <returns>8-разрядное знаковое целое число, которое эквивалентно значению <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> больше <see cref="F:System.SByte.MaxValue" /> или меньше <see cref="F:System.SByte.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSingle(System.Boolean)">
      <summary>Преобразует заданное логическое значение в эквивалентное число с плавающей запятой одиночной точности.</summary>
      <param name="value">Логическое значение, которое необходимо преобразовать.</param>
      <returns>Число 1, если <paramref name="value" /> имеет значение <see langword="true" />; в противном случае — 0.</returns>
    </member>
    <member name="M:System.Convert.ToSingle(System.Byte)">
      <summary>Преобразует значение заданного 8-битового целого числа без знака в эквивалентное число с плавающей запятой одиночной точности.</summary>
      <param name="value">8-разрядное целое число без знака для преобразования.</param>
      <returns>Число с плавающей запятой одиночной точности, которое эквивалентно значению <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToSingle(System.Char)">
      <summary>При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Знак Юникода, который необходимо преобразовать.</param>
      <returns>Данное преобразование не поддерживается. Возвращаемое значение отсутствует.</returns>
      <exception cref="T:System.InvalidCastException">Данное преобразование не поддерживается.</exception>
    </member>
    <member name="M:System.Convert.ToSingle(System.DateTime)">
      <summary>При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Значение даты и времени для преобразования.</param>
      <returns>Данное преобразование не поддерживается. Возвращаемое значение отсутствует.</returns>
      <exception cref="T:System.InvalidCastException">Данное преобразование не поддерживается.</exception>
    </member>
    <member name="M:System.Convert.ToSingle(System.Decimal)">
      <summary>Преобразует значение заданного десятичного числа в эквивалентное число с плавающей запятой одиночной точности.</summary>
      <param name="value">Десятичное число для преобразования.</param>
      <returns>Число с плавающей запятой одиночной точности, которое эквивалентно значению <paramref name="value" />.  
 Значение <paramref name="value" /> округляется до ближайшего числа. Например, при округлении до второго знака после десятичной запятой значение 2,345 преобразуется в 2,34, а значение 2,355 — в 2,36.</returns>
    </member>
    <member name="M:System.Convert.ToSingle(System.Double)">
      <summary>Преобразует значение заданного числа с плавающей запятой одиночной точности в эквивалентное число с плавающей запятой двойной точности.</summary>
      <param name="value">Число с плавающей запятой двойной точности, которое нужно преобразовать.</param>
      <returns>Число с плавающей запятой одиночной точности, которое эквивалентно значению <paramref name="value" />.  
 Значение <paramref name="value" /> округляется до ближайшего числа. Например, при округлении до второго знака после десятичной запятой значение 2,345 преобразуется в 2,34, а значение 2,355 — в 2,36.</returns>
    </member>
    <member name="M:System.Convert.ToSingle(System.Int16)">
      <summary>Преобразует значение заданного 16-битового целого числа со знаком в эквивалентное число с плавающей запятой одиночной точности.</summary>
      <param name="value">16-разрядное целое число со знаком для преобразования.</param>
      <returns>Число с плавающей запятой одиночной точности, которое эквивалентно значению <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToSingle(System.Int32)">
      <summary>Преобразует значение заданного 32-битового целого числа со знаком в эквивалентное число с плавающей запятой одиночной точности.</summary>
      <param name="value">32-разрядное целое число со знаком для преобразования.</param>
      <returns>Число с плавающей запятой одиночной точности, которое эквивалентно значению <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToSingle(System.Int64)">
      <summary>Преобразует значение заданного 64-битового целого числа со знаком в эквивалентное число с плавающей запятой одиночной точности.</summary>
      <param name="value">64-разрядное целое число со знаком для преобразования.</param>
      <returns>Число с плавающей запятой одиночной точности, которое эквивалентно значению <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToSingle(System.Object)">
      <summary>Преобразует значение заданного объекта в число с плавающей запятой одиночной точности.</summary>
      <param name="value">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />, или значение <see langword="null" />.</param>
      <returns>Число с плавающей запятой одиночной точности, эквивалентное значению <paramref name="value" />, или нуль, если <paramref name="value" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">Параметр <paramref name="value" /> имеет неправильный формат.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> не реализует интерфейс <see cref="T:System.IConvertible" />.  
-или- 
Преобразование не поддерживается.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Single.MinValue" /> или больше <see cref="F:System.Single.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSingle(System.Object,System.IFormatProvider)">
      <summary>Преобразует значение заданного объекта в число с плавающей запятой одиночной точности, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</summary>
      <param name="value">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />.</param>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <returns>Число с плавающей запятой одиночной точности, эквивалентное значению <paramref name="value" />, или нуль, если <paramref name="value" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">Параметр <paramref name="value" /> имеет неправильный формат.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> не реализует <see cref="T:System.IConvertible" />.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Single.MinValue" /> или больше <see cref="F:System.Single.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSingle(System.SByte)">
      <summary>Преобразует значение заданного 8-битового целого числа со знаком в эквивалентное число с плавающей запятой одиночной точности.</summary>
      <param name="value">8-разрядное целое число со знаком для преобразования.</param>
      <returns>8-разрядное знаковое целое число, которое эквивалентно значению <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToSingle(System.Single)">
      <summary>Возвращает заданное число с плавающей запятой одиночной точности; фактическое преобразование не производится.</summary>
      <param name="value">Возвращаемое число с плавающей запятой одиночной точности.</param>
      <returns>
        <paramref name="value" /> возвращается без изменений.</returns>
    </member>
    <member name="M:System.Convert.ToSingle(System.String)">
      <summary>Преобразует заданное строковое представление числа в эквивалентное число с плавающей запятой одиночной точности.</summary>
      <param name="value">Строка, содержащая преобразуемое число.</param>
      <returns>Число с плавающей запятой одиночной точности, эквивалентное числу <paramref name="value" />, или 0 (нуль), если <paramref name="value" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> не является числом в допустимом формате.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Single.MinValue" /> или больше <see cref="F:System.Single.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSingle(System.String,System.IFormatProvider)">
      <summary>Преобразует заданное строковое представление числа в эквивалентное число с плавающей запятой одиночной точности, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</summary>
      <param name="value">Строка, содержащая преобразуемое число.</param>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <returns>Число с плавающей запятой одиночной точности, эквивалентное числу <paramref name="value" />, или 0 (нуль), если <paramref name="value" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> не является числом в допустимом формате.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.Single.MinValue" /> или больше <see cref="F:System.Single.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSingle(System.UInt16)">
      <summary>Преобразует значение заданного 16-битового целого числа без знака в эквивалентное число с плавающей запятой одиночной точности.</summary>
      <param name="value">16-разрядное целое число без знака для преобразования.</param>
      <returns>Число с плавающей запятой одиночной точности, которое эквивалентно значению <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToSingle(System.UInt32)">
      <summary>Преобразует значение заданного 32-битового целого числа без знака в эквивалентное число с плавающей запятой одиночной точности.</summary>
      <param name="value">32-разрядное целое число без знака для преобразования.</param>
      <returns>Число с плавающей запятой одиночной точности, которое эквивалентно значению <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToSingle(System.UInt64)">
      <summary>Преобразует значение заданного 64-битового целого числа без знака в эквивалентное число с плавающей запятой одиночной точности.</summary>
      <param name="value">64-разрядное целое число без знака для преобразования.</param>
      <returns>Число с плавающей запятой одиночной точности, которое эквивалентно значению <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Boolean)">
      <summary>Преобразует указанное логическое значение в эквивалентное строковое представление.</summary>
      <param name="value">Логическое значение, которое необходимо преобразовать.</param>
      <returns>Строковое представление параметра <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Boolean,System.IFormatProvider)">
      <summary>Преобразует указанное логическое значение в эквивалентное строковое представление.</summary>
      <param name="value">Логическое значение, которое необходимо преобразовать.</param>
      <param name="provider">Экземпляр объекта. Этот параметр не учитывается.</param>
      <returns>Строковое представление параметра <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Byte)">
      <summary>Преобразует значение заданного 8-битового целого числа без знака в эквивалентное строковое представление.</summary>
      <param name="value">8-разрядное целое число без знака для преобразования.</param>
      <returns>Строковое представление параметра <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Byte,System.IFormatProvider)">
      <summary>Преобразует значение заданного 8-битового целого числа без знака в эквивалентное строковое представление, учитывая указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</summary>
      <param name="value">8-разрядное целое число без знака для преобразования.</param>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <returns>Строковое представление параметра <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Byte,System.Int32)">
      <summary>Преобразует значение заданного 8-битового целого числа без знака в эквивалентное строковое представление в указанной системе счисления.</summary>
      <param name="value">8-разрядное целое число без знака для преобразования.</param>
      <param name="toBase">Основание системы счисления возвращаемого значения, равное 2, 8, 10 или 16.</param>
      <returns>Строковое представление значения параметра <paramref name="value" /> в системе счисления с основанием <paramref name="toBase" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="toBase" /> не равно 2, 8, 10 или 16.</exception>
    </member>
    <member name="M:System.Convert.ToString(System.Char)">
      <summary>Преобразует значение заданного знака Юникода в эквивалентное строковое представление.</summary>
      <param name="value">Знак Юникода, который необходимо преобразовать.</param>
      <returns>Строковое представление параметра <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Char,System.IFormatProvider)">
      <summary>Преобразует значение заданного знака Юникода в эквивалентное строковое представление, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</summary>
      <param name="value">Знак Юникода, который необходимо преобразовать.</param>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров. Этот параметр не учитывается.</param>
      <returns>Строковое представление параметра <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.DateTime)">
      <summary>Преобразует значение заданного объекта <see cref="T:System.DateTime" /> в эквивалентное строковое представление.</summary>
      <param name="value">Значение даты и времени для преобразования.</param>
      <returns>Строковое представление параметра <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.DateTime,System.IFormatProvider)">
      <summary>Преобразует значение заданного объекта <see cref="T:System.DateTime" /> в эквивалентное строковое представление с использованием указанных сведений об особенностях форматирования для данного языка и региональных параметров.</summary>
      <param name="value">Значение даты и времени для преобразования.</param>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <returns>Строковое представление параметра <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Decimal)">
      <summary>Преобразует значение заданного десятичного числа в эквивалентное строковое представление.</summary>
      <param name="value">Десятичное число для преобразования.</param>
      <returns>Строковое представление параметра <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Decimal,System.IFormatProvider)">
      <summary>Преобразует значение заданного десятичного числа в эквивалентное строковое представление, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</summary>
      <param name="value">Десятичное число для преобразования.</param>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <returns>Строковое представление параметра <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Double)">
      <summary>Преобразует значение заданного числа с плавающей запятой двойной точности в эквивалентное строковое представление.</summary>
      <param name="value">Число с плавающей запятой двойной точности, которое нужно преобразовать.</param>
      <returns>Строковое представление параметра <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Double,System.IFormatProvider)">
      <summary>Преобразует значение заданного числа с плавающей запятой двойной точности в эквивалентное строковое представление.</summary>
      <param name="value">Число с плавающей запятой двойной точности, которое нужно преобразовать.</param>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <returns>Строковое представление параметра <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Int16)">
      <summary>Преобразует значение заданного 16-битового целого числа со знаком в эквивалентное строковое представление.</summary>
      <param name="value">16-разрядное целое число со знаком для преобразования.</param>
      <returns>Строковое представление параметра <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Int16,System.IFormatProvider)">
      <summary>Преобразует значение заданного 16-битового целого числа со знаком в эквивалентное строковое представление, учитывая указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</summary>
      <param name="value">16-разрядное целое число со знаком для преобразования.</param>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <returns>Строковое представление параметра <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Int16,System.Int32)">
      <summary>Преобразует значение заданного 16-битового целого числа со знаком в эквивалентное строковое представление в указанной системе счисления.</summary>
      <param name="value">16-разрядное целое число со знаком для преобразования.</param>
      <param name="toBase">Основание системы счисления возвращаемого значения, равное 2, 8, 10 или 16.</param>
      <returns>Строковое представление значения параметра <paramref name="value" /> в системе счисления с основанием <paramref name="toBase" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="toBase" /> не равно 2, 8, 10 или 16.</exception>
    </member>
    <member name="M:System.Convert.ToString(System.Int32)">
      <summary>Преобразует значение заданного 32-битового целого числа со знаком в эквивалентное строковое представление.</summary>
      <param name="value">32-разрядное целое число со знаком для преобразования.</param>
      <returns>Строковое представление параметра <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Int32,System.IFormatProvider)">
      <summary>Преобразует значение заданного 32-битового целого числа со знаком в эквивалентное строковое представление, учитывая указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</summary>
      <param name="value">32-разрядное целое число со знаком для преобразования.</param>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <returns>Строковое представление параметра <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Int32,System.Int32)">
      <summary>Преобразует значение заданного 32-битового целого числа со знаком в эквивалентное строковое представление в указанной системе счисления.</summary>
      <param name="value">32-разрядное целое число со знаком для преобразования.</param>
      <param name="toBase">Основание системы счисления возвращаемого значения, равное 2, 8, 10 или 16.</param>
      <returns>Строковое представление значения параметра <paramref name="value" /> в системе счисления с основанием <paramref name="toBase" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="toBase" /> не равно 2, 8, 10 или 16.</exception>
    </member>
    <member name="M:System.Convert.ToString(System.Int64)">
      <summary>Преобразует значение заданного 64-битового целого числа со знаком в эквивалентное строковое представление.</summary>
      <param name="value">64-разрядное целое число со знаком для преобразования.</param>
      <returns>Строковое представление параметра <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Int64,System.IFormatProvider)">
      <summary>Преобразует значение заданного 64-битового целого числа со знаком в эквивалентное строковое представление, учитывая указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</summary>
      <param name="value">64-разрядное целое число со знаком для преобразования.</param>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <returns>Строковое представление параметра <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Int64,System.Int32)">
      <summary>Преобразует значение заданного 64-битового целого числа со знаком в эквивалентное строковое представление в указанной системе счисления.</summary>
      <param name="value">64-разрядное целое число со знаком для преобразования.</param>
      <param name="toBase">Основание системы счисления возвращаемого значения, равное 2, 8, 10 или 16.</param>
      <returns>Строковое представление значения параметра <paramref name="value" /> в системе счисления с основанием <paramref name="toBase" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="toBase" /> не равно 2, 8, 10 или 16.</exception>
    </member>
    <member name="M:System.Convert.ToString(System.Object)">
      <summary>Преобразует значение заданного объекта в эквивалентное строковое представление.</summary>
      <param name="value">Объект, содержащий значение для преобразования, или <see langword="null" />.</param>
      <returns>Строковое представление имеет значение <paramref name="value" /> или <see cref="F:System.String.Empty" />, если значение параметра <paramref name="value" /> равно <see langword="null" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Object,System.IFormatProvider)">
      <summary>Преобразует значение указанного объекта в эквивалентное строковое представление с использованием указанных сведений об особенностях форматирования для данного языка и региональных параметров.</summary>
      <param name="value">Объект, содержащий значение для преобразования, или <see langword="null" />.</param>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <returns>Строковое представление значения параметра <paramref name="value" /> или <see cref="F:System.String.Empty" />, если <paramref name="value" /> представляет собой объект, значение которого равно <see langword="null" />. Если значением параметра <paramref name="value" /> является <see langword="null" />, метод возвращает <see langword="null" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.SByte)">
      <summary>Преобразует значение заданного 8-битового целого числа со знаком в эквивалентное строковое представление.</summary>
      <param name="value">8-разрядное целое число со знаком для преобразования.</param>
      <returns>Строковое представление параметра <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.SByte,System.IFormatProvider)">
      <summary>Преобразует значение заданного 8-битового целого числа со знаком в эквивалентное строковое представление, учитывая указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</summary>
      <param name="value">8-разрядное целое число со знаком для преобразования.</param>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <returns>Строковое представление параметра <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Single)">
      <summary>Преобразует значение заданного числа с плавающей запятой одиночной точности в эквивалентное строковое представление.</summary>
      <param name="value">Число с плавающей запятой одиночной точности, которое нужно преобразовать.</param>
      <returns>Строковое представление параметра <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Single,System.IFormatProvider)">
      <summary>Преобразует значение заданного числа с плавающей запятой одиночной точности в эквивалентное строковое представление, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</summary>
      <param name="value">Число с плавающей запятой одиночной точности, которое нужно преобразовать.</param>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <returns>Строковое представление параметра <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.String)">
      <summary>Возвращает заданное строковое представление; фактическое преобразование не производится.</summary>
      <param name="value">Возвращаемая строка.</param>
      <returns>
        <paramref name="value" /> возвращается без изменений.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.String,System.IFormatProvider)">
      <summary>Возвращает заданное строковое представление; фактическое преобразование не производится.</summary>
      <param name="value">Возвращаемая строка.</param>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров. Этот параметр не учитывается.</param>
      <returns>
        <paramref name="value" /> возвращается без изменений.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.UInt16)">
      <summary>Преобразует значение заданного 16-битового целого числа без знака в эквивалентное строковое представление.</summary>
      <param name="value">16-разрядное целое число без знака для преобразования.</param>
      <returns>Строковое представление параметра <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.UInt16,System.IFormatProvider)">
      <summary>Преобразует значение заданного 16-битового целого числа без знака в эквивалентное строковое представление, учитывая указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</summary>
      <param name="value">16-разрядное целое число без знака для преобразования.</param>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <returns>Строковое представление параметра <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.UInt32)">
      <summary>Преобразует значение заданного 32-битового целого числа без знака в эквивалентное строковое представление.</summary>
      <param name="value">32-разрядное целое число без знака для преобразования.</param>
      <returns>Строковое представление параметра <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.UInt32,System.IFormatProvider)">
      <summary>Преобразует значение заданного 32-битового целого числа без знака в эквивалентное строковое представление, учитывая указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</summary>
      <param name="value">32-разрядное целое число без знака для преобразования.</param>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <returns>Строковое представление параметра <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.UInt64)">
      <summary>Преобразует значение заданного 64-битового целого числа без знака в эквивалентное строковое представление.</summary>
      <param name="value">64-разрядное целое число без знака для преобразования.</param>
      <returns>Строковое представление параметра <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.UInt64,System.IFormatProvider)">
      <summary>Преобразует значение заданного 64-битового целого числа без знака в эквивалентное строковое представление, учитывая указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</summary>
      <param name="value">64-разрядное целое число без знака для преобразования.</param>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <returns>Строковое представление параметра <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToUInt16(System.Boolean)">
      <summary>Преобразует заданное логическое значение в эквивалентное 16-битовое целое число без знака.</summary>
      <param name="value">Логическое значение, которое необходимо преобразовать.</param>
      <returns>Число 1, если <paramref name="value" /> имеет значение <see langword="true" />; в противном случае — 0.</returns>
    </member>
    <member name="M:System.Convert.ToUInt16(System.Byte)">
      <summary>Преобразует значение заданного 8-битового целого числа без знака в эквивалентное 16-битовое целое число без знака.</summary>
      <param name="value">8-разрядное целое число без знака для преобразования.</param>
      <returns>16-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToUInt16(System.Char)">
      <summary>Преобразует значение заданного символа Юникода в эквивалентное 16-битовое целое число без знака.</summary>
      <param name="value">Знак Юникода, который необходимо преобразовать.</param>
      <returns>16-разрядное целое число без знака, эквивалентное <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToUInt16(System.DateTime)">
      <summary>При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Значение даты и времени для преобразования.</param>
      <returns>Данное преобразование не поддерживается. Возвращаемое значение отсутствует.</returns>
      <exception cref="T:System.InvalidCastException">Данное преобразование не поддерживается.</exception>
    </member>
    <member name="M:System.Convert.ToUInt16(System.Decimal)">
      <summary>Преобразует значение заданного десятичного числа в эквивалентное 16-битовое целое число без знака.</summary>
      <param name="value">Десятичное число для преобразования.</param>
      <returns>Значение <paramref name="value" />, округленное до ближайшего 16-разрядного целого числа без знака. Если <paramref name="value" /> имеет среднее значение между двумя целыми числами, будет возвращено четное число; так, значение 4,5 преобразуется в 4, а 5,5 — в 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> меньше нуля или больше <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt16(System.Double)">
      <summary>Преобразует значение заданного числа с плавающей запятой двойной точности в эквивалентное 16-битовое целое число без знака.</summary>
      <param name="value">Число с плавающей запятой двойной точности, которое нужно преобразовать.</param>
      <returns>Значение <paramref name="value" />, округленное до ближайшего 16-разрядного целого числа без знака. Если <paramref name="value" /> имеет среднее значение между двумя целыми числами, будет возвращено четное число; так, значение 4,5 преобразуется в 4, а 5,5 — в 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> меньше нуля или больше <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt16(System.Int16)">
      <summary>Преобразует значение заданного 16-битового целого числа со знаком в эквивалентное 16-битовое целое число без знака.</summary>
      <param name="value">16-разрядное целое число со знаком для преобразования.</param>
      <returns>16-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">Значение параметра <paramref name="value" /> меньше нуля.</exception>
    </member>
    <member name="M:System.Convert.ToUInt16(System.Int32)">
      <summary>Преобразует значение заданного 32-битового целого числа со знаком в эквивалентное 16-битовое целое число без знака.</summary>
      <param name="value">32-разрядное целое число со знаком для преобразования.</param>
      <returns>16-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> меньше нуля или больше <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt16(System.Int64)">
      <summary>Преобразует значение заданного 64-битового целого числа со знаком в эквивалентное 16-битовое целое число без знака.</summary>
      <param name="value">64-разрядное целое число со знаком для преобразования.</param>
      <returns>16-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> меньше нуля или больше <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt16(System.Object)">
      <summary>Преобразует значение заданного объекта в 16-битовое целое число без знака.</summary>
      <param name="value">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />, или значение <see langword="null" />.</param>
      <returns>16-разрядное целое число без знака, эквивалентное значению <paramref name="value" />, или нуль, если <paramref name="value" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">Параметр <paramref name="value" /> имеет неправильный формат.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> не реализует интерфейс <see cref="T:System.IConvertible" />.  
-или- 
Преобразование не поддерживается.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.UInt16.MinValue" /> или больше <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt16(System.Object,System.IFormatProvider)">
      <summary>Преобразует значение заданного объекта в эквивалентное 16-битовое целое число без знака, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</summary>
      <param name="value">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />.</param>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <returns>16-разрядное целое число без знака, эквивалентное значению <paramref name="value" />, или нуль, если <paramref name="value" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">Параметр <paramref name="value" /> имеет неправильный формат.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> не реализует интерфейс <see cref="T:System.IConvertible" />.  

или - 
Преобразование не поддерживается.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.UInt16.MinValue" /> или больше <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt16(System.SByte)">
      <summary>Преобразует значение заданного 8-битового целого числа со знаком в эквивалентное 16-битовое целое число без знака.</summary>
      <param name="value">8-разрядное целое число со знаком для преобразования.</param>
      <returns>16-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">Значение параметра <paramref name="value" /> меньше нуля.</exception>
    </member>
    <member name="M:System.Convert.ToUInt16(System.Single)">
      <summary>Преобразует значение заданного числа с плавающей запятой одиночной точности в эквивалентное 16-битовое целое число без знака.</summary>
      <param name="value">Число с плавающей запятой одиночной точности, которое нужно преобразовать.</param>
      <returns>Значение <paramref name="value" />, округленное до ближайшего 16-разрядного целого числа без знака. Если <paramref name="value" /> имеет среднее значение между двумя целыми числами, будет возвращено четное число; так, значение 4,5 преобразуется в 4, а 5,5 — в 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> меньше нуля или больше <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt16(System.String)">
      <summary>Преобразует заданное строковое представление числа в эквивалентное 16-битовое целое число без знака.</summary>
      <param name="value">Строка, содержащая преобразуемое число.</param>
      <returns>16-разрядное целое число без знака, которое эквивалентно значению параметра <paramref name="value" />, или 0 (нуль), если <paramref name="value" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> не состоит из необязательного знака, за которым следует последовательность цифр (0–9).</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.UInt16.MinValue" /> или больше <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt16(System.String,System.IFormatProvider)">
      <summary>Преобразует заданное строковое представление числа в эквивалентное 16-битовое целое число без знака, учитывая указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</summary>
      <param name="value">Строка, содержащая преобразуемое число.</param>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <returns>16-разрядное целое число без знака, которое эквивалентно значению параметра <paramref name="value" />, или 0 (нуль), если <paramref name="value" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> не состоит из необязательного знака, за которым следует последовательность цифр (0–9).</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.UInt16.MinValue" /> или больше <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt16(System.String,System.Int32)">
      <summary>Преобразует строковое представление числа с указанным основанием системы счисления в эквивалентное ему 16-битовое целое число без знака.</summary>
      <param name="value">Строка, содержащая преобразуемое число.</param>
      <param name="fromBase">Основание системы счисления, используемой для представления числа, заданного в параметре <paramref name="value" />, равное 2, 8, 10 или 16.</param>
      <returns>16-разрядное целое число без знака, которое эквивалентно значению параметра <paramref name="value" />, или 0 (нуль), если <paramref name="value" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="fromBase" /> не равно 2, 8, 10 или 16.  
-или- 
 Значение <paramref name="value" />, представляющее недесятичное число без знака, использовано со знаком минус.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Свойство <paramref name="value" /> имеет значение <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> содержит символ, который не является допустимой цифрой в основании, заданном параметром <paramref name="fromBase" />. Сообщение об исключении указывает, что отсутствуют цифры для преобразования, если первый символ в <paramref name="value" /> недопустим; в противном случае сообщение указывает, что <paramref name="value" /> содержит недопустимые конечные символы.</exception>
      <exception cref="T:System.OverflowException">Значение<paramref name="value" />, представляющее недесятичное число без знака, использовано со знаком минус.  
-или- 
 Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.UInt16.MinValue" /> или больше <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt16(System.UInt16)">
      <summary>Возвращает заданное 16-битовое целое число без знака; фактическое преобразование не производится.</summary>
      <param name="value">Возвращаемое 16-разрядное целое число без знака.</param>
      <returns>
        <paramref name="value" /> возвращается без изменений.</returns>
    </member>
    <member name="M:System.Convert.ToUInt16(System.UInt32)">
      <summary>Преобразует значение заданного 32-разрядного целого числа без знака в эквивалентное 16-разрядное целое число без знака.</summary>
      <param name="value">32-разрядное целое число без знака для преобразования.</param>
      <returns>16-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">Значение <paramref name="value" /> больше значения <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt16(System.UInt64)">
      <summary>Преобразует значение заданного 64-разрядного целого числа без знака в эквивалентное 16-разрядное целое число без знака.</summary>
      <param name="value">64-разрядное целое число без знака для преобразования.</param>
      <returns>16-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">Значение <paramref name="value" /> больше значения <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt32(System.Boolean)">
      <summary>Преобразует заданное логическое значение в эквивалентное 32-битовое целое число без знака.</summary>
      <param name="value">Логическое значение, которое необходимо преобразовать.</param>
      <returns>Число 1, если <paramref name="value" /> имеет значение <see langword="true" />; в противном случае — 0.</returns>
    </member>
    <member name="M:System.Convert.ToUInt32(System.Byte)">
      <summary>Преобразует значение заданного 8-битового целого числа без знака в эквивалентное 32-битовое целое число без знака.</summary>
      <param name="value">8-разрядное целое число без знака для преобразования.</param>
      <returns>32-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToUInt32(System.Char)">
      <summary>Преобразует значение заданного символа Юникода в эквивалентное 32-битовое целое число без знака.</summary>
      <param name="value">Знак Юникода, который необходимо преобразовать.</param>
      <returns>32-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToUInt32(System.DateTime)">
      <summary>При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Значение даты и времени для преобразования.</param>
      <returns>Данное преобразование не поддерживается. Возвращаемое значение отсутствует.</returns>
      <exception cref="T:System.InvalidCastException">Данное преобразование не поддерживается.</exception>
    </member>
    <member name="M:System.Convert.ToUInt32(System.Decimal)">
      <summary>Преобразует значение заданного десятичного числа в эквивалентное 32-битовое целое число без знака.</summary>
      <param name="value">Десятичное число для преобразования.</param>
      <returns>Значение <paramref name="value" />, округленное до ближайшего 32-разрядного целого числа без знака. Если <paramref name="value" /> имеет среднее значение между двумя целыми числами, будет возвращено четное число; так, значение 4,5 преобразуется в 4, а 5,5 — в 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> меньше нуля или больше <see cref="F:System.UInt32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt32(System.Double)">
      <summary>Преобразует значение заданного числа с плавающей запятой двойной точности в эквивалентное 32-битовое целое число без знака.</summary>
      <param name="value">Число с плавающей запятой двойной точности, которое нужно преобразовать.</param>
      <returns>Значение <paramref name="value" />, округленное до ближайшего 32-разрядного целого числа без знака. Если <paramref name="value" /> имеет среднее значение между двумя целыми числами, будет возвращено четное число; так, значение 4,5 преобразуется в 4, а 5,5 — в 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> меньше нуля или больше <see cref="F:System.UInt32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt32(System.Int16)">
      <summary>Преобразует значение заданного 16-битового целого числа со знаком в эквивалентное 32-битовое целое число без знака.</summary>
      <param name="value">16-разрядное целое число со знаком для преобразования.</param>
      <returns>32-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">Значение параметра <paramref name="value" /> меньше нуля.</exception>
    </member>
    <member name="M:System.Convert.ToUInt32(System.Int32)">
      <summary>Преобразует значение заданного 32-битового целого числа со знаком в эквивалентное 32-битовое целое число без знака.</summary>
      <param name="value">32-разрядное целое число со знаком для преобразования.</param>
      <returns>32-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">Значение параметра <paramref name="value" /> меньше нуля.</exception>
    </member>
    <member name="M:System.Convert.ToUInt32(System.Int64)">
      <summary>Преобразует значение заданного 64-битового целого числа со знаком в эквивалентное 32-битовое целое число без знака.</summary>
      <param name="value">64-разрядное целое число со знаком для преобразования.</param>
      <returns>32-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> меньше нуля или больше <see cref="F:System.UInt32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt32(System.Object)">
      <summary>Преобразует значение заданного объекта в 32-битовое целое число без знака.</summary>
      <param name="value">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />, или значение <see langword="null" />.</param>
      <returns>32-разрядное целое число без знака, эквивалентное значению <paramref name="value" />, или нуль (0), если <paramref name="value" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">Параметр <paramref name="value" /> имеет неправильный формат.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> не реализует интерфейс <see cref="T:System.IConvertible" />.  

или - 
Преобразование не поддерживается.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.UInt32.MinValue" /> или больше <see cref="F:System.UInt32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt32(System.Object,System.IFormatProvider)">
      <summary>Преобразует значение заданного объекта в эквивалентное 32-битовое целое число без знака, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</summary>
      <param name="value">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />.</param>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <returns>32-разрядное целое число без знака, эквивалентное значению <paramref name="value" />, или нуль, если <paramref name="value" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">Параметр <paramref name="value" /> имеет неправильный формат.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> не реализует интерфейс <see cref="T:System.IConvertible" />.  
-или- 
Преобразование не поддерживается.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.UInt32.MinValue" /> или больше <see cref="F:System.UInt32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt32(System.SByte)">
      <summary>Преобразует значение заданного 8-битового целого числа со знаком в эквивалентное 32-битовое целое число без знака.</summary>
      <param name="value">8-разрядное целое число со знаком для преобразования.</param>
      <returns>32-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">Значение параметра <paramref name="value" /> меньше нуля.</exception>
    </member>
    <member name="M:System.Convert.ToUInt32(System.Single)">
      <summary>Преобразует значение заданного числа с плавающей запятой одиночной точности в эквивалентное 32-битовое целое число без знака.</summary>
      <param name="value">Число с плавающей запятой одиночной точности, которое нужно преобразовать.</param>
      <returns>Значение <paramref name="value" />, округленное до ближайшего 32-разрядного целого числа без знака. Если <paramref name="value" /> имеет среднее значение между двумя целыми числами, будет возвращено четное число; так, значение 4,5 преобразуется в 4, а 5,5 — в 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> меньше нуля или больше <see cref="F:System.UInt32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt32(System.String)">
      <summary>Преобразует заданное строковое представление числа в эквивалентное 32-битовое целое число без знака.</summary>
      <param name="value">Строка, содержащая преобразуемое число.</param>
      <returns>32-разрядное целое число без знака, которое эквивалентно значению параметра <paramref name="value" />, или 0 (нуль), если <paramref name="value" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> не состоит из необязательного знака, за которым следует последовательность цифр (0–9).</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.UInt32.MinValue" /> или больше <see cref="F:System.UInt32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt32(System.String,System.IFormatProvider)">
      <summary>Преобразует заданное строковое представление числа в эквивалентное 32-битовое целое число без знака, учитывая указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</summary>
      <param name="value">Строка, содержащая преобразуемое число.</param>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <returns>32-разрядное целое число без знака, которое эквивалентно значению параметра <paramref name="value" />, или 0 (нуль), если <paramref name="value" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> не состоит из необязательного знака, за которым следует последовательность цифр (0–9).</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.UInt32.MinValue" /> или больше <see cref="F:System.UInt32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt32(System.String,System.Int32)">
      <summary>Преобразует строковое представление числа с указанным основанием системы счисления в эквивалентное ему 32-битовое целое число без знака.</summary>
      <param name="value">Строка, содержащая преобразуемое число.</param>
      <param name="fromBase">Основание системы счисления, используемой для представления числа, заданного в параметре <paramref name="value" />, равное 2, 8, 10 или 16.</param>
      <returns>32-разрядное целое число без знака, которое эквивалентно значению параметра <paramref name="value" />, или 0 (нуль), если <paramref name="value" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="fromBase" /> не равно 2, 8, 10 или 16.  
-или- 
 Значение <paramref name="value" />, представляющее недесятичное число без знака, использовано со знаком минус.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Свойство <paramref name="value" /> имеет значение <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> содержит символ, который не является допустимой цифрой в основании, заданном параметром <paramref name="fromBase" />. Сообщение об исключении указывает, что отсутствуют цифры для преобразования, если первый символ в <paramref name="value" /> недопустим; в противном случае сообщение указывает, что <paramref name="value" /> содержит недопустимые конечные символы.</exception>
      <exception cref="T:System.OverflowException">Значение<paramref name="value" />, представляющее недесятичное число без знака, использовано со знаком минус.  

или - 
Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.UInt32.MinValue" /> или больше <see cref="F:System.UInt32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt32(System.UInt16)">
      <summary>Преобразует значение заданного 16-битового целого числа без знака в эквивалентное 32-битовое целое число без знака.</summary>
      <param name="value">16-разрядное целое число без знака для преобразования.</param>
      <returns>32-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToUInt32(System.UInt32)">
      <summary>Возвращает заданное 32-битовое целое число без знака; фактическое преобразование не производится.</summary>
      <param name="value">Возвращаемое 32-разрядное целое число без знака.</param>
      <returns>
        <paramref name="value" /> возвращается без изменений.</returns>
    </member>
    <member name="M:System.Convert.ToUInt32(System.UInt64)">
      <summary>Преобразует значение заданного 64-разрядного целого числа без знака в эквивалентное 32-разрядное целое число без знака.</summary>
      <param name="value">64-разрядное целое число без знака для преобразования.</param>
      <returns>32-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">Значение <paramref name="value" /> больше значения <see cref="F:System.UInt32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt64(System.Boolean)">
      <summary>Преобразует заданное логическое значение в эквивалентное 64-битовое целое число без знака.</summary>
      <param name="value">Логическое значение, которое необходимо преобразовать.</param>
      <returns>Число 1, если <paramref name="value" /> имеет значение <see langword="true" />; в противном случае — 0.</returns>
    </member>
    <member name="M:System.Convert.ToUInt64(System.Byte)">
      <summary>Преобразует значение заданного 8-битового целого числа без знака в эквивалентное 64-битовое целое число без знака.</summary>
      <param name="value">8-разрядное целое число без знака для преобразования.</param>
      <returns>64-разрядное знаковое целое число, которое эквивалентно значению <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToUInt64(System.Char)">
      <summary>Преобразует значение заданного символа Юникода в эквивалентное 64-битовое целое число без знака.</summary>
      <param name="value">Знак Юникода, который необходимо преобразовать.</param>
      <returns>64-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToUInt64(System.DateTime)">
      <summary>При вызове этого метода всегда возникает исключение <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">Значение даты и времени для преобразования.</param>
      <returns>Данное преобразование не поддерживается. Возвращаемое значение отсутствует.</returns>
      <exception cref="T:System.InvalidCastException">Данное преобразование не поддерживается.</exception>
    </member>
    <member name="M:System.Convert.ToUInt64(System.Decimal)">
      <summary>Преобразует значение заданного десятичного числа в эквивалентное 64-битовое целое число без знака.</summary>
      <param name="value">Десятичное число для преобразования.</param>
      <returns>Значение <paramref name="value" />, округленное до ближайшего 64-разрядного целого числа без знака. Если <paramref name="value" /> имеет среднее значение между двумя целыми числами, будет возвращено четное число; так, значение 4,5 преобразуется в 4, а 5,5 — в 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> меньше нуля или больше <see cref="F:System.UInt64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt64(System.Double)">
      <summary>Преобразует значение заданного числа с плавающей запятой двойной точности в эквивалентное 64-битовое целое число без знака.</summary>
      <param name="value">Число с плавающей запятой двойной точности, которое нужно преобразовать.</param>
      <returns>Значение <paramref name="value" />, округленное до ближайшего 64-разрядного целого числа без знака. Если <paramref name="value" /> имеет среднее значение между двумя целыми числами, будет возвращено четное число; так, значение 4,5 преобразуется в 4, а 5,5 — в 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> меньше нуля или больше <see cref="F:System.UInt64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt64(System.Int16)">
      <summary>Преобразует значение заданного 16-битового целого числа со знаком в эквивалентное 64-битовое целое число без знака.</summary>
      <param name="value">16-разрядное целое число со знаком для преобразования.</param>
      <returns>64-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">Значение параметра <paramref name="value" /> меньше нуля.</exception>
    </member>
    <member name="M:System.Convert.ToUInt64(System.Int32)">
      <summary>Преобразует значение заданного 32-битового целого числа со знаком в эквивалентное 64-битовое целое число без знака.</summary>
      <param name="value">32-разрядное целое число со знаком для преобразования.</param>
      <returns>64-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">Значение параметра <paramref name="value" /> меньше нуля.</exception>
    </member>
    <member name="M:System.Convert.ToUInt64(System.Int64)">
      <summary>Преобразует значение заданного 64-битового целого числа со знаком в эквивалентное 64-битовое целое число без знака.</summary>
      <param name="value">64-разрядное целое число со знаком для преобразования.</param>
      <returns>64-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">Значение параметра <paramref name="value" /> меньше нуля.</exception>
    </member>
    <member name="M:System.Convert.ToUInt64(System.Object)">
      <summary>Преобразует значение заданного объекта в 64-битовое целое число без знака.</summary>
      <param name="value">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />, или значение <see langword="null" />.</param>
      <returns>64-разрядное целое число без знака, эквивалентное значению <paramref name="value" />, или нуль, если <paramref name="value" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">Параметр <paramref name="value" /> имеет неправильный формат.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> не реализует интерфейс <see cref="T:System.IConvertible" />.  
-или- 
Преобразование не поддерживается.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.UInt64.MinValue" /> или больше <see cref="F:System.UInt64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt64(System.Object,System.IFormatProvider)">
      <summary>Преобразует значение заданного объекта в эквивалентное 64-битовое целое число без знака, используя указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</summary>
      <param name="value">Объект, реализующий интерфейс <see cref="T:System.IConvertible" />.</param>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <returns>64-разрядное целое число без знака, эквивалентное значению <paramref name="value" />, или нуль, если <paramref name="value" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">Параметр <paramref name="value" /> имеет неправильный формат.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> не реализует интерфейс <see cref="T:System.IConvertible" />.  

или - 
Преобразование не поддерживается.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.UInt64.MinValue" /> или больше <see cref="F:System.UInt64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt64(System.SByte)">
      <summary>Преобразует значение заданного 8-битового целого числа со знаком в эквивалентное 64-битовое целое число без знака.</summary>
      <param name="value">8-разрядное целое число со знаком для преобразования.</param>
      <returns>64-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">Значение параметра <paramref name="value" /> меньше нуля.</exception>
    </member>
    <member name="M:System.Convert.ToUInt64(System.Single)">
      <summary>Преобразует значение заданного числа с плавающей запятой одиночной точности в эквивалентное 64-битовое целое число без знака.</summary>
      <param name="value">Число с плавающей запятой одиночной точности, которое нужно преобразовать.</param>
      <returns>Значение <paramref name="value" />, округленное до ближайшего 64-разрядного целого числа без знака. Если <paramref name="value" /> имеет среднее значение между двумя целыми числами, будет возвращено четное число; так, значение 4,5 преобразуется в 4, а 5,5 — в 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> меньше нуля или больше <see cref="F:System.UInt64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt64(System.String)">
      <summary>Преобразует заданное строковое представление числа в эквивалентное 64-битовое целое число без знака.</summary>
      <param name="value">Строка, содержащая преобразуемое число.</param>
      <returns>64-разрядное знаковое целое число, которое эквивалентно значению параметра <paramref name="value" />, или 0 (нуль), если <paramref name="value" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> не состоит из необязательного знака, за которым следует последовательность цифр (0–9).</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.UInt64.MinValue" /> или больше <see cref="F:System.UInt64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt64(System.String,System.IFormatProvider)">
      <summary>Преобразует заданное строковое представление числа в эквивалентное 64-битовое целое число без знака, учитывая указанные сведения об особенностях форматирования, связанных с языком и региональными параметрами.</summary>
      <param name="value">Строка, содержащая преобразуемое число.</param>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <returns>64-разрядное целое число без знака, которое эквивалентно значению параметра <paramref name="value" />, или 0 (нуль), если <paramref name="value" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> не состоит из необязательного знака, за которым следует последовательность цифр (0–9).</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> представляет число меньше <see cref="F:System.UInt64.MinValue" /> или больше <see cref="F:System.UInt64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt64(System.String,System.Int32)">
      <summary>Преобразует строковое представление числа с указанным основанием системы счисления в эквивалентное ему 64-битовое целое число без знака.</summary>
      <param name="value">Строка, содержащая преобразуемое число.</param>
      <param name="fromBase">Основание системы счисления, используемой для представления числа, заданного в параметре <paramref name="value" />, равное 2, 8, 10 или 16.</param>
      <returns>64-разрядное целое число без знака, которое эквивалентно значению параметра <paramref name="value" />, или 0 (нуль), если <paramref name="value" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="fromBase" /> не равно 2, 8, 10 или 16.  
-или- 
 Значение <paramref name="value" />, представляющее недесятичное число без знака, использовано со знаком минус.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> — <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> содержит символ, который не является допустимой цифрой в основании, заданном параметром <paramref name="fromBase" />. Сообщение об исключении указывает, что отсутствуют цифры для преобразования, если первый символ в <paramref name="value" /> недопустим; в противном случае сообщение указывает, что <paramref name="value" /> содержит недопустимые конечные символы.</exception>
      <exception cref="T:System.OverflowException">Значение<paramref name="value" />, представляющее недесятичное число без знака, использовано со знаком минус.  

или - 
Параметр <paramref name="value" /> представляет число, которое меньше <see cref="F:System.UInt64.MinValue" /> или больше <see cref="F:System.UInt64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt64(System.UInt16)">
      <summary>Преобразует значение заданного 16-битового целого числа без знака в эквивалентное 64-битовое целое число без знака.</summary>
      <param name="value">16-разрядное целое число без знака для преобразования.</param>
      <returns>64-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToUInt64(System.UInt32)">
      <summary>Преобразует значение заданного 32-битового целого числа без знака в эквивалентное 64-битовое целое число без знака.</summary>
      <param name="value">32-разрядное целое число без знака для преобразования.</param>
      <returns>64-разрядное целое число без знака, которое эквивалентно значению <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToUInt64(System.UInt64)">
      <summary>Возвращает заданное 64-битовое целое число без знака; фактическое преобразование не производится.</summary>
      <param name="value">Возвращаемое 64-разрядное целое число без знака.</param>
      <returns>
        <paramref name="value" /> возвращается без изменений.</returns>
    </member>
    <member name="M:System.Convert.TryFromBase64Chars(System.ReadOnlySpan{System.Char},System.Span{System.Byte},System.Int32@)">
      <param name="chars" />
      <param name="bytes" />
      <param name="bytesWritten" />
    </member>
    <member name="M:System.Convert.TryFromBase64String(System.String,System.Span{System.Byte},System.Int32@)">
      <param name="s" />
      <param name="bytes" />
      <param name="bytesWritten" />
    </member>
    <member name="M:System.Convert.TryToBase64Chars(System.ReadOnlySpan{System.Byte},System.Span{System.Char},System.Int32@,System.Base64FormattingOptions)">
      <param name="bytes" />
      <param name="chars" />
      <param name="charsWritten" />
      <param name="options" />
    </member>
    <member name="T:System.Diagnostics.Stopwatch">
      <summary>Предоставляет набор методов и свойств, которые можно использовать для точного измерения затраченного времени.</summary>
    </member>
    <member name="M:System.Diagnostics.Stopwatch.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Stopwatch" />.</summary>
    </member>
    <member name="P:System.Diagnostics.Stopwatch.Elapsed">
      <summary>Получает общее затраченное время, измеренное текущим экземпляром.</summary>
      <returns>Доступный только для чтения экземпляр <see cref="T:System.TimeSpan" /> представляет общее затраченное время, измеренное текущим экземпляром.</returns>
    </member>
    <member name="P:System.Diagnostics.Stopwatch.ElapsedMilliseconds">
      <summary>Получает общее затраченное время в миллисекундах, измеренное текущим экземпляром.</summary>
      <returns>Доступное только для чтения длинное целое число, представляющее общее число миллисекунд, измеренное текущим экземпляром.</returns>
    </member>
    <member name="P:System.Diagnostics.Stopwatch.ElapsedTicks">
      <summary>Получает общее затраченное время в тактах таймера, измеренное текущим экземпляром.</summary>
      <returns>Доступное только для чтения длинное целое число, представляющее общее число тактов таймера, измеренное текущим экземпляром.</returns>
    </member>
    <member name="F:System.Diagnostics.Stopwatch.Frequency">
      <summary>Получает частоту таймера в виде количества тактов в секунду. Это поле доступно только для чтения.</summary>
    </member>
    <member name="M:System.Diagnostics.Stopwatch.GetTimestamp">
      <summary>Получает текущее число тактов временного механизма.</summary>
      <returns>Длинное целое число со знаком, представляющее значение счетчика тактов базового механизма таймера.</returns>
    </member>
    <member name="F:System.Diagnostics.Stopwatch.IsHighResolution">
      <summary>Указывает, зависит ли таймер от счетчика производительности высокого разрешения. Это поле доступно только для чтения.</summary>
    </member>
    <member name="P:System.Diagnostics.Stopwatch.IsRunning">
      <summary>Получает значение, указывающее, запущен ли таймер <see cref="T:System.Diagnostics.Stopwatch" />.</summary>
      <returns>Значение<see langword="true" /> , если экземпляр <see cref="T:System.Diagnostics.Stopwatch" /> в настоящее время выполняется и измеряет затраченное время интервала; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Stopwatch.Reset">
      <summary>Останавливает измерение интервала времени и обнуляет затраченное время.</summary>
    </member>
    <member name="M:System.Diagnostics.Stopwatch.Restart">
      <summary>Останавливает измерение интервала времени, обнуляет затраченное время и начинает измерение затраченного времени.</summary>
    </member>
    <member name="M:System.Diagnostics.Stopwatch.Start">
      <summary>Запускает или возобновляет измерение затраченного времени для интервала.</summary>
    </member>
    <member name="M:System.Diagnostics.Stopwatch.StartNew">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Stopwatch" />, задает свойство затраченного времени равным нулю и запускает измерение затраченного времени.</summary>
      <returns>Экземпляр <see cref="T:System.Diagnostics.Stopwatch" />, который только что начал измерять затраченное время.</returns>
    </member>
    <member name="M:System.Diagnostics.Stopwatch.Stop">
      <summary>Останавливает измерение затраченного времени для интервала.</summary>
    </member>
    <member name="T:System.Environment">
      <summary>Предоставляет сведения о текущей среде и платформе, а также необходимые для управления ими средства. Этот класс не наследуется.</summary>
    </member>
    <member name="P:System.Environment.CommandLine">
      <summary>Возвращает командную строку для данного процесса.</summary>
      <returns>Строка, содержащая аргументы командной строки.</returns>
    </member>
    <member name="P:System.Environment.CurrentDirectory">
      <summary>Возвращает или задает полный путь к текущей рабочей папке.</summary>
      <returns>Строка, содержащая путь к каталогу.</returns>
      <exception cref="T:System.ArgumentException">Попытка задать пустую строку ("").</exception>
      <exception cref="T:System.ArgumentNullException">Попытка установить значение <see langword="null." />.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода/вывода.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Попытка установить локальный путь, который не удается найти.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует соответствующее разрешение.</exception>
    </member>
    <member name="P:System.Environment.CurrentManagedThreadId">
      <summary>Возвращает уникальный идентификатор текущего управляемого потока.</summary>
      <returns>Целочисленное значение, представляющее уникальный идентификатор для этого управляемого потока.</returns>
    </member>
    <member name="M:System.Environment.Exit(System.Int32)">
      <summary>Завершает этот процесс и возвращает код выхода операционной системе.</summary>
      <param name="exitCode">Код выхода, возвращаемый операционной системе. Чтобы указать, что процесс прошел успешно, следует использовать 0 (ноль).</param>
      <exception cref="T:System.Security.SecurityException">Вызывающий объект не имеет достаточных разрешений на выполнение этой функции.</exception>
    </member>
    <member name="P:System.Environment.ExitCode">
      <summary>Возвращает или задает код выхода из процесса.</summary>
      <returns>32-битовое целое число со знаком, содержащее код выхода. Значение по умолчанию 0 (нуль), что соответствует успешно выполненному процессу.</returns>
    </member>
    <member name="M:System.Environment.ExpandEnvironmentVariables(System.String)">
      <summary>Замещает имя каждой переменной среды, внедренной в указанную строку, строчным эквивалентом значения переменной, а затем возвращает результирующую строку.</summary>
      <param name="name">Строка, содержащая либо не содержащая имена переменных среды. Каждая переменная среды с двух сторон окружена знаками процента (%).</param>
      <returns>Строка, в которой каждая переменная среды замещена ее значением.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="name" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Environment.FailFast(System.String)">
      <summary>Завершает процесс сразу после записи сообщения в журнал событий приложений Windows, после чего включает сообщение в отчет об ошибках, отправляемый в корпорацию Майкрософт.</summary>
      <param name="message">Сообщение, в котором объясняется причина завершения процесса или содержится значение <see langword="null" />, если объяснение отсутствует.</param>
    </member>
    <member name="M:System.Environment.FailFast(System.String,System.Exception)">
      <summary>Завершает процесс сразу после записи сообщения в журнал событий приложений Windows, после чего включает сообщение и сведения об исключении в отчет об ошибках, отправляемый в корпорацию Майкрософт.</summary>
      <param name="message">Сообщение, в котором объясняется причина завершения процесса или содержится значение <see langword="null" />, если объяснение отсутствует.</param>
      <param name="exception">Исключение, представляющее ошибку, вызвавшую завершение процесса. Обычно это исключение в блоке <see langword="catch" />.</param>
    </member>
    <member name="M:System.Environment.GetCommandLineArgs">
      <summary>Возвращает строковый массив, содержащий аргументы командной строки для текущего процесса.</summary>
      <returns>Массив строк, каждый элемент которого содержит аргумент командной строки. Первым элементом является имя исполняемого файла. Последующие элементы, если они существуют, содержат аргументы командной строки.</returns>
      <exception cref="T:System.NotSupportedException">Система не поддерживает аргументы командной строки.</exception>
    </member>
    <member name="M:System.Environment.GetEnvironmentVariable(System.String)">
      <summary>Возвращает из текущего процесса значение переменной среды.</summary>
      <param name="variable">Имя переменной среды.</param>
      <returns>Значение переменной среды, заданное параметром <paramref name="variable" /> или значение <see langword="null" />, если переменная среды не найдена.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="variable" /> — <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение для выполнения этой операции.</exception>
    </member>
    <member name="M:System.Environment.GetEnvironmentVariable(System.String,System.EnvironmentVariableTarget)">
      <summary>Возвращает из текущего процесса или раздела реестра операционной системы Windows значение переменной среды для текущего пользователя или локального компьютера.</summary>
      <param name="variable">Имя переменной среды.</param>
      <param name="target">Одно из значений перечисления <see cref="T:System.EnvironmentVariableTarget" />. На платформе .NET Core, работающей в системах UNIX, поддерживается только <see cref="F:System.EnvironmentVariableTarget.Process" />.</param>
      <returns>Значение переменной среды, заданное параметрами <paramref name="variable" /> и <paramref name="target" /> или значение <see langword="null" />, если переменная среды не найдена.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="variable" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> не является допустимым значением <see cref="T:System.EnvironmentVariableTarget" />.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение для выполнения этой операции.</exception>
    </member>
    <member name="M:System.Environment.GetEnvironmentVariables">
      <summary>Возвращает из текущего процесса имена всех переменных среды и их значения.</summary>
      <returns>Словарь, в котором содержатся имена всех переменных среды и их значения; в противном случае, если переменные среды не найдены, — пустой словарь.</returns>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение для выполнения этой операции.</exception>
      <exception cref="T:System.OutOfMemoryException">Недостаточно памяти буфера.</exception>
    </member>
    <member name="M:System.Environment.GetEnvironmentVariables(System.EnvironmentVariableTarget)">
      <summary>Возвращает из текущего процесса или раздела реестра операционной системы Windows имена и значения всех переменных среды для текущего пользователя или локального компьютера.</summary>
      <param name="target">Одно из значений перечисления <see cref="T:System.EnvironmentVariableTarget" />. На платформе .NET Core, работающей в системах UNIX, поддерживается только .</param>
      <returns>Словарь, в котором содержатся имена всех переменных среды и их значения, извлеченные из источника, заданного параметром <paramref name="target" />; в противном случае, если переменные среды не найдены, — пустой словарь.</returns>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение для выполнения этой операции для указанного значения <paramref name="target" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> содержит недопустимое значение.</exception>
    </member>
    <member name="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder)">
      <summary>Возвращает путь к особой системной папке, указанной в заданном перечислении.</summary>
      <param name="folder">Одно из значений перечисления, указывающее особую системную папку.</param>
      <returns>Путь к указанной особой системной папке, если эта папка физически существует на компьютере; в противном случае — пустая строка ("").  
 Папка физически не существует, если она не была создана операционной системой, была удалена или является виртуальным каталогом, таким как "Мой компьютер", которому не сопоставлен физический путь.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="folder" /> не является членом <see cref="T:System.Environment.SpecialFolder" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Текущая платформа не поддерживается.</exception>
    </member>
    <member name="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder,System.Environment.SpecialFolderOption)">
      <summary>Получает путь к особой системной папке, указанной в заданном перечислении, и использует заданный параметр для доступа к особым папкам.</summary>
      <param name="folder">Одно из значений перечисления, указывающее особую системную папку.</param>
      <param name="option">Одно из значений перечисления, указывающее параметры доступа к особой папке.</param>
      <returns>Путь к указанной особой системной папке, если эта папка физически существует на компьютере; в противном случае — пустая строка ("").  
 Папка физически не существует, если она не была создана операционной системой, была удалена или является виртуальным каталогом, таким как "Мой компьютер", которому не сопоставлен физический путь.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="folder" /> не является членом <see cref="T:System.Environment.SpecialFolder" />.

или -

<paramref name="options" /> не является членом <see cref="T:System.Environment.SpecialFolderOption" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Текущая платформа не поддерживается.</exception>
    </member>
    <member name="M:System.Environment.GetLogicalDrives">
      <summary>Возвращает массив строк, содержащий имена логических дисков текущего компьютера.</summary>
      <returns>Массив строк, в каждом элементе которого содержится имя логического диска. Например, если первым логическим диском является жесткий диск компьютера, первым возвращаемым элементом будет "C:\".</returns>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствуют необходимые разрешения.</exception>
    </member>
    <member name="P:System.Environment.HasShutdownStarted">
      <summary>Возвращает значение, указывающее, выгружается ли текущий домен приложения или среда CLR завершает работу.</summary>
      <returns>
        <see langword="true" />значение, если текущий домен приложения выгружается или среда CLR завершает работу. в противном случае —. <see langword="false" /></returns>
    </member>
    <member name="P:System.Environment.Is64BitOperatingSystem">
      <summary>Определяет, является ли текущая операционная система 64-разрядной.</summary>
      <returns>Значение <see langword="true" />, если операционная система является 64-разрядной; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Environment.Is64BitProcess">
      <summary>Определяет, является ли текущий процесс 64-разрядным.</summary>
      <returns>Значение <see langword="true" />, если процесс является 64-разрядным; в противном случае —значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Environment.MachineName">
      <summary>Возвращает имя NetBIOS данного локального компьютера.</summary>
      <returns>Строка, содержащая имя данного компьютера.</returns>
      <exception cref="T:System.InvalidOperationException">Не удается получить имя этого компьютера.</exception>
    </member>
    <member name="P:System.Environment.NewLine">
      <summary>Возвращает строку, обозначающую в данной среде начало новой строки.</summary>
      <returns>Строка, содержащая "\r\n" для платформ, отличных от Unix, или строка, содержащая "\n" для платформ Unix.</returns>
    </member>
    <member name="P:System.Environment.OSVersion">
      <summary>Возвращает объект <see cref="T:System.OperatingSystem" />, который содержит идентификатор текущей платформы и номер версии.</summary>
      <returns>Объект, который содержит идентификатор платформы и номер версии.</returns>
      <exception cref="T:System.InvalidOperationException">Это свойство не смогло получить версию системы.  
-или- 
Полученный идентификатор платформы не является членом <see cref="T:System.PlatformID" />.</exception>
    </member>
    <member name="P:System.Environment.ProcessorCount">
      <summary>Возвращает число процессоров на текущем компьютере.</summary>
      <returns>32-битовое целое число со знаком, которое задает количество процессоров на текущем компьютере. Значение по умолчанию отсутствует. Если текущий компьютер содержит несколько групп процессоров, данное свойство возвращает число логических процессоров, доступных для использования средой CLR.</returns>
    </member>
    <member name="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
      <summary>Создает, изменяет или удаляет переменную среды, хранящуюся в текущем процессе.</summary>
      <param name="variable">Имя переменной среды.</param>
      <param name="value">Значение, которое необходимо присвоить параметру <paramref name="variable" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="variable" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="variable" /> содержит строку нулевой длины, начальный шестнадцатеричный символ нуля (0x00) или знак равенства ("=").  

или - 
Длина параметра <paramref name="variable" /> или <paramref name="value" /> больше или равна 32 767 символам.  

-или- 
Во время выполнения этой операции произошла ошибка.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение для выполнения этой операции.</exception>
    </member>
    <member name="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
      <summary>Создает, изменяет или удаляет переменную среды, хранящуюся в текущем процессе или разделе реестра операционной системы Windows, зарезервированном для текущего пользователя или локального компьютера.</summary>
      <param name="variable">Имя переменной среды.</param>
      <param name="value">Значение, которое необходимо присвоить параметру <paramref name="variable" />.</param>
      <param name="target">Одно из значений перечисления, указывающее местоположение переменной среды.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="variable" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="variable" /> содержит строку нулевой длины, начальный шестнадцатеричный символ нуля (0x00) или знак равенства ("=").  

или - 
Длина параметра <paramref name="variable" /> составляет больше или ровно 32 767 символов.  

или - 
Элемент<paramref name="target" /> не является элементом перечисления <see cref="T:System.EnvironmentVariableTarget" /> .  


-или- 
 <paramref name="target" /> — <see cref="F:System.EnvironmentVariableTarget.Machine" /> или <see cref="F:System.EnvironmentVariableTarget.User" />, а длина параметра <paramref name="variable" /> больше или равна 255.  
-или- 
 <paramref name="target" /> — <see cref="F:System.EnvironmentVariableTarget.Process" /> , а длина параметра <paramref name="value" /> больше или равна 32 767 символам.  
-или- 
Во время выполнения этой операции произошла ошибка.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение для выполнения этой операции.</exception>
    </member>
    <member name="T:System.Environment.SpecialFolder">
      <summary>Указывает перечислимые константы, используемые для получения путей к системным особым папкам.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.AdminTools">
      <summary>Каталог файловой системы, используемый для хранения инструментов администрирования для отдельного пользователя. Консоль управления (MMC) сохраняет настроенные консоли в этом каталоге, и он будет перемещаться вслед за пользователем. Добавлено в .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.ApplicationData">
      <summary>Каталог, выполняющий функции общего репозитория для данных приложения текущего перемещающегося пользователя. Пользователь с перемещаемым профилем работает на более чем одном компьютере в сети. Перемещаемый профиль пользователя хранится на сервере в сети и загружается в систему при входе пользователя.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CDBurning">
      <summary>Каталог файловой системы, выполняющий функции области промежуточного хранения для файлов, ожидающих записи на компакт-диск. Добавлено в .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonAdminTools">
      <summary>Каталог файловой системы, содержащий инструменты администрирования для всех пользователей компьютера. Добавлено в .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonApplicationData">
      <summary>Каталог, выполняющий функции общего репозитория для данных приложения, используемого всеми пользователями.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonDesktopDirectory">
      <summary>Каталог файловой системы, содержащий файлы и папки, отображающиеся на рабочих столах всех пользователей. Эта особая папка действительна только для систем Windows NT. Добавлено в .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonDocuments">
      <summary>Каталог файловой системы, содержащий документы, общие для всех пользователей. Эта особая папка действительна для систем Windows NT, Windows 95 и Windows 98 с установленной библиотекой Shfolder.dll. Добавлено в .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonMusic">
      <summary>Каталог файловой системы, служащий репозиторием музыкальных файлов, общих для всех пользователей. Добавлено в .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonOemLinks">
      <summary>Это значение распознается ОС Windows Vista для обратной совместимости, но сама эта особая папка больше не используется. Добавлено в .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonPictures">
      <summary>Каталог файловой системы, служащий репозиторием файлов изображений, общих для всех пользователей. Добавлено в .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonProgramFiles">
      <summary>Каталог для компонентов, общих для приложений.  
Для получения общего каталога программных файлов x86 в системе не на базе x86 используйте член <see cref="F:System.Environment.SpecialFolder.ProgramFilesX86" />.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonProgramFilesX86">
      <summary>Папка Program Files. Добавлено в .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonPrograms">
      <summary>Папка для компонентов, совместно используемых несколькими приложениями. Эта особая папка действительна только для систем Windows NT, Windows 2000 и Windows XP. Добавлено в .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonStartMenu">
      <summary>Каталог файловой системы, содержащий программы и папки, отображающиеся в меню Пуск для всех пользователей. Эта особая папка действительна только для систем Windows NT. Добавлено в .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonStartup">
      <summary>Каталог файловой системы, содержащий программы и папки, отображающиеся в папке Автозагрузка для всех пользователей. Эта особая папка действительна только для систем Windows NT. Добавлено в .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonTemplates">
      <summary>Каталог файловой системы, содержащий шаблоны, доступные всем пользователям. Эта особая папка действительна только для систем Windows NT.  Добавлено в .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonVideos">
      <summary>Каталог файловой системы, служащий репозиторием файлов видеозаписей, общих для всех пользователей. Добавлено в .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Cookies">
      <summary>Каталог, служащий общим репозиторием файлов cookie Интернета.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Desktop">
      <summary>Логический рабочий стол, а не физическое местоположение файлов системы.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.DesktopDirectory">
      <summary>Каталог, используемый для физического хранения файловых объектов рабочего стола. Не путайте этот каталог с папкой рабочего стола, которая является виртуальной папкой.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Favorites">
      <summary>Каталог, служащий общим репозиторием для избранных элементов пользователя.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Fonts">
      <summary>Виртуальная папка, содержащая шрифты. Добавлено в .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.History">
      <summary>Каталог, служащий общим репозиторием элементов журнала Интернета.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.InternetCache">
      <summary>Каталог, служащий общим репозиторием временных файлов Интернета.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.LocalApplicationData">
      <summary>Каталог, служащий общим репозиторием данных приложения, используемых текущим пользователем, который не перемещается.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.LocalizedResources">
      <summary>Каталог файловой системы, содержащий локализованные данные ресурсов. Добавлено в .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.MyComputer">
      <summary>Папка Мой компьютер. При передаче методу <see langword="Environment.GetFolderPath" /> член перечисления <see langword="MyComputer" /> всегда выдает пустую строку (""), так как для папки "Мой компьютер" не определен путь.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.MyDocuments">
      <summary>Папка Мои документы. Этот член эквивалентен <see cref="F:System.Environment.SpecialFolder.Personal" />.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.MyMusic">
      <summary>Папка Моя музыка.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.MyPictures">
      <summary>Папка Мои рисунки.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.MyVideos">
      <summary>Каталог файловой системы, служащий репозиторием файлов видеозаписей, принадлежащих пользователю.  Добавлено в .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.NetworkShortcuts">
      <summary>Каталог файловой системы, содержащий объекты ссылок, которые могут существовать в виртуальной папке Сетевое окружение. Добавлено в .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Personal">
      <summary>Каталог, служащий общим репозиторием для документов.  Этот член эквивалентен <see cref="F:System.Environment.SpecialFolder.MyDocuments" />.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.PrinterShortcuts">
      <summary>Каталог файловой системы, содержащий объекты ссылок, которые могут существовать в виртуальной папке Принтеры. Добавлено в .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.ProgramFiles">
      <summary>Каталог файлов программ.  
В системе не на базе x86 передача <see cref="F:System.Environment.SpecialFolder.ProgramFiles" /> методу <see cref="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder)" /> возвращает путь для программ не для 32-разрядных систем. Для получения каталога программных файлов x86 в системе не на базе x86 используйте член <see cref="F:System.Environment.SpecialFolder.ProgramFilesX86" />.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.ProgramFilesX86">
      <summary>Папка Program Files x86. Добавлено в .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Programs">
      <summary>Каталог, содержащий группы программ пользователя.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Recent">
      <summary>Каталог, содержащий недавно использовавшиеся документы.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Resources">
      <summary>Каталог файловой системы, содержащий данные ресурсов. Добавлено в .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.SendTo">
      <summary>Каталог, содержащий пункты меню «Отправить».</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.StartMenu">
      <summary>Каталог, содержащий пункты меню «Пуск».</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Startup">
      <summary>Каталог, соответствующий группе программ пользователя «Автозагрузка». Система запускает эти программы при входе пользователя в систему или при запуске Windows.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.System">
      <summary>Каталог System.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.SystemX86">
      <summary>Папка System ОС Windows. Добавлено в .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Templates">
      <summary>Каталог, служащий общим репозиторием для шаблонов документов.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.UserProfile">
      <summary>Папка профиля пользователя. Приложения не должны создавать файлы или папки на этом уровне; они должны помещать свои данные в местоположения, на которые указывает поле <see cref="F:System.Environment.SpecialFolder.ApplicationData" />. Добавлено в .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Windows">
      <summary>Каталог Windows или SYSROOT. Это соответствует переменным среды %windir% и %SYSTEMROOT%. Добавлено в .NET Framework 4.</summary>
    </member>
    <member name="T:System.Environment.SpecialFolderOption">
      <summary>Задает параметры, используемые для получения пути к особой папке.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolderOption.Create">
      <summary>Создается путь к папке, если она еще не существует.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolderOption.DoNotVerify">
      <summary>Путь к папке возвращается без проверки наличия пути. Если папка расположена в сети, задание этого параметра может сократить время запаздывания.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolderOption.None">
      <summary>Проверяется путь к папке. Если папка существует, возвращается путь. Если папка не существует, возвращается пустая строка. Это поведение установлено по умолчанию.</summary>
    </member>
    <member name="P:System.Environment.StackTrace">
      <summary>Возвращает текущие сведения о трассировке стека.</summary>
      <returns>Строка, содержащая сведения о трассировке стека. Это значение может быть равно <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="P:System.Environment.SystemDirectory">
      <summary>Возвращает полный путь к системному каталогу.</summary>
      <returns>Строка, содержащая путь к каталогу.</returns>
    </member>
    <member name="P:System.Environment.SystemPageSize">
      <summary>Возвращает количество байтов на странице памяти операционной системы.</summary>
      <returns>Количество в байтах в странице памяти системы.</returns>
    </member>
    <member name="P:System.Environment.TickCount">
      <summary>Возвращает время, истекшее с момента загрузки системы (в миллисекундах).</summary>
      <returns>32-битовое целое число со знаком, содержащее время, истекшее с момента с последней загрузки системы (в миллисекундах).</returns>
    </member>
    <member name="P:System.Environment.TickCount64">
      <summary>Возвращает время, истекшее с момента загрузки системы (в миллисекундах).</summary>
      <returns>Прошло миллисекунд с момента запуска системы.</returns>
    </member>
    <member name="P:System.Environment.UserDomainName">
      <summary>Возвращает имя сетевого домена, связанное с текущим пользователем.</summary>
      <returns>Имя сетевого домена, связанное с текущим пользователем.</returns>
      <exception cref="T:System.PlatformNotSupportedException">Операционная система не поддерживает получение имени сетевого домена.</exception>
      <exception cref="T:System.InvalidOperationException">Не удалось получить имя сетевого домена.</exception>
    </member>
    <member name="P:System.Environment.UserInteractive">
      <summary>Возвращает значение, позволяющее определить, выполняется ли текущий процесс в режиме взаимодействия с пользователем.</summary>
      <returns>Значение<see langword="true" /> , если текущий процесс выполняется в режиме взаимодействия с пользователем; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Environment.UserName">
      <summary>Возвращает имя пользователя, который на данный момент выполнил вход в операционную систему.</summary>
      <returns>Имя пользователя, выполнившего вход в операционную систему.</returns>
    </member>
    <member name="P:System.Environment.Version">
      <summary>Возвращает объект <see cref="T:System.Version" />, который описывает основной и дополнительный номера, а также номер построения и редакции среды CLR.</summary>
      <returns>Объект, содержащий версию среды CLR.</returns>
    </member>
    <member name="P:System.Environment.WorkingSet">
      <summary>Возвращает объем физической памяти, сопоставленной контексту процесса.</summary>
      <returns>Целое 64-битовое число со знаком, содержащее число байтов физической памяти, сопоставленное контексту процесса.</returns>
    </member>
    <member name="T:System.EnvironmentVariableTarget">
      <summary>Задает расположение, в котором хранится переменная среды, или из которого она извлекается при выполнении операции Set или Get.</summary>
    </member>
    <member name="F:System.EnvironmentVariableTarget.Machine">
      <summary>Переменная среды хранится в разделе реестра <see langword="HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Session Manager\Environment" /> операционной системы Windows или извлекается из этого раздела. Это значение следует использовать в реализациях .NET только в системах Windows.</summary>
    </member>
    <member name="F:System.EnvironmentVariableTarget.Process">
      <summary>Переменная среды хранится в блоке переменных среды, связанном с текущим процессом, или извлекается из этого блока.</summary>
    </member>
    <member name="F:System.EnvironmentVariableTarget.User">
      <summary>Переменная среды хранится в разделе реестра <see langword="HKEY_CURRENT_USER\Environment" /> операционной системы Windows или извлекается из этого раздела. Это значение следует использовать в реализациях .NET только в системах Windows.</summary>
    </member>
    <member name="T:System.Globalization.GlobalizationExtensions">
      <summary>Предоставляет методы расширения, относящиеся к глобализации.</summary>
    </member>
    <member name="M:System.Globalization.GlobalizationExtensions.GetStringComparer(System.Globalization.CompareInfo,System.Globalization.CompareOptions)">
      <summary>Возвращает <see cref="T:System.StringComparer" /> в соответствии с правилами сравнения строк с учетом языка и региональных параметров указанного объекта <see cref="T:System.Globalization.CompareInfo" />.</summary>
      <param name="compareInfo">Объект, поддерживающий сравнение строк с учетом языка и региональных параметров.</param>
      <param name="options">Значение, определяющее способ сравнения строк. <paramref name="options" /> является значением перечисления <see cref="F:System.Globalization.CompareOptions.Ordinal" />, значением перечисления <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> или побитовой комбинацией одного или нескольких следующих значений: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> и <see cref="F:System.Globalization.CompareOptions.StringSort" />.</param>
      <returns>Объект, который может использоваться для сравнения строк.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="compareInfo" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="options" /> недопустим.</exception>
    </member>
    <member name="T:System.IO.BinaryReader">
      <summary>Считывает примитивные типы данных как двоичные значения в заданной кодировке.</summary>
    </member>
    <member name="M:System.IO.BinaryReader.#ctor(System.IO.Stream)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.BinaryReader" /> на основании указанного потока с использованием кодировки UTF-8.</summary>
      <param name="input">Входной поток.</param>
      <exception cref="T:System.ArgumentException">Поток не поддерживает чтение, имеет значение <see langword="null" /> или уже закрыт.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.BinaryReader" /> на основе указанного потока и кодировки символов.</summary>
      <param name="input">Входной поток.</param>
      <param name="encoding">Кодировка символов, которую нужно использовать.</param>
      <exception cref="T:System.ArgumentException">Поток не поддерживает чтение, имеет значение <see langword="null" /> или уже закрыт.</exception>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="encoding" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.BinaryReader" /> на основе указанного потока и кодировки символов, а также при необходимости оставляет поток открытым.</summary>
      <param name="input">Входной поток.</param>
      <param name="encoding">Кодировка символов, которую нужно использовать.</param>
      <param name="leaveOpen">Значение <see langword="true" />, чтобы оставить поток открытым после удаления объекта <see cref="T:System.IO.BinaryReader" />; в противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException">Поток не поддерживает чтение, имеет значение <see langword="null" /> или уже закрыт.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="encoding" /> или <paramref name="input" /> — <see langword="null" />.</exception>
    </member>
    <member name="P:System.IO.BinaryReader.BaseStream">
      <summary>Предоставляет доступ к базовому потоку объекта <see cref="T:System.IO.BinaryReader" />.</summary>
      <returns>Базовый поток, связанный с объектом <see langword="BinaryReader" />.</returns>
    </member>
    <member name="M:System.IO.BinaryReader.Close">
      <summary>Закрывает текущий поток чтения и связанный с ним базовый поток.</summary>
    </member>
    <member name="M:System.IO.BinaryReader.Dispose">
      <summary>Освобождает все ресурсы, используемые текущим экземпляром класса <see cref="T:System.IO.BinaryReader" />.</summary>
    </member>
    <member name="M:System.IO.BinaryReader.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые классом <see cref="T:System.IO.BinaryReader" /> (при необходимости освобождает и управляемые ресурсы).</summary>
      <param name="disposing">Значение <see langword="true" /> позволяет освободить управляемые и неуправляемые ресурсы; значение <see langword="false" /> позволяет освободить только неуправляемые ресурсы.</param>
    </member>
    <member name="M:System.IO.BinaryReader.FillBuffer(System.Int32)">
      <summary>Заполняет внутренний буфер указанным количеством байтов, которые были cчитаны из потока.</summary>
      <param name="numBytes">Количество байтов, чтение которых необходимо выполнить.</param>
      <exception cref="T:System.IO.EndOfStreamException">Конец потока достигнут раньше, чем было выполнено чтение <paramref name="numBytes" /> байтов.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Запрошенное значение <paramref name="numBytes" /> превышает размер внутреннего буфера.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.PeekChar">
      <summary>Возвращает следующий доступный для чтения символ, не перемещая позицию байта или символа вперед.</summary>
      <returns>Следующий доступный символ или значение -1, если в потоке больше нет символов, или поток не поддерживает поиск.</returns>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
      <exception cref="T:System.ArgumentException">Текущий символ не может быт декодирован в буфер внутренних символов с помощью <see cref="T:System.Text.Encoding" />, выбранного для потока.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.Read">
      <summary>Выполняет чтение знаков из базового потока и перемещает текущую позицию в потоке вперед в соответствии с используемым значением <see langword="Encoding" /> и конкретным знаком в потоке, чтение которого выполняется в настоящий момент.</summary>
      <returns>Следующий символ из входного потока или значение -1, если в настоящее время доступных символов нет.</returns>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>Считывает указанное количество байтов из потока, начиная с заданной точки в массиве байтов.</summary>
      <param name="buffer">Буфер, в который необходимо считать данные.</param>
      <param name="index">Стартовая точка в буфере, начиная с которой считываемые данные записываются в буфер.</param>
      <param name="count">Количество байтов, чтение которых необходимо выполнить.</param>
      <returns>Количество байтов, считанных в <paramref name="buffer" />. Количество символов может быть меньше указанного числа, если в потоке осталось меньше байтов, чем следует считать. Количество символов также может равняться нулю, если достигнут конец потока.</returns>
      <exception cref="T:System.ArgumentException">Длина буфера минус <paramref name="index" /> меньше <paramref name="count" />.  
-или- 
Число декодированных знаков для чтения больше, чем <paramref name="count" />. Это может произойти, если декодер Юникода возвращает резервные символы или суррогатную пару.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> или <paramref name="count" /> является отрицательным значением.</exception>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)">
      <summary>Считывает указанное количество символов из потока, начиная с заданной точки в массиве символов.</summary>
      <param name="buffer">Буфер, в который необходимо считать данные.</param>
      <param name="index">Стартовая точка в буфере, начиная с которой считываемые данные записываются в буфер.</param>
      <param name="count">Количество символов, которые необходимо считать.</param>
      <returns>Общее количество символов, считанных в буфер. Количество символов может быть меньше указанного числа, если в потоке осталось меньше символов, чем следует прочитать. Количество символов также может равняться нулю, если достигнут конец потока.</returns>
      <exception cref="T:System.ArgumentException">Длина буфера минус <paramref name="index" /> меньше <paramref name="count" />.  

или - 
Число декодированных знаков для чтения больше, чем <paramref name="count" />. Это может произойти, если декодер Юникода возвращает резервные символы или суррогатную пару.</exception>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> или <paramref name="count" /> является отрицательным значением.</exception>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.Read(System.Span{System.Byte})">
      <param name="buffer" />
    </member>
    <member name="M:System.IO.BinaryReader.Read(System.Span{System.Char})">
      <param name="buffer" />
    </member>
    <member name="M:System.IO.BinaryReader.Read7BitEncodedInt">
      <summary>Считывает 32-разрядное целое число в сжатом формате.</summary>
      <returns>32-разрядное целое число в сжатом формате.</returns>
      <exception cref="T:System.IO.EndOfStreamException">Достигнут конец потока.</exception>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
      <exception cref="T:System.FormatException">Поток поврежден.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadBoolean">
      <summary>Считывает значение <see langword="Boolean" /> из текущего потока и перемещает текущую позицию в потоке на один байт вперед.</summary>
      <returns>Значение <see langword="true" />, если байт не равен нулю; в противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.IO.EndOfStreamException">Достигнут конец потока.</exception>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadByte">
      <summary>Считывает из текущего потока следующий байт и перемещает текущую позицию в потоке на один байт вперед.</summary>
      <returns>Следующий байт, считанный из текущего потока.</returns>
      <exception cref="T:System.IO.EndOfStreamException">Достигнут конец потока.</exception>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadBytes(System.Int32)">
      <summary>Считывает указанное количество байтов из текущего потока в массив байтов и перемещает текущую позицию на это количество байтов.</summary>
      <param name="count">Количество байтов, чтение которых необходимо выполнить. Это значение должно быть равно 0 или не являться отрицательным числом или произойдет исключение.</param>
      <returns>Массив байтов, в котором содержатся данные, считанные из базового потока. Если при чтении был достигнут конец потока, это число может быть меньше, чем количество запрошенных байтов.</returns>
      <exception cref="T:System.ArgumentException">Число декодированных знаков для чтения больше, чем <paramref name="count" />. Это может произойти, если декодер Юникода возвращает резервные символы или суррогатную пару.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> является отрицательным значением.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadChar">
      <summary>Считывает следующий знак из текущего потока и изменяет текущую позицию в потоке в соответствии с используемым значением <see langword="Encoding" /> и конкретным знаком в потоке, чтение которого выполняется в настоящий момент.</summary>
      <returns>Символ, считанный из текущего потока.</returns>
      <exception cref="T:System.IO.EndOfStreamException">Достигнут конец потока.</exception>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
      <exception cref="T:System.ArgumentException">Выполнено чтение символа-заместителя.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadChars(System.Int32)">
      <summary>Считывает указанное количество символов из текущего потока, возвращает данные в массив символов и перемещает текущую позицию в соответствии с используемой <see langword="Encoding" /> и определенным символом, считываемым из потока.</summary>
      <param name="count">Число символов для чтения.</param>
      <returns>Массив символов, в котором содержатся данные, считанные из базового потока. Если при чтении был достигнут конец потока, это число может быть меньше, чем количество запрошенных символов.</returns>
      <exception cref="T:System.ArgumentException">Число декодированных знаков для чтения больше, чем <paramref name="count" />. Это может произойти, если декодер Юникода возвращает резервные символы или суррогатную пару.</exception>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> является отрицательным значением.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadDecimal">
      <summary>Считывает десятичное значение из текущего потока и перемещает текущую позицию в потоке на шестнадцать байтов вперед.</summary>
      <returns>Десятичное значение, считанное из текущего потока.</returns>
      <exception cref="T:System.IO.EndOfStreamException">Достигнут конец потока.</exception>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadDouble">
      <summary>Считывает число с плавающей запятой длиной 8 байт из текущего потока и перемещает текущую позицию в потоке на восемь байт вперед.</summary>
      <returns>Число с плавающей запятой длиной 8 байт, считанное из текущего потока.</returns>
      <exception cref="T:System.IO.EndOfStreamException">Достигнут конец потока.</exception>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadInt16">
      <summary>Считывает целое число со знаком длиной 2 байта из текущего потока и перемещает текущую позицию в потоке на два байта вперед.</summary>
      <returns>Целое число со знаком длиной 2 байта, считанное из текущего потока.</returns>
      <exception cref="T:System.IO.EndOfStreamException">Достигнут конец потока.</exception>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadInt32">
      <summary>Считывает целое число со знаком длиной 4 байта из текущего потока и перемещает текущую позицию в потоке на четыре байта вперед.</summary>
      <returns>Целое число со знаком длиной 2 байта, считанное из текущего потока.</returns>
      <exception cref="T:System.IO.EndOfStreamException">Достигнут конец потока.</exception>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadInt64">
      <summary>Считывает целое число со знаком длиной 8 байта из текущего потока и перемещает текущую позицию в потоке на восемь байтов вперед.</summary>
      <returns>Целое число со знаком длиной 8 байт, считанное из текущего потока.</returns>
      <exception cref="T:System.IO.EndOfStreamException">Достигнут конец потока.</exception>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadSByte">
      <summary>Считывает из текущего потока байт со знаком и перемещает текущую позицию в потоке на один байт вперед.</summary>
      <returns>Байт со знаком, считанный из текущего потока.</returns>
      <exception cref="T:System.IO.EndOfStreamException">Достигнут конец потока.</exception>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadSingle">
      <summary>Считывает число с плавающей запятой длиной 4 байта из текущего потока и перемещает текущую позицию в потоке на четыре байта вперед.</summary>
      <returns>Число с плавающей запятой длиной 4 байта, считанное из текущего потока.</returns>
      <exception cref="T:System.IO.EndOfStreamException">Достигнут конец потока.</exception>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadString">
      <summary>Считывает строку из текущего потока. Строка предваряется значением длины строки, которое закодировано как целое число блоками по семь битов.</summary>
      <returns>Считываемая строка.</returns>
      <exception cref="T:System.IO.EndOfStreamException">Достигнут конец потока.</exception>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadUInt16">
      <summary>Считывает целое число без знака длиной 2 байта в формате с прямым порядком байтов из текущего потока и перемещает текущую позицию в потоке на два байта вперед.</summary>
      <returns>Целое число без знака длиной 2 байта, считанное из текущего потока.</returns>
      <exception cref="T:System.IO.EndOfStreamException">Достигнут конец потока.</exception>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadUInt32">
      <summary>Считывает целое число без знака длиной 4 байта из текущего потока и перемещает текущую позицию в потоке на четыре байта вперед.</summary>
      <returns>Целое число без знака длиной 4 байта, считанное из текущего потока.</returns>
      <exception cref="T:System.IO.EndOfStreamException">Достигнут конец потока.</exception>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadUInt64">
      <summary>Считывает целое число без знака длиной 8 байт из текущего потока и перемещает текущую позицию в потоке на восемь байтов вперед.</summary>
      <returns>Целое число без знака длиной 8 байт, считанное из текущего потока.</returns>
      <exception cref="T:System.IO.EndOfStreamException">Достигнут конец потока.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
    </member>
    <member name="T:System.IO.BinaryWriter">
      <summary>Записывает простые типы данных в поток как двоичные значения и поддерживает запись строк в определенной кодировке.</summary>
    </member>
    <member name="M:System.IO.BinaryWriter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.BinaryWriter" />, который осуществляет запись в поток.</summary>
    </member>
    <member name="M:System.IO.BinaryWriter.#ctor(System.IO.Stream)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.BinaryWriter" /> на основании указанного потока с использованием кодировки UTF-8.</summary>
      <param name="output">Выходной поток.</param>
      <exception cref="T:System.ArgumentException">Поток не поддерживает запись или уже закрыт.</exception>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="output" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.BinaryWriter" /> на основе указанного потока и кодировки символов.</summary>
      <param name="output">Выходной поток.</param>
      <param name="encoding">Кодировка символов, которую нужно использовать.</param>
      <exception cref="T:System.ArgumentException">Поток не поддерживает запись или уже закрыт.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="output" /> или <paramref name="encoding" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.BinaryWriter" /> на основании указанного потока и кодировки символов, а также при необходимости оставляет поток открытым.</summary>
      <param name="output">Выходной поток.</param>
      <param name="encoding">Кодировка символов, которую нужно использовать.</param>
      <param name="leaveOpen">Значение <see langword="true" />, чтобы оставить поток открытым после удаления объекта <see cref="T:System.IO.BinaryWriter" />; в противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException">Поток не поддерживает запись или уже закрыт.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="output" /> или <paramref name="encoding" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="P:System.IO.BinaryWriter.BaseStream">
      <summary>Получает базовый поток <see cref="T:System.IO.BinaryWriter" />.</summary>
      <returns>Базовый поток, связанный с объектом <see langword="BinaryWriter" />.</returns>
    </member>
    <member name="M:System.IO.BinaryWriter.Close">
      <summary>Закрывает текущий <see cref="T:System.IO.BinaryWriter" /> и базовый поток.</summary>
    </member>
    <member name="M:System.IO.BinaryWriter.Dispose">
      <summary>Освобождает все ресурсы, используемые текущим экземпляром класса <see cref="T:System.IO.BinaryWriter" />.</summary>
    </member>
    <member name="M:System.IO.BinaryWriter.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.IO.BinaryWriter" />, а при необходимости освобождает также управляемые ресурсы.</summary>
      <param name="disposing">Значение <see langword="true" /> позволяет освободить управляемые и неуправляемые ресурсы; значение <see langword="false" /> позволяет освободить только неуправляемые ресурсы.</param>
    </member>
    <member name="M:System.IO.BinaryWriter.DisposeAsync">
      <summary>Асинхронно освобождает все ресурсы, используемые текущим экземпляром класса <see cref="T:System.IO.BinaryWriter" />.</summary>
      <returns>Задача, представляющая асинхронную операцию закрытия.</returns>
    </member>
    <member name="M:System.IO.BinaryWriter.Flush">
      <summary>Очищает все буферы текущего модуля записи и вызывает немедленную запись всех буферизованных данных на базовое устройство.</summary>
    </member>
    <member name="F:System.IO.BinaryWriter.Null">
      <summary>Указывает <see cref="T:System.IO.BinaryWriter" /> без резервного хранилища.</summary>
    </member>
    <member name="F:System.IO.BinaryWriter.OutStream">
      <summary>Содержит базовый поток.</summary>
    </member>
    <member name="M:System.IO.BinaryWriter.Seek(System.Int32,System.IO.SeekOrigin)">
      <summary>Задает позицию в текущем потоке.</summary>
      <param name="offset">Смещение в байтах относительно <paramref name="origin" />.</param>
      <param name="origin">Поле <see cref="T:System.IO.SeekOrigin" /> указывает точку отсчета, относительно которой указывается новая позиция.</param>
      <returns>Позиция в текущем потоке.</returns>
      <exception cref="T:System.IO.IOException">Указатель на файл перемещен в недопустимую позицию.</exception>
      <exception cref="T:System.ArgumentException">Значение <see cref="T:System.IO.SeekOrigin" /> является недопустимым.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.Boolean)">
      <summary>Записывает значение типа <see langword="Boolean" /> длиной один байт в текущий поток, при этом 0 соответствует значению <see langword="false" />, а 1 — значению <see langword="true" />.</summary>
      <param name="value">Записываемое в поток значение типа <see langword="Boolean" /> (0 или 1).</param>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.Byte)">
      <summary>Выполняет запись байта без знака в текущий поток и перемещает позицию в потоке на один байт вперед.</summary>
      <param name="value">Записываемый в поток байт без знака.</param>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.Byte[])">
      <summary>Записывает массив байтов в базовый поток.</summary>
      <param name="buffer">Массив байтов, содержащий записываемые в поток данные.</param>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>Выполняет запись части массива байтов в текущий поток.</summary>
      <param name="buffer">Массив байтов, содержащий записываемые в поток данные.</param>
      <param name="index">Индекс первого байта для чтения из <paramref name="buffer" /> и для записи в поток.</param>
      <param name="count">Количество байтов для чтения из <paramref name="buffer" /> и для записи в поток.</param>
      <exception cref="T:System.ArgumentException">Длина буфера минус <paramref name="index" /> меньше <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> или <paramref name="count" /> является отрицательным значением.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.Char)">
      <summary>Выполняет запись символа Юникод в текущий поток и перемещает текущую позицию в потоке вперед в соответствии с используемой <see langword="Encoding" /> и количеством записанных в поток символов.</summary>
      <param name="ch">Незаменяющий символ Юникода, который необходимо записать.</param>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="ch" /> представляет собой единичный символ-заместитель.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.Char[])">
      <summary>Выполняет запись массива символов в текущий поток и перемещает текущую позицию в потоке в соответствии с используемой <see langword="Encoding" /> и количеством записанных в поток символов.</summary>
      <param name="chars">Массив символов, содержащий записываемые в поток данные.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="chars" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.Char[],System.Int32,System.Int32)">
      <summary>Выполняет запись части массива символов в текущий поток и изменяет текущую позицию в потоке в соответствии с используемой <see langword="Encoding" /> и, возможно, количеством символов, записанных в поток.</summary>
      <param name="chars">Массив символов, содержащий записываемые в поток данные.</param>
      <param name="index">Индекс первого символа для чтения из <paramref name="chars" /> и для записи в поток.</param>
      <param name="count">Количество символов для чтения из <paramref name="chars" /> и для записи в поток.</param>
      <exception cref="T:System.ArgumentException">Длина буфера минус <paramref name="index" /> меньше <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="chars" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> или <paramref name="count" /> является отрицательным значением.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.Decimal)">
      <summary>Записывает десятичное число в текущий поток и перемещает позицию в потоке на шестнадцать байтов.</summary>
      <param name="value">Десятичное значение, которое необходимо записать.</param>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.Double)">
      <summary>Записывает число с плавающей запятой размером 8 байт в текущий поток и перемещает позицию в потоке вперед на восемь байт.</summary>
      <param name="value">Число с плавающей запятой длиной 8 байт, которое необходимо записать в поток.</param>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.Int16)">
      <summary>Записывает целое число со знаком размером 2 байта в текущий поток и перемещает позицию в потоке вперед на два байта.</summary>
      <param name="value">Целое число со знаком размером 2 байта, которое необходимо записать в поток.</param>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.Int32)">
      <summary>Записывает четырехбайтовое целое число со знаком в текущий поток и перемещает позицию в потоке на четыре байта вперед.</summary>
      <param name="value">Целое число со знаком размером 4 байта, которое необходимо записать в поток.</param>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.Int64)">
      <summary>Записывает целое число со знаком размером 8 байт в текущий поток и перемещает позицию в потоке вперед на восемь байт.</summary>
      <param name="value">Целое число со знаком размером 8 байт, которое необходимо записать в поток.</param>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.ReadOnlySpan{System.Byte})">
      <summary>Записывает диапазон байтов в текущий поток.</summary>
      <param name="buffer">Диапазон записываемых байтов.</param>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.ReadOnlySpan{System.Char})">
      <summary>Записывает диапазон символов в текущий поток и изменяет текущую позицию в потоке в соответствии с используемой <see langword="Encoding" /> и, возможно, количеством символов, записанных в поток.</summary>
      <param name="chars">Диапазон записываемых символов.</param>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.SByte)">
      <summary>Записывает байт со знаком в текущий поток и перемещает позицию в потоке вперед на один байт.</summary>
      <param name="value">Байт со знаком, который необходимо записать в поток.</param>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.Single)">
      <summary>Записывает число с плавающей запятой длиной 4 байта в текущий поток и перемещает позицию в потоке вперед на четыре байта.</summary>
      <param name="value">Число с плавающей запятой длиной 4 байта, которое необходимо записать в поток.</param>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.String)">
      <summary>Записывает в текущий поток строку, предваряемую ее длиной, используя текущую кодировку <see cref="T:System.IO.BinaryWriter" />, и перемещает позицию в потоке вперед в соответствии с используемой кодировкой и количеством записанных в поток символов.</summary>
      <param name="value">Значение для записи.</param>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="value" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.UInt16)">
      <summary>Записывает целое число без знака размером 2 байта в текущий поток и перемещает позицию в потоке вперед на два байта.</summary>
      <param name="value">Целое число без знака размером 2 байта, которое необходимо записать в поток.</param>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.UInt32)">
      <summary>Записывает целое число без знака размером 4 байта в текущий поток и перемещает позицию в потоке вперед на четыре байта.</summary>
      <param name="value">Целое число без знака размером 4 байта, которое необходимо записать в поток.</param>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.UInt64)">
      <summary>Записывает целое число без знака размером 8 байт в текущий поток и перемещает позицию в потоке вперед на восемь байт.</summary>
      <param name="value">Целое число без знака размером 8 байт, которое необходимо записать в поток.</param>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write7BitEncodedInt(System.Int32)">
      <summary>Записывает 32-разрядное целое число в сжатом формате.</summary>
      <param name="value">32-разрядное целое число, которое необходимо записать.</param>
      <exception cref="T:System.IO.EndOfStreamException">Достигнут конец потока.</exception>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
      <exception cref="T:System.IO.IOException">Поток закрыт.</exception>
    </member>
    <member name="T:System.IO.BufferedStream">
      <summary>Осуществляет буферизацию в операциях чтения и записи в другие потоки. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.IO.BufferedStream.#ctor(System.IO.Stream)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.BufferedStream" /> со стандартным размером буфера 4096 байт.</summary>
      <param name="stream">Текущий поток.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.BufferedStream.#ctor(System.IO.Stream,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.BufferedStream" /> с заданным размером буфера.</summary>
      <param name="stream">Текущий поток.</param>
      <param name="bufferSize">Размер буфера в байтах.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="stream" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bufferSize" /> является отрицательным значением.</exception>
    </member>
    <member name="M:System.IO.BufferedStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Начинает операцию асинхронного чтения. (Рекомендуется использовать <see cref="M:System.IO.BufferedStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />.)</summary>
      <param name="buffer">Буфер, в который необходимо считать данные.</param>
      <param name="offset">Смещение байтов в буфере <paramref name="buffer" />, с которого начинается запись данных, считанных из потока.</param>
      <param name="count">Максимальное число байтов, предназначенных для чтения.</param>
      <param name="callback">Дополнительный асинхронный ответный вызов по завершении чтения.</param>
      <param name="state">Предоставляемый пользователем объект, являющийся отличительным признаком данного конкретного запроса на асинхронное чтение от других запросов.</param>
      <returns>Объект, представляющий асинхронную операцию чтения, которая может все еще быть отложена.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> или <paramref name="count" /> является отрицательным значением.</exception>
      <exception cref="T:System.IO.IOException">Предпринята попытка асинхронного чтения за пределами потока.</exception>
      <exception cref="T:System.ArgumentException">Длина буфера минус <paramref name="offset" /> меньше <paramref name="count" />.</exception>
      <exception cref="T:System.NotSupportedException">Текущий поток не поддерживает операцию чтения.</exception>
    </member>
    <member name="M:System.IO.BufferedStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Начинает операцию асинхронной записи. (Рекомендуется использовать <see cref="M:System.IO.BufferedStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />.)</summary>
      <param name="buffer">Буфер, содержащий данные для записи в текущий поток.</param>
      <param name="offset">Отсчитываемое от нуля смещение байтов в буфере <paramref name="buffer" />, с которого начинается копирование байтов в текущий поток.</param>
      <param name="count">Максимальное число байтов для записи.</param>
      <param name="callback">Метод, вызываемый после завершения операции асинхронной записи.</param>
      <param name="state">Предоставляемый пользователем объект, являющийся отличительным признаком данного конкретного запроса на асинхронную запись от других запросов.</param>
      <returns>Объект, который ссылается на асинхронную операцию записи, которая может все еще быть отложена.</returns>
      <exception cref="T:System.ArgumentException">Длина <paramref name="buffer" /> минус <paramref name="offset" /> меньше <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> или <paramref name="count" /> является отрицательным значением.</exception>
      <exception cref="T:System.NotSupportedException">Поток не поддерживает запись.</exception>
    </member>
    <member name="P:System.IO.BufferedStream.BufferSize">
      <summary>Возвращает размер буфера в байтах для этого буферизованного потока.</summary>
      <returns>Целое число, представляющее размер буфера в байтах.</returns>
    </member>
    <member name="P:System.IO.BufferedStream.CanRead">
      <summary>Возвращает значение, определяющее в текущем потоке наличие поддержки операций чтения.</summary>
      <returns>Значение <see langword="true" />, если в потоке поддерживаются операции чтения; значение <see langword="false" />, если поток закрыт или открыт только для записи.</returns>
    </member>
    <member name="P:System.IO.BufferedStream.CanSeek">
      <summary>Получает значение, определяющее в текущем потоке наличие поддержки операций поиска.</summary>
      <returns>Значение <see langword="true" /> если поток поддерживает поиск; значение <see langword="false" />, если поток закрыт или создан на базе дескриптора операционной системы, соответствующего каналу или выводу на консоль.</returns>
    </member>
    <member name="P:System.IO.BufferedStream.CanWrite">
      <summary>Получает значение, определяющее в текущем потоке наличие поддержки операций записи.</summary>
      <returns>Значение <see langword="true" />, если поток поддерживает операции записи; значение <see langword="false" />, если поток закрыт или открыт только для чтения.</returns>
    </member>
    <member name="M:System.IO.BufferedStream.CopyTo(System.IO.Stream,System.Int32)">
      <summary>Считывает байты из текущего буферизованного потока и записывает их в другой поток.</summary>
      <param name="destination">Поток, в который будет скопировано содержимое текущего буферизованного потока.</param>
      <param name="bufferSize">Размер буфера. Это значение должно быть больше нуля. Размер по умолчанию — 81920.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="destination" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="bufferSize" /> имеет отрицательное значение или равен нулю.</exception>
      <exception cref="T:System.NotSupportedException">Текущий поток не поддерживает чтение.

или -

Параметр <paramref name="destination" /> не поддерживает запись.</exception>
      <exception cref="T:System.ObjectDisposedException">Текущий поток или параметр <paramref name="destination" /> был закрыт до вызова метода <see cref="M:System.IO.Stream.CopyTo(System.IO.Stream)" />.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода/вывода.</exception>
    </member>
    <member name="M:System.IO.BufferedStream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
      <summary>Асинхронно считывает байты из текущего буферизованного потока и записывает их в другой поток, используя указанный размер буфера и токен отмены.</summary>
      <param name="destination">Поток, в который будет скопировано содержимое текущего буферизованного потока.</param>
      <param name="bufferSize">Размер (в байтах) буфера. Это значение должно быть больше нуля. Размер по умолчанию — 81920.</param>
      <param name="cancellationToken">Токен для отслеживания запросов отмены. Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Задача, представляющая асинхронную операцию копирования.</returns>
    </member>
    <member name="M:System.IO.BufferedStream.DisposeAsync">
      <summary>Асинхронно освобождает неуправляемые ресурсы, используемые буферизованным потоком.</summary>
      <returns>Задача, представляющая асинхронную операцию закрытия.</returns>
    </member>
    <member name="M:System.IO.BufferedStream.EndRead(System.IAsyncResult)">
      <summary>Ожидает завершения отложенной асинхронной операции чтения. (Рекомендуется использовать <see cref="M:System.IO.BufferedStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />.)</summary>
      <param name="asyncResult">Ссылка на ожидаемый отложенный асинхронный запрос.</param>
      <returns>Количество байтов, считанных из потока, от нуля (0) до количества запрошенных байтов. Потоки возвращают только 0 только в конце потока, в противном случае они должны блокироваться, пока не будет доступен по крайней мере 1 байт.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Этот объект <see cref="T:System.IAsyncResult" /> не был создан путем вызова <see cref="M:System.IO.BufferedStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> для данного класса.</exception>
    </member>
    <member name="M:System.IO.BufferedStream.EndWrite(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию записи и блокирует до тех пор, пока не будет завершена операция ввода-вывода. (Рекомендуется использовать <see cref="M:System.IO.BufferedStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />.)</summary>
      <param name="asyncResult">Отложенный асинхронный запрос.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="asyncResult" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Этот объект <see cref="T:System.IAsyncResult" /> не был создан в результате вызова <see cref="M:System.IO.BufferedStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> в данном классе.</exception>
    </member>
    <member name="M:System.IO.BufferedStream.Flush">
      <summary>Очищает все буферы для этого потока и приводит к записи всех буферизованных данных в базовое устройство.</summary>
      <exception cref="T:System.ObjectDisposedException">Поток был удален.</exception>
      <exception cref="T:System.IO.IOException">Источник данных или репозиторий закрыты.</exception>
    </member>
    <member name="M:System.IO.BufferedStream.FlushAsync(System.Threading.CancellationToken)">
      <summary>Асинхронно очищает все буферы данного потока, вызывает запись буферизованных данных в базовое устройство и отслеживает запросы отмены.</summary>
      <param name="cancellationToken">Токен для отслеживания запросов отмены.</param>
      <returns>Задача, представляющая асинхронную операцию очистки.</returns>
      <exception cref="T:System.ObjectDisposedException">Поток был удален.</exception>
    </member>
    <member name="P:System.IO.BufferedStream.Length">
      <summary>Получает длину потока в байтах.</summary>
      <returns>Длина потока в байтах.</returns>
      <exception cref="T:System.IO.IOException">Базовый поток закрыт или его значение равно <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Этот поток не поддерживает поиск.</exception>
      <exception cref="T:System.ObjectDisposedException">Методы были вызваны после закрытия потока.</exception>
    </member>
    <member name="P:System.IO.BufferedStream.Position">
      <summary>Получает позицию в текущем потоке.</summary>
      <returns>Позиция в текущем потоке.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение, переданное в <see cref="M:System.IO.BufferedStream.Seek(System.Int64,System.IO.SeekOrigin)" />, представляет собой отрицательное число.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода, например, указывающая, что поток закрыт.</exception>
      <exception cref="T:System.NotSupportedException">Поток не поддерживает поиск.</exception>
      <exception cref="T:System.ObjectDisposedException">Методы были вызваны после закрытия потока.</exception>
    </member>
    <member name="M:System.IO.BufferedStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>Копирует байты из текущего буферизованного потока в массив.</summary>
      <param name="array">Буфер, в который необходимо скопировать байты.</param>
      <param name="offset">Смещение в буфере (в байтах), с которого начинается чтение байтов.</param>
      <param name="count">Количество байтов, чтение которых необходимо выполнить.</param>
      <returns>Общее число байтов, считанных в <paramref name="array" />. Это число может быть меньше, чем количество запрошенных байтов, если столько байтов в настоящее время недоступно, или равняться нулю, если конец файла был достигнут раньше, чем были считаны данные.</returns>
      <exception cref="T:System.ArgumentException">Длина <paramref name="array" /> минус <paramref name="offset" /> меньше <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="array" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> или <paramref name="count" /> является отрицательным значением.</exception>
      <exception cref="T:System.IO.IOException">Поток не открыт или его значение равно <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Поток не поддерживает чтение.</exception>
      <exception cref="T:System.ObjectDisposedException">Методы были вызваны после закрытия потока.</exception>
    </member>
    <member name="M:System.IO.BufferedStream.Read(System.Span{System.Byte})">
      <summary>Копирует байты из текущего буферизованного потока в диапазон байтов и перемещает позицию в буферизованном потоке вперед на количество прочитанных байтов.</summary>
      <param name="destination">Область памяти. При возвращении данного метода содержимое этой области заменяется байтами, считанными из текущего источника.</param>
      <returns>Общее количество байтов, считанных в буфер. Это число может быть меньше количества выделенных в буфере байтов, если столько байтов в настоящее время недоступно, а также равняться нулю (0), если был достигнут конец потока.</returns>
    </member>
    <member name="M:System.IO.BufferedStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>Асинхронно считывает последовательность байтов из текущего потока, перемещает позицию в потоке на число считанных байтов и отслеживает запросы отмены.</summary>
      <param name="buffer">Буфер, в который записываются данные.</param>
      <param name="offset">Смещение байтов в <paramref name="buffer" />, с которого начинается запись данных из потока.</param>
      <param name="count">Максимальное число байтов, предназначенных для чтения.</param>
      <param name="cancellationToken">Токен для отслеживания запросов отмены.</param>
      <returns>Задача, представляющая асинхронную операцию чтения. Значение параметра <paramref name="TResult" /> содержит общее число байтов, считанных в буфер. Значение результата может быть меньше запрошенного числа байтов, если число доступных в данный момент байтов меньше запрошенного числа, или результат может быть равен 0 (нулю), если был достигнут конец потока.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> или <paramref name="count" /> является отрицательным значением.</exception>
      <exception cref="T:System.ArgumentException">Сумма значений параметров <paramref name="offset" /> и <paramref name="count" /> больше длины буфера.</exception>
      <exception cref="T:System.NotSupportedException">Поток не поддерживает чтение.</exception>
      <exception cref="T:System.ObjectDisposedException">Поток был удален.</exception>
      <exception cref="T:System.InvalidOperationException">Поток в настоящее время используется предыдущей операцией чтения.</exception>
    </member>
    <member name="M:System.IO.BufferedStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <summary>Асинхронно считывает последовательность байтов из текущего буферизованного потока и перемещает позицию внутри буферизованного потока на число считанных байтов.</summary>
      <param name="buffer">Область памяти, в которую будут записываться данные.</param>
      <param name="cancellationToken">Токен для отслеживания запросов отмены. Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Задача, представляющая асинхронную операцию чтения. Значение свойства <see cref="P:System.Threading.Tasks.ValueTask`1.Result" /> содержит общее число байтов, считанных в буфер. Итоговое значение может быть меньше количества выделенных в буфере байтов, если столько байтов в настоящее время недоступно, или оно может равняться нулю (0), если был достигнут конец потока.</returns>
    </member>
    <member name="M:System.IO.BufferedStream.ReadByte">
      <summary>Считывает байт из базового потока и возвращает байт, приведенный к <see langword="int" />, или значение -1 при попытке чтения из конца потока.</summary>
      <returns>Байт, приведенный к <see langword="int" />, или значение -1 при попытке чтения из конца потока.</returns>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода, например указывающая, что поток закрыт.</exception>
      <exception cref="T:System.NotSupportedException">Поток не поддерживает чтение.</exception>
      <exception cref="T:System.ObjectDisposedException">Методы были вызваны после закрытия потока.</exception>
    </member>
    <member name="M:System.IO.BufferedStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>Задает позицию в текущем буферизованном потоке.</summary>
      <param name="offset">Смещение в байтах относительно <paramref name="origin" />.</param>
      <param name="origin">Значение типа <see cref="T:System.IO.SeekOrigin" /> определяет точку отсчета, относительно которой указывается новая позиция.</param>
      <returns>Новая позиция в текущем буферизованном потоке.</returns>
      <exception cref="T:System.IO.IOException">Поток не открыт или его значение равно <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Поток не поддерживает поиск.</exception>
      <exception cref="T:System.ObjectDisposedException">Методы были вызваны после закрытия потока.</exception>
    </member>
    <member name="M:System.IO.BufferedStream.SetLength(System.Int64)">
      <summary>Задает длину буферизованного потока.</summary>
      <param name="value">Целое число, определяющее необходимую длину текущего буферизованного потока в байтах.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> является отрицательным значением.</exception>
      <exception cref="T:System.IO.IOException">Поток не открыт или его значение равно <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Этот поток не поддерживает ни поиск, ни запись.</exception>
      <exception cref="T:System.ObjectDisposedException">Методы были вызваны после закрытия потока.</exception>
    </member>
    <member name="P:System.IO.BufferedStream.UnderlyingStream">
      <summary>Возвращает базовый экземпляр <see cref="T:System.IO.Stream" /> для этого буферизованного потока.</summary>
      <returns>Базовый экземпляр потока.</returns>
    </member>
    <member name="M:System.IO.BufferedStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>Копирует байты в буферизованный поток и перемещает текущую позицию в буферизованном потоке вперед на количество записанных байтов.</summary>
      <param name="array">Массив байтов, из которого необходимо скопировать <paramref name="count" /> байтов в текущий буферизованный поток.</param>
      <param name="offset">Смещение в буфере, с которого необходимо начать копирование байтов в текущий буферизованный поток.</param>
      <param name="count">Количество байтов, которые необходимо записать в текущий буферизованный поток.</param>
      <exception cref="T:System.ArgumentException">Длина <paramref name="array" /> минус <paramref name="offset" /> меньше <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="array" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> или <paramref name="count" /> является отрицательным значением.</exception>
      <exception cref="T:System.IO.IOException">Поток закрыт или его значение равно <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Поток не поддерживает запись.</exception>
      <exception cref="T:System.ObjectDisposedException">Методы были вызваны после закрытия потока.</exception>
    </member>
    <member name="M:System.IO.BufferedStream.Write(System.ReadOnlySpan{System.Byte})">
      <summary>Записывает последовательность байтов в текущий буферизованный поток и перемещает текущую позицию внутри буферизованного потока на число записанных байтов.</summary>
      <param name="buffer">Область памяти. Этот метод копирует содержимое данной области в текущий буферизованный поток.</param>
    </member>
    <member name="M:System.IO.BufferedStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>Асинхронно записывает последовательность байтов в текущий поток, перемещает текущую позицию внутри потока на число записанных байтов и отслеживает запросы отмены.</summary>
      <param name="buffer">Буфер, из которого записываются данные.</param>
      <param name="offset">Смещение байтов (начиная с нуля) в <paramref name="buffer" />, с которого начинается копирование байтов в поток.</param>
      <param name="count">Максимальное число байтов для записи.</param>
      <param name="cancellationToken">Токен для отслеживания запросов отмены.</param>
      <returns>Задача, представляющая асинхронную операцию записи.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> или <paramref name="count" /> является отрицательным значением.</exception>
      <exception cref="T:System.ArgumentException">Сумма <paramref name="offset" /> и <paramref name="count" /> больше, чем длина буфера.</exception>
      <exception cref="T:System.NotSupportedException">Поток не поддерживает запись.</exception>
      <exception cref="T:System.ObjectDisposedException">Поток был удален.</exception>
      <exception cref="T:System.InvalidOperationException">Поток в настоящее время используется предыдущей операцией записи.</exception>
    </member>
    <member name="M:System.IO.BufferedStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
      <summary>Асинхронно записывает последовательность байтов в текущий буферизованный поток, перемещает текущую позицию внутри буферизованного потока на число записанных байтов и отслеживает запросы отмены.</summary>
      <param name="buffer">Область памяти, из которой будут записываться данные.</param>
      <param name="cancellationToken">Токен для отслеживания запросов отмены. Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Задача, представляющая асинхронную операцию записи.</returns>
    </member>
    <member name="M:System.IO.BufferedStream.WriteByte(System.Byte)">
      <summary>Записывает байт в текущую позицию буферизованного потока.</summary>
      <param name="value">Байт, который необходимо записать в поток.</param>
      <exception cref="T:System.NotSupportedException">Поток не поддерживает запись.</exception>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="value" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Методы были вызваны после закрытия потока.</exception>
    </member>
    <member name="T:System.IO.EndOfStreamException">
      <summary>Исключение, которое создается при попытке выполнить чтение за пределами потока.</summary>
    </member>
    <member name="M:System.IO.EndOfStreamException.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.IO.EndOfStreamException" /> со строкой сообщения, которая соответствует строке системного сообщения, и значением HRESULT равным COR_E_ENDOFSTREAM.</summary>
    </member>
    <member name="M:System.IO.EndOfStreamException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.IO.EndOfStreamException" /> с указанными сведениями о сериализации и контексте.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, хранящий сериализованные данные объекта, относящиеся к выдаваемому исключению.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:System.IO.EndOfStreamException.#ctor(System.String)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.IO.EndOfStreamException" /> со строкой сообщения, которая соответствует строке <paramref name="message" />, и значением HRESULT равным COR_E_ENDOFSTREAM.</summary>
      <param name="message">Строка с описанием ошибки. Содержимое параметра <paramref name="message" /> должно быть понятным пользователю. Код, вызывающий этот конструктор, должен обеспечить локализацию данной строки в соответствии с текущим языком и региональными параметрами системы.</param>
    </member>
    <member name="M:System.IO.EndOfStreamException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.EndOfStreamException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message">Строка с описанием ошибки. Содержимое параметра <paramref name="message" /> должно быть понятным пользователю. Код, вызывающий этот конструктор, должен обеспечить локализацию данной строки в соответствии с текущим языком и региональными параметрами системы.</param>
      <param name="innerException">Исключение, которое является причиной текущего исключения. Если значение параметра <paramref name="innerException" /> не равно <see langword="null" />, текущее исключение сгенерировано в блоке <see langword="catch" />, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.IO.InvalidDataException">
      <summary>Исключение возникает, когда поток данных имеет недопустимый формат.</summary>
    </member>
    <member name="M:System.IO.InvalidDataException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.InvalidDataException" />.</summary>
    </member>
    <member name="M:System.IO.InvalidDataException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.InvalidDataException" /> с указанным сообщением об ошибке.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
    </member>
    <member name="M:System.IO.InvalidDataException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.InvalidDataException" /> со ссылкой на внутреннее исключение, которое является причиной данного исключения.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="innerException">Исключение, которое является причиной текущего исключения. Если значение параметра <paramref name="innerException" /> не равно <see langword="null" />, текущее исключение сгенерировано в блоке <see langword="catch" />, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.IO.MemoryStream">
      <summary>Создает поток, резервным хранилищем которого является память.</summary>
    </member>
    <member name="M:System.IO.MemoryStream.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.MemoryStream" /> с расширяемой емкостью, инициализированной с нулевым значением.</summary>
    </member>
    <member name="M:System.IO.MemoryStream.#ctor(System.Byte[])">
      <summary>Инициализирует новый неизменяемый экземпляр класса <see cref="T:System.IO.MemoryStream" /> на основе указанного массива байтов.</summary>
      <param name="buffer">Массив байтов без знака, из которого создается текущий поток.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Boolean)">
      <summary>Инициализирует новый неизменяемый экземпляр класса <see cref="T:System.IO.MemoryStream" /> на основе указанного массива байтов с помощью указанного значения свойства <see cref="P:System.IO.MemoryStream.CanWrite" />.</summary>
      <param name="buffer">Массив байтов без знака, из которого создается данный поток.</param>
      <param name="writable">Параметр свойства <see cref="P:System.IO.MemoryStream.CanWrite" />, который определяет возможность поддержки потоком записи.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32)">
      <summary>Инициализирует новый неизменяемый экземпляр класса <see cref="T:System.IO.MemoryStream" /> на основе указанной области (индекса) массива байтов.</summary>
      <param name="buffer">Массив байтов без знака, из которого создается данный поток.</param>
      <param name="index">Индекс в <paramref name="buffer" />, с которого начинается поток.</param>
      <param name="count">Длина потока в байтах.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля.</exception>
      <exception cref="T:System.ArgumentException">Длина буфера минус <paramref name="index" /> меньше <paramref name="count" />.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)">
      <summary>Инициализирует новый неизменяемый экземпляр класса <see cref="T:System.IO.MemoryStream" /> на основе указанной области массива байтов с помощью указанного значения свойства <see cref="P:System.IO.MemoryStream.CanWrite" />.</summary>
      <param name="buffer">Массив байтов без знака, из которого создается данный поток.</param>
      <param name="index">Индекс в <paramref name="buffer" />, с которого начинается поток.</param>
      <param name="count">Длина потока в байтах.</param>
      <param name="writable">Параметр свойства <see cref="P:System.IO.MemoryStream.CanWrite" />, который определяет возможность поддержки потоком записи.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="index" /> или <paramref name="count" /> имеет отрицательное значение.</exception>
      <exception cref="T:System.ArgumentException">Длина буфера минус <paramref name="index" /> меньше <paramref name="count" />.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.MemoryStream" /> на основе указанной области массива байтов с помощью указанного значения свойства <see cref="P:System.IO.MemoryStream.CanWrite" /> и возможности вызова <see cref="M:System.IO.MemoryStream.GetBuffer" /> с указанным значением.</summary>
      <param name="buffer">Массив байтов без знака, из которого создается данный поток.</param>
      <param name="index">Индекс в <paramref name="buffer" />, с которого начинается поток.</param>
      <param name="count">Длина потока в байтах.</param>
      <param name="writable">Параметр свойства <see cref="P:System.IO.MemoryStream.CanWrite" />, который определяет возможность поддержки потоком записи.</param>
      <param name="publiclyVisible">Значение <see langword="true" />, чтобы разрешить использование метода <see cref="M:System.IO.MemoryStream.GetBuffer" />, возвращающего массив байтов без знака, из которого создан поток; в противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> или <paramref name="count" /> является отрицательным значением.</exception>
      <exception cref="T:System.ArgumentException">Длина буфера минус <paramref name="index" /> меньше <paramref name="count" />.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.#ctor(System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.MemoryStream" /> с расширяемой емкостью, инициализированной с указанным значением.</summary>
      <param name="capacity">Исходный размер внутреннего массива в байтах.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> является отрицательным значением.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <param name="buffer" />
      <param name="offset" />
      <param name="count" />
      <param name="callback" />
      <param name="state" />
    </member>
    <member name="M:System.IO.MemoryStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <param name="buffer" />
      <param name="offset" />
      <param name="count" />
      <param name="callback" />
      <param name="state" />
    </member>
    <member name="P:System.IO.MemoryStream.CanRead">
      <summary>Возвращает значение, определяющее в текущем потоке наличие поддержки операций чтения.</summary>
      <returns>Значение <see langword="true" />, если поток открыт.</returns>
    </member>
    <member name="P:System.IO.MemoryStream.CanSeek">
      <summary>Возвращает значение, определяющее в текущем потоке наличие поддержки операций поиска.</summary>
      <returns>Значение <see langword="true" />, если поток открыт.</returns>
    </member>
    <member name="P:System.IO.MemoryStream.CanWrite">
      <summary>Возвращает значение, определяющее в текущем потоке наличие поддержки операций записи.</summary>
      <returns>Значение <see langword="true" />, если поток поддерживает запись; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.IO.MemoryStream.Capacity">
      <summary>Возвращает или задает число байтов, выделенных для этого потока.</summary>
      <returns>Длина применимой к использованию части буфера для потока.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Заданная емкость отрицательная или меньше текущей длины потока.</exception>
      <exception cref="T:System.ObjectDisposedException">Текущий поток закрыт.</exception>
      <exception cref="T:System.NotSupportedException">
        <see langword="set" /> вызывается для потока, емкость которого нельзя изменить.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.CopyTo(System.IO.Stream,System.Int32)">
      <param name="destination" />
      <param name="bufferSize" />
    </member>
    <member name="M:System.IO.MemoryStream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
      <summary>Асинхронно считывает все байты из текущего потока и записывает их в другой поток, используя указанный размер буфера и токен отмены.</summary>
      <param name="destination">Поток, в который будет скопировано содержимое текущего потока.</param>
      <param name="bufferSize">Размер (в байтах) буфера. Это значение должно быть больше нуля.</param>
      <param name="cancellationToken">Токен для отслеживания запросов отмены.</param>
      <returns>Задача, представляющая асинхронную операцию копирования.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="destination" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="buffersize" /> имеет отрицательное значение или равен нулю.</exception>
      <exception cref="T:System.ObjectDisposedException">Текущий поток или поток назначения удаляется.</exception>
      <exception cref="T:System.NotSupportedException">Текущий поток не поддерживает чтение или поток назначения не поддерживает запись.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые классом <see cref="T:System.IO.MemoryStream" /> (при необходимости освобождает и управляемые ресурсы).</summary>
      <param name="disposing">Значение <see langword="true" /> позволяет освободить управляемые и неуправляемые ресурсы; значение <see langword="false" /> позволяет освободить только неуправляемые ресурсы.</param>
    </member>
    <member name="M:System.IO.MemoryStream.EndRead(System.IAsyncResult)">
      <param name="asyncResult" />
    </member>
    <member name="M:System.IO.MemoryStream.EndWrite(System.IAsyncResult)">
      <param name="asyncResult" />
    </member>
    <member name="M:System.IO.MemoryStream.Flush">
      <summary>Переопределяет метод <see cref="M:System.IO.Stream.Flush" /> так, что никакие действия не выполняются.</summary>
    </member>
    <member name="M:System.IO.MemoryStream.FlushAsync(System.Threading.CancellationToken)">
      <summary>Асинхронно очищает все буферы для этого потока и отслеживает запросы отмены.</summary>
      <param name="cancellationToken">Токен для отслеживания запросов отмены.</param>
      <returns>Задача, представляющая асинхронную операцию очистки.</returns>
      <exception cref="T:System.ObjectDisposedException">Поток был удален.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.GetBuffer">
      <summary>Возвращает массив байтов без знака, из которого был создан данный поток.</summary>
      <returns>Массив байтов, из которого был создан данный поток, или основной массив, если массив байтов не был предоставлен конструктору <see cref="T:System.IO.MemoryStream" /> в процессе конструирования текущего экземпляра.</returns>
      <exception cref="T:System.UnauthorizedAccessException">Экземпляр <see langword="MemoryStream" /> не был создан с помощью открытого буфера.</exception>
    </member>
    <member name="P:System.IO.MemoryStream.Length">
      <summary>Получает длину потока в байтах.</summary>
      <returns>Длина потока в байтах.</returns>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
    </member>
    <member name="P:System.IO.MemoryStream.Position">
      <summary>Возвращает или задает текущее положение в потоке.</summary>
      <returns>Текущее положение в потоке.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">В качестве положения задано отрицательное значение или значение, большее <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Поток закрыт.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>Считывает блок байтов из текущего потока и записывает данные в буфер.</summary>
      <param name="buffer">При возвращении данного метода этот параметр содержит указанный массив байтов со значениями от <paramref name="offset" /> до (<paramref name="offset" /> + <paramref name="count" /> - 1), замененными символами, считанными из текущего потока.</param>
      <param name="offset">Отсчитываемое от нуля смещение байтов в буфере <paramref name="buffer" />, с которого начинается сохранение данных из текущего потока.</param>
      <param name="count">Максимальное число байтов, предназначенных для чтения.</param>
      <returns>Общее число байтов, записанных в буфер. Оно может быть меньше запрошенного числа байтов, если это количество в текущий момент не доступно, или же равно нулю, если конец потока достигнут до того, как байты были считаны.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> или <paramref name="count" /> является отрицательным значением.</exception>
      <exception cref="T:System.ArgumentException">Длина буфера за вычетом <paramref name="offset" /> меньше, чем <paramref name="count" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Текущий экземпляр потока закрыт.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.Read(System.Span{System.Byte})">
      <param name="destination" />
    </member>
    <member name="M:System.IO.MemoryStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>Асинхронно считывает последовательность байтов из текущего потока, перемещает позицию в потоке на число считанных байтов и отслеживает запросы отмены.</summary>
      <param name="buffer">Буфер, в который записываются данные.</param>
      <param name="offset">Смещение байтов в <paramref name="buffer" />, с которого начинается запись данных из потока.</param>
      <param name="count">Максимальное число байтов, предназначенных для чтения.</param>
      <param name="cancellationToken">Токен для отслеживания запросов отмены. Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Задача, представляющая асинхронную операцию чтения. Значение параметра <paramref name="TResult" /> содержит общее число байтов, считанных в буфер. Значение результата может быть меньше запрошенного числа байтов, если число доступных в данный момент байтов меньше запрошенного числа, или результат может быть равен 0 (нулю), если был достигнут конец потока.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> или <paramref name="count" /> является отрицательным значением.</exception>
      <exception cref="T:System.ArgumentException">Сумма значений параметров <paramref name="offset" /> и <paramref name="count" /> больше длины буфера.</exception>
      <exception cref="T:System.NotSupportedException">Поток не поддерживает чтение.</exception>
      <exception cref="T:System.ObjectDisposedException">Поток был удален.</exception>
      <exception cref="T:System.InvalidOperationException">Поток в настоящее время используется предыдущей операцией чтения.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <param name="destination" />
      <param name="cancellationToken" />
    </member>
    <member name="M:System.IO.MemoryStream.ReadByte">
      <summary>Считывает байт из текущего потока.</summary>
      <returns>Байт приводится к типу <see cref="T:System.Int32" /> или -1, если достигнут конец потока.</returns>
      <exception cref="T:System.ObjectDisposedException">Текущий экземпляр потока закрыт.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>Задает указанное значение для положения в текущем потоке.</summary>
      <param name="offset">Новое положение в потоке. Оно определяется относительно параметра <paramref name="loc" /> и может быть положительным или отрицательным.</param>
      <param name="loc">Значение типа <see cref="T:System.IO.SeekOrigin" />, которое действует как точка ссылки поиска.</param>
      <returns>Новое положение в потоке, вычисляемое путем объединения смещения и исходной точки ссылки.</returns>
      <exception cref="T:System.IO.IOException">Попытка поиска выполняется до начала потока.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="offset" /> больше значения <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.IO.SeekOrigin" /> недопустим.  

или - 
Значение <paramref name="offset" /> вызвало арифметическое переполнение.</exception>
      <exception cref="T:System.ObjectDisposedException">Текущий экземпляр потока закрыт.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.SetLength(System.Int64)">
      <summary>Задает указанное значение для длины текущего потока.</summary>
      <param name="value">Значение задаваемой длины.</param>
      <exception cref="T:System.NotSupportedException">Размер текущего потока изменить нельзя, и значение параметра <paramref name="value" /> больше текущей емкости.  

или - 
Текущий поток не поддерживает запись.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="value" /> отрицательное или больше максимальной длины <see cref="T:System.IO.MemoryStream" />, где максимальная длина равна (<see cref="F:System.Int32.MaxValue" /> - источник). Источник — это индекс в основном буфере, с которого начинается поток.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.ToArray">
      <summary>Записывает содержимое потока в массив байтов, независимо от свойства <see cref="P:System.IO.MemoryStream.Position" />.</summary>
      <returns>Новый массив байтов.</returns>
    </member>
    <member name="M:System.IO.MemoryStream.TryGetBuffer(System.ArraySegment{System.Byte}@)">
      <summary>Возвращает массив байтов без знака, из которого был создан данный поток. Возвращаемое значение указывает, успешно ли выполнено преобразование.</summary>
      <param name="buffer">Сегмент массива байтов, из которого был создан этот поток.</param>
      <returns>Значение <see langword="true" />, если преобразование прошло успешно; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.MemoryStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>Записывает в текущий поток блок байтов, используя данные, считанные из буфера.</summary>
      <param name="buffer">Буфер, из которого записываются данные.</param>
      <param name="offset">Отсчитываемое от нуля смещение байтов в буфере <paramref name="buffer" />, с которого начинается копирование байтов в текущий поток.</param>
      <param name="count">Максимальное число байтов для записи.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Поток не поддерживает запись. Дополнительные сведения см. в разделе <see cref="P:System.IO.Stream.CanWrite" />.  

или - 
Текущее положение ближе к концу потока, чем число байтов <paramref name="count" />, и емкость изменить невозможно.</exception>
      <exception cref="T:System.ArgumentException">Длина буфера за вычетом <paramref name="offset" /> меньше, чем <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="offset" /> или <paramref name="count" /> имеет отрицательное значение.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
      <exception cref="T:System.ObjectDisposedException">Текущий экземпляр потока закрыт.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.Write(System.ReadOnlySpan{System.Byte})">
      <param name="source" />
    </member>
    <member name="M:System.IO.MemoryStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>Асинхронно записывает последовательность байтов в текущий поток, перемещает текущую позицию внутри потока на число записанных байтов и отслеживает запросы отмены.</summary>
      <param name="buffer">Буфер, из которого записываются данные.</param>
      <param name="offset">Смещение байтов (начиная с нуля) в <paramref name="buffer" />, с которого начинается копирование байтов в поток.</param>
      <param name="count">Максимальное число байтов для записи.</param>
      <param name="cancellationToken">Токен для отслеживания запросов отмены. Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Задача, представляющая асинхронную операцию записи.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> или <paramref name="count" /> является отрицательным значением.</exception>
      <exception cref="T:System.ArgumentException">Сумма <paramref name="offset" /> и <paramref name="count" /> больше, чем длина буфера.</exception>
      <exception cref="T:System.NotSupportedException">Поток не поддерживает запись.</exception>
      <exception cref="T:System.ObjectDisposedException">Поток был удален.</exception>
      <exception cref="T:System.InvalidOperationException">Поток в настоящее время используется предыдущей операцией записи.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
      <param name="source" />
      <param name="cancellationToken" />
    </member>
    <member name="M:System.IO.MemoryStream.WriteByte(System.Byte)">
      <summary>Записывает байт в текущее положение текущего потока.</summary>
      <param name="value">Записываемый байт.</param>
      <exception cref="T:System.NotSupportedException">Поток не поддерживает запись. Дополнительные сведения см. в разделе <see cref="P:System.IO.Stream.CanWrite" />.  

или - 
Текущее положение находится в конце потока и емкость изменить невозможно.</exception>
      <exception cref="T:System.ObjectDisposedException">Текущий поток закрыт.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.WriteTo(System.IO.Stream)">
      <summary>Записывает все содержимое данного потока памяти в другой поток.</summary>
      <param name="stream">Поток, в который требуется осуществить запись данного потока памяти.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="stream" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Текущий или конечный поток закрыт.</exception>
    </member>
    <member name="T:System.IO.Path">
      <summary>Выполняет операции для экземпляров класса <see cref="T:System.String" />, содержащих сведения о пути к файлу или каталогу. Эти операции выполняются межплатформенным способом.</summary>
    </member>
    <member name="F:System.IO.Path.AltDirectorySeparatorChar">
      <summary>Предоставляет дополнительный символ, задаваемый платформой, для разделения уровней каталогов в строке пути, в которой отражена иерархическая организация файловой системы.</summary>
    </member>
    <member name="M:System.IO.Path.ChangeExtension(System.String,System.String)">
      <summary>Изменяет расширение строки пути.</summary>
      <param name="path">Сведения о пути, которые нужно изменить. Путь не может содержать символы, определенные в <see cref="M:System.IO.Path.GetInvalidPathChars" />.</param>
      <param name="extension">Новое расширение (начинающееся с точки или без нее). Задает <see langword="null" /> для удаления существующего расширения из параметра <paramref name="path" />.</param>
      <returns>Измененные сведения о пути.  
В настольных системах, работающих под управлением Windows, сведения о пути возвращаются без изменений, если значение параметра <paramref name="path" /> равно <see langword="null" /> или пустой строке (""). Если значение параметра <paramref name="extension" /> равно <see langword="null" />, возвращаемая строка содержит указанный путь без расширения. Если <paramref name="path" /> не имеет расширения и значение параметра <paramref name="extension" /> не равно <see langword="null" />, возвращаемая строка пути содержит <paramref name="extension" />, добавленное в конец <paramref name="path" />.</returns>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="path" /> содержит один или несколько недопустимых символов, определенных в <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
    </member>
    <member name="M:System.IO.Path.Combine(System.String,System.String)">
      <summary>Объединяет две строки в путь.</summary>
      <param name="path1">Первый путь для объединения.</param>
      <param name="path2">Второй путь для объединения.</param>
      <returns>Объединенные пути. Если один из указанных путей является строкой нулевой длины, этот метод возвращает другой путь. Если в качестве значения параметра <paramref name="path2" /> задан абсолютный путь, этот метод возвращает <paramref name="path2" />.</returns>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="path1" /> или <paramref name="path2" /> содержит один или несколько недопустимых символов, определенных в <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="path1" /> или <paramref name="path2" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Path.Combine(System.String,System.String,System.String)">
      <summary>Объединяет три строки в путь.</summary>
      <param name="path1">Первый путь для объединения.</param>
      <param name="path2">Второй путь для объединения.</param>
      <param name="path3">Третий путь для объединения.</param>
      <returns>Объединенные пути.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path1" />, <paramref name="path2" /> или <paramref name="path3" /> содержит по крайней мере один из недопустимых символов, определенных в <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="path1" />, <paramref name="path2" /> или <paramref name="path3" /> равно <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Path.Combine(System.String,System.String,System.String,System.String)">
      <summary>Объединяет четыре строки в путь.</summary>
      <param name="path1">Первый путь для объединения.</param>
      <param name="path2">Второй путь для объединения.</param>
      <param name="path3">Третий путь для объединения.</param>
      <param name="path4">Четвертый путь для объединения.</param>
      <returns>Объединенные пути.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path1" />, <paramref name="path2" />, <paramref name="path3" /> или <paramref name="path4" /> содержит один или несколько недопустимых символов, определенных в <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="path1" />, <paramref name="path2" />, <paramref name="path3" /> или <paramref name="path4" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Path.Combine(System.String[])">
      <summary>Объединяет массив строк в путь.</summary>
      <param name="paths">Массив частей пути.</param>
      <returns>Объединенные пути.</returns>
      <exception cref="T:System.ArgumentException">Одна из строк в массиве содержит один или несколько недопустимых символов, определенных в <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">Одна из строк в массиве имеет значение <see langword="null" />.</exception>
    </member>
    <member name="F:System.IO.Path.DirectorySeparatorChar">
      <summary>Предоставляет символ, задаваемый платформой, для разделения уровней папок в строке пути, в которой отражена иерархическая организация файловой системы.</summary>
    </member>
    <member name="M:System.IO.Path.EndsInDirectorySeparator(System.ReadOnlySpan{System.Char})">
      <summary>Возвращает значение, указывающее, заканчивается ли путь, заданный в качестве диапазона, доступного только для чтения, в разделителе каталогов.</summary>
      <param name="path">Путь для анализа.</param>
      <returns>Значение <see langword="true" />, если путь заканчивается в разделителе каталогов; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.Path.EndsInDirectorySeparator(System.String)">
      <summary>Возвращает значение, указывающее, заканчивается ли заданный путь в разделителе каталогов.</summary>
      <param name="path">Путь для анализа.</param>
      <returns>Значение <see langword="true" />, если путь заканчивается в разделителе каталогов; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.Path.GetDirectoryName(System.ReadOnlySpan{System.Char})">
      <summary>Возвращает сведения о каталоге для указанного пути, представленного диапазоном символов.</summary>
      <param name="path">Путь для получения сведений о каталоге.</param>
      <returns>Сведения о каталоге для <paramref name="path" /> либо пустой диапазон, если значение <paramref name="path" /> — <see langword="null" />, пустой диапазон или корневая папка, например , C: или \server\share.</returns>
    </member>
    <member name="M:System.IO.Path.GetDirectoryName(System.String)">
      <summary>Возвращает для указанной строки пути сведения о каталоге.</summary>
      <param name="path">Путь к файлу или каталогу.</param>
      <returns>Сведения о каталоге для <paramref name="path" />, или значение <see langword="null" />, если путь <paramref name="path" /> указывает на корневой каталог или равен NULL. Возвращает <see cref="F:System.String.Empty" />, если параметр <paramref name="path" /> не содержит сведения о каталоге.</returns>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="path" /> пустой или содержит недопустимые символы либо только пробелы.</exception>
      <exception cref="T:System.IO.PathTooLongException">Вместо этого в .NET для приложений Магазина Windows или в переносимой библиотеке классов перехватите исключение базового класса <see cref="T:System.IO.IOException" />.  


            

 Имя параметра <paramref name="path" /> превышает максимально допустимую в системе длину.</exception>
    </member>
    <member name="M:System.IO.Path.GetExtension(System.ReadOnlySpan{System.Char})">
      <summary>Возвращает расширение из пути к файлу, представленного диапазоном символов только для чтения.</summary>
      <param name="path">Путь к файлу, из которого необходимо получить расширение.</param>
      <returns>Расширение указанного пути (включая точку — ".") или <see cref="P:System.ReadOnlySpan`1.Empty" />, если в <paramref name="path" /> отсутствуют сведения о расширении.</returns>
    </member>
    <member name="M:System.IO.Path.GetExtension(System.String)">
      <summary>Возвращает расширение указанной строки пути (включая точку ".").</summary>
      <param name="path">Строка пути, из которой нужно получить расширение.</param>
      <returns>Расширение указанного пути (включая точку ".") или значение <see langword="null" /> или <see cref="F:System.String.Empty" />. Если параметр <paramref name="path" /> имеет значение <see langword="null" />, <see cref="M:System.IO.Path.GetExtension(System.String)" /> возвращает <see langword="null" />. Если параметр <paramref name="path" /> не содержит сведений о расширении, <see cref="M:System.IO.Path.GetExtension(System.String)" /> возвращает <see cref="F:System.String.Empty" />.</returns>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="path" /> содержит один или несколько недопустимых символов, определенных в <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
    </member>
    <member name="M:System.IO.Path.GetFileName(System.ReadOnlySpan{System.Char})">
      <summary>Возвращает имя и расширение файла из пути к файлу, представленного диапазоном символов только для чтения.</summary>
      <param name="path">Диапазон только для чтения, содержащий путь, из которого нужно получить имя и расширение файла.</param>
      <returns>Символы, следующие за последним символом разделителя каталогов в пути <paramref name="path" />.</returns>
    </member>
    <member name="M:System.IO.Path.GetFileName(System.String)">
      <summary>Возвращает имя файла и расширение указанной строки пути.</summary>
      <param name="path">Строка пути, из которой нужно получить имя файла и расширение.</param>
      <returns>Символы, следующие за последним символом разделителя каталогов в пути <paramref name="path" />. Если последним символом параметра <paramref name="path" /> является символ разделения тома или каталога, этот метод возвращает <see cref="F:System.String.Empty" />. Если значением параметра <paramref name="path" /> является <see langword="null" />, метод возвращает <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="path" /> содержит один или несколько недопустимых символов, определенных в <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
    </member>
    <member name="M:System.IO.Path.GetFileNameWithoutExtension(System.ReadOnlySpan{System.Char})">
      <summary>Возвращает имя файла без расширения из пути к файлу, представленного диапазоном символов только для чтения.</summary>
      <param name="path">Диапазон только для чтения, содержащий путь, из которого нужно получить имя файла без расширения.</param>
      <returns>Символы в диапазоне только для чтения, возвращенные методом <see cref="M:System.IO.Path.GetFileName(System.ReadOnlySpan{System.Char})" />, кроме последней точки (.) и всех следующих за ней символов.</returns>
    </member>
    <member name="M:System.IO.Path.GetFileNameWithoutExtension(System.String)">
      <summary>Возвращает имя файла указанной строки пути без расширения.</summary>
      <param name="path">Путь к файлу.</param>
      <returns>Строка, возвращенная методом <see cref="M:System.IO.Path.GetFileName(System.ReadOnlySpan{System.Char})" />, кроме последней точки (.) и всех следующих за ней символов.</returns>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="path" /> содержит один или несколько недопустимых символов, определенных в <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
    </member>
    <member name="M:System.IO.Path.GetFullPath(System.String)">
      <summary>Возвращает для указанной строки пути абсолютный путь.</summary>
      <param name="path">Файл или каталог, для которых нужно получить сведения об абсолютном пути.</param>
      <returns>Полное расположение <paramref name="path" />, например "C:\MyFile.txt".</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов, как указано в <see cref="M:System.IO.Path.GetInvalidPathChars" />.  

или - 
Система не может извлечь абсолютный путь.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствуют необходимые разрешения.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> — <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> содержит двоеточие (:), которое не является частью идентификатора тома (например, "c:\").</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
    </member>
    <member name="M:System.IO.Path.GetFullPath(System.String,System.String)">
      <summary>Возвращает абсолютный путь из базового полного пути и относительного пути.</summary>
      <param name="path">Относительный путь для сцепления с <paramref name="basePath" />.</param>
      <param name="basePath">Начало полного пути.</param>
      <returns>Абсолютный путь.</returns>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="path" /> или <paramref name="basePath" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="basePath" /> — это не полный путь.

или -

<paramref name="path" /> или <paramref name="basePath" /> содержит недопустимые символы, такие как U+0000.</exception>
    </member>
    <member name="M:System.IO.Path.GetInvalidFileNameChars">
      <summary>Возвращает массив, содержащий символы, которые не разрешены в именах файлов.</summary>
      <returns>Массив, содержащий символы, которые не разрешены в именах файлов.</returns>
    </member>
    <member name="M:System.IO.Path.GetInvalidPathChars">
      <summary>Возвращает массив, содержащий символы, которые не разрешены в именах путей.</summary>
      <returns>Массив, содержащий символы, которые не разрешены в именах путей.</returns>
    </member>
    <member name="M:System.IO.Path.GetPathRoot(System.ReadOnlySpan{System.Char})">
      <summary>Получает сведения о корневом каталоге из пути, содержащегося в указанном диапазоне символов.</summary>
      <param name="path">Путь, из которого нужно получить сведения о корневом каталоге.</param>
      <returns>Диапазон символов, содержащий корневой каталог пути path.</returns>
    </member>
    <member name="M:System.IO.Path.GetPathRoot(System.String)">
      <summary>Возвращает сведения о корневом каталоге для указанного пути.</summary>
      <param name="path">Путь, из которого нужно получить сведения о корневом каталоге.</param>
      <returns>Корневой каталог параметра <paramref name="path" /> или <see langword="null" />, если параметр <paramref name="path" /> имеет значение <see langword="null" />, или пустая строка, если параметр <paramref name="path" /> не содержит сведений о корневом каталоге.</returns>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="path" /> содержит один или несколько недопустимых символов, определенных в <see cref="M:System.IO.Path.GetInvalidPathChars" />.  

или - 
Компонент <see cref="F:System.String.Empty" /> был передан в <paramref name="path" />.</exception>
    </member>
    <member name="M:System.IO.Path.GetRandomFileName">
      <summary>Возвращает произвольное имя каталога или файла.</summary>
      <returns>Произвольное имя каталога или файла.</returns>
    </member>
    <member name="M:System.IO.Path.GetRelativePath(System.String,System.String)">
      <summary>Возвращает относительный путь от одного пути к другому.</summary>
      <param name="relativeTo">Исходный путь, относительно которого должен указываться результат. Этот путь всегда считается каталогом.</param>
      <param name="path">Целевой путь.</param>
      <returns>Относительный путь или <paramref name="path" />, если в нескольких путях используются разные корневые папки.</returns>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="relativeTo" /> или <paramref name="path" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Path.GetTempFileName">
      <summary>Создает на диске временный пустой файл с уникальным именем и возвращает полный путь этого файла.</summary>
      <returns>Полный путь к временному файлу.</returns>
      <exception cref="T:System.IO.IOException">Возникает ошибка ввода-вывода, например, отсутствует уникальное имя временного файла.  

или -

 Этот метод не смог создать временный файл.</exception>
    </member>
    <member name="M:System.IO.Path.GetTempPath">
      <summary>Возвращает путь к временной папке текущего пользователя.</summary>
      <returns>Путь к временной папке, заканчивающийся обратной косой чертой.</returns>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствуют необходимые разрешения.</exception>
    </member>
    <member name="M:System.IO.Path.HasExtension(System.ReadOnlySpan{System.Char})">
      <summary>Определяет, включает ли путь, представленный указанным диапазоном символов, расширение имени файла.</summary>
      <param name="path">Путь для поиска расширения.</param>
      <returns>Значение <see langword="true" />, если символы, следующие за последним символом разделителя каталогов или за разделителем томов (:) в пути, включают точку (.), за которой следует один или несколько символов. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.Path.HasExtension(System.String)">
      <summary>Определяет, включает ли путь расширение имени файла.</summary>
      <param name="path">Путь для поиска расширения.</param>
      <returns>Значение <see langword="true" />, если знаки, следующие за последним разделителем каталога (\\ или /) или разделителем тома (:) в пути, включают точку (.), за которой следует один или несколько символов. В противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="path" /> содержит один или несколько недопустимых символов, определенных в <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
    </member>
    <member name="F:System.IO.Path.InvalidPathChars">
      <summary>Предоставляет массив символов, задаваемых платформой, которые не могут быть указаны в аргументах строки пути, передаваемых в элементы класса <see cref="T:System.IO.Path" />.</summary>
    </member>
    <member name="M:System.IO.Path.IsPathFullyQualified(System.ReadOnlySpan{System.Char})">
      <summary>Возвращает значение, которое показывает, является ли путь к файлу, представленный указанным диапазоном символов, фиксированным для определенного диска или UNC-пути.</summary>
      <param name="path">Путь к файлу.</param>
      <returns>Значение <see langword="true" />, если путь привязан к определенному диску или UNC-пути; <see langword="false" /> — если путь задается относительно текущего диска или рабочей папки.</returns>
    </member>
    <member name="M:System.IO.Path.IsPathFullyQualified(System.String)">
      <summary>Возвращает значение, которое показывает, является ли указанный путь к файлу фиксированным для определенного диска или UNC-пути.</summary>
      <param name="path">Путь к файлу.</param>
      <returns>Значение <see langword="true" />, если путь привязан к определенному диску или UNC-пути; <see langword="false" /> — если путь задается относительно текущего диска или рабочей папки.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="path" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Path.IsPathRooted(System.ReadOnlySpan{System.Char})">
      <summary>Возвращает значение, которое показывает, содержит ли указанный диапазон символов, являющийся путем к файлу, корневую папку.</summary>
      <param name="path">Проверяемый путь.</param>
      <returns>Значение <see langword="true" />, если параметр <paramref name="path" /> содержит корневую папку; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.Path.IsPathRooted(System.String)">
      <summary>Возвращает значение, показывающее, содержит ли указанная строка пути корневую папку.</summary>
      <param name="path">Проверяемый путь.</param>
      <returns>Значение <see langword="true" />, если параметр <paramref name="path" /> содержит корневую папку; в противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="path" /> содержит один или несколько недопустимых символов, определенных в <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
    </member>
    <member name="M:System.IO.Path.Join(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})">
      <summary>Сцепляет два компонента пути в один путь.</summary>
      <param name="path1">Диапазон символов, содержащий первый путь для объединения.</param>
      <param name="path2">Диапазон символов, содержащий второй путь для объединения.</param>
      <returns>Объединенные пути.</returns>
    </member>
    <member name="M:System.IO.Path.Join(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})">
      <summary>Сцепляет три компонента пути в один путь.</summary>
      <param name="path1">Диапазон символов, содержащий первый путь для объединения.</param>
      <param name="path2">Диапазон символов, содержащий второй путь для объединения.</param>
      <param name="path3">Диапазон символов, содержащий третий путь для объединения.</param>
      <returns>Сцепленный путь.</returns>
    </member>
    <member name="M:System.IO.Path.Join(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})">
      <summary>Сцепляет четыре компонента пути в один путь.</summary>
      <param name="path1">Диапазон символов, содержащий первый путь для объединения.</param>
      <param name="path2">Диапазон символов, содержащий второй путь для объединения.</param>
      <param name="path3">Диапазон символов, содержащий третий путь для объединения.</param>
      <param name="path4">Диапазон символов, содержащий четвертый путь для объединения.</param>
      <returns>Сцепленный путь.</returns>
    </member>
    <member name="M:System.IO.Path.Join(System.String,System.String)">
      <summary>Сцепляет два пути в один путь.</summary>
      <param name="path1">Первый путь для объединения.</param>
      <param name="path2">Второй путь для объединения.</param>
      <returns>Сцепленный путь.</returns>
    </member>
    <member name="M:System.IO.Path.Join(System.String,System.String,System.String)">
      <summary>Сцепляет три пути в один путь.</summary>
      <param name="path1">Первый путь для объединения.</param>
      <param name="path2">Второй путь для объединения.</param>
      <param name="path3">Третий путь для объединения.</param>
      <returns>Сцепленный путь.</returns>
    </member>
    <member name="M:System.IO.Path.Join(System.String,System.String,System.String,System.String)">
      <summary>Сцепляет четыре пути в один путь.</summary>
      <param name="path1">Первый путь для объединения.</param>
      <param name="path2">Второй путь для объединения.</param>
      <param name="path3">Третий путь для объединения.</param>
      <param name="path4">Четвертый путь для объединения.</param>
      <returns>Сцепленный путь.</returns>
    </member>
    <member name="M:System.IO.Path.Join(System.String[])">
      <summary>Сцепляет массив путей в один путь.</summary>
      <param name="paths">Массив путей.</param>
      <returns>Сцепленный путь.</returns>
    </member>
    <member name="F:System.IO.Path.PathSeparator">
      <summary>Разделитель, задаваемый платформой, который используется в переменных среды для разделения строк пути.</summary>
    </member>
    <member name="M:System.IO.Path.TrimEndingDirectorySeparator(System.ReadOnlySpan{System.Char})">
      <summary>Обрезает один конечный разделитель каталогов за пределами корня указанного пути.</summary>
      <param name="path">Обрезаемый путь.</param>
      <returns>
        <paramref name="path" /> без конечных разделителей каталогов.</returns>
    </member>
    <member name="M:System.IO.Path.TrimEndingDirectorySeparator(System.String)">
      <summary>Обрезает один конечный разделитель каталогов за пределами корня указанного пути.</summary>
      <param name="path">Обрезаемый путь.</param>
      <returns>
        <paramref name="path" /> без конечных разделителей каталогов.</returns>
    </member>
    <member name="M:System.IO.Path.TryJoin(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.Span{System.Char},System.Int32@)">
      <summary>Пытается сцепить два компонента пути в один предварительно выделенный диапазон символов и возвращает значение, показывающее, успешно ли выполнена эта операция.</summary>
      <param name="path1">Диапазон символов, содержащий первый путь для объединения.</param>
      <param name="path2">Диапазон символов, содержащий второй путь для объединения.</param>
      <param name="path3">Диапазон символов, содержащий третий путь для объединения.</param>
      <param name="destination">Диапазон символов для указания объединенного пути.</param>
      <param name="charsWritten">При возврате метода это значение показывает количество символов, записанных в <paramref name="destination" />.</param>
      <returns>Значение <see langword="true" />, если операция объединения выполнена успешно; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.Path.TryJoin(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.Span{System.Char},System.Int32@)">
      <summary>Пытается сцепить два компонента пути в один предварительно выделенный диапазон символов и возвращает значение, показывающее, успешно ли выполнена эта операция.</summary>
      <param name="path1">Диапазон символов, содержащий первый путь для объединения.</param>
      <param name="path2">Диапазон символов, содержащий второй путь для объединения.</param>
      <param name="destination">Диапазон символов для указания объединенного пути.</param>
      <param name="charsWritten">При возврате метода это значение показывает количество символов, записанных в <paramref name="destination" />.</param>
      <returns>Значение <see langword="true" />, если операция объединения выполнена успешно; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="F:System.IO.Path.VolumeSeparatorChar">
      <summary>Предоставляет разделитель томов, задаваемый платформой.</summary>
    </member>
    <member name="T:System.IO.StreamReader">
      <summary>Реализует <see cref="T:System.IO.TextReader" />, который считывает символы из потока байтов в определенной кодировке.</summary>
    </member>
    <member name="M:System.IO.StreamReader.#ctor(System.IO.Stream)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.StreamReader" /> для заданного потока.</summary>
      <param name="stream">Поток, который нужно считать.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> не поддерживает чтение.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.StreamReader.#ctor(System.IO.Stream,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.StreamReader" /> для указанного потока с заданным параметром обнаружения метки порядка следования байтов.</summary>
      <param name="stream">Поток, который нужно считать.</param>
      <param name="detectEncodingFromByteOrderMarks">Указывает, следует ли выполнять поиск меток порядка байтов с начала файла.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> не поддерживает чтение.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.StreamReader" /> для заданного потока с заданной кодировкой символов.</summary>
      <param name="stream">Поток, который нужно считать.</param>
      <param name="encoding">Кодировка символов, которую нужно использовать.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> не поддерживает чтение.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="stream" /> или <paramref name="encoding" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.StreamReader" /> для заданного потока с заданной кодировкой символов и параметром обнаружения метки порядка следования байтов.</summary>
      <param name="stream">Поток, который нужно считать.</param>
      <param name="encoding">Кодировка символов, которую нужно использовать.</param>
      <param name="detectEncodingFromByteOrderMarks">Указывает, следует ли выполнять поиск меток порядка байтов с начала файла.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> не поддерживает чтение.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="stream" /> или <paramref name="encoding" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.StreamReader" /> для заданного потока с заданной кодировкой символов, параметром обнаружения метки порядка следования байтов и размером буфера.</summary>
      <param name="stream">Поток, который нужно считать.</param>
      <param name="encoding">Кодировка символов, которую нужно использовать.</param>
      <param name="detectEncodingFromByteOrderMarks">Указывает, следует ли выполнять поиск меток порядка байтов с начала файла.</param>
      <param name="bufferSize">Минимальный размер буфера.</param>
      <exception cref="T:System.ArgumentException">Поток не поддерживает чтение.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="stream" /> или <paramref name="encoding" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="bufferSize" /> не больше нуля.</exception>
    </member>
    <member name="M:System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Int32,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.StreamReader" /> для заданного потока на основании заданной кодировки символов, параметра обнаружения метки порядка следования байтов и размера буфера, а также при необходимости оставляет поток открытым.</summary>
      <param name="stream">Считываемый поток.</param>
      <param name="encoding">Кодировка символов, которую нужно использовать.</param>
      <param name="detectEncodingFromByteOrderMarks">Значение <see langword="true" />, если метки порядка байтов необходимо искать в начале файла; в противном случае — значение <see langword="false" />.</param>
      <param name="bufferSize">Минимальный размер буфера.</param>
      <param name="leaveOpen">Значение <see langword="true" />, чтобы оставить поток открытым после удаления объекта <see cref="T:System.IO.StreamReader" />; в противном случае — значение <see langword="false" />.</param>
    </member>
    <member name="M:System.IO.StreamReader.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.StreamReader" /> для указанного имени файла.</summary>
      <param name="path">Полный путь к файлу для чтения.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="path" /> является пустой строкой ("").</exception>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Файл не найден.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указанный путь недопустим; возможно, он соответствует неподключенному диску.</exception>
      <exception cref="T:System.IO.IOException">Параметр <paramref name="path" /> включает неверный или недопустимый синтаксис имени файла, имени каталога или метки тома.</exception>
    </member>
    <member name="M:System.IO.StreamReader.#ctor(System.String,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.StreamReader" /> для указанного имени файла с заданным параметром обнаружения метки порядка следования байтов.</summary>
      <param name="path">Полный путь к файлу для чтения.</param>
      <param name="detectEncodingFromByteOrderMarks">Определяет, необходимо ли осуществлять поиск меток порядка следования байтов в начале файла.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="path" /> является пустой строкой ("").</exception>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Файл не найден.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указанный путь недопустим; возможно, он соответствует неподключенному диску.</exception>
      <exception cref="T:System.IO.IOException">Параметр <paramref name="path" /> включает неверный или недопустимый синтаксис имени файла, имени каталога или метки тома.</exception>
    </member>
    <member name="M:System.IO.StreamReader.#ctor(System.String,System.Text.Encoding)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.StreamReader" /> для указанного имени файла с заданной кодировкой символов.</summary>
      <param name="path">Полный путь к файлу для чтения.</param>
      <param name="encoding">Кодировка символов, которую нужно использовать.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="path" /> является пустой строкой ("").</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="path" /> или <paramref name="encoding" /> — <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Не удается найти файл.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указанный путь недопустим; возможно, он соответствует неподключенному диску.</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="path" /> включает неверный или недопустимый синтаксис имени файла, имени каталога или метки тома.</exception>
    </member>
    <member name="M:System.IO.StreamReader.#ctor(System.String,System.Text.Encoding,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.StreamReader" /> для указанного имени файла с заданной кодировкой символов и параметром обнаружения метки порядка следования байтов.</summary>
      <param name="path">Полный путь к файлу для чтения.</param>
      <param name="encoding">Кодировка символов, которую нужно использовать.</param>
      <param name="detectEncodingFromByteOrderMarks">Указывает, следует ли выполнять поиск меток порядка байтов с начала файла.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="path" /> является пустой строкой ("").</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="path" /> или <paramref name="encoding" /> — <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Не удается найти файл.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указанный путь недопустим; возможно, он соответствует неподключенному диску.</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="path" /> включает неверный или недопустимый синтаксис имени файла, имени каталога или метки тома.</exception>
    </member>
    <member name="M:System.IO.StreamReader.#ctor(System.String,System.Text.Encoding,System.Boolean,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.StreamReader" /> для указанного имени файла с заданной кодировкой символов, параметром обнаружения метки порядка следования байтов и размером буфера.</summary>
      <param name="path">Полный путь к файлу для чтения.</param>
      <param name="encoding">Кодировка символов, которую нужно использовать.</param>
      <param name="detectEncodingFromByteOrderMarks">Указывает, следует ли выполнять поиск меток порядка байтов с начала файла.</param>
      <param name="bufferSize">Минимальный размер буфера (задается в 16-разрядных символах).</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="path" /> является пустой строкой ("").</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="path" /> или <paramref name="encoding" /> — <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Не удается найти файл.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указанный путь недопустим; возможно, он соответствует неподключенному диску.</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="path" /> включает неверный или недопустимый синтаксис имени файла, имени каталога или метки тома.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="buffersize" /> не больше нуля.</exception>
    </member>
    <member name="P:System.IO.StreamReader.BaseStream">
      <summary>Возвращает основной поток.</summary>
      <returns>Основной поток.</returns>
    </member>
    <member name="M:System.IO.StreamReader.Close">
      <summary>Закрывает объект <see cref="T:System.IO.StreamReader" /> и основной поток и освобождает все системные ресурсы, связанные с устройством чтения.</summary>
    </member>
    <member name="P:System.IO.StreamReader.CurrentEncoding">
      <summary>Получает текущую кодировку символов, используемую текущим объектом <see cref="T:System.IO.StreamReader" />.</summary>
      <returns>Текущая кодировка символов, используемая текущим устройством чтения. После первого вызова любого метода <see cref="Overload:System.IO.StreamReader.Read" /> объекта <see cref="T:System.IO.StreamReader" /> значение может измениться, поскольку до первого вызова метода <see cref="Overload:System.IO.StreamReader.Read" /> автоматическое определение кодировки не выполняется.</returns>
    </member>
    <member name="M:System.IO.StreamReader.DiscardBufferedData">
      <summary>Очищает внутренний буфер.</summary>
    </member>
    <member name="M:System.IO.StreamReader.Dispose(System.Boolean)">
      <summary>Закрывает основной поток, освобождает неуправляемые ресурсы, используемые <see cref="T:System.IO.StreamReader" />, и при необходимости освобождает управляемые ресурсы.</summary>
      <param name="disposing">Значение <see langword="true" /> позволяет освободить управляемые и неуправляемые ресурсы; значение <see langword="false" /> позволяет освободить только неуправляемые ресурсы.</param>
    </member>
    <member name="P:System.IO.StreamReader.EndOfStream">
      <summary>Получает значение, определяющее, находится ли позиция текущего потока в конце потока.</summary>
      <returns>Значение<see langword="true" /> , если текущее положение находится в конце потока; в противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.ObjectDisposedException">Основной поток удален.</exception>
    </member>
    <member name="F:System.IO.StreamReader.Null">
      <summary>Объект <see cref="T:System.IO.StreamReader" /> для пустого потока.</summary>
    </member>
    <member name="M:System.IO.StreamReader.Peek">
      <summary>Возвращает следующий доступный символ, но не использует его.</summary>
      <returns>Целое число, представляющее следующий символ для прочтения или значение -1, если доступных для чтения символов нет или поток не поддерживает поиск.</returns>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
    </member>
    <member name="M:System.IO.StreamReader.Read">
      <summary>Выполняет чтение следующего символа из входного потока и перемещает положение символа на одну позицию вперед.</summary>
      <returns>Следующий символ из входного потока, представленного в виде объекта <see cref="T:System.Int32" />, или значение -1, если больше нет доступных символов.</returns>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
    </member>
    <member name="M:System.IO.StreamReader.Read(System.Char[],System.Int32,System.Int32)">
      <summary>Считывает заданное максимальное количество символов из текущего потока в буфер начиная с заданного индекса.</summary>
      <param name="buffer">При возвращении данного метода содержит заданный массив знаков, в котором значения в интервале между <paramref name="index" /> и (<c>index + count – 1</c>) заменены знаками, считанными из текущего источника.</param>
      <param name="index">Индекс <paramref name="buffer" />, с которого требуется начать запись.</param>
      <param name="count">Максимальное число считываемых символов.</param>
      <returns>Число символов, которые были считаны, или значение 0, если к концу потока не было считано никаких данных. Количество будет меньше или равно параметру <paramref name="count" /> в зависимости от доступности данных в потоке.</returns>
      <exception cref="T:System.ArgumentException">Длина буфера минус <paramref name="index" /> меньше <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> или <paramref name="count" /> является отрицательным значением.</exception>
      <exception cref="T:System.IO.IOException">Возникает ошибка ввода-вывода, например закрывается поток.</exception>
    </member>
    <member name="M:System.IO.StreamReader.Read(System.Span{System.Char})">
      <param name="buffer" />
    </member>
    <member name="M:System.IO.StreamReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Асинхронно считывает указанное максимальное количество символов из текущего потока и записывает данные в буфер, начиная с заданного индекса.</summary>
      <param name="buffer">При возвращении из этого метода содержит указанный массив символов, в котором значения в интервале от <paramref name="index" /> и (<paramref name="index" /> + <paramref name="count" /> - 1) заменены символами, считанными из текущего источника.</param>
      <param name="index">Позиция в буфере <paramref name="buffer" />, с которого начинается запись.</param>
      <param name="count">Максимальное число считываемых символов. Если конец потока достигнут, прежде чем указанное количество символов записывается в буфер, возвращается текущий метод.</param>
      <returns>Задача, представляющая асинхронную операцию чтения. Значение параметра <paramref name="TResult" /> содержит общее число символов (в байтах), считанных в буфер. Результирующее значение может быть меньше запрошенного числа символов, если число доступных в данный момент символов меньше запрошенного числа, или результат может быть равен 0 (нулю), если достигнут конец потока.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> или <paramref name="count" /> является отрицательным значением.</exception>
      <exception cref="T:System.ArgumentException">Сумма <paramref name="index" /> и <paramref name="count" /> больше, чем длина буфера.</exception>
      <exception cref="T:System.ObjectDisposedException">Поток был удален.</exception>
      <exception cref="T:System.InvalidOperationException">Средство чтения в настоящее время используется предыдущей операцией чтения.</exception>
    </member>
    <member name="M:System.IO.StreamReader.ReadAsync(System.Memory{System.Char},System.Threading.CancellationToken)">
      <param name="buffer" />
      <param name="cancellationToken" />
    </member>
    <member name="M:System.IO.StreamReader.ReadBlock(System.Char[],System.Int32,System.Int32)">
      <summary>Считывает указанное максимальное количество символов из текущего потока и записывает данные в буфер, начиная с заданного индекса.</summary>
      <param name="buffer">При возвращении данного метода содержит заданный массив знаков, в котором значения в интервале между <paramref name="index" /> и (<c>index + count – 1</c>) заменены знаками, считанными из текущего источника.</param>
      <param name="index">Позиция в буфере <paramref name="buffer" />, с которого начинается запись.</param>
      <param name="count">Максимальное число считываемых символов.</param>
      <returns>Количество считанных символов. Число будет меньше или равно значению <paramref name="count" /> в зависимости от того, считаны ли все входящие символы.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Длина буфера минус <paramref name="index" /> меньше <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> или <paramref name="count" /> является отрицательным значением.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.StreamReader" /> закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода/вывода.</exception>
    </member>
    <member name="M:System.IO.StreamReader.ReadBlock(System.Span{System.Char})">
      <param name="buffer" />
    </member>
    <member name="M:System.IO.StreamReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Асинхронно считывает указанное максимальное количество символов из текущего потока и записывает данные в буфер, начиная с заданного индекса.</summary>
      <param name="buffer">При возвращении из этого метода содержит указанный массив символов, в котором значения в интервале от <paramref name="index" /> и (<paramref name="index" /> + <paramref name="count" /> - 1) заменены символами, считанными из текущего источника.</param>
      <param name="index">Позиция в буфере <paramref name="buffer" />, с которого начинается запись.</param>
      <param name="count">Наибольшее число символов для чтения. Если конец потока достигнут, прежде чем в буфер записано указанное количество символов, метод возвращает управление.</param>
      <returns>Задача, представляющая асинхронную операцию чтения. Значение параметра <paramref name="TResult" /> содержит общее число символов (в байтах), считанных в буфер. Результирующее значение может быть меньше запрошенного числа символов, если число доступных в данный момент символов меньше запрошенного числа, или результат может быть равен 0 (нулю), если достигнут конец потока.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> или <paramref name="count" /> является отрицательным значением.</exception>
      <exception cref="T:System.ArgumentException">Сумма <paramref name="index" /> и <paramref name="count" /> больше, чем длина буфера.</exception>
      <exception cref="T:System.ObjectDisposedException">Поток был удален.</exception>
      <exception cref="T:System.InvalidOperationException">Модуль чтения в настоящее время используется предыдущей операцией чтения.</exception>
    </member>
    <member name="M:System.IO.StreamReader.ReadBlockAsync(System.Memory{System.Char},System.Threading.CancellationToken)">
      <param name="buffer" />
      <param name="cancellationToken" />
    </member>
    <member name="M:System.IO.StreamReader.ReadLine">
      <summary>Выполняет чтение строки символов из текущего потока и возвращает данные в виде строки.</summary>
      <returns>Следующая строка из входного потока или значение <see langword="null" />, если достигнут конец входного потока.</returns>
      <exception cref="T:System.OutOfMemoryException">Не хватает памяти для выделения буфера под возвращаемую строку.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
    </member>
    <member name="M:System.IO.StreamReader.ReadLineAsync">
      <summary>Асинхронно выполняет чтение строки символов из текущего потока и возвращает данные в виде строки.</summary>
      <returns>Задача, представляющая асинхронную операцию чтения. Значение параметра <paramref name="TResult" /> содержит следующую строку из потока или значение <see langword="null" />, если все знаки считаны.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Количество символов в следующей строке больше <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Поток был удален.</exception>
      <exception cref="T:System.InvalidOperationException">Модуль чтения в настоящее время используется предыдущей операцией чтения.</exception>
    </member>
    <member name="M:System.IO.StreamReader.ReadToEnd">
      <summary>Считывает все символы, начиная с текущей позиции до конца потока.</summary>
      <returns>Остальная часть потока в виде строки (от текущего положения до конца). Если текущее положение находится в конце потока, возвращается пустая строка ("").</returns>
      <exception cref="T:System.OutOfMemoryException">Не хватает памяти для выделения буфера под возвращаемую строку.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
    </member>
    <member name="M:System.IO.StreamReader.ReadToEndAsync">
      <summary>Асинхронно считывает все символы, начиная с текущей позиции до конца потока, и возвращает их в виде одной строки.</summary>
      <returns>Задача, представляющая асинхронную операцию чтения. Значение параметра <paramref name="TResult" /> содержит строку с символами от текущего положения до конца потока.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Количество символов больше <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Поток был удален.</exception>
      <exception cref="T:System.InvalidOperationException">Модуль чтения в настоящее время используется предыдущей операцией чтения.</exception>
    </member>
    <member name="T:System.IO.StreamWriter">
      <summary>Реализует <see cref="T:System.IO.TextWriter" /> для записи символов в поток в определенной кодировке.</summary>
    </member>
    <member name="M:System.IO.StreamWriter.#ctor(System.IO.Stream)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.StreamWriter" /> для указанного потока, используя кодировку UTF-8 и размер буфера по умолчанию.</summary>
      <param name="stream">Поток, в который требуется выполнить запись.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> недоступно для записи.</exception>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="stream" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.StreamWriter" /> для указанного потока, используя заданную кодировку и размер буфера по умолчанию.</summary>
      <param name="stream">Поток, в который требуется выполнить запись.</param>
      <param name="encoding">Кодировка символов, которую нужно использовать.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="stream" /> или <paramref name="encoding" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> недоступно для записи.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.StreamWriter" /> для указанного потока, используя заданную кодировку и размер буфера.</summary>
      <param name="stream">Поток, в который требуется выполнить запись.</param>
      <param name="encoding">Кодировка символов, которую нужно использовать.</param>
      <param name="bufferSize">Размер буфера в байтах.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="stream" /> или <paramref name="encoding" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bufferSize" /> является отрицательным значением.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> недоступно для записи.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.StreamWriter" /> для указанного потока, используя заданную кодировку и размер буфера, а также при необходимости оставляет поток открытым.</summary>
      <param name="stream">Поток, в который требуется выполнить запись.</param>
      <param name="encoding">Кодировка символов, которую нужно использовать.</param>
      <param name="bufferSize">Размер буфера в байтах.</param>
      <param name="leaveOpen">Значение <see langword="true" />, чтобы оставить поток открытым после удаления объекта <see cref="T:System.IO.StreamWriter" />; в противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="stream" /> или <paramref name="encoding" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bufferSize" /> является отрицательным значением.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> недоступно для записи.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.StreamWriter" /> для указанного файла с помощью кодировки по умолчанию и размера буфера.</summary>
      <param name="path">Полный путь к файлу для записи. Параметр <paramref name="path" /> может представлять собой имя файла.</param>
      <exception cref="T:System.UnauthorizedAccessException">Отказано в доступе.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="path" /> является пустой строкой ("").  

или - 
<paramref name="path" /> содержит имя системного устройства (com1, com2 и т. д.).</exception>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.IO.IOException">Параметр <paramref name="path" /> включает неверный или недопустимый синтаксис имени файла, имени каталога или метки тома.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.StreamWriter" /> для указанного файла с помощью кодировки по умолчанию и размера буфера. Если файл существует, он может быть либо перезаписан, либо в него могут быть добавлены данные. Если файл не существует, конструктор создает новый файл.</summary>
      <param name="path">Полный путь к файлу для записи.</param>
      <param name="append">
        <see langword="true" /> для добавления данных в файл; значение <see langword="false" /> для перезаписи файла. Если указанный файл не существует, этот параметр не действует и конструктор создает новый файл.</param>
      <exception cref="T:System.UnauthorizedAccessException">Отказано в доступе.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="path" /> пуст.  

или - 
<paramref name="path" /> содержит имя системного устройства (com1, com2 и т. д.).</exception>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.IO.IOException">Параметр <paramref name="path" /> включает неверный или недопустимый синтаксис имени файла, имени каталога или метки тома.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.StreamWriter" /> для указанного файла с помощью указанной кодировки и размера буфера по умолчанию. Если файл существует, он может быть либо перезаписан, либо в него могут быть добавлены данные. Если файл не существует, конструктор создает новый файл.</summary>
      <param name="path">Полный путь к файлу для записи.</param>
      <param name="append">
        <see langword="true" /> для добавления данных в файл; значение <see langword="false" /> для перезаписи файла. Если указанный файл не существует, этот параметр не действует и конструктор создает новый файл.</param>
      <param name="encoding">Кодировка символов, которую нужно использовать.</param>
      <exception cref="T:System.UnauthorizedAccessException">Отказано в доступе.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="path" /> пуст.  
-или- 
 <paramref name="path" /> содержит имя системного устройства (com1, com2 и т. д.).</exception>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.IO.IOException">Параметр <paramref name="path" /> включает неверный или недопустимый синтаксис имени файла, имени каталога или метки тома.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.StreamWriter" /> для указанного файла по заданному пути, используя заданную кодировку и размер буфера. Если файл существует, он может быть либо перезаписан, либо в него могут быть добавлены данные. Если файл не существует, конструктор создает новый файл.</summary>
      <param name="path">Полный путь к файлу для записи.</param>
      <param name="append">
        <see langword="true" /> для добавления данных в файл; значение <see langword="false" /> для перезаписи файла. Если указанный файл не существует, этот параметр не действует и конструктор создает новый файл.</param>
      <param name="encoding">Кодировка символов, которую нужно использовать.</param>
      <param name="bufferSize">Размер буфера в байтах.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="path" /> является пустой строкой ("").  

или - 
<paramref name="path" /> содержит имя системного устройства (com1, com2 и т. д.).</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="path" /> или <paramref name="encoding" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bufferSize" /> является отрицательным значением.</exception>
      <exception cref="T:System.IO.IOException">Параметр <paramref name="path" /> включает неверный или недопустимый синтаксис имени файла, имени каталога или метки тома.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Отказано в доступе.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
    </member>
    <member name="P:System.IO.StreamWriter.AutoFlush">
      <summary>Получает или задает значение, определяющее, будет ли <see cref="T:System.IO.StreamWriter" /> сбрасывать буфер в основной поток после каждого вызова <see cref="M:System.IO.StreamWriter.Write(System.Char)" />.</summary>
      <returns>Значение <see langword="true" />, чтобы заставить <see cref="T:System.IO.StreamWriter" /> сбросить буфер; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.IO.StreamWriter.BaseStream">
      <summary>Получает основной поток, связанный с резервным хранилищем.</summary>
      <returns>Поток, в который <see langword="StreamWriter" /> выполняет запись.</returns>
    </member>
    <member name="M:System.IO.StreamWriter.Close">
      <summary>Закрывает текущий объект <see langword="StreamWriter" /> и базовый поток.</summary>
      <exception cref="T:System.Text.EncoderFallbackException">Текущая кодировка не поддерживает отображение половины суррогатной пары Юникода.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.Dispose(System.Boolean)">
      <summary>Принудительно записывает все буферизированные данные в базовый поток, освобождает неуправляемые ресурсы, используемые <see cref="T:System.IO.StreamWriter" />, а при необходимости — и управляемые ресурсы.</summary>
      <param name="disposing">Значение <see langword="true" /> позволяет освободить управляемые и неуправляемые ресурсы; значение <see langword="false" /> позволяет освободить только неуправляемые ресурсы.</param>
      <exception cref="T:System.Text.EncoderFallbackException">Текущая кодировка не поддерживает отображение половины суррогатной пары Юникода.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.DisposeAsync">
      <summary>Асинхронно записывает любые буферизованные данные в базовый поток и освобождает неуправляемые ресурсы, используемые <see cref="T:System.IO.StreamWriter" />.</summary>
      <returns>Задача, представляющая асинхронную операцию закрытия.</returns>
    </member>
    <member name="P:System.IO.StreamWriter.Encoding">
      <summary>Получает кодировку <see cref="T:System.Text.Encoding" />, в которой осуществляется запись выходных данных.</summary>
      <returns>Кодировка <see cref="T:System.Text.Encoding" />, указанная в конструкторе для текущего экземпляра, или <see cref="T:System.Text.UTF8Encoding" />, если кодировка не задана.</returns>
    </member>
    <member name="M:System.IO.StreamWriter.Flush">
      <summary>Очищает все буферы для текущего средства записи и вызывает запись всех данных буфера в основной поток.</summary>
      <exception cref="T:System.ObjectDisposedException">Текущее средство записи закрывается.</exception>
      <exception cref="T:System.IO.IOException">Произошла ошибка ввода-вывода.</exception>
      <exception cref="T:System.Text.EncoderFallbackException">Текущая кодировка не поддерживает отображение половины суррогатной пары Юникода.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.FlushAsync">
      <summary>Асинхронно очищает все буферы для этого потока и вызывает запись всех буферизованных данных в базовое устройство.</summary>
      <returns>Задача, представляющая асинхронную операцию очистки.</returns>
      <exception cref="T:System.ObjectDisposedException">Поток был удален.</exception>
    </member>
    <member name="F:System.IO.StreamWriter.Null">
      <summary>Предоставляет <see langword="StreamWriter" /> без резервного хранилища, в который можно осуществлять запись, но из которого нельзя считывать данные.</summary>
    </member>
    <member name="M:System.IO.StreamWriter.Write(System.Char)">
      <summary>Записывает символ в поток.</summary>
      <param name="value">Символ, записываемый в поток.</param>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="P:System.IO.StreamWriter.AutoFlush" /> имеет значение True, или буфер <see cref="T:System.IO.StreamWriter" /> полон, и текущее средство записи закрывается.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="P:System.IO.StreamWriter.AutoFlush" /> имеет значение True, или буфер <see cref="T:System.IO.StreamWriter" /> полон, и его содержимое не может быть записано в основной поток заданного размера, поскольку <see cref="T:System.IO.StreamWriter" /> находится в конце потока.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.Write(System.Char[])">
      <summary>Записывает в поток массив символов.</summary>
      <param name="buffer">Массив символов, содержащий записываемые в поток данные. Если <paramref name="buffer" /> имеет значение <see langword="null" />, запись не выполняется.</param>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="P:System.IO.StreamWriter.AutoFlush" /> имеет значение True, или буфер <see cref="T:System.IO.StreamWriter" /> полон, и текущее средство записи закрывается.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="P:System.IO.StreamWriter.AutoFlush" /> имеет значение True, или буфер <see cref="T:System.IO.StreamWriter" /> полон, и его содержимое не может быть записано в основной поток заданного размера, поскольку <see cref="T:System.IO.StreamWriter" /> находится в конце потока.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)">
      <summary>Записывает в поток дочерний массив символов.</summary>
      <param name="buffer">Массив символов, содержащий записываемые данные.</param>
      <param name="index">Положение символа в буфере, с которого начинается чтение данных.</param>
      <param name="count">Наибольшее количество символов для записи.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Длина буфера минус <paramref name="index" /> меньше <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> или <paramref name="count" /> является отрицательным значением.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="P:System.IO.StreamWriter.AutoFlush" /> имеет значение True, или буфер <see cref="T:System.IO.StreamWriter" /> полон, и текущее средство записи закрывается.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="P:System.IO.StreamWriter.AutoFlush" /> имеет значение True, или буфер <see cref="T:System.IO.StreamWriter" /> полон, и его содержимое не может быть записано в основной поток заданного размера, поскольку <see cref="T:System.IO.StreamWriter" /> находится в конце потока.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.Write(System.ReadOnlySpan{System.Char})">
      <summary>Записывает диапазон символов в поток.</summary>
      <param name="buffer">Записываемый диапазон символов.</param>
    </member>
    <member name="M:System.IO.StreamWriter.Write(System.String)">
      <summary>Записывает в поток строку.</summary>
      <param name="value">Строка, записываемая в поток. Если <paramref name="value" /> равняется null, запись не выполняется.</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="P:System.IO.StreamWriter.AutoFlush" /> имеет значение True, или буфер <see cref="T:System.IO.StreamWriter" /> полон, и текущее средство записи закрывается.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="P:System.IO.StreamWriter.AutoFlush" /> имеет значение True, или буфер <see cref="T:System.IO.StreamWriter" /> полон, и его содержимое не может быть записано в основной поток заданного размера, поскольку <see cref="T:System.IO.StreamWriter" /> находится в конце потока.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.Write(System.String,System.Object)">
      <summary>Записывает форматированную строку в поток, используя ту же семантику, что и метод <see cref="M:System.String.Format(System.String,System.Object)" />.</summary>
      <param name="format">Строка составного формата.</param>
      <param name="arg0">Объект для форматирования и записи.</param>
    </member>
    <member name="M:System.IO.StreamWriter.Write(System.String,System.Object,System.Object)">
      <summary>Записывает форматированную строку в поток, используя ту же семантику, что и метод <see cref="M:System.String.Format(System.String,System.Object,System.Object)" />.</summary>
      <param name="format">Строка составного формата.</param>
      <param name="arg0">Первый объект для форматирования и записи.</param>
      <param name="arg1">Второй объект для форматирования и записи.</param>
    </member>
    <member name="M:System.IO.StreamWriter.Write(System.String,System.Object,System.Object,System.Object)">
      <summary>Записывает форматированную строку в поток, используя ту же семантику, что и метод <see cref="M:System.String.Format(System.String,System.Object,System.Object,System.Object)" />.</summary>
      <param name="format">Строка составного формата.</param>
      <param name="arg0">Первый объект для форматирования и записи.</param>
      <param name="arg1">Второй объект для форматирования и записи.</param>
      <param name="arg2">Третий объект для форматирования и записи.</param>
    </member>
    <member name="M:System.IO.StreamWriter.Write(System.String,System.Object[])">
      <summary>Записывает форматированную строку в поток, используя ту же семантику, что и метод <see cref="M:System.String.Format(System.String,System.Object[])" />.</summary>
      <param name="format">Строка составного формата.</param>
      <param name="arg">Массив объектов, содержащий от нуля и более объектов, которые необходимо форматировать и записать.</param>
    </member>
    <member name="M:System.IO.StreamWriter.WriteAsync(System.Char)">
      <summary>Асинхронно записывает символ в поток.</summary>
      <param name="value">Символ, записываемый в поток.</param>
      <returns>Задача, представляющая асинхронную операцию записи.</returns>
      <exception cref="T:System.ObjectDisposedException">Удалено средство записи потока.</exception>
      <exception cref="T:System.InvalidOperationException">Средство записи потока в настоящее время используется предыдущей операцией записи.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Асинхронно записывает дочерний массив символов в поток.</summary>
      <param name="buffer">Массив символов, содержащий записываемые данные.</param>
      <param name="index">Положение символа в буфере с которого начинается чтение данных.</param>
      <param name="count">Наибольшее количество символов для записи.</param>
      <returns>Задача, представляющая асинхронную операцию записи.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Сумма значений параметров <paramref name="index" /> и <paramref name="count" /> превышает длину буфера.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> или <paramref name="count" /> является отрицательным значением.</exception>
      <exception cref="T:System.ObjectDisposedException">Удалено средство записи потока.</exception>
      <exception cref="T:System.InvalidOperationException">Средство записи потока в настоящее время используется предыдущей операцией записи.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.WriteAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)">
      <summary>Выполняет асинхронную запись области памяти символов в поток.</summary>
      <param name="buffer">Область памяти символов для записи в поток.</param>
      <param name="cancellationToken">Токен для отслеживания запросов отмены. Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Задача, представляющая асинхронную операцию записи.</returns>
    </member>
    <member name="M:System.IO.StreamWriter.WriteAsync(System.String)">
      <summary>Асинхронно записывает строку в поток.</summary>
      <param name="value">Строка, записываемая в поток. Если <paramref name="value" /> имеет значение <see langword="null" />, запись не выполняется.</param>
      <returns>Задача, представляющая асинхронную операцию записи.</returns>
      <exception cref="T:System.ObjectDisposedException">Удалено средство записи потока.</exception>
      <exception cref="T:System.InvalidOperationException">Средство записи потока в настоящее время используется предыдущей операцией записи.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.WriteLine(System.ReadOnlySpan{System.Char})">
      <summary>Записывает в поток текстовое представление диапазона символов, за которым следует знак конца строки.</summary>
      <param name="buffer">Диапазон символов, записываемый в поток.</param>
    </member>
    <member name="M:System.IO.StreamWriter.WriteLine(System.String)">
      <summary>Записывает в поток строку, за которой следует признак конца строки.</summary>
      <param name="value">Строка для записи. Если <paramref name="value" /> имеет значение <see langword="null" />, записывается только признак конца строки.</param>
    </member>
    <member name="M:System.IO.StreamWriter.WriteLine(System.String,System.Object)">
      <summary>Записывает форматированную строку и перенос строки в поток, используя ту же семантику, что и метод <see cref="M:System.String.Format(System.String,System.Object)" />.</summary>
      <param name="format">Строка составного формата.</param>
      <param name="arg0">Объект для форматирования и записи.</param>
    </member>
    <member name="M:System.IO.StreamWriter.WriteLine(System.String,System.Object,System.Object)">
      <summary>Записывает форматированную строку и перенос строки в поток, используя ту же семантику, что и метод <see cref="M:System.String.Format(System.String,System.Object,System.Object)" />.</summary>
      <param name="format">Строка составного формата.</param>
      <param name="arg0">Первый объект для форматирования и записи.</param>
      <param name="arg1">Второй объект для форматирования и записи.</param>
    </member>
    <member name="M:System.IO.StreamWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
      <summary>Записывает форматированную строку и перенос строки в поток, используя ту же семантику, что и <see cref="M:System.String.Format(System.String,System.Object)" />.</summary>
      <param name="format">Строка составного формата.</param>
      <param name="arg0">Первый объект для форматирования и записи.</param>
      <param name="arg1">Второй объект для форматирования и записи.</param>
      <param name="arg2">Третий объект для форматирования и записи.</param>
    </member>
    <member name="M:System.IO.StreamWriter.WriteLine(System.String,System.Object[])">
      <summary>Записывает форматированную строку и перенос строки в поток, используя ту же семантику, что и <see cref="M:System.String.Format(System.String,System.Object)" />.</summary>
      <param name="format">Строка составного формата.</param>
      <param name="arg">Массив объектов, содержащий от нуля и более объектов, которые необходимо форматировать и записать.</param>
    </member>
    <member name="M:System.IO.StreamWriter.WriteLineAsync">
      <summary>Асинхронно записывает признак конца строки в поток.</summary>
      <returns>Задача, представляющая асинхронную операцию записи.</returns>
      <exception cref="T:System.ObjectDisposedException">Удалено средство записи потока.</exception>
      <exception cref="T:System.InvalidOperationException">Средство записи потока в настоящее время используется предыдущей операцией записи.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.WriteLineAsync(System.Char)">
      <summary>Асинхронно записывает в поток символ, за которым следует признак конца строки.</summary>
      <param name="value">Символ, записываемый в поток.</param>
      <returns>Задача, представляющая асинхронную операцию записи.</returns>
      <exception cref="T:System.ObjectDisposedException">Удалено средство записи потока.</exception>
      <exception cref="T:System.InvalidOperationException">Средство записи потока в настоящее время используется предыдущей операцией записи.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Асинхронно записывает в поток подмассив символов, за которым следует знак конца строки.</summary>
      <param name="buffer">Массив символов, из которого записываются данные.</param>
      <param name="index">Положение символа в буфере, с которого начинается чтение данных.</param>
      <param name="count">Наибольшее количество символов для записи.</param>
      <returns>Задача, представляющая асинхронную операцию записи.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Сумма значений параметров <paramref name="index" /> и <paramref name="count" /> превышает длину буфера.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> или <paramref name="count" /> является отрицательным значением.</exception>
      <exception cref="T:System.ObjectDisposedException">Удалено средство записи потока.</exception>
      <exception cref="T:System.InvalidOperationException">Средство записи потока в настоящее время используется предыдущей операцией записи.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.WriteLineAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)">
      <summary>Асинхронно записывает в поток текстовое представление области памяти символов, за которым следует знак конца строки.</summary>
      <param name="buffer">Область памяти символов для записи в поток.</param>
      <param name="cancellationToken">Токен для отслеживания запросов отмены. Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Задача, представляющая асинхронную операцию записи.</returns>
    </member>
    <member name="M:System.IO.StreamWriter.WriteLineAsync(System.String)">
      <summary>Асинхронно записывает в поток строку, за которой следует признак конца строки.</summary>
      <param name="value">Строка для записи. Если значение равно <see langword="null" />, записывается только знак конца строки.</param>
      <returns>Задача, представляющая асинхронную операцию записи.</returns>
      <exception cref="T:System.ObjectDisposedException">Удалено средство записи потока.</exception>
      <exception cref="T:System.InvalidOperationException">Средство записи потока в настоящее время используется предыдущей операцией записи.</exception>
    </member>
    <member name="T:System.IO.StringReader">
      <summary>Реализует класс <see cref="T:System.IO.TextReader" />, осуществляющий чтение из строки.</summary>
    </member>
    <member name="M:System.IO.StringReader.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.StringReader" />, осуществляющий чтение из указанной строки.</summary>
      <param name="s">Строка, для которой должен быть инициализирован класс <see cref="T:System.IO.StringReader" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.StringReader.Close">
      <summary>Закрывает объект <see cref="T:System.IO.StringReader" />.</summary>
    </member>
    <member name="M:System.IO.StringReader.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.IO.StringReader" />, а при необходимости освобождает также управляемые ресурсы.</summary>
      <param name="disposing">Значение <see langword="true" /> позволяет освободить управляемые и неуправляемые ресурсы; значение <see langword="false" /> позволяет освободить только неуправляемые ресурсы.</param>
    </member>
    <member name="M:System.IO.StringReader.Peek">
      <summary>Возвращает следующий доступный символ, но не использует его.</summary>
      <returns>Целое число, представляющее следующий символ, чтение которого необходимо выполнить, или значение -1, если доступных символов больше нет или поток не поддерживает поиск.</returns>
      <exception cref="T:System.ObjectDisposedException">Текущее средство чтения закрыто.</exception>
    </member>
    <member name="M:System.IO.StringReader.Read">
      <summary>Считывает следующий символ из строки ввода и увеличивает позицию символа на один символ.</summary>
      <returns>Следующий символ из основной строки или значение -1, если больше нет доступных символов.</returns>
      <exception cref="T:System.ObjectDisposedException">Текущее средство чтения закрыто.</exception>
    </member>
    <member name="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
      <summary>Считывает блок символов из строки ввода и увеличивает позицию символов на <paramref name="count" />.</summary>
      <param name="buffer">При возвращении из этого метода содержит указанный массив символов, в котором значения в интервале от <paramref name="index" /> и (<paramref name="index" /> + <paramref name="count" /> - 1) заменены символами, считанными из текущего источника.</param>
      <param name="index">Начальный индекс в буфере.</param>
      <param name="count">Число символов для чтения.</param>
      <returns>Общее количество символов, считанных в буфер. Оно может быть меньше, чем число запрошенных символов, если большинство символов не доступно в текущий момент, или равно нулю, если достигнут конец основной строки.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Длина буфера минус <paramref name="index" /> меньше <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> или <paramref name="count" /> является отрицательным значением.</exception>
      <exception cref="T:System.ObjectDisposedException">Текущее средство чтения закрыто.</exception>
    </member>
    <member name="M:System.IO.StringReader.Read(System.Span{System.Char})">
      <param name="buffer" />
    </member>
    <member name="M:System.IO.StringReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Асинхронно считывает указанное максимальное количество символов из текущей строки и записывает данные в буфер, начиная с заданного индекса.</summary>
      <param name="buffer">При возвращении из этого метода содержит указанный массив символов, в котором значения в интервале от <paramref name="index" /> и (<paramref name="index" /> + <paramref name="count" /> - 1) заменены символами, считанными из текущего источника.</param>
      <param name="index">Позиция в буфере <paramref name="buffer" />, с которого начинается запись.</param>
      <param name="count">Максимальное число считываемых символов. Если конец строки достигнут, прежде чем в буфер записано указанное количество символов, метод возвращает управление.</param>
      <returns>Задача, представляющая асинхронную операцию чтения. Значение параметра <paramref name="TResult" /> содержит общее число байтов, считанных в буфер. Значение результата может быть меньше запрошенного числа байтов, если число текущих доступных байтов меньше запрошенного числа, или результат может быть равен 0 (нулю), если был достигнут конец строки.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> или <paramref name="count" /> является отрицательным значением.</exception>
      <exception cref="T:System.ArgumentException">Сумма <paramref name="index" /> и <paramref name="count" /> больше, чем длина буфера.</exception>
      <exception cref="T:System.ObjectDisposedException">Удалено средство чтения строки.</exception>
      <exception cref="T:System.InvalidOperationException">Модуль чтения в настоящее время используется предыдущей операцией чтения.</exception>
    </member>
    <member name="M:System.IO.StringReader.ReadAsync(System.Memory{System.Char},System.Threading.CancellationToken)">
      <param name="buffer" />
      <param name="cancellationToken" />
    </member>
    <member name="M:System.IO.StringReader.ReadBlock(System.Span{System.Char})">
      <param name="buffer" />
    </member>
    <member name="M:System.IO.StringReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Асинхронно считывает указанное максимальное количество символов из текущей строки и записывает данные в буфер, начиная с заданного индекса.</summary>
      <param name="buffer">При возвращении из этого метода содержит указанный массив символов, в котором значения в интервале от <paramref name="index" /> и (<paramref name="index" /> + <paramref name="count" /> - 1) заменены символами, считанными из текущего источника.</param>
      <param name="index">Позиция в буфере <paramref name="buffer" />, с которого начинается запись.</param>
      <param name="count">Максимальное число считываемых символов. Если конец строки достигнут, прежде чем в буфер записано указанное количество символов, метод возвращает управление.</param>
      <returns>Задача, представляющая асинхронную операцию чтения. Значение параметра <paramref name="TResult" /> содержит общее число байтов, считанных в буфер. Значение результата может быть меньше запрошенного числа байтов, если число текущих доступных байтов меньше запрошенного числа, или результат может быть равен 0 (нулю), если был достигнут конец строки.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> или <paramref name="count" /> является отрицательным значением.</exception>
      <exception cref="T:System.ArgumentException">Сумма <paramref name="index" /> и <paramref name="count" /> больше, чем длина буфера.</exception>
      <exception cref="T:System.ObjectDisposedException">Удалено средство чтения строки.</exception>
      <exception cref="T:System.InvalidOperationException">Модуль чтения в настоящее время используется предыдущей операцией чтения.</exception>
    </member>
    <member name="M:System.IO.StringReader.ReadBlockAsync(System.Memory{System.Char},System.Threading.CancellationToken)">
      <param name="buffer" />
      <param name="cancellationToken" />
    </member>
    <member name="M:System.IO.StringReader.ReadLine">
      <summary>Выполняет чтение строки символов из текущей строки и возвращает данные в виде строки.</summary>
      <returns>Следующая строка из текущей строки, или значение <see langword="null" />, если достигнут конец строки.</returns>
      <exception cref="T:System.ObjectDisposedException">Текущее средство чтения закрыто.</exception>
      <exception cref="T:System.OutOfMemoryException">Не хватает памяти для выделения буфера под возвращаемую строку.</exception>
    </member>
    <member name="M:System.IO.StringReader.ReadLineAsync">
      <summary>Асинхронно выполняет чтение строки символов из текущей строки и возвращает данные в виде строки.</summary>
      <returns>Задача, представляющая асинхронную операцию чтения. Значение параметра <paramref name="TResult" /> содержит следующую строку из средства чтения строк или значение <see langword="null" />, если все знаки считаны.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Количество символов в следующей строке больше <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Удалено средство чтения строки.</exception>
      <exception cref="T:System.InvalidOperationException">Модуль чтения в настоящее время используется предыдущей операцией чтения.</exception>
    </member>
    <member name="M:System.IO.StringReader.ReadToEnd">
      <summary>Выполняет чтение всех символов, начиная с текущей позиции до конца строки, и возвращает их в виде одной строки.</summary>
      <returns>Содержимое, начиная от текущей позиции до конца основной строки.</returns>
      <exception cref="T:System.OutOfMemoryException">Не хватает памяти для выделения буфера под возвращаемую строку.</exception>
      <exception cref="T:System.ObjectDisposedException">Текущее средство чтения закрыто.</exception>
    </member>
    <member name="M:System.IO.StringReader.ReadToEndAsync">
      <summary>Асинхронно считывает все символы, начиная с текущей позиции до конца строки, и возвращает их в виде одной строки.</summary>
      <returns>Задача, представляющая асинхронную операцию чтения. Значение параметра <paramref name="TResult" /> содержит строку с символами от текущего положения до конца строки.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Количество символов больше <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Удалено средство чтения строки.</exception>
      <exception cref="T:System.InvalidOperationException">Модуль чтения в настоящее время используется предыдущей операцией чтения.</exception>
    </member>
    <member name="T:System.IO.StringWriter">
      <summary>Реализует <see cref="T:System.IO.TextWriter" /> для записи данных в строку. Данные хранятся в основном <see cref="T:System.Text.StringBuilder" />.</summary>
    </member>
    <member name="M:System.IO.StringWriter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.StringWriter" />.</summary>
    </member>
    <member name="M:System.IO.StringWriter.#ctor(System.IFormatProvider)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.StringWriter" /> с указанным форматом объекта.</summary>
      <param name="formatProvider">Объект <see cref="T:System.IFormatProvider" />, управляющий форматированием.</param>
    </member>
    <member name="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.StringWriter" />, с помощью которого осуществляется запись в указанный класс <see cref="T:System.Text.StringBuilder" />.</summary>
      <param name="sb">Объект <see cref="T:System.Text.StringBuilder" />, куда выполняется запись.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="sb" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder,System.IFormatProvider)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.StringWriter" />, с помощью которого осуществляется запись в указанный класс <see cref="T:System.Text.StringBuilder" /> и который имеет указанный формат поставщика.</summary>
      <param name="sb">Объект <see cref="T:System.Text.StringBuilder" />, куда выполняется запись.</param>
      <param name="formatProvider">Объект <see cref="T:System.IFormatProvider" />, управляющий форматированием.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="sb" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.StringWriter.Close">
      <summary>Закрывает текущий <see cref="T:System.IO.StringWriter" /> и базовый поток.</summary>
    </member>
    <member name="M:System.IO.StringWriter.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.IO.StringWriter" />, а при необходимости освобождает также управляемые ресурсы.</summary>
      <param name="disposing">Значение <see langword="true" /> позволяет освободить управляемые и неуправляемые ресурсы; значение <see langword="false" /> позволяет освободить только неуправляемые ресурсы.</param>
    </member>
    <member name="P:System.IO.StringWriter.Encoding">
      <summary>Получает кодировку <see cref="T:System.Text.Encoding" />, в которой осуществляется запись выходных данных.</summary>
      <returns>
        <see langword="Encoding" />, в которой осуществляется запись выходных данных.</returns>
    </member>
    <member name="M:System.IO.StringWriter.FlushAsync">
      <summary>Асинхронно очищает все буферы текущего средства записи и вызывает запись всех буферизованных данных в базовое устройство.</summary>
      <returns>Задача, представляющая асинхронную операцию очистки.</returns>
    </member>
    <member name="M:System.IO.StringWriter.GetStringBuilder">
      <summary>Возвращает основной <see cref="T:System.Text.StringBuilder" />.</summary>
      <returns>Базовый объект <see langword="StringBuilder" />.</returns>
    </member>
    <member name="M:System.IO.StringWriter.ToString">
      <summary>Возвращает строку, содержащую символы, записанные до этого момента в текущий <see langword="StringWriter" />.</summary>
      <returns>Строка, содержащая символы, записанные в текущий <see langword="StringWriter" />.</returns>
    </member>
    <member name="M:System.IO.StringWriter.Write(System.Char)">
      <summary>Записывает символ в строку.</summary>
      <param name="value">Записываемый символ.</param>
      <exception cref="T:System.ObjectDisposedException">Модуль записи закрыт.</exception>
    </member>
    <member name="M:System.IO.StringWriter.Write(System.Char[],System.Int32,System.Int32)">
      <summary>Записывает в строку дочерний массив символов.</summary>
      <param name="buffer">Массив символов, из которого записываются данные.</param>
      <param name="index">Положение в буфере, с которого начинается чтение данных.</param>
      <param name="count">Наибольшее количество символов для записи.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> или <paramref name="count" /> является отрицательным значением.</exception>
      <exception cref="T:System.ArgumentException">(<paramref name="index" /> + <paramref name="count" />)&gt; <paramref name="buffer" />. <see langword="Length" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Модуль записи закрыт.</exception>
    </member>
    <member name="M:System.IO.StringWriter.Write(System.ReadOnlySpan{System.Char})">
      <summary>Записывает строковое представление диапазона символов в текущую строку.</summary>
      <param name="buffer">Диапазон символов для записи в строку.</param>
    </member>
    <member name="M:System.IO.StringWriter.Write(System.String)">
      <summary>Записывает строку в текущую строку.</summary>
      <param name="value">Строка для записи.</param>
      <exception cref="T:System.ObjectDisposedException">Модуль записи закрыт.</exception>
    </member>
    <member name="M:System.IO.StringWriter.Write(System.Text.StringBuilder)">
      <summary>Записывает строковое представление построителя строки в текущую строку.</summary>
      <param name="value">Построитель строки для записи в поток.</param>
    </member>
    <member name="M:System.IO.StringWriter.WriteAsync(System.Char)">
      <summary>Выполняет асинхронную запись символа в строку.</summary>
      <param name="value">Символ, записываемый в строку.</param>
      <returns>Задача, представляющая асинхронную операцию записи.</returns>
      <exception cref="T:System.ObjectDisposedException">Удалено средство записи строки.</exception>
      <exception cref="T:System.InvalidOperationException">Средство записи строки в настоящее время используется предыдущей операцией записи.</exception>
    </member>
    <member name="M:System.IO.StringWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Асинхронно записывает дочерний массив символов в строку.</summary>
      <param name="buffer">Массив символов, из которого записываются данные.</param>
      <param name="index">Положение в буфере, с которого начинается чтение данных.</param>
      <param name="count">Наибольшее количество символов для записи.</param>
      <returns>Задача, представляющая асинхронную операцию записи.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Сумма значений параметров <paramref name="index" /> и <paramref name="count" /> превышает длину буфера.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> или <paramref name="count" /> является отрицательным значением.</exception>
      <exception cref="T:System.ObjectDisposedException">Удалено средство записи строки.</exception>
      <exception cref="T:System.InvalidOperationException">Средство записи строки в настоящее время используется предыдущей операцией записи.</exception>
    </member>
    <member name="M:System.IO.StringWriter.WriteAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)">
      <summary>Асинхронно записывает область памяти символов в строку.</summary>
      <param name="buffer">Область памяти символов для записи в строку.</param>
      <param name="cancellationToken">Токен для отслеживания запросов отмены. Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Задача, представляющая асинхронную операцию записи.</returns>
    </member>
    <member name="M:System.IO.StringWriter.WriteAsync(System.String)">
      <summary>Выполняет асинхронную запись строки в текущую строку.</summary>
      <param name="value">Строка для записи. Если параметр <paramref name="value" /> имеет значение <see langword="null" />, в текстовый поток ничего не записывается.</param>
      <returns>Задача, представляющая асинхронную операцию записи.</returns>
      <exception cref="T:System.ObjectDisposedException">Удалено средство записи строки.</exception>
      <exception cref="T:System.InvalidOperationException">Средство записи строки в настоящее время используется предыдущей операцией записи.</exception>
    </member>
    <member name="M:System.IO.StringWriter.WriteAsync(System.Text.StringBuilder,System.Threading.CancellationToken)">
      <summary>Асинхронно записывает строковое представление построителя строки в строку.</summary>
      <param name="value">Построитель строки для записи в поток.</param>
      <param name="cancellationToken">Токен для отслеживания запросов отмены. Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Задача, представляющая асинхронную операцию записи.</returns>
    </member>
    <member name="M:System.IO.StringWriter.WriteLine(System.ReadOnlySpan{System.Char})">
      <summary>Записывает в строку текстовое представление диапазона символов, за которым следует знак конца строки.</summary>
      <param name="buffer">Диапазон символов для записи в строку.</param>
    </member>
    <member name="M:System.IO.StringWriter.WriteLine(System.Text.StringBuilder)">
      <summary>Записывает в строку текстовое представление построителя строки, за которым следует знак конца строки.</summary>
      <param name="value">Строка как построитель строки для записи в поток.</param>
    </member>
    <member name="M:System.IO.StringWriter.WriteLineAsync(System.Char)">
      <summary>Асинхронно записывает в строку символ, за которым следует знак конца строки.</summary>
      <param name="value">Символ, записываемый в строку.</param>
      <returns>Задача, представляющая асинхронную операцию записи.</returns>
      <exception cref="T:System.ObjectDisposedException">Удалено средство записи строки.</exception>
      <exception cref="T:System.InvalidOperationException">Средство записи строки в настоящее время используется предыдущей операцией записи.</exception>
    </member>
    <member name="M:System.IO.StringWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Асинхронно записывает в строку дочерний массив символов, за которыми следует знак конца строки.</summary>
      <param name="buffer">Массив символов, из которого записываются данные.</param>
      <param name="index">Положение в буфере, с которого начинается чтение данных.</param>
      <param name="count">Наибольшее количество символов для записи.</param>
      <returns>Задача, представляющая асинхронную операцию записи.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Сумма значений параметров <paramref name="index" /> и <paramref name="count" /> превышает длину буфера.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> или <paramref name="count" /> является отрицательным значением.</exception>
      <exception cref="T:System.ObjectDisposedException">Удалено средство записи строки.</exception>
      <exception cref="T:System.InvalidOperationException">Средство записи строки в настоящее время используется предыдущей операцией записи.</exception>
    </member>
    <member name="M:System.IO.StringWriter.WriteLineAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)">
      <summary>Асинхронно записывает строковое представление области памяти символов в текущую строку, за которой следует знак конца строки.</summary>
      <param name="buffer">Область памяти символов для записи в строку.</param>
      <param name="cancellationToken">Токен для отслеживания запросов отмены. Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Задача, представляющая асинхронную операцию записи.</returns>
    </member>
    <member name="M:System.IO.StringWriter.WriteLineAsync(System.String)">
      <summary>Асинхронно записывает строку в текущую строку, за которой следует знак конца строки.</summary>
      <param name="value">Строка для записи. Если значение равно <see langword="null" />, записывается только знак конца строки.</param>
      <returns>Задача, представляющая асинхронную операцию записи.</returns>
      <exception cref="T:System.ObjectDisposedException">Удалено средство записи строки.</exception>
      <exception cref="T:System.InvalidOperationException">Средство записи строки в настоящее время используется предыдущей операцией записи.</exception>
    </member>
    <member name="M:System.IO.StringWriter.WriteLineAsync(System.Text.StringBuilder,System.Threading.CancellationToken)">
      <summary>Асинхронно записывает строковое представление построителя строки в текущую строку, за которой следует знак конца строки.</summary>
      <param name="value">Построитель строки для записи в поток.</param>
      <param name="cancellationToken">Токен для отслеживания запросов отмены. Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Задача, представляющая асинхронную операцию записи.</returns>
    </member>
    <member name="T:System.IO.TextReader">
      <summary>Представляет средство чтения, позволяющее считывать последовательные наборы знаков.</summary>
    </member>
    <member name="M:System.IO.TextReader.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.TextReader" />.</summary>
    </member>
    <member name="M:System.IO.TextReader.Close">
      <summary>Закрывает <see cref="T:System.IO.TextReader" /> и освобождает все системные ресурсы, связанные с <see langword="TextReader" />.</summary>
    </member>
    <member name="M:System.IO.TextReader.Dispose">
      <summary>Освобождает все ресурсы, используемые объектом <see cref="T:System.IO.TextReader" />.</summary>
    </member>
    <member name="M:System.IO.TextReader.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.IO.TextReader" />, а при необходимости освобождает также управляемые ресурсы.</summary>
      <param name="disposing">Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</param>
    </member>
    <member name="F:System.IO.TextReader.Null">
      <summary>Предоставляет <see langword="TextReader" /> без данных, доступных для чтения.</summary>
    </member>
    <member name="M:System.IO.TextReader.Peek">
      <summary>Выполняет чтение следующего символа, не изменяя состояние средства чтения или источника символа. Возвращает следующий доступный символ, фактически не считывая его из средства чтения.</summary>
      <returns>Целое число, представляющее следующий символ, чтение которого необходимо выполнить, или значение -1, если доступных символов больше нет или средство чтения не поддерживает поиск.</returns>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.TextReader" /> закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
    </member>
    <member name="M:System.IO.TextReader.Read">
      <summary>Выполняет чтение следующего символа из средства чтения текста и перемещает положение символа на одну позицию вперед.</summary>
      <returns>Следующий символ из средства чтения текста, или значение -1, если доступных символов больше нет. Реализация по умолчанию возвращает значение -1.</returns>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.TextReader" /> закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
    </member>
    <member name="M:System.IO.TextReader.Read(System.Char[],System.Int32,System.Int32)">
      <summary>Считывает указанное максимальное количество символов из текущего средства чтения и записывает данные в буфер, начиная с заданного индекса.</summary>
      <param name="buffer">При возвращении из этого метода содержит указанный массив символов, в котором значения в интервале от <paramref name="index" /> и (<paramref name="index" /> + <paramref name="count" /> - 1) заменены символами, считанными из текущего источника.</param>
      <param name="index">Позиция в буфере <paramref name="buffer" />, с которого начинается запись.</param>
      <param name="count">Максимальное число считываемых символов. Если конец средства чтения достигнут, прежде чем в буфер считано указанное количество символов, метод возвращает управление.</param>
      <returns>Количество считанных символов. Количество будет меньше или равно <paramref name="count" /> в зависимости от доступности данных в средстве чтения. Этот метод возвращает 0 (ноль), если его вызвать при отсутствии символов, доступных для чтения.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Длина буфера минус <paramref name="index" /> меньше <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> или <paramref name="count" /> является отрицательным значением.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.TextReader" /> закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
    </member>
    <member name="M:System.IO.TextReader.Read(System.Span{System.Char})">
      <param name="buffer" />
    </member>
    <member name="M:System.IO.TextReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Асинхронно считывает указанное максимальное количество символов из текущего средства чтения текста и записывает данные в буфер, начиная с заданного индекса.</summary>
      <param name="buffer">При возвращении из этого метода содержит указанный массив символов, в котором значения в интервале от <paramref name="index" /> и (<paramref name="index" /> + <paramref name="count" /> - 1) заменены символами, считанными из текущего источника.</param>
      <param name="index">Позиция в буфере <paramref name="buffer" />, с которого начинается запись.</param>
      <param name="count">Максимальное число считываемых символов. Если конец текста достигнут, прежде чем указанное количество символов считывается в буфер, возвращается текущий метод.</param>
      <returns>Задача, представляющая асинхронную операцию чтения. Значение параметра <paramref name="TResult" /> содержит общее число байтов, считанных в буфер. Значение результата может быть меньше запрошенного числа байтов, если число текущих доступных байтов меньше запрошенного числа, или результат может быть равен 0 (нулю), если был достигнут конец текста.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> или <paramref name="count" /> является отрицательным значением.</exception>
      <exception cref="T:System.ArgumentException">Сумма <paramref name="index" /> и <paramref name="count" /> больше, чем длина буфера.</exception>
      <exception cref="T:System.ObjectDisposedException">Удалено средство чтения текста.</exception>
      <exception cref="T:System.InvalidOperationException">Модуль чтения в настоящее время используется предыдущей операцией чтения.</exception>
    </member>
    <member name="M:System.IO.TextReader.ReadAsync(System.Memory{System.Char},System.Threading.CancellationToken)">
      <param name="buffer" />
      <param name="cancellationToken" />
    </member>
    <member name="M:System.IO.TextReader.ReadBlock(System.Char[],System.Int32,System.Int32)">
      <summary>Считывает указанное максимальное количество символов из текущего средства чтения текста и записывает данные в буфер, начиная с заданного индекса.</summary>
      <param name="buffer">При возвращении из этого метода параметр содержит указанный массив символов, в котором значения в интервале от <paramref name="index" /> до (<paramref name="index" /> + <paramref name="count" /> - 1) заменены символами, считанными из текущего источника.</param>
      <param name="index">Позиция в буфере <paramref name="buffer" />, с которого начинается запись.</param>
      <param name="count">Максимальное число считываемых символов.</param>
      <returns>Количество считанных символов. Число будет меньше или равно значению <paramref name="count" /> в зависимости от того, считаны ли все входящие символы.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Длина буфера минус <paramref name="index" /> меньше <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> или <paramref name="count" /> является отрицательным значением.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.TextReader" /> закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
    </member>
    <member name="M:System.IO.TextReader.ReadBlock(System.Span{System.Char})">
      <param name="buffer" />
    </member>
    <member name="M:System.IO.TextReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Асинхронно считывает указанное максимальное количество символов из текущего средства чтения текста и записывает данные в буфер, начиная с заданного индекса.</summary>
      <param name="buffer">При возвращении из этого метода содержит указанный массив символов, в котором значения в интервале от <paramref name="index" /> и (<paramref name="index" /> + <paramref name="count" /> - 1) заменены символами, считанными из текущего источника.</param>
      <param name="index">Позиция в буфере <paramref name="buffer" />, с которого начинается запись.</param>
      <param name="count">Максимальное число считываемых символов. Если конец текста достигнут, прежде чем указанное количество символов считывается в буфер, возвращается текущий метод.</param>
      <returns>Задача, представляющая асинхронную операцию чтения. Значение параметра <paramref name="TResult" /> содержит общее число байтов, считанных в буфер. Значение результата может быть меньше запрошенного числа байтов, если число текущих доступных байтов меньше запрошенного числа, или результат может быть равен 0 (нулю), если был достигнут конец текста.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> или <paramref name="count" /> является отрицательным значением.</exception>
      <exception cref="T:System.ArgumentException">Сумма <paramref name="index" /> и <paramref name="count" /> больше, чем длина буфера.</exception>
      <exception cref="T:System.ObjectDisposedException">Удалено средство чтения текста.</exception>
      <exception cref="T:System.InvalidOperationException">Модуль чтения в настоящее время используется предыдущей операцией чтения.</exception>
    </member>
    <member name="M:System.IO.TextReader.ReadBlockAsync(System.Memory{System.Char},System.Threading.CancellationToken)">
      <param name="buffer" />
      <param name="cancellationToken" />
    </member>
    <member name="M:System.IO.TextReader.ReadLine">
      <summary>Выполняет чтение строки символов из средства чтения текста и возвращает данные в виде строки.</summary>
      <returns>Следующая строка из средства чтения, или значение <see langword="null" />, если все символы считаны.</returns>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
      <exception cref="T:System.OutOfMemoryException">Не хватает памяти для выделения буфера под возвращаемую строку.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.TextReader" /> закрыт.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Количество символов в следующей строке больше <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.IO.TextReader.ReadLineAsync">
      <summary>Асинхронно выполняет чтение строки символов и возвращает данные в виде строки.</summary>
      <returns>Задача, представляющая асинхронную операцию чтения. Значение параметра <paramref name="TResult" /> содержит следующую строку из средства чтения текста или значение <see langword="null" />, если все знаки считаны.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Количество символов в следующей строке больше <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Удалено средство чтения текста.</exception>
      <exception cref="T:System.InvalidOperationException">Модуль чтения в настоящее время используется предыдущей операцией чтения.</exception>
    </member>
    <member name="M:System.IO.TextReader.ReadToEnd">
      <summary>Считывает все символы, начиная с текущей позиции до конца средства чтения текста, и возвращает их в виде одной строки.</summary>
      <returns>Строка, содержащая все символы, начиная с текущей позиции до конца средства чтения текста.</returns>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.TextReader" /> закрыт.</exception>
      <exception cref="T:System.OutOfMemoryException">Не хватает памяти для выделения буфера под возвращаемую строку.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Количество символов в следующей строке больше <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.IO.TextReader.ReadToEndAsync">
      <summary>Асинхронно считывает все символы, начиная с текущей позиции до конца средства чтения текста, и возвращает их в виде одной строки.</summary>
      <returns>Задача, представляющая асинхронную операцию чтения. Значение параметра <paramref name="TResult" /> содержит строку с символами от текущего положения до конца средства чтения текста.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Количество символов больше <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Удалено средство чтения текста.</exception>
      <exception cref="T:System.InvalidOperationException">Модуль чтения в настоящее время используется предыдущей операцией чтения.</exception>
    </member>
    <member name="M:System.IO.TextReader.Synchronized(System.IO.TextReader)">
      <summary>Создает потокобезопасную оболочку для указанного объекта <see langword="TextReader" />.</summary>
      <param name="reader">Коллекция <see langword="TextReader" />, которую требуется синхронизировать.</param>
      <returns>Потокобезопасный <see cref="T:System.IO.TextReader" />.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="reader" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="T:System.IO.TextWriter">
      <summary>Представляет модуль записи, который может записывать последовательные наборы символов. Это абстрактный класс.</summary>
    </member>
    <member name="M:System.IO.TextWriter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.TextWriter" />.</summary>
    </member>
    <member name="M:System.IO.TextWriter.#ctor(System.IFormatProvider)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.TextWriter" /> указанным поставщиком формата.</summary>
      <param name="formatProvider">Объект <see cref="T:System.IFormatProvider" />, управляющий форматированием.</param>
    </member>
    <member name="M:System.IO.TextWriter.Close">
      <summary>Закрывает текущий модуль записи и освобождает все системные ресурсы, связанные с ним.</summary>
    </member>
    <member name="F:System.IO.TextWriter.CoreNewLine">
      <summary>Сохраняет символы новой строки, используемые для данного <see langword="TextWriter" />.</summary>
    </member>
    <member name="M:System.IO.TextWriter.Dispose">
      <summary>Освобождает все ресурсы, используемые объектом <see cref="T:System.IO.TextWriter" />.</summary>
    </member>
    <member name="M:System.IO.TextWriter.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.IO.TextWriter" />, а при необходимости освобождает также управляемые ресурсы.</summary>
      <param name="disposing">Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</param>
    </member>
    <member name="M:System.IO.TextWriter.DisposeAsync">
      <summary>Асинхронно освобождает все ресурсы, используемые объектом <see cref="T:System.IO.TextWriter" />.</summary>
      <returns>Задача, представляющая асинхронную операцию закрытия.</returns>
    </member>
    <member name="P:System.IO.TextWriter.Encoding">
      <summary>При переопределении в производном классе возвращает кодировку символов, в которой записаны выходные данные.</summary>
      <returns>Кодировка символов, в которой осуществляется запись выходных данных.</returns>
    </member>
    <member name="M:System.IO.TextWriter.Flush">
      <summary>Очищает все буферы текущего модуля записи и вызывает немедленную запись всех буферизованных данных на базовое устройство.</summary>
    </member>
    <member name="M:System.IO.TextWriter.FlushAsync">
      <summary>Асинхронно очищает все буферы текущего средства записи и вызывает запись всех буферизованных данных в базовое устройство.</summary>
      <returns>Задача, представляющая асинхронную операцию очистки.</returns>
      <exception cref="T:System.ObjectDisposedException">Удалено средство записи текста.</exception>
      <exception cref="T:System.InvalidOperationException">Средство записи в настоящее время используется предыдущей операцией записи.</exception>
    </member>
    <member name="P:System.IO.TextWriter.FormatProvider">
      <summary>Возвращает объект, управляющий форматированием.</summary>
      <returns>Объект <see cref="T:System.IFormatProvider" /> для указанного языка и региональных параметров или форматирование текущего языка и региональных параметров, если не заданы другие.</returns>
    </member>
    <member name="P:System.IO.TextWriter.NewLine">
      <summary>Возвращает или задает признак конца строки, используемой текущим <see langword="TextWriter" />.</summary>
      <returns>Признак конца строки для текущего <see langword="TextWriter" />.</returns>
    </member>
    <member name="F:System.IO.TextWriter.Null">
      <summary>Предоставляет <see langword="TextWriter" /> без резервного хранилища, в который можно осуществлять запись, но из которого нельзя считывать данные.</summary>
    </member>
    <member name="M:System.IO.TextWriter.Synchronized(System.IO.TextWriter)">
      <summary>Создает потокобезопасную оболочку для указанного объекта <see langword="TextWriter" />.</summary>
      <param name="writer">Коллекция <see langword="TextWriter" />, которую требуется синхронизировать.</param>
      <returns>Потокобезопасная программа-оболочка.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="writer" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.Boolean)">
      <summary>Записывает текстовое представление значения типа <see langword="Boolean" /> в текстовый поток.</summary>
      <param name="value">Значение <see langword="Boolean" /> для записи.</param>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.TextWriter" /> закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.Char)">
      <summary>Записывает символ в текстовый поток.</summary>
      <param name="value">Символ, записываемый в текстовый поток.</param>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.TextWriter" /> закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.Char[])">
      <summary>Записывает массив символов в текстовый поток.</summary>
      <param name="buffer">Массив символов, записываемый в текстовый поток.</param>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.TextWriter" /> закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)">
      <summary>Записывает подмассив символов в текстовый поток.</summary>
      <param name="buffer">Массив символов, из которого записываются данные.</param>
      <param name="index">Положение символа в буфере, с которого начинается извлечение данных.</param>
      <param name="count">Количество символов для записи.</param>
      <exception cref="T:System.ArgumentException">Длина буфера минус <paramref name="index" /> меньше <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="buffer" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> или <paramref name="count" /> является отрицательным значением.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.TextWriter" /> закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.Decimal)">
      <summary>Записывает текстовое представление десятичного значения в текстовый поток.</summary>
      <param name="value">Десятичное значение, которое необходимо записать.</param>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.TextWriter" /> закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.Double)">
      <summary>Записывает в текстовый поток текстовое представление значения с плавающей запятой размером 8 байт.</summary>
      <param name="value">Записываемое значение с плавающей запятой размером 8 байт.</param>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.TextWriter" /> закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.Int32)">
      <summary>Записывает в текстовый поток текстовое представление целого числа со знаком размером 4 байта.</summary>
      <param name="value">Записываемое целое число со знаком размером 4 байта.</param>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.TextWriter" /> закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.Int64)">
      <summary>Записывает в текстовый поток текстовое представление целого числа со знаком размером 8 байт.</summary>
      <param name="value">Записываемое целое число со знаком размером 8 байт.</param>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.TextWriter" /> закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.Object)">
      <summary>Записывает в текстовый поток текстовое представление объекта с помощью вызова метода <see langword="ToString" /> для этого объекта.</summary>
      <param name="value">Записываемый объект.</param>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.TextWriter" /> закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.ReadOnlySpan{System.Char})">
      <summary>Записывает диапазон символов в текстовый поток.</summary>
      <param name="buffer">Записываемый диапазон символов.</param>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.Single)">
      <summary>Записывает в текстовый поток текстовое представление значения с плавающей запятой размером 4 байта.</summary>
      <param name="value">Записываемое значение с плавающей запятой размером 4 байта.</param>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.TextWriter" /> закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.String)">
      <summary>Асинхронно записывает строку в текстовый поток.</summary>
      <param name="value">Строка для записи.</param>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.TextWriter" /> закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.String,System.Object)">
      <summary>Записывает форматированную строку в текстовый поток, используя ту же семантику, что и метод <see cref="M:System.String.Format(System.String,System.Object)" />.</summary>
      <param name="format">Строка составного формата.</param>
      <param name="arg0">Объект для форматирования и записи.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="format" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.TextWriter" /> закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
      <exception cref="T:System.FormatException">Параметр <paramref name="format" /> не является допустимой строкой составного формата.  

или - 
Индекс элемента формата меньше 0 (нуля) или больше или равен числу объектов, которые необходимо отформатировать (которое для этой перегрузки метода равно 1).</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
      <summary>Записывает форматированную строку в текстовый поток, используя ту же семантику, что и метод <see cref="M:System.String.Format(System.String,System.Object,System.Object)" />.</summary>
      <param name="format">Строка составного формата.</param>
      <param name="arg0">Первый объект для форматирования и записи.</param>
      <param name="arg1">Второй объект для форматирования и записи.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="format" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.TextWriter" /> закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
      <exception cref="T:System.FormatException">Параметр <paramref name="format" /> не является допустимой строкой составного формата.  
-или- 
Индекс элемента формата меньше 0 (нуля) или больше или равен числу объектов, которые необходимо отформатировать (которое для этой перегрузки метода равно 2).</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
      <summary>Записывает форматированную строку в текстовый поток, используя ту же семантику, что и метод <see cref="M:System.String.Format(System.String,System.Object,System.Object,System.Object)" />.</summary>
      <param name="format">Строка составного формата.</param>
      <param name="arg0">Первый объект для форматирования и записи.</param>
      <param name="arg1">Второй объект для форматирования и записи.</param>
      <param name="arg2">Третий объект для форматирования и записи.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="format" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.TextWriter" /> закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
      <exception cref="T:System.FormatException">Параметр <paramref name="format" /> не является допустимой строкой составного формата.  

или - 
Индекс элемента формата меньше 0 (нуля) или больше или равен числу объектов, которые необходимо отформатировать (которое для этой перегрузки метода равно 3).</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.String,System.Object[])">
      <summary>Записывает форматированную строку в текстовый поток, используя ту же семантику, что и метод <see cref="M:System.String.Format(System.String,System.Object[])" />.</summary>
      <param name="format">Строка составного формата.</param>
      <param name="arg">Массив объектов, содержащий от нуля и более объектов, которые необходимо форматировать и записать.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="format" /> или <paramref name="arg" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.TextWriter" /> закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
      <exception cref="T:System.FormatException">Параметр <paramref name="format" /> не является допустимой строкой составного формата.  

или - 
Индекс элемента формата меньше нуля или больше либо равен длине массива <paramref name="arg" />.</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.Text.StringBuilder)">
      <summary>Записывает построитель строки в текстовый поток.</summary>
      <param name="value">Строка как построитель строки для записи в текстовый поток.</param>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.UInt32)">
      <summary>Записывает в текстовый поток текстовое представление целого числа без знака размером 4 байта.</summary>
      <param name="value">Записываемое целое число без знака размером 4 байта.</param>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.TextWriter" /> закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.UInt64)">
      <summary>Записывает в текстовый поток текстовое представление целого числа без знака размером 8 байт.</summary>
      <param name="value">Записываемое целое число без знака размером 8 байт.</param>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.TextWriter" /> закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteAsync(System.Char)">
      <summary>Выполняет асинхронную запись символа в текстовый поток.</summary>
      <param name="value">Символ, записываемый в текстовый поток.</param>
      <returns>Задача, представляющая асинхронную операцию записи.</returns>
      <exception cref="T:System.ObjectDisposedException">Удалено средство записи текста.</exception>
      <exception cref="T:System.InvalidOperationException">Средство записи текста в настоящее время используется предыдущей операцией записи.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteAsync(System.Char[])">
      <summary>Выполняет асинхронную запись массива символов в текстовый поток.</summary>
      <param name="buffer">Массив символов, записываемый в текстовый поток. Если <paramref name="buffer" /> имеет значение <see langword="null" />, запись не выполняется.</param>
      <returns>Задача, представляющая асинхронную операцию записи.</returns>
      <exception cref="T:System.ObjectDisposedException">Удалено средство записи текста.</exception>
      <exception cref="T:System.InvalidOperationException">Средство записи текста в настоящее время используется предыдущей операцией записи.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Асинхронно записывает подмассив символов в текстовый поток.</summary>
      <param name="buffer">Массив символов, из которого записываются данные.</param>
      <param name="index">Положение символа в буфере, с которого начинается извлечение данных.</param>
      <param name="count">Количество символов для записи.</param>
      <returns>Задача, представляющая асинхронную операцию записи.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Сумма значений параметров <paramref name="index" /> и <paramref name="count" /> превышает длину буфера.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> или <paramref name="count" /> является отрицательным значением.</exception>
      <exception cref="T:System.ObjectDisposedException">Удалено средство записи текста.</exception>
      <exception cref="T:System.InvalidOperationException">Средство записи текста в настоящее время используется предыдущей операцией записи.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)">
      <summary>Выполняет асинхронную запись области памяти символов в текстовый поток.</summary>
      <param name="buffer">Область памяти символов для записи в текстовый поток.</param>
      <param name="cancellationToken">Токен для отслеживания запросов отмены. Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Задача, представляющая асинхронную операцию записи.</returns>
    </member>
    <member name="M:System.IO.TextWriter.WriteAsync(System.String)">
      <summary>Выполняет асинхронную запись строки в текстовый поток.</summary>
      <param name="value">Строка для записи. Если параметр <paramref name="value" /> имеет значение <see langword="null" />, в текстовый поток ничего не записывается.</param>
      <returns>Задача, представляющая асинхронную операцию записи.</returns>
      <exception cref="T:System.ObjectDisposedException">Удалено средство записи текста.</exception>
      <exception cref="T:System.InvalidOperationException">Средство записи текста в настоящее время используется предыдущей операцией записи.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteAsync(System.Text.StringBuilder,System.Threading.CancellationToken)">
      <summary>Асинхронно записывает построитель строки в текстовый поток.</summary>
      <param name="value">Строка как построитель строки для записи в текстовый поток.</param>
      <param name="cancellationToken">Токен для отслеживания запросов отмены. Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Задача, представляющая асинхронную операцию записи.</returns>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine">
      <summary>Записывает признак конца строки в текстовый поток.</summary>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.TextWriter" /> закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.Boolean)">
      <summary>Записывает в текстовый поток текстовое представление значения типа <see langword="Boolean" />, за которым следует знак конца строки.</summary>
      <param name="value">Значение <see langword="Boolean" /> для записи.</param>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.TextWriter" /> закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.Char)">
      <summary>Записывает в текстовый поток символ, за которым следует признак конца строки.</summary>
      <param name="value">Символ, записываемый в текстовый поток.</param>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.TextWriter" /> закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.Char[])">
      <summary>Записывает в текстовый поток массив символов, за которыми следует признак конца строки.</summary>
      <param name="buffer">Массив символов, из которого считываются данные.</param>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.TextWriter" /> закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
      <summary>Записывает в текстовый поток подмассив символов, за которым следует признак конца строки.</summary>
      <param name="buffer">Массив символов, из которого считываются данные.</param>
      <param name="index">Положение символа в <paramref name="buffer" />, с которого начинается чтение данных.</param>
      <param name="count">Наибольшее количество символов для записи.</param>
      <exception cref="T:System.ArgumentException">Длина буфера минус <paramref name="index" /> меньше <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="buffer" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> или <paramref name="count" /> является отрицательным значением.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.TextWriter" /> закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.Decimal)">
      <summary>Записывает в текстовый поток текстовое представление десятичного значения, за которым следует знак конца строки.</summary>
      <param name="value">Десятичное значение, которое необходимо записать.</param>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.TextWriter" /> закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.Double)">
      <summary>Записывает в текстовый поток текстовое представление значения с плавающей запятой размером 8 байт, за которым следует признак конца строки.</summary>
      <param name="value">Записываемое значение с плавающей запятой размером 8 байт.</param>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.TextWriter" /> закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.Int32)">
      <summary>Записывает в текстовый поток текстовое представление целого числа со знаком размером 4 байта, за которым следует признак конца строки.</summary>
      <param name="value">Записываемое целое число со знаком размером 4 байта.</param>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.TextWriter" /> закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.Int64)">
      <summary>Записывает в текстовый поток текстовое представление целого числа со знаком размером 8 байт, за которым следует признак конца строки.</summary>
      <param name="value">Записываемое целое число со знаком размером 8 байт.</param>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.TextWriter" /> закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.Object)">
      <summary>Записывает в текстовый поток текстовое представление объекта путем вызова метода <see langword="ToString" /> для этого объекта, за которым следует признак конца строки.</summary>
      <param name="value">Записываемый объект. Если <paramref name="value" /> имеет значение <see langword="null" />, записывается только признак конца строки.</param>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.TextWriter" /> закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.ReadOnlySpan{System.Char})">
      <summary>Записывает в текстовый поток текстовое представление диапазона символов, за которым следует знак конца строки.</summary>
      <param name="buffer">Значение диапазона символов, записываемое в текстовый поток.</param>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.Single)">
      <summary>Записывает в текстовый поток текстовое представление значения с плавающей запятой размером 4 байта, за которым следует признак конца строки.</summary>
      <param name="value">Записываемое значение с плавающей запятой размером 4 байта.</param>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.TextWriter" /> закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.String)">
      <summary>Записывает в текстовый поток строку, за которой следует признак конца строки.</summary>
      <param name="value">Строка для записи. Если <paramref name="value" /> имеет значение <see langword="null" />, записывается только признак конца строки.</param>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.TextWriter" /> закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
      <summary>Записывает форматированную строку и перенос строки в текстовый поток, используя ту же семантику, что и метод <see cref="M:System.String.Format(System.String,System.Object)" />.</summary>
      <param name="format">Строка составного формата.</param>
      <param name="arg0">Объект для форматирования и записи.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="format" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.TextWriter" /> закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
      <exception cref="T:System.FormatException">Параметр <paramref name="format" /> не является допустимой строкой составного формата.  
-или- 
Индекс элемента формата меньше 0 (нуля) или больше или равен числу объектов, которые необходимо отформатировать (которое для этой перегрузки метода равно 1).</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
      <summary>Записывает форматированную строку и перенос строки в текстовый поток, используя ту же семантику, что и метод <see cref="M:System.String.Format(System.String,System.Object,System.Object)" />.</summary>
      <param name="format">Строка составного формата.</param>
      <param name="arg0">Первый объект для форматирования и записи.</param>
      <param name="arg1">Второй объект для форматирования и записи.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="format" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.TextWriter" /> закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
      <exception cref="T:System.FormatException">Параметр <paramref name="format" /> не является допустимой строкой составного формата.  

или - 
Индекс элемента формата меньше 0 (нуля) или больше или равен числу объектов, которые необходимо отформатировать (которое для этой перегрузки метода равно 2).</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
      <summary>Записывает форматированную строку и перенос строки в текстовый поток, используя ту же семантику, что и <see cref="M:System.String.Format(System.String,System.Object)" />.</summary>
      <param name="format">Строка составного формата.</param>
      <param name="arg0">Первый объект для форматирования и записи.</param>
      <param name="arg1">Второй объект для форматирования и записи.</param>
      <param name="arg2">Третий объект для форматирования и записи.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="format" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.TextWriter" /> закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
      <exception cref="T:System.FormatException">Параметр <paramref name="format" /> не является допустимой строкой составного формата.  

или - 
Индекс элемента формата меньше 0 (нуля) или больше или равен числу объектов, которые необходимо отформатировать (которое для этой перегрузки метода равно 3).</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
      <summary>Записывает форматированную строку и перенос строки в текстовый поток, используя ту же семантику, что и <see cref="M:System.String.Format(System.String,System.Object)" />.</summary>
      <param name="format">Строка составного формата.</param>
      <param name="arg">Массив объектов, содержащий от нуля и более объектов, которые необходимо форматировать и записать.</param>
      <exception cref="T:System.ArgumentNullException">Строка или объект передаются в виде <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.TextWriter" /> закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
      <exception cref="T:System.FormatException">Параметр <paramref name="format" /> не является допустимой строкой составного формата.  

или - 
Индекс элемента формата меньше нуля или больше либо равен длине массива <paramref name="arg" />.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.Text.StringBuilder)">
      <summary>Записывает в текстовый поток текстовое представление построителя строки, за которым следует знак конца строки.</summary>
      <param name="value">Строка как построитель строки для записи в текстовый поток.</param>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.UInt32)">
      <summary>Записывает в текстовый поток текстовое представление целого числа без знака размером 4 байта, за которым следует признак конца строки.</summary>
      <param name="value">Записываемое целое число без знака размером 4 байта.</param>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.TextWriter" /> закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.UInt64)">
      <summary>Записывает в текстовый поток текстовое представление целого числа без знака размером 8 байт, за которым следует признак конца строки.</summary>
      <param name="value">Записываемое целое число без знака размером 8 байт.</param>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.TextWriter" /> закрыт.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLineAsync">
      <summary>Асинхронно записывает признак конца строки в текстовый поток.</summary>
      <returns>Задача, представляющая асинхронную операцию записи.</returns>
      <exception cref="T:System.ObjectDisposedException">Удалено средство записи текста.</exception>
      <exception cref="T:System.InvalidOperationException">Средство записи текста в настоящее время используется предыдущей операцией записи.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLineAsync(System.Char)">
      <summary>Асинхронно записывает в текстовый поток символ, за которым следует признак конца строки.</summary>
      <param name="value">Символ, записываемый в текстовый поток.</param>
      <returns>Задача, представляющая асинхронную операцию записи.</returns>
      <exception cref="T:System.ObjectDisposedException">Удалено средство записи текста.</exception>
      <exception cref="T:System.InvalidOperationException">Средство записи текста в настоящее время используется предыдущей операцией записи.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLineAsync(System.Char[])">
      <summary>Асинхронно записывает в текстовый поток массив символов, за которым следует признак конца строки.</summary>
      <param name="buffer">Массив символов, записываемый в текстовый поток. Если массив символов имеет значение <see langword="null" />, записывается только признак конца строки.</param>
      <returns>Задача, представляющая асинхронную операцию записи.</returns>
      <exception cref="T:System.ObjectDisposedException">Удалено средство записи текста.</exception>
      <exception cref="T:System.InvalidOperationException">Средство записи текста в настоящее время используется предыдущей операцией записи.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Асинхронно записывает в текстовый поток подмассив символов, за которым следует признак конца строки.</summary>
      <param name="buffer">Массив символов, из которого записываются данные.</param>
      <param name="index">Положение символа в буфере, с которого начинается извлечение данных.</param>
      <param name="count">Количество символов для записи.</param>
      <returns>Задача, представляющая асинхронную операцию записи.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Сумма значений параметров <paramref name="index" /> и <paramref name="count" /> превышает длину буфера.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> или <paramref name="count" /> является отрицательным значением.</exception>
      <exception cref="T:System.ObjectDisposedException">Удалено средство записи текста.</exception>
      <exception cref="T:System.InvalidOperationException">Средство записи текста в настоящее время используется предыдущей операцией записи.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLineAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)">
      <summary>Асинхронно записывает в текстовый поток текстовое представление области памяти символов, за которым следует знак конца строки.</summary>
      <param name="buffer">Область памяти символов для записи в текстовый поток.</param>
      <param name="cancellationToken">Токен для отслеживания запросов отмены. Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Задача, представляющая асинхронную операцию записи.</returns>
    </member>
    <member name="M:System.IO.TextWriter.WriteLineAsync(System.String)">
      <summary>Асинхронно записывает в текстовый поток строку, за которой следует признак конца строки.</summary>
      <param name="value">Строка для записи. Если значение равно <see langword="null" />, записывается только знак конца строки.</param>
      <returns>Задача, представляющая асинхронную операцию записи.</returns>
      <exception cref="T:System.ObjectDisposedException">Удалено средство записи текста.</exception>
      <exception cref="T:System.InvalidOperationException">Средство записи текста в настоящее время используется предыдущей операцией записи.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLineAsync(System.Text.StringBuilder,System.Threading.CancellationToken)">
      <summary>Асинхронно записывает в текстовый поток текстовое представление построителя строки, за которым следует знак конца строки.</summary>
      <param name="value">Строка как построитель строки для записи в текстовый поток.</param>
      <param name="cancellationToken">Токен для отслеживания запросов отмены. Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Задача, представляющая асинхронную операцию записи.</returns>
    </member>
    <member name="T:System.LoaderOptimization">
      <summary>Перечисление, используемое с классом <see cref="T:System.LoaderOptimizationAttribute" /> для определения способов оптимизации работы загрузчика для исполняемых файлов.</summary>
    </member>
    <member name="F:System.LoaderOptimization.DisallowBindings">
      <summary>Игнорируется в среде CLR.</summary>
    </member>
    <member name="F:System.LoaderOptimization.DomainMask">
      <summary>Не используется. При использовании этой маски выбираются связанные с доменом значения, а неиспользуемый флаг <see cref="F:System.LoaderOptimization.DisallowBindings" /> отсеивается.</summary>
    </member>
    <member name="F:System.LoaderOptimization.MultiDomain">
      <summary>Указывает, что в приложении, по видимому, будет много доменов, использующих один и тот же код, и загрузчик должен обеспечить совместное использование доменами приложения максимального количества внутренних ресурсов.</summary>
    </member>
    <member name="F:System.LoaderOptimization.MultiDomainHost">
      <summary>Указывает, что приложение, по видимому, разместит уникальный код в нескольких доменах, и загрузчик должен обеспечивать совместное использование ресурсов в доменах приложения только для глобально доступных (строго поименованных) сборок, добавленных в глобальный кэш сборок.</summary>
    </member>
    <member name="F:System.LoaderOptimization.NotSpecified">
      <summary>Указывает, что оптимизация совместного использование внутренних ресурсов не задана. Если оптимизация задана доменом по умолчанию или интерфейсом размещения, загрузчик использует их; в противном случае, он использует <see cref="F:System.LoaderOptimization.SingleDomain" />.</summary>
    </member>
    <member name="F:System.LoaderOptimization.SingleDomain">
      <summary>Указывает, что у приложения, по видимому, будет единственный домен, и загрузчик не должен обеспечивать совместное использование внутренних ресурсов доменами приложения.</summary>
    </member>
    <member name="T:System.LoaderOptimizationAttribute">
      <summary>Используется для установки политики оптимизации загрузчика для основного метода исполняемого приложения.</summary>
    </member>
    <member name="M:System.LoaderOptimizationAttribute.#ctor(System.Byte)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.LoaderOptimizationAttribute" /> с указанным значением.</summary>
      <param name="value">Значение эквивалентно константе <see cref="T:System.LoaderOptimization" />.</param>
    </member>
    <member name="M:System.LoaderOptimizationAttribute.#ctor(System.LoaderOptimization)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.LoaderOptimizationAttribute" /> с указанным значением.</summary>
      <param name="value">Константа <see cref="T:System.LoaderOptimization" />.</param>
    </member>
    <member name="P:System.LoaderOptimizationAttribute.Value">
      <summary>Возвращает текущее значение <see cref="T:System.LoaderOptimization" /> данного экземпляра.</summary>
      <returns>Константа <see cref="T:System.LoaderOptimization" />.</returns>
    </member>
    <member name="T:System.Math">
      <summary>Предоставляет константы и статические методы для тригонометрических, логарифмических и иных общих математических функций.</summary>
    </member>
    <member name="M:System.Math.Abs(System.Decimal)">
      <summary>Возвращает абсолютное значение числа <see cref="T:System.Decimal" />.</summary>
      <param name="value">Число, которое больше или равно значению <see cref="F:System.Decimal.MinValue" />, но меньше или равно значению <see cref="F:System.Decimal.MaxValue" />.</param>
      <returns>Десятичное число x, такое, что 0 ≤ x ≤<see cref="F:System.Decimal.MaxValue" />.</returns>
    </member>
    <member name="M:System.Math.Abs(System.Double)">
      <summary>Возвращает абсолютное значение числа двойной точности с плавающей запятой.</summary>
      <param name="value">Число, которое больше или равно значению <see cref="F:System.Double.MinValue" />, но меньше или равно значению <see cref="F:System.Double.MaxValue" />.</param>
      <returns>Число х двойной точности с плавающей запятой, такое, что 0 ≤ x ≤<see cref="F:System.Double.MaxValue" />.</returns>
    </member>
    <member name="M:System.Math.Abs(System.Int16)">
      <summary>Возвращает абсолютное значение 16-битового целого числа со знаком.</summary>
      <param name="value">Число, которое больше значения <see cref="F:System.Int16.MinValue" />, но меньше или равно значению <see cref="F:System.Int16.MaxValue" />.</param>
      <returns>16-разрядное целое число х со знаком, такое, что 0 ≤ x ≤<see cref="F:System.Int16.MaxValue" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> равняется <see cref="F:System.Int16.MinValue" />.</exception>
    </member>
    <member name="M:System.Math.Abs(System.Int32)">
      <summary>Возвращает абсолютное значение 32-битового целого числа со знаком.</summary>
      <param name="value">Число, которое больше значения <see cref="F:System.Int32.MinValue" />, но меньше или равно значению <see cref="F:System.Int32.MaxValue" />.</param>
      <returns>32-разрядное целое число х со знаком, такое, что 0 ≤ x ≤<see cref="F:System.Int32.MaxValue" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> равняется <see cref="F:System.Int32.MinValue" />.</exception>
    </member>
    <member name="M:System.Math.Abs(System.Int64)">
      <summary>Возвращает абсолютное значение 64-битового целого числа со знаком.</summary>
      <param name="value">Число, которое больше значения <see cref="F:System.Int64.MinValue" />, но меньше или равно значению <see cref="F:System.Int64.MaxValue" />.</param>
      <returns>64-разрядное целое число х со знаком, такое, что 0 ≤ x ≤<see cref="F:System.Int64.MaxValue" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> равняется <see cref="F:System.Int64.MinValue" />.</exception>
    </member>
    <member name="M:System.Math.Abs(System.SByte)">
      <summary>Возвращает абсолютное значение 8-битового целого числа со знаком.</summary>
      <param name="value">Число, которое больше значения <see cref="F:System.SByte.MinValue" />, но меньше или равно значению <see cref="F:System.SByte.MaxValue" />.</param>
      <returns>8-разрядное целое число х со знаком, такое, что 0 ≤ x ≤<see cref="F:System.SByte.MaxValue" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> равняется <see cref="F:System.SByte.MinValue" />.</exception>
    </member>
    <member name="M:System.Math.Abs(System.Single)">
      <summary>Возвращает абсолютное значение числа одинарной точности с плавающей запятой.</summary>
      <param name="value">Число, которое больше или равно значению <see cref="F:System.Single.MinValue" />, но меньше или равно значению <see cref="F:System.Single.MaxValue" />.</param>
      <returns>Число х одинарной точности с плавающей запятой, такое, что 0 ≤ x ≤<see cref="F:System.Single.MaxValue" />.</returns>
    </member>
    <member name="M:System.Math.Acos(System.Double)">
      <summary>Возвращает угол, косинус которого равен указанному числу.</summary>
      <param name="d">Число, представляющее косинус, где значение параметра <paramref name="d" /> должно быть больше или равно -1, но меньше или равно 1.</param>
      <returns>Угол θ, измеренный в радианах, такой, что 0 ≤θ≤π 

или - 
Значение <see cref="F:System.Double.NaN" />, если <paramref name="d" /> &lt; –1 или <paramref name="d" /> &gt; 1 или значение параметра <paramref name="d" /> равно <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.Acosh(System.Double)">
      <summary>Возвращает угол, гиперболический косинус которого равен указанному числу.</summary>
      <param name="d">Число, представляющее гиперболический косинус, где значение параметра <paramref name="d" /> должно быть больше или равно 1, но меньше или равно <see cref="F:System.Double.PositiveInfinity" />.</param>
      <returns>Угол θ, измеренный в радианах, такой, что 0 ≤ θ ≤ ∞.  
-или- 
 <see cref="F:System.Double.NaN" />, если <paramref name="d" /> &lt; 1 или <paramref name="d" /> равно <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.Asin(System.Double)">
      <summary>Возвращает угол, синус которого равен указанному числу.</summary>
      <param name="d">Число, представляющее синус, где значение параметра <paramref name="d" /> должно быть больше или равно -1, но меньше или равно 1.</param>
      <returns>Угол θ, измеренный в радианах, такой, что -π/2 ≤θ≤π/2 

или - 
Значение <see cref="F:System.Double.NaN" />, если <paramref name="d" /> &lt; –1 или <paramref name="d" /> &gt; 1 или значение параметра <paramref name="d" /> равно <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.Asinh(System.Double)">
      <summary>Возвращает угол, гиперболический синус которого равен указанному числу.</summary>
      <param name="d">Число, представляющее гиперболический синус, где значение параметра <paramref name="d" /> должно быть больше или равно <see cref="F:System.Double.NegativeInfinity" />, но меньше или равно <see cref="F:System.Double.PositiveInfinity" />.</param>
      <returns>Угол θ, измеренный в радианах, такой, что –∞ &lt; θ ≤–1 или 1 ≤ θ &lt; ∞. 

или - 
<see cref="F:System.Double.NaN" />, если <paramref name="d" /> равно <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.Atan(System.Double)">
      <summary>Возвращает угол, тангенс которого равен указанному числу.</summary>
      <param name="d">Число, представляющее тангенс.</param>
      <returns>Угол θ, измеренный в радианах, такой, что -π/2 ≤θ≤π/2.  
-или- 
 Значение <see cref="F:System.Double.NaN" />, если <paramref name="d" /> равно <see cref="F:System.Double.NaN" />, -π/2, округленное до двойной точности (–1,5707963267949), если <paramref name="d" /> равно <see cref="F:System.Double.NegativeInfinity" />, или π/2, округленное до двойной точности (1,5707963267949), если <paramref name="d" /> равно <see cref="F:System.Double.PositiveInfinity" />.</returns>
    </member>
    <member name="M:System.Math.Atan2(System.Double,System.Double)">
      <summary>Возвращает угол, тангенс которого равен отношению двух указанных чисел.</summary>
      <param name="y">Координата y точки.</param>
      <param name="x">Координата х точки.</param>
      <returns>Угол θ, измеренный в радианах, такой, что -π≤θ≤π, и tan(θ) = <paramref name="y" /> / <paramref name="x" />, где (<paramref name="x" />, <paramref name="y" />) — это точка в декартовой системе координат. Обратите внимание на следующее. 
– Для (<paramref name="x" />, <paramref name="y" />) в квадранте 1, 0 &lt; θ &lt; π/2.  
– Для (<paramref name="x" />, <paramref name="y" />) в квадранте 2, π/2 &lt; θ≤π.  
– Для (<paramref name="x" />, <paramref name="y" />) в квадранте 3, -π &lt; θ &lt; -π/2.  
– Для (<paramref name="x" />, <paramref name="y" />) в квадранте 4, -π/2 &lt; θ &lt; 0.  
Для точек за пределами указанных квадрантов возвращаемое значение указано ниже. 
– Если y равно 0, и x не является отрицательным, то θ = 0.  
– Если y равно 0, и x является отрицательным, то θ = π.  
– Если y — положительное число, а x равно 0, то θ = π/2.  
– Если y — отрицательное число, а х равно 0, то θ = -π/2.  
– Если y равен 0, и х равен 0, то θ = 0.  
Если значение параметра <paramref name="x" /> или <paramref name="y" /> равно <see cref="F:System.Double.NaN" /> либо если значения параметров <paramref name="x" /> и <paramref name="y" /> равны значению <see cref="F:System.Double.PositiveInfinity" /> или <see cref="F:System.Double.NegativeInfinity" />, метод возвращает значение <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.Atanh(System.Double)">
      <summary>Возвращает угол, гиперболический тангенс которого равен указанному числу.</summary>
      <param name="d">Число, представляющее гиперболический тангенс, где значение параметра <paramref name="d" /> должно быть больше или равно –1, но меньше или равно 1.</param>
      <returns>Угол θ, измеренный в радианах, такой, что –∞ &lt; θ &lt; –1 или 1 &lt; θ &lt; ∞. 
-или- 
 Значение <see cref="F:System.Double.NaN" />, если <paramref name="d" /> &lt; –1 или <paramref name="d" /> &gt; 1 или значение параметра <paramref name="d" /> равно <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.BigMul(System.Int32,System.Int32)">
      <summary>Умножает два 32-битовых числа.</summary>
      <param name="a">Первое число для умножения.</param>
      <param name="b">Второе число для перемножения.</param>
      <returns>Число, являющееся произведением указанных чисел.</returns>
    </member>
    <member name="M:System.Math.BitDecrement(System.Double)">
      <summary>Возвращает ближайшее самое маленькое значение, которое меньше, чем <paramref name="x" />.</summary>
      <param name="x">Уменьшаемое значение.</param>
      <returns>Ближайшее самое маленькое значение, которое меньше, чем <paramref name="x" />.  

или - 
<see cref="F:System.Double.NegativeInfinity" />, если <paramref name="x" /> равно <see cref="F:System.Double.NegativeInfinity" />.

-или- 
 <see cref="F:System.Double.NaN" />, если <paramref name="x" /> равно <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.BitIncrement(System.Double)">
      <summary>Возвращает ближайшее самое большое значение, превышающее <paramref name="x" />.</summary>
      <param name="x">Увеличиваемое значение.</param>
      <returns>Возвращает ближайшее самое большое значение, превышающее <paramref name="x" />.  

или - 
<see cref="F:System.Double.PositiveInfinity" />, если <paramref name="x" /> равно <see cref="F:System.Double.PositiveInfinity" />.

-или- 
 <see cref="F:System.Double.NaN" />, если <paramref name="x" /> равно <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.Cbrt(System.Double)">
      <summary>Возвращает кубический корень из указанного числа.</summary>
      <param name="d">Число, кубический корень которого требуется найти.</param>
      <returns>Кубический корень <paramref name="d" />.  
-или- 
 <see cref="F:System.Double.NaN" />, если <paramref name="x" /> равно <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.Ceiling(System.Decimal)">
      <summary>Возвращает наименьшее целое число, которое больше или равно заданному десятичному числу.</summary>
      <param name="d">Десятичное число.</param>
      <returns>Наименьшее целое число, которое больше или равно <paramref name="d" />. Обратите внимание, что данный метод возвращает не целочисленное значение, а значение типа <see cref="T:System.Decimal" />.</returns>
    </member>
    <member name="M:System.Math.Ceiling(System.Double)">
      <summary>Возвращает наименьшее целое число, которое больше или равно заданному числу с плавающей запятой двойной точности.</summary>
      <param name="a">Число двойной точности с плавающей запятой.</param>
      <returns>Наименьшее целое число, которое больше или равно <paramref name="a" />. Если значение параметра <paramref name="a" /> равно  <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> или <see cref="F:System.Double.PositiveInfinity" />, возвращается это значение. Обратите внимание, что данный метод возвращает не целочисленное значение, а значение типа <see cref="T:System.Double" />.</returns>
    </member>
    <member name="M:System.Math.Clamp(System.Byte,System.Byte,System.Byte)">
      <summary>Возвращает <paramref name="value" />, ограниченное диапазоном от <paramref name="min" /> до <paramref name="max" /> включительно.</summary>
      <param name="value">Ограничиваемое значение.</param>
      <param name="min">Нижняя граница результата.</param>
      <param name="max">Верхняя граница результата.</param>
      <returns>
        <paramref name="value" />, если <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.  

или - 
<paramref name="min" />, если <paramref name="value" /> &lt; <paramref name="min" />.

или - 
<paramref name="max" />, если <paramref name="max" /> &lt; <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Math.Clamp(System.Decimal,System.Decimal,System.Decimal)">
      <summary>Возвращает <paramref name="value" />, ограниченное диапазоном от <paramref name="min" /> до <paramref name="max" /> включительно.</summary>
      <param name="value">Ограничиваемое значение.</param>
      <param name="min">Нижняя граница результата.</param>
      <param name="max">Верхняя граница результата.</param>
      <returns>
        <paramref name="value" />, если <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.
-или- 
 <paramref name="min" />, если <paramref name="value" /> &lt;<paramref name="min" />.

или - 
<paramref name="max" />, если <paramref name="max" /> &lt; <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Math.Clamp(System.Double,System.Double,System.Double)">
      <summary>Возвращает <paramref name="value" />, ограниченное диапазоном от <paramref name="min" /> до <paramref name="max" /> включительно.</summary>
      <param name="value">Ограничиваемое значение.</param>
      <param name="min">Нижняя граница результата.</param>
      <param name="max">Верхняя граница результата.</param>
      <returns>
        <paramref name="value" />, если <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.
-или- 
 <paramref name="min" />, если <paramref name="value" /> &lt; <paramref name="min" />.

или - 
<paramref name="max" />, если <paramref name="max" /> &lt; <paramref name="value" />. 
или - 
<see cref="F:System.Double.NaN" />, если <paramref name="value" /> равно <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.Clamp(System.Int16,System.Int16,System.Int16)">
      <summary>Возвращает <paramref name="value" />, ограниченное диапазоном от <paramref name="min" /> до <paramref name="max" /> включительно.</summary>
      <param name="value">Ограничиваемое значение.</param>
      <param name="min">Нижняя граница результата.</param>
      <param name="max">Верхняя граница результата.</param>
      <returns>
        <paramref name="value" />, если <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.
-или- 
 <paramref name="min" />, если <paramref name="value" /> &lt; <paramref name="min" />.

или - 
<paramref name="max" />, если <paramref name="max" /> &lt; <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Math.Clamp(System.Int32,System.Int32,System.Int32)">
      <summary>Возвращает <paramref name="value" />, ограниченное диапазоном от <paramref name="min" /> до <paramref name="max" /> включительно.</summary>
      <param name="value">Ограничиваемое значение.</param>
      <param name="min">Нижняя граница результата.</param>
      <param name="max">Верхняя граница результата.</param>
      <returns>
        <paramref name="value" />, если <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.

или - 
<paramref name="min" />, если <paramref name="value" /> &lt; <paramref name="min" />.

или - 
<paramref name="max" />, если <paramref name="max" /> &lt; <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Math.Clamp(System.Int64,System.Int64,System.Int64)">
      <summary>Возвращает <paramref name="value" />, ограниченное диапазоном от <paramref name="min" /> до <paramref name="max" /> включительно.</summary>
      <param name="value">Ограничиваемое значение.</param>
      <param name="min">Нижняя граница результата.</param>
      <param name="max">Верхняя граница результата.</param>
      <returns>
        <paramref name="value" />, если <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.
-или- 
 <paramref name="min" />, если <paramref name="value" /> &lt; <paramref name="min" />.
-или- 
 <paramref name="max" />, если <paramref name="max" /> &lt; <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Math.Clamp(System.SByte,System.SByte,System.SByte)">
      <summary>Возвращает <paramref name="value" />, ограниченное диапазоном от <paramref name="min" /> до <paramref name="max" /> включительно.</summary>
      <param name="value">Ограничиваемое значение.</param>
      <param name="min">Нижняя граница результата.</param>
      <param name="max">Верхняя граница результата.</param>
      <returns>
        <paramref name="value" />, если <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.

или - 
<paramref name="min" />, если <paramref name="value" /> &lt; <paramref name="min" />.

или - 
<paramref name="max" />, если <paramref name="max" /> &lt; <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Math.Clamp(System.Single,System.Single,System.Single)">
      <summary>Возвращает <paramref name="value" />, ограниченное диапазоном от <paramref name="min" /> до <paramref name="max" /> включительно.</summary>
      <param name="value">Ограничиваемое значение.</param>
      <param name="min">Нижняя граница результата.</param>
      <param name="max">Верхняя граница результата.</param>
      <returns>
        <paramref name="value" />, если <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.  

или - 
<paramref name="min" />, если <paramref name="value" /> &lt; <paramref name="min" />.

-или- 
 <paramref name="max" />, если <paramref name="max" /> &lt; <paramref name="value" />.
-или- 
  <see cref="F:System.Single.NaN" />, если <paramref name="value" /> равно <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.Math.Clamp(System.UInt16,System.UInt16,System.UInt16)">
      <summary>Возвращает <paramref name="value" />, ограниченное диапазоном от <paramref name="min" /> до <paramref name="max" /> включительно.</summary>
      <param name="value">Ограничиваемое значение.</param>
      <param name="min">Нижняя граница результата.</param>
      <param name="max">Верхняя граница результата.</param>
      <returns>
        <paramref name="value" />, если <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.  

или - 
<paramref name="min" />, если <paramref name="value" /> &lt; <paramref name="min" />.

или - 
<paramref name="max" />, если <paramref name="max" /> &lt; <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Math.Clamp(System.UInt32,System.UInt32,System.UInt32)">
      <summary>Возвращает <paramref name="value" />, ограниченное диапазоном от <paramref name="min" /> до <paramref name="max" /> включительно.</summary>
      <param name="value">Ограничиваемое значение.</param>
      <param name="min">Нижняя граница результата.</param>
      <param name="max">Верхняя граница результата.</param>
      <returns>
        <paramref name="value" />, если <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.  

или - 
<paramref name="min" />, если <paramref name="value" /> &lt; <paramref name="min" />.

или - 
<paramref name="max" />, если <paramref name="max" /> &lt; <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Math.Clamp(System.UInt64,System.UInt64,System.UInt64)">
      <summary>Возвращает <paramref name="value" />, ограниченное диапазоном от <paramref name="min" /> до <paramref name="max" /> включительно.</summary>
      <param name="value">Ограничиваемое значение.</param>
      <param name="min">Нижняя граница результата.</param>
      <param name="max">Верхняя граница результата.</param>
      <returns>
        <paramref name="value" />, если <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.
-или- 
 <paramref name="min" />, если <paramref name="value" /> &lt; <paramref name="min" />.

или - 
<paramref name="max" />, если <paramref name="max" /> &lt; <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Math.CopySign(System.Double,System.Double)">
      <summary>Возвращает значение с величиной <paramref name="x" /> и знаком <paramref name="y" />.</summary>
      <param name="x">Число, величина которого используется в результате.</param>
      <param name="y">Число, знак которого используется в результате.</param>
      <returns>Значение с величиной <paramref name="x" /> и знаком <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Math.Cos(System.Double)">
      <summary>Возвращает косинус указанного угла.</summary>
      <param name="d">Угол, измеряемый в радианах.</param>
      <returns>Косинус <paramref name="d" />. Если значение параметра <paramref name="d" /> равно <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> или <see cref="F:System.Double.PositiveInfinity" />, то данный метод возвращает <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.Cosh(System.Double)">
      <summary>Возвращает гиперболический косинус указанного угла.</summary>
      <param name="value">Угол, измеряемый в радианах.</param>
      <returns>Гиперболический косинус <paramref name="value" />. Если значение параметра <paramref name="value" /> равно <see cref="F:System.Double.NegativeInfinity" /> или <see cref="F:System.Double.PositiveInfinity" />, то возвращаемое значение равно <see cref="F:System.Double.PositiveInfinity" />. Если значение параметра <paramref name="value" /> равно <see cref="F:System.Double.NaN" />, возвращается значение <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.DivRem(System.Int32,System.Int32,System.Int32@)">
      <summary>Вычисляет частное двух 32-разрядных знаковых целых чисел и возвращает остаток в выходном параметре.</summary>
      <param name="a">Делимое.</param>
      <param name="b">Делитель.</param>
      <param name="result">Остаток.</param>
      <returns>Частное от деления указанных чисел.</returns>
      <exception cref="T:System.DivideByZeroException">
        <paramref name="b" /> равен нулю.</exception>
    </member>
    <member name="M:System.Math.DivRem(System.Int64,System.Int64,System.Int64@)">
      <summary>Вычисляет частное двух 64-битовых целых чисел со знаком и возвращает остаток в выходном параметре.</summary>
      <param name="a">Делимое.</param>
      <param name="b">Делитель.</param>
      <param name="result">Остаток.</param>
      <returns>Частное от деления указанных чисел.</returns>
      <exception cref="T:System.DivideByZeroException">
        <paramref name="b" /> равен нулю.</exception>
    </member>
    <member name="F:System.Math.E">
      <summary>Представляет основание натурального логарифма, определяемое константой <see langword="e" />.</summary>
    </member>
    <member name="M:System.Math.Exp(System.Double)">
      <summary>Возвращает <see langword="e" />, возведенное в указанную степень.</summary>
      <param name="d">Число, определяющее степень.</param>
      <returns>Число <see langword="e" />, возведенное в степень <paramref name="d" />. Если значение параметра <paramref name="d" /> равно <see cref="F:System.Double.NaN" /> или <see cref="F:System.Double.PositiveInfinity" />, возвращается это значение. Если значение параметра <paramref name="d" /> равно <see cref="F:System.Double.NegativeInfinity" />, возвращается значение 0.</returns>
    </member>
    <member name="M:System.Math.Floor(System.Decimal)">
      <summary>Возвращает наибольшее целое число, которое меньше или равно указанному десятичному числу.</summary>
      <param name="d">Десятичное число.</param>
      <returns>Наибольшее целое число, которое меньше или равно <paramref name="d" />.  Обратите внимание, что этот метод возвращает целочисленное значение типа <see cref="T:System.Decimal" />.</returns>
    </member>
    <member name="M:System.Math.Floor(System.Double)">
      <summary>Возвращает наибольшее целое число, которое меньше или равно заданному числу с плавающей запятой двойной точности.</summary>
      <param name="d">Число двойной точности с плавающей запятой.</param>
      <returns>Наибольшее целое число, которое меньше или равно <paramref name="d" />. Если значение параметра <paramref name="d" /> равно  <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> или <see cref="F:System.Double.PositiveInfinity" />, возвращается это значение.</returns>
    </member>
    <member name="M:System.Math.FusedMultiplyAdd(System.Double,System.Double,System.Double)">
      <summary>Возвращает значение (x * y) + z, округленное в рамках одной тернарной операции.</summary>
      <param name="x">Число, которое будет умножаться на <paramref name="y" />.</param>
      <param name="y">Число, которое будет умножаться на <paramref name="x" />.</param>
      <param name="z">Число, которое будет добавляться к результату <paramref name="x" />, умноженному на <paramref name="y" />.</param>
      <returns>Значение (x * y) + z, округленное в рамках одной тернарной операции.</returns>
    </member>
    <member name="M:System.Math.IEEERemainder(System.Double,System.Double)">
      <summary>Возвращает остаток от деления одного указанного числа на другое указанное число.</summary>
      <param name="x">Делимое.</param>
      <param name="y">Делитель.</param>
      <returns>Число, равное <paramref name="x" /> – (<paramref name="y" /> Q), где Q является частным <paramref name="x" /> / <paramref name="y" />, округленным до ближайшего целого числа (если <paramref name="x" /> / <paramref name="y" /> находится на равном расстоянии от двух целых чисел, выбирается четное число).  
Если значение <paramref name="x" /> - ( <paramref name="y" /> Q) равно нулю, возвращается значение +0 при положительном <paramref name="x" />, или значение -0 при отрицательном <paramref name="x" />.  
Если значение параметра <paramref name="y" /> равно 0, возвращается значение <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.ILogB(System.Double)">
      <summary>Возвращает целочисленный логарифм с основанием 2 указанного числа.</summary>
      <param name="x">Число, логарифм которого требуется найти.</param>
      <returns>Одно из значений, перечисленных в следующей таблице.  
 Параметр <paramref name="x" /> 
  Возвращаемое значение 
  Значение по умолчанию 
  Целочисленный логарифм с основанием 2 <paramref name="x" />, то есть (int)log2(<paramref name="x" />).  

  Нуль 
 <see cref="F:System.Int32.MinValue" /> Равно <see cref="F:System.Double.NaN" /> или <see cref="F:System.Double.PositiveInfinity" /> или <see cref="F:System.Double.NegativeInfinity" /><see cref="F:System.Int32.MaxValue" /></returns>
    </member>
    <member name="M:System.Math.Log(System.Double)">
      <summary>Возвращает натуральный логарифм (с основанием <see langword="e" />) указанного числа.</summary>
      <param name="d">Число, логарифм которого требуется найти.</param>
      <returns>Одно из значений, перечисленных в следующей таблице.  
 Параметр <paramref name="d" /> 
  Возвращаемое значение 
  Положительное число 
  Натуральный логарифм <paramref name="d" />, то есть ln <paramref name="d" /> или log e <paramref name="d" /> Нуль 
 <see cref="F:System.Double.NegativeInfinity" /> Отрицательное число 
 <see cref="F:System.Double.NaN" /> Равно значению <see cref="F:System.Double.NaN" /><see cref="F:System.Double.NaN" /> Равно значению <see cref="F:System.Double.PositiveInfinity" /><see cref="F:System.Double.PositiveInfinity" /></returns>
    </member>
    <member name="M:System.Math.Log(System.Double,System.Double)">
      <summary>Возвращает логарифм указанного числа в системе счисления с указанным основанием.</summary>
      <param name="a">Число, логарифм которого требуется найти.</param>
      <param name="newBase">Основание логарифма.</param>
      <returns>Одно из значений, перечисленных в следующей таблице. (+бесконечность обозначает <see cref="F:System.Double.PositiveInfinity" />, -бесконечность обозначает <see cref="F:System.Double.NegativeInfinity" />, а нечисловое значение обозначает <see cref="F:System.Double.NaN" />.) 
 <paramref name="a" /><paramref name="newBase" /> Возвращаемое значение 
 <paramref name="a" />&gt; 0 
  (0 &lt;<paramref name="newBase" />&lt; 1) -или-(<paramref name="newBase" />&gt; 1) 
  lognewBase(a) 
 <paramref name="a" />&lt; 0 
  (любое значение) 
  NaN 
  (любое значение) 
 <paramref name="newBase" />&lt; 0 
  NaN 
 <paramref name="a" /> != 1 
 <paramref name="newBase" /> = 0 
  NaN 
 <paramref name="a" /> != 1 
 <paramref name="newBase" /> = +бесконечность 
  NaN 
 <paramref name="a" /> = NaN 
  (любое значение) 
  NaN 
  (любое значение) 
 <paramref name="newBase" /> = не число 
  не число 
  (любое значение) 
 <paramref name="newBase" /> = 1 
  NaN 
 <paramref name="a" /> = 0 
  0 &lt;<paramref name="newBase" />&lt; 1 
  +бесконечность 
 <paramref name="a" /> = 0 
 <paramref name="newBase" />&gt; 1 
  -бесконечность 
 <paramref name="a" /> = +бесконечность 
  0 &lt;<paramref name="newBase" />&lt; 1 
  -Infinity 
 <paramref name="a" /> = +бесконечность 
 <paramref name="newBase" />&gt; 1 
  +бесконечность 
 <paramref name="a" /> = 1 
 <paramref name="newBase" /> = 0 
  0 
 <paramref name="a" /> = 1 
 <paramref name="newBase" /> = +бесконечность 
  0</returns>
    </member>
    <member name="M:System.Math.Log10(System.Double)">
      <summary>Возвращает логарифм с основанием 10 указанного числа.</summary>
      <param name="d">Число, логарифм которого должен быть найден.</param>
      <returns>Одно из значений, перечисленных в следующей таблице.  
 Параметр <paramref name="d" /> 
  Возвращаемое значение 
  Положительное число 
  Основание 10 логарифма <paramref name="d" />, то есть log 10<paramref name="d" />.  

  Нуль 
 <see cref="F:System.Double.NegativeInfinity" /> Отрицательное число 
 <see cref="F:System.Double.NaN" /> Равно значению <see cref="F:System.Double.NaN" /><see cref="F:System.Double.NaN" /> Равно значению <see cref="F:System.Double.PositiveInfinity" /><see cref="F:System.Double.PositiveInfinity" /></returns>
    </member>
    <member name="M:System.Math.Log2(System.Double)">
      <summary>Возвращает логарифм с основанием 2 указанного числа.</summary>
      <param name="x">Число, логарифм которого должен быть найден.</param>
      <returns>Одно из значений, перечисленных в следующей таблице.  
 Параметр <paramref name="x" /> 
  Возвращаемое значение 
  Положительное число 
  Логарифм с основанием 2 <paramref name="x" />, то есть log 2<paramref name="x" />.  

  Нуль 
 <see cref="F:System.Double.NegativeInfinity" /> Отрицательное число 
 <see cref="F:System.Double.NaN" /> Равно значению <see cref="F:System.Double.NaN" /><see cref="F:System.Double.NaN" /> Равно значению <see cref="F:System.Double.PositiveInfinity" /><see cref="F:System.Double.PositiveInfinity" /></returns>
    </member>
    <member name="M:System.Math.Max(System.Byte,System.Byte)">
      <summary>Возвращает большее из двух 8-битовых целых чисел без знака.</summary>
      <param name="val1">Первое из двух сравниваемых 8-битовых целых чисел без знака.</param>
      <param name="val2">Второе из двух сравниваемых 8-битовых целых чисел без знака.</param>
      <returns>Большее из значений двух параметров, <paramref name="val1" /> или <paramref name="val2" />.</returns>
    </member>
    <member name="M:System.Math.Max(System.Decimal,System.Decimal)">
      <summary>Возвращает большее из двух десятичных чисел.</summary>
      <param name="val1">Первое из двух сравниваемых десятичных чисел.</param>
      <param name="val2">Второе из двух сравниваемых десятичных чисел.</param>
      <returns>Большее из значений двух параметров, <paramref name="val1" /> или <paramref name="val2" />.</returns>
    </member>
    <member name="M:System.Math.Max(System.Double,System.Double)">
      <summary>Возвращает большее из двух чисел двойной точности с плавающей запятой.</summary>
      <param name="val1">Первое из двух сравниваемых чисел двойной точности с плавающей запятой.</param>
      <param name="val2">Второе из двух сравниваемых чисел двойной точности с плавающей запятой.</param>
      <returns>Большее из значений двух параметров, <paramref name="val1" /> или <paramref name="val2" />. Если <paramref name="val1" />, <paramref name="val2" /> или оба параметра <paramref name="val1" /> и <paramref name="val2" /> равны <see cref="F:System.Double.NaN" />, возвращается значение <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.Max(System.Int16,System.Int16)">
      <summary>Возвращает большее из двух 16-битовых целых чисел со знаком.</summary>
      <param name="val1">Первое из двух сравниваемых 16-разрядных целых чисел со знаком.</param>
      <param name="val2">Второе из двух сравниваемых 16-разрядных целых чисел со знаком.</param>
      <returns>Большее из значений двух параметров, <paramref name="val1" /> или <paramref name="val2" />.</returns>
    </member>
    <member name="M:System.Math.Max(System.Int32,System.Int32)">
      <summary>Возвращает большее из двух 32-битовых целых чисел со знаком.</summary>
      <param name="val1">Первое из двух сравниваемых 32-разрядных целых чисел со знаком.</param>
      <param name="val2">Второе из двух сравниваемых 32-разрядных целых чисел со знаком.</param>
      <returns>Большее из значений двух параметров, <paramref name="val1" /> или <paramref name="val2" />.</returns>
    </member>
    <member name="M:System.Math.Max(System.Int64,System.Int64)">
      <summary>Возвращает большее из двух 64-битовых целых чисел со знаком.</summary>
      <param name="val1">Первое из двух сравниваемых 64-разрядных целых чисел со знаком.</param>
      <param name="val2">Второе из двух сравниваемых 64-разрядных целых чисел со знаком.</param>
      <returns>Большее из значений двух параметров, <paramref name="val1" /> или <paramref name="val2" />.</returns>
    </member>
    <member name="M:System.Math.Max(System.SByte,System.SByte)">
      <summary>Возвращает большее из двух 8-битовых целых чисел со знаком.</summary>
      <param name="val1">Первое из двух сравниваемых 8-разрядных целых чисел со знаком.</param>
      <param name="val2">Второе из двух сравниваемых 8-разрядных целых чисел со знаком.</param>
      <returns>Большее из значений двух параметров, <paramref name="val1" /> или <paramref name="val2" />.</returns>
    </member>
    <member name="M:System.Math.Max(System.Single,System.Single)">
      <summary>Возвращает большее из двух чисел одинарной точности с плавающей запятой.</summary>
      <param name="val1">Первое из двух сравниваемых чисел одинарной точности с плавающей запятой.</param>
      <param name="val2">Второе из двух сравниваемых чисел одинарной точности с плавающей запятой.</param>
      <returns>Большее из значений двух параметров, <paramref name="val1" /> или <paramref name="val2" />. Если <paramref name="val1" />, <paramref name="val2" /> или оба параметра <paramref name="val1" /> и <paramref name="val2" /> равны <see cref="F:System.Single.NaN" />, возвращается значение <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.Math.Max(System.UInt16,System.UInt16)">
      <summary>Возвращает большее из двух 16-битовых целых чисел без знака.</summary>
      <param name="val1">Первое из двух сравниваемых 16-разрядных целых чисел без знака.</param>
      <param name="val2">Второе из двух сравниваемых 16-разрядных целых чисел без знака.</param>
      <returns>Большее из значений двух параметров, <paramref name="val1" /> или <paramref name="val2" />.</returns>
    </member>
    <member name="M:System.Math.Max(System.UInt32,System.UInt32)">
      <summary>Возвращает большее из двух 32-битовых целых чисел без знака.</summary>
      <param name="val1">Первое из двух сравниваемых 32-разрядных целых чисел без знака.</param>
      <param name="val2">Второе из двух сравниваемых 32-разрядных целых чисел без знака.</param>
      <returns>Большее из значений двух параметров, <paramref name="val1" /> или <paramref name="val2" />.</returns>
    </member>
    <member name="M:System.Math.Max(System.UInt64,System.UInt64)">
      <summary>Возвращает большее из двух 64-битовых целых чисел без знака.</summary>
      <param name="val1">Первое из двух сравниваемых 64-разрядных целых чисел без знака.</param>
      <param name="val2">Второе из двух сравниваемых 64-разрядных целых чисел без знака.</param>
      <returns>Большее из значений двух параметров, <paramref name="val1" /> или <paramref name="val2" />.</returns>
    </member>
    <member name="M:System.Math.MaxMagnitude(System.Double,System.Double)">
      <summary>Возвращает большую величину из двух чисел двойной точности с плавающей запятой.</summary>
      <param name="x">Первое из двух сравниваемых чисел двойной точности с плавающей запятой.</param>
      <param name="y">Второе из двух сравниваемых чисел двойной точности с плавающей запятой.</param>
      <returns>Параметр <paramref name="x" /> или <paramref name="y" />, в зависимости от большей величины. Если <paramref name="x" />, <paramref name="y" /> или оба параметра <paramref name="x" /> и <paramref name="y" /> равны <see cref="F:System.Double.NaN" />, возвращается значение <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.Min(System.Byte,System.Byte)">
      <summary>Возвращает меньшее из двух 8-битовых целых чисел без знака.</summary>
      <param name="val1">Первое из двух сравниваемых 8-разрядных целых чисел без знака.</param>
      <param name="val2">Второе из двух сравниваемых 8-разрядных целых чисел без знака.</param>
      <returns>Меньший из двух параметров, <paramref name="val1" /> или <paramref name="val2" />.</returns>
    </member>
    <member name="M:System.Math.Min(System.Decimal,System.Decimal)">
      <summary>Возвращает меньшее из двух десятичных чисел.</summary>
      <param name="val1">Первое из двух сравниваемых десятичных чисел.</param>
      <param name="val2">Второе из двух сравниваемых десятичных чисел.</param>
      <returns>Меньший из двух параметров, <paramref name="val1" /> или <paramref name="val2" />.</returns>
    </member>
    <member name="M:System.Math.Min(System.Double,System.Double)">
      <summary>Возвращает меньшее из двух чисел двойной точности с плавающей запятой.</summary>
      <param name="val1">Первое из двух сравниваемых чисел двойной точности с плавающей запятой.</param>
      <param name="val2">Второе из двух сравниваемых чисел двойной точности с плавающей запятой.</param>
      <returns>Меньший из двух параметров, <paramref name="val1" /> или <paramref name="val2" />. Если <paramref name="val1" />, <paramref name="val2" /> или оба параметра <paramref name="val1" /> и <paramref name="val2" /> равны <see cref="F:System.Double.NaN" />, возвращается значение <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.Min(System.Int16,System.Int16)">
      <summary>Возвращает меньшее из двух 16-битовых целых чисел со знаком.</summary>
      <param name="val1">Первое из двух сравниваемых 16-разрядных целых чисел со знаком.</param>
      <param name="val2">Второе из двух сравниваемых 16-битовых целых чисел со знаком.</param>
      <returns>Меньший из двух параметров, <paramref name="val1" /> или <paramref name="val2" />.</returns>
    </member>
    <member name="M:System.Math.Min(System.Int32,System.Int32)">
      <summary>Возвращает меньшее из двух 32-битовых целых чисел со знаком.</summary>
      <param name="val1">Первое из двух сравниваемых 32-разрядных целых чисел со знаком.</param>
      <param name="val2">Второе из двух сравниваемых 32-разрядных целых чисел со знаком.</param>
      <returns>Меньший из двух параметров, <paramref name="val1" /> или <paramref name="val2" />.</returns>
    </member>
    <member name="M:System.Math.Min(System.Int64,System.Int64)">
      <summary>Возвращает меньшее из двух 64-битовых целых чисел со знаком.</summary>
      <param name="val1">Первое из двух сравниваемых 64-разрядных целых чисел со знаком.</param>
      <param name="val2">Второе из двух сравниваемых 64-разрядных целых чисел со знаком.</param>
      <returns>Меньший из двух параметров, <paramref name="val1" /> или <paramref name="val2" />.</returns>
    </member>
    <member name="M:System.Math.Min(System.SByte,System.SByte)">
      <summary>Возвращает меньшее из двух 8-битовых целых чисел со знаком.</summary>
      <param name="val1">Первое из двух сравниваемых 8-разрядных целых чисел со знаком.</param>
      <param name="val2">Второе из двух сравниваемых 8-разрядных целых чисел со знаком.</param>
      <returns>Меньший из двух параметров, <paramref name="val1" /> или <paramref name="val2" />.</returns>
    </member>
    <member name="M:System.Math.Min(System.Single,System.Single)">
      <summary>Возвращает меньшее из двух чисел одинарной точности с плавающей запятой.</summary>
      <param name="val1">Первое из двух сравниваемых чисел одинарной точности с плавающей запятой.</param>
      <param name="val2">Второе из двух сравниваемых чисел одинарной точности с плавающей запятой.</param>
      <returns>Меньший из двух параметров, <paramref name="val1" /> или <paramref name="val2" />. Если <paramref name="val1" />, <paramref name="val2" /> или оба параметра <paramref name="val1" /> и <paramref name="val2" /> равны <see cref="F:System.Single.NaN" />, возвращается значение <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.Math.Min(System.UInt16,System.UInt16)">
      <summary>Возвращает меньшее из двух 16-битовых целых чисел без знака.</summary>
      <param name="val1">Первое из двух сравниваемых 16-разрядных целых чисел без знака.</param>
      <param name="val2">Второе из двух сравниваемых 16-разрядных целых чисел без знака.</param>
      <returns>Меньший из двух параметров, <paramref name="val1" /> или <paramref name="val2" />.</returns>
    </member>
    <member name="M:System.Math.Min(System.UInt32,System.UInt32)">
      <summary>Возвращает меньшее из двух 32-битовых целых чисел без знака.</summary>
      <param name="val1">Первое из двух сравниваемых 32-разрядных целых чисел без знака.</param>
      <param name="val2">Второе из двух сравниваемых 32-разрядных целых чисел без знака.</param>
      <returns>Меньший из двух параметров, <paramref name="val1" /> или <paramref name="val2" />.</returns>
    </member>
    <member name="M:System.Math.Min(System.UInt64,System.UInt64)">
      <summary>Возвращает меньшее из двух 64-битовых целых чисел без знака.</summary>
      <param name="val1">Первое из двух сравниваемых 64-разрядных целых чисел без знака.</param>
      <param name="val2">Второе из двух сравниваемых 64-разрядных целых чисел без знака.</param>
      <returns>Меньший из двух параметров, <paramref name="val1" /> или <paramref name="val2" />.</returns>
    </member>
    <member name="M:System.Math.MinMagnitude(System.Double,System.Double)">
      <summary>Возвращает меньшую величину из двух чисел двойной точности с плавающей запятой.</summary>
      <param name="x">Первое из двух сравниваемых чисел двойной точности с плавающей запятой.</param>
      <param name="y">Второе из двух сравниваемых чисел двойной точности с плавающей запятой.</param>
      <returns>Параметр <paramref name="x" /> или <paramref name="y" />, в зависимости от меньшей величины. Если <paramref name="x" />, <paramref name="y" /> или оба параметра <paramref name="x" /> и <paramref name="y" /> равны <see cref="F:System.Double.NaN" />, возвращается значение <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="F:System.Math.PI">
      <summary>Представляет отношение длины окружности к ее диаметру, определяемое константой π.</summary>
    </member>
    <member name="M:System.Math.Pow(System.Double,System.Double)">
      <summary>Возвращает указанное число, возведенное в указанную степень.</summary>
      <param name="x">Число двойной точности с плавающей запятой, возводимое в степень.</param>
      <param name="y">Число двойной точности с плавающей запятой, задающее степень.</param>
      <returns>Число <paramref name="x" />, возведенное в степень <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Math.Round(System.Decimal)">
      <summary>Округляет десятичное значение до ближайшего целого значения; значения посередине округляются до ближайшего четного числа.</summary>
      <param name="d">Округляемое десятичное число.</param>
      <returns>Целое число, ближайшее к значению параметра <paramref name="d" />. Если дробная часть <paramref name="d" /> находится на равном расстоянии от двух целых чисел (четного и нечетного), возвращается четное число. Обратите внимание, что данный метод возвращает не целочисленное значение, а значение типа <see cref="T:System.Decimal" />.</returns>
      <exception cref="T:System.OverflowException">Полученное значение находится вне допустимого диапазона типа <see cref="T:System.Decimal" />.</exception>
    </member>
    <member name="M:System.Math.Round(System.Decimal,System.Int32)">
      <summary>Округляет десятичное значение до указанного числа знаков после запятой; значения посередине округляются до ближайшего четного числа.</summary>
      <param name="d">Округляемое десятичное число.</param>
      <param name="decimals">Количество десятичных разрядов в возвращаемом значении.</param>
      <returns>Число, ближайшее к параметру <paramref name="d" />, количество цифр дробной части которого равно <paramref name="decimals" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="decimals" /> имеет значение меньше 0 или больше 28.</exception>
      <exception cref="T:System.OverflowException">Полученное значение находится вне допустимого диапазона типа <see cref="T:System.Decimal" />.</exception>
    </member>
    <member name="M:System.Math.Round(System.Decimal,System.Int32,System.MidpointRounding)">
      <summary>Округляет десятичное значение до указанного числа знаков после запятой; использует указанное соглашение для округления значений посередине.</summary>
      <param name="d">Округляемое десятичное число.</param>
      <param name="decimals">Количество десятичных разрядов в возвращаемом значении.</param>
      <param name="mode">Значение, задающее правило округления параметра <paramref name="d" />, если его значение находится ровно посредине между двумя другими числами.</param>
      <returns>Число, ближайшее к параметру <paramref name="d" />, содержащем количество дробных разрядов, которое равно <paramref name="decimals" />. Если <paramref name="d" /> имеет меньшее количество цифр дробной части, чем <paramref name="decimals" />, то <paramref name="d" /> возвращается без изменений.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="decimals" /> имеет значение меньше 0 или больше 28.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="mode" /> не является допустимым значением <see cref="T:System.MidpointRounding" />.</exception>
      <exception cref="T:System.OverflowException">Полученное значение находится вне допустимого диапазона типа <see cref="T:System.Decimal" />.</exception>
    </member>
    <member name="M:System.Math.Round(System.Decimal,System.MidpointRounding)">
      <summary>Округляет десятичное значение до ближайшего целого числа; использует указанное соглашение для округления значений посередине.</summary>
      <param name="d">Округляемое десятичное число.</param>
      <param name="mode">Значение, задающее правило округления параметра <paramref name="d" />, если его значение находится ровно посредине между двумя другими числами.</param>
      <returns>Целое число, ближайшее к значению параметра <paramref name="d" />. Если <paramref name="d" /> находится на равном расстоянии от двух чисел, четного и нечетного, то возвращаемое число определяется по значению параметра <paramref name="mode" />. Обратите внимание, что данный метод возвращает не целочисленное значение, а значение типа <see cref="T:System.Decimal" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="mode" /> не является допустимым значением <see cref="T:System.MidpointRounding" />.</exception>
      <exception cref="T:System.OverflowException">Полученное значение находится вне допустимого диапазона типа <see cref="T:System.Decimal" />.</exception>
    </member>
    <member name="M:System.Math.Round(System.Double)">
      <summary>Округляет значение с плавающей запятой двойной точности до ближайшего целого значения; значения посередине округляются до ближайшего четного числа.</summary>
      <param name="a">Округляемое число двойной точности с плавающей запятой.</param>
      <returns>Целое число, ближайшее к значению параметра <paramref name="a" />. Если дробная часть <paramref name="a" /> находится на равном расстоянии от двух целых чисел (четного и нечетного), возвращается четное число. Обратите внимание, что данный метод возвращает не целочисленное значение, а значение типа <see cref="T:System.Double" />.</returns>
    </member>
    <member name="M:System.Math.Round(System.Double,System.Int32)">
      <summary>Округляет значение с плавающей запятой двойной точности до указанного числа знаков после запятой; значения посередине округляются до ближайшего четного числа.</summary>
      <param name="value">Округляемое число двойной точности с плавающей запятой.</param>
      <param name="digits">Количество цифр дробной части в возвращаемом значении.</param>
      <returns>Число, ближайшее к параметру <paramref name="value" />, количество цифр дробной части которого равно <paramref name="digits" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="digits" /> имеет значение меньше 0 или больше 15.</exception>
    </member>
    <member name="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)">
      <summary>Округляет значение с плавающей запятой двойной точности до указанного числа знаков после запятой; использует указанное соглашение для округления значений посередине.</summary>
      <param name="value">Округляемое число двойной точности с плавающей запятой.</param>
      <param name="digits">Количество дробных разрядов в возвращаемом значении.</param>
      <param name="mode">Значение, задающее правило округления параметра <paramref name="value" />, если его значение находится ровно посредине между двумя другими числами.</param>
      <returns>Число, ближайшее к параметру <paramref name="value" />, содержащем количество дробных разрядов, которое равно <paramref name="digits" />. Если <paramref name="value" /> имеет меньшее количество цифр дробной части, чем <paramref name="digits" />, то <paramref name="value" /> возвращается без изменений.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="digits" /> имеет значение меньше 0 или больше 15.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="mode" /> не является допустимым значением <see cref="T:System.MidpointRounding" />.</exception>
    </member>
    <member name="M:System.Math.Round(System.Double,System.MidpointRounding)">
      <summary>Округляет значение с плавающей запятой двойной точности до ближайшего целого числа; использует указанное соглашение для округления значений посередине.</summary>
      <param name="value">Округляемое число двойной точности с плавающей запятой.</param>
      <param name="mode">Значение, задающее правило округления параметра <paramref name="value" />, если его значение находится ровно посредине между двумя другими числами.</param>
      <returns>Целое число, ближайшее к значению параметра <paramref name="value" />. Если <paramref name="value" /> находится на равном расстоянии от двух целых чисел, четного и нечетного, то возвращаемое число определяется по значению параметра <paramref name="mode" />. Обратите внимание, что данный метод возвращает не целочисленное значение, а значение типа <see cref="T:System.Double" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="mode" /> не является допустимым значением <see cref="T:System.MidpointRounding" />.</exception>
    </member>
    <member name="M:System.Math.ScaleB(System.Double,System.Int32)">
      <summary>Возвращает значение x * 2^n, вычисленное эффективно.</summary>
      <param name="x">Число одиночной точности с плавающей запятой, задающее базовое значение.</param>
      <param name="n">Число одиночной точности с плавающей запятой, задающее степень.</param>
      <returns>Значение x * 2^n, вычисленное эффективно.</returns>
    </member>
    <member name="M:System.Math.Sign(System.Decimal)">
      <summary>Возвращает целое число, указывающее знак десятичного числа.</summary>
      <param name="value">Десятичное число со знаком.</param>
      <returns>Число, которое указывает знак значения <paramref name="value" />, как показано в следующей таблице.  
  Возвращаемое значение 
  Значение 
  -1 
 Значение параметра <paramref name="value" /> меньше нуля.  

  0 
 Значение параметра <paramref name="value" /> равно нулю.  

  1 
 Значение параметра <paramref name="value" /> больше нуля.</returns>
    </member>
    <member name="M:System.Math.Sign(System.Double)">
      <summary>Возвращает целое число, обозначающее знак числа двойной точности с плавающей запятой.</summary>
      <param name="value">Число со знаком.</param>
      <returns>Число, которое указывает знак значения <paramref name="value" />, как показано в следующей таблице.  
  Возвращаемое значение 
  Значение 
  -1 
 Значение параметра <paramref name="value" /> меньше нуля.  

  0 
 Значение параметра <paramref name="value" /> равно нулю.  

  1 
 Значение параметра <paramref name="value" /> больше нуля.</returns>
      <exception cref="T:System.ArithmeticException">
        <paramref name="value" /> равно <see cref="F:System.Double.NaN" />.</exception>
    </member>
    <member name="M:System.Math.Sign(System.Int16)">
      <summary>Возвращает целое число, указывающее знак 16-разрядного целого числа со знаком.</summary>
      <param name="value">Число со знаком.</param>
      <returns>Число, которое указывает знак значения <paramref name="value" />, как показано в следующей таблице.  
  Возвращаемое значение 
  Значение 
  -1 
 Значение параметра <paramref name="value" /> меньше нуля.  

  0 
 Значение параметра <paramref name="value" /> равно нулю.  

  1 
 Значение параметра <paramref name="value" /> больше нуля.</returns>
    </member>
    <member name="M:System.Math.Sign(System.Int32)">
      <summary>Возвращает целое число, указывающее знак 32-разрядного целого числа со знаком.</summary>
      <param name="value">Число со знаком.</param>
      <returns>Число, которое указывает знак значения <paramref name="value" />, как показано в следующей таблице.  
  Возвращаемое значение 
  Значение 
  -1 
 Значение параметра <paramref name="value" /> меньше нуля.  

  0 
 Значение параметра <paramref name="value" /> равно нулю.  

  1 
 Значение параметра <paramref name="value" /> больше нуля.</returns>
    </member>
    <member name="M:System.Math.Sign(System.Int64)">
      <summary>Возвращает целое число, указывающее знак 64-разрядного целого числа со знаком.</summary>
      <param name="value">Число со знаком.</param>
      <returns>Число, которое указывает знак значения <paramref name="value" />, как показано в следующей таблице.  
  Возвращаемое значение 
  Значение 
  -1 
 Значение параметра <paramref name="value" /> меньше нуля.  

  0 
 Значение параметра <paramref name="value" /> равно нулю.  

  1 
 Значение параметра <paramref name="value" /> больше нуля.</returns>
    </member>
    <member name="M:System.Math.Sign(System.SByte)">
      <summary>Возвращает целое число, указывающее знак 8-разрядного целого числа со знаком.</summary>
      <param name="value">Число со знаком.</param>
      <returns>Число, которое указывает знак значения <paramref name="value" />, как показано в следующей таблице.  
  Возвращаемое значение 
  Значение 
  -1 
 Значение параметра <paramref name="value" /> меньше нуля.  

  0 
 Значение параметра <paramref name="value" /> равно нулю.  

  1 
 Значение параметра <paramref name="value" /> больше нуля.</returns>
    </member>
    <member name="M:System.Math.Sign(System.Single)">
      <summary>Возвращает целое число, обозначающее знак числа с плавающей запятой одиночной точности.</summary>
      <param name="value">Число со знаком.</param>
      <returns>Число, которое указывает знак значения <paramref name="value" />, как показано в следующей таблице.  
  Возвращаемое значение 
  Значение 
  -1 
 Значение параметра <paramref name="value" /> меньше нуля.  

  0 
 Значение параметра <paramref name="value" /> равно нулю.  

  1 
 Значение параметра <paramref name="value" /> больше нуля.</returns>
      <exception cref="T:System.ArithmeticException">
        <paramref name="value" /> равно <see cref="F:System.Single.NaN" />.</exception>
    </member>
    <member name="M:System.Math.Sin(System.Double)">
      <summary>Возвращает синус указанного угла.</summary>
      <param name="a">Угол, измеряемый в радианах.</param>
      <returns>Синус <paramref name="a" />. Если значение параметра <paramref name="a" /> равно <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> или <see cref="F:System.Double.PositiveInfinity" />, то данный метод возвращает <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.Sinh(System.Double)">
      <summary>Возвращает гиперболический синус указанного угла.</summary>
      <param name="value">Угол, измеряемый в радианах.</param>
      <returns>Гиперболический синус <paramref name="value" />. Если значение параметра <paramref name="value" /> равно <see cref="F:System.Double.NegativeInfinity" />, <see cref="F:System.Double.PositiveInfinity" /> или <see cref="F:System.Double.NaN" />, то этот метод возвращает значение <see cref="T:System.Double" />, равное <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Math.Sqrt(System.Double)">
      <summary>Возвращает квадратный корень из указанного числа.</summary>
      <param name="d">Число, квадратный корень которого требуется найти.</param>
      <returns>Одно из значений, перечисленных в следующей таблице.  
 Параметр <paramref name="d" /> 
  Возвращаемое значение 
  Нуль или положительное число 
  Положительный квадратный корень из <paramref name="d" />.  

  Отрицательное число 
 <see cref="F:System.Double.NaN" /> Равняется <see cref="F:System.Double.NaN" /><see cref="F:System.Double.NaN" /> Равняется <see cref="F:System.Double.PositiveInfinity" /><see cref="F:System.Double.PositiveInfinity" /></returns>
    </member>
    <member name="M:System.Math.Tan(System.Double)">
      <summary>Возвращает тангенс указанного угла.</summary>
      <param name="a">Угол, измеряемый в радианах.</param>
      <returns>Тангенс <paramref name="a" />. Если значение параметра <paramref name="a" /> равно <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> или <see cref="F:System.Double.PositiveInfinity" />, то данный метод возвращает <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.Tanh(System.Double)">
      <summary>Возвращает гиперболический тангенс указанного угла.</summary>
      <param name="value">Угол, измеряемый в радианах.</param>
      <returns>Гиперболический тангенс <paramref name="value" />. Если значение параметра  <paramref name="value" /> равно <see cref="F:System.Double.NegativeInfinity" />, данный метод возвращает -1. Если значение равно <see cref="F:System.Double.PositiveInfinity" />, данный метод возвращает 1. Если значение параметра <paramref name="value" /> равно <see cref="F:System.Double.NaN" />, этот метод возвращает <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.Truncate(System.Decimal)">
      <summary>Вычисляет целую часть заданного десятичного числа.</summary>
      <param name="d">Усекаемое число.</param>
      <returns>Целая часть <paramref name="d" />, то есть число, остающееся после отбрасывания дробной части.</returns>
    </member>
    <member name="M:System.Math.Truncate(System.Double)">
      <summary>Вычисляет целую часть заданного числа двойной точности с плавающей запятой.</summary>
      <param name="d">Усекаемое число.</param>
      <returns>Целая часть <paramref name="d" />; то есть число, которое остается после отбрасывания всех дробных чисел, или одно из значений, перечисленных в следующей таблице.  
 <paramref name="d" /> Возвращаемое значение 
 <see cref="F:System.Double.NaN" /><see cref="F:System.Double.NaN" /><see cref="F:System.Double.NegativeInfinity" /><see cref="F:System.Double.NegativeInfinity" /><see cref="F:System.Double.PositiveInfinity" /><see cref="F:System.Double.PositiveInfinity" /></returns>
    </member>
    <member name="T:System.MathF">
      <summary>Предоставляет константы и статические методы для тригонометрических, логарифмических и иных общих математических функций.</summary>
    </member>
    <member name="M:System.MathF.Abs(System.Single)">
      <summary>Возвращает абсолютное значение числа одинарной точности с плавающей запятой.</summary>
      <param name="x">Число, которое больше или равно значению <see cref="F:System.Single.MinValue" />, но меньше или равно значению <see cref="F:System.Single.MaxValue" />.</param>
      <returns>Число х одинарной точности с плавающей запятой, такое, что 0 ≤ x ≤ <see cref="F:System.Single.MaxValue" />.</returns>
    </member>
    <member name="M:System.MathF.Acos(System.Single)">
      <summary>Возвращает угол, косинус которого равен указанному числу.</summary>
      <param name="x">Число, представляющее косинус, где значение параметра <paramref name="x" /> должно быть больше или равно -1, но меньше или равно 1.</param>
      <returns>Угол θ, измеренный в радианах, такой, что 0 ≤ θ ≤ π.
-или- 
 Значение <see cref="F:System.Single.NaN" />, если <paramref name="x" /> &lt; –1 или <paramref name="x" /> &gt; 1 или значение параметра <paramref name="x" /> равно <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.MathF.Acosh(System.Single)">
      <summary>Возвращает угол, гиперболический косинус которого равен указанному числу.</summary>
      <param name="x">Число, представляющее гиперболический косинус, где значение параметра <paramref name="x" /> должно быть больше или равно 1, но меньше или равно <see cref="F:System.Single.PositiveInfinity" />.</param>
      <returns>Угол θ, измеренный в радианах, такой, что 0 ≤ θ ≤ ∞.
-или- 
 <see cref="F:System.Single.NaN" />, если <paramref name="x" /> &lt; 1 или <paramref name="x" /> равно <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.MathF.Asin(System.Single)">
      <summary>Возвращает угол, синус которого равен указанному числу.</summary>
      <param name="x">Число, представляющее синус, где значение параметра <paramref name="x" /> должно быть больше или равно -1, но меньше или равно 1.</param>
      <returns>Угол θ, измеренный в радианах, такой, что –π/2 ≤ θ ≤ π/2.
-или- 
 Значение <see cref="F:System.Single.NaN" />, если <paramref name="x" /> &lt; –1 или <paramref name="x" /> &gt; 1 или значение параметра <paramref name="x" /> равно <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.MathF.Asinh(System.Single)">
      <summary>Возвращает угол, гиперболический синус которого равен указанному числу.</summary>
      <param name="x">Число, представляющее гиперболический синус, где значение параметра <paramref name="x" /> должно быть больше или равно <see cref="F:System.Single.NegativeInfinity" />, но меньше или равно <see cref="F:System.Single.PositiveInfinity" />.</param>
      <returns>Угол θ, измеренный в радианах, такой, что –∞ &lt; θ ≤ –1 или 1 ≤ θ &lt; ∞. 
-или- 
 <see cref="F:System.Single.NaN" />, если <paramref name="x" /> равно <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.MathF.Atan(System.Single)">
      <summary>Возвращает угол, тангенс которого равен указанному числу.</summary>
      <param name="x">Число, представляющее тангенс.</param>
      <returns>Угол θ, измеренный в радианах, такой, что –π/2 ≤ θ ≤ π/2.  
-или- 
 Значение <see cref="F:System.Single.NaN" />, если <paramref name="x" /> равно <see cref="F:System.Single.NaN" />, -π/2, округленное до двойной точности (–1,5707963267949), если <paramref name="x" /> равно <see cref="F:System.Single.NegativeInfinity" />, или π/2, округленное до двойной точности (1,5707963267949), если <paramref name="x" /> равно <see cref="F:System.Single.PositiveInfinity" />.</returns>
    </member>
    <member name="M:System.MathF.Atan2(System.Single,System.Single)">
      <summary>Возвращает угол, тангенс которого равен отношению двух указанных чисел.</summary>
      <param name="y">Координата y точки.</param>
      <param name="x">Координата х точки.</param>
      <returns>Угол θ, измеренный в радианах, такой, что –π ≤ θ ≤ π, и tan(θ) = <paramref name="y" /> / <paramref name="x" />, где (<paramref name="x" />, <paramref name="y" />) — это точка в декартовой системе координат. Обратите внимание на следующее. 
– Для (<paramref name="x" />, <paramref name="y" />) в квадранте 1, 0 &lt; θ &lt; π/2.  
– Для (<paramref name="x" />, <paramref name="y" />) в квадранте 2, π/2 &lt; θ ≤ π.  
– Для (<paramref name="x" />, <paramref name="y" />) в квадранте 3, -π &lt; θ &lt; -π/2.  
– Для (<paramref name="x" />, <paramref name="y" />) в квадранте 4, -π/2 &lt; θ &lt; 0.  
Для точек за пределами указанных квадрантов возвращаемое значение указано ниже. 
– Если y равно 0, и x не является отрицательным, то θ = 0.  
– Если y равно 0, и x является отрицательным, то θ = π.  
– Если y — положительное число, а x равно 0, то θ = π/2.  
– Если y — отрицательное число, а х равно 0, то θ = -π/2.  
– Если y равен 0, и х равен 0, то θ = 0.  
Если значение параметра <paramref name="x" /> или <paramref name="y" /> равно <see cref="F:System.Single.NaN" /> либо если значения параметров <paramref name="x" /> и <paramref name="y" /> равны значению <see cref="F:System.Single.PositiveInfinity" /> или <see cref="F:System.Single.NegativeInfinity" />, метод возвращает значение <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.MathF.Atanh(System.Single)">
      <summary>Возвращает угол, гиперболический тангенс которого равен указанному числу.</summary>
      <param name="x">Число, представляющее гиперболический тангенс, где значение параметра <paramref name="x" /> должно быть больше или равно –1, но меньше или равно 1.</param>
      <returns>Угол θ, измеренный в радианах, такой, что –∞ &lt; θ &lt;–1 или 1 &lt; θ &lt; ∞.  
-или- 
 Значение <see cref="F:System.Single.NaN" />, если <paramref name="x" /> &lt; –1 или <paramref name="x" /> &gt; 1 или значение параметра <paramref name="x" /> равно <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.MathF.BitDecrement(System.Single)">
      <summary>Возвращает ближайшее самое маленькое значение, которое меньше, чем <paramref name="x" />.</summary>
      <param name="x">Уменьшаемое значение.</param>
      <returns>Ближайшее самое маленькое значение, которое меньше, чем <paramref name="x" />.

или - 
<see cref="F:System.Single.NegativeInfinity" />, если <paramref name="x" /> равно <see cref="F:System.Single.NegativeInfinity" />.

или - 
<see cref="F:System.Single.NaN" />, если <paramref name="x" /> равно <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.MathF.BitIncrement(System.Single)">
      <summary>Возвращает ближайшее значение, превышающее <paramref name="x" />.</summary>
      <param name="x">Увеличиваемое значение.</param>
      <returns>Ближайшее значение, превышающее <paramref name="x" />.
-или- 
 <see cref="F:System.Single.PositiveInfinity" />, если <paramref name="x" /> равно <see cref="F:System.Single.PositiveInfinity" />.

или - 
<see cref="F:System.Single.NaN" />, если <paramref name="x" /> равно <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.MathF.Cbrt(System.Single)">
      <summary>Возвращает кубический корень из указанного числа.</summary>
      <param name="x">Число, кубический корень которого требуется найти.</param>
      <returns>Кубический корень <paramref name="x" />.
-или- 
 <see cref="F:System.Single.NaN" />, если <paramref name="x" /> равно <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.MathF.Ceiling(System.Single)">
      <summary>Возвращает наименьшее целое число, которое больше или равно заданному числу с плавающей запятой одиночной точности.</summary>
      <param name="x">Число одиночной точности с плавающей запятой.</param>
      <returns>Наименьшее целое число, которое больше или равно <paramref name="x" />. Если значение параметра <paramref name="x" /> равно  <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NegativeInfinity" /> или <see cref="F:System.Single.PositiveInfinity" />, возвращается это значение. Обратите внимание, что данный метод возвращает не целочисленное значение, а значение типа <see cref="T:System.Single" />.</returns>
    </member>
    <member name="M:System.MathF.CopySign(System.Single,System.Single)">
      <summary>Возвращает значение с величиной <paramref name="x" /> и знаком <paramref name="y" />.</summary>
      <param name="x">Число, величина которого используется в результате.</param>
      <param name="y">Число, знак которого используется в результате.</param>
      <returns>Значение с величиной <paramref name="x" /> и знаком <paramref name="y" />.</returns>
    </member>
    <member name="M:System.MathF.Cos(System.Single)">
      <summary>Возвращает косинус указанного угла.</summary>
      <param name="x">Угол, измеряемый в радианах.</param>
      <returns>Косинус <paramref name="x" />. Если значение параметра <paramref name="x" /> равно <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NegativeInfinity" /> или <see cref="F:System.Single.PositiveInfinity" />, то данный метод возвращает <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.MathF.Cosh(System.Single)">
      <summary>Возвращает гиперболический косинус указанного угла.</summary>
      <param name="x">Угол, измеряемый в радианах.</param>
      <returns>Гиперболический косинус <paramref name="x" />. Если значение параметра <paramref name="x" /> равно <see cref="F:System.Single.NegativeInfinity" /> или <see cref="F:System.Single.PositiveInfinity" />, то возвращаемое значение равно <see cref="F:System.Single.PositiveInfinity" />. Если значение параметра <paramref name="x" /> равно <see cref="F:System.Single.NaN" />, возвращается значение <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="F:System.MathF.E">
      <summary>Представляет основание натурального логарифма, определяемое константой <see langword="e" />.</summary>
    </member>
    <member name="M:System.MathF.Exp(System.Single)">
      <summary>Возвращает <see langword="e" />, возведенное в указанную степень.</summary>
      <param name="x">Число, определяющее степень.</param>
      <returns>Число <see langword="e" />, возведенное в степень <paramref name="x" />. Если значение параметра <paramref name="x" /> равно <see cref="F:System.Single.NaN" /> или <see cref="F:System.Single.PositiveInfinity" />, возвращается это значение. Если значение параметра <paramref name="x" /> равно <see cref="F:System.Single.NegativeInfinity" />, возвращается значение 0.</returns>
    </member>
    <member name="M:System.MathF.Floor(System.Single)">
      <summary>Возвращает наибольшее целое число, которое меньше или равно заданному числу с плавающей запятой одиночной точности.</summary>
      <param name="x">Число одиночной точности с плавающей запятой.</param>
      <returns>Наибольшее целое число, которое меньше или равно <paramref name="x" />. Если значение параметра <paramref name="x" /> равно  <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NegativeInfinity" /> или <see cref="F:System.Single.PositiveInfinity" />, возвращается это значение.</returns>
    </member>
    <member name="M:System.MathF.FusedMultiplyAdd(System.Single,System.Single,System.Single)">
      <summary>Возвращает значение (x * y) + z, округленное в рамках одной тернарной операции.</summary>
      <param name="x">Число, которое будет умножаться на <paramref name="y" />.</param>
      <param name="y">Число, которое будет умножаться на <paramref name="x" />.</param>
      <param name="z">Число, которое будет добавляться к результату <paramref name="x" />, умноженному на <paramref name="y" />.</param>
      <returns>Значение (x * y) + z, округленное в рамках одной тернарной операции.</returns>
    </member>
    <member name="M:System.MathF.IEEERemainder(System.Single,System.Single)">
      <summary>Возвращает остаток от деления одного указанного числа на другое указанное число.</summary>
      <param name="x">Делимое.</param>
      <param name="y">Делитель.</param>
      <returns>Число, равное <paramref name="x" /> – (<paramref name="y" /> Q), где Q является частным <paramref name="x" /> / <paramref name="y" />, округленным до ближайшего целого числа (если <paramref name="x" /> / <paramref name="y" /> находится на равном расстоянии от двух целых чисел, выбирается четное число).  
Если значение <paramref name="x" /> - ( <paramref name="y" /> Q) равно нулю, возвращается значение +0 при положительном <paramref name="x" />, или значение -0 при отрицательном <paramref name="x" />.  
Если значение параметра <paramref name="y" /> равно 0, возвращается значение <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.MathF.ILogB(System.Single)">
      <summary>Возвращает целочисленный логарифм с основанием 2 указанного числа.</summary>
      <param name="x">Число, логарифм которого требуется найти.</param>
      <returns>Одно из значений, перечисленных в следующей таблице.  
 Параметр <paramref name="x" /> 
  Возвращаемое значение 
  Значение по умолчанию 
  Целочисленный логарифм с основанием 2 <paramref name="x" />, то есть (int)log2(<paramref name="x" />).  

  Нуль 
 <see cref="F:System.Int32.MinValue" /> Равно <see cref="F:System.Single.NaN" /> или <see cref="F:System.Single.PositiveInfinity" /> или <see cref="F:System.Single.NegativeInfinity" /><see cref="F:System.Int32.MaxValue" /></returns>
    </member>
    <member name="M:System.MathF.Log(System.Single)">
      <summary>Возвращает натуральный логарифм (с основанием <see langword="e" />) указанного числа.</summary>
      <param name="x">Число, логарифм которого требуется найти.</param>
      <returns>Одно из значений, перечисленных в следующей таблице.  
 Параметр <paramref name="x" /> 
  Возвращаемое значение 
  Положительное число 
  Натуральный логарифм <paramref name="x" />, то есть ln <paramref name="x" /> или log e <paramref name="x" /> Нуль 
 <see cref="F:System.Single.NegativeInfinity" /> Отрицательное число 
 <see cref="F:System.Single.NaN" /> Равно значению <see cref="F:System.Single.NaN" /><see cref="F:System.Single.NaN" /> Равно значению <see cref="F:System.Single.PositiveInfinity" /><see cref="F:System.Single.PositiveInfinity" /></returns>
    </member>
    <member name="M:System.MathF.Log(System.Single,System.Single)">
      <summary>Возвращает логарифм указанного числа в системе счисления с указанным основанием.</summary>
      <param name="x">Число, логарифм которого требуется найти.</param>
      <param name="y">База.</param>
      <returns>Одно из значений, перечисленных в следующей таблице. (+бесконечность обозначает <see cref="F:System.Single.PositiveInfinity" />, -бесконечность обозначает <see cref="F:System.Single.NegativeInfinity" />, а нечисловое значение обозначает <see cref="F:System.Single.NaN" />.) 
 <paramref name="x" /><paramref name="newBase" /> Возвращаемое значение 
 <paramref name="x" />&gt; 0 
  (0 &lt;<paramref name="newBase" />&lt; 1) -или-(<paramref name="newBase" />&gt; 1) 
  lognewBase(a) 
 <paramref name="x" />&lt; 0 
  (любое значение) 
  NaN 
  (любое значение) 
 <paramref name="newBase" />&lt; 0 
  NaN 
 <paramref name="x" /> != 1 
 <paramref name="newBase" /> = 0 
  NaN 
 <paramref name="x" /> != 1 
 <paramref name="newBase" /> = +бесконечность 
  NaN 
 <paramref name="x" /> = NaN 
  (любое значение) 
  NaN 
  (любое значение) 
 <paramref name="newBase" /> = не число 
  не число 
  (любое значение) 
 <paramref name="newBase" /> = 1 
  NaN 
 <paramref name="x" /> = 0 
  0 &lt;<paramref name="newBase" />&lt; 1 
  +бесконечность 
 <paramref name="x" /> = 0 
 <paramref name="newBase" />&gt; 1 
  -бесконечность 
 <paramref name="x" /> = +бесконечность 
  0 &lt;<paramref name="newBase" />&lt; 1 
  -Infinity 
 <paramref name="x" /> = +бесконечность 
 <paramref name="newBase" />&gt; 1 
  +бесконечность 
 <paramref name="x" /> = 1 
 <paramref name="newBase" /> = 0 
  0 
 <paramref name="x" /> = 1 
 <paramref name="newBase" /> = +бесконечность 
  0</returns>
    </member>
    <member name="M:System.MathF.Log10(System.Single)">
      <summary>Возвращает логарифм с основанием 10 указанного числа.</summary>
      <param name="x">Число, логарифм которого должен быть найден.</param>
      <returns>Одно из значений, перечисленных в следующей таблице.  
 Параметр <paramref name="x" /> 
  Возвращаемое значение 
  Положительное число 
  Основание 10 логарифма <paramref name="x" />, то есть log 10<paramref name="x" />.  

  Нуль 
 <see cref="F:System.Single.NegativeInfinity" /> Отрицательное число 
 <see cref="F:System.Single.NaN" /> Равно значению <see cref="F:System.Single.NaN" /><see cref="F:System.Single.NaN" /> Равно значению <see cref="F:System.Single.PositiveInfinity" /><see cref="F:System.Single.PositiveInfinity" /></returns>
    </member>
    <member name="M:System.MathF.Log2(System.Single)">
      <summary>Возвращает логарифм с основанием 2 указанного числа.</summary>
      <param name="x">Число, логарифм которого должен быть найден.</param>
      <returns>Одно из значений, перечисленных в следующей таблице.  
 Параметр <paramref name="x" /> 
  Возвращаемое значение 
  Положительное число 
  Логарифм с основанием 2 <paramref name="x" />, то есть log 2<paramref name="x" />.  

  Нуль 
 <see cref="F:System.Single.NegativeInfinity" /> Отрицательное число 
 <see cref="F:System.Single.NaN" /> Равно значению <see cref="F:System.Single.NaN" /><see cref="F:System.Single.NaN" /> Равно значению <see cref="F:System.Single.PositiveInfinity" /><see cref="F:System.Single.PositiveInfinity" /></returns>
    </member>
    <member name="M:System.MathF.Max(System.Single,System.Single)">
      <summary>Возвращает большее из двух чисел одинарной точности с плавающей запятой.</summary>
      <param name="x">Первое из двух сравниваемых чисел одинарной точности с плавающей запятой.</param>
      <param name="y">Второе из двух сравниваемых чисел одинарной точности с плавающей запятой.</param>
      <returns>Большее из значений двух параметров, <paramref name="x" /> или <paramref name="y" />. Если <paramref name="x" />, <paramref name="y" /> или оба параметра <paramref name="x" /> и <paramref name="y" /> равны <see cref="F:System.Single.NaN" />, возвращается значение <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.MathF.MaxMagnitude(System.Single,System.Single)">
      <summary>Возвращает большую величину из двух чисел одинарной точности с плавающей запятой.</summary>
      <param name="x">Первое из двух сравниваемых чисел одинарной точности с плавающей запятой.</param>
      <param name="y">Второе из двух сравниваемых чисел одинарной точности с плавающей запятой.</param>
      <returns>Параметр <paramref name="x" /> или <paramref name="y" />, в зависимости от большей величины. Если <paramref name="x" />, <paramref name="y" /> или оба параметра <paramref name="x" /> и <paramref name="y" /> равны <see cref="F:System.Single.NaN" />, возвращается значение <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.MathF.Min(System.Single,System.Single)">
      <summary>Возвращает меньшее из двух чисел одинарной точности с плавающей запятой.</summary>
      <param name="x">Первое из двух сравниваемых чисел одинарной точности с плавающей запятой.</param>
      <param name="y">Второе из двух сравниваемых чисел одинарной точности с плавающей запятой.</param>
      <returns>Меньший из двух параметров, <paramref name="x" /> или <paramref name="y" />. Если <paramref name="x" />, <paramref name="y" /> или оба параметра <paramref name="x" /> и <paramref name="y" /> равны <see cref="F:System.Single.NaN" />, возвращается значение <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.MathF.MinMagnitude(System.Single,System.Single)">
      <summary>Возвращает меньшую величину из двух чисел одинарной точности с плавающей запятой.</summary>
      <param name="x">Первое из двух сравниваемых чисел одинарной точности с плавающей запятой.</param>
      <param name="y">Второе из двух сравниваемых чисел одинарной точности с плавающей запятой.</param>
      <returns>Параметр <paramref name="x" /> или <paramref name="y" />, в зависимости от меньшей величины. Если <paramref name="x" />, <paramref name="y" /> или оба параметра <paramref name="x" /> и <paramref name="y" /> равны <see cref="F:System.Single.NaN" />, возвращается значение <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="F:System.MathF.PI">
      <summary>Представляет отношение длины окружности к ее диаметру, определяемое константой π.</summary>
    </member>
    <member name="M:System.MathF.Pow(System.Single,System.Single)">
      <summary>Возвращает указанное число, возведенное в указанную степень.</summary>
      <param name="x">Число одиночной точности с плавающей запятой, возводимое в степень.</param>
      <param name="y">Число одиночной точности с плавающей запятой, задающее степень.</param>
      <returns>Число <paramref name="x" />, возведенное в степень <paramref name="y" />.</returns>
    </member>
    <member name="M:System.MathF.Round(System.Single)">
      <summary>Округляет значение с плавающей запятой одиночной точности до ближайшего целого значения; значения посередине округляются до ближайшего четного числа.</summary>
      <param name="x">Округляемое число одиночной точности с плавающей запятой.</param>
      <returns>Целое число, ближайшее к значению параметра <paramref name="x" />. Если дробная часть <paramref name="x" /> находится на равном расстоянии от двух целых чисел (четного и нечетного), возвращается четное число. Обратите внимание, что данный метод возвращает не целочисленное значение, а значение типа <see cref="T:System.Single" />.</returns>
    </member>
    <member name="M:System.MathF.Round(System.Single,System.Int32)">
      <summary>Округляет значение с плавающей запятой одиночной точности до указанного числа знаков после запятой; значения посередине округляются до ближайшего четного числа.</summary>
      <param name="x">Округляемое число одиночной точности с плавающей запятой.</param>
      <param name="digits">Количество цифр дробной части в возвращаемом значении.</param>
      <returns>Число, ближайшее к параметру <paramref name="x" />, количество цифр дробной части которого равно <paramref name="digits" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="digits" /> имеет значение меньше 0 или больше 6.</exception>
    </member>
    <member name="M:System.MathF.Round(System.Single,System.Int32,System.MidpointRounding)">
      <summary>Округляет значение с плавающей запятой одиночной точности до указанного числа знаков после запятой; использует указанное соглашение для округления значений посередине.</summary>
      <param name="x">Округляемое число одиночной точности с плавающей запятой.</param>
      <param name="digits">Количество цифр дробной части в возвращаемом значении.</param>
      <param name="mode">Значение, задающее правило округления параметра <paramref name="x" />, если его значение находится ровно посредине между двумя другими числами.</param>
      <returns>Число, ближайшее к параметру <paramref name="x" />, количество цифр дробной части которого равно <paramref name="digits" />. Если <paramref name="x" /> имеет меньшее количество цифр дробной части, чем <paramref name="digits" />, то <paramref name="x" /> возвращается без изменений.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="digits" /> имеет значение меньше 0 или больше 6.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="mode" /> не является допустимым значением <see cref="T:System.MidpointRounding" />.</exception>
    </member>
    <member name="M:System.MathF.Round(System.Single,System.MidpointRounding)">
      <summary>Округляет значение с плавающей запятой одиночной точности до ближайшего целого числа; использует указанное соглашение для округления значений посередине.</summary>
      <param name="x">Округляемое число одиночной точности с плавающей запятой.</param>
      <param name="mode">Значение, задающее правило округления параметра <paramref name="x" />, если его значение находится ровно посредине между двумя другими числами.</param>
      <returns>Целое число, ближайшее к значению параметра <paramref name="x" />. Если <paramref name="x" /> находится на равном расстоянии от двух целых чисел, четного и нечетного, то возвращаемое число определяется по значению параметра <paramref name="mode" />. Обратите внимание, что данный метод возвращает не целочисленное значение, а значение типа <see cref="T:System.Single" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="mode" /> не является допустимым значением <see cref="T:System.MidpointRounding" />.</exception>
    </member>
    <member name="M:System.MathF.ScaleB(System.Single,System.Int32)">
      <summary>Возвращает значение x * 2^n, вычисленное эффективно.</summary>
      <param name="x">Число одиночной точности с плавающей запятой, задающее базовое значение.</param>
      <param name="n">Число одиночной точности с плавающей запятой, задающее степень.</param>
      <returns>Значение x * 2^n, вычисленное эффективно.</returns>
    </member>
    <member name="M:System.MathF.Sign(System.Single)">
      <summary>Возвращает целое число, обозначающее знак числа с плавающей запятой одиночной точности.</summary>
      <param name="x">Число со знаком.</param>
      <returns>Число, которое указывает знак значения <paramref name="x" />, как показано в следующей таблице.  
  Возвращаемое значение 
  Значение 
  -1 
 Значение параметра <paramref name="x" /> меньше нуля.  

  0 
 Значение параметра <paramref name="x" /> равно нулю.  

  1 
 Значение параметра <paramref name="x" /> больше нуля.</returns>
      <exception cref="T:System.ArithmeticException">
        <paramref name="x" /> равно <see cref="F:System.Single.NaN" />.</exception>
    </member>
    <member name="M:System.MathF.Sin(System.Single)">
      <summary>Возвращает синус указанного угла.</summary>
      <param name="x">Угол, измеряемый в радианах.</param>
      <returns>Синус <paramref name="x" />. Если значение параметра <paramref name="x" /> равно <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NegativeInfinity" /> или <see cref="F:System.Single.PositiveInfinity" />, то данный метод возвращает <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.MathF.Sinh(System.Single)">
      <summary>Возвращает гиперболический синус указанного угла.</summary>
      <param name="x">Угол, измеряемый в радианах.</param>
      <returns>Гиперболический синус <paramref name="x" />. Если значение параметра <paramref name="x" /> равно <see cref="F:System.Single.NegativeInfinity" />, <see cref="F:System.Single.PositiveInfinity" /> или <see cref="F:System.Single.NaN" />, то этот метод возвращает значение <see cref="T:System.Single" />, равное <paramref name="x" />.</returns>
    </member>
    <member name="M:System.MathF.Sqrt(System.Single)">
      <summary>Возвращает квадратный корень из указанного числа.</summary>
      <param name="x">Число, квадратный корень которого требуется найти.</param>
      <returns>Одно из значений, перечисленных в следующей таблице.  
 Параметр <paramref name="x" /> 
  Возвращаемое значение 
  Нуль или положительное число 
  Положительный квадратный корень из <paramref name="x" />.  

  Отрицательное число 
 <see cref="F:System.Single.NaN" /> Равняется <see cref="F:System.Single.NaN" /><see cref="F:System.Single.NaN" /> Равняется <see cref="F:System.Single.PositiveInfinity" /><see cref="F:System.Single.PositiveInfinity" /></returns>
    </member>
    <member name="M:System.MathF.Tan(System.Single)">
      <summary>Возвращает тангенс указанного угла.</summary>
      <param name="x">Угол, измеряемый в радианах.</param>
      <returns>Тангенс <paramref name="x" />. Если значение параметра <paramref name="x" /> равно <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NegativeInfinity" /> или <see cref="F:System.Single.PositiveInfinity" />, то данный метод возвращает <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.MathF.Tanh(System.Single)">
      <summary>Возвращает гиперболический тангенс указанного угла.</summary>
      <param name="x">Угол, измеряемый в радианах.</param>
      <returns>Гиперболический тангенс <paramref name="x" />. Если значение параметра  <paramref name="x" /> равно <see cref="F:System.Single.NegativeInfinity" />, данный метод возвращает -1. Если значение равно <see cref="F:System.Single.PositiveInfinity" />, данный метод возвращает 1. Если значение параметра <paramref name="x" /> равно <see cref="F:System.Single.NaN" />, этот метод возвращает <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.MathF.Truncate(System.Single)">
      <summary>Вычисляет целую часть заданного числа одиночной точности с плавающей запятой.</summary>
      <param name="x">Усекаемое число.</param>
      <returns>Целая часть <paramref name="x" />, то есть число, которое остается после отбрасывания всех цифр дробной части, или одно из значений, перечисленных в следующей таблице.  
 <paramref name="x" /> Возвращаемое значение 
 <see cref="F:System.Single.NaN" /><see cref="F:System.Single.NaN" /><see cref="F:System.Single.NegativeInfinity" /><see cref="F:System.Single.NegativeInfinity" /><see cref="F:System.Single.PositiveInfinity" /><see cref="F:System.Single.PositiveInfinity" /></returns>
    </member>
    <member name="T:System.Net.WebUtility">
      <summary>Предоставляет методы для кодирования и декодирования URL-адресов при обработке веб-запросов.</summary>
    </member>
    <member name="M:System.Net.WebUtility.HtmlDecode(System.String)">
      <summary>Преобразует строку, преобразованную в кодировку HTML для передачи по протоколу HTTP, в декодированную строку.</summary>
      <param name="value">Строка для расшифровки.</param>
      <returns>Расшифрованная строка.</returns>
    </member>
    <member name="M:System.Net.WebUtility.HtmlDecode(System.String,System.IO.TextWriter)">
      <summary>Преобразует строку в формате HTML в декодированную строку и отправляет декодированную строку в выходной поток <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="value">Строка для расшифровки.</param>
      <param name="output">Поток выходных данных <see cref="T:System.IO.TextWriter" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="output" /> не может быть равен <see langword="null" />, если параметр <paramref name="value" /> не равен <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.WebUtility.HtmlEncode(System.String)">
      <summary>Преобразует строку в строку в кодировке HTML.</summary>
      <param name="value">Кодируемая строка.</param>
      <returns>Закодированная строка.</returns>
    </member>
    <member name="M:System.Net.WebUtility.HtmlEncode(System.String,System.IO.TextWriter)">
      <summary>Преобразует строку в строку в кодировке HTML и возвращает выходные данные в виде потока выходных данных <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="value">Кодируемая строка.</param>
      <param name="output">Выходной поток <see cref="T:System.IO.TextWriter" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="output" /> не может быть равен <see langword="null" />, если параметр <paramref name="value" /> не равен <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.WebUtility.UrlDecode(System.String)">
      <summary>Преобразовывает строку, зашифрованную для передачи по URL-адресу, в расшифрованную строку.</summary>
      <param name="encodedValue">Строка в URL-кодировке, которую требуется декодировать.</param>
      <returns>Расшифрованная строка.</returns>
    </member>
    <member name="M:System.Net.WebUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)">
      <summary>Преобразует закодированный массив байтов для передачи в URL-адресе в декодированный массив байтов.</summary>
      <param name="encodedValue">Закодированный как URL-адрес массив <see cref="T:System.Byte" />, который требуется декодировать.</param>
      <param name="offset">Смещение в байтах от начала декодируемого массива <see cref="T:System.Byte" />.</param>
      <param name="count">Число в байтах для декодирования из массива <see cref="T:System.Byte" />.</param>
      <returns>Декодированный массив <see cref="T:System.Byte" />.</returns>
    </member>
    <member name="M:System.Net.WebUtility.UrlEncode(System.String)">
      <summary>Преобразует текстовую строку в строку в URL-кодировке.</summary>
      <param name="value">Текст для преобразования в кодировку URL.</param>
      <returns>Строка в URL-кодировке.</returns>
    </member>
    <member name="M:System.Net.WebUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)">
      <summary>Преобразует массив байтов в массив байтов в URL-кодировке.</summary>
      <param name="value">Массив <see cref="T:System.Byte" /> для преобразования в URL-кодировку.</param>
      <param name="offset">Смещение в байтах от начала массива <see cref="T:System.Byte" /> для кодирования.</param>
      <param name="count">Число в байтах для кодирования из массива <see cref="T:System.Byte" />.</param>
      <returns>Закодированный массив <see cref="T:System.Byte" />.</returns>
    </member>
    <member name="T:System.Numerics.BitOperations">
      <summary>Предоставляет служебные методы для внутренних операций битового жонглирования. Методы используют аппаратные встроенные функции, если они доступны на базовой платформе. В противном случае они используют оптимизированные резервные программные варианты.</summary>
    </member>
    <member name="M:System.Numerics.BitOperations.LeadingZeroCount(System.UInt32)">
      <summary>Подсчитывает число начальных нулей в 32-разрядной маске целых чисел без знака.</summary>
      <param name="value">Маска.</param>
      <returns>Число начальных нулей в маске.</returns>
    </member>
    <member name="M:System.Numerics.BitOperations.LeadingZeroCount(System.UInt64)">
      <summary>Подсчитывает число начальных нулей в 64-разрядной маске целых чисел без знака.</summary>
      <param name="value">Маска.</param>
      <returns>Число начальных нулей в маске.</returns>
    </member>
    <member name="M:System.Numerics.BitOperations.Log2(System.UInt32)">
      <summary>Возвращает целочисленный логарифм (нижняя целая часть) указанного значения с основанием 2.</summary>
      <param name="value">Число, из которого получается логарифм.</param>
      <returns>Логарифм указанного значения с основанием 2.</returns>
    </member>
    <member name="M:System.Numerics.BitOperations.Log2(System.UInt64)">
      <summary>Возвращает целочисленный логарифм (нижняя целая часть) указанного значения с основанием 2.</summary>
      <param name="value">Число, из которого получается логарифм.</param>
      <returns>Логарифм указанного значения с основанием 2.</returns>
    </member>
    <member name="M:System.Numerics.BitOperations.PopCount(System.UInt32)">
      <summary>Возвращает число заполнений (число наборов разрядов) маски.</summary>
      <param name="value">Маска.</param>
      <returns>Число заполнений маски.</returns>
    </member>
    <member name="M:System.Numerics.BitOperations.PopCount(System.UInt64)">
      <summary>Возвращает число заполнений (число наборов разрядов) 64-разрядной целочисленной маски без знака.</summary>
      <param name="value">Маска.</param>
      <returns>Число заполнений маски.</returns>
    </member>
    <member name="M:System.Numerics.BitOperations.RotateLeft(System.UInt32,System.Int32)">
      <summary>Поворачивает указанное значение влево на указанное число битов.</summary>
      <param name="value">Значение для поворота.</param>
      <param name="offset">Число разрядов для поворота. Любое значение за пределами диапазона [0..31] рассматривается как сравнимое по модулю 32.</param>
      <returns>Итоговое значение.</returns>
    </member>
    <member name="M:System.Numerics.BitOperations.RotateLeft(System.UInt64,System.Int32)">
      <summary>Поворачивает указанное значение влево на указанное число битов.</summary>
      <param name="value">Значение для поворота.</param>
      <param name="offset">Число разрядов для поворота. Любое значение за пределами диапазона [0..63] рассматривается как сравнимое по модулю 64.</param>
      <returns>Итоговое значение.</returns>
    </member>
    <member name="M:System.Numerics.BitOperations.RotateRight(System.UInt32,System.Int32)">
      <summary>Поворачивает указанное значение вправо на указанное число битов.</summary>
      <param name="value">Значение для поворота.</param>
      <param name="offset">Число разрядов для поворота. Любое значение за пределами диапазона [0..31] рассматривается как сравнимое по модулю 32.</param>
      <returns>Итоговое значение.</returns>
    </member>
    <member name="M:System.Numerics.BitOperations.RotateRight(System.UInt64,System.Int32)">
      <summary>Поворачивает указанное значение вправо на указанное число битов.</summary>
      <param name="value">Значение для поворота.</param>
      <param name="offset">Число разрядов для поворота. Любое значение за пределами диапазона [0..63] рассматривается как сравнимое по модулю 64.</param>
      <returns>Итоговое значение.</returns>
    </member>
    <member name="M:System.Numerics.BitOperations.TrailingZeroCount(System.Int32)">
      <summary>Подсчитывает количество конечных нулей в 32-разрядной маске целочисленного значения.</summary>
      <param name="value">Маска.</param>
      <returns>Количество конечных нулей в целочисленном значении.</returns>
    </member>
    <member name="M:System.Numerics.BitOperations.TrailingZeroCount(System.Int64)">
      <summary>Подсчитывает количество конечных нулей в 64-разрядной маске целочисленного значения.</summary>
      <param name="value">Маска.</param>
      <returns>Количество конечных нулей в маске.</returns>
    </member>
    <member name="M:System.Numerics.BitOperations.TrailingZeroCount(System.UInt32)">
      <summary>Подсчитывает количество конечных нулей в 32-разрядной маске целочисленного значения без знака.</summary>
      <param name="value">Маска.</param>
      <returns>Количество конечных нулей в маске.</returns>
    </member>
    <member name="M:System.Numerics.BitOperations.TrailingZeroCount(System.UInt64)">
      <summary>Подсчитывает количество конечных нулей в 64-разрядной маске целочисленного значения без знака.</summary>
      <param name="value">Маска.</param>
      <returns>Количество конечных нулей в маске.</returns>
    </member>
    <member name="T:System.OperatingSystem">
      <summary>Предоставляет информацию об операционной системе, например версию и идентификатор платформы. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.OperatingSystem.#ctor(System.PlatformID,System.Version)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.OperatingSystem" />, используя указанное значение идентификатора платформы и версии объекта.</summary>
      <param name="platform">Одно из значений <see cref="T:System.PlatformID" />, указывающих платформу операционной системы.</param>
      <param name="version">Объект <see cref="T:System.Version" />, указывающий версию операционной системы.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="version" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="platform" /> не является значением перечисления <see cref="T:System.PlatformID" />.</exception>
    </member>
    <member name="M:System.OperatingSystem.Clone">
      <summary>Создает объект <see cref="T:System.OperatingSystem" />, идентичный данному экземпляру.</summary>
      <returns>Объект <see cref="T:System.OperatingSystem" />, который является копией данного экземпляра.</returns>
    </member>
    <member name="M:System.OperatingSystem.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Заполняет объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> данными, необходимыми для десериализации данного экземпляра.</summary>
      <param name="info">Объект, который требуется заполнить информацией о сериализации.</param>
      <param name="context">Место для хранения и извлечения сериализованных данных. Зарезервировано для будущего использования.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="info" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="P:System.OperatingSystem.Platform">
      <summary>Возвращает значение перечисления <see cref="T:System.PlatformID" />, идентифицирующее данную платформу операционной системы.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.PlatformID" />.</returns>
    </member>
    <member name="P:System.OperatingSystem.ServicePack">
      <summary>Возвращает версию пакета обновления, представленную этим объектом <see cref="T:System.OperatingSystem" />.</summary>
      <returns>Версия пакета обновления, если пакеты обновления поддерживаются и хотя бы один из них установлен; в противном случае — пустая строка ("").</returns>
    </member>
    <member name="M:System.OperatingSystem.ToString">
      <summary>Преобразует значение этого объекта <see cref="T:System.OperatingSystem" /> в эквивалентное ему строковое представление.</summary>
      <returns>Строковое представление значений, возвращаемых свойствами <see cref="P:System.OperatingSystem.Platform" />, <see cref="P:System.OperatingSystem.Version" /> и <see cref="P:System.OperatingSystem.ServicePack" />.</returns>
    </member>
    <member name="P:System.OperatingSystem.Version">
      <summary>Возвращает объект <see cref="T:System.Version" />, идентифицирующий данную операционную систему.</summary>
      <returns>Объект <see cref="T:System.Version" />, в котором указан основной и дополнительный номера версии, номер построения и номер редакции.</returns>
    </member>
    <member name="P:System.OperatingSystem.VersionString">
      <summary>Возвращает объединенную строку, в которой представлен идентификатор платформы, версия и пакет обновления, установленный в данный момент в операционной системе.</summary>
      <returns>Строковое представление значений, возвращаемых свойствами <see cref="P:System.OperatingSystem.Platform" />, <see cref="P:System.OperatingSystem.Version" /> и <see cref="P:System.OperatingSystem.ServicePack" />.</returns>
    </member>
    <member name="T:System.PlatformID">
      <summary>Идентифицирует операционную систему, или платформу, поддерживаемую сборкой.</summary>
    </member>
    <member name="F:System.PlatformID.MacOSX">
      <summary>Операционной системой является Macintosh. Это значение было возвращено Silverlight. В .NET Core в качестве аналога используется Unix.</summary>
    </member>
    <member name="F:System.PlatformID.Unix">
      <summary>Операционной системой является Unix.</summary>
    </member>
    <member name="F:System.PlatformID.Win32NT">
      <summary>Операционной системой является Windows NT или более поздняя версия.</summary>
    </member>
    <member name="F:System.PlatformID.Win32S">
      <summary>Операционной системой является одна из систем Win32. Это значение больше не используется.</summary>
    </member>
    <member name="F:System.PlatformID.Win32Windows">
      <summary>Используется операционная система Windows 95 или Windows 98. Это значение больше не используется.</summary>
    </member>
    <member name="F:System.PlatformID.WinCE">
      <summary>Операционной системой является Windows CE. Это значение больше не используется.</summary>
    </member>
    <member name="F:System.PlatformID.Xbox">
      <summary>Платформой разработки является Xbox 360. Это значение больше не используется.</summary>
    </member>
    <member name="T:System.Progress`1">
      <summary>Предоставляет <see cref="T:System.IProgress`1" />, вызывающий обратные вызовы для каждого заявленного значения хода выполнения.</summary>
      <typeparam name="T">Указывает тип значения отчета о ходе выполнения.</typeparam>
    </member>
    <member name="M:System.Progress`1.#ctor">
      <summary>Выполняет инициализацию объекта <see cref="T:System.Progress`1" />.</summary>
    </member>
    <member name="M:System.Progress`1.#ctor(System.Action{`0})">
      <summary>Инициализирует объект <see cref="T:System.Progress`1" /> с указанным обратным вызовом.</summary>
      <param name="handler">Обработчик, который необходимо вызывать для каждого сообщаемого значения хода выполнения. Этот обработчик вызывается в дополнение ко всем делегатам, зарегистрированным с событием <see cref="E:System.Progress`1.ProgressChanged" />. В зависимости от экземпляра <see cref="T:System.Threading.SynchronizationContext" />, перехваченного <see cref="T:System.Progress`1" /> при конструировании, возможно, что этот экземпляр обработчика может быть вызван синхронно с самим собой.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="handler" /> — <see langword="null" /> (<see langword="Nothing" /> в Visual Basic).</exception>
    </member>
    <member name="M:System.Progress`1.OnReport(`0)">
      <summary>Сообщает об изменении хода выполнения.</summary>
      <param name="value">Значение обновленного хода выполнения.</param>
    </member>
    <member name="E:System.Progress`1.ProgressChanged">
      <summary>Вызывается для каждого зафиксированного значения хода выполнения.</summary>
    </member>
    <member name="M:System.Progress`1.System#IProgress{T}#Report(`0)">
      <summary>Сообщает об изменении хода выполнения.</summary>
      <param name="value">Значение обновленного хода выполнения.</param>
    </member>
    <member name="T:System.Random">
      <summary>Представляет генератор псевдослучайных чисел, то есть устройство, которое выдает последовательность чисел, отвечающую определенным статистическим критериям случайности.</summary>
    </member>
    <member name="M:System.Random.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Random" /> с помощью зависимого от времени начального значения по умолчанию.</summary>
    </member>
    <member name="M:System.Random.#ctor(System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Random" /> с помощью указанного начального значения.</summary>
      <param name="Seed">Число, используемое для вычисления начального значения последовательности псевдослучайных чисел. Если задано отрицательное число, используется его абсолютное значение.</param>
    </member>
    <member name="M:System.Random.Next">
      <summary>Возвращает неотрицательное случайное целое число.</summary>
      <returns>32-разрядное целое число со знаком, которое больше или равно нулю и меньше чем <see cref="F:System.Int32.MaxValue" />.</returns>
    </member>
    <member name="M:System.Random.Next(System.Int32)">
      <summary>Возвращает неотрицательное случайное целое число, которое меньше указанного максимального значения.</summary>
      <param name="maxValue">Эксклюзивная верхняя граница создаваемого случайного числа. <paramref name="maxValue" /> должно быть больше либо равно 0.</param>
      <returns>32-разрядное целое число со знаком, большее или равное 0 и меньшее, чем <paramref name="maxValue" />. То есть диапазон возвращаемых значений включает в себя 0, но не включает <paramref name="maxValue" />. Однако если значение параметра <paramref name="maxValue" /> равно нулю, возвращается значение <paramref name="maxValue" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="maxValue" /> меньше 0.</exception>
    </member>
    <member name="M:System.Random.Next(System.Int32,System.Int32)">
      <summary>Возвращает случайное целое число в указанном диапазоне.</summary>
      <param name="minValue">Включенный нижний предел возвращаемого случайного числа.</param>
      <param name="maxValue">Исключенный верхний предел возвращаемого случайного числа. Значение свойства <paramref name="maxValue" /> должно быть больше или равно значению свойства <paramref name="minValue" />.</param>
      <returns>32-разрядное целое число со знаком большее или равное <paramref name="minValue" /> и меньше, чем <paramref name="maxValue" />; то есть, диапазон возвращаемого значения включает <paramref name="minValue" />, не включает <paramref name="maxValue" />. Если значение параметра <paramref name="minValue" /> равно значению параметра <paramref name="maxValue" />, то возвращается значение <paramref name="minValue" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="minValue" /> больше значения <paramref name="maxValue" />.</exception>
    </member>
    <member name="M:System.Random.NextBytes(System.Byte[])">
      <summary>Заполняет элементы указанного массива байтов случайными числами.</summary>
      <param name="buffer">Массив байтов, содержащий случайные числа.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Random.NextBytes(System.Span{System.Byte})">
      <param name="buffer" />
    </member>
    <member name="M:System.Random.NextDouble">
      <summary>Возвращает случайное число с плавающей запятой, которое больше или равно 0,0 и меньше 1,0.</summary>
      <returns>Число двойной точности с плавающей запятой, которое больше или равно 0,0, и меньше 1,0.</returns>
    </member>
    <member name="M:System.Random.Sample">
      <summary>Возвращает случайное число с плавающей запятой в диапазоне от 0,0 до 1,0.</summary>
      <returns>Число двойной точности с плавающей запятой, которое больше или равно 0,0, и меньше 1,0.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyNameProxy">
      <summary>Обеспечивает версию <see langword="AssemblyName" />, поддерживающую удаленное взаимодействие.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyNameProxy.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Reflection.AssemblyNameProxy" />.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyNameProxy.GetAssemblyName(System.String)">
      <summary>Возвращает <see langword="AssemblyName" /> для заданного файла.</summary>
      <param name="assemblyFile">Файл сборки, для которого нужно возвратить значение <see langword="AssemblyName" />.</param>
      <returns>Объект <see langword="AssemblyName" />, представляющий заданный файл.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyFile" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="assemblyFile" /> пуст.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyFile" /> не найден.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyFile" /> не является допустимой сборкой.</exception>
    </member>
    <member name="T:System.ResolveEventHandler">
      <summary>Представляет метод, обрабатывающий событие <see cref="E:System.AppDomain.TypeResolve" />, <see cref="E:System.AppDomain.ResourceResolve" /> или <see cref="E:System.AppDomain.AssemblyResolve" /> объекта <see cref="T:System.AppDomain" />.</summary>
      <param name="sender">Источник события.</param>
      <param name="args">Данные события.</param>
      <returns>Сборка, разрешающая тип, сборку или ресурс; либо значение <see langword="null" />, если сборку невозможно разрешить.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.SwitchExpressionException">
      <summary>Указывает, что выражению switch, не являющемуся исчерпывающим, не удалось сопоставить входные данные во время выполнения. Исключение при необходимости содержит объект, представляющий несовпадающее значение.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.SwitchExpressionException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.CompilerServices.SwitchExpressionException" />.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.SwitchExpressionException.#ctor(System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.CompilerServices.SwitchExpressionException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="innerException">Исключение, которое является причиной текущего исключения. Если значение параметра <paramref name="innerException" /> не равно <see langword="null" />, текущее исключение сгенерировано в блоке <see langword="catch" />, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="M:System.Runtime.CompilerServices.SwitchExpressionException.#ctor(System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.CompilerServices.SwitchExpressionException" /> с несопоставленным значением переключателя.</summary>
      <param name="unmatchedValue">Значение переключателя, которое не соответствует ни одному из вариантов переключения.</param>
    </member>
    <member name="M:System.Runtime.CompilerServices.SwitchExpressionException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.CompilerServices.SwitchExpressionException" /> указанным сообщением.</summary>
      <param name="message">Сообщение, которое будет отображаться для конечного пользователя.</param>
    </member>
    <member name="M:System.Runtime.CompilerServices.SwitchExpressionException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.CompilerServices.SwitchExpressionException" /> с указанным подробным описанием и указанным исключением.</summary>
      <param name="message">Сообщение, которое будет отображаться для конечного пользователя.</param>
      <param name="innerException">Ссылка на внутреннее исключение, которое является причиной этого исключения.</param>
    </member>
    <member name="M:System.Runtime.CompilerServices.SwitchExpressionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Устанавливает для объекта <see cref="T:System.Runtime.Serialization.SerializationInfo" /> имя параметра и дополнительные сведения об исключении.</summary>
      <param name="info">Хранит данные, использовавшиеся при сериализации (десериализации) объекта с помощью класса <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />.</param>
      <param name="context">Описывает источник и место назначения потока, создающего исключение, а также служит для сохранения этого контекста и дополнительного контекста, определяемого вызывающим в процессе сериализации.</param>
    </member>
    <member name="P:System.Runtime.CompilerServices.SwitchExpressionException.Message">
      <summary>Получает сообщение исключения.</summary>
      <returns>Полная строка сообщения.</returns>
    </member>
    <member name="P:System.Runtime.CompilerServices.SwitchExpressionException.UnmatchedValue">
      <summary>Получает несопоставленное значение, связанное с исключением.</summary>
      <returns>Несовпадающее значение, вызвавшее исключение.</returns>
    </member>
    <member name="T:System.Runtime.ProfileOptimization">
      <summary>Улучшает производительность при запуске доменов приложения в приложениях, требующих JIT-компилятора путем фоновой компиляции методов, выполнение которых ожидается, на основе профилей, созданных во время предыдущих компиляций.</summary>
    </member>
    <member name="M:System.Runtime.ProfileOptimization.SetProfileRoot(System.String)">
      <summary>Включает профилирование оптимизации для текущего домена приложения и задает каталог, в котором хранятся файлы профиля оптимизации. На одноядерном компьютере этот метод игнорируется.</summary>
      <param name="directoryPath">Полный путь к папке, где хранятся файлы профиля для текущего домена приложения.</param>
    </member>
    <member name="M:System.Runtime.ProfileOptimization.StartProfile(System.String)">
      <summary>Запускает JIT-компиляцию методов, которые ранее были записаны в указанном файле профиля, в фоновом потоке. Запускает процесс записи текущего использования методов, который позже перезаписывает указанный файл профиля.</summary>
      <param name="profile">Имя файла профиля для использования.</param>
    </member>
    <member name="T:System.Runtime.Versioning.ComponentGuaranteesAttribute">
      <summary>Определяет гарантированную совместимость компонента, типа или члена типа с одной или несколькими версиями.</summary>
    </member>
    <member name="M:System.Runtime.Versioning.ComponentGuaranteesAttribute.#ctor(System.Runtime.Versioning.ComponentGuaranteesOptions)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Versioning.ComponentGuaranteesAttribute" /> со значением, указывающим библиотеку, тип или гарантированный уровень совместимости члена с несколькими версиями.</summary>
      <param name="guarantees">Одно из значений перечисления, задающее гарантированный уровень совместимости с несколькими версиями.</param>
    </member>
    <member name="P:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees">
      <summary>Получает значение, указывающее гарантированный уровень совместимости библиотеки, типа или члена типа с несколькими версиями.</summary>
      <returns>Одно из значений перечисления, задающее гарантированный уровень совместимости с несколькими версиями.</returns>
    </member>
    <member name="T:System.Runtime.Versioning.ComponentGuaranteesOptions">
      <summary>Описывает гарантированную совместимость компонента, типа или члена типа с несколькими версиями.</summary>
    </member>
    <member name="F:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange">
      <summary>Разработчик обещает, что тип будет неограниченно совместим с несколькими версиями. Потребители типа могут ожидать, что он будет совместим с будущими версиями, и использовать его во всех интерфейсах. Проблемы с версиями нельзя устранить с помощью параллельного выполнения.</summary>
    </member>
    <member name="F:System.Runtime.Versioning.ComponentGuaranteesOptions.None">
      <summary>Разработчик не гарантирует совместимости с другими версиями. Потребители компонента, типа или члена могут ожидать, что с будущими версиями существующий клиент работать не будет.</summary>
    </member>
    <member name="F:System.Runtime.Versioning.ComponentGuaranteesOptions.SideBySide">
      <summary>Была проведена проверка работы компонента при загрузке нескольких версий сборки в один и тот же домен приложения. Будущие версии могут нарушить совместимость. Однако при внесении подобных критических изменений старая версия не изменяется, а продолжает существовать параллельно новой.</summary>
    </member>
    <member name="F:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable">
      <summary>Разработчик обещает устойчивую совместимость с другими версиями. Потребители типа могут ожидать, что с будущими версиями существующий клиент будет работать. Но если с будущими версиями возникнут проблемы, а клиент не использовал тип в интерфейсах, исправить проблему можно с помощью параллельного выполнения.</summary>
    </member>
    <member name="T:System.Runtime.Versioning.FrameworkName">
      <summary>Представляет имя версии платформы .NET Framework.</summary>
    </member>
    <member name="M:System.Runtime.Versioning.FrameworkName.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Versioning.FrameworkName" /> с помощью строки, содержащей информацию о версии платформы .NET Framework.</summary>
      <param name="frameworkName">Строка, содержащая информацию о версии платформы .NET Framework.</param>
      <exception cref="T:System.ArgumentException">Свойство <paramref name="frameworkName" /> имеет значение <see cref="F:System.String.Empty" />.  
-или- 
 В параметре <paramref name="frameworkName" /> содержится менее двух или более трех компонентов.  
-или- 
 <paramref name="frameworkName" /> не включает основной и дополнительный номера версии.  

или - 
<paramref name="frameworkName" /> не включает допустимый номер версии.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="frameworkName" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Versioning.FrameworkName.#ctor(System.String,System.Version)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Versioning.FrameworkName" /> с помощью строки и объекта <see cref="T:System.Version" />, указывающих версию платформы .NET Framework.</summary>
      <param name="identifier">Строка, указывающая версию платформы .NET Framework.</param>
      <param name="version">Объект, содержащий информацию о версии платформы .NET Framework.</param>
      <exception cref="T:System.ArgumentException">Свойство <paramref name="identifier" /> имеет значение <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="identifier" /> имеет значение <see langword="null" />.  

или - 
Свойство <paramref name="version" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Versioning.FrameworkName.#ctor(System.String,System.Version,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Versioning.FrameworkName" /> с помощью строки, объекта <see cref="T:System.Version" />, указывающего версию платформы .NET Framework, и имени профиля.</summary>
      <param name="identifier">Строка, указывающая версию платформы .NET Framework.</param>
      <param name="version">Объект, содержащий информацию о версии платформы .NET Framework.</param>
      <param name="profile">Имя профиля.</param>
      <exception cref="T:System.ArgumentException">Свойство <paramref name="identifier" /> имеет значение <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="identifier" /> имеет значение <see langword="null" />.  

или - 
Свойство <paramref name="version" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Versioning.FrameworkName.Equals(System.Object)">
      <summary>Возвращает значение, указывающее, представляет ли данный экземпляр класса <see cref="T:System.Runtime.Versioning.FrameworkName" /> ту же версию платформы .NET Framework, что и указанный объект.</summary>
      <param name="obj">Объект, сравниваемый с текущим экземпляром.</param>
      <returns>Значение <see langword="true" />, если все компоненты текущего объекта <see cref="T:System.Runtime.Versioning.FrameworkName" /> совпадают с соответствующими компонентами объекта <paramref name="obj" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Versioning.FrameworkName.Equals(System.Runtime.Versioning.FrameworkName)">
      <summary>Возвращает значение, указывающее, представляет ли данный экземпляр класса <see cref="T:System.Runtime.Versioning.FrameworkName" /> ту же версию платформы .NET Framework, что и указанный экземпляр класса <see cref="T:System.Runtime.Versioning.FrameworkName" />.</summary>
      <param name="other">Объект, сравниваемый с текущим экземпляром.</param>
      <returns>Значение <see langword="true" />, если все компоненты текущего объекта <see cref="T:System.Runtime.Versioning.FrameworkName" /> совпадают с соответствующими компонентами объекта <paramref name="other" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Versioning.FrameworkName.FullName">
      <summary>Получает полное имя данного объекта <see cref="T:System.Runtime.Versioning.FrameworkName" />.</summary>
      <returns>Полное имя данного объекта <see cref="T:System.Runtime.Versioning.FrameworkName" />.</returns>
    </member>
    <member name="M:System.Runtime.Versioning.FrameworkName.GetHashCode">
      <summary>Возвращает хэш-код для объекта <see cref="T:System.Runtime.Versioning.FrameworkName" />.</summary>
      <returns>32-разрядное целое число со знаком, представляющее хэш-код данного экземпляра.</returns>
    </member>
    <member name="P:System.Runtime.Versioning.FrameworkName.Identifier">
      <summary>Получает идентификатор данного объекта <see cref="T:System.Runtime.Versioning.FrameworkName" />.</summary>
      <returns>Идентификатор данного объекта <see cref="T:System.Runtime.Versioning.FrameworkName" />.</returns>
    </member>
    <member name="M:System.Runtime.Versioning.FrameworkName.op_Equality(System.Runtime.Versioning.FrameworkName,System.Runtime.Versioning.FrameworkName)">
      <summary>Возвращает значение, указывающее, представляют ли два объекта <see cref="T:System.Runtime.Versioning.FrameworkName" /> одну и ту же версию платформы .NET Framework.</summary>
      <param name="left">Первый из сравниваемых объектов.</param>
      <param name="right">Второй из сравниваемых объектов.</param>
      <returns>Значение <see langword="true" />, если параметры <paramref name="left" /> и <paramref name="right" /> представляют одну и ту же версию платформы .NET Framework; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Versioning.FrameworkName.op_Inequality(System.Runtime.Versioning.FrameworkName,System.Runtime.Versioning.FrameworkName)">
      <summary>Возвращает значение, указывающее, представляют ли два объекта <see cref="T:System.Runtime.Versioning.FrameworkName" /> различные версии платформы .NET Framework.</summary>
      <param name="left">Первый из сравниваемых объектов.</param>
      <param name="right">Второй из сравниваемых объектов.</param>
      <returns>Значение <see langword="true" />, если параметры <paramref name="left" /> и <paramref name="right" /> представляют различные версии платформы .NET Framework; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Versioning.FrameworkName.Profile">
      <summary>Получает имя профиля данного объекта <see cref="T:System.Runtime.Versioning.FrameworkName" />.</summary>
      <returns>Имя профиля данного объекта <see cref="T:System.Runtime.Versioning.FrameworkName" />.</returns>
    </member>
    <member name="M:System.Runtime.Versioning.FrameworkName.ToString">
      <summary>Возвращает строковое представление конкретного объекта <see cref="T:System.Runtime.Versioning.FrameworkName" />.</summary>
      <returns>Строка, представляющая данный объект <see cref="T:System.Runtime.Versioning.FrameworkName" />.</returns>
    </member>
    <member name="P:System.Runtime.Versioning.FrameworkName.Version">
      <summary>Получает версию данного объекта <see cref="T:System.Runtime.Versioning.FrameworkName" />.</summary>
      <returns>Объект, содержащий информацию о версии данного объекта <see cref="T:System.Runtime.Versioning.FrameworkName" />.</returns>
    </member>
    <member name="T:System.Runtime.Versioning.ResourceConsumptionAttribute">
      <summary>Указывает ресурс, потребляемый членом класса. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Runtime.Versioning.ResourceConsumptionAttribute.#ctor(System.Runtime.Versioning.ResourceScope)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Versioning.ResourceConsumptionAttribute" />, задающего область потребляемого ресурса.</summary>
      <param name="resourceScope">Возвращает область видимости <see cref="T:System.Runtime.Versioning.ResourceScope" /> потребляемого ресурса.</param>
    </member>
    <member name="M:System.Runtime.Versioning.ResourceConsumptionAttribute.#ctor(System.Runtime.Versioning.ResourceScope,System.Runtime.Versioning.ResourceScope)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Versioning.ResourceConsumptionAttribute" />, задающего область видимости потребляемого ресурса и область его потребления.</summary>
      <param name="resourceScope">Возвращает область видимости <see cref="T:System.Runtime.Versioning.ResourceScope" /> потребляемого ресурса.</param>
      <param name="consumptionScope">Область видимости ресурса <see cref="T:System.Runtime.Versioning.ResourceScope" />, используемая этим членом.</param>
    </member>
    <member name="P:System.Runtime.Versioning.ResourceConsumptionAttribute.ConsumptionScope">
      <summary>Возвращает область потребления для данного члена.</summary>
      <returns>Объект <see cref="T:System.Runtime.Versioning.ResourceScope" />, задающий область видимости ресурса, используемую данным членом.</returns>
    </member>
    <member name="P:System.Runtime.Versioning.ResourceConsumptionAttribute.ResourceScope">
      <summary>Возвращает область видимости потребляемого ресурса.</summary>
      <returns>Объект <see cref="T:System.Runtime.Versioning.ResourceScope" />, задающий область видимости ресурса потребляемого члена.</returns>
    </member>
    <member name="T:System.Runtime.Versioning.ResourceExposureAttribute">
      <summary>Указывает доступность ресурса для члена класса. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Runtime.Versioning.ResourceExposureAttribute.#ctor(System.Runtime.Versioning.ResourceScope)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Versioning.ResourceExposureAttribute" /> с заданным уровнем доступности.</summary>
      <param name="exposureLevel">Область видимости ресурса.</param>
    </member>
    <member name="P:System.Runtime.Versioning.ResourceExposureAttribute.ResourceExposureLevel">
      <summary>Возвращает область доступности ресурса.</summary>
      <returns>Объект <see cref="T:System.Runtime.Versioning.ResourceScope" />.</returns>
    </member>
    <member name="T:System.Runtime.Versioning.ResourceScope">
      <summary>Определяет область видимости общего ресурса.</summary>
    </member>
    <member name="F:System.Runtime.Versioning.ResourceScope.AppDomain">
      <summary>Состояние совместно используется объектами в домене приложения <see cref="T:System.AppDomain" />.</summary>
    </member>
    <member name="F:System.Runtime.Versioning.ResourceScope.Assembly">
      <summary>Ресурс является видимым в области сборки.</summary>
    </member>
    <member name="F:System.Runtime.Versioning.ResourceScope.Library">
      <summary>Состояние совместно используется объектами в библиотеке.</summary>
    </member>
    <member name="F:System.Runtime.Versioning.ResourceScope.Machine">
      <summary>Состояние совместно используется объектами одного компьютера.</summary>
    </member>
    <member name="F:System.Runtime.Versioning.ResourceScope.None">
      <summary>Состояние с совместным доступом отсутствует.</summary>
    </member>
    <member name="F:System.Runtime.Versioning.ResourceScope.Private">
      <summary>Ресурсы видимы только данному типу.</summary>
    </member>
    <member name="F:System.Runtime.Versioning.ResourceScope.Process">
      <summary>Состояние является совместно используемым внутри процесса.</summary>
    </member>
    <member name="T:System.Runtime.Versioning.VersioningHelper">
      <summary>Предоставляет методы, облегчающие разработчиком написание кода, безопасного относительно версий. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Runtime.Versioning.VersioningHelper.MakeVersionSafeName(System.String,System.Runtime.Versioning.ResourceScope,System.Runtime.Versioning.ResourceScope)">
      <summary>Возвращает безопасное относительно версий имя, созданное на основе заданного имени ресурса и предполагаемой области потребления ресурса.</summary>
      <param name="name">Имя ресурса.</param>
      <param name="from">Область видимости ресурса.</param>
      <param name="to">Желаемая область потребления ресурса.</param>
      <returns>Безопасное относительно версий имя.</returns>
    </member>
    <member name="M:System.Runtime.Versioning.VersioningHelper.MakeVersionSafeName(System.String,System.Runtime.Versioning.ResourceScope,System.Runtime.Versioning.ResourceScope,System.Type)">
      <summary>Возвращает безопасное относительно версий имя, созданное на основе заданного имени ресурса, предполагаемой области потребления ресурса и типа, использующего ресурс.</summary>
      <param name="name">Имя ресурса.</param>
      <param name="from">Начало области видимости.</param>
      <param name="to">Конец области видимости.</param>
      <param name="type">Тип <see cref="T:System.Type" /> ресурса.</param>
      <returns>Безопасное относительно версий имя.</returns>
      <exception cref="T:System.ArgumentException">Значения параметров <paramref name="from" /> и <paramref name="to" /> являются недопустимыми. Типы ресурсов в перечислении <see cref="T:System.Runtime.Versioning.ResourceScope" /> располагаются в порядке от более ограниченных до более общих.</exception>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="type" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="T:System.Security.IPermission">
      <summary>Определяет методы, реализуемые типами разрешений.</summary>
    </member>
    <member name="M:System.Security.IPermission.Copy">
      <summary>Создает и возвращает идентичную копию текущего разрешения.</summary>
      <returns>Копия текущего разрешения.</returns>
    </member>
    <member name="M:System.Security.IPermission.Demand">
      <summary>Создает исключение <see cref="T:System.Security.SecurityException" /> во время выполнения, если требования безопасности не выполнены.</summary>
    </member>
    <member name="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
      <summary>Создает и возвращает разрешение, представляющее собой пересечение текущего и указанного разрешений.</summary>
      <param name="target">Разрешение, пересекающееся с текущим разрешением. Его тип должен совпадать с типом текущего разрешения.</param>
      <returns>Новое разрешение, представляющее собой пересечение текущего и указанного разрешений. Это новое разрешение равно <see langword="null" />, если пересечение является пустым.</returns>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="target" /> не равен <see langword="null" /> и не является экземпляром того же класса, что и текущее разрешение.</exception>
    </member>
    <member name="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Определяет, является ли текущее разрешение подмножеством заданного разрешения.</summary>
      <param name="target">Разрешение, для которого требуется проверить отношение подмножества. Его тип должен совпадать с типом текущего разрешения.</param>
      <returns>Значение <see langword="true" />, если текущее разрешение является подмножеством указанного разрешения. В противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="target" /> не равен <see langword="null" /> и имеет тип, не совпадающий с типом текущего разрешения.</exception>
    </member>
    <member name="M:System.Security.IPermission.Union(System.Security.IPermission)">
      <summary>Создает разрешение, представляющее собой объединение текущего и указанного разрешений.</summary>
      <param name="target">Разрешение, используемое в сочетании с текущим разрешением. Его тип должен совпадать с типом текущего разрешения.</param>
      <returns>Новое разрешение, представляющее собой объединение текущего и указанного разрешений.</returns>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="target" /> не равен <see langword="null" /> и имеет тип, не совпадающий с типом текущего разрешения.</exception>
    </member>
    <member name="T:System.Security.ISecurityEncodable">
      <summary>Определяет методы, которые преобразуют состояние объекта разрешений в представление элемента XML и обратно.</summary>
    </member>
    <member name="M:System.Security.ISecurityEncodable.FromXml(System.Security.SecurityElement)">
      <summary>Восстанавливает объект безопасности с указанным состоянием из кодировки XML.</summary>
      <param name="e">Кодировка XML, используемая для восстановления объекта безопасности.</param>
    </member>
    <member name="M:System.Security.ISecurityEncodable.ToXml">
      <summary>Создает кодировку XML для объекта безопасности и его текущего состояния.</summary>
      <returns>Кодировка XML объекта безопасности, включающая сведения о состоянии.</returns>
    </member>
    <member name="T:System.Security.IStackWalk">
      <summary>Управляет проверкой стека для определения того, все ли вызывающие элементы в стеке обладают необходимыми разрешениями на доступ к защищенному ресурсу.</summary>
    </member>
    <member name="M:System.Security.IStackWalk.Assert">
      <summary>Утверждает, что вызывающий код может получить доступ к ресурсу, определяемому текущим объектом разрешений, даже если расположенные выше в стеке вызывающие элементы не имеют разрешения на доступ к этому ресурсу.</summary>
      <exception cref="T:System.Security.SecurityException">У вызывающего кода отсутствует <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Assertion" />.</exception>
    </member>
    <member name="M:System.Security.IStackWalk.Demand">
      <summary>Определяет во время выполнения, все ли вызывающие объекты в стеке вызова обладают разрешением, указанным в текущем объекте разрешений.</summary>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта, находящегося выше в стеке вызова, нет разрешения, указанного в текущем объекте разрешений.  

или - 
Вызывающий код в стеке вызова вызвал метод <see cref="M:System.Security.IStackWalk.Deny" /> для текущего объекта разрешений.</exception>
    </member>
    <member name="M:System.Security.IStackWalk.Deny">
      <summary>Принудительно блокирует каждый проходящий через вызывающий код вызов метода <see cref="M:System.Security.IStackWalk.Demand" /> для текущего объекта.</summary>
    </member>
    <member name="M:System.Security.IStackWalk.PermitOnly">
      <summary>Принудительно блокирует все проходящие через вызывающий код вызовы <see cref="M:System.Security.IStackWalk.Demand" /> для всех объектов, кроме текущего, даже если расположенный выше в стеке вызовов код обладает разрешениями на доступ к другим ресурсам.</summary>
    </member>
    <member name="T:System.Security.Permissions.CodeAccessSecurityAttribute">
      <summary>Указывает базовый класс атрибута для управления доступом для кода.</summary>
    </member>
    <member name="M:System.Security.Permissions.CodeAccessSecurityAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Инициализирует новый экземпляр <see cref="T:System.Security.Permissions.CodeAccessSecurityAttribute" /> с указанным <see cref="T:System.Security.Permissions.SecurityAction" />.</summary>
      <param name="action">Одно из значений перечисления <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="T:System.Security.Permissions.PermissionState">
      <summary>Указывает, должно ли разрешение иметь полный доступ или не иметь никакого доступа к ресурсам при его создании.</summary>
    </member>
    <member name="F:System.Security.Permissions.PermissionState.None">
      <summary>Доступ к ресурсу, который защищен данным разрешением, запрещен.</summary>
    </member>
    <member name="F:System.Security.Permissions.PermissionState.Unrestricted">
      <summary>Разрешение предоставляет полный доступ к защищаемому ресурсу.</summary>
    </member>
    <member name="T:System.Security.Permissions.SecurityAction">
      <summary>Указывает действия безопасности, которые можно выполнить с помощью декларативной безопасности.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityAction.Assert">
      <summary>Вызывающий код может получить доступ к ресурсу, определяемому текущим объектом разрешения, даже если вызывающим объектам выше в стеке вызовов не предоставлено разрешение на доступ к ресурсу (см. раздел Использование метода Assert).</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityAction.Demand">
      <summary>Всем вызывающим объектам выше в стеке вызовов должно быть предоставлено разрешение, заданное текущим объектом разрешений.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityAction.Deny">
      <summary>Вызывающим объектам запрещен доступ к ресурсу (определяется текущим объектом разрешения), даже если им предоставлено разрешение на доступ к этому ресурсу (см. раздел об использовании метода Deny).</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
      <summary>Необходимо, чтобы производному классу, наследующему класс или переопределяющему метод, было предоставлено указанное разрешение.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityAction.LinkDemand">
      <summary>Указанное разрешение необходимо предоставить непосредственно вызывающему объекту. Не используйте в .NET Framework 4. Для полного доверия используйте вместо него <see cref="T:System.Security.SecurityCriticalAttribute" />; для частичного доверия используйте <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityAction.PermitOnly">
      <summary>Доступ можно получить только к ресурсам, указанным данным объектом разрешения, даже если коду предоставлено разрешение на доступ к другим ресурсам.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityAction.RequestMinimum">
      <summary>Запрос на минимальный набор разрешений, необходимых для выполнения кода. Это действие может использоваться только в пределах сборки.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityAction.RequestOptional">
      <summary>Запрос дополнительных разрешений, которые не являются обязательными (не требуются для выполнения). Этот запрос неявно отклоняет все прочие разрешения, не запрошенные специально. Это действие может использоваться только в пределах сборки.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityAction.RequestRefuse">
      <summary>Запрос на непредоставление вызывающему коду разрешений, которые могут быть неправильно использованы. Это действие может использоваться только в пределах сборки.</summary>
    </member>
    <member name="T:System.Security.Permissions.SecurityAttribute">
      <summary>Указывает базовый класс атрибутов для декларативной безопасности, производным от которого является <see cref="T:System.Security.Permissions.CodeAccessSecurityAttribute" />.</summary>
    </member>
    <member name="M:System.Security.Permissions.SecurityAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Инициализирует новый экземпляр <see cref="T:System.Security.Permissions.SecurityAttribute" /> с указанным <see cref="T:System.Security.Permissions.SecurityAction" />.</summary>
      <param name="action">Одно из значений перечисления <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="P:System.Security.Permissions.SecurityAttribute.Action">
      <summary>Возвращает или задает действие по обеспечению безопасности.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.Security.Permissions.SecurityAction" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.SecurityAttribute.CreatePermission">
      <summary>При переопределении в производном классе создает объект разрешения, который затем можно сериализовать в двоичную форму и постоянно хранить вместе с <see cref="T:System.Security.Permissions.SecurityAction" /> в метаданных сборки.</summary>
      <returns>Сериализуемый объект разрешения.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityAttribute.Unrestricted">
      <summary>Возвращает или задает значение, определяющее, объявлено ли полное (неограниченное) разрешение доступа к ресурсу, защищенному атрибутом.</summary>
      <returns>Значение <see langword="true" />, если объявлено полное разрешение на доступ к защищенному ресурсу, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Security.Permissions.SecurityPermissionAttribute">
      <summary>Разрешает применять меры безопасности для <see cref="T:System.Security.Permissions.SecurityPermission" /> к коду с помощью декларативной безопасности. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Permissions.SecurityPermissionAttribute" /> указанным значением <see cref="T:System.Security.Permissions.SecurityAction" />.</summary>
      <param name="action">Одно из значений <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.Assertion">
      <summary>Возвращает или задает значение, показывающее, объявлено ли разрешение на утверждение того, что вызывающие этот код объекты обладают необходимым разрешением для операции.</summary>
      <returns>Значение <see langword="true" />, если разрешение на утверждение объявлено; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.BindingRedirects">
      <summary>Возвращает или задает значение, показывающее, обладает ли код разрешением на выполнение перенаправления привязки в файле конфигурации приложения.</summary>
      <returns>Значение <see langword="true" />, если код может выполнить перенаправление привязки, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.ControlAppDomain">
      <summary>Возвращает или задает значение, указывающее, объявлено ли разрешение на управление <see cref="T:System.AppDomain" />.</summary>
      <returns>Значение <see langword="true" />, если разрешение на действия с <see cref="T:System.AppDomain" /> объявлено; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.ControlDomainPolicy">
      <summary>Возвращает или задает значение, указывающее, объявлено ли разрешение на изменение политики безопасности домена или действия с ней.</summary>
      <returns>Значение <see langword="true" /> разрешение на изменение политики безопасности домена приложения или действия с ней; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.ControlEvidence">
      <summary>Возвращает или задает значение, показывающее, объявлено ли разрешение на изменение свидетельства или действия с ним.</summary>
      <returns>Значение <see langword="true" />, если объявлена возможность изменения свидетельства или действий с ним; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.ControlPolicy">
      <summary>Возвращает или задает значение, указывающее, объявлено ли разрешение на просмотр политики безопасности и действия с ней.</summary>
      <returns>Значение <see langword="true" />, если объявлено разрешение на действия с политикой безопасности; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.ControlPrincipal">
      <summary>Возвращает или задает значение, показывающее, объявлено ли разрешение на действия с текущим участником.</summary>
      <returns>Значение <see langword="true" />, если разрешение на действия с текущим участником объявлено; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.ControlThread">
      <summary>Возвращает или задает значение, показывающее, объявлено ли разрешение на действия с потоками.</summary>
      <returns>Значение <see langword="true" />, если разрешение на действия с потоками объявлено; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermissionAttribute.CreatePermission">
      <summary>Создает и возвращает новый объект <see cref="T:System.Security.Permissions.SecurityPermission" />.</summary>
      <returns>Объект <see cref="T:System.Security.Permissions.SecurityPermission" />, соответствующий этому атрибуту.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.Execution">
      <summary>Возвращает или задает значение, показывающее, объявлено ли разрешение на выполнение кода.</summary>
      <returns>Значение <see langword="true" />, если разрешение на выполнение кода объявлено; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.Flags">
      <summary>Возвращает или задает все флаги разрешения, составляющие разрешения <see cref="T:System.Security.Permissions.SecurityPermission" />.</summary>
      <returns>Одно или несколько значений <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /> , объединенных с помощью битового оператора ИЛИ.</returns>
      <exception cref="T:System.ArgumentException">Предпринята попытка установить для этого свойства недопустимое значение. Сведения о допустимых значениях см. в разделе <see cref="T:System.Security.Permissions.SecurityPermissionFlag" />.</exception>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.Infrastructure">
      <summary>Возвращает или задает значение, показывающее, может ли код подключаться к инфраструктуре среды CLR, например для добавления удаленных приемников контекста, приемников делегатов и динамических приемников.</summary>
      <returns>Значение <see langword="true" />, если код может подключаться к инфраструктуре среды CLR; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.RemotingConfiguration">
      <summary>Возвращает или задает значение, показывающее, может ли код настраивать каналы и типы удаленного взаимодействия.</summary>
      <returns>Значение <see langword="true" /> если код может настраивать каналы и типы удаленного взаимодействия; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.SerializationFormatter">
      <summary>Возвращает или задает значение, показывающее, может ли код использовать модуль форматирования сериализации для сериализации или десериализации объекта.</summary>
      <returns>Значение <see langword="true" /> если код может использовать модуль форматирования сериализации для сериализации или десериализации объекта; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.SkipVerification">
      <summary>Возвращает или задает значение, показывающее, объявлено ли разрешение на пропуск проверки кода.</summary>
      <returns>Значение <see langword="true" />, если объявлено разрешение на пропуск проверки кода; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">
      <summary>Возвращает или задает значение, показывающее, объявлено ли разрешение на вызов неуправляемого кода.</summary>
      <returns>Значение <see langword="true" />, если разрешение на вызов неуправляемого кода объявлено; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Security.Permissions.SecurityPermissionFlag">
      <summary>Указывает флаги доступа для объекта разрешения безопасности.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.AllFlags">
      <summary>Неограниченное состояние разрешения.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.Assertion">
      <summary>Возможность утверждения того, что все вызывающие этого кода имеют необходимое разрешение для операции.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.BindingRedirects">
      <summary>Разрешение на выполнение явного перенаправления привязки в файле конфигурации приложения. Это относится к перенаправлению сборок .NET Framework, которые были объединены, а также других сборок, находящихся вне .NET Framework.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.ControlAppDomain">
      <summary>Возможность создания и управления объектом <see cref="T:System.AppDomain" />.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.ControlDomainPolicy">
      <summary>Возможность задания политики домена.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence">
      <summary>Возможность предоставления свидетельства, включая возможность изменять свидетельство, предоставленное общеязыковой средой выполнения.
Это очень важное разрешение, которое можно предоставлять только коду с высокой степенью доверия.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy">
      <summary>Возможность просматривать и изменять политику.
Это очень важное разрешение, которое можно предоставлять только коду с высокой степенью доверия.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal">
      <summary>Возможность управлять объектом участника.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.ControlThread">
      <summary>Возможность использовать некоторые расширенные операции над потоками.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.Execution">
      <summary>Разрешение на запуск кода. Без этого разрешения управляемый код не может быть выполнен.
Этот флаг не действует при динамическом использовании с модификаторами стека, например <see cref="M:System.Security.CodeAccessPermission.Deny" />, <see cref="M:System.Security.CodeAccessPermission.Assert" /> и <see cref="M:System.Security.CodeAccessPermission.PermitOnly" />.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure">
      <summary>Разрешение на подключение кода в инфраструктуру среды CLR, например добавление удаленных приемников контекста, приемников делегата и динамических приемников.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.NoFlags">
      <summary>Нет доступа безопасности.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration">
      <summary>Разрешение настраивать типы и каналы удаленного взаимодействия.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter">
      <summary>Возможность предоставления служб сериализации. Используется форматтерами сериализации.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.SkipVerification">
      <summary>Возможность пропускать проверку кода в этой сборке. Код, который является непроверяемым, может быть запущен для проверки, если предоставлено это разрешение.
Это очень важное разрешение, которое можно предоставлять только коду с высокой степенью доверия.
Этот флаг не действует при динамическом использовании с модификаторами стека, например <see cref="M:System.Security.CodeAccessPermission.Deny" />, <see cref="M:System.Security.CodeAccessPermission.Assert" /> и <see cref="M:System.Security.CodeAccessPermission.PermitOnly" />.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode">
      <summary>Возможность вызывать неуправляемый код.
 Так как неуправляемый код дает возможность обойти другие разрешения, это разрешение представляет опасность. Его можно предоставлять только коду с высокой степенью доверия. Разрешение используется в таких сценариях, как вызов машинного кода с помощью PInvoke или COM-взаимодействия.</summary>
    </member>
    <member name="T:System.Security.PermissionSet">
      <summary>Представляет коллекцию, которая может содержать несколько разных типов разрешений.</summary>
    </member>
    <member name="M:System.Security.PermissionSet.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.PermissionSet" /> указанным значением <see cref="T:System.Security.Permissions.PermissionState" />.</summary>
      <param name="state">Одно из значений перечисления, определяющее набор разрешений доступа к ресурсам.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="state" /> не является допустимым <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
    </member>
    <member name="M:System.Security.PermissionSet.#ctor(System.Security.PermissionSet)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.PermissionSet" /> с начальными значениями из параметра <paramref name="permSet" />.</summary>
      <param name="permSet">Набор, из которого берется значение нового <see cref="T:System.Security.PermissionSet" /> или <see langword="null" /> для создания пустого <see cref="T:System.Security.PermissionSet" />.</param>
    </member>
    <member name="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)">
      <summary>Добавляет указанное разрешение в набор <see cref="T:System.Security.PermissionSet" />.</summary>
      <param name="perm">Разрешение для добавления.</param>
      <returns>Объединение добавленного разрешения и любого разрешения того же типа, уже существующего в <see cref="T:System.Security.PermissionSet" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод вызывается из <see cref="T:System.Security.ReadOnlyPermissionSet" />.</exception>
    </member>
    <member name="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)">
      <summary>Добавляет указанное разрешение в набор <see cref="T:System.Security.PermissionSet" />.</summary>
      <param name="perm">Разрешение для добавления.</param>
      <returns>Объединение добавленного разрешения и любого разрешения того же типа, уже существующего в <see cref="T:System.Security.PermissionSet" />, или <see langword="null" />, если параметр <paramref name="perm" /> имеет значение <see langword="null" />.</returns>
      <exception cref="T:System.InvalidOperationException">Метод вызывается из <see cref="T:System.Security.ReadOnlyPermissionSet" />.</exception>
    </member>
    <member name="M:System.Security.PermissionSet.Assert">
      <summary>Объявляет, что вызывающий код может получить доступ к ресурсу, защищенному требованием разрешения, через код, вызывающий этот метод, даже если вызывающим объектам выше в стеке вызовов не предоставлено разрешение на доступ к ресурсу. С помощью <see cref="M:System.Security.PermissionSet.Assert" /> можно создать уязвимости системы безопасности.</summary>
      <exception cref="T:System.Security.SecurityException">Утвержденный экземпляр <see cref="T:System.Security.PermissionSet" /> не был предоставлен утверждающему коду.  
-или- 
Уже имеется активное утверждение <see cref="M:System.Security.PermissionSet.Assert" /> для текущего кадра.</exception>
    </member>
    <member name="M:System.Security.PermissionSet.ContainsNonCodeAccessPermissions">
      <summary>Получает значение, показывающее, содержит ли коллекция <see cref="T:System.Security.PermissionSet" /> разрешения, не являющиеся производными от <see cref="T:System.Security.CodeAccessPermission" />.</summary>
      <returns>Значение <see langword="true" />, если <see cref="T:System.Security.PermissionSet" /> содержит разрешения, которые не являются производными от <see cref="T:System.Security.CodeAccessPermission" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)">
      <summary>Преобразует закодированное значение <see cref="T:System.Security.PermissionSet" /> из одного формата кодировки XML в другой формат кодировки XML.</summary>
      <param name="inFormat">Строка, представляющая один из следующих форматов кодировки: ASCII, Юникод или двоичный. Возможные значения: XMLASCII или XML, XMLUNICODE и BINARY.</param>
      <param name="inData">Набор разрешений в XML-кодировке.</param>
      <param name="outFormat">Строка, представляющая один из следующих форматов кодировки: ASCII, Юникод или двоичный. Возможные значения: XMLASCII или XML, XMLUNICODE и BINARY.</param>
      <returns>Зашифрованный набор разрешений с указанным выходным форматом.</returns>
      <exception cref="T:System.NotImplementedException">Во всех случаях.</exception>
    </member>
    <member name="M:System.Security.PermissionSet.Copy">
      <summary>Создает копию объекта <see cref="T:System.Security.PermissionSet" />.</summary>
      <returns>Копия объекта <see cref="T:System.Security.PermissionSet" />.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.CopyTo(System.Array,System.Int32)">
      <summary>Копирует объекты разрешений из набора в указанное место в <see cref="T:System.Array" />.</summary>
      <param name="array">Целевой массив, в который выполняется копирование.</param>
      <param name="index">Начальная позиция в массиве, с которой начинается копирование (от нуля).</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="array" /> имеет несколько измерений.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Параметр <paramref name="index" /> находится за пределами диапазона параметра <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Security.PermissionSet.Count">
      <summary>Получает число объектов разрешений, содержащихся в наборе разрешений.</summary>
      <returns>Число объектов разрешений, содержащихся в <see cref="T:System.Security.PermissionSet" />.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.Demand">
      <summary>Принудительно создает <see cref="T:System.Security.SecurityException" /> во время выполнения, если все вызывающие методы, расположенные выше в стеке вызовов, не получили разрешения, указанные текущим экземпляром.</summary>
      <exception cref="T:System.Security.SecurityException">У вызывающего метода в цепочке вызовов нет требуемых разрешений.</exception>
    </member>
    <member name="M:System.Security.PermissionSet.Deny">
      <summary>Вызывает сбой любого требования <see cref="M:System.Security.PermissionSet.Demand" />, проходящего через вызывающий код для получения разрешения, которое пересекается с разрешением типа, содержащегося в текущем наборе <see cref="T:System.Security.PermissionSet" />.</summary>
      <exception cref="T:System.Security.SecurityException">Предыдущий вызов <see cref="M:System.Security.PermissionSet.Deny" /> уже ограничил разрешения для текущего кадра стека.</exception>
    </member>
    <member name="M:System.Security.PermissionSet.Equals(System.Object)">
      <summary>Определяет, равен ли заданный объект <see cref="T:System.Security.PermissionSet" /> или <see cref="T:System.Security.NamedPermissionSet" /> текущему объекту <see cref="T:System.Security.PermissionSet" />.</summary>
      <param name="o">Объект, который требуется сравнить с текущим объектом <see cref="T:System.Security.PermissionSet" />.</param>
      <returns>Значение <see langword="true" />, если указанный объект равен текущему объекту <see cref="T:System.Security.PermissionSet" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.FromXml(System.Security.SecurityElement)">
      <summary>Восстанавливает объект безопасности с указанным состоянием из кодировки XML.</summary>
      <param name="et">Кодировка XML, используемая для восстановления объекта безопасности.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="et" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="et" /> не является допустимым элементом разрешения.  

или - 
Номер версии параметра <paramref name="et" /> не поддерживается.</exception>
    </member>
    <member name="M:System.Security.PermissionSet.GetEnumerator">
      <summary>Возвращает перечислитель для разрешений в наборе.</summary>
      <returns>Объект-перечислитель для разрешений в наборе.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.GetEnumeratorImpl">
      <summary>Возвращает перечислитель для разрешений в наборе.</summary>
      <returns>Объект-перечислитель для разрешений в наборе.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.GetHashCode">
      <summary>Возвращает хэш-код для объекта <see cref="T:System.Security.PermissionSet" />, который можно использовать в алгоритмах хэширования и структурах данных, например в хэш-таблице.</summary>
      <returns>Хэш-код для текущего объекта <see cref="T:System.Security.PermissionSet" />.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.GetPermission(System.Type)">
      <summary>Получает объект разрешений указанного типа, если он существует в наборе.</summary>
      <param name="permClass">Тип требуемого объекта разрешений.</param>
      <returns>Копия объекта разрешений с типом, указанным параметром <paramref name="permClass" />, содержащимся в <see cref="T:System.Security.PermissionSet" />, или <see langword="null" />, если он не существует.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)">
      <summary>Получает объект разрешений указанного типа, если он существует в наборе.</summary>
      <param name="permClass">Тип объекта разрешений.</param>
      <returns>Копия объекта разрешений с типом, указанным параметром <paramref name="permClass" />, содержащегося в <see cref="T:System.Security.PermissionSet" />, или <see langword="null" />, если он не существует.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.Intersect(System.Security.PermissionSet)">
      <summary>Создает и возвращает разрешение, представляющее собой пересечение текущего <see cref="T:System.Security.PermissionSet" /> и указанного <see cref="T:System.Security.PermissionSet" />.</summary>
      <param name="other">Разрешение, пересекающееся с текущим <see cref="T:System.Security.PermissionSet" />.</param>
      <returns>Новый набор разрешений, представляющий собой пересечение текущего <see cref="T:System.Security.PermissionSet" /> и указанного целевого объекта. Этот объект является <see langword="null" />, если пересечение является пустым.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.IsEmpty">
      <summary>Получает значение, указывающее, пуст ли объект <see cref="T:System.Security.PermissionSet" />.</summary>
      <returns>Значение <see langword="true" />, если объект <see cref="T:System.Security.PermissionSet" /> пуст; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.PermissionSet.IsReadOnly">
      <summary>Возвращает значение, указывающее, является ли коллекция доступной только для чтения.</summary>
      <returns>Всегда <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.IsSubsetOf(System.Security.PermissionSet)">
      <summary>Определяет, является ли текущий набор <see cref="T:System.Security.PermissionSet" /> подмножеством заданного набора <see cref="T:System.Security.PermissionSet" />.</summary>
      <param name="target">Набор разрешений для проверки соотношения подмножеств. Это должен быть либо <see cref="T:System.Security.PermissionSet" />, либо <see cref="T:System.Security.NamedPermissionSet" />.</param>
      <returns>
        <see langword="true" />, если текущий <see cref="T:System.Security.PermissionSet" /> — подмножество параметра <paramref name="target" />; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.PermissionSet.IsSynchronized">
      <summary>Возвращает значение, указывающее, гарантируется ли потокобезопасность коллекции.</summary>
      <returns>Всегда <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.IsUnrestricted">
      <summary>Определяет, имеет ли <see cref="T:System.Security.PermissionSet" /> тип <see langword="Unrestricted" />.</summary>
      <returns>Значение <see langword="true" />, если <see cref="T:System.Security.PermissionSet" /> имеет тип <see langword="Unrestricted" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.PermitOnly">
      <summary>Вызывает сбой любого требования <see cref="M:System.Security.PermissionSet.Demand" />, проходящего через вызывающий код для получения любого набора <see cref="T:System.Security.PermissionSet" />, который не является подмножеством текущего набора <see cref="T:System.Security.PermissionSet" />.</summary>
    </member>
    <member name="M:System.Security.PermissionSet.RemovePermission(System.Type)">
      <summary>Удаляет разрешение определенного типа из набора.</summary>
      <param name="permClass">Тип удаляемого разрешения.</param>
      <returns>Разрешение, удаленное из набора.</returns>
      <exception cref="T:System.InvalidOperationException">Метод вызывается из <see cref="T:System.Security.ReadOnlyPermissionSet" />.</exception>
    </member>
    <member name="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)">
      <summary>Удаляет разрешение определенного типа из набора.</summary>
      <param name="permClass">Тип удаляемого разрешения.</param>
      <returns>Разрешение, удаленное из набора.</returns>
      <exception cref="T:System.InvalidOperationException">Метод вызывается из <see cref="T:System.Security.ReadOnlyPermissionSet" />.</exception>
    </member>
    <member name="M:System.Security.PermissionSet.RevertAssert">
      <summary>Приводит к удалению и выводу из действия всех предыдущих <see cref="M:System.Security.CodeAccessPermission.Assert" /> для текущего кадра.</summary>
      <exception cref="T:System.InvalidOperationException">Предыдущие значения <see cref="M:System.Security.CodeAccessPermission.Assert" /> для текущего кадра отсутствуют.</exception>
    </member>
    <member name="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)">
      <summary>Устанавливает разрешение в <see cref="T:System.Security.PermissionSet" />, заменяя любые имеющиеся разрешения того же типа.</summary>
      <param name="perm">Разрешение для установки.</param>
      <returns>Установленное разрешение.</returns>
      <exception cref="T:System.InvalidOperationException">Метод вызывается из <see cref="T:System.Security.ReadOnlyPermissionSet" />.</exception>
    </member>
    <member name="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)">
      <summary>Устанавливает разрешение в <see cref="T:System.Security.PermissionSet" />, заменяя любые имеющиеся разрешения того же типа.</summary>
      <param name="perm">Разрешение для установки.</param>
      <returns>Установленное разрешение.</returns>
      <exception cref="T:System.InvalidOperationException">Метод вызывается из <see cref="T:System.Security.ReadOnlyPermissionSet" />.</exception>
    </member>
    <member name="P:System.Security.PermissionSet.SyncRoot">
      <summary>Возвращает корневой объект текущей коллекции.</summary>
      <returns>Корневой объект текущей коллекции.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
      <summary>Выполняется, когда полностью десериализован граф объектов.</summary>
      <param name="sender">Объект, который инициализирует обратный вызов. Данная функциональная возможность для этого параметра в настоящее время не реализуется.</param>
    </member>
    <member name="M:System.Security.PermissionSet.ToString">
      <summary>Возвращает строковое представление объекта <see cref="T:System.Security.PermissionSet" />.</summary>
      <returns>Представление объекта <see cref="T:System.Security.PermissionSet" />.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.ToXml">
      <summary>Создает кодировку XML для объекта безопасности и его текущего состояния.</summary>
      <returns>Кодировка XML объекта безопасности, включающая сведения о состоянии.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.Union(System.Security.PermissionSet)">
      <summary>Создает <see cref="T:System.Security.PermissionSet" />, представляющий собой объединение текущего <see cref="T:System.Security.PermissionSet" /> и указанного <see cref="T:System.Security.PermissionSet" />.</summary>
      <param name="other">Набор разрешений для создания объединения с текущим <see cref="T:System.Security.PermissionSet" />.</param>
      <returns>Новый набор разрешений, представляющий собой объединение текущего <see cref="T:System.Security.PermissionSet" /> и указанного <see cref="T:System.Security.PermissionSet" />.</returns>
    </member>
    <member name="T:System.Security.SecurityElement">
      <summary>Представляет объектную модель XML для кодирования объектов безопасности. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Security.SecurityElement.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.SecurityElement" /> с указанным тегом.</summary>
      <param name="tag">Имя тега элемента XML.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="tag" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="tag" /> недопустим в XML.</exception>
    </member>
    <member name="M:System.Security.SecurityElement.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.SecurityElement" /> с указанным тегом и текстом.</summary>
      <param name="tag">Имя тега элемента XML.</param>
      <param name="text">Текстовое содержимое элемента.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="tag" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Параметры <paramref name="tag" /> и <paramref name="text" /> недопустимы в XML.</exception>
    </member>
    <member name="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)">
      <summary>Добавляет атрибут "имя-значение" к элементу XML.</summary>
      <param name="name">Имя атрибута.</param>
      <param name="value">Значение атрибута.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="name" /> или <paramref name="value" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Параметры <paramref name="name" /> и <paramref name="value" /> недопустимы в XML.  

или - 
Атрибут с именем, определяемым параметром <paramref name="name" />, уже существует.</exception>
    </member>
    <member name="M:System.Security.SecurityElement.AddChild(System.Security.SecurityElement)">
      <summary>Добавляет дочерний элемент в элемент XML.</summary>
      <param name="child">Добавляемый дочерний элемент.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="child" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.SecurityElement.Attribute(System.String)">
      <summary>Находит атрибут с заданным именем в элементе XML.</summary>
      <param name="name">Имя атрибута для поиска.</param>
      <returns>Значение, связанное с именованным атрибутом, или <see langword="null" />, если атрибута с именем <paramref name="name" /> не существует.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="name" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.SecurityElement.Attributes">
      <summary>Получает или задает атрибуты элемента XML в виде пар "имя-значение".</summary>
      <returns>Объект <see cref="T:System.Collections.Hashtable" /> для значений атрибутов элемента XML.</returns>
      <exception cref="T:System.InvalidCastException">Недопустимое имя или значение объекта <see cref="T:System.Collections.Hashtable" />.</exception>
      <exception cref="T:System.ArgumentException">Имя атрибута XML является недопустимым.</exception>
    </member>
    <member name="P:System.Security.SecurityElement.Children">
      <summary>Получает или задает массив дочерних элементов данного элемента XML.</summary>
      <returns>Упорядоченные дочерние элементы данного элемента XML в виде элементов безопасности.</returns>
      <exception cref="T:System.ArgumentException">Дочерний элемент родительского узла XML равен <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.SecurityElement.Copy">
      <summary>Создает и возвращает точную копию текущего объекта <see cref="T:System.Security.SecurityElement" />.</summary>
      <returns>Копия текущего объекта <see cref="T:System.Security.SecurityElement" />.</returns>
    </member>
    <member name="M:System.Security.SecurityElement.Equal(System.Security.SecurityElement)">
      <summary>Сравнивает два объекта элементов XML, чтобы определить, равны ли они.</summary>
      <param name="other">Объект элемента XML, с которым сравнивается текущий объект элемента XML.</param>
      <returns>
        <see langword="true" />, если тег, имена и значения атрибутов, дочерние элементы и текстовые поля текущего элемента XML идентичны соответствующим составляющим параметра <paramref name="other" />; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.SecurityElement.Escape(System.String)">
      <summary>Заменяет недопустимые для XML знаки в строке их допустимыми эквивалентами в XML.</summary>
      <param name="str">Строка, в которой выполняется обработка недопустимых знаков.</param>
      <returns>Строка ввода с замененными недопустимыми знаками.</returns>
    </member>
    <member name="M:System.Security.SecurityElement.FromString(System.String)">
      <summary>Создает элемент безопасности на основании строки кода XML.</summary>
      <param name="xml">Строка в XML-кодировке, на основе которой следует создать элемент безопасности.</param>
      <returns>Элемент <see cref="T:System.Security.SecurityElement" />, созданный на основе XML.</returns>
      <exception cref="T:System.Security.XmlSyntaxException">
        <paramref name="xml" /> содержит один или несколько символов одинарных кавычек.</exception>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="xml" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.SecurityElement.IsValidAttributeName(System.String)">
      <summary>Определяет, является ли строка допустимым именем атрибута.</summary>
      <param name="name">Имя атрибута, проверяемое на допустимость.</param>
      <returns>
        <see langword="true" />, если параметр <paramref name="name" /> является допустимым именем атрибута XML; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.SecurityElement.IsValidAttributeValue(System.String)">
      <summary>Определяет, является ли строка допустимым значением атрибута.</summary>
      <param name="value">Значение атрибута, проверяемое на допустимость.</param>
      <returns>
        <see langword="true" />, если параметр <paramref name="value" /> является допустимым значением атрибута XML; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.SecurityElement.IsValidTag(System.String)">
      <summary>Определяет, является ли строка допустимым тегом.</summary>
      <param name="tag">Тег, проверяемый на допустимость.</param>
      <returns>
        <see langword="true" />, если параметр <paramref name="tag" /> является допустимым тегом XML; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.SecurityElement.IsValidText(System.String)">
      <summary>Определяет, допустима ли строка в качестве текста в составе элемента XML.</summary>
      <param name="text">Текст, проверяемый на допустимость.</param>
      <returns>
        <see langword="true" />, если параметр <paramref name="text" /> является допустимым текстовым элементом XML; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.SecurityElement.SearchForChildByTag(System.String)">
      <summary>Выполняет поиск дочернего элемента по имени тега.</summary>
      <param name="tag">Тег, для которого нужно выполнить поиск среди дочерних элементов.</param>
      <returns>Первый дочерний элемент XML с указанным значением тега или <see langword="null" />, если дочернего элемента с тегом <paramref name="tag" /> не существует.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="tag" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.SecurityElement.SearchForTextOfTag(System.String)">
      <summary>Выполняет поиск дочернего элемента по имени тега и возвращает содержащийся в элементе текст.</summary>
      <param name="tag">Тег, для которого нужно выполнить поиск среди дочерних элементов.</param>
      <returns>Текстовое содержимое первого дочернего элемента с указанным значением тега.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="tag" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.SecurityElement.Tag">
      <summary>Получает или задает имя тега элемента XML.</summary>
      <returns>Имя тега элемента XML.</returns>
      <exception cref="T:System.ArgumentNullException">Значение тега равно <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Тег не является допустимым в XML.</exception>
    </member>
    <member name="P:System.Security.SecurityElement.Text">
      <summary>Получает или задает текст внутри элемента XML.</summary>
      <returns>Значение текста внутри элемента XML.</returns>
      <exception cref="T:System.ArgumentException">Текст не является допустимым в XML.</exception>
    </member>
    <member name="M:System.Security.SecurityElement.ToString">
      <summary>Выдает строковое представление элемента XML вместе с атрибутами, дочерними элементами и текстом.</summary>
      <returns>Элемент XML и его содержимое.</returns>
    </member>
    <member name="T:System.StringComparer">
      <summary>Представляет операции сравнения строк, в которых используются правила сравнения с учетом регистра, языка и региональных параметров или правил сравнения по порядковому номеру.</summary>
    </member>
    <member name="M:System.StringComparer.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.StringComparer" />.</summary>
    </member>
    <member name="M:System.StringComparer.Compare(System.Object,System.Object)">
      <summary>При переопределении в производном классе сравнивает два объекта и возвращает сведения об их относительном порядке сортировки.</summary>
      <param name="x">Объект, сравниваемый с <paramref name="y" />.</param>
      <param name="y">Объект, сравниваемый с <paramref name="x" />.</param>
      <returns>Знаковое целое число, которое определяет относительные значения параметров <paramref name="x" /> и <paramref name="y" />, как показано в следующей таблице.  
  Значение 
  Значение 
  Меньше нуля 
 <paramref name="x" /> предшествует <paramref name="y" /> в порядке сортировки.  

- или - 
 <paramref name="x" /> имеет значение <see langword="null" />, а <paramref name="y" /> не имеет значения <see langword="null" />.  

  Нуль 
 <paramref name="x" /> равно <paramref name="y" />.  

- или - 
 Оба параметра <paramref name="x" /> и <paramref name="y" /> имеют значение <see langword="null" />.  

  Больше нуля 
 <paramref name="x" /> следует за <paramref name="y" /> в порядке сортировки.  

- или - 
 <paramref name="y" /> имеет значение <see langword="null" />, а <paramref name="x" /> не имеет значения <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException">Ни параметр <paramref name="x" />, ни параметр <paramref name="y" /> не являются объектами <see cref="T:System.String" /> и ни один из этих параметров, <paramref name="x" /> и <paramref name="y" />, не реализует экземпляр <see cref="T:System.IComparable" />.</exception>
    </member>
    <member name="M:System.StringComparer.Compare(System.String,System.String)">
      <summary>При переопределении в производном классе сравнивает две строки и возвращает сведения об их относительном порядке сортировки.</summary>
      <param name="x">Строка, сравниваемая с параметром <paramref name="y" />.</param>
      <param name="y">Строка, сравниваемая с параметром <paramref name="x" />.</param>
      <returns>Знаковое целое число, которое определяет относительные значения параметров <paramref name="x" /> и <paramref name="y" />, как показано в следующей таблице.  
  Значение 
  Значение 
  Меньше нуля 
 <paramref name="x" /> предшествует <paramref name="y" /> в порядке сортировки.  

- или - 
 <paramref name="x" /> имеет значение <see langword="null" />, а <paramref name="y" /> не имеет значения <see langword="null" />.  

  Нуль 
 <paramref name="x" /> равно <paramref name="y" />.  

- или - 
 Оба параметра <paramref name="x" /> и <paramref name="y" /> имеют значение <see langword="null" />.  

  Больше нуля 
 <paramref name="x" /> следует за <paramref name="y" /> в порядке сортировки.  

-или- 
 <paramref name="y" /> имеет значение <see langword="null" />, а <paramref name="x" /> не имеет значения <see langword="null" />.</returns>
    </member>
    <member name="M:System.StringComparer.Create(System.Globalization.CultureInfo,System.Boolean)">
      <summary>Создает объект <see cref="T:System.StringComparer" /> и сравнивает строки в соответствии с правилами заданного языка и региональных параметров.</summary>
      <param name="culture">Язык и региональные параметры, лингвистические правила которых используются для сравнения строк.</param>
      <param name="ignoreCase">Значение <see langword="true" />, чтобы в операциях сравнения регистр не учитывался; значение <see langword="false" /> для учета регистра в операциях сравнения.</param>
      <returns>Новый объект <see cref="T:System.StringComparer" />, выполняющий сравнение строк в соответствии с правилами сравнения, используемыми параметром <paramref name="culture" />, и правилом учета регистра параметра <paramref name="ignoreCase" />.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="culture" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.StringComparer.Create(System.Globalization.CultureInfo,System.Globalization.CompareOptions)">
      <param name="culture" />
      <param name="options" />
    </member>
    <member name="P:System.StringComparer.CurrentCulture">
      <summary>Возвращает объект <see cref="T:System.StringComparer" />, выполняющий сравнение строк с учетом регистра, используя правила сравнения строк по словам для текущего языка и региональных параметров.</summary>
      <returns>Новый объект <see cref="T:System.StringComparer" />.</returns>
    </member>
    <member name="P:System.StringComparer.CurrentCultureIgnoreCase">
      <summary>Получает объект <see cref="T:System.StringComparer" />, выполняющий сравнения строк без учета регистра, используя правила сравнения строк по словам для текущего языка и региональных параметров.</summary>
      <returns>Новый объект для сравнения строк.</returns>
    </member>
    <member name="M:System.StringComparer.Equals(System.Object,System.Object)">
      <summary>При переопределении в производном классе позволяет определить, равны ли два объекта.</summary>
      <param name="x">Объект, сравниваемый с <paramref name="y" />.</param>
      <param name="y">Объект, сравниваемый с <paramref name="x" />.</param>
      <returns>Значение <see langword="true" />, если параметры <paramref name="x" /> и <paramref name="y" /> указывают на один и тот же объект или если параметры <paramref name="x" /> и <paramref name="y" /> относятся к одному и тому же типу объектов и эти объекты равны, или же если оба параметра <paramref name="x" /> и <paramref name="y" /> равны <see langword="null" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.StringComparer.Equals(System.String,System.String)">
      <summary>При переопределении в производном классе позволяет определить, равны ли две строки.</summary>
      <param name="x">Строка, сравниваемая с параметром <paramref name="y" />.</param>
      <param name="y">Строка, сравниваемая с параметром <paramref name="x" />.</param>
      <returns>Значение <see langword="true" />, если параметры <paramref name="x" /> и <paramref name="y" /> указывают не один и тот же объект или если параметры <paramref name="x" /> и <paramref name="y" /> равны, или же если параметры <paramref name="x" /> и <paramref name="y" /> равны <see langword="null" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.StringComparer.FromComparison(System.StringComparison)">
      <param name="comparisonType" />
    </member>
    <member name="M:System.StringComparer.GetHashCode(System.Object)">
      <summary>При переопределении в производном классе возвращает хэш-код для указанного объекта.</summary>
      <param name="obj">Объект.</param>
      <returns>32-разрядный хэш-код, вычисленный на основе значения параметра <paramref name="obj" />.</returns>
      <exception cref="T:System.ArgumentException">Недостаточно памяти для выделения буфера, необходимого для вычисления хэш-кода.</exception>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="obj" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.StringComparer.GetHashCode(System.String)">
      <summary>При переопределении в производном классе возвращает хэш-код указанной строки.</summary>
      <param name="obj">Строка.</param>
      <returns>32-разрядный хэш-код, вычисленный на основе значения параметра <paramref name="obj" />.</returns>
      <exception cref="T:System.ArgumentException">Недостаточно памяти для выделения буфера, необходимого для вычисления хэш-кода.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> — <see langword="null" />.</exception>
    </member>
    <member name="P:System.StringComparer.InvariantCulture">
      <summary>Возвращает объект <see cref="T:System.StringComparer" />, выполняющий сравнение строк с учетом регистра, используя правила сравнения строк по словам для инвариантного языка и региональных параметров.</summary>
      <returns>Новый объект <see cref="T:System.StringComparer" />.</returns>
    </member>
    <member name="P:System.StringComparer.InvariantCultureIgnoreCase">
      <summary>Возвращает объект <see cref="T:System.StringComparer" />, выполняющий сравнение строк без учета регистра, используя правила сравнения строк по словам для инвариантного языка и региональных параметров.</summary>
      <returns>Новый объект <see cref="T:System.StringComparer" />.</returns>
    </member>
    <member name="P:System.StringComparer.Ordinal">
      <summary>Возвращает объект <see cref="T:System.StringComparer" />, выполняющий сравнение строк по порядковому номеру с учетом регистра.</summary>
      <returns>Объект <see cref="T:System.StringComparer" />.</returns>
    </member>
    <member name="P:System.StringComparer.OrdinalIgnoreCase">
      <summary>Возвращает объект <see cref="T:System.StringComparer" />, выполняющий сравнение строк по порядковому номеру без учета регистра.</summary>
      <returns>Объект <see cref="T:System.StringComparer" />.</returns>
    </member>
    <member name="T:System.StringNormalizationExtensions">
      <summary>Предоставляет методы расширения для работы с нормализацией строк.</summary>
    </member>
    <member name="M:System.StringNormalizationExtensions.IsNormalized(System.String)">
      <summary>Указывает, находится ли данная строка в заданной форме нормализации Юникода C.</summary>
      <param name="value">Строка.</param>
      <returns>
        <see langword="true" />, если <paramref name="value" /> находится в форме нормализации Юникода C; в противном случае — <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="value" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> содержит недопустимые символы Юникода.</exception>
    </member>
    <member name="M:System.StringNormalizationExtensions.IsNormalized(System.String,System.Text.NormalizationForm)">
      <summary>Указывает, находится ли строка в заданной форме нормализации Юникода.</summary>
      <param name="value">Строка.</param>
      <param name="normalizationForm">Форма нормализации Юникода.</param>
      <returns>
        <see langword="true" />, если <paramref name="value" /> находится в форме нормализации <see langword="false" />; в противном случае — <paramref name="normalizationForm" />.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="value" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> содержит недопустимые символы Юникода.</exception>
    </member>
    <member name="M:System.StringNormalizationExtensions.Normalize(System.String)">
      <summary>Нормализует строку в заданную нормализованную форму Юникода C.</summary>
      <param name="value">Строка для нормализации.</param>
      <returns>Новая строка, текстовое значение которой совпадает с <paramref name="value" />, а двоичное представление находится в нормализованной форме Юникода C.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> содержит недопустимые символы Юникода.</exception>
    </member>
    <member name="M:System.StringNormalizationExtensions.Normalize(System.String,System.Text.NormalizationForm)">
      <summary>Нормализует строку в заданную нормализованную форму Юникода.</summary>
      <param name="value">Строка для нормализации.</param>
      <param name="normalizationForm">Форма нормализации Юникода.</param>
      <returns>Новая строка, текстовое значение которой совпадает с <paramref name="value" />, а двоичное представление находится в нормализованной форме <paramref name="normalizationForm" />.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="value" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> содержит недопустимые символы Юникода.</exception>
    </member>
    <member name="T:System.UriBuilder">
      <summary>Предоставляет особый конструктор для универсальных идентификаторов ресурсов (URI), а также изменяет URI для класса <see cref="T:System.Uri" />.</summary>
    </member>
    <member name="M:System.UriBuilder.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.UriBuilder" />.</summary>
    </member>
    <member name="M:System.UriBuilder.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.UriBuilder" /> с заданным универсальным кодом ресурса.</summary>
      <param name="uri">Строка URI.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="uri" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.UriFormatException">Вместо этого в .NET для приложений Магазина Windows или в переносимой библиотеке классов перехватите исключение базового класса <see cref="T:System.FormatException" />.  

          
          <paramref name="uri" /> — это строка нулевой длины или строка, которая содержит только пробелы.  

или - 
Подпрограмма синтаксического анализа обнаружила схему в недопустимой форме.  

-или- 
Средство синтаксического анализа обнаружило более двух знаков косой черты подряд в URI, который не использует схему файла.  
-или- 
 <paramref name="uri" /> не является допустимым URI.</exception>
    </member>
    <member name="M:System.UriBuilder.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.UriBuilder" /> в соответствии с заданной схемой и узлом.</summary>
      <param name="schemeName">Протокол доступа к Интернету.</param>
      <param name="hostName">DNS-имя домена или IP-адрес.</param>
    </member>
    <member name="M:System.UriBuilder.#ctor(System.String,System.String,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.UriBuilder" /> в соответствии с заданной схемой, узлом и портом.</summary>
      <param name="scheme">Протокол доступа к Интернету.</param>
      <param name="host">DNS-имя домена или IP-адрес.</param>
      <param name="portNumber">Номер порта IP, используемый службой.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="portNumber" /> имеет значение меньше –1 или больше 65 535.</exception>
    </member>
    <member name="M:System.UriBuilder.#ctor(System.String,System.String,System.Int32,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.UriBuilder" /> в соответствии с заданной схемой, узлом, номером порта и путем.</summary>
      <param name="scheme">Протокол доступа к Интернету.</param>
      <param name="host">DNS-имя домена или IP-адрес.</param>
      <param name="port">Номер порта IP, используемый службой.</param>
      <param name="pathValue">Путь к Интернет- ресурсу.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="port" /> имеет значение меньше –1 или больше 65 535.</exception>
    </member>
    <member name="M:System.UriBuilder.#ctor(System.String,System.String,System.Int32,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.UriBuilder" /> в соответствии с заданной схемой, узлом, номером порта и строкой запроса или идентификатором фрагмента.</summary>
      <param name="scheme">Протокол доступа к Интернету.</param>
      <param name="host">DNS-имя домена или IP-адрес.</param>
      <param name="port">Номер порта IP, используемый службой.</param>
      <param name="path">Путь к Интернет- ресурсу.</param>
      <param name="extraValue">Строка запроса или идентификатор фрагмента.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="extraValue" /> не принимает ни значение <see langword="null" />, ни значение <see cref="F:System.String.Empty" />, не является допустимым идентификатором фрагмента, начинающимся со знака решетки (#) и не является допустимой строкой запроса, начинающейся с вопросительного знака (?).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="port" /> имеет значение меньше –1 или больше 65 535.</exception>
    </member>
    <member name="M:System.UriBuilder.#ctor(System.Uri)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.UriBuilder" /> с указанным экземпляром <see cref="T:System.Uri" />.</summary>
      <param name="uri">Экземпляр класса <see cref="T:System.Uri" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.UriBuilder.Equals(System.Object)">
      <summary>Сравнивает существующий экземпляр <see cref="T:System.Uri" /> с содержимым <see cref="T:System.UriBuilder" />, проверяя их равенство.</summary>
      <param name="rparam">Объект для сравнения с текущим экземпляром.</param>
      <returns>Значение <see langword="true" />, если параметр <paramref name="rparam" /> представляет тот же экземпляр класса <see cref="T:System.Uri" />, что и экземпляр <see cref="T:System.Uri" />, построенный с помощью данного экземпляра класса <see cref="T:System.UriBuilder" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.UriBuilder.Fragment">
      <summary>Возвращает или задает часть фрагмента URI.</summary>
      <returns>Часть фрагмента URI. Идентификатор фрагмента (#) добавляется в начале фрагмента.</returns>
    </member>
    <member name="M:System.UriBuilder.GetHashCode">
      <summary>Возвращает хэш-код для URI.</summary>
      <returns>Хэш-код, созданный для URI.</returns>
    </member>
    <member name="P:System.UriBuilder.Host">
      <summary>Возвращает или задает DNS-имя узла или IP-адрес сервера.</summary>
      <returns>DNS-имя узла или IP-адрес сервера.</returns>
    </member>
    <member name="P:System.UriBuilder.Password">
      <summary>Возвращает или задает пароль, связанный с пользователя, получающим доступ к URI.</summary>
      <returns>Пароль пользователя, получающего доступ к URI.</returns>
    </member>
    <member name="P:System.UriBuilder.Path">
      <summary>Возвращает или задает путь к ресурсу, на который ссылается URI.</summary>
      <returns>Путь к ресурсу, на который ссылается URI.</returns>
    </member>
    <member name="P:System.UriBuilder.Port">
      <summary>Возвращает или задает номер порта URI.</summary>
      <returns>Номер порта URI.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Номер порта не может быть меньше -1 или больше 65535.</exception>
    </member>
    <member name="P:System.UriBuilder.Query">
      <summary>Возвращает или задает всевозможные сведения запроса, включенные в URI.</summary>
      <returns>Сведения запроса, включенные в URI.</returns>
    </member>
    <member name="P:System.UriBuilder.Scheme">
      <summary>Возвращает или задает имя схемы URI.</summary>
      <returns>Схема URI.</returns>
      <exception cref="T:System.ArgumentException">В схеме невозможно задать недопустимое имя схемы.</exception>
    </member>
    <member name="M:System.UriBuilder.ToString">
      <summary>Возвращает отображаемую строку для указанного экземпляра <see cref="T:System.UriBuilder" />.</summary>
      <returns>Строка, содержащая отображаемую строку <see cref="T:System.UriBuilder" /> без escape-последовательности.</returns>
      <exception cref="T:System.UriFormatException">Вместо этого в .NET для приложений Магазина Windows или в переносимой библиотеке классов перехватите исключение базового класса <see cref="T:System.FormatException" />.  


            

 Экземпляр <see cref="T:System.UriBuilder" /> имеет неверный пароль.</exception>
    </member>
    <member name="P:System.UriBuilder.Uri">
      <summary>Возвращает экземпляр <see cref="T:System.Uri" />, созданный указанным экземпляром <see cref="T:System.UriBuilder" />.</summary>
      <returns>Экземпляр <see cref="T:System.Uri" />, содержащий универсальный код ресурса (URI), созданный экземпляром <see cref="T:System.UriBuilder" />.</returns>
      <exception cref="T:System.UriFormatException">Вместо этого в .NET для приложений Магазина Windows или в переносимой библиотеке классов перехватите исключение базового класса <see cref="T:System.FormatException" />.  


            

 Универсальный код ресурса (URI), созданный с помощью свойств <see cref="T:System.UriBuilder" />, недопустимый.</exception>
    </member>
    <member name="P:System.UriBuilder.UserName">
      <summary>Имя, соответствующее пользователю, получающему доступ к URI.</summary>
      <returns>Имя пользователя, получающего доступ к URI.</returns>
    </member>
  </members>
</doc>