<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net.Sockets</name>
  </assembly>
  <members>
    <member name="T:System.Net.Sockets.IOControlCode">
      <summary>
        <see cref="M:System.Net.Sockets.Socket.IOControl(System.Int32,System.Byte[],System.Byte[])" /> メソッドでサポートされている I/O 制御コードを指定します。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AbsorbRouterAlert">
      <summary>この値は、Winsock 2 の SIO_ABSORB_RTRALERT 定数に相当します。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AddMulticastGroupOnInterface">
      <summary>インデックスで識別されるインターフェイスを使用して、マルチキャスト グループに参加します。 この制御コードは、Windows 2000 以降のオペレーティング システムでサポートされます。 この値は、Winsock 2 の SIO_INDEX_ADD_MCAST 定数に相当します。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AddressListChange">
      <summary>ソケットのプロトコル ファミリのローカル インターフェイスのリストが変更されたときの通知の受信を有効にします。 この制御コードは、Windows 2000 以降のオペレーティング システムでサポートされます。 この値は、Winsock 2 の SIO_ADDRESS_LIST_CHANGE 定数に相当します。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AddressListQuery">
      <summary>ソケットがバインドできるローカル インターフェイスのリストを返します。 この制御コードは、Windows 2000 以降のオペレーティング システムでサポートされます。 この値は、Winsock 2 の SIO_ADDRESS_LIST_QUERY 定数に相当します。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AddressListSort">
      <summary>
        <see cref="F:System.Net.Sockets.IOControlCode.AddressListQuery" /> フィールドで返される構造体をソートし、IPv6 アドレスのスコープ ID 情報を追加します。 この制御コードは、Windows XP 以降のオペレーティング システムでサポートされます。 この値は、Winsock 2 SIO_ADDRESS_LIST_SORT 定数に相当します。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AssociateHandle">
      <summary>このソケットを、対応するインターフェイスの指定したハンドルに関連付けます。 詳細については、Winsock 2 リファレンスで適切なプロトコル仕様が記載された付録を参照するか、特定の対応するインターフェイスのドキュメントを参照してください。 ソケットでサポートされる他のインターフェイスを検出し、追跡するには、この IOCTL ではなく、コンポーネント オブジェクト モデル (COM: Component Object Model) を使用することをお勧めします。 この制御コードは、COM に対応していないシステムや、その他の理由で COM を使用できないシステムの下位互換性を維持するために存在します。 この値は、Winsock 2 の SIO_ASSOCIATE_HANDLE 定数に相当します。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AsyncIO">
      <summary>データが受信を待機しているときの通知を有効にします。 この値は、Winsock 2 の FIOASYNC 定数に相当します。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.BindToInterface">
      <summary>指定したインターフェイス インデックスにソケットをバインドします。 この制御コードは、Windows 2000 以降のオペレーティング システムでサポートされます。 この値は、Winsock 2 の SIO_INDEX_BIND 定数に相当します。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.DataToRead">
      <summary>読み取り可能なバイト数を返します。 この値は、Winsock 2 の FIONREAD 定数に相当します。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.DeleteMulticastGroupFromInterface">
      <summary>マルチキャスト グループからソケットを削除します。 この制御コードは、Windows 2000 以降のオペレーティング システムでサポートされます。 この値は、Winsock 2 の SIO_INDEX_ADD_MCAST 定数に相当します。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.EnableCircularQueuing">
      <summary>受信メッセージ キューがフルの場合、キューに格納されている最も古いデータグラムを受信データグラムに置き換えます。 この値は、Winsock 2 の SIO_ENABLE_CIRCULAR_QUEUEING 定数に相当します。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.Flush">
      <summary>送信キューの内容を破棄します。 この値は、Winsock 2 の SIO_FLUSH 定数に相当します。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.GetBroadcastAddress">
      <summary>現在のソケットのアドレス ファミリのブロードキャスト アドレスが格納された SOCKADDR 構造体を返します。 返されたアドレスは、<see cref="Overload:System.Net.Sockets.Socket.SendTo" /> メソッドで使用できます。 この値は、Winsock 2 の SIO_GET_BROADCAST_ADDRESS 定数に相当します。 この値は、ユーザー データグラム プロトコル (UDP) のソケットのみで使用できます。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.GetExtensionFunctionPointer">
      <summary>Winsock 仕様の一部ではない、プロバイダー固有の関数を取得します。 関数はプロバイダーによって割り当てられた GUID を使用して指定されます。 この値は、Winsock 2 の SIO_GET_EXTENSION_FUNCTION_POINTER 定数に相当します。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.GetGroupQos">
      <summary>ソケット グループの QOS (Quality of Service) 属性を返します。 この値は、今後使用するために予約されており、Winsock 2 の SIO_GET_GROUP_QOS 定数に相当します。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.GetQos">
      <summary>ソケットに関連付けられた QOS 構造体を取得します。 この制御コードは、QOS 対応の伝送機能を提供しているプラットフォーム (Windows Me、Windows 2000、およびそれ以降) でだけサポートされます。この値は、Winsock 2 の SIO_GET_QOS 定数に相当します。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.KeepAliveValues">
      <summary>TCP Keep-alive パケットの送信とそれらの送信間隔を制御します。 この制御コードは、Windows 2000 以降のオペレーティング システムでサポートされます。 詳細については、RFC 1122 セクション 4.2.3.6 をご覧ください。 この値は、Winsock 2 の SIO_KEEPALIVE_VALS 定数に相当します。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.LimitBroadcasts">
      <summary>この値は、Winsock 2 の SIO_LIMIT_BROADCASTS 定数に相当します。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.MulticastInterface">
      <summary>発信マルチキャスト パケットで使用するインターフェイスを設定します。 インターフェイスはインデックスで識別されます。 この制御コードは、Windows 2000 以降のオペレーティング システムでサポートされます。  この値は、Winsock 2 の SIO_INDEX_MCASTIF 定数に相当します。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.MulticastScope">
      <summary>ルーターがマルチキャスト パケットを転送できる回数 (有効時間 (TTL: Time to Live))、またはホップ数を制御します。 この値は、Winsock 2 の SIO_MULTICAST_SCOPE 定数に相当します。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.MultipointLoopback">
      <summary>ソケットによって送信されたマルチキャスト データが、ソケットの受信キューで受信データとして表示されるかどうかを制御します。 この値は、Winsock 2 の SIO_MULTIPOINT_LOOPBACK 定数に相当します。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.NamespaceChange">
      <summary>名前空間のクエリが無効になったときの通知を、ソケットが受け取るかどうかを制御します。 この制御コードは、Windows XP 以降のオペレーティング システムでサポートされます。 この値は、Winsock 2 の SIO_NSP_NOTIFY_CHANGE 定数に相当します。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.NonBlockingIO">
      <summary>ソケットのブロック動作を制御します。 この制御コードに指定された引数が 0 の場合、ソケットはブロッキング モードに設定されます。 引数が 0 以外の場合、ソケットは非ブロッキング モードに設定されます。 この値は、Winsock 2 の FIONBIO 定数に相当します。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.OobDataRead">
      <summary>受信を待機している帯域外データに関する情報を返します。 この制御コードをストリーム ソケットで使用した場合、戻り値は受信できるバイト数を示します。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.QueryTargetPnpHandle">
      <summary>基になるプロバイダーの SOCKET ハンドルを取得します。 このハンドルを使用して、プラグ アンド プレイのイベント通知を受信できます。 この制御コードは、Windows 2000 以降のオペレーティング システムでサポートされます。 この値は、Winsock 2 の SIO_QUERY_TARGET_PNP_HANDLE 定数に相当します。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.ReceiveAll">
      <summary>ネットワーク上のすべての IPv4 パケットの受信を有効にします。 ソケットは、アドレス ファミリ <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> を取得している必要があります。また、ソケット タイプは <see cref="F:System.Net.Sockets.SocketType.Raw" />、プロトコル タイプは<see cref="F:System.Net.Sockets.ProtocolType.IP" /> である必要があります。 現在のユーザーがローカル コンピューターの Administrators グループに属し、ソケットが特定のポートにバインドされている必要があります。 この制御コードは、Windows 2000 以降のオペレーティング システムでサポートされます。 この値は、Winsock 2 の SIO_RCVALL 定数に相当します。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.ReceiveAllIgmpMulticast">
      <summary>ネットワーク上のすべてのインターネット グループ管理プロトコル (IGMP) パケットの受信を有効にします。 ソケットは、アドレス ファミリ <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> を取得している必要があります。また、ソケット タイプは <see cref="F:System.Net.Sockets.SocketType.Raw" />、プロトコル タイプは<see cref="F:System.Net.Sockets.ProtocolType.Igmp" /> である必要があります。 現在のユーザーがローカル コンピューターの Administrators グループに属し、ソケットが特定のポートにバインドされている必要があります。 この制御コードは、Windows 2000 以降のオペレーティング システムでサポートされます。 この値は、Winsock 2 の SIO_RCVALL_IGMPMCAST 定数に相当します。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.ReceiveAllMulticast">
      <summary>ネットワーク上のすべてのマルチキャスト IPv4 パケットの受信を有効にします。 これらは、224.0.0.0 から 239.255.255.255 の範囲の宛先アドレスを持ったパケットです。 ソケットは、アドレス ファミリ <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> を取得している必要があります。また、ソケット タイプは <see cref="F:System.Net.Sockets.SocketType.Raw" />、プロトコル タイプは<see cref="F:System.Net.Sockets.ProtocolType.Udp" /> である必要があります。 現在のユーザーがローカル コンピューターの Administrators グループに属し、ソケットが特定のポートにバインドされている必要があります。 この制御コードは、Windows 2000 以降のオペレーティング システムでサポートされます。 この値は、Winsock 2 の SIO_RCVALL_MCAST 定数に相当します。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.RoutingInterfaceChange">
      <summary>リモート エンドポイントにアクセスするために使用するローカル インターフェイスが変更されたときの通知の受信を有効にします。 この値は、Winsock 2 の SIO_ROUTING_INTERFACE_CHANGE 定数に相当します。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.RoutingInterfaceQuery">
      <summary>指定されたリモート アドレスへの接続に使用できるインターフェイスのアドレスを返します。 この値は、Winsock 2 の SIO_ROUTING_INTERFACE_QUERY 定数に相当します。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.SetGroupQos">
      <summary>ソケット グループの QOS (Quality of Service) 属性を設定します。 この値は、今後使用するために予約されており、Winsock 2 の SIO_SET_GROUP_QOS 定数に相当します。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.SetQos">
      <summary>ソケットの QOS (Quality of Service) 属性を設定します。 QOS は、ソケットの帯域幅の要件を定義します。 この制御コードは、Windows Me、Windows 2000、およびそれ以降のオペレーティング システムでサポートされます。 この値は、Winsock 2 の SIO_SET_QOS 定数に相当します。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.TranslateHandle">
      <summary>対応するインターフェイスのコンテキスト内で有効なソケットのハンドルを返します。 この値は、Winsock 2 の SIO_TRANSLATE_HANDLE 定数に相当します。</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.UnicastInterface">
      <summary>発信ユニキャスト パケットで使用するインターフェイスを設定します。 この値は、Winsock 2 の SIO_UCAST_IF 定数に相当します。</summary>
    </member>
    <member name="T:System.Net.Sockets.IPPacketInformation">
      <summary>
        <see cref="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> または <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> の呼び出しのパケット情報を示します。</summary>
    </member>
    <member name="P:System.Net.Sockets.IPPacketInformation.Address">
      <summary>
        <see cref="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> メソッドまたは <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> メソッドを呼び出した結果として受信したパケットの発信元情報を取得します。</summary>
      <returns>
        <see cref="T:System.Net.IPAddress" /> メソッドまたは <see cref="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> メソッドを呼び出した結果として受信したパケットの発信元情報を示す <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" />。 ユニキャスト アドレスから送信されたパケットの場合、<see cref="P:System.Net.Sockets.IPPacketInformation.Address" /> プロパティは送信元の <see cref="T:System.Net.IPAddress" /> を返します。マルチキャスト パケットまたはブロードキャスト パケットの場合、<see cref="P:System.Net.Sockets.IPPacketInformation.Address" /> プロパティはマルチキャストまたはブロードキャストの <see cref="T:System.Net.IPAddress" /> を返します。</returns>
    </member>
    <member name="M:System.Net.Sockets.IPPacketInformation.Equals(System.Object)">
      <summary>このインスタンスが、指定されたオブジェクトと等価であるかどうかを示す値を返します。</summary>
      <param name="comparand">このインスタンスと比較するオブジェクト。</param>
      <returns>
        <paramref name="comparand" /> が <see cref="T:System.Net.Sockets.IPPacketInformation" /> のインスタンスであり、そのインスタンスの値に等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Sockets.IPPacketInformation.GetHashCode">
      <summary>このインスタンスのハッシュ コードを返します。</summary>
      <returns>Int32 ハッシュ コード。</returns>
    </member>
    <member name="P:System.Net.Sockets.IPPacketInformation.Interface">
      <summary>
        <see cref="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> または <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> の呼び出しに関連付けられているネットワーク インターフェイス情報を取得します。</summary>
      <returns>ネットワーク インターフェイスのインデックスを表す <see cref="T:System.Int32" /> 値。 このインデックスと <see cref="M:System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces" /> を使用して、関連するインターフェイスに関する詳しい情報を取得できます。</returns>
    </member>
    <member name="M:System.Net.Sockets.IPPacketInformation.op_Equality(System.Net.Sockets.IPPacketInformation,System.Net.Sockets.IPPacketInformation)">
      <summary>指定した 2 つの <see cref="T:System.Net.Sockets.IPPacketInformation" /> インスタンスが等価であるかどうかをテストします。</summary>
      <param name="packetInformation1">等値演算子の左側に表示される <see cref="T:System.Net.Sockets.IPPacketInformation" /> インスタンス。</param>
      <param name="packetInformation2">等値演算子の右側に表示される <see cref="T:System.Net.Sockets.IPPacketInformation" /> インスタンス。</param>
      <returns>
        <see langword="true" /> と <paramref name="packetInformation1" /> が等しい場合は <paramref name="packetInformation2" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Sockets.IPPacketInformation.op_Inequality(System.Net.Sockets.IPPacketInformation,System.Net.Sockets.IPPacketInformation)">
      <summary>指定した 2 つの <see cref="T:System.Net.Sockets.IPPacketInformation" /> インスタンスが等しくないかどうかをテストします。</summary>
      <param name="packetInformation1">非等値演算子の左側に表示される <see cref="T:System.Net.Sockets.IPPacketInformation" /> インスタンス。</param>
      <param name="packetInformation2">非等値演算子の右側に表示される <see cref="T:System.Net.Sockets.IPPacketInformation" /> インスタンス。</param>
      <returns>
        <paramref name="packetInformation1" /> と <paramref name="packetInformation2" /> が等しくない場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Net.Sockets.IPProtectionLevel">
      <summary>IPv6 ソケットを特定のスコープ (同じリンク ローカルまたはサイト ローカル プレフィックスを持つアドレスなど) に制限できる値です。</summary>
    </member>
    <member name="F:System.Net.Sockets.IPProtectionLevel.EdgeRestricted">
      <summary>IP 保護レベルはエッジ制限付きです。 この値は、インターネット経由で動作するように設計されているアプリケーションによって使用されます。 この設定を使用する場合、Windows Teredo 実装を使用したネットワーク アドレス変換 (NAT: Network Address Translation) トラバーサルは使用できません。 これらのアプリケーションは、IPv4 のファイアウォールをバイパスすることがあるため、開いているポートを対象としたインターネットからの攻撃に対して堅牢である必要があります。 Windows Server 2003 と Windows XP では、ソケットの IP 保護レベルの既定値はエッジ制限付きです。</summary>
    </member>
    <member name="F:System.Net.Sockets.IPProtectionLevel.Restricted">
      <summary>IP 保護レベルは制限付きです。 この値は、インターネットのシナリオを実装しないイントラネット アプリケーションによって使用されます。 これらのアプリケーションは、一般的に、インターネット型の攻撃に対してテストが行われていなかったり堅牢ではなかったりします。 この設定を使用する場合、受信トラフィックはリンクローカルのみに制限されます。</summary>
    </member>
    <member name="F:System.Net.Sockets.IPProtectionLevel.Unrestricted">
      <summary>IP 保護レベルは無制限です。 この値は、Windows に組み込まれている IPv6 NAT Traversal 機能 (たとえば、Teredo) を使用するアプリケーションを含む、インターネット経由で動作するように設計されているアプリケーションによって使用されます。 これらのアプリケーションは、IPv4 のファイアウォールをバイパスすることがあるため、開いているポートを対象としたインターネットからの攻撃に対して堅牢である必要があります。 Windows Server 2008 R2 と Windows Vista では、ソケットの IP 保護レベルの既定値は無制限です。</summary>
    </member>
    <member name="F:System.Net.Sockets.IPProtectionLevel.Unspecified">
      <summary>IP 保護レベルは未指定です。 Windows 7 と Windows Server 2008 R2 では、ソケットの IP 保護レベルの既定値は未指定です。</summary>
    </member>
    <member name="T:System.Net.Sockets.IPv6MulticastOption">
      <summary>IPv6 マルチキャスト グループに参加するためのオプション値を格納します。</summary>
    </member>
    <member name="M:System.Net.Sockets.IPv6MulticastOption.#ctor(System.Net.IPAddress)">
      <summary>指定した IP マルチキャスト グループ用に、<see cref="T:System.Net.Sockets.IPv6MulticastOption" /> クラスの新しいバージョンを初期化します。</summary>
      <param name="group">マルチキャスト グループの <see cref="T:System.Net.IPAddress" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="group" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Net.Sockets.IPv6MulticastOption.#ctor(System.Net.IPAddress,System.Int64)">
      <summary>
        <see cref="T:System.Net.Sockets.IPv6MulticastOption" /> クラスの新しいインスタンスを、指定した IP マルチキャスト グループ アドレスとローカル インターフェイス アドレスを使用して初期化します。</summary>
      <param name="group">グループ <see cref="T:System.Net.IPAddress" />。</param>
      <param name="ifindex">ローカル インターフェイス アドレス。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ifindex" /> が 0 未満です。  

または - 
<paramref name="ifindex" /> が 0x00000000FFFFFFFF より大きい値です。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="group" /> は <see langword="null" />です。</exception>
    </member>
    <member name="P:System.Net.Sockets.IPv6MulticastOption.Group">
      <summary>マルチキャスト グループの IP アドレスを取得または設定します。</summary>
      <returns>マルチキャスト グループのインターネット アドレスを格納する <see cref="T:System.Net.IPAddress" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="group" /> は <see langword="null" />です。</exception>
    </member>
    <member name="P:System.Net.Sockets.IPv6MulticastOption.InterfaceIndex">
      <summary>マルチキャスト グループに関連付けられたインターフェイス インデックスを取得または設定します。</summary>
      <returns>インターフェイスのアドレスを指定する <see cref="T:System.UInt64" /> 値。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">設定操作として指定された値が 0 より小さいか、0x00000000FFFFFFFF を超えています。</exception>
    </member>
    <member name="T:System.Net.Sockets.LingerOption">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> メソッドまたは <see cref="M:System.Net.Sockets.Socket.Close" /> メソッドを呼び出した後で <see cref="M:System.Net.Sockets.TcpClient.Close" /> の接続を維持するかどうかを指定します。また、送信するデータが残っている場合は、接続を維持する時間を指定します。</summary>
    </member>
    <member name="M:System.Net.Sockets.LingerOption.#ctor(System.Boolean,System.Int32)">
      <summary>
        <see cref="T:System.Net.Sockets.LingerOption" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="enable">
        <see cref="M:System.Net.Sockets.Socket.Close" /> メソッドが呼び出された後も接続を維持する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="seconds">
        <see cref="M:System.Net.Sockets.Socket.Close" /> メソッドが呼び出された後、接続を維持する秒数。</param>
    </member>
    <member name="P:System.Net.Sockets.LingerOption.Enabled">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> を閉じた後も接続を維持するかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Net.Sockets.Socket" /> が呼び出された後も <see cref="M:System.Net.Sockets.Socket.Close" /> が接続を維持する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.LingerOption.LingerTime">
      <summary>送信するデータが残っている場合に、<see cref="M:System.Net.Sockets.Socket.Close" /> メソッドを呼び出した後で接続を維持する時間を取得または設定します。</summary>
      <returns>
        <see cref="M:System.Net.Sockets.Socket.Close" /> が呼び出された後、接続を維持する秒数。</returns>
    </member>
    <member name="T:System.Net.Sockets.MulticastOption">
      <summary>マルチキャスト グループへの参加および参加の取り消しに使用する <see cref="T:System.Net.IPAddress" /> の値を格納します。</summary>
    </member>
    <member name="M:System.Net.Sockets.MulticastOption.#ctor(System.Net.IPAddress)">
      <summary>指定した IP マルチキャスト グループ用に、<see cref="T:System.Net.Sockets.MulticastOption" /> クラスの新しいバージョンを初期化します。</summary>
      <param name="group">マルチキャスト グループの <see cref="T:System.Net.IPAddress" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="group" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Net.Sockets.MulticastOption.#ctor(System.Net.IPAddress,System.Int32)">
      <summary>
        <see cref="T:System.Net.Sockets.MulticastOption" /> クラスの新しいインスタンスを、指定した IP マルチキャスト グループ アドレスとインターフェイス インデックスを使用して初期化します。</summary>
      <param name="group">マルチキャスト グループの <see cref="T:System.Net.IPAddress" />。</param>
      <param name="interfaceIndex">このインターフェイスのインデックスは、マルチキャスト パケットの送受信に使用されます。</param>
    </member>
    <member name="M:System.Net.Sockets.MulticastOption.#ctor(System.Net.IPAddress,System.Net.IPAddress)">
      <summary>
        <see cref="T:System.Net.Sockets.MulticastOption" /> クラスの新しいインスタンスを、指定した IP マルチキャスト グループ アドレスと、ネットワーク インターフェイスに関連付けられたローカル IP アドレスを使用して初期化します。</summary>
      <param name="group">グループ <see cref="T:System.Net.IPAddress" />。</param>
      <param name="mcint">ローカル <see cref="T:System.Net.IPAddress" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="group" /> は <see langword="null" />です。  

または - 
<paramref name="mcint" /> は <see langword="null" />です。</exception>
    </member>
    <member name="P:System.Net.Sockets.MulticastOption.Group">
      <summary>マルチキャスト グループの IP アドレスを取得または設定します。</summary>
      <returns>マルチキャスト グループのインターネット アドレスを格納する <see cref="T:System.Net.IPAddress" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.MulticastOption.InterfaceIndex">
      <summary>マルチキャスト パケットの送受信に使用されるインターフェイスのインデックスを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Net.NetworkInformation.NetworkInterface" /> 配列要素のインデックスを表す整数。</returns>
    </member>
    <member name="P:System.Net.Sockets.MulticastOption.LocalAddress">
      <summary>マルチキャスト グループと関連付けられたローカル アドレスを取得または設定します。</summary>
      <returns>マルチキャスト グループに関連付けられているローカル アドレスを格納する <see cref="T:System.Net.IPAddress" />。</returns>
    </member>
    <member name="T:System.Net.Sockets.NetworkStream">
      <summary>ネットワーク アクセスの基になるデータ ストリームを提供します。</summary>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket)">
      <summary>指定した <see cref="T:System.Net.Sockets.NetworkStream" /> の <see cref="T:System.Net.Sockets.Socket" /> クラスの新しいインスタンスを作成します。</summary>
      <param name="socket">
        <see cref="T:System.Net.Sockets.Socket" /> がデータの送受信に使用する <see cref="T:System.Net.Sockets.NetworkStream" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="socket" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="socket" /> パラメーターが接続されていません。  

または - 
<paramref name="socket" /> パラメーターの <see cref="P:System.Net.Sockets.Socket.SocketType" /> プロパティが <see cref="F:System.Net.Sockets.SocketType.Stream" /> ではありません。  

または 
<paramref name="socket" /> パラメーターが非ブロック状態です。</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.Boolean)">
      <summary>指定した <see cref="T:System.Net.Sockets.NetworkStream" /> 所有権を使用して、指定した <see cref="T:System.Net.Sockets.Socket" /> の <see cref="T:System.Net.Sockets.Socket" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="socket">
        <see cref="T:System.Net.Sockets.Socket" /> がデータの送受信に使用する <see cref="T:System.Net.Sockets.NetworkStream" />。</param>
      <param name="ownsSocket">
        <see langword="true" /> に設定すると、<see cref="T:System.Net.Sockets.NetworkStream" /> が <see cref="T:System.Net.Sockets.Socket" /> の所有権を取得することを示します。それ以外の場合は <see langword="false" /> です。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="socket" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="socket" /> パラメーターが接続されていません。  

または - 
<paramref name="socket" /> パラメーターの <see cref="P:System.Net.Sockets.Socket.SocketType" /> プロパティの値が <see cref="F:System.Net.Sockets.SocketType.Stream" /> ではありません。  

または - 
<paramref name="socket" /> パラメーターが非ブロック状態です。</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.IO.FileAccess)">
      <summary>指定したアクセス権を持つ、指定した <see cref="T:System.Net.Sockets.NetworkStream" /> の <see cref="T:System.Net.Sockets.Socket" /> クラスの新しいインスタンスを作成します。</summary>
      <param name="socket">
        <see cref="T:System.Net.Sockets.Socket" /> がデータの送受信に使用する <see cref="T:System.Net.Sockets.NetworkStream" />。</param>
      <param name="access">
        <see cref="T:System.IO.FileAccess" /> 値のビットごとの組み合わせです。提供された <see cref="T:System.Net.Sockets.NetworkStream" /> に対する <see cref="T:System.Net.Sockets.Socket" /> に付与されているアクセス許可の種類を指定します。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="socket" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="socket" /> パラメーターが接続されていません。  
または 
<paramref name="socket" /> パラメーターの <see cref="P:System.Net.Sockets.Socket.SocketType" /> プロパティが <see cref="F:System.Net.Sockets.SocketType.Stream" /> ではありません。  
または 
<paramref name="socket" /> パラメーターが非ブロック状態です。</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.IO.FileAccess,System.Boolean)">
      <summary>指定したアクセス権と指定した <see cref="T:System.Net.Sockets.NetworkStream" /> 所有権で、指定した <see cref="T:System.Net.Sockets.Socket" /> の <see cref="T:System.Net.Sockets.Socket" /> クラスの新しいインスタンスを作成します。</summary>
      <param name="socket">
        <see cref="T:System.Net.Sockets.Socket" /> がデータの送受信に使用する <see cref="T:System.Net.Sockets.NetworkStream" />。</param>
      <param name="access">
        <see cref="T:System.IO.FileAccess" /> 値のビットごとの組み合わせです。提供された <see cref="T:System.Net.Sockets.NetworkStream" /> に対する <see cref="T:System.Net.Sockets.Socket" /> に付与されているアクセス許可の種類を指定します。</param>
      <param name="ownsSocket">
        <see langword="true" /> に設定すると、<see cref="T:System.Net.Sockets.NetworkStream" /> が <see cref="T:System.Net.Sockets.Socket" /> の所有権を取得することを示します。それ以外の場合は <see langword="false" /> です。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="socket" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="socket" /> パラメーターが接続されていません。  

または - 
<paramref name="socket" /> パラメーターの <see cref="P:System.Net.Sockets.Socket.SocketType" /> プロパティが <see cref="F:System.Net.Sockets.SocketType.Stream" /> ではありません。  

または 
<paramref name="socket" /> パラメーターが非ブロック状態です。</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>
        <see cref="T:System.Net.Sockets.NetworkStream" /> からの非同期の読み取りを開始します。</summary>
      <param name="buffer">
        <see cref="T:System.Byte" /> 型の配列。<see cref="T:System.Net.Sockets.NetworkStream" /> から読み取られたデータを格納するメモリ内の場所です。</param>
      <param name="offset">データの格納を開始する <paramref name="buffer" /> 内の場所。</param>
      <param name="size">
        <see cref="T:System.Net.Sockets.NetworkStream" /> から読み取るバイト数。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> の完了時に実行される <see cref="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> デリゲート。</param>
      <param name="state">追加のユーザー定義のデータを格納するオブジェクト。</param>
      <returns>非同期呼び出しを表す <see cref="T:System.IAsyncResult" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> パラメーターが 0 未満です。  

または - 
<paramref name="offset" /> パラメーターが <paramref name="buffer" /> パラメーターの長さを超えています。  

または - 
<paramref name="size" /> が 0 未満です。  

または - 
<paramref name="size" /> が、<paramref name="buffer" /> パラメーターの値を引いた <paramref name="offset" /> の長さを超えています。</exception>
      <exception cref="T:System.IO.IOException">基になっている <see cref="T:System.Net.Sockets.Socket" /> が閉じています。  

または - 
ネットワークからの読み取り中にエラーが発生しました。  

または 
ソケットへのアクセス中にエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> が閉じています。</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>ストリームへの非同期の書き込みを開始します。</summary>
      <param name="buffer">
        <see cref="T:System.Byte" /> に書き込むデータを格納する <see cref="T:System.Net.Sockets.NetworkStream" /> 型の配列。</param>
      <param name="offset">データの送信を開始する <paramref name="buffer" /> 内の場所。</param>
      <param name="size">
        <see cref="T:System.Net.Sockets.NetworkStream" /> に書き込むバイト数。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> の完了時に実行される <see cref="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> デリゲート。</param>
      <param name="state">追加のユーザー定義のデータを格納するオブジェクト。</param>
      <returns>非同期呼び出しを表す <see cref="T:System.IAsyncResult" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> パラメーターが 0 未満です。  
または 
<paramref name="offset" /> パラメーターが <paramref name="buffer" /> の長さを超えています。  

または - 
<paramref name="size" /> パラメーターが 0 未満です。  

または - 
<paramref name="size" /> パラメーターが、<paramref name="buffer" /> パラメーターの値を引いた <paramref name="offset" /> の長さを超えています。</exception>
      <exception cref="T:System.IO.IOException">基になっている <see cref="T:System.Net.Sockets.Socket" /> が閉じています。  
または 
ネットワークへの書き込み中にエラーが発生しました。  

または - 
ソケットへのアクセス中にエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> が閉じています。</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.CanRead">
      <summary>
        <see cref="T:System.Net.Sockets.NetworkStream" /> が読み取りをサポートしているかどうかを示す値を取得します。</summary>
      <returns>ストリームからデータを読み取ることができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.CanSeek">
      <summary>ストリームがシークをサポートしているかどうかを示す値を取得します。 このプロパティは現在サポートされていません。このプロパティは常に <see langword="false" /> を返します。</summary>
      <returns>常に、<see cref="T:System.Net.Sockets.NetworkStream" /> がストリームの特定の場所をシークできないことを示す <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.CanTimeout">
      <summary>タイムアウトのプロパティが <see cref="T:System.Net.Sockets.NetworkStream" /> で使用可能かどうかを示します。</summary>
      <returns>常に <see langword="true" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.CanWrite">
      <summary>
        <see cref="T:System.Net.Sockets.NetworkStream" /> が書き込みをサポートしているかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Net.Sockets.NetworkStream" /> にデータを書き込むことができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</returns>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Close(System.Int32)">
      <summary>指定した時間待機した後、<see cref="T:System.Net.Sockets.NetworkStream" /> を閉じて、データを送信できるようにします。</summary>
      <param name="timeout">閉じる前に、残りのデータを送信するために待機するミリ秒数を指定する 32 ビット符号付き整数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> パラメーターが -1 未満。</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.DataAvailable">
      <summary>
        <see cref="T:System.Net.Sockets.NetworkStream" /> に読み取り対象のデータがあるかどうかを示す値を取得します。</summary>
      <returns>ストリームからデータを読み取ることができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> が閉じています。</exception>
      <exception cref="T:System.IO.IOException">基になっている <see cref="T:System.Net.Sockets.Socket" /> が閉じています。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> プロパティを使用して特定のエラー コードを取得してください。エラーの詳細については、Windows Socket Version 2 API のエラー コードに関するドキュメントを参照してください。</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Dispose(System.Boolean)">
      <summary>
        <see cref="T:System.Net.Sockets.NetworkStream" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.EndRead(System.IAsyncResult)">
      <summary>非同期読み取りの終了を処理します。</summary>
      <param name="asyncResult">非同期呼び出しを表す <see cref="T:System.IAsyncResult" />。</param>
      <returns>
        <see cref="T:System.Net.Sockets.NetworkStream" /> から読み取るバイト数。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.IO.IOException">基になっている <see cref="T:System.Net.Sockets.Socket" /> が閉じています。  

または - 
ソケットへのアクセス中にエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> が閉じています。</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.EndWrite(System.IAsyncResult)">
      <summary>非同期書き込みの終了を処理します。</summary>
      <param name="asyncResult">非同期呼び出しを表す <see cref="T:System.IAsyncResult" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.IO.IOException">基になっている <see cref="T:System.Net.Sockets.Socket" /> が閉じています。  

または - 
ネットワークへの書き込み中にエラーが発生しました。  

または 
ソケットへのアクセス中にエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> が閉じています。</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Finalize">
      <summary>
        <see cref="T:System.Net.Sockets.NetworkStream" /> によって使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Flush">
      <summary>ストリームからデータをフラッシュします。 このメソッドは将来使用するために予約されています。</summary>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.FlushAsync(System.Threading.CancellationToken)">
      <summary>非同期操作として、ストリームからデータをフラッシュします。</summary>
      <param name="cancellationToken">この操作を取り消す必要があることを示す通知を伝達するために使用するキャンセル トークン。</param>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.Length">
      <summary>ストリームで使用できるデータ長を取得します。 このプロパティは現在サポートされていないため、常に <see cref="T:System.NotSupportedException" /> をスローします。</summary>
      <returns>ストリームで使用できるデータ長。</returns>
      <exception cref="T:System.NotSupportedException">このプロパティの使用。</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.Position">
      <summary>ストリーム内の現在位置を取得または設定します。 このプロパティは現在サポートされていないため、常に <see cref="T:System.NotSupportedException" /> をスローします。</summary>
      <returns>ストリームの現在の位置。</returns>
      <exception cref="T:System.NotSupportedException">このプロパティの使用。</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Net.Sockets.NetworkStream" /> からデータを読み取り、バイト配列に格納します。</summary>
      <param name="buffer">
        <see cref="T:System.Byte" /> 型の配列。<see cref="T:System.Net.Sockets.NetworkStream" /> から読み取られたデータを格納するメモリ内の場所です。</param>
      <param name="offset">データの格納を開始する <paramref name="buffer" /> 内の場所。</param>
      <param name="size">
        <see cref="T:System.Net.Sockets.NetworkStream" /> から読み取るバイト数。</param>
      <returns>
        <see cref="T:System.Net.Sockets.NetworkStream" /> から読み取るバイト数。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が 0 未満です。  

または - 
<paramref name="offset" /> が <paramref name="buffer" /> の長さを超えています。  

または - 
<paramref name="size" /> が 0 未満です。  

または - 
<paramref name="size" /> が、<paramref name="buffer" /> から <paramref name="offset" /> を引いた長さを超えています。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> は読み取りをサポートしていません。</exception>
      <exception cref="">ソケットへのアクセス中にエラーが発生しました。

または -

ネットワークからの読み取りでエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> が閉じています。</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Read(System.Span{System.Byte})">
      <summary>
        <see cref="T:System.Net.Sockets.NetworkStream" /> からデータを読み取り、メモリ内のバイトのスパンに格納します。</summary>
      <param name="buffer">
        <see cref="T:System.Net.Sockets.NetworkStream" /> から読み取られたデータを格納するメモリの領域。</param>
      <returns>
        <see cref="T:System.Net.Sockets.NetworkStream" /> から読み取るバイト数。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> は読み取りをサポートしていません。</exception>
      <exception cref="">ソケットへのアクセス中にエラーが発生しました。
または
ネットワークからの読み取りでエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> が閉じています。</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.Readable">
      <summary>
        <see cref="T:System.Net.Sockets.NetworkStream" /> を読み取ることができるかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Net.Sockets.NetworkStream" /> を読み取ることができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</returns>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>
        <see cref="T:System.Net.Sockets.NetworkStream" /> からデータを読み取り、バイト配列の指定された範囲に非同期操作として格納します。</summary>
      <param name="buffer">データを書き込むバッファー。</param>
      <param name="offset">データの格納を開始する <paramref name="buffer" /> 内の場所。</param>
      <param name="size">
        <see cref="T:System.Net.Sockets.NetworkStream" /> から読み取るバイト数。</param>
      <param name="cancellationToken">キャンセル要求を監視するためのトークン。</param>
      <returns>非同期の読み取り操作を表すタスク。 その <see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティの値には、<paramref name="buffer" /> に読み取られたバイトの合計数が含まれます。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> は読み取りをサポートしていません。</exception>
      <exception cref="">ソケットへのアクセス中にエラーが発生しました。

または -

ネットワークからの読み取りでエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> が閉じています。</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <summary>
        <see cref="T:System.Net.Sockets.NetworkStream" /> からデータを読み取り、非同期操作としてバイト メモリ範囲に格納します。</summary>
      <param name="buffer">データを書き込むバッファー。</param>
      <param name="cancellationToken">キャンセル要求を監視するためのトークン。</param>
      <returns>非同期の読み取り操作を表すタスク <see cref="T:System.Threading.Tasks.ValueTask`1" />。 その <see cref="P:System.Threading.Tasks.ValueTask`1.Result" /> プロパティの値には、<paramref name="buffer" /> に読み取られたバイトの合計数が含まれます。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> は読み取りをサポートしていません。</exception>
      <exception cref="">ソケットへのアクセス中にエラーが発生しました。

または -

ネットワークからの読み取りでエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> が閉じています。</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.ReadByte">
      <summary>
        <see cref="T:System.Net.Sockets.NetworkStream" /> から 1 バイトを読み取り、ストリーム内の位置を 1 バイト進めます。または、ストリームの末尾の場合は -1 を返します。</summary>
      <returns>
        <see langword="Int32" /> にキャストされた符号なしバイト。ストリームの末尾の場合は -1。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> は読み取りをサポートしていません。</exception>
      <exception cref="">ソケットへのアクセス中にエラーが発生しました。

または -

ネットワークからの読み取りでエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> が閉じています。</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.ReadTimeout">
      <summary>読み取り操作がデータを待機する時間を取得または設定します。</summary>
      <returns>読み取り操作が失敗するまでの経過時間 (ミリ秒単位) を指定する <see cref="T:System.Int32" />。 既定値は <see cref="F:System.Threading.Timeout.Infinite" /> で、読み取り操作がタイムアウトしないことを示します。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">指定した値が 0 以下のため <see cref="F:System.Threading.Timeout.Infinite" /> ではありません。</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>ストリームの現在位置を特定の値に設定します。 このメソッドは現在サポートされていないため、常に <see cref="T:System.NotSupportedException" /> をスローします。</summary>
      <param name="offset">このパラメーターは使用されません。</param>
      <param name="origin">このパラメーターは使用されません。</param>
      <returns>ストリーム内の位置。</returns>
      <exception cref="T:System.NotSupportedException">このプロパティの使用。</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.SetLength(System.Int64)">
      <summary>ストリームの長さを設定します。 このメソッドは、常に <see cref="T:System.NotSupportedException" /> をスローします。</summary>
      <param name="value">このパラメーターは使用されません。</param>
      <exception cref="T:System.NotSupportedException">このプロパティの使用。</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.Socket">
      <summary>基になる <see cref="T:System.Net.Sockets.Socket" /> を取得します。</summary>
      <returns>基になるネットワーク接続を表す <see cref="T:System.Net.Sockets.Socket" />。</returns>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>指定された範囲のバイト配列から <see cref="T:System.Net.Sockets.NetworkStream" /> にデータを書き込みます。</summary>
      <param name="buffer">
        <see cref="T:System.Byte" /> に書き込むデータを格納する <see cref="T:System.Net.Sockets.NetworkStream" /> 型の配列。</param>
      <param name="offset">データの書き込みを開始する <paramref name="buffer" /> 内の場所。</param>
      <param name="size">
        <see cref="T:System.Net.Sockets.NetworkStream" /> に書き込むバイト数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> パラメーターが 0 未満です。  

または - 
<paramref name="offset" /> パラメーターが <paramref name="buffer" /> の長さを超えています。  

または 
<paramref name="size" /> パラメーターが 0 未満です。  

または - 
<paramref name="size" /> パラメーターが、<paramref name="buffer" /> パラメーターの値を引いた <paramref name="offset" /> の長さを超えています。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> では、書き込みがサポートされません。</exception>
      <exception cref="T:System.IO.IOException">ソケットへのアクセス中にエラーが発生しました。
または
ネットワークへの書き込み中にエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> が閉じています。</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Write(System.ReadOnlySpan{System.Byte})">
      <summary>読み取り専用のバイト スパンから <see cref="T:System.Net.Sockets.NetworkStream" /> にデータを書き込みます。</summary>
      <param name="buffer">
        <see cref="T:System.Net.Sockets.NetworkStream" /> に書き込むデータ。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> では、書き込みがサポートされません。</exception>
      <exception cref="T:System.IO.IOException">ソケットへのアクセス中にエラーが発生しました。

または -

ネットワークへの書き込み中にエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> が閉じています。</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.Writeable">
      <summary>
        <see cref="T:System.Net.Sockets.NetworkStream" /> が書き込み可能かどうかを示す値を取得します。</summary>
      <returns>ストリームにデータを書き込むことができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</returns>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>バイト配列の指定された範囲から <see cref="T:System.Net.Sockets.NetworkStream" /> に、データを非同期操作として書き込みます。</summary>
      <param name="buffer">
        <see cref="T:System.Net.Sockets.NetworkStream" /> に書き込むデータを含むバイト配列。</param>
      <param name="offset">データの書き込みを開始する <paramref name="buffer" /> 内の場所。</param>
      <param name="size">
        <see cref="T:System.Net.Sockets.NetworkStream" /> に書き込むバイト数。</param>
      <param name="cancellationToken">キャンセル要求を監視するためのトークン。</param>
      <returns>非同期の書き込み操作を表すタスク。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> パラメーターが 0 未満です。  
または 
<paramref name="offset" /> パラメーターが <paramref name="buffer" /> の長さを超えています。  

または - 
<paramref name="size" /> パラメーターが 0 未満です。  

または - 
<paramref name="size" /> パラメーターが、<paramref name="buffer" /> パラメーターの値を引いた <paramref name="offset" /> の長さを超えています。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> では、書き込みがサポートされません。</exception>
      <exception cref="T:System.IO.IOException">ネットワークへの書き込み中にエラーが発生しました。  

または -  

 ソケットへのアクセス中にエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> が閉じています。</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
      <summary>読み取り専用メモリのバイト メモリ範囲から <see cref="T:System.Net.Sockets.NetworkStream" /> に、データを非同期操作として書き込みます。</summary>
      <param name="buffer">
        <see cref="T:System.Net.Sockets.NetworkStream" /> に書き込むデータが含まれるメモリの領域。</param>
      <param name="cancellationToken">キャンセル要求を監視するためのトークン。</param>
      <returns>非同期の書き込み操作を表すタスク。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> では、書き込みがサポートされません。</exception>
      <exception cref="T:System.IO.IOException">ソケットへのアクセス中にエラーが発生しました。
または
ネットワークへの書き込み中にエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> が閉じています。</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.WriteByte(System.Byte)">
      <summary>
        <see cref="T:System.Net.Sockets.NetworkStream" /> の現在位置にバイトを書き込み、ストリームの位置を 1 バイト進めます。</summary>
      <param name="value">ストリームに書き込むバイト。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> では、書き込みがサポートされません。</exception>
      <exception cref="T:System.IO.IOException">ソケットへのアクセス中にエラーが発生しました。

または -

ネットワークへの書き込み中にエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> が閉じています。</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.WriteTimeout">
      <summary>書き込み操作がデータを待機する時間を取得または設定します。</summary>
      <returns>書き込み操作が失敗するまでの経過時間 (ミリ秒単位) を指定する <see cref="T:System.Int32" />。 既定値は <see cref="F:System.Threading.Timeout.Infinite" /> で、書き込み操作がタイムアウトしないことを示します。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">指定した値が 0 以下のため <see cref="F:System.Threading.Timeout.Infinite" /> ではありません。</exception>
    </member>
    <member name="T:System.Net.Sockets.ProtocolFamily">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> クラスのインスタンスが使用できるプロトコルの種類を指定します。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.AppleTalk">
      <summary>AppleTalk プロトコル。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Atm">
      <summary>ネイティブ ATM サービス プロトコル。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Banyan">
      <summary>Banyan プロトコル。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Ccitt">
      <summary>X.25 などの CCITT プロトコル。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Chaos">
      <summary>MIT CHAOS プロトコル。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Cluster">
      <summary>Microsoft クラスター製品のプロトコル。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.ControllerAreaNetwork">
      <summary>Controller Area Network のプロトコル。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.DataKit">
      <summary>DataKit プロトコル。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.DataLink">
      <summary>ダイレクト データ リンク プロトコル。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.DecNet">
      <summary>DECNet プロトコル。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Ecma">
      <summary>ECMA (European Computer Manufacturers Association) プロトコル。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.FireFox">
      <summary>FireFox プロトコル。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.HyperChannel">
      <summary>NSC HyperChannel プロトコル。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Ieee12844">
      <summary>IEEE 1284.4 ワークグループ プロトコル。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.ImpLink">
      <summary>ARPANET IMP プロトコル。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.InterNetwork">
      <summary>IP version 4 プロトコル。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.InterNetworkV6">
      <summary>IP version 6 プロトコル。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Ipx">
      <summary>IPX プロトコルまたは SPX プロトコル。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Irda">
      <summary>IrDA プロトコル。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Iso">
      <summary>ISO プロトコル。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Lat">
      <summary>LAT プロトコル。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Max">
      <summary>MAX プロトコル。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.NetBios">
      <summary>NetBIOS プロトコル。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Netlink">
      <summary>Netlink プロトコル。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.NetworkDesigners">
      <summary>Network Designers OSI ゲートウェイ対応プロトコル。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.NS">
      <summary>Xerox NS プロトコル。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Osi">
      <summary>OSI プロトコル。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Packet">
      <summary>低レベル パケットのプロトコル。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Pup">
      <summary>PUP プロトコル。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Sna">
      <summary>IBM SNA プロトコル。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Unix">
      <summary>Unix local to host プロトコル。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Unknown">
      <summary>未確認のプロトコル。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Unspecified">
      <summary>指定されていないプロトコル。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.VoiceView">
      <summary>VoiceView プロトコル。</summary>
    </member>
    <member name="T:System.Net.Sockets.ProtocolType">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> クラスがサポートするプロトコルを指定します。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Ggp">
      <summary>ゲートウェイ間プロトコル。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Icmp">
      <summary>インターネット コントロール メッセージ プロトコル。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IcmpV6">
      <summary>IPv6 用インターネット コントロール メッセージ プロトコル。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Idp">
      <summary>インターネット データグラム プロトコル。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Igmp">
      <summary>インターネット グループ管理プロトコル。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IP">
      <summary>インターネット プロトコル。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPSecAuthenticationHeader">
      <summary>IPv6 認証ヘッダー。 詳細については、RFC 2292 セクション 2.2.1 (https://www.ietf.org) を参照してください。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPSecEncapsulatingSecurityPayload">
      <summary>IPv6 カプセル化セキュリティ ペイロード ヘッダー。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv4">
      <summary>インターネット プロトコル Version 4。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6">
      <summary>インターネット プロトコル Version 6 (IPv6)。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6DestinationOptions">
      <summary>IPv6 終点オプション ヘッダー。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6FragmentHeader">
      <summary>IPv6 フラグメント ヘッダー。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6HopByHopOptions">
      <summary>IPv6 ホップ バイ ホップ オプション ヘッダー。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6NoNextHeader">
      <summary>IPv6 次ヘッダーなし。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6RoutingHeader">
      <summary>IPv6 経路制御ヘッダー。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Ipx">
      <summary>インターネット パケット交換プロトコル。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.ND">
      <summary>Net Disk プロトコル (非公式)。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Pup">
      <summary>PARC Universal Packet プロトコル。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Raw">
      <summary>Raw IP パケット プロトコル。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Spx">
      <summary>順次編成パック交換プロトコル。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.SpxII">
      <summary>順次編成パック交換 Version 2 プロトコル。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Tcp">
      <summary>伝送制御プロトコル。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Udp">
      <summary>ユーザー データグラム プロトコル。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Unknown">
      <summary>未確認のプロトコル。</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Unspecified">
      <summary>指定されていないプロトコル。</summary>
    </member>
    <member name="T:System.Net.Sockets.SafeSocketHandle">
      <summary>ソケット ハンドルのラッパー クラスを表します。</summary>
    </member>
    <member name="M:System.Net.Sockets.SafeSocketHandle.#ctor(System.IntPtr,System.Boolean)">
      <summary>
        <see cref="T:System.Net.Sockets.SafeSocketHandle" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="preexistingHandle">使用する既存のハンドル。</param>
      <param name="ownsHandle">終了処理中にハンドルを確実にリリースする場合は <see langword="true" />。信頼性の高いリリースを実行しない場合は <see langword="false" /> (お勧めしません)。</param>
    </member>
    <member name="T:System.Net.Sockets.SelectMode">
      <summary>
        <see cref="M:System.Net.Sockets.Socket.Poll(System.Int32,System.Net.Sockets.SelectMode)" /> メソッドのポーリング モードを定義します。</summary>
    </member>
    <member name="F:System.Net.Sockets.SelectMode.SelectError">
      <summary>エラー ステータス モード。</summary>
    </member>
    <member name="F:System.Net.Sockets.SelectMode.SelectRead">
      <summary>読み取りステータス モード。</summary>
    </member>
    <member name="F:System.Net.Sockets.SelectMode.SelectWrite">
      <summary>書き込みステータス モード。</summary>
    </member>
    <member name="T:System.Net.Sockets.SendPacketsElement">
      <summary>
        <see cref="T:System.Net.Sockets.SendPacketsElement" /> 配列の要素を表します。</summary>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[])">
      <summary>指定したバッファーを使用して、<see cref="T:System.Net.Sockets.SendPacketsElement" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="buffer">
        <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> メソッドを使用して送信するデータのバイト配列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> パラメーターを null にすることはできません。</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32)">
      <summary>バッファーの指定された範囲を使用して、<see cref="T:System.Net.Sockets.SendPacketsElement" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="buffer">
        <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> メソッドを使用して送信するデータのバイト配列。</param>
      <param name="offset">
        <paramref name="buffer" /> の先頭から、<paramref name="buffer" /> パラメーターで指定されたデータの送信を開始する <paramref name="buffer" /> 内の位置までの、バイト単位のオフセット。</param>
      <param name="count">
        <paramref name="offset" /> パラメーターから開始される、送信するバイト数。 <paramref name="count" /> がゼロの場合、バイトは送信されません。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> パラメーターを null にすることはできません。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> パラメーターおよび <paramref name="count" /> パラメーターはゼロ以上の値にする必要があります。  
<paramref name="offset" /> および <paramref name="count" /> は、バッファーのサイズ未満にする必要があります。</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)">
      <summary>バッファーの指定された範囲を使用し、さらに、この要素をソケット レイヤーからトランスポートへの単一の送信要求内にある次の要素と結合するオプションを使用して、<see cref="T:System.Net.Sockets.SendPacketsElement" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="buffer">
        <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> メソッドを使用して送信するデータのバイト配列。</param>
      <param name="offset">
        <paramref name="buffer" /> の先頭から、<paramref name="buffer" /> パラメーターで指定されたデータの送信を開始する <paramref name="buffer" /> 内の位置までの、バイト単位のオフセット。</param>
      <param name="count">
        <paramref name="offset" /> パラメーターから開始される、送信するバイト数。 <paramref name="count" /> がゼロの場合、バイトは送信されません。</param>
      <param name="endOfPacket">この要素をソケット レイヤーからトランスポートへの単一の送信要求内にある次の要素と結合できないように指定するブール値。 このフラグは、データグラム ソケットまたはメッセージ指向のソケット上の各メッセージ内容を詳細に制御するために使用されます。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> パラメーターを null にすることはできません。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> パラメーターおよび <paramref name="count" /> パラメーターはゼロ以上の値にする必要があります。  
<paramref name="offset" /> および <paramref name="count" /> は、バッファーのサイズ未満にする必要があります。</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.IO.FileStream)">
      <summary>指定した <see cref="T:System.IO.FileStream" /> オブジェクトを使用して、<see cref="T:System.Net.Sockets.SendPacketsElement" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="fileStream">
        <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> メソッドを使用して転送されるファイル。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="fileStream" /> は非同期の読み取りと書き込みのために開かれません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileStream" /> に null は指定できません。</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.IO.FileStream,System.Int64,System.Int32)">
      <summary>
        <see cref="T:System.IO.FileStream" /> オブジェクトの指定された範囲を使用して、<see cref="T:System.Net.Sockets.SendPacketsElement" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="fileStream">
        <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> メソッドを使用して転送されるファイル。</param>
      <param name="offset">ファイルの先頭から、そのファイル内でバイト単位での送信を開始する位置までの、バイト単位のオフセット。</param>
      <param name="count">
        <paramref name="offset" /> から開始される、送信するバイト数。 <paramref name="count" /> がゼロの場合、ファイル全体が送信されます。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="fileStream" /> パラメーターは、非同期の読み取りと書き込みのために開かれている必要があります。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileStream" /> パラメーターとして <see langword="null" /> を使用することはできません。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> パラメーターおよび <paramref name="count" /> パラメーターはゼロ以上の値にする必要があります。</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.IO.FileStream,System.Int64,System.Int32,System.Boolean)">
      <summary>
        <see cref="T:System.IO.FileStream" /> オブジェクトの指定された範囲を使用し、さらに、この要素をソケット レイヤーからトランスポートへの単一の送信要求内にある次の要素と結合するオプションを使用して、<see cref="T:System.Net.Sockets.SendPacketsElement" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="fileStream">
        <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> メソッドを使用して転送されるファイル。</param>
      <param name="offset">ファイルの先頭から、そのファイル内でバイト単位での送信を開始する位置までの、バイト単位のオフセット。</param>
      <param name="count">offset パラメーターから開始される、送信するバイト数。 数がゼロの場合、ファイル全体が送信されます。</param>
      <param name="endOfPacket">この要素をソケット レイヤーからトランスポートへの単一の送信要求内にある次の要素と結合できないように指定します。 このフラグは、データグラム ソケットまたはメッセージ指向のソケット上の各メッセージ内容を詳細に制御するために使用されます。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="fileStream" /> パラメーターは、非同期の読み取りと書き込みのために開かれている必要があります。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileStream" /> パラメーターとして <see langword="null" /> を使用することはできません。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> パラメーターおよび <paramref name="count" /> パラメーターはゼロ以上の値にする必要があります。</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String)">
      <summary>指定したファイルを使用して、<see cref="T:System.Net.Sockets.SendPacketsElement" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="filepath">
        <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> メソッドを使用して転送されるファイルのファイル名。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filepath" /> パラメーターを null にすることはできません。</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32)">
      <summary>ファイルの指定された範囲を使用して、<see cref="T:System.Net.Sockets.SendPacketsElement" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="filepath">
        <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> メソッドを使用して転送されるファイルのファイル名。</param>
      <param name="offset">ファイルの先頭から <paramref name="filepath" /> パラメーターで指定されたファイルの送信を開始するファイル内の位置までの、バイト単位のオフセット。</param>
      <param name="count">
        <paramref name="offset" /> パラメーターから開始される、送信するバイト数。 <paramref name="count" /> がゼロの場合、ファイル全体が送信されます。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filepath" /> パラメーターを null にすることはできません。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> パラメーターおよび <paramref name="count" /> パラメーターはゼロ以上の値にする必要があります。</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32,System.Boolean)">
      <summary>ファイルの指定された範囲を使用し、さらに、この要素をソケット レイヤーからトランスポートへの単一の送信要求内にある次の要素と結合するオプションを使用して、<see cref="T:System.Net.Sockets.SendPacketsElement" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="filepath">
        <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> メソッドを使用して転送されるファイルのファイル名。</param>
      <param name="offset">ファイルの先頭から <paramref name="filepath" /> パラメーターで指定されたファイルの送信を開始するファイル内の位置までの、バイト単位のオフセット。</param>
      <param name="count">
        <paramref name="offset" /> パラメーターから開始される、送信するバイト数。 <paramref name="count" /> がゼロの場合、ファイル全体が送信されます。</param>
      <param name="endOfPacket">この要素をソケット レイヤーからトランスポートへの単一の送信要求内にある次の要素と結合できないように指定するブール値。 このフラグは、データグラム ソケットまたはメッセージ指向のソケット上の各メッセージ内容を詳細に制御するために使用されます。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filepath" /> パラメーターを null にすることはできません。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> パラメーターおよび <paramref name="count" /> パラメーターはゼロ以上の値にする必要があります。</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int64,System.Int32)">
      <summary>ファイルの指定された範囲を使用して、<see cref="T:System.Net.Sockets.SendPacketsElement" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="filepath">
        <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> メソッドを使用して転送されるファイルのファイル名。</param>
      <param name="offset">ファイルの先頭から <paramref name="filepath" /> パラメーターで指定されたファイルの送信を開始するファイル内の位置までの、バイト単位のオフセット。</param>
      <param name="count">
        <paramref name="offset" /> から開始される、送信するバイト数。 <paramref name="count" /> がゼロの場合、ファイル全体が送信されます。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filepath" /> パラメーターとして <see langword="null" /> を使用することはできません。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> パラメーターおよび <paramref name="count" /> パラメーターはゼロ以上の値にする必要があります。</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int64,System.Int32,System.Boolean)">
      <summary>ファイルの指定された範囲を使用し、さらに、この要素をソケット レイヤーからトランスポートへの単一の送信要求内にある次の要素と結合するオプションを使用して、<see cref="T:System.Net.Sockets.SendPacketsElement" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="filepath">
        <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> メソッドを使用して転送されるファイルのファイル名。</param>
      <param name="offset">ファイルの先頭から <paramref name="filepath" /> パラメーターで指定されたファイルの送信を開始するファイル内の位置までの、バイト単位のオフセット。</param>
      <param name="count">
        <paramref name="offset" /> パラメーターから開始される、送信するバイト数。 <paramref name="count" /> がゼロの場合、ファイル全体が送信されます。</param>
      <param name="endOfPacket">この要素をソケット レイヤーからトランスポートへの単一の送信要求内にある次の要素と結合できないように指定します。 このフラグは、データグラム ソケットまたはメッセージ指向のソケット上の各メッセージ内容を詳細に制御するために使用されます。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filepath" /> パラメーターとして <see langword="null" /> を使用することはできません。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> パラメーターおよび <paramref name="count" /> パラメーターはゼロ以上の値にする必要があります。</exception>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.Buffer">
      <summary>
        <see cref="T:System.Net.Sockets.SendPacketsElement" /> オブジェクトが <paramref name="buffer" /> パラメーターで初期化されている場合に、送信されるバッファーを取得します。</summary>
      <returns>
        <see cref="T:System.Net.Sockets.SendPacketsElement" />オブジェクトが<paramref name="buffer" />パラメーターで初期化された場合に送信するバイトバッファー。</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.Count">
      <summary>送信するバイト数を取得します。</summary>
      <returns>
        <see cref="T:System.Net.Sockets.SendPacketsElement" /> クラスが <paramref name="count" /> パラメーターで初期化されている場合に送信するバイト数。</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.EndOfPacket">
      <summary>この要素をソケット レイヤーからトランスポートへの単一の送信要求内にある次の要素と結合できないようにするかどうかを指定するブール値を取得します。</summary>
      <returns>この要素を単一の送信要求内にある次の要素と結合できないようにするかどうかを指定するブール値。</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.FilePath">
      <summary>
        <see cref="T:System.Net.Sockets.SendPacketsElement" /> オブジェクトが <paramref name="filepath" /> パラメーターで初期化されている場合に送信するファイルのファイル名を取得します。</summary>
      <returns>オブジェクトが<see cref="T:System.Net.Sockets.SendPacketsElement" /><paramref name="filepath" />パラメーターで初期化された場合に送信するファイルのファイル名。</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.FileStream">
      <summary>
        <see cref="T:System.Net.Sockets.SendPacketsElement" /> オブジェクトが <see cref="T:System.IO.FileStream" /> パラメーターで初期化されている場合に送信するファイルのオブジェクト表現を取得します。</summary>
      <returns>オブジェクトが<see cref="T:System.Net.Sockets.SendPacketsElement" /><see cref="T:System.IO.FileStream" />パラメーターで初期化された場合に送信するファイルのオブジェクト表現。</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.Offset">
      <summary>データ バッファーまたはファイルの先頭から、バッファーまたはファイル内のデータの送信を開始する位置までの、バイト単位のオフセットを取得します。</summary>
      <returns>データ バッファーまたはファイルの先頭からバッファーまたはファイル内のデータの送信を開始する位置までの、バイト単位のオフセット。</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.OffsetLong">
      <summary>データ バッファーまたはファイルの先頭から、バッファーまたはファイル内のデータの送信を開始する位置までの、バイト単位のオフセットを取得します。</summary>
      <returns>データ バッファーまたはファイルの先頭からバッファーまたはファイル内のデータの送信を開始する位置までの、バイト単位のオフセット。</returns>
    </member>
    <member name="T:System.Net.Sockets.Socket">
      <summary>Berkeley ソケット インターフェイスを実装します。</summary>
    </member>
    <member name="M:System.Net.Sockets.Socket.#ctor(System.Net.Sockets.AddressFamily,System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)">
      <summary>指定したアドレス ファミリ、ソケットの種類、およびプロトコルを使用して、<see cref="T:System.Net.Sockets.Socket" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="addressFamily">
        <see cref="T:System.Net.Sockets.AddressFamily" /> 値のいずれか。</param>
      <param name="socketType">
        <see cref="T:System.Net.Sockets.SocketType" /> 値のいずれか 1 つ。</param>
      <param name="protocolType">
        <see cref="T:System.Net.Sockets.ProtocolType" /> 値のいずれか 1 つ。</param>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="addressFamily" />、<paramref name="socketType" />、および <paramref name="protocolType" /> を組み合わせると、無効なソケットになります。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.#ctor(System.Net.Sockets.SocketInformation)">
      <summary>
        <see cref="M:System.Net.Sockets.Socket.DuplicateAndClose(System.Int32)" /> から返された値を指定して、<see cref="T:System.Net.Sockets.Socket" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="socketInformation">
        <see cref="M:System.Net.Sockets.Socket.DuplicateAndClose(System.Int32)" /> によって返されるソケット情報。</param>
    </member>
    <member name="M:System.Net.Sockets.Socket.#ctor(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)">
      <summary>指定したソケットの種類とプロトコルを使用して、<see cref="T:System.Net.Sockets.Socket" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="socketType">
        <see cref="T:System.Net.Sockets.SocketType" /> 値のいずれか 1 つ。</param>
      <param name="protocolType">
        <see cref="T:System.Net.Sockets.ProtocolType" /> 値のいずれか 1 つ。</param>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketType" /> と <paramref name="protocolType" /> を組み合わせると、無効なソケットになります。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Accept">
      <summary>新しく作成された接続に対して新しい <see cref="T:System.Net.Sockets.Socket" /> を作成します。</summary>
      <returns>新しく作成された接続に対する <see cref="T:System.Net.Sockets.Socket" />。</returns>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
      <exception cref="T:System.InvalidOperationException">受け入れ元のソケットが、接続をリッスンしていません。 <see cref="M:System.Net.Sockets.Socket.Accept" /> の前に <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> および <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> を呼び出す必要があります。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>受信接続の試行を受け入れる非同期操作を開始します。</summary>
      <param name="e">この非同期ソケット操作に使用する <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> オブジェクト。</param>
      <returns>I/O 操作が保留中の場合は <see langword="true" />。 操作の完了時に、<paramref name="e" /> パラメーターの <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> イベントが発生します。  
 I/O 操作が同期的に完了した場合は <see langword="false" />。 この場合、<paramref name="e" /> パラメーターの <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> イベントは発生しません。メソッド呼び出しから制御が戻った直後に、パラメーターとして渡された <paramref name="e" /> オブジェクトを調べて操作の結果を取得できます。</returns>
      <exception cref="T:System.ArgumentException">引数が有効ではありません。 この例外は、提供されたバッファーのサイズが不足している場合に発生します。 バッファーは、2 * (sizeof(SOCKADDR_STORAGE + 16) バイト以上であることが必要です。  
この例外は、複数のバッファーが指定されているときに、<see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> プロパティが null 値ではない場合にも発生します。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">引数が範囲外です。 この例外は、<see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Count" /> が 0 未満の場合に発生します。</exception>
      <exception cref="T:System.InvalidOperationException">無効な操作が要求されました。 この例外は、受け入れ側の <see cref="T:System.Net.Sockets.Socket" /> が接続をリッスンしていない場合、または受け入れられたソケットがバインドされている場合に発生します。  
<see cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> メソッドを呼び出す前に、<see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> メソッドと <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> メソッドを呼び出す必要があります。  
この例外は、ソケットが既に接続されている、またはソケット操作が指定された <paramref name="e" /> パラメーターを使用して既に進行中の場合にも発生します。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.NotSupportedException">このメソッドには Windows XP 以降が必要です。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.AddressFamily">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> のアドレス ファミリを取得します。</summary>
      <returns>
        <see cref="T:System.Net.Sockets.AddressFamily" /> 値のいずれか 1 つ。</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.Available">
      <summary>ネットワークから受信した、読み取り可能なデータ量を取得します。</summary>
      <returns>ネットワークから受信した、読み取り可能なデータのバイト数。</returns>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)">
      <summary>受信接続の試行を受け入れる非同期操作を開始します。</summary>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">この要求のステータス情報を格納するオブジェクト。</param>
      <returns>非同期の <see cref="T:System.Net.Sockets.Socket" /> 作成を参照する <see cref="T:System.IAsyncResult" />。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> オブジェクトは閉じられています。</exception>
      <exception cref="T:System.NotSupportedException">このメソッドには Windows NT が必要です。</exception>
      <exception cref="T:System.InvalidOperationException">受け入れ元のソケットが、接続をリッスンしていません。 <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" /> の前に <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> および <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> を呼び出す必要があります。  
または 
受け入れられたソケットがバインドされています。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="receiveSize" /> が 0 未満です。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginAccept(System.Int32,System.AsyncCallback,System.Object)">
      <summary>受信接続の試行を受け入れる非同期操作を開始し、クライアント アプリケーションによって送信されるデータの最初のブロックを受信します。</summary>
      <param name="receiveSize">送信元から受け入れるバイト数。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">この要求のステータス情報を格納するオブジェクト。</param>
      <returns>非同期の <see cref="T:System.Net.Sockets.Socket" /> 作成を参照する <see cref="T:System.IAsyncResult" />。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> オブジェクトは閉じられています。</exception>
      <exception cref="T:System.NotSupportedException">このメソッドには Windows NT が必要です。</exception>
      <exception cref="T:System.InvalidOperationException">受け入れ元のソケットが、接続をリッスンしていません。 <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" /> の前に <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> および <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> を呼び出す必要があります。  
または 
受け入れられたソケットがバインドされています。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="receiveSize" /> が 0 未満です。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginAccept(System.Net.Sockets.Socket,System.Int32,System.AsyncCallback,System.Object)">
      <summary>指定したソケットから受信接続の試行を受け入れる非同期操作を開始し、クライアント アプリケーションによって送信されるデータの最初のブロックを受信します。</summary>
      <param name="acceptSocket">受け入れた <see cref="T:System.Net.Sockets.Socket" /> オブジェクト。 この値は <see langword="null" /> の場合もあります。</param>
      <param name="receiveSize">受信する最大バイト数。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">この要求のステータス情報を格納するオブジェクト。</param>
      <returns>非同期の <see cref="T:System.Net.Sockets.Socket" /> オブジェクトの作成を参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> オブジェクトは閉じられています。</exception>
      <exception cref="T:System.NotSupportedException">このメソッドには Windows NT が必要です。</exception>
      <exception cref="T:System.InvalidOperationException">受け入れ元のソケットが、接続をリッスンしていません。 <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" /> の前に <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> および <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> を呼び出す必要があります。  
または 
受け入れられたソケットがバインドされています。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="receiveSize" /> が 0 未満です。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginConnect(System.Net.EndPoint,System.AsyncCallback,System.Object)">
      <summary>リモート ホスト接続への非同期要求を開始します。</summary>
      <param name="remoteEP">リモート ホストを表す <see cref="T:System.Net.EndPoint" />。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">この要求のステータス情報を格納するオブジェクト。</param>
      <returns>非同期接続を参照する <see cref="T:System.IAsyncResult" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="remoteEP" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
      <exception cref="T:System.Security.SecurityException">コール スタックの上位にある呼び出し元が、要求された操作のアクセス許可を保持していません。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.Socket" /> は <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> を呼び出すことでリッスン状態になっているか、非同期操作は既に実行されています。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
      <summary>リモート ホスト接続への非同期要求を開始します。 ホストは <see cref="T:System.Net.IPAddress" /> とポート番号で指定されます。</summary>
      <param name="address">リモート ホストの <see cref="T:System.Net.IPAddress" />。</param>
      <param name="port">リモート ホストのポート番号。</param>
      <param name="requestCallback">接続操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">接続操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <paramref name="requestCallback" /> デリゲートに渡されます。</param>
      <returns>非同期接続を参照する <see cref="T:System.IAsyncResult" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Net.Sockets.Socket" /> はソケット ファミリに含まれません。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">ポート番号が無効です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="address" /> の長さが 0 です。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.Socket" /> は <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> を呼び出すことでリッスン状態になっているか、非同期操作は既に実行されています。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
      <summary>リモート ホスト接続への非同期要求を開始します。 ホストは、<see cref="T:System.Net.IPAddress" /> 配列とポート番号で指定されます。</summary>
      <param name="addresses">リモート ホストを指定する、少なくとも 1 つの <see cref="T:System.Net.IPAddress" />。</param>
      <param name="port">リモート ホストのポート番号。</param>
      <param name="requestCallback">接続操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">接続操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <paramref name="requestCallback" /> デリゲートに渡されます。</param>
      <returns>非同期接続を参照する <see cref="T:System.IAsyncResult" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="addresses" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
      <exception cref="T:System.NotSupportedException">このメソッドは <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> または <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> を使用するソケットで有効です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">ポート番号が無効です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="address" /> の長さが 0 です。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.Socket" /> は <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> を呼び出すことでリッスン状態になっているか、非同期操作は既に実行されています。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
      <summary>リモート ホスト接続への非同期要求を開始します。 ホストはホスト名とポート番号で指定されます。</summary>
      <param name="host">リモート ホストの名前。</param>
      <param name="port">リモート ホストのポート番号。</param>
      <param name="requestCallback">接続操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">接続操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <paramref name="requestCallback" /> デリゲートに渡されます。</param>
      <returns>非同期接続を参照する <see cref="T:System.IAsyncResult" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="host" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
      <exception cref="T:System.NotSupportedException">このメソッドは <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> または <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> ファミリ内のソケットに対して正しいものです。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">ポート番号が無効です。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.Socket" /> は <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> を呼び出すことでリッスン状態になっているか、非同期操作は既に実行されています。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginDisconnect(System.Boolean,System.AsyncCallback,System.Object)">
      <summary>リモート エンドポイントからの切断の非同期要求を開始します。</summary>
      <param name="reuseSocket">接続の終了後、このソケットが再利用できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">この要求のステータス情報を格納するオブジェクト。</param>
      <returns>非同期操作を参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <exception cref="T:System.NotSupportedException">Windows 2000 以前のオペレーティング システムです。このメソッドを使用するには、Windows XP が必要です。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> オブジェクトは閉じられています。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)">
      <summary>接続されている <see cref="T:System.Net.Sockets.Socket" /> からの非同期のデータ受信を開始します。</summary>
      <param name="buffer">受信したデータの保存場所となる <see cref="T:System.Byte" /> 型の配列。</param>
      <param name="offset">受信データを格納する、<paramref name="buffer" />パラメーター内の、インデックス番号が 0 から始まる位置。</param>
      <param name="size">受信するバイト数。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 値のビットごとの組み合わせ。</param>
      <param name="callback">操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">受信操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> デリゲートに渡されます。</param>
      <returns>非同期の読み取りを参照する <see cref="T:System.IAsyncResult" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が 0 未満です。  

または - 
<paramref name="offset" /> が <paramref name="buffer" /> の長さを超えています。  

または - 
<paramref name="size" /> が 0 未満です。  

または - 
<paramref name="size" /> が、<paramref name="buffer" /> の長さから <paramref name="offset" /> パラメーターの値を引いた値を超えています。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@,System.AsyncCallback,System.Object)">
      <summary>接続されている <see cref="T:System.Net.Sockets.Socket" /> からの非同期のデータ受信を開始します。</summary>
      <param name="buffer">受信したデータの保存場所となる <see cref="T:System.Byte" /> 型の配列。</param>
      <param name="offset">受信データを格納する <paramref name="buffer" />内の場所。</param>
      <param name="size">受信するバイト数。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 値のビットごとの組み合わせ。</param>
      <param name="errorCode">ソケット エラーを格納する <see cref="T:System.Net.Sockets.SocketError" /> オブジェクト。</param>
      <param name="callback">操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">受信操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> デリゲートに渡されます。</param>
      <returns>非同期の読み取りを参照する <see cref="T:System.IAsyncResult" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が 0 未満です。  

または - 
<paramref name="offset" /> が <paramref name="buffer" /> の長さを超えています。  

または - 
<paramref name="size" /> が 0 未満です。  

または - 
<paramref name="size" /> が、<paramref name="buffer" /> の長さから <paramref name="offset" /> パラメーターの値を引いた値を超えています。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)">
      <summary>接続されている <see cref="T:System.Net.Sockets.Socket" /> からの非同期のデータ受信を開始します。</summary>
      <param name="buffers">受信したデータの保存場所となる <see cref="T:System.Byte" /> 型の配列。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 値のビットごとの組み合わせ。</param>
      <param name="callback">操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">受信操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> デリゲートに渡されます。</param>
      <returns>非同期の読み取りを参照する <see cref="T:System.IAsyncResult" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@,System.AsyncCallback,System.Object)">
      <summary>接続されている <see cref="T:System.Net.Sockets.Socket" /> からの非同期のデータ受信を開始します。</summary>
      <param name="buffers">受信したデータの保存場所となる <see cref="T:System.Byte" /> 型の配列。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 値のビットごとの組み合わせ。</param>
      <param name="errorCode">ソケット エラーを格納する <see cref="T:System.Net.Sockets.SocketError" /> オブジェクト。</param>
      <param name="callback">操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">受信操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> デリゲートに渡されます。</param>
      <returns>非同期の読み取りを参照する <see cref="T:System.IAsyncResult" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)">
      <summary>指定したネットワーク デバイスから、データの非同期の受信を開始します。</summary>
      <param name="buffer">受信したデータの保存場所となる <see cref="T:System.Byte" /> 型の配列。</param>
      <param name="offset">データを格納する、<paramref name="buffer" />パラメーター内の、インデックス番号が 0 から始まる位置。</param>
      <param name="size">受信するバイト数。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 値のビットごとの組み合わせ。</param>
      <param name="remoteEP">データのソースを表す <see cref="T:System.Net.EndPoint" />。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">この要求のステータス情報を格納するオブジェクト。</param>
      <returns>非同期の読み取りを参照する <see cref="T:System.IAsyncResult" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> は <see langword="null" />です。  

または - 
<paramref name="remoteEP" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が 0 未満です。  
または 
 <paramref name="offset" /> が <paramref name="buffer" /> の長さを超えています。  
または 
 <paramref name="size" /> が 0 未満です。  

または - 
<paramref name="size" /> が、 <paramref name="buffer" /> の長さから <paramref name="offset" /> パラメーターの値を引いた値を超えています。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
      <exception cref="T:System.Security.SecurityException">コール スタックの上位にある呼び出し元が、要求された操作のアクセス許可を保持していません。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)">
      <summary>指定した <see cref="T:System.Net.Sockets.SocketFlags" /> を使用し、指定したバイト数のデータの非同期受信を開始して、データ バッファー内の指定した位置に格納します。さらに、エンドポイントとパケット情報を格納します。</summary>
      <param name="buffer">受信したデータの保存場所となる <see cref="T:System.Byte" /> 型の配列。</param>
      <param name="offset">データを格納する、<paramref name="buffer" />パラメーター内の、インデックス番号が 0 から始まる位置。</param>
      <param name="size">受信するバイト数。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 値のビットごとの組み合わせ。</param>
      <param name="remoteEP">データのソースを表す <see cref="T:System.Net.EndPoint" />。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">この要求のステータス情報を格納するオブジェクト。</param>
      <returns>非同期の読み取りを参照する <see cref="T:System.IAsyncResult" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> が <see langword="null" /> です。  

または - 
<paramref name="remoteEP" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が 0 未満です。  

または - 
<paramref name="offset" /> が <paramref name="buffer" /> の長さを超えています。  

または 
 <paramref name="size" /> が 0 未満です。  
または 
 <paramref name="size" /> が、 <paramref name="buffer" /> の長さから <paramref name="offset" /> パラメーターの値を引いた値を超えています。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
      <exception cref="T:System.NotSupportedException">Windows 2000 以前のオペレーティング システムです。このメソッドを使用するには、Windows XP が必要です。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)">
      <summary>接続されている <see cref="T:System.Net.Sockets.Socket" /> にデータを非同期的に送信します。</summary>
      <param name="buffer">送信するデータを格納する <see cref="T:System.Byte" /> 型の配列。</param>
      <param name="offset">送信を開始する、<paramref name="buffer" /> パラメーター内の、インデックス番号が 0 から始まる位置。</param>
      <param name="size">送信するバイト数。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 値のビットごとの組み合わせ。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">この要求のステータス情報を格納するオブジェクト。</param>
      <returns>非同期の送信を参照する <see cref="T:System.IAsyncResult" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。 以下の解説を参照してください。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が 0 未満です。  

または - 
<paramref name="offset" /> が <paramref name="buffer" /> の長さより小さい値です。  

または 
 <paramref name="size" /> が 0 未満です。  
または 
 <paramref name="size" /> が、 <paramref name="buffer" /> の長さから <paramref name="offset" /> パラメーターの値を引いた値を超えています。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@,System.AsyncCallback,System.Object)">
      <summary>接続されている <see cref="T:System.Net.Sockets.Socket" /> にデータを非同期的に送信します。</summary>
      <param name="buffer">送信するデータを格納する <see cref="T:System.Byte" /> 型の配列。</param>
      <param name="offset">送信を開始する、<paramref name="buffer" /> パラメーター内の、インデックス番号が 0 から始まる位置。</param>
      <param name="size">送信するバイト数。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 値のビットごとの組み合わせ。</param>
      <param name="errorCode">ソケット エラーを格納する <see cref="T:System.Net.Sockets.SocketError" /> オブジェクト。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">この要求のステータス情報を格納するオブジェクト。</param>
      <returns>非同期の送信を参照する <see cref="T:System.IAsyncResult" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。 以下の解説を参照してください。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が 0 未満です。  

または - 
<paramref name="offset" /> が <paramref name="buffer" /> の長さより小さい値です。  

または - 
<paramref name="size" /> が 0 未満です。  

または - 
<paramref name="size" /> が、 <paramref name="buffer" /> の長さから <paramref name="offset" /> パラメーターの値を引いた値を超えています。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)">
      <summary>接続されている <see cref="T:System.Net.Sockets.Socket" /> にデータを非同期的に送信します。</summary>
      <param name="buffers">送信するデータを格納する <see cref="T:System.Byte" /> 型の配列。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 値のビットごとの組み合わせ。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">この要求のステータス情報を格納するオブジェクト。</param>
      <returns>非同期の送信を参照する <see cref="T:System.IAsyncResult" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffers" /> が空です。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。 以下の解説を参照してください。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@,System.AsyncCallback,System.Object)">
      <summary>接続されている <see cref="T:System.Net.Sockets.Socket" /> にデータを非同期的に送信します。</summary>
      <param name="buffers">送信するデータを格納する <see cref="T:System.Byte" /> 型の配列。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 値のビットごとの組み合わせ。</param>
      <param name="errorCode">ソケット エラーを格納する <see cref="T:System.Net.Sockets.SocketError" /> オブジェクト。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">この要求のステータス情報を格納するオブジェクト。</param>
      <returns>非同期の送信を参照する <see cref="T:System.IAsyncResult" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffers" /> が空です。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。 以下の解説を参照してください。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.AsyncCallback,System.Object)">
      <summary>
        <see cref="F:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread" /> フラグを使用して、接続されている <see cref="T:System.Net.Sockets.Socket" /> オブジェクトにファイル <paramref name="fileName" /> を送信します。</summary>
      <param name="fileName">送信するファイルのパスと名前を格納する文字列。 このパラメーターは、<see langword="null" /> に設定できます。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">この要求のステータス情報を格納するオブジェクト。</param>
      <returns>非同期送信を表す <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> オブジェクトは閉じられています。</exception>
      <exception cref="T:System.NotSupportedException">ソケットがリモート ホストに接続されていません。</exception>
      <exception cref="T:System.IO.FileNotFoundException">ファイル <paramref name="fileName" /> が見つかりませんでした。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。 以下の解説を参照してください。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.Byte[],System.Byte[],System.Net.Sockets.TransmitFileOptions,System.AsyncCallback,System.Object)">
      <summary>接続された <see cref="T:System.Net.Sockets.Socket" /> オブジェクトに、ファイルとデータのバッファーを非同期的に送信します。</summary>
      <param name="fileName">送信されるファイルのパスと名前を格納する文字列。 このパラメーターは、<see langword="null" /> に設定できます。</param>
      <param name="preBuffer">ファイルが送信される前に送信されるデータを格納する <see cref="T:System.Byte" /> 配列。 このパラメーターは、<see langword="null" /> に設定できます。</param>
      <param name="postBuffer">ファイルが送信された後で送信されるデータを格納する <see cref="T:System.Byte" /> 配列。 このパラメーターは、<see langword="null" /> に設定できます。</param>
      <param name="flags">
        <see cref="T:System.Net.Sockets.TransmitFileOptions" /> 値のビットごとの組み合わせ。</param>
      <param name="callback">このオプションの完了時に呼び出される <see cref="T:System.AsyncCallback" /> デリゲート。 このパラメーターは、<see langword="null" /> に設定できます。</param>
      <param name="state">この要求の状態情報を格納するユーザー定義のオブジェクト。 このパラメーターは、<see langword="null" /> に設定できます。</param>
      <returns>非同期操作を表す <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> オブジェクトは閉じられています。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。 以下の解説を参照してください。</exception>
      <exception cref="T:System.NotSupportedException">オペレーティング システムは Windows NT 以降ではありません。  
または
 ソケットがリモート ホストに接続されていません。</exception>
      <exception cref="T:System.IO.FileNotFoundException">ファイル <paramref name="fileName" /> が見つかりませんでした。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint,System.AsyncCallback,System.Object)">
      <summary>特定のリモート ホストにデータを非同期的に送信します。</summary>
      <param name="buffer">送信するデータを格納する <see cref="T:System.Byte" /> 型の配列。</param>
      <param name="offset">データ送信を開始する、<paramref name="buffer" /> 内の、インデックス番号が 0 から始まる位置。</param>
      <param name="size">送信するバイト数。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 値のビットごとの組み合わせ。</param>
      <param name="remoteEP">リモート デバイスを表す <see cref="T:System.Net.EndPoint" />。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">この要求のステータス情報を格納するオブジェクト。</param>
      <returns>非同期の送信を参照する <see cref="T:System.IAsyncResult" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> は <see langword="null" />です。  

または - 
<paramref name="remoteEP" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が 0 未満です。  

または - 
<paramref name="offset" /> が <paramref name="buffer" /> の長さを超えています。  

または - 
<paramref name="size" /> が 0 未満です。  

または - 
<paramref name="size" /> が、 <paramref name="buffer" /> の長さから <paramref name="offset" /> パラメーターの値を引いた値を超えています。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
      <exception cref="T:System.Security.SecurityException">コール スタックの上位にある呼び出し元が、要求された操作のアクセス許可を保持していません。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> をローカル エンドポイントと関連付けます。</summary>
      <param name="localEP">
        <see cref="T:System.Net.Sockets.Socket" /> に関連付けるローカル <see cref="T:System.Net.EndPoint" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localEP" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
      <exception cref="T:System.Security.SecurityException">コール スタックの上位にある呼び出し元が、要求された操作のアクセス許可を保持していません。</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.Blocking">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> がブロッキング モードかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Net.Sockets.Socket" /> がブロックする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.CancelConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>リモート ホスト接続への非同期要求を取り消します。</summary>
      <param name="e">
        <see cref="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType,System.Net.Sockets.SocketAsyncEventArgs)" /> メソッドの 1 つを呼び出してリモート ホストへの接続を要求するために使用する <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> パラメーターおよび <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> を null 値にすることはできません。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
      <exception cref="T:System.Security.SecurityException">コール スタックの上位にある呼び出し元が、要求された操作のアクセス許可を保持していません。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Close">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> 接続を閉じ、関連付けられたすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.Net.Sockets.Socket.Close(System.Int32)">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> 接続を閉じ、すべての関連付けられているリソースを指定したタイムアウトで解放して、キューに置かれたデータの送信を許可します。</summary>
      <param name="timeout">最大 <paramref name="timeout" /> 秒まで待ってから残りのデータを送信し、ソケットを閉じます。</param>
    </member>
    <member name="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)">
      <summary>リモート ホストへの接続を確立します。</summary>
      <param name="remoteEP">リモート デバイスを表す <see cref="T:System.Net.EndPoint" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="remoteEP" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
      <exception cref="T:System.Security.SecurityException">コール スタックの上位にある呼び出し元が、要求された操作のアクセス許可を保持していません。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.Socket" /> は <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> を呼び出すことでリッスン状態になっています。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Connect(System.Net.IPAddress,System.Int32)">
      <summary>リモート ホストへの接続を確立します。 ホストは、IP アドレスとポート番号で指定されます。</summary>
      <param name="address">リモート ホストの IP アドレス。</param>
      <param name="port">リモート ホストのポート番号。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">ポート番号が無効です。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
      <exception cref="T:System.NotSupportedException">このメソッドは、<see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> または <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> ファミリのソケットで有効です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="address" /> の長さが 0 です。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.Socket" /> は <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> を呼び出すことでリッスン状態になっています。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Connect(System.Net.IPAddress[],System.Int32)">
      <summary>リモート ホストへの接続を確立します。 ホストは、IP アドレスの配列とポート番号で指定されます。</summary>
      <param name="addresses">リモート ホストの IP アドレス。</param>
      <param name="port">リモート ホストのポート番号。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="addresses" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">ポート番号が無効です。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
      <exception cref="T:System.NotSupportedException">このメソッドは、<see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> または <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> ファミリのソケットで有効です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="address" /> の長さが 0 です。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.Socket" /> は <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> を呼び出すことでリッスン状態になっています。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Connect(System.String,System.Int32)">
      <summary>リモート ホストへの接続を確立します。 ホストはホスト名とポート番号で指定されます。</summary>
      <param name="host">リモート ホストの名前。</param>
      <param name="port">リモート ホストのポート番号。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="host" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">ポート番号が無効です。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
      <exception cref="T:System.NotSupportedException">このメソッドは、<see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> または <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> ファミリのソケットで有効です。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.Socket" /> は <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> を呼び出すことでリッスン状態になっています。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>リモート ホストに接続する非同期要求を開始します。</summary>
      <param name="e">この非同期ソケット操作に使用する <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> オブジェクト。</param>
      <returns>I/O 操作が保留中の場合は <see langword="true" />。 操作の完了時に、<paramref name="e" /> パラメーターの <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> イベントが発生します。  
 I/O 操作が同期的に完了した場合は <see langword="false" />。 この場合、<paramref name="e" /> パラメーターの <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> イベントは発生しません。メソッド呼び出しから制御が戻った直後に、パラメーターとして渡された <paramref name="e" /> オブジェクトを調べて操作の結果を取得できます。</returns>
      <exception cref="T:System.ArgumentException">引数が有効ではありません。 この例外は、複数のバッファーが指定されているときに、<see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> プロパティが null 値ではない場合に発生します。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> パラメーターおよび <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> を null 値にすることはできません。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.Socket" /> がリッスンしているか、<paramref name="e" /> パラメーターで指定されている <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> オブジェクトを使用してソケット操作が既に進行していました。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.NotSupportedException">このメソッドには Windows XP 以降が必要です。 この例外は、ローカル エンドポイントと <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> が同じアドレス ファミリではない場合にも発生します。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
      <exception cref="T:System.Security.SecurityException">コール スタックの上位にある呼び出し元が、要求された操作のアクセス許可を保持していません。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType,System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>リモート ホストに接続する非同期要求を開始します。</summary>
      <param name="socketType">
        <see cref="T:System.Net.Sockets.SocketType" /> 値のいずれか 1 つ。</param>
      <param name="protocolType">
        <see cref="T:System.Net.Sockets.ProtocolType" /> 値のいずれか。</param>
      <param name="e">この非同期ソケット操作に使用する <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> オブジェクト。</param>
      <returns>I/O 操作が保留中の場合は <see langword="true" />。 操作の完了時に、<paramref name="e" /> パラメーターの <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> イベントが発生します。  
 I/O 操作が同期的に完了した場合は <see langword="false" />。 この場合、<paramref name="e" /> パラメーターの <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> イベントは発生しません。メソッド呼び出しから制御が戻った直後に、パラメーターとして渡された <paramref name="e" /> オブジェクトを調べて操作の結果を取得できます。</returns>
      <exception cref="T:System.ArgumentException">引数が有効ではありません。 この例外は、複数のバッファーが指定されているときに、<see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> プロパティが null 値ではない場合に発生します。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> パラメーターおよび <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> を null 値にすることはできません。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.Socket" /> がリッスンしているか、<paramref name="e" /> パラメーターで指定されている <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> オブジェクトを使用してソケット操作が既に進行していました。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.NotSupportedException">このメソッドには Windows XP 以降が必要です。 この例外は、ローカル エンドポイントと <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> が同じアドレス ファミリではない場合にも発生します。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
      <exception cref="T:System.Security.SecurityException">コール スタックの上位にある呼び出し元が、要求された操作のアクセス許可を保持していません。</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.Connected">
      <summary>最後に実行された <see cref="Overload:System.Net.Sockets.Socket.Send" /> 操作または <see cref="Overload:System.Net.Sockets.Socket.Receive" /> 操作の時点で、<see cref="T:System.Net.Sockets.Socket" /> がリモート ホストに接続されていたかどうかを示す値を取得します。</summary>
      <returns>最後に実行された操作の時点で、<see cref="T:System.Net.Sockets.Socket" /> がリモート リソースに接続されていた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Disconnect(System.Boolean)">
      <summary>ソケット接続を閉じ、ソケットを再利用できるようにします。</summary>
      <param name="reuseSocket">現在の接続の終了後、このソケットが再利用できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <exception cref="T:System.PlatformNotSupportedException">このメソッドは、Windows 2000 以前でのみサポートされます。それ以外の場合は、例外がスローされます。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> オブジェクトは閉じられています。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.DisconnectAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>リモート エンドポイントからの切断の非同期要求を開始します。</summary>
      <param name="e">この非同期ソケット操作に使用する <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> オブジェクト。</param>
      <returns>I/O 操作が保留中の場合は <see langword="true" />。 操作の完了時に、<paramref name="e" /> パラメーターの <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> イベントが発生します。  
 I/O 操作が同期的に完了した場合は <see langword="false" />。 この場合、<paramref name="e" /> パラメーターの <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> イベントは発生しません。メソッド呼び出しから制御が戻った直後に、パラメーターとして渡された <paramref name="e" /> オブジェクトを調べて操作の結果を取得できます。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> パラメーターを null 値にすることはできません。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="e" /> パラメーターに指定された <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> オブジェクトを使用してソケット操作が既に進行していました。</exception>
      <exception cref="T:System.NotSupportedException">このメソッドには Windows XP 以降が必要です。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Dispose">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> クラスの現在のインスタンスによって使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.Net.Sockets.Socket.Dispose(System.Boolean)">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> が使用しているアンマネージド リソースを解放します。オプションでマネージド リソースも破棄します。</summary>
      <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="P:System.Net.Sockets.Socket.DontFragment">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> でインターネット プロトコル (IP) データグラムの断片化を許可するかどうかを指定する <see cref="T:System.Boolean" /> 値を、取得または設定します。</summary>
      <returns>
        <see cref="T:System.Net.Sockets.Socket" /> でデータグラムの断片化を許可する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
      <exception cref="T:System.NotSupportedException">このプロパティは、<see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> ファミリまたは <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> ファミリのソケットに対してだけ設定できます。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.DualMode">
      <summary>
        <see cref="T:System.Boolean" /> が IPv4 と IPv6 の両方に使用されるデュアル モード ソケットであるかどうか指定する <see cref="T:System.Net.Sockets.Socket" /> 値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Net.Sockets.Socket" /> がデュアルモードのソケットの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.DuplicateAndClose(System.Int32)">
      <summary>ターゲット プロセスのソケット参照を複製してこのプロセスのソケットを閉じます。</summary>
      <param name="targetProcessId">ソケット参照の複製が作成されるターゲット プロセスの ID。</param>
      <returns>ターゲット プロセスに渡されるソケット参照。</returns>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="targetProcessID" /> が有効なプロセス ID ではありません。 

または - 
ソケット参照の複製に失敗しました。</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.EnableBroadcast">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> でブロードキャスト パケットの送受信を許可するかどうかを指定する <see cref="T:System.Boolean" /> 値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Net.Sockets.Socket" /> でブロードキャスト パケットを許可する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
      <exception cref="T:System.Net.Sockets.SocketException">このオプションは、データグラム ソケットに対してだけ有効です。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndAccept(System.Byte[]@,System.IAsyncResult)">
      <summary>受信接続の試行を非同期的に受け入れ、新しい <see cref="T:System.Net.Sockets.Socket" /> オブジェクトを作成してリモート ホスト通信を処理します。 このメソッドは、転送される初期データを格納するバッファーを返します。</summary>
      <param name="buffer">転送されたバイト数を格納する <see cref="T:System.Byte" /> 型の配列。</param>
      <param name="asyncResult">この非同期操作のステータス情報だけではなく、任意のユーザー定義のデータも格納する <see cref="T:System.IAsyncResult" /> オブジェクト。</param>
      <returns>リモート ホストとの通信を処理する <see cref="T:System.Net.Sockets.Socket" /> オブジェクト。</returns>
      <exception cref="T:System.NotSupportedException">このメソッドには Windows NT が必要です。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> オブジェクトは閉じられています。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> が空です。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" /> への呼び出しで <paramref name="asyncResult" /> が作成されませんでした。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" /> メソッドは既に呼び出されました。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <see cref="T:System.Net.Sockets.Socket" /> へのアクセスを試みているときにエラーが発生しました。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndAccept(System.Byte[]@,System.Int32@,System.IAsyncResult)">
      <summary>受信接続の試行を非同期的に受け入れ、新しい <see cref="T:System.Net.Sockets.Socket" /> オブジェクトを作成してリモート ホスト通信を処理します。 このメソッドは、初期データと、転送されたバイト数を格納するバッファーを返します。</summary>
      <param name="buffer">転送されたバイト数を格納する <see cref="T:System.Byte" /> 型の配列。</param>
      <param name="bytesTransferred">転送されたバイト数。</param>
      <param name="asyncResult">この非同期操作のステータス情報だけではなく、任意のユーザー定義のデータも格納する <see cref="T:System.IAsyncResult" /> オブジェクト。</param>
      <returns>リモート ホストとの通信を処理する <see cref="T:System.Net.Sockets.Socket" /> オブジェクト。</returns>
      <exception cref="T:System.NotSupportedException">このメソッドには Windows NT が必要です。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> オブジェクトは閉じられています。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> が空です。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" /> への呼び出しで <paramref name="asyncResult" /> が作成されませんでした。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" /> メソッドは既に呼び出されました。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <see cref="T:System.Net.Sockets.Socket" /> へのアクセスを試みているときにエラーが発生しました。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)">
      <summary>受信接続の試行を非同期的に受け入れ、新しい <see cref="T:System.Net.Sockets.Socket" /> を作成してリモート ホスト通信を処理します。</summary>
      <param name="asyncResult">この非同期操作のステータス情報だけではなく、任意のユーザー定義のデータも格納する <see cref="T:System.IAsyncResult" />。</param>
      <returns>リモート ホストとの通信を処理する <see cref="T:System.Net.Sockets.Socket" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" /> への呼び出しで <paramref name="asyncResult" /> が作成されませんでした。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。 詳細については、次の「解説」を参照してください。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" /> メソッドは既に呼び出されました。</exception>
      <exception cref="T:System.NotSupportedException">このメソッドには Windows NT が必要です。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndConnect(System.IAsyncResult)">
      <summary>保留中の非同期接続要求を終了します。</summary>
      <param name="asyncResult">この非同期操作の状態情報およびユーザー定義データを格納する <see cref="T:System.IAsyncResult" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="M:System.Net.Sockets.Socket.BeginConnect(System.Net.EndPoint,System.AsyncCallback,System.Object)" /> メソッドへの呼び出しで <paramref name="asyncResult" /> が返されませんでした。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndConnect(System.IAsyncResult)" /> は、非同期接続のために以前に呼び出されています。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndDisconnect(System.IAsyncResult)">
      <summary>保留中の非同期切断要求を終了します。</summary>
      <param name="asyncResult">この非同期操作のステータス情報およびユーザー定義データを格納する <see cref="T:System.IAsyncResult" /> オブジェクト。</param>
      <exception cref="T:System.NotSupportedException">Windows 2000 以前のオペレーティング システムです。このメソッドを使用するには、Windows XP が必要です。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> オブジェクトは閉じられています。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="M:System.Net.Sockets.Socket.BeginDisconnect(System.Boolean,System.AsyncCallback,System.Object)" /> メソッドへの呼び出しで <paramref name="asyncResult" /> が返されませんでした。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndDisconnect(System.IAsyncResult)" /> は、非同期接続のために以前に呼び出されています。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.Net.WebException">切断要求がタイムアウトしました。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)">
      <summary>保留中の非同期読み取りを終了します。</summary>
      <param name="asyncResult">この非同期操作の状態情報およびユーザー定義データを格納する <see cref="T:System.IAsyncResult" />。</param>
      <returns>受信されたバイト数。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> メソッドへの呼び出しで <paramref name="asyncResult" /> が返されませんでした。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> が、非同期の読み取りのために以前に呼び出されています。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult,System.Net.Sockets.SocketError@)">
      <summary>保留中の非同期読み取りを終了します。</summary>
      <param name="asyncResult">この非同期操作の状態情報およびユーザー定義データを格納する <see cref="T:System.IAsyncResult" />。</param>
      <param name="errorCode">ソケット エラーを格納する <see cref="T:System.Net.Sockets.SocketError" /> オブジェクト。</param>
      <returns>受信されたバイト数。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> メソッドへの呼び出しで <paramref name="asyncResult" /> が返されませんでした。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> が、非同期の読み取りのために以前に呼び出されています。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndReceiveFrom(System.IAsyncResult,System.Net.EndPoint@)">
      <summary>特定のエンドポイントからの、保留中の非同期読み込みを終了します。</summary>
      <param name="asyncResult">この非同期操作の状態情報およびユーザー定義データを格納する <see cref="T:System.IAsyncResult" />。</param>
      <param name="endPoint">コピー元 <see cref="T:System.Net.EndPoint" />。</param>
      <returns>正常に完了した場合は、受信したバイト数。 失敗した場合は、0 を返します。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="M:System.Net.Sockets.Socket.BeginReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)" /> メソッドへの呼び出しで <paramref name="asyncResult" /> が返されませんでした。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndReceiveFrom(System.IAsyncResult,System.Net.EndPoint@)" /> が、非同期の読み取りのために以前に呼び出されています。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)">
      <summary>特定のエンドポイントからの、保留中の非同期読み込みを終了します。 また、このメソッドは、<see cref="M:System.Net.Sockets.Socket.EndReceiveFrom(System.IAsyncResult,System.Net.EndPoint@)" /> よりもパケットに関するより多くの情報を示します。</summary>
      <param name="asyncResult">この非同期操作の状態情報およびユーザー定義データを格納する <see cref="T:System.IAsyncResult" />。</param>
      <param name="socketFlags">受信パケットの <see cref="T:System.Net.Sockets.SocketFlags" /> 値のビットごとの組み合わせ。</param>
      <param name="endPoint">コピー元 <see cref="T:System.Net.EndPoint" />。</param>
      <param name="ipPacketInformation">受信パケットの <see cref="T:System.Net.IPAddress" /> とインターフェイス。</param>
      <returns>正常に完了した場合は、受信したバイト数。 失敗した場合は、0 を返します。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> は <see langword="null" /> です  

または - 
<paramref name="endPoint" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="M:System.Net.Sockets.Socket.BeginReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)" /> メソッドへの呼び出しで <paramref name="asyncResult" /> が返されませんでした。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> が、非同期の読み取りのために以前に呼び出されています。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)">
      <summary>保留中の非同期送信を終了します。</summary>
      <param name="asyncResult">この非同期操作の状態情報を格納する <see cref="T:System.IAsyncResult" />。</param>
      <returns>正常に終了した場合は <see cref="T:System.Net.Sockets.Socket" /> に送信したバイト数。それ以外の場合は無効な <see cref="T:System.Net.Sockets.Socket" /> エラー。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> メソッドへの呼び出しで <paramref name="asyncResult" /> が返されませんでした。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /> が、非同期送信のために以前に呼び出されています。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult,System.Net.Sockets.SocketError@)">
      <summary>保留中の非同期送信を終了します。</summary>
      <param name="asyncResult">この非同期操作の状態情報を格納する <see cref="T:System.IAsyncResult" />。</param>
      <param name="errorCode">ソケット エラーを格納する <see cref="T:System.Net.Sockets.SocketError" /> オブジェクト。</param>
      <returns>正常に終了した場合は <see cref="T:System.Net.Sockets.Socket" /> に送信したバイト数。それ以外の場合は無効な <see cref="T:System.Net.Sockets.Socket" /> エラー。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> メソッドへの呼び出しで <paramref name="asyncResult" /> が返されませんでした。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /> が、非同期送信のために以前に呼び出されています。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndSendFile(System.IAsyncResult)">
      <summary>ファイルの保留中の非同期送信を終了します。</summary>
      <param name="asyncResult">この非同期操作の状態情報を格納する <see cref="T:System.IAsyncResult" /> オブジェクト。</param>
      <exception cref="T:System.NotSupportedException">このメソッドには Windows NT が必要です。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> オブジェクトは閉じられています。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> が空です。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.AsyncCallback,System.Object)" /> メソッドへの呼び出しで <paramref name="asyncResult" /> が返されませんでした。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndSendFile(System.IAsyncResult)" /> が、非同期の <see cref="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.AsyncCallback,System.Object)" /> のために以前に呼び出されています。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。 以下の解説を参照してください。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndSendTo(System.IAsyncResult)">
      <summary>特定の場所への、保留中の非同期送信を終了します。</summary>
      <param name="asyncResult">この非同期操作の状態情報およびユーザー定義データを格納する <see cref="T:System.IAsyncResult" />。</param>
      <returns>正常に完了した場合は送信したバイト数。それ以外の場合は無効な <see cref="T:System.Net.Sockets.Socket" /> エラー。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="M:System.Net.Sockets.Socket.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint,System.AsyncCallback,System.Object)" /> メソッドへの呼び出しで <paramref name="asyncResult" /> が返されませんでした。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndSendTo(System.IAsyncResult)" /> が、非同期送信のために以前に呼び出されています。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.ExclusiveAddressUse">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> で 1 つのプロセスだけにポートのバインドを許可するかどうかを指定する <see cref="T:System.Boolean" /> 値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Net.Sockets.Socket" /> で 1 つのソケットだけに特定のポートのバインドを許可する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は<see langword="true" /> 、windows Server 2003 と windows XP Service Pack 2 <see langword="false" />の場合は、それ以外のすべてのバージョンの場合はです。</returns>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
      <exception cref="T:System.InvalidOperationException">この <see cref="T:System.Net.Sockets.Socket" /> に対して <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> が呼び出されました。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Finalize">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> クラスによって使用されていたリソースを解放します。</summary>
    </member>
    <member name="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName)">
      <summary>指定した <see cref="T:System.Net.Sockets.Socket" /> オプションの値をオブジェクトとして返します。</summary>
      <param name="optionLevel">
        <see cref="T:System.Net.Sockets.SocketOptionLevel" /> 値のいずれか 1 つ。</param>
      <param name="optionName">
        <see cref="T:System.Net.Sockets.SocketOptionName" /> 値のいずれか 1 つ。</param>
      <returns>オプションの値を表すオブジェクト。 <paramref name="optionName" /> パラメーターを <see cref="F:System.Net.Sockets.SocketOptionName.Linger" /> に設定した場合、戻り値は <see cref="T:System.Net.Sockets.LingerOption" /> クラスのインスタンスです。 <paramref name="optionName" /> を <see cref="F:System.Net.Sockets.SocketOptionName.AddMembership" /> または <see cref="F:System.Net.Sockets.SocketOptionName.DropMembership" /> に設定した場合、戻り値は <see cref="T:System.Net.Sockets.MulticastOption" /> クラスのインスタンスです。 <paramref name="optionName" /> が他の値の場合、戻り値は整数です。</returns>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。  
または 
 <paramref name="optionName" /> が、サポートされていない値 <see cref="F:System.Net.Sockets.SocketOptionName.MaxConnections" /> に設定されました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Byte[])">
      <summary>指定した <see cref="T:System.Net.Sockets.Socket" /> オプション設定をバイト配列として返します。</summary>
      <param name="optionLevel">
        <see cref="T:System.Net.Sockets.SocketOptionLevel" /> 値のいずれか 1 つ。</param>
      <param name="optionName">
        <see cref="T:System.Net.Sockets.SocketOptionName" /> 値のいずれか 1 つ。</param>
      <param name="optionValue">オプション設定を受信する <see cref="T:System.Byte" /> 型の配列。</param>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。  

または - 
.NET Compact Framework アプリケーションでは、Windows CE の既定のバッファー領域は 32768 バイトに設定されます。 ソケットごとのバッファー領域は、<see cref="Overload:System.Net.Sockets.Socket.SetSocketOption" /> を呼び出して変更できます。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)">
      <summary>指定した <see cref="T:System.Net.Sockets.Socket" /> オプションの値を配列で返します。</summary>
      <param name="optionLevel">
        <see cref="T:System.Net.Sockets.SocketOptionLevel" /> 値のいずれか 1 つ。</param>
      <param name="optionName">
        <see cref="T:System.Net.Sockets.SocketOptionName" /> 値のいずれか。</param>
      <param name="optionLength">予期される戻り値のバイト単位の長さ。</param>
      <returns>ソケット オプションの値を格納している <see cref="T:System.Byte" /> 型の配列。</returns>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。  

または - 
.NET Compact Framework アプリケーションでは、Windows CE の既定のバッファー領域は 32768 バイトに設定されます。 ソケットごとのバッファー領域は、<see cref="Overload:System.Net.Sockets.Socket.SetSocketOption" /> を呼び出して変更できます。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.Handle">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> のオペレーティング システム ハンドルを取得します。</summary>
      <returns>
        <see cref="T:System.IntPtr" /> のオペレーティング システム ハンドルを表す <see cref="T:System.Net.Sockets.Socket" />。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.IOControl(System.Int32,System.Byte[],System.Byte[])">
      <summary>数値制御コードを使用して、<see cref="T:System.Net.Sockets.Socket" /> の下位操作モードを設定します。</summary>
      <param name="ioControlCode">実行する操作の制御コードを指定する <see cref="T:System.Int32" /> 値。</param>
      <param name="optionInValue">操作に必要な入力データを格納する <see cref="T:System.Byte" /> 配列。</param>
      <param name="optionOutValue">操作によって返された出力データを格納する <see cref="T:System.Byte" /> 配列。</param>
      <returns>
        <paramref name="optionOutValue" /> パラメーターのバイト数。</returns>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Net.Sockets.Socket.Blocking" /> プロパティを使用せずに、ブロッキング モードを変更しようとしました。</exception>
      <exception cref="T:System.Security.SecurityException">コール スタック内の呼び出し元が、必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.IOControl(System.Net.Sockets.IOControlCode,System.Byte[],System.Byte[])">
      <summary>
        <see cref="T:System.Net.Sockets.IOControlCode" /> 列挙型を使用して制御コードを指定し、<see cref="T:System.Net.Sockets.Socket" /> の下位操作モードを設定します。</summary>
      <param name="ioControlCode">実行する操作の制御コードを指定する <see cref="T:System.Net.Sockets.IOControlCode" /> 値。</param>
      <param name="optionInValue">操作に必要な入力データを格納する <see cref="T:System.Byte" /> 型の配列。</param>
      <param name="optionOutValue">操作によって返された出力データを格納する <see cref="T:System.Byte" /> 型の配列。</param>
      <returns>
        <paramref name="optionOutValue" /> パラメーターのバイト数。</returns>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Net.Sockets.Socket.Blocking" /> プロパティを使用せずに、ブロッキング モードを変更しようとしました。</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.IsBound">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> が特定のローカル ポートにバインドされているかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Net.Sockets.Socket" /> がローカル ポートにバインドされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.LingerState">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> で、すべての保留中のデータを送信しようとするときにソケットを遅延して閉じるかどうかを指定する値を取得または設定します。</summary>
      <returns>ソケットを閉じているときの待機方法を指定する <see cref="T:System.Net.Sockets.LingerOption" />。</returns>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Listen(System.Int32)">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> をリッスン状態にします。</summary>
      <param name="backlog">保留中の接続のキューの最大長。</param>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.LocalEndPoint">
      <summary>ローカル エンドポイントを取得します。</summary>
      <returns>
        <see cref="T:System.Net.EndPoint" /> が通信に使用している <see cref="T:System.Net.Sockets.Socket" />。</returns>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.MulticastLoopback">
      <summary>発信マルチキャスト パケットが送信元アプリケーションに配信されるかどうかを指定する値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Net.Sockets.Socket" /> が発信マルチキャスト パケットを受け取る場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.NoDelay">
      <summary>ストリーム <see cref="T:System.Net.Sockets.Socket" /> が Nagle アルゴリズムを使用するかどうかを指定する <see cref="T:System.Boolean" /> 値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Net.Sockets.Socket" /> が Nagle アルゴリズムを使用する場合は <see langword="false" />。それ以外の場合は <see langword="true" />。 既定値は、<see langword="false" /> です。</returns>
      <exception cref="T:System.Net.Sockets.SocketException">
        <see cref="T:System.Net.Sockets.Socket" /> へのアクセスを試みているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.OSSupportsIPv4">
      <summary>基になるオペレーティング システムおよびネットワーク アダプターが、インターネット プロトコル バージョン 4 (IPv4) をサポートするかどうかを示します。</summary>
      <returns>オペレーティング システムおよびネットワーク アダプターが IPv4 プロトコルをサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.OSSupportsIPv6">
      <summary>基になるオペレーティング システムおよびネットワーク アダプターが、インターネット プロトコル バージョン 6 (IPv6) をサポートするかどうかを示します。</summary>
      <returns>オペレーティング システムおよびネットワーク アダプターが IPv6 プロトコルをサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Poll(System.Int32,System.Net.Sockets.SelectMode)">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> の状態を確認します。</summary>
      <param name="microSeconds">マイクロ秒単位の待機時間。</param>
      <param name="mode">
        <see cref="T:System.Net.Sockets.SelectMode" /> 値のいずれか。</param>
      <returns>
        <paramref name="mode" /> パラメーターで渡されるポーリング モードの値に基づいた <see cref="T:System.Net.Sockets.Socket" /> の状態。  
  モード 
  戻り値 
 <see cref="F:System.Net.Sockets.SelectMode.SelectRead" /><see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> が呼び出されており、接続が保留中の場合は <see langword="true" />。 
- または - 
 データを読み取ることができる場合は <see langword="true" />。 
- または - 
 接続が閉じている、リセットされている、または終了している場合は <see langword="true" />。 
それ以外の場合、<see langword="false" /> を返します。  

 <see cref="F:System.Net.Sockets.SelectMode.SelectWrite" /><see cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" /> を処理し、接続に成功した場合は <see langword="true" />。 
または 
 データを送信できる場合は <see langword="true" />。 
それ以外の場合、<see langword="false" /> を返します。  

 <see cref="F:System.Net.Sockets.SelectMode.SelectError" />ブロックしない <see cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" /> を処理し、接続に失敗した場合は <see langword="true" />。 
または 
 <see cref="F:System.Net.Sockets.SocketOptionName.OutOfBandInline" /> が設定されておらず、帯域外データを使用できる場合は <see langword="true" />。 
それ以外の場合、<see langword="false" /> を返します。</returns>
      <exception cref="T:System.NotSupportedException">
        <paramref name="mode" /> パラメーターが、<see cref="T:System.Net.Sockets.SelectMode" /> 値の 1 つではありません。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。 以下の解説を参照してください。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.ProtocolType">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> のプロトコルの種類を取得します。</summary>
      <returns>
        <see cref="T:System.Net.Sockets.ProtocolType" /> 値のいずれか 1 つ。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[])">
      <summary>バインドされた <see cref="T:System.Net.Sockets.Socket" /> からデータを受信し、受信バッファーに格納します。</summary>
      <param name="buffer">受信したデータの保存場所となる <see cref="T:System.Byte" /> 型の配列。</param>
      <returns>受信されたバイト数。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
      <exception cref="T:System.Security.SecurityException">コール スタック内の呼び出し元が、必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)">
      <summary>指定した <see cref="T:System.Net.Sockets.SocketFlags" /> を使用し、バインドされた <see cref="T:System.Net.Sockets.Socket" /> から指定したバイト数のデータを受信して、受信バッファー内の指定したオフセット位置に格納します。</summary>
      <param name="buffer">受信したデータの格納場所である、<see cref="T:System.Byte" /> 型の配列。</param>
      <param name="offset">受信データを格納する <paramref name="buffer" />内の場所。</param>
      <param name="size">受信するバイト数。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 値のビットごとの組み合わせ。</param>
      <returns>受信されたバイト数。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が 0 未満です。  
または 
 <paramref name="offset" /> が <paramref name="buffer" /> の長さを超えています。  
または 
 <paramref name="size" /> が 0 未満です。  

または - 
<paramref name="size" /> が、<paramref name="buffer" /> の長さから <paramref name="offset" /> パラメーターの値を引いた値を超えています。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> は、値の有効な組み合わせではありません。  

または - 
<see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> プロパティが設定されていませんでした。  

または - 
<see cref="T:System.Net.Sockets.Socket" /> にアクセス中にオペレーティング システム エラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
      <exception cref="T:System.Security.SecurityException">コール スタック内の呼び出し元が、必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <summary>指定した <see cref="T:System.Net.Sockets.SocketFlags" /> を使用し、バインドされた <see cref="T:System.Net.Sockets.Socket" /> からデータを受信して受信バッファーに格納します。</summary>
      <param name="buffer">受信したデータの保存場所となる <see cref="T:System.Byte" /> 型の配列。</param>
      <param name="offset">受信したデータを格納する、<paramref name="buffer" /> パラメーター内の位置。</param>
      <param name="size">受信するバイト数。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 値のビットごとの組み合わせ。</param>
      <param name="errorCode">ソケット エラーを格納する <see cref="T:System.Net.Sockets.SocketError" /> オブジェクト。</param>
      <returns>受信されたバイト数。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が 0 未満です。  
または 
 <paramref name="offset" /> が <paramref name="buffer" /> の長さを超えています。  

または - 
<paramref name="size" /> が 0 未満です。  

または - 
<paramref name="size" /> が、<paramref name="buffer" /> の長さから <paramref name="offset" /> パラメーターの値を引いた値を超えています。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> は、値の有効な組み合わせではありません。  

または - 
<see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> プロパティが設定されていません。  

または 
<see cref="T:System.Net.Sockets.Socket" /> にアクセス中にオペレーティング システム エラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
      <exception cref="T:System.Security.SecurityException">コール スタック内の呼び出し元が、必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)">
      <summary>指定した <see cref="T:System.Net.Sockets.SocketFlags" /> を使用し、バインドされた <see cref="T:System.Net.Sockets.Socket" /> から指定したバイト数のデータを受信して受信バッファーに格納します。</summary>
      <param name="buffer">受信したデータの保存場所となる <see cref="T:System.Byte" /> 型の配列。</param>
      <param name="size">受信するバイト数。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 値のビットごとの組み合わせ。</param>
      <returns>受信されたバイト数。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="size" /> が <paramref name="buffer" /> のサイズを超えています。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
      <exception cref="T:System.Security.SecurityException">コール スタック内の呼び出し元が、必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Net.Sockets.SocketFlags)">
      <summary>指定した <see cref="T:System.Net.Sockets.SocketFlags" /> を使用し、バインドされた <see cref="T:System.Net.Sockets.Socket" /> からデータを受信して受信バッファーに格納します。</summary>
      <param name="buffer">受信したデータの保存場所となる <see cref="T:System.Byte" /> 型の配列。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 値のビットごとの組み合わせ。</param>
      <returns>受信されたバイト数。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
      <exception cref="T:System.Security.SecurityException">コール スタック内の呼び出し元が、必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})">
      <summary>バインドされた <see cref="T:System.Net.Sockets.Socket" /> からデータを受信して、受信バッファーのリストに格納します。</summary>
      <param name="buffers">受信したデータを格納する <see cref="T:System.Byte" /> 型の複数の <see cref="T:System.ArraySegment`1" /> のリスト。</param>
      <returns>受信されたバイト数。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試みているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
      <summary>指定した <see cref="T:System.Net.Sockets.SocketFlags" /> を使用し、バインドされた <see cref="T:System.Net.Sockets.Socket" /> からデータを受信して受信バッファーのリストに格納します。</summary>
      <param name="buffers">受信したデータを格納する <see cref="T:System.Byte" /> 型の複数の <see cref="T:System.ArraySegment`1" /> のリスト。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 値のビットごとの組み合わせ。</param>
      <returns>受信されたバイト数。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" /> が <see langword="null" /> です。  
または 
 <paramref name="buffers" />.Count が 0 です。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試みているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <summary>指定した <see cref="T:System.Net.Sockets.SocketFlags" /> を使用し、バインドされた <see cref="T:System.Net.Sockets.Socket" /> からデータを受信して受信バッファーのリストに格納します。</summary>
      <param name="buffers">受信したデータを格納する <see cref="T:System.Byte" /> 型の複数の <see cref="T:System.ArraySegment`1" /> のリスト。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 値のビットごとの組み合わせ。</param>
      <param name="errorCode">ソケット エラーを格納する <see cref="T:System.Net.Sockets.SocketError" /> オブジェクト。</param>
      <returns>受信されたバイト数。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" /> が <see langword="null" /> です。  

または - 
<paramref name="buffers" />.Count が 0 です。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試みているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Span{System.Byte})">
      <param name="buffer" />
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Span{System.Byte},System.Net.Sockets.SocketFlags)">
      <param name="buffer" />
      <param name="socketFlags" />
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Span{System.Byte},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <param name="buffer" />
      <param name="socketFlags" />
      <param name="errorCode" />
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>接続されている <see cref="T:System.Net.Sockets.Socket" /> オブジェクトからデータを受信する非同期要求を開始します。</summary>
      <param name="e">この非同期ソケット操作に使用する <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> オブジェクト。</param>
      <returns>I/O 操作が保留中の場合は <see langword="true" />。 操作の完了時に、<paramref name="e" /> パラメーターの <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> イベントが発生します。  
 I/O 操作が同期的に完了した場合は <see langword="false" />。 この場合、<paramref name="e" /> パラメーターの <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> イベントは発生しません。メソッド呼び出しから制御が戻った直後に、パラメーターとして渡された <paramref name="e" /> オブジェクトを調べて操作の結果を取得できます。</returns>
      <exception cref="T:System.ArgumentException">引数が無効です。 <paramref name="e" /> パラメーターの <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> プロパティまたは <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> プロパティは、有効なバッファーを参照する必要があります。 これらのプロパティは、どちらか 1 つを設定できます。一度に両方のプロパティを設定することはできません。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="e" /> パラメーターに指定された <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> オブジェクトを使用してソケット操作が既に進行していました。</exception>
      <exception cref="T:System.NotSupportedException">このメソッドには Windows XP 以降が必要です。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.ReceiveBufferSize">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> の受信バッファーのサイズを指定する値を取得または設定します。</summary>
      <returns>受信バッファーのサイズ (バイト単位) を格納している <see cref="T:System.Int32" />。 既定値は 8192 です。</returns>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">設定操作として指定された値が 0 未満です。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)">
      <summary>指定した <see cref="T:System.Net.Sockets.SocketFlags" /> を使用して、指定したバイト数のデータを受信して、データ バッファー内の指定した位置に格納します。またエンドポイントを格納します。</summary>
      <param name="buffer">受信したデータの格納場所である、<see cref="T:System.Byte" /> 型の配列。</param>
      <param name="offset">受信したデータを格納する、<paramref name="buffer" /> パラメーター内の位置。</param>
      <param name="size">受信するバイト数。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 値のビットごとの組み合わせ。</param>
      <param name="remoteEP">リモート サーバーを表す、参照渡しされた <see cref="T:System.Net.EndPoint" />。</param>
      <returns>受信されたバイト数。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> が <see langword="null" /> です。  

または - 
<paramref name="remoteEP" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が 0 未満です。  

または - 
<paramref name="offset" /> が <paramref name="buffer" /> の長さを超えています。  

または - 
<paramref name="size" /> が 0 未満です。  

または - 
<paramref name="size" /> が、<paramref name="buffer" /> の長さからオフセット パラメーターの値を引いた値を超えています。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> は、値の有効な組み合わせではありません。  

または - 
<see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> プロパティが設定されていませんでした。  

または - 
ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)">
      <summary>指定した <see cref="T:System.Net.Sockets.SocketFlags" /> を使用し、指定したバイト数のデータを受信してデータ バッファーに格納します。さらに、エンドポイントを格納します。</summary>
      <param name="buffer">受信したデータの格納場所である、<see cref="T:System.Byte" /> 型の配列。</param>
      <param name="size">受信するバイト数。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 値のビットごとの組み合わせ。</param>
      <param name="remoteEP">リモート サーバーを表す、参照渡しされた <see cref="T:System.Net.EndPoint" />。</param>
      <returns>受信されたバイト数。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> は <see langword="null" />です。  

または - 
<paramref name="remoteEP" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="size" /> が 0 未満です。  

または - 
<paramref name="size" /> が <paramref name="buffer" />の長さを超えています。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> は、値の有効な組み合わせではありません。  

または - 
<see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> プロパティが設定されていませんでした。  

または 
<see cref="T:System.Net.Sockets.Socket" /> にアクセス中にオペレーティング システム エラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
      <exception cref="T:System.Security.SecurityException">コール スタック内の呼び出し元が、必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Net.EndPoint@)">
      <summary>データグラムを受信してデータバッファーに格納します。さらに、エンドポイントを格納します。</summary>
      <param name="buffer">受信したデータの格納場所である、<see cref="T:System.Byte" /> 型の配列。</param>
      <param name="remoteEP">リモート サーバーを表す、参照渡しされた <see cref="T:System.Net.EndPoint" />。</param>
      <returns>受信されたバイト数。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> は <see langword="null" />です。  

または - 
<paramref name="remoteEP" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
      <exception cref="T:System.Security.SecurityException">コール スタック内の呼び出し元が、必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Net.Sockets.SocketFlags,System.Net.EndPoint@)">
      <summary>指定した <see cref="T:System.Net.Sockets.SocketFlags" /> を使用し、データグラムを受信してデータバッファーに格納します。さらに、エンドポイントを格納します。</summary>
      <param name="buffer">受信したデータの保存場所となる <see cref="T:System.Byte" /> 型の配列。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 値のビットごとの組み合わせ。</param>
      <param name="remoteEP">リモート サーバーを表す、参照渡しされた <see cref="T:System.Net.EndPoint" />。</param>
      <returns>受信されたバイト数。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> は <see langword="null" />です。  

または - 
<paramref name="remoteEP" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
      <exception cref="T:System.Security.SecurityException">コール スタック内の呼び出し元が、必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>指定したネットワーク デバイスから、データの非同期の受信を開始します。</summary>
      <param name="e">この非同期ソケット操作に使用する <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> オブジェクト。</param>
      <returns>I/O 操作が保留中の場合は <see langword="true" />。 操作の完了時に、<paramref name="e" /> パラメーターの <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> イベントが発生します。  
 I/O 操作が同期的に完了した場合は <see langword="false" />。 この場合、<paramref name="e" /> パラメーターの <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> イベントは発生しません。メソッド呼び出しから制御が戻った直後に、パラメーターとして渡された <paramref name="e" /> オブジェクトを調べて操作の結果を取得できます。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> に null 値を指定することはできません。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="e" /> パラメーターに指定された <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> オブジェクトを使用してソケット操作が既に進行していました。</exception>
      <exception cref="T:System.NotSupportedException">このメソッドには Windows XP 以降が必要です。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)">
      <summary>指定した <see cref="T:System.Net.Sockets.SocketFlags" /> を使用して、指定したバイト数のデータをデータ バッファー内の指定した位置で受信して、エンドポイントおよびパケット情報を格納します。</summary>
      <param name="buffer">受信したデータの格納場所である、<see cref="T:System.Byte" /> 型の配列。</param>
      <param name="offset">受信したデータを格納する、<paramref name="buffer" /> パラメーター内の位置。</param>
      <param name="size">受信するバイト数。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 値のビットごとの組み合わせ。</param>
      <param name="remoteEP">リモート サーバーを表す、参照渡しされた <see cref="T:System.Net.EndPoint" />。</param>
      <param name="ipPacketInformation">アドレスとインターフェイスの情報を保持する <see cref="T:System.Net.Sockets.IPPacketInformation" />。</param>
      <returns>受信されたバイト数。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> は <see langword="null" />です。  
- または 
 <paramref name="remoteEP" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が 0 未満です。  

または - 
<paramref name="offset" /> が <paramref name="buffer" /> の長さを超えています。  

または 
 <paramref name="size" /> が 0 未満です。  
または 
 <paramref name="size" /> が、<paramref name="buffer" /> の長さからオフセット パラメーターの値を引いた値を超えています。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> は、値の有効な組み合わせではありません。  
または 
<see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> プロパティが設定されていませんでした。  

または - 
.NET Framework が、AMD 64 ビット プロセッサ上で実行されています。  

または - 
ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
      <exception cref="T:System.NotSupportedException">Windows 2000 以前のオペレーティング システムです。このメソッドを使用するには、Windows XP が必要です。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>指定された <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.SocketFlags" /> を使用し、指定されたバイト数のデータの非同期受信を開始して、データ バッファー内の指定された場所に格納します。さらに、エンドポイントとパケットの情報を格納します。</summary>
      <param name="e">この非同期ソケット操作に使用する <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> オブジェクト。</param>
      <returns>I/O 操作が保留中の場合は <see langword="true" />。 操作の完了時に、<paramref name="e" /> パラメーターの <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> イベントが発生します。  
 I/O 操作が同期的に完了した場合は <see langword="false" />。 この場合、<paramref name="e" /> パラメーターの <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> イベントは発生しません。メソッド呼び出しから制御が戻った直後に、パラメーターとして渡された <paramref name="e" /> オブジェクトを調べて操作の結果を取得できます。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> に null 値を指定することはできません。</exception>
      <exception cref="T:System.NotSupportedException">このメソッドには Windows XP 以降が必要です。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.ReceiveTimeout">
      <summary>同期の <see cref="Overload:System.Net.Sockets.Socket.Receive" /> 呼び出しがタイムアウトするまでの合計時間を指定する値を取得または設定します。</summary>
      <returns>タイムアウト値 (ミリ秒)。 既定値は 0 です。タイムアウトが無期限であることを示します。 -1 の指定も、タイムアウトが無期限であることを示します。</returns>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">設定操作として指定された値が -1 未満です。</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.RemoteEndPoint">
      <summary>リモート エンドポイントを取得します。</summary>
      <returns>
        <see cref="T:System.Net.EndPoint" /> の通信先の <see cref="T:System.Net.Sockets.Socket" />。</returns>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.SafeHandle">
      <summary>現在の <see cref="T:System.Net.Sockets.Socket" /> オブジェクトによってカプセル化されているソケット ハンドルを表す <see cref="T:System.Net.Sockets.SafeSocketHandle" /> を取得します。</summary>
      <returns>現在<see cref="T:System.Net.Sockets.Socket" />のオブジェクトによってカプセル化されるソケットに対して安全な方法で公開されるソケットハンドル。</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Select(System.Collections.IList,System.Collections.IList,System.Collections.IList,System.Int32)">
      <summary>1 つまたは複数のソケットのステータスを判断します。</summary>
      <param name="checkRead">読みやすさを確認する <see cref="T:System.Net.Sockets.Socket" /> インスタンスの <see cref="T:System.Collections.IList" />。</param>
      <param name="checkWrite">書き込み機能をチェックする <see cref="T:System.Net.Sockets.Socket" /> インスタンスの <see cref="T:System.Collections.IList" />。</param>
      <param name="checkError">エラーをチェックする <see cref="T:System.Net.Sockets.Socket" /> インスタンスの <see cref="T:System.Collections.IList" />。</param>
      <param name="microSeconds">タイムアウト値 (マイクロ秒)。 値が -1 の場合は、タイムアウトが無限であることを示します。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="checkRead" /> パラメーターは <see langword="null" /> または空です。  
および 
<paramref name="checkWrite" /> パラメーターは <see langword="null" /> または空です。 
および 
<paramref name="checkError" /> パラメーターは <see langword="null" /> または空です。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Byte[])">
      <summary>接続された <see cref="T:System.Net.Sockets.Socket" /> にデータを送信します。</summary>
      <param name="buffer">送信されるデータを含む <see cref="T:System.Byte" /> 型の配列。</param>
      <returns>
        <see cref="T:System.Net.Sockets.Socket" /> に送信されたバイト数。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)">
      <summary>指定したオフセットから開始し、指定した <see cref="T:System.Net.Sockets.SocketFlags" /> を使用して、指定したバイト数のデータを接続された <see cref="T:System.Net.Sockets.Socket" /> に送信します。</summary>
      <param name="buffer">送信されるデータを含む <see cref="T:System.Byte" /> 型の配列。</param>
      <param name="offset">データの送信を開始する、データ バッファー内の位置。</param>
      <param name="size">送信するバイト数。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 値のビットごとの組み合わせ。</param>
      <returns>
        <see cref="T:System.Net.Sockets.Socket" /> に送信されたバイト数。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が 0 未満です。  

または - 
<paramref name="offset" /> が <paramref name="buffer" /> の長さを超えています。  

または - 
<paramref name="size" /> が 0 未満です。  

または - 
<paramref name="size" /> が、<paramref name="buffer" /> の長さから <paramref name="offset" /> パラメーターの値を引いた値を超えています。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> は、値の有効な組み合わせではありません。  

または - 
<see cref="T:System.Net.Sockets.Socket" /> にアクセス中にオペレーティング システム エラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <summary>指定したオフセットから開始し、指定した <see cref="T:System.Net.Sockets.SocketFlags" /> を使用して、指定したバイト数のデータを接続された <see cref="T:System.Net.Sockets.Socket" /> に送信します。</summary>
      <param name="buffer">送信されるデータを含む <see cref="T:System.Byte" /> 型の配列。</param>
      <param name="offset">データの送信を開始する、データ バッファー内の位置。</param>
      <param name="size">送信するバイト数。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 値のビットごとの組み合わせ。</param>
      <param name="errorCode">ソケット エラーを格納する <see cref="T:System.Net.Sockets.SocketError" /> オブジェクト。</param>
      <returns>
        <see cref="T:System.Net.Sockets.Socket" /> に送信されたバイト数。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が 0 未満です。  

または - 
<paramref name="offset" /> が <paramref name="buffer" /> の長さを超えています。  

または - 
<paramref name="size" /> が 0 未満です。  

または - 
<paramref name="size" /> が、<paramref name="buffer" /> の長さから <paramref name="offset" /> パラメーターの値を引いた値を超えています。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> は、値の有効な組み合わせではありません。  

または - 
<see cref="T:System.Net.Sockets.Socket" /> にアクセス中にオペレーティング システム エラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)">
      <summary>指定した <see cref="T:System.Net.Sockets.SocketFlags" /> を使用し、指定したバイト数のデータを、接続された <see cref="T:System.Net.Sockets.Socket" /> に送信します。</summary>
      <param name="buffer">送信されるデータを含む <see cref="T:System.Byte" /> 型の配列。</param>
      <param name="size">送信するバイト数。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 値のビットごとの組み合わせ。</param>
      <returns>
        <see cref="T:System.Net.Sockets.Socket" /> に送信されたバイト数。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="size" /> が 0 未満か、バッファーのサイズを超える値です。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> は、値の有効な組み合わせではありません。  

または - 
ソケットへのアクセス中にオペレーティング システム エラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Net.Sockets.SocketFlags)">
      <summary>指定した <see cref="T:System.Net.Sockets.SocketFlags" /> を使用して、接続された <see cref="T:System.Net.Sockets.Socket" /> にデータを送信します。</summary>
      <param name="buffer">送信されるデータを含む <see cref="T:System.Byte" /> 型の配列。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 値のビットごとの組み合わせ。</param>
      <returns>
        <see cref="T:System.Net.Sockets.Socket" /> に送信されたバイト数。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})">
      <summary>リスト内のバッファーのセットを接続された <see cref="T:System.Net.Sockets.Socket" /> に送信します。</summary>
      <param name="buffers">送信するデータを格納する <see cref="T:System.Byte" /> 型の <see cref="T:System.ArraySegment`1" /> のリスト。</param>
      <returns>
        <see cref="T:System.Net.Sockets.Socket" /> に送信されたバイト数。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffers" /> が空です。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。 以下の解説を参照してください。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
      <summary>指定した <see cref="T:System.Net.Sockets.SocketFlags" /> を使用して、リスト内のバッファーのセットを接続された <see cref="T:System.Net.Sockets.Socket" /> に送信します。</summary>
      <param name="buffers">送信するデータを格納する <see cref="T:System.Byte" /> 型の <see cref="T:System.ArraySegment`1" /> のリスト。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 値のビットごとの組み合わせ。</param>
      <returns>
        <see cref="T:System.Net.Sockets.Socket" /> に送信されたバイト数。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffers" /> が空です。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <summary>指定した <see cref="T:System.Net.Sockets.SocketFlags" /> を使用して、リスト内のバッファーのセットを接続された <see cref="T:System.Net.Sockets.Socket" /> に送信します。</summary>
      <param name="buffers">送信するデータを格納する <see cref="T:System.Byte" /> 型の <see cref="T:System.ArraySegment`1" /> のリスト。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 値のビットごとの組み合わせ。</param>
      <param name="errorCode">ソケット エラーを格納する <see cref="T:System.Net.Sockets.SocketError" /> オブジェクト。</param>
      <returns>
        <see cref="T:System.Net.Sockets.Socket" /> に送信されたバイト数。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffers" /> が空です。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.ReadOnlySpan{System.Byte})">
      <param name="buffer" />
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.ReadOnlySpan{System.Byte},System.Net.Sockets.SocketFlags)">
      <param name="buffer" />
      <param name="socketFlags" />
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.ReadOnlySpan{System.Byte},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <param name="buffer" />
      <param name="socketFlags" />
      <param name="errorCode" />
    </member>
    <member name="M:System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>接続されている <see cref="T:System.Net.Sockets.Socket" /> オブジェクトに、データを非同期に送信します。</summary>
      <param name="e">この非同期ソケット操作に使用する <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> オブジェクト。</param>
      <returns>I/O 操作が保留中の場合は <see langword="true" />。 操作の完了時に、<paramref name="e" /> パラメーターの <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> イベントが発生します。  
 I/O 操作が同期的に完了した場合は <see langword="false" />。 この場合、<paramref name="e" /> パラメーターの <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> イベントは発生しません。メソッド呼び出しから制御が戻った直後に、パラメーターとして渡された <paramref name="e" /> オブジェクトを調べて操作の結果を取得できます。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> パラメーターの <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> プロパティまたは <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> プロパティは、有効なバッファーを参照する必要があります。 これらのプロパティは、どちらか 1 つを設定できます。一度に両方のプロパティを設定することはできません。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="e" /> パラメーターに指定された <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> オブジェクトを使用してソケット操作が既に進行していました。</exception>
      <exception cref="T:System.NotSupportedException">このメソッドには Windows XP 以降が必要です。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <see cref="T:System.Net.Sockets.Socket" /> がまだ接続されていないか、<see cref="M:System.Net.Sockets.Socket.Accept" />、<see cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" />、または <see cref="Overload:System.Net.Sockets.Socket.BeginAccept" /> の各メソッドによって取得されませんでした。</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.SendBufferSize">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> の送信バッファーのサイズを指定する値を取得または設定します。</summary>
      <returns>送信バッファーのサイズ (バイト単位) を格納している <see cref="T:System.Int32" />。 既定値は 8192 です。</returns>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">設定操作として指定された値が 0 未満です。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendFile(System.String)">
      <summary>
        <see cref="F:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread" /> 送信フラグを使用して、接続されている <see cref="T:System.Net.Sockets.Socket" /> オブジェクトにファイル <paramref name="fileName" /> を送信します。</summary>
      <param name="fileName">送信されるファイルのパスと名前を含む <see cref="T:System.String" />。 このパラメーターは、<see langword="null" /> に設定できます。</param>
      <exception cref="T:System.NotSupportedException">ソケットがリモート ホストに接続されていません。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> オブジェクトは閉じられています。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.Socket" /> オブジェクトはブロック モードではなく、この同期呼び出しを受け付けることができません。</exception>
      <exception cref="T:System.IO.FileNotFoundException">ファイル <paramref name="fileName" /> が見つかりませんでした。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendFile(System.String,System.Byte[],System.Byte[],System.Net.Sockets.TransmitFileOptions)">
      <summary>指定した <see cref="T:System.Net.Sockets.TransmitFileOptions" /> 値を使用して、接続された <see cref="T:System.Net.Sockets.Socket" /> オブジェクトにファイル <paramref name="fileName" /> およびデータのバッファーを送信します。</summary>
      <param name="fileName">送信されるファイルのパスと名前を含む <see cref="T:System.String" />。 このパラメーターは、<see langword="null" /> に設定できます。</param>
      <param name="preBuffer">ファイルが送信される前に送信されるデータを格納する <see cref="T:System.Byte" /> 配列。 このパラメーターは、<see langword="null" /> に設定できます。</param>
      <param name="postBuffer">ファイルが送信された後で送信されるデータを格納する <see cref="T:System.Byte" /> 配列。 このパラメーターは、<see langword="null" /> に設定できます。</param>
      <param name="flags">1 つ以上の <see cref="T:System.Net.Sockets.TransmitFileOptions" /> 値。</param>
      <exception cref="T:System.NotSupportedException">オペレーティング システムは Windows NT 以降ではありません。  

または -

 ソケットがリモート ホストに接続されていません。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> オブジェクトは閉じられています。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.Socket" /> オブジェクトはブロック モードではなく、この同期呼び出しを受け付けることができません。</exception>
      <exception cref="T:System.IO.FileNotFoundException">ファイル <paramref name="fileName" /> が見つかりませんでした。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>接続されている <see cref="T:System.Net.Sockets.Socket" /> オブジェクトに、ファイルのコレクションまたはメモリ内のデータ バッファーを非同期に送信します。</summary>
      <param name="e">この非同期ソケット操作に使用する <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> オブジェクト。</param>
      <returns>I/O 操作が保留中の場合は <see langword="true" />。 操作の完了時に、<paramref name="e" /> パラメーターの <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> イベントが発生します。  
 I/O 操作が同期的に完了した場合は <see langword="false" />。 この場合、<paramref name="e" /> パラメーターの <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> イベントは発生しません。メソッド呼び出しから制御が戻った直後に、パラメーターとして渡された <paramref name="e" /> オブジェクトを調べて操作の結果を取得できます。</returns>
      <exception cref="T:System.IO.FileNotFoundException">
        <see cref="P:System.Net.Sockets.SendPacketsElement.FilePath" /> プロパティで指定されたファイルが見つかりませんでした。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="e" /> パラメーターに指定された <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> オブジェクトを使用してソケット操作が既に進行していました。</exception>
      <exception cref="T:System.NotSupportedException">このメソッドには Windows XP 以降が必要です。 この例外は、<see cref="T:System.Net.Sockets.Socket" /> がリモート ホストに接続されていない場合にも発生します。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">コネクションレスの <see cref="T:System.Net.Sockets.Socket" /> が使用されており、送信するファイルが基になるトランスポートの最大パケット サイズを超えています。</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.SendTimeout">
      <summary>同期の <see cref="Overload:System.Net.Sockets.Socket.Send" /> 呼び出しがタイムアウトするまでの合計時間を指定する値を取得または設定します。</summary>
      <returns>タイムアウト値 (ミリ秒)。 プロパティに 1 から 499 までの値を設定しても、その値は 500 に変更されます。 既定値は 0 です。タイムアウトが無期限であることを示します。 -1 の指定も、タイムアウトが無期限であることを示します。</returns>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">設定操作として指定された値が -1 未満です。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary>指定した <see cref="T:System.Net.Sockets.SocketFlags" /> を使用し、指定したバイト数のデータを、指定したエンドポイントに送信します。送信はバッファー内の指定した位置から開始されます。</summary>
      <param name="buffer">送信されるデータを含む <see cref="T:System.Byte" /> 型の配列。</param>
      <param name="offset">データの送信を開始する、データ バッファー内の位置。</param>
      <param name="size">送信するバイト数。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 値のビットごとの組み合わせ。</param>
      <param name="remoteEP">データの送信先の位置を表す <see cref="T:System.Net.EndPoint" />。</param>
      <returns>送信されたバイト数。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> が <see langword="null" /> です。  

または - 
<paramref name="remoteEP" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が 0 未満です。  

または - 
<paramref name="offset" /> が <paramref name="buffer" /> の長さを超えています。  

または - 
<paramref name="size" /> が 0 未満です。  


または 
 <paramref name="size" /> が、<paramref name="buffer" /> の長さから <paramref name="offset" /> パラメーターの値を引いた値を超えています。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> は、値の有効な組み合わせではありません。  

または - 
<see cref="T:System.Net.Sockets.Socket" /> にアクセス中にオペレーティング システム エラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
      <exception cref="T:System.Security.SecurityException">コール スタック内の呼び出し元が、必要なアクセス許可を保持していません。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary>指定した <see cref="T:System.Net.Sockets.SocketFlags" /> を使用し、指定したバイト数のデータを、指定したエンドポイントに送信します。</summary>
      <param name="buffer">送信されるデータを含む <see cref="T:System.Byte" /> 型の配列。</param>
      <param name="size">送信するバイト数。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 値のビットごとの組み合わせ。</param>
      <param name="remoteEP">データの送信先の位置を表す <see cref="T:System.Net.EndPoint" />。</param>
      <returns>送信されたバイト数。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> は <see langword="null" />です。  

または - 
<paramref name="remoteEP" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">指定した <paramref name="size" /> が <paramref name="buffer" /> のサイズを超えています。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Net.EndPoint)">
      <summary>指定したエンドポイントにデータを送信します。</summary>
      <param name="buffer">送信されるデータを含む <see cref="T:System.Byte" /> 型の配列。</param>
      <param name="remoteEP">データの送信先を表す <see cref="T:System.Net.EndPoint" />。</param>
      <returns>送信されたバイト数。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> は <see langword="null" />です。  

または - 
<paramref name="remoteEP" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary>指定した <see cref="T:System.Net.Sockets.SocketFlags" /> を使用して、特定のエンドポイントにデータを送信します。</summary>
      <param name="buffer">送信されるデータを含む <see cref="T:System.Byte" /> 型の配列。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 値のビットごとの組み合わせ。</param>
      <param name="remoteEP">データの送信先の位置を表す <see cref="T:System.Net.EndPoint" />。</param>
      <returns>送信されたバイト数。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> は <see langword="null" />です。  

または - 
<paramref name="remoteEP" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>特定のリモート ホストにデータを非同期的に送信します。</summary>
      <param name="e">この非同期ソケット操作に使用する <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> オブジェクト。</param>
      <returns>I/O 操作が保留中の場合は <see langword="true" />。 操作の完了時に、<paramref name="e" /> パラメーターの <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> イベントが発生します。  
 I/O 操作が同期的に完了した場合は <see langword="false" />。 この場合、<paramref name="e" /> パラメーターの <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> イベントは発生しません。メソッド呼び出しから制御が戻った直後に、パラメーターとして渡された <paramref name="e" /> オブジェクトを調べて操作の結果を取得できます。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> に null 値を指定することはできません。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="e" /> パラメーターに指定された <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> オブジェクトを使用してソケット操作が既に進行していました。</exception>
      <exception cref="T:System.NotSupportedException">このメソッドには Windows XP 以降が必要です。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">指定されたプロトコルは接続指向ですが、<see cref="T:System.Net.Sockets.Socket" /> がまだ接続されていません。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetIPProtectionLevel(System.Net.Sockets.IPProtectionLevel)">
      <summary>ソケットの IP 保護レベルを設定します。</summary>
      <param name="level">このソケットに設定する IP 保護レベル。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="level" /> パラメーターとして <see cref="F:System.Net.Sockets.IPProtectionLevel.Unspecified" /> を使用することはできません。 IP 保護レベルを未指定に設定することはできません。</exception>
      <exception cref="T:System.NotSupportedException">ソケットの <see cref="T:System.Net.Sockets.AddressFamily" /> は、<see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> または <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> である必要があります。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Boolean)">
      <summary>指定した <see cref="T:System.Net.Sockets.Socket" /> オプションを、指定した <see cref="T:System.Boolean" /> 値に設定します。</summary>
      <param name="optionLevel">
        <see cref="T:System.Net.Sockets.SocketOptionLevel" /> 値のいずれか 1 つ。</param>
      <param name="optionName">
        <see cref="T:System.Net.Sockets.SocketOptionName" /> 値のいずれか。</param>
      <param name="optionValue">
        <see cref="T:System.Boolean" /> として表されるオプションの値。</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> オブジェクトは閉じられています。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Byte[])">
      <summary>指定した <see cref="T:System.Net.Sockets.Socket" /> オプションを、指定した値に設定します。この値はバイト配列で表されます。</summary>
      <param name="optionLevel">
        <see cref="T:System.Net.Sockets.SocketOptionLevel" /> 値のいずれか。</param>
      <param name="optionName">
        <see cref="T:System.Net.Sockets.SocketOptionName" /> 値のいずれか 1 つ。</param>
      <param name="optionValue">オプションの値を表す <see cref="T:System.Byte" /> 型の配列。</param>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)">
      <summary>指定した <see cref="T:System.Net.Sockets.Socket" /> オプションを、指定した整数値に設定します。</summary>
      <param name="optionLevel">
        <see cref="T:System.Net.Sockets.SocketOptionLevel" /> 値のいずれか。</param>
      <param name="optionName">
        <see cref="T:System.Net.Sockets.SocketOptionName" /> 値のいずれか。</param>
      <param name="optionValue">オプションの値。</param>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Object)">
      <summary>指定した <see cref="T:System.Net.Sockets.Socket" /> オプションを、指定した値に設定します。この値はオブジェクトで表されます。</summary>
      <param name="optionLevel">
        <see cref="T:System.Net.Sockets.SocketOptionLevel" /> 値のいずれか 1 つ。</param>
      <param name="optionName">
        <see cref="T:System.Net.Sockets.SocketOptionName" /> 値のいずれか 1 つ。</param>
      <param name="optionValue">オプションの値を格納する <see cref="T:System.Net.Sockets.LingerOption" /> または <see cref="T:System.Net.Sockets.MulticastOption" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="optionValue" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> での送受信を無効にします。</summary>
      <param name="how">許可されなくなる操作を指定する <see cref="T:System.Net.Sockets.SocketShutdown" /> 値の 1 つ。</param>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.SocketType">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> の型を取得します。</summary>
      <returns>
        <see cref="T:System.Net.Sockets.SocketType" /> 値のいずれか 1 つ。</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.SupportsIPv4">
      <summary>現在のホストで IPv4 サポートが使用可能で有効になっているかどうかを示す値を取得します。</summary>
      <returns>現在のホストが IPv4 プロトコルをサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.SupportsIPv6">
      <summary>互換性のために残されている特定の <see cref="T:System.Net.Dns" /> メンバー向けに、フレームワークが IPv6 をサポートしているかどうかを示す値を取得します。</summary>
      <returns>互換性のために残されている特定の <see cref="T:System.Net.Dns" /> メソッド向けに、フレームワークが IPv6 をサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.Ttl">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> によって送信されたインターネット プロトコル (IP) パケットの有効期間 (TTL) の値を指定する値を取得または設定します。</summary>
      <returns>TTL の値。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">TTL 値には、負の数を設定できません。</exception>
      <exception cref="T:System.NotSupportedException">このプロパティは、<see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> ファミリまたは <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> ファミリのソケットに対してだけ設定できます。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。 このエラーは、TTL に 255 より大きい値を設定しようとしたときにも返されます。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.UseOnlyOverlappedIO">
      <summary>ソケットが重複 I/O モードだけを使用する必要があるかどうかを指定します。</summary>
      <returns>
        <see cref="T:System.Net.Sockets.Socket" /> が重複 I/O モードだけを使用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
      <exception cref="T:System.InvalidOperationException">ソケットが完了ポートにバインドされています。</exception>
    </member>
    <member name="T:System.Net.Sockets.SocketAsyncEventArgs">
      <summary>非同期ソケット操作を表します。</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.#ctor">
      <summary>空の <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> インスタンスを作成します。</summary>
      <exception cref="T:System.NotSupportedException">このプラットフォームはサポートされていません。</exception>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket">
      <summary>非同期ソケット メソッドとの接続を受け入れるために使用するソケットまたは作成されたソケットを取得または設定します。</summary>
      <returns>非同期ソケット メソッドとの接続を受け入れるために使用する <see cref="T:System.Net.Sockets.Socket" /> または作成されたソケット。</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer">
      <summary>非同期ソケット メソッドで使用するデータ バッファーを取得します。</summary>
      <returns>非同期ソケット メソッドで使用するデータ バッファーを表す <see cref="T:System.Byte" /> 配列。</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList">
      <summary>非同期ソケット メソッドで使用するデータ バッファーの配列を取得または設定します。</summary>
      <returns>非同期ソケット メソッドで使用するデータ バッファーの配列を表す <see cref="T:System.Collections.IList" />。</returns>
      <exception cref="T:System.ArgumentException">設定操作であいまいなバッファーが指定されています。 この例外は、<see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> が null 以外の値に設定されている状態で、<see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> プロパティに null 以外の値を設定しようとした場合に発生します。</exception>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.BytesTransferred">
      <summary>ソケット操作で転送するバイト数を取得します。</summary>
      <returns>ソケット操作で転送するバイト数を格納する <see cref="T:System.Int32" />。</returns>
    </member>
    <member name="E:System.Net.Sockets.SocketAsyncEventArgs.Completed">
      <summary>非同期操作を完了させるために使用されるイベントです。</summary>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError">
      <summary>
        <see cref="T:System.Net.DnsEndPoint" /> が使用されているときに接続エラーが発生した場合に、例外を取得します。</summary>
      <returns>
        <see cref="T:System.Exception" /> プロパティに <see cref="T:System.Net.DnsEndPoint" /> を指定したときの接続エラーの原因を示す <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.ConnectSocket">
      <summary>
        <see cref="Overload:System.Net.Sockets.Socket.ConnectAsync" /> メソッドが正常に完了した後に作成され、接続された <see cref="T:System.Net.Sockets.Socket" /> オブジェクト。</summary>
      <returns>接続された <see cref="T:System.Net.Sockets.Socket" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.Count">
      <summary>非同期操作で送信または受信するデータの最大量 (バイト単位) を取得します。</summary>
      <returns>送信または受信するデータの最大量 (バイト単位) を格納する <see cref="T:System.Int32" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.DisconnectReuseSocket">
      <summary>切断操作後にソケットを再利用できるかどうかを指定する値を取得または設定します。</summary>
      <returns>切断操作後にソケットを再利用できるかどうかを指定する <see cref="T:System.Boolean" />。</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.Dispose">
      <summary>
        <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> インスタンスが使用するアンマネージド リソースを解放し、必要に応じてマネージド リソースを破棄します。</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.Finalize">
      <summary>
        <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> クラスによって使用されていたリソースを解放します。</summary>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.LastOperation">
      <summary>このコンテキスト オブジェクトで最近実行されたソケット操作の種類を取得します。</summary>
      <returns>このコンテキスト オブジェクトで最近実行されたソケット操作の種類を示す <see cref="T:System.Net.Sockets.SocketAsyncOperation" /> インスタンス。</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.MemoryBuffer" />
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.Offset">
      <summary>
        <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> プロパティによって参照されるデータ バッファーへのオフセット (バイト単位) を取得します。</summary>
      <returns>
        <see cref="T:System.Int32" /> プロパティによって参照されるデータ バッファーへのオフセット (バイト単位) を格納する <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />。</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.OnCompleted(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>非同期操作の完了時に呼び出されるメソッドを表します。</summary>
      <param name="e">シグナル状態のイベント。</param>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.ReceiveMessageFromPacketInfo">
      <summary>受信パケットの IP アドレスとインターフェイスを取得します。</summary>
      <returns>受信パケットの宛先 IP アドレスとインターフェイスを格納する <see cref="T:System.Net.Sockets.IPPacketInformation" /> インスタンス。</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint">
      <summary>非同期操作のリモート IP エンドポイントを取得または設定します。</summary>
      <returns>非同期操作のリモート IP エンドポイントを表す <see cref="T:System.Net.EndPoint" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements">
      <summary>非同期操作のために送信するバッファーの配列を取得または設定します。この配列は、<see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> メソッドで使用します。</summary>
      <returns>送信するバッファーの配列を表す <see cref="T:System.Net.Sockets.SendPacketsElement" /> オブジェクトの配列。</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsFlags">
      <summary>非同期操作で使用する <see cref="T:System.Net.Sockets.TransmitFileOptions" /> 値のビットごとの組み合わせを取得または設定します。この組み合わせは、<see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> メソッドで使用します。</summary>
      <returns>非同期操作で使用する値のビットごとの組み合わせを格納する <see cref="T:System.Net.Sockets.TransmitFileOptions" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsSendSize">
      <summary>送信操作で使用するデータ ブロックのサイズ (バイト単位) を取得または設定します。</summary>
      <returns>送信操作で使用するデータ ブロックのサイズ (バイト単位) を格納する <see cref="T:System.Int32" />。</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Byte[],System.Int32,System.Int32)">
      <summary>非同期ソケット メソッドで使用するデータ バッファーを設定します。</summary>
      <param name="buffer">非同期ソケット メソッドで使用するデータ バッファー。</param>
      <param name="offset">操作を開始するデータ バッファーのオフセット (バイト単位)。</param>
      <param name="count">バッファー内で送信または受信するデータの最大量 (バイト単位)。</param>
      <exception cref="T:System.ArgumentException">あいまいなバッファーが指定されています。 この例外は、<see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> プロパティが null ではなく、<see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> プロパティも null ではない場合に発生します。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">引数が範囲外です。 この例外は、<paramref name="offset" /> パラメーターがゼロ未満であるか、<see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> プロパティの配列の長さよりも大きい場合に発生します。 また、<paramref name="count" /> パラメーターがゼロ未満であるか、<see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> プロパティの配列の長さから <paramref name="offset" /> パラメーターを引いた長さよりも大きい場合にも、この例外が発生します。</exception>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Int32,System.Int32)">
      <summary>非同期ソケット メソッドで使用するデータ バッファーを設定します。</summary>
      <param name="offset">操作を開始するデータ バッファーのオフセット (バイト単位)。</param>
      <param name="count">バッファー内で送信または受信するデータの最大量 (バイト単位)。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">引数が範囲外です。 この例外は、<paramref name="offset" /> パラメーターがゼロ未満であるか、<see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> プロパティの配列の長さよりも大きい場合に発生します。 また、<paramref name="count" /> パラメーターがゼロ未満であるか、<see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> プロパティの配列の長さから <paramref name="offset" /> パラメーターを引いた長さよりも大きい場合にも、この例外が発生します。</exception>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Memory{System.Byte})">
      <param name="buffer" />
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SocketError">
      <summary>非同期ソケット操作の結果を取得または設定します。</summary>
      <returns>非同期ソケット操作の結果を表す <see cref="T:System.Net.Sockets.SocketError" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SocketFlags">
      <summary>非同期ソケット操作の結果を取得します。または、非同期操作の動作を設定します。</summary>
      <returns>非同期ソケット操作の結果を表す <see cref="T:System.Net.Sockets.SocketFlags" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.UserToken">
      <summary>この非同期ソケット操作に関連付けられたユーザー オブジェクトまたはアプリケーション オブジェクトを取得または設定します。</summary>
      <returns>この非同期ソケット操作に関連付けられたユーザー オブジェクトまたはアプリケーション オブジェクトを表すオブジェクト。</returns>
    </member>
    <member name="T:System.Net.Sockets.SocketAsyncOperation">
      <summary>このコンテキスト オブジェクトで最近実行された非同期ソケット操作の型。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Accept">
      <summary>ソケットの Accept 操作。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Connect">
      <summary>ソケットの Connect 操作。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Disconnect">
      <summary>ソケットの Disconnect 操作。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.None">
      <summary>ソケット操作なし。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Receive">
      <summary>ソケットの Receive 操作。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.ReceiveFrom">
      <summary>ソケットの ReceiveFrom 操作。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.ReceiveMessageFrom">
      <summary>ソケットの ReceiveMessageFrom 操作。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Send">
      <summary>ソケットの Send 操作。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.SendPackets">
      <summary>ソケットの SendPackets 操作。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.SendTo">
      <summary>ソケットの SendTo 操作。</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketFlags">
      <summary>ソケットの送受信の動作を指定します。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.Broadcast">
      <summary>ブロードキャスト パケットを示します。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.ControlDataTruncated">
      <summary>コントロール データが内部の 64 KB のバッファーに収まらず、切り捨てられたことを示します。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.DontRoute">
      <summary>ルーティング テーブルを使用せずに送信します。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.Multicast">
      <summary>マルチキャスト パケットを示します。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.None">
      <summary>この呼び出しにはフラグを使用しません。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.OutOfBand">
      <summary>帯域外データを処理します。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.Partial">
      <summary>部分的にメッセージを送信または受信します。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.Peek">
      <summary>受信メッセージをプレビューします。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.Truncated">
      <summary>メッセージは大きすぎて指定されたバッファーに収まらず、切り捨てられました。</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketInformation">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> を複製するために必要な情報をカプセル化します。</summary>
    </member>
    <member name="P:System.Net.Sockets.SocketInformation.Options">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> のオプションを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Net.Sockets.SocketInformationOptions" /> のインスタンス。</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketInformation.ProtocolInformation">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> のプロトコル情報を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Byte" /> 型の配列。</returns>
    </member>
    <member name="T:System.Net.Sockets.SocketInformationOptions">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> の状態を示します。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketInformationOptions.Connected">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> は接続されています。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketInformationOptions.Listening">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> は新しい接続を待機しています。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketInformationOptions.NonBlocking">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> は非ブロッキング状態です。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketInformationOptions.UseOnlyOverlappedIO">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> は重複 I/O を使用しています。</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketOptionLevel">
      <summary>
        <see cref="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)" /> メソッドと <see cref="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName)" /> メソッドのソケット オプション レベルを定義します。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionLevel.IP">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> オプションは IP ソケットだけに適用されます。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionLevel.IPv6">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> オプションは IPv6 ソケットだけに適用されます。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionLevel.Socket">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> オプションはすべてのソケットに適用されます。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionLevel.Tcp">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> オプションは TCP ソケットだけに適用されます。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionLevel.Udp">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> オプションは UDP ソケットだけに適用されます。</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketOptionName">
      <summary>構成オプション名を定義します。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.AcceptConnection">
      <summary>ソケットはリッスンしています。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.AddMembership">
      <summary>IP グループ メンバーシップを追加します。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.AddSourceMembership">
      <summary>ソース グループを結合します。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.BlockSource">
      <summary>ソースからデータをブロックします。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Broadcast">
      <summary>ソケットでのブロードキャスト メッセージの送信を許可します。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.BsdUrgent">
      <summary>RFC-1222 の定義に従って、緊急データを使用します。 このオプションは 1 回だけ設定できます。いったん設定すると、オフにすることはできません。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ChecksumCoverage">
      <summary>UDP チェックサム カバレッジを設定または取得します。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Debug">
      <summary>デバッグ情報を記録します。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.DontFragment">
      <summary>IP データグラムを断片化しないようにします。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.DontLinger">
      <summary>接続を維持せずに、ソケットを適切に閉じます。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.DontRoute">
      <summary>インターフェイス アドレスにルーティングしたり、直接パケットを送信したりしません。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.DropMembership">
      <summary>IP グループ メンバーシップを無効にします。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.DropSourceMembership">
      <summary>ソース グループを無効にします。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Error">
      <summary>エラー ステータスを取得し、クリアします。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ExclusiveAddressUse">
      <summary>ソケットを排他アクセス用にバインドできるようにします。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Expedited">
      <summary>RFC-1222 の定義に従って、優先データを使用します。 このオプションは 1 回だけ設定できます。いったん設定すると、オフにすることはできません。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.HeaderIncluded">
      <summary>アプリケーションが発信データグラムに IP ヘッダーを提供していることを示します。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.HopLimit">
      <summary>インターネット プロトコル Version 6 (IPv6) パケットのルーターの最大ホップ数を指定します。 これは、インターネット プロトコル Version 4 の有効期間 (TTL) のようなものです。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.IPOptions">
      <summary>発信データグラムに挿入する IP オプションを指定します。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.IPProtectionLevel">
      <summary>IPv6 ソケットを特定のスコープ (同じリンク ローカルまたはサイト ローカル プレフィックスを持つアドレスなど) に制限できます。このソケット オプションを使用したアプリケーションは、IPv6 ソケットに対するアクセス制限を設定できます。 この制限により、プライベート LAN で実行されるアプリケーションを外部からの攻撃に対して簡単かつ堅牢に強化できます。 このソケット オプションで待機中のソケットのスコープを変更して、適切な場合はパブリック ユーザーおよびプライベート ユーザーからの無制限のアクセスを許可したり、必要に応じて同じサイトへのアクセスのみに制限したりできます。 このソケット オプションには、<see cref="T:System.Net.Sockets.IPProtectionLevel" /> 列挙型で指定されている定義済みの保護レベルが設定されています。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.IpTimeToLive">
      <summary>IP ヘッダーの Time-to-Live (有効期間) フィールドを設定します。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.IPv6Only">
      <summary>AF_INET6 アドレス ファミリ用に作成されたソケットが IPv6 通信のみに制限されるかどうかを示します。 AF_INET6 アドレス ファミリ用に作成されたソケットは、IPv6 通信と IPv4 通信の両方に使用できます。 アプリケーションによっては、AF_INET6 アドレス ファミリ用に作成されたソケットの使用を IPv6 通信のみに制限する必要があります。 この値がゼロ以外の場合 (Windows での既定値)、AF_INET6 アドレス ファミリ用に作成されたソケットは、IPv6 パケットの送受信のみに使用できます。 この値がゼロの場合、AF_INET6 アドレス ファミリ用に作成されたソケットは、IPv6 アドレスまたは IPv4 アドレスとのパケットの送受信に使用できます。 IPv4 アドレスとやり取りできるようにするには、IPv4 でマップされたアドレスを使用する必要があります。 このソケット オプションは、Windows Vista 以降でサポートされています。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.KeepAlive">
      <summary>Keep-alive を使用します。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Linger">
      <summary>未送信のデータが存在する場合は、閉じた後も接続を維持します。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.MaxConnections">
      <summary>サポートされていません。使用すると <see cref="T:System.Net.Sockets.SocketException" /> がスローされます。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.MulticastInterface">
      <summary>発信マルチキャスト パケットのインターフェイスを設定します。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.MulticastLoopback">
      <summary>IP マルチキャスト ループバック。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.MulticastTimeToLive">
      <summary>IP マルチキャストの有効期間。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.NoChecksum">
      <summary>チェックサムを 0 に設定して UDP データグラムを送信します。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.NoDelay">
      <summary>送信結合用の Nagle アルゴリズムを無効にします。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.OutOfBandInline">
      <summary>通常のデータ ストリーム内の帯域外データを受信します。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.PacketInformation">
      <summary>受信したパケットに関する情報を返します。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ReceiveBuffer">
      <summary>受信用に予約するソケット単位の合計バッファー領域を指定します。 これは最大メッセージ サイズまたは TCP ウィンドウのサイズとは関係ありません。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ReceiveLowWater">
      <summary>
        <see cref="Overload:System.Net.Sockets.Socket.Receive" /> 操作の下限値を指定します。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ReceiveTimeout">
      <summary>タイムアウトを受信します。このオプションは、同期メソッドにだけ適用されます。<see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> などの非同期メソッドに対しては機能しません。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ReuseAddress">
      <summary>既に使用されているアドレスにソケットをバインドすることを許可します。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ReuseUnicastPort">
      <summary>発信接続用の一時的なポート割り当てにシステムが従う必要があることを示します。 これは、Winsock2 SO_REUSE_UNICASTPORT ソケット オプションを使用することに相当します。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.SendBuffer">
      <summary>送信用に予約するソケット単位の合計バッファー領域を指定します。 これは最大メッセージ サイズまたは TCP ウィンドウのサイズとは関係ありません。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.SendLowWater">
      <summary>
        <see cref="Overload:System.Net.Sockets.Socket.Send" /> 操作の下限値を指定します。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.SendTimeout">
      <summary>タイムアウトを送信します。このオプションは、同期メソッドにだけ適用されます。<see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> などの非同期メソッドに対しては機能しません。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.TcpKeepAliveInterval">
      <summary>TCP 接続が別のキープアライブ プローブを送信するまでにキープアライブ応答を待機する秒数。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.TcpKeepAliveRetryCount">
      <summary>接続が終了するまでに送信される TCP キープアライブ プローブの数。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.TcpKeepAliveTime">
      <summary>TCP 接続がアライブ/アイドル状態になってからキープアライブ プローブがリモートに送信されるまでの秒数。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Type">
      <summary>ソケット タイプを取得します。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.TypeOfService">
      <summary>IP ヘッダーの Type of Service フィールドを変更します。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.UnblockSource">
      <summary>以前にブロックしたソースのブロックを解除します。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.UpdateAcceptContext">
      <summary>既存のソケットのプロパティを使用して、受け入れられたソケットのプロパティを更新します。 これは、Winsock2 SO_UPDATE_ACCEPT_CONTEXT ソケット オプションを使用することに相当し、接続指向のソケットでだけサポートされています。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.UpdateConnectContext">
      <summary>既存のソケットのプロパティを使用して、接続されたソケットのプロパティを更新します。 これは、Winsock2 SO_UPDATE_CONNECT_CONTEXT ソケット オプションを使用することに相当し、接続指向のソケットでだけサポートされています。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.UseLoopback">
      <summary>可能な場合はハードウェアをバイパスします。</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketReceiveFromResult">
      <summary>
        <see cref="M:System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)" /> 操作の結果。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketReceiveFromResult.ReceivedBytes">
      <summary>受信されたバイト数。 <see cref="M:System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)" /> 処理が失敗した場合は 0。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketReceiveFromResult.RemoteEndPoint">
      <summary>コピー元 <see cref="T:System.Net.EndPoint" />。</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketReceiveMessageFromResult">
      <summary>
        <see cref="M:System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)" /> 操作の結果。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketReceiveMessageFromResult.PacketInformation">
      <summary>アドレスとインターフェイスの情報を保持する <see cref="T:System.Net.Sockets.IPPacketInformation" />。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketReceiveMessageFromResult.ReceivedBytes">
      <summary>受信されたバイト数。 <see cref="M:System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)" /> 操作が成功しないと、この値は 0 になります。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketReceiveMessageFromResult.RemoteEndPoint">
      <summary>コピー元 <see cref="T:System.Net.EndPoint" />。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketReceiveMessageFromResult.SocketFlags">
      <summary>受信パケットの <see cref="T:System.Net.Sockets.SocketFlags" /> 値のビットごとの組み合わせ。</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketShutdown">
      <summary>
        <see cref="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)" /> メソッドが使用する定数を定義します。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketShutdown.Both">
      <summary>送信と受信の両方の <see cref="T:System.Net.Sockets.Socket" /> を無効にします。 このフィールドは定数です。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketShutdown.Receive">
      <summary>受信の <see cref="T:System.Net.Sockets.Socket" /> を無効にします。 このフィールドは定数です。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketShutdown.Send">
      <summary>送信の <see cref="T:System.Net.Sockets.Socket" /> を無効にします。 このフィールドは定数です。</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketTaskExtensions">
      <summary>このクラスには <see cref="T:System.Net.Sockets.Socket" /> クラスへの拡張メソッドが含まれています。</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket)">
      <summary>ソケットでの受信接続の試行を受け入れる非同期操作を実行します。</summary>
      <param name="socket">接続をリッスンするソケット。</param>
      <returns>リモート ホストとの通信を処理する <see cref="T:System.Net.Sockets.Socket" /> で完了する非同期タスク。</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket,System.Net.Sockets.Socket)">
      <summary>ソケットでの受信接続の試行を受け入れる非同期操作を実行します。</summary>
      <param name="socket">受信接続をリッスンするソケット。</param>
      <param name="acceptSocket">受け入れた <see cref="T:System.Net.Sockets.Socket" /> オブジェクト。 この値は <see langword="null" /> の場合もあります。</param>
      <returns>リモート ホストとの通信を処理する <see cref="T:System.Net.Sockets.Socket" /> で完了する非同期タスク。</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.EndPoint)">
      <summary>リモート ホストへの接続を確立します。</summary>
      <param name="socket">接続の確立に使用されるソケット。</param>
      <param name="remoteEP">リモート デバイスを表すエンドポイント。</param>
      <returns>非同期タスク。</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress,System.Int32)">
      <summary>リモート ホストへの接続を確立します。 ホストは、IP アドレスとポート番号で指定されます。</summary>
      <param name="socket">接続操作を実行するソケット。</param>
      <param name="address">リモート ホストの IP アドレス。</param>
      <param name="port">リモート ホストのポート番号。</param>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress[],System.Int32)">
      <summary>リモート ホストへの接続を確立します。 ホストは、IP アドレスの配列とポート番号で指定されます。</summary>
      <param name="socket">接続操作を実行するソケット。</param>
      <param name="addresses">リモート ホストの IP アドレス。</param>
      <param name="port">リモート ホストのポート番号。</param>
      <returns>非同期の接続操作を表すタスク。</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.String,System.Int32)">
      <summary>リモート ホストへの接続を確立します。 ホストはホスト名とポート番号で指定されます。</summary>
      <param name="socket">接続操作を実行するソケット。</param>
      <param name="host">リモート ホストの名前。</param>
      <param name="port">リモート ホストのポート番号。</param>
      <returns>非同期タスク。</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)">
      <summary>接続されたソケットからデータを受信します。</summary>
      <param name="socket">受信操作を実行するソケット。</param>
      <param name="buffer">受信したデータの格納場所である配列。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 値のビットごとの組み合わせ。</param>
      <returns>非同期の受信操作を表すタスク。 <paramref name="TResult" /> パラメーターの値には、受信バイト数が含まれます。</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
      <summary>接続されたソケットからデータを受信します。</summary>
      <param name="socket">受信操作を実行するソケット。</param>
      <param name="buffers">受信したデータの格納場所である配列。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 値のビットごとの組み合わせ。</param>
      <returns>非同期の受信操作を表すタスク。 <paramref name="TResult" /> パラメーターの値には、受信バイト数が含まれます。</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.Memory{System.Byte},System.Net.Sockets.SocketFlags,System.Threading.CancellationToken)">
      <param name="socket" />
      <param name="buffer" />
      <param name="socketFlags" />
      <param name="cancellationToken" />
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary>指定したネットワーク デバイスからデータを受信します。</summary>
      <param name="socket">ReceiveFrom 操作を実行するソケット。</param>
      <param name="buffer">受信したデータの格納場所である、Byte 型の配列。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 値のビットごとの組み合わせ。</param>
      <param name="remoteEndPoint">データのソースを表すエンドポイント。</param>
      <returns>SocketReceiveFromResult 構造体と共に完了する非同期タスク。</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary>指定した <see cref="T:System.Net.Sockets.SocketFlags" /> を使用して、指定したバイト数のデータをデータ バッファー内の指定した位置で受信して、エンドポイントおよびパケット情報を格納します。</summary>
      <param name="socket">操作を実行するソケット。</param>
      <param name="buffer">受信したデータの格納場所である配列。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 値のビットごとの組み合わせ。</param>
      <param name="remoteEndPoint">リモート サーバーを表す <see cref="T:System.Net.EndPoint" />。</param>
      <returns>
        <see cref="T:System.Net.Sockets.SocketReceiveMessageFromResult" /> 構造体と共に完了する非同期タスク。</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)">
      <summary>接続されたソケットにデータを送信します。</summary>
      <param name="socket">操作を実行するソケット。</param>
      <param name="buffer">送信するデータを含む Byte 型の配列。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 値のビットごとの組み合わせ。</param>
      <returns>操作が成功した場合に、ソケットに送信されたバイト数を示して完了する非同期タスク。 それ以外の場合、タスクは無効なソケット エラーを示して完了します。</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
      <summary>接続されたソケットにデータを送信します。</summary>
      <param name="socket">操作を実行するソケット。</param>
      <param name="buffers">送信するデータを格納する配列。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 値のビットごとの組み合わせ。</param>
      <returns>操作が成功した場合に、ソケットに送信されたバイト数を示して完了する非同期タスク。 それ以外の場合、タスクは無効なソケット エラーを示して完了します。</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.ReadOnlyMemory{System.Byte},System.Net.Sockets.SocketFlags,System.Threading.CancellationToken)">
      <param name="socket" />
      <param name="buffer" />
      <param name="socketFlags" />
      <param name="cancellationToken" />
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.SendToAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary>特定のリモート ホストにデータを非同期的に送信します。</summary>
      <param name="socket">操作を実行するソケット。</param>
      <param name="buffer">送信するデータを格納する配列。</param>
      <param name="socketFlags">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 値のビットごとの組み合わせ。</param>
      <param name="remoteEP">リモート デバイスを表す <see cref="T:System.Net.EndPoint" />。</param>
      <returns>操作が成功した場合に、送信されたバイト数を示して完了する非同期タスク。 それ以外の場合、タスクは無効なソケット エラーを示して完了します。</returns>
    </member>
    <member name="T:System.Net.Sockets.SocketType">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> クラスのインスタンスが表すソケットの種類を指定します。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Dgram">
      <summary>データグラムをサポートしています。これはコネクションレスで、固定 (通常は短い) 最大長の、信頼性のないメッセージです。 メッセージが喪失または複製されたり、正しい順序で受信されなかったりする可能性があります。 <see cref="T:System.Net.Sockets.Socket" /> 型の <see cref="F:System.Net.Sockets.SocketType.Dgram" /> はデータの送受信に先立って接続する必要がなく、複数のピアと通信できます。 <see cref="F:System.Net.Sockets.SocketType.Dgram" /> はデータグラム プロトコル (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Udp" />) と <see langword="AddressFamily" />.<see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> アドレス ファミリを使用します。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Raw">
      <summary>基になるトランスポート プロトコルへのアクセスをサポートします。 <see cref="F:System.Net.Sockets.SocketType.Raw" /> を使用すると、インターネット コントロール メッセージ プロトコル (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Icmp" />) やインターネット グループ管理プロトコル (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Igmp" />) などのプロトコルを使用して通信を行うことができます。 ユーザーのアプリケーションが送信時に完全な IP ヘッダーを提供する必要があります。 受信データグラムは IP ヘッダーとオプションをそのまま返します。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Rdm">
      <summary>コネクションレスでメッセージ指向の、配信の信頼性が高いメッセージをサポートし、データ内のメッセージ境界を維持します。 Rdm (Reliably Delivered Messages) メッセージは複製されず、順番に到着します。 また、メッセージが失われたときには送信元に通知されます。 <see cref="F:System.Net.Sockets.SocketType.Rdm" /> を使用して <see cref="T:System.Net.Sockets.Socket" /> を初期化した場合には、データの送受信の前にリモート ホストに接続しておく必要はありません。 <see cref="F:System.Net.Sockets.SocketType.Rdm" /> では複数のピアと通信できます。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Seqpacket">
      <summary>ネットワーク全体に、順序付きバイト ストリームの、コネクション指向で信頼性の高い双方向転送を提供します。 <see cref="F:System.Net.Sockets.SocketType.Seqpacket" /> はデータを複製せず、データ ストリーム内の境界を維持します。 <see cref="F:System.Net.Sockets.SocketType.Seqpacket" /> 型の <see cref="T:System.Net.Sockets.Socket" /> は単一のピアと通信し、通信を開始する前にリモート ホスト接続を確立しておく必要があります。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Stream">
      <summary>データの複製および境界の維持を行うことなく、信頼性が高く双方向の、接続ベースのバイト ストリームをサポートします。 この種類の <see cref="T:System.Net.Sockets.Socket" /> は、単一のピアと通信し、通信を開始する前にリモート ホスト接続を確立しておく必要があります。 <see cref="F:System.Net.Sockets.SocketType.Stream" /> は伝送制御プロトコル (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Tcp" />) および <see langword="AddressFamily" />.<see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> アドレス ファミリを使用します。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Unknown">
      <summary>不明な <see cref="T:System.Net.Sockets.Socket" /> 型を指定します。</summary>
    </member>
    <member name="T:System.Net.Sockets.TcpClient">
      <summary>TCP ネットワーク サービス用のクライアント接続を提供します。</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.#ctor">
      <summary>
        <see cref="T:System.Net.Sockets.TcpClient" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
      <summary>
        <see cref="T:System.Net.Sockets.TcpClient" /> クラスの新しいインスタンスを初期化し、指定したローカル エンドポイントにバインドします。</summary>
      <param name="localEP">TCP <see cref="T:System.Net.IPEndPoint" /> のバインド先の <see cref="T:System.Net.Sockets.Socket" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localEP" /> パラメーターは <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)">
      <summary>ファミリを指定して、<see cref="T:System.Net.Sockets.TcpClient" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="family">IP プロトコルの <see cref="P:System.Net.IPAddress.AddressFamily" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="family" /> パラメーターが AddressFamily.InterNetwork ではありません。 

または - 
<paramref name="family" /> パラメーターが AddressFamily.InterNetworkV6 ではありません。</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
      <summary>
        <see cref="T:System.Net.Sockets.TcpClient" /> クラスの新しいインスタンスを初期化し、指定したホストの指定したポートに接続します。</summary>
      <param name="hostname">接続先のリモート ホストの DNS 名。</param>
      <param name="port">接続先のリモート ホストのポート番号。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hostname" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> パラメーターが <see cref="F:System.Net.IPEndPoint.MinPort" /> と <see cref="F:System.Net.IPEndPoint.MaxPort" /> の間にありません。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセス中にエラーが発生しました。</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.Active">
      <summary>接続されたかどうかを示す値を取得または設定します。</summary>
      <returns>接続されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.Available">
      <summary>ネットワークから受信した、読み取り可能なデータ量を取得します。</summary>
      <returns>ネットワークから受信した、読み取り可能なデータのバイト数。</returns>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
      <summary>リモート ホスト接続への非同期要求を開始します。 リモート ホストは、<see cref="T:System.Net.IPAddress" /> とポート番号 (<see cref="T:System.Int32" />) で指定されます。</summary>
      <param name="address">リモート ホストの <see cref="T:System.Net.IPAddress" />。</param>
      <param name="port">リモート ホストのポート番号。</param>
      <param name="requestCallback">操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">接続操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <paramref name="requestCallback" /> デリゲートに渡されます。</param>
      <returns>非同期接続を参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
      <exception cref="T:System.Security.SecurityException">コール スタックの上位にある呼び出し元が、要求された操作のアクセス許可を保持していません。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">ポート番号が無効です。</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
      <summary>リモート ホスト接続への非同期要求を開始します。 リモート ホストは、<see cref="T:System.Net.IPAddress" /> 配列とポート番号 (<see cref="T:System.Int32" />) で指定されます。</summary>
      <param name="addresses">リモート ホストを指定する 1 つ以上の <see cref="T:System.Net.IPAddress" />。</param>
      <param name="port">リモート ホストのポート番号。</param>
      <param name="requestCallback">操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">接続操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <paramref name="requestCallback" /> デリゲートに渡されます。</param>
      <returns>非同期接続を参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="addresses" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
      <exception cref="T:System.Security.SecurityException">コール スタックの上位にある呼び出し元が、要求された操作のアクセス許可を保持していません。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">ポート番号が無効です。</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
      <summary>リモート ホスト接続への非同期要求を開始します。 リモート ホストは、ホスト名 (<see cref="T:System.String" />) とポート番号 (<see cref="T:System.Int32" />) で指定されます。</summary>
      <param name="host">リモート ホストの名前。</param>
      <param name="port">リモート ホストのポート番号。</param>
      <param name="requestCallback">操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">接続操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <paramref name="requestCallback" /> デリゲートに渡されます。</param>
      <returns>非同期接続を参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="host" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
      <exception cref="T:System.Security.SecurityException">コール スタックの上位にある呼び出し元が、要求された操作のアクセス許可を保持していません。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">ポート番号が無効です。</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.Client">
      <summary>基になる <see cref="T:System.Net.Sockets.Socket" /> を取得または設定します。</summary>
      <returns>基になるネットワーク <see cref="T:System.Net.Sockets.Socket" />。</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Close">
      <summary>この <see cref="T:System.Net.Sockets.TcpClient" /> インスタンスを破棄し、基になる TCP 接続を終了するように要求します。</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
      <summary>指定された IP アドレスとポート番号を使用してクライアントをリモート TCP ホストと接続します。</summary>
      <param name="address">接続先ホストの <see cref="T:System.Net.IPAddress" />。</param>
      <param name="port">接続先のポート番号。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> が <see cref="F:System.Net.IPEndPoint.MinPort" /> と <see cref="F:System.Net.IPEndPoint.MaxPort" /> の間の値ではありません。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセス中にエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.TcpClient" /> は閉じています。</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
      <summary>指定された IP アドレスとポート番号を使用してクライアントをリモート TCP ホストと接続します。</summary>
      <param name="ipAddresses">接続先ホストの <see cref="T:System.Net.IPAddress" /> 配列。</param>
      <param name="port">接続先のポート番号。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ipAddresses" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">ポート番号が無効です。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
      <exception cref="T:System.Security.SecurityException">コール スタックの上位にある呼び出し元が、要求された操作のアクセス許可を保持していません。</exception>
      <exception cref="T:System.NotSupportedException">このメソッドは、<see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> フラグまたは <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> フラグを使用するソケットで有効です。</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
      <summary>指定されたリモート ネットワーク エンドポイントを使用してリモート TCP ホストにクライアントを接続します。</summary>
      <param name="remoteEP">接続先の <see cref="T:System.Net.IPEndPoint" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="remoteEp" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセス中にエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.TcpClient" /> が閉じています。</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
      <summary>指定されたホストの指定されたポートにクライアントを接続します。</summary>
      <param name="hostname">接続先のリモート ホストの DNS 名。</param>
      <param name="port">接続先のリモート ホストのポート番号。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hostname" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> パラメーターが <see cref="F:System.Net.IPEndPoint.MinPort" /> と <see cref="F:System.Net.IPEndPoint.MaxPort" /> の間にありません。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセス中にエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.TcpClient" /> は閉じています。</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
      <summary>指定された IP アドレスとポート番号を使用して、非同期操作としてクライアントをリモート TCP ホストに接続します。</summary>
      <param name="address">接続先ホストの <see cref="T:System.Net.IPAddress" />。</param>
      <param name="port">接続先のポート番号。</param>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> が <see cref="F:System.Net.IPEndPoint.MinPort" /> と <see cref="F:System.Net.IPEndPoint.MaxPort" /> の間の値ではありません。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセス中にエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.TcpClient" /> は閉じています。</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
      <summary>指定された IP アドレスとポート番号を使用して、非同期操作としてクライアントをリモート TCP ホストに接続します。</summary>
      <param name="addresses">接続先ホストの <see cref="T:System.Net.IPAddress" /> 配列。</param>
      <param name="port">接続先のポート番号。</param>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ipAddresses" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">ポート番号が無効です。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
      <exception cref="T:System.Security.SecurityException">コール スタックの上位にある呼び出し元が、要求された操作のアクセス許可を保持していません。</exception>
      <exception cref="T:System.NotSupportedException">このメソッドは、<see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> フラグまたは <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> フラグを使用するソケットで有効です。</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
      <summary>非同期操作として、クライアントを、指定したホストの指定したポートに接続します。</summary>
      <param name="host">接続先のリモート ホストの DNS 名。</param>
      <param name="port">接続先のリモート ホストのポート番号。</param>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hostname" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> パラメーターが <see cref="F:System.Net.IPEndPoint.MinPort" /> と <see cref="F:System.Net.IPEndPoint.MaxPort" /> の間にありません。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセス中にエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.TcpClient" /> は閉じています。</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.Connected">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> の基になる <see cref="T:System.Net.Sockets.TcpClient" /> がリモート ホストに接続されているかどうかを示す値を取得します。</summary>
      <returns>最後に実行された操作の時点で、<see cref="P:System.Net.Sockets.TcpClient.Client" /> ソケットがリモート リソースに接続されていた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Dispose">
      <summary>
        <see cref="T:System.Net.Sockets.TcpClient" /> によって使用されているマネージド リソースおよびアンマネージド リソースを解放します。</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
      <summary>
        <see cref="T:System.Net.Sockets.TcpClient" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" /> に設定し、アンマネージド リソースだけを解放する場合は <see langword="false" /> に設定します。</param>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
      <summary>保留中の非同期接続の試行を終了します。</summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> の呼び出しによって返される <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /> オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /> メソッドへの呼び出しで <paramref name="asyncResult" /> パラメーターが返されませんでした。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" /> メソッドは、非同期接続のために以前に呼び出されています。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <see cref="T:System.Net.Sockets.Socket" /> へのアクセスを試みているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">基になる <see cref="T:System.Net.Sockets.Socket" /> は閉じられています。</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
      <summary>
        <see cref="T:System.Boolean" /> で 1 つのクライアントだけがポートを使用できるかどうかを指定する <see cref="T:System.Net.Sockets.TcpClient" /> 値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Net.Sockets.TcpClient" /> で、1 つのクライアントだけが特定のポートを使用できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、Windows Server 2003 および Windows XP Service Pack 2 以降では <see langword="true" /> で、その他のすべてのバージョンでは <see langword="false" /> です。</returns>
      <exception cref="T:System.Net.Sockets.SocketException">基になるソケットへのアクセスを試みているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">基になる <see cref="T:System.Net.Sockets.Socket" /> は閉じられています。</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Finalize">
      <summary>
        <see cref="T:System.Net.Sockets.TcpClient" /> クラスによって使用されていたリソースを解放します。</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.GetStream">
      <summary>データの送受信に使用する <see cref="T:System.Net.Sockets.NetworkStream" /> を返します。</summary>
      <returns>基になる <see cref="T:System.Net.Sockets.NetworkStream" />。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.TcpClient" /> がリモート ホストに接続されていません。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.TcpClient" /> が閉じられました。</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.LingerState">
      <summary>関連付けられているソケットの待機状態に関する情報を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Net.Sockets.LingerOption" />。 既定では、接続の待機は無効です。</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.NoDelay">
      <summary>送信バッファーまたは受信バッファーが設定されているサイズを超えていない場合に、遅延を無効にする値を取得または設定します。</summary>
      <returns>
        <see langword="true" />遅延が無効な場合は。それ以外<see langword="false" />の場合は。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
      <summary>受信バッファーのサイズを取得または設定します。</summary>
      <returns>受信バッファー サイズ (バイト単位)。 既定値は 8,192 バイトです。</returns>
      <exception cref="T:System.Net.Sockets.SocketException">バッファー サイズの設定中にエラーが発生しました。  

または -  

 .NET Compact Framework アプリケーションでは、このプロパティは設定できません。 代替手段については、「解説」の「プラットフォームメモ」を参照してください。</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.ReceiveTimeout">
      <summary>読み取り操作が開始された後に <see cref="T:System.Net.Sockets.TcpClient" /> がデータの受信を待機する時間を取得または設定します。</summary>
      <returns>接続のタイムアウト値 (ミリ秒単位)。 既定値は 0 です。</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.SendBufferSize">
      <summary>送信バッファーのサイズを取得または設定します。</summary>
      <returns>送信バッファー サイズ (バイト単位)。 既定値は 8,192 バイトです。</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.SendTimeout">
      <summary>送信操作が正常に完了するのを <see cref="T:System.Net.Sockets.TcpClient" /> が待機する時間を取得または設定します。</summary>
      <returns>ミリ秒単位の送信タイムアウト値。 既定値は 0 です。</returns>
    </member>
    <member name="T:System.Net.Sockets.TcpListener">
      <summary>TCP ネットワーク クライアントからの接続をリッスンします。</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.#ctor(System.Int32)">
      <summary>指定したポートを待機する <see cref="T:System.Net.Sockets.TcpListener" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="port">受信接続の試行を待機するポート。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> が <see cref="F:System.Net.IPEndPoint.MinPort" /> と <see cref="F:System.Net.IPEndPoint.MaxPort" /> の間の値ではありません。</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPAddress,System.Int32)">
      <summary>指定したローカル IP アドレスとポート番号で受信接続の試行を待機する、<see cref="T:System.Net.Sockets.TcpListener" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="localaddr">ローカル IP アドレスを表す <see cref="T:System.Net.IPAddress" />。</param>
      <param name="port">受信接続の試行を待機するポート。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localaddr" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> が <see cref="F:System.Net.IPEndPoint.MinPort" /> と <see cref="F:System.Net.IPEndPoint.MaxPort" /> の間の値ではありません。</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPEndPoint)">
      <summary>指定したローカル エンドポイントを使用して、<see cref="T:System.Net.Sockets.TcpListener" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="localEP">リスナー <see cref="T:System.Net.Sockets.Socket" /> のバインド先のローカル エンドポイントを表す <see cref="T:System.Net.IPEndPoint" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localEP" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.AcceptSocket">
      <summary>保留中の接続要求を受け入れます。</summary>
      <returns>データの送受信に使用する <see cref="T:System.Net.Sockets.Socket" />。</returns>
      <exception cref="T:System.InvalidOperationException">リスナーが、<see cref="M:System.Net.Sockets.TcpListener.Start" /> への呼び出しで開始されていません。</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.AcceptSocketAsync">
      <summary>保留中の接続要求を非同期操作として受け入れます。</summary>
      <returns>非同期操作を表すタスク オブジェクト。 タスク オブジェクトの <see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティは、データの送受信に使用される <see cref="T:System.Net.Sockets.Socket" /> を返します。</returns>
      <exception cref="T:System.InvalidOperationException">リスナーが、<see cref="M:System.Net.Sockets.TcpListener.Start" /> への呼び出しで開始されていません。</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.AcceptTcpClient">
      <summary>保留中の接続要求を受け入れます。</summary>
      <returns>データの送受信に使用する <see cref="T:System.Net.Sockets.TcpClient" />。</returns>
      <exception cref="T:System.InvalidOperationException">リスナーが、<see cref="M:System.Net.Sockets.TcpListener.Start" /> への呼び出しで開始されていません。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> プロパティを使用して特定のエラー コードを取得します。 このコードを取得したら、Windows Sockets Version 2 API エラー コードのマニュアルからエラーの詳細情報を確認できます。</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.AcceptTcpClientAsync">
      <summary>保留中の接続要求を非同期操作として受け入れます。</summary>
      <returns>非同期操作を表すタスク オブジェクト。 タスク オブジェクトの <see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティは、データの送受信に使用される <see cref="T:System.Net.Sockets.TcpClient" /> を返します。</returns>
      <exception cref="T:System.InvalidOperationException">リスナーが、<see cref="M:System.Net.Sockets.TcpListener.Start" /> への呼び出しで開始されていません。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> プロパティを使用して特定のエラー コードを取得します。 このコードを取得したら、Windows Sockets Version 2 API エラー コードのマニュアルからエラーの詳細情報を確認できます。</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpListener.Active">
      <summary>
        <see cref="T:System.Net.Sockets.TcpListener" /> がクライアント接続をアクティブに待機しているかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Net.Sockets.TcpListener" /> がアクティブに待機している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)">
      <summary>
        <see cref="T:System.Net.Sockets.TcpListener" /> インスタンスのネットワーク アドレス変換 (NAT: Network Address Translation) トラバーサルを有効または無効にします。</summary>
      <param name="allowed">NAT トラバーサルを有効にするか無効にするかを指定するブール値。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)" /> メソッドが、<see cref="M:System.Net.Sockets.TcpListener.Start" /> メソッドの呼び出し後に呼び出されました。</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)">
      <summary>受信接続の試行を受け入れる非同期操作を開始します。</summary>
      <param name="callback">操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">受け入れ操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <paramref name="callback" /> デリゲートに渡されます。</param>
      <returns>
        <see cref="T:System.IAsyncResult" /> の非同期の作成を参照する <see cref="T:System.Net.Sockets.Socket" />。</returns>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試みているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)">
      <summary>受信接続の試行を受け入れる非同期操作を開始します。</summary>
      <param name="callback">操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">受け入れ操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <paramref name="callback" /> デリゲートに渡されます。</param>
      <returns>
        <see cref="T:System.IAsyncResult" /> の非同期の作成を参照する <see cref="T:System.Net.Sockets.TcpClient" />。</returns>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試みているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.Create(System.Int32)">
      <summary>指定したポートをリッスンする新しい <see cref="T:System.Net.Sockets.TcpListener" /> インスタンスを作成します。</summary>
      <param name="port">受信接続の試行を待機するポート。</param>
      <returns>指定されたポートをリッスンする <see cref="T:System.Net.Sockets.TcpListener" /> の新しいインスタンス。</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)">
      <summary>受信接続の試行を非同期的に受け入れ、新しい <see cref="T:System.Net.Sockets.Socket" /> を作成してリモート ホスト通信を処理します。</summary>
      <param name="asyncResult">
        <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" /> メソッドへの呼び出しで返された <see cref="T:System.IAsyncResult" />。</param>
      <returns>
        <see cref="T:System.Net.Sockets.Socket" />。  
データの送受信に使用する <see cref="T:System.Net.Sockets.Socket" />。</returns>
      <exception cref="T:System.ObjectDisposedException">基になる <see cref="T:System.Net.Sockets.Socket" /> は閉じられています。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" /> メソッドへの呼び出しで <paramref name="asyncResult" /> パラメーターが作成されませんでした。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)" /> メソッドは既に呼び出されました。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <see cref="T:System.Net.Sockets.Socket" /> へのアクセスを試みているときにエラーが発生しました。</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.EndAcceptTcpClient(System.IAsyncResult)">
      <summary>受信接続の試行を非同期的に受け入れ、新しい <see cref="T:System.Net.Sockets.TcpClient" /> を作成してリモート ホスト通信を処理します。</summary>
      <param name="asyncResult">
        <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)" /> メソッドへの呼び出しで返された <see cref="T:System.IAsyncResult" />。</param>
      <returns>
        <see cref="T:System.Net.Sockets.TcpClient" />。  
データの送受信に使用する <see cref="T:System.Net.Sockets.TcpClient" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpListener.ExclusiveAddressUse">
      <summary>
        <see cref="T:System.Net.Sockets.TcpListener" /> で、1 つの基になるソケットだけに特定のポートの待機を許可するかどうかを指定する <see cref="T:System.Boolean" /> 値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Net.Sockets.TcpListener" /> で、1 つの <see cref="T:System.Net.Sockets.TcpListener" /> だけに特定のポートの待機を許可する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 . 既定値は、Windows Server 2003 および Windows XP Service Pack 2 以降では <see langword="true" /> で、その他のすべてのバージョンでは <see langword="false" /> です。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.TcpListener" />が開始されました。 <see cref="M:System.Net.Sockets.TcpListener.Stop" /> メソッドを呼び出して、<see cref="P:System.Net.Sockets.Socket.ExclusiveAddressUse" /> プロパティを設定してください。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">基になるソケットへのアクセスを試みているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">基になる <see cref="T:System.Net.Sockets.Socket" /> は閉じられています。</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpListener.LocalEndpoint">
      <summary>現在の <see cref="T:System.Net.Sockets.TcpListener" /> の基になる <see cref="T:System.Net.EndPoint" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Net.EndPoint" /> をバインドする対象の <see cref="T:System.Net.Sockets.Socket" />。</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.Pending">
      <summary>保留中の接続要求があるかどうかを確認します。</summary>
      <returns>接続が保留中の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.InvalidOperationException">リスナーが、<see cref="M:System.Net.Sockets.TcpListener.Start" /> への呼び出しで開始されていません。</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpListener.Server">
      <summary>基になるネットワーク <see cref="T:System.Net.Sockets.Socket" /> を取得します。</summary>
      <returns>基になる <see cref="T:System.Net.Sockets.Socket" />。</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.Start">
      <summary>受信接続要求のリッスンを開始します。</summary>
      <exception cref="T:System.Net.Sockets.SocketException">
        <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> プロパティを使用して特定のエラー コードを取得します。 このコードを取得したら、Windows Sockets Version 2 API エラー コードのマニュアルからエラーの詳細情報を確認できます。</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.Start(System.Int32)">
      <summary>最大数の保留中の接続がある状態で、受信接続要求のリッスンを開始します。</summary>
      <param name="backlog">保留中の接続のキューの最大長。</param>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセス中にエラーが発生しました。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="backlog" /> パラメーターが 0 未満か、または使用できる接続の最大数を超えています。</exception>
      <exception cref="T:System.InvalidOperationException">基になる <see cref="T:System.Net.Sockets.Socket" /> が null です。</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.Stop">
      <summary>リスナーを閉じます。</summary>
      <exception cref="T:System.Net.Sockets.SocketException">
        <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> プロパティを使用して特定のエラー コードを取得します。 このコードを取得したら、Windows Sockets Version 2 API エラー コードのマニュアルからエラーの詳細情報を確認できます。</exception>
    </member>
    <member name="T:System.Net.Sockets.TransmitFileOptions">
      <summary>
        <see cref="T:System.Net.Sockets.TransmitFileOptions" /> 列挙体は、ファイル転送要求で使用する値を定義します。</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.Disconnect">
      <summary>すべてのファイル データが伝送キューに置かれた後で、トランスポート レベルの接続解除を開始します。 <see cref="F:System.Net.Sockets.TransmitFileOptions.ReuseSocket" /> で使用する場合、これらのフラグは、ファイルの送信後に、ソケットを接続解除された再利用可能な状態に戻します。</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.ReuseSocket">
      <summary>要求が完了すると、ソケット ハンドルは再利用できます。 このフラグは、同時に <see cref="F:System.Net.Sockets.TransmitFileOptions.Disconnect" /> も指定されている場合にだけ有効です。 <see cref="F:System.Net.Sockets.TransmitFileOptions.Disconnect" /> で使用する場合、これらのフラグは、ファイルの送信後に、ソケットを接続解除された再利用可能な状態に戻します。</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread">
      <summary>既定スレッドを使用して長いファイルの転送要求を処理します。</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.UseKernelApc">
      <summary>長いファイルの転送要求を処理するには、ワーカー スレッドの代わりに、カーネルの非同期プロシージャ呼び出し (APC: asynchronous procedure call) を使用します。 長い要求は、ファイルやキャッシュから複数回読み取りを行う必要がある要求として定義されます。したがって、この要求はファイルのサイズや送信パケットに指定した長さに依存します。</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.UseSystemThread">
      <summary>システム スレッドを使用して長いファイルの転送要求を処理します。</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.WriteBehind">
      <summary>ファイル転送要求を、保留せず、すぐに完了させます。 このフラグが指定されていてファイル転送も成功した場合、データはシステムによって受け入れられますが、リモート エンドによって応答されるとは限りません。 このフラグを、<see cref="F:System.Net.Sockets.TransmitFileOptions.Disconnect" /> フラグおよび <see cref="F:System.Net.Sockets.TransmitFileOptions.ReuseSocket" /> フラグと共に使用しないでください。</summary>
    </member>
    <member name="T:System.Net.Sockets.UdpClient">
      <summary>ユーザー データグラム プロトコル (UDP) のネットワーク サービスを提供します。</summary>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor">
      <summary>
        <see cref="T:System.Net.Sockets.UdpClient" /> クラスの新しいインスタンスを初期化します。</summary>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセス中にエラーが発生しました。</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
      <summary>
        <see cref="T:System.Net.Sockets.UdpClient" /> クラスの新しいインスタンスを初期化し、指定したローカル ポート番号にバインドします。</summary>
      <param name="port">通信を開始するローカル ポート番号。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> パラメーターが <see cref="F:System.Net.IPEndPoint.MaxPort" /> より大きい値か <see cref="F:System.Net.IPEndPoint.MinPort" /> より小さい値です。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセス中にエラーが発生しました。</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
      <summary>
        <see cref="T:System.Net.Sockets.UdpClient" /> クラスの新しいインスタンスを初期化し、指定したローカル ポート番号にバインドします。</summary>
      <param name="port">受信接続の試行を待機するポート。</param>
      <param name="family">ソケットのアドレッシング スキームを指定する <see cref="T:System.Net.Sockets.AddressFamily" /> 値の 1 つ。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="family" /> が、<see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> でも <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> でもありません。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> は <see cref="F:System.Net.IPEndPoint.MaxPort" /> を超えているか、または <see cref="F:System.Net.IPEndPoint.MinPort" /> 未満です。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセス中にエラーが発生しました。</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
      <summary>
        <see cref="T:System.Net.Sockets.UdpClient" /> クラスの新しいインスタンスを初期化し、指定したローカル エンドポイントにバインドします。</summary>
      <param name="localEP">UDP 接続のバインド先のローカル エンドポイントを表す <see cref="T:System.Net.IPEndPoint" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localEP" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセス中にエラーが発生しました。</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
      <summary>
        <see cref="T:System.Net.Sockets.UdpClient" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="family">ソケットのアドレッシング スキームを指定する <see cref="T:System.Net.Sockets.AddressFamily" /> 値の 1 つ。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="family" /> が、<see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> でも <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> でもありません。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセス中にエラーが発生しました。</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
      <summary>
        <see cref="T:System.Net.Sockets.UdpClient" /> クラスの新しいインスタンスを初期化し、既定のリモート ホストを確立します。</summary>
      <param name="hostname">接続先のリモート DNS ホスト名。</param>
      <param name="port">接続先のリモート ポート番号。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hostname" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> が <see cref="F:System.Net.IPEndPoint.MinPort" /> と <see cref="F:System.Net.IPEndPoint.MaxPort" /> の間の値ではありません。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセス中にエラーが発生しました。</exception>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.Active">
      <summary>既定のリモート ホストが確立されたかどうかを示す値を取得または設定します。</summary>
      <returns>接続がアクティブな場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)">
      <summary>
        <see cref="T:System.Net.Sockets.UdpClient" /> インスタンスのネットワーク アドレス変換 (NAT: Network Address Translation) トラバーサルを有効または無効にします。</summary>
      <param name="allowed">NAT トラバーサルを有効にするか無効にするかを指定するブール値。</param>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.Available">
      <summary>読み取りが可能なネットワークから受信したデータの量を取得します。</summary>
      <returns>ネットワークから受信したデータのバイト数。</returns>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試みているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
      <summary>データグラムをリモート ホストから非同期的に受信します。</summary>
      <param name="requestCallback">操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">受信操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <paramref name="requestCallback" /> デリゲートに渡されます。</param>
      <returns>非同期の受信を参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
      <summary>データグラムをリモート ホストに非同期的に送信します。 送信先は、<see cref="Overload:System.Net.Sockets.UdpClient.Connect" /> の呼び出しであらかじめ指定されています。</summary>
      <param name="datagram">送信されるデータを格納する <see cref="T:System.Byte" /> 配列。</param>
      <param name="bytes">送信するバイト数。</param>
      <param name="requestCallback">操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">送信操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <paramref name="requestCallback" /> デリゲートに渡されます。</param>
      <returns>非同期の送信を参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
      <summary>データグラムを送信先に非同期的に送信します。 送信先は、<see cref="T:System.Net.EndPoint" /> で指定されます。</summary>
      <param name="datagram">送信されるデータを格納する <see cref="T:System.Byte" /> 配列。</param>
      <param name="bytes">送信するバイト数。</param>
      <param name="endPoint">データの送信先を表す <see cref="T:System.Net.EndPoint" />。</param>
      <param name="requestCallback">操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">送信操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <paramref name="requestCallback" /> デリゲートに渡されます。</param>
      <returns>非同期の送信を参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
      <summary>データグラムを送信先に非同期的に送信します。 送信先は、ホスト名とポート番号で指定されます。</summary>
      <param name="datagram">送信されるデータを格納する <see cref="T:System.Byte" /> 配列。</param>
      <param name="bytes">送信するバイト数。</param>
      <param name="hostname">送信先のホスト。</param>
      <param name="port">送信先のポート番号。</param>
      <param name="requestCallback">操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="state">送信操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <paramref name="requestCallback" /> デリゲートに渡されます。</param>
      <returns>非同期の送信を参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.Client">
      <summary>基になるネットワーク <see cref="T:System.Net.Sockets.Socket" /> を取得または設定します。</summary>
      <returns>基になるネットワーク <see cref="T:System.Net.Sockets.Socket" />。</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Close">
      <summary>UDP 接続を終了します。</summary>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセス中にエラーが発生しました。</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
      <summary>指定した IP アドレスとポート番号を使用して、既定のリモート ホストを確立します。</summary>
      <param name="addr">データ送信先のリモート ホストの <see cref="T:System.Net.IPAddress" />。</param>
      <param name="port">データ送信先のポート番号。</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpClient" /> は閉じています。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="addr" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> が <see cref="F:System.Net.IPEndPoint.MinPort" /> と <see cref="F:System.Net.IPEndPoint.MaxPort" /> の間の値ではありません。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセス中にエラーが発生しました。</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
      <summary>指定されたネットワーク エンドポイントを使用して、既定のリモート ホストを確立します。</summary>
      <param name="endPoint">データ送信先のネットワーク エンドポイントを指定する <see cref="T:System.Net.IPEndPoint" />。</param>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセス中にエラーが発生しました。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="endPoint" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpClient" /> が閉じています。</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
      <summary>指定したホスト名とポート番号を使用して、既定のリモート ホストを確立します。</summary>
      <param name="hostname">データ送信先のリモート ホストの DNS 名。</param>
      <param name="port">データ送信先のリモート ホストのポート番号。</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpClient" /> が閉じています。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> が <see cref="F:System.Net.IPEndPoint.MinPort" /> と <see cref="F:System.Net.IPEndPoint.MaxPort" /> の間の値ではありません。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセス中にエラーが発生しました。</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Dispose">
      <summary>
        <see cref="T:System.Net.Sockets.UdpClient" /> によって使用されているマネージド リソースおよびアンマネージド リソースを解放します。</summary>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)">
      <summary>
        <see cref="T:System.Net.Sockets.UdpClient" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.DontFragment">
      <summary>
        <see cref="T:System.Net.Sockets.UdpClient" /> でインターネット プロトコル (IP) データグラムの断片化を許可するかどうかを指定する <see cref="T:System.Boolean" /> 値を、取得または設定します。</summary>
      <returns>
        <see cref="T:System.Net.Sockets.UdpClient" /> でデータグラムの断片化を許可する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
      <exception cref="T:System.NotSupportedException">このプロパティは、<see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> フラグまたは <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> フラグを使用するソケットに対してのみ設定できます。</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
      <summary>マルチキャスト グループへの参加を取り消します。</summary>
      <param name="multicastAddr">参加を取り消すマルチキャスト グループの <see cref="T:System.Net.IPAddress" />。</param>
      <exception cref="T:System.ObjectDisposedException">基になる <see cref="T:System.Net.Sockets.Socket" /> は閉じられています。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセス中にエラーが発生しました。</exception>
      <exception cref="T:System.ArgumentException">この IP アドレスは、ソケットのアドレッシング スキームを定義する <see cref="T:System.Net.Sockets.AddressFamily" /> 値と互換性がありません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="multicastAddr" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
      <summary>マルチキャスト グループへの参加を取り消します。</summary>
      <param name="multicastAddr">参加を取り消すマルチキャスト グループの <see cref="T:System.Net.IPAddress" />。</param>
      <param name="ifindex">参加を取り消すマルチキャスト グループのローカル アドレス。</param>
      <exception cref="T:System.ObjectDisposedException">基になる <see cref="T:System.Net.Sockets.Socket" /> は閉じられています。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセス中にエラーが発生しました。</exception>
      <exception cref="T:System.ArgumentException">この IP アドレスは、ソケットのアドレッシング スキームを定義する <see cref="T:System.Net.Sockets.AddressFamily" /> 値と互換性がありません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="multicastAddr" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.EnableBroadcast">
      <summary>
        <see cref="T:System.Boolean" /> がブロードキャスト パケットの送受信を許可するかどうかを指定する <see cref="T:System.Net.Sockets.UdpClient" /> 値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Net.Sockets.UdpClient" /> でブロードキャスト パケットを許可する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
      <summary>保留中の非同期受信を終了します。</summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> の呼び出しによって返される <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" /> オブジェクト。</param>
      <param name="remoteEP">指定したリモート エンドポイント。</param>
      <returns>成功した場合は、データグラム データを格納するバイトの配列。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" /> メソッドへの呼び出しで <paramref name="asyncResult" /> が返されませんでした。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)" /> が、非同期の読み取りのために以前に呼び出されています。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">基になる <see cref="T:System.Net.Sockets.Socket" /> へのアクセスを試みているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">基になる <see cref="T:System.Net.Sockets.Socket" /> は閉じられています。</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)">
      <summary>保留中の非同期送信を終了します。</summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> の呼び出しによって返される <see cref="Overload:System.Net.Sockets.UdpClient.BeginSend" /> オブジェクト。</param>
      <returns>正常に完了した場合は、<see cref="T:System.Net.Sockets.UdpClient" /> に送信されたバイト数。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> メソッドへの呼び出しで <paramref name="asyncResult" /> が返されませんでした。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /> が、非同期の読み取りのために以前に呼び出されています。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">基になるソケットへのアクセスを試みているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">基になる <see cref="T:System.Net.Sockets.Socket" /> は閉じられています。</exception>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse">
      <summary>
        <see cref="T:System.Boolean" /> で 1 つのクライアントだけがポートを使用できるかどうかを指定する <see cref="T:System.Net.Sockets.UdpClient" /> 値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Net.Sockets.UdpClient" /> で、1 つのクライアントだけが特定のポートを使用できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、Windows Server 2003 および Windows XP Service Pack 2 以降では <see langword="true" /> で、その他のすべてのバージョンでは <see langword="false" /> です。</returns>
      <exception cref="T:System.Net.Sockets.SocketException">基になるソケットへのアクセスを試みているときにエラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException">基になる <see cref="T:System.Net.Sockets.Socket" /> は閉じられています。</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)">
      <summary>
        <see cref="T:System.Net.Sockets.UdpClient" /> をマルチキャスト グループに追加します。</summary>
      <param name="ifindex">マルチキャスト グループを結合するローカル IP アドレスが関連付けられているインターフェイス インデックス。</param>
      <param name="multicastAddr">参加対象のグループのマルチキャスト <see cref="T:System.Net.IPAddress" />。</param>
      <exception cref="T:System.ObjectDisposedException">基になる <see cref="T:System.Net.Sockets.Socket" /> は閉じられています。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセス中にエラーが発生しました。</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
      <summary>
        <see cref="T:System.Net.Sockets.UdpClient" /> をマルチキャスト グループに追加します。</summary>
      <param name="multicastAddr">参加対象のグループのマルチキャスト <see cref="T:System.Net.IPAddress" />。</param>
      <exception cref="T:System.ObjectDisposedException">基になる <see cref="T:System.Net.Sockets.Socket" /> は閉じられています。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセス中にエラーが発生しました。</exception>
      <exception cref="T:System.ArgumentException">この IP アドレスは、ソケットのアドレッシング スキームを定義する <see cref="T:System.Net.Sockets.AddressFamily" /> 値と互換性がありません。</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
      <summary>指定された有効期間 (TTL: Time to Live) で <see cref="T:System.Net.Sockets.UdpClient" /> をマルチキャスト グループに追加します。</summary>
      <param name="multicastAddr">参加するマルチキャスト グループの <see cref="T:System.Net.IPAddress" />。</param>
      <param name="timeToLive">ルーター ホップ数で計測した有効期間 (TTL)。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">提供される TTL の値が 0 から 255 ではありません。</exception>
      <exception cref="T:System.ObjectDisposedException">基になる <see cref="T:System.Net.Sockets.Socket" /> は閉じられています。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセス中にエラーが発生しました。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="multicastAddr" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">この IP アドレスは、ソケットのアドレッシング スキームを定義する <see cref="T:System.Net.Sockets.AddressFamily" /> 値と互換性がありません。</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)">
      <summary>
        <see cref="T:System.Net.Sockets.UdpClient" /> をマルチキャスト グループに追加します。</summary>
      <param name="multicastAddr">参加対象のグループのマルチキャスト <see cref="T:System.Net.IPAddress" />。</param>
      <param name="localAddress">ローカル <see cref="T:System.Net.IPAddress" />。</param>
      <exception cref="T:System.ObjectDisposedException">基になる <see cref="T:System.Net.Sockets.Socket" /> は閉じられています。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセス中にエラーが発生しました。</exception>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.MulticastLoopback">
      <summary>発信マルチキャスト パケットが送信元アプリケーションに配信されるかどうかを指定する <see cref="T:System.Boolean" /> 値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Net.Sockets.UdpClient" /> が発信マルチキャスト パケットを受け取る場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
      <summary>リモート ホストが送信した UDP データグラムを返します。</summary>
      <param name="remoteEP">データの送信元のリモート ホストを表す <see cref="T:System.Net.IPEndPoint" />。</param>
      <returns>データグラム データを格納する <see cref="T:System.Byte" /> 型の配列</returns>
      <exception cref="T:System.ObjectDisposedException">基になる <see cref="T:System.Net.Sockets.Socket" /> は閉じられています。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセス中にエラーが発生しました。</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.ReceiveAsync">
      <summary>リモート ホストが送信した UDP データグラムを非同期的に返します。</summary>
      <returns>非同期操作を表すタスク オブジェクト。</returns>
      <exception cref="T:System.ObjectDisposedException">基になる <see cref="T:System.Net.Sockets.Socket" /> は閉じられています。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセス中にエラーが発生しました。</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
      <summary>リモート ホストに UDP データグラムを送信します。</summary>
      <param name="dgram">バイトの配列として表された、送信する UDP データグラムを指定する <see cref="T:System.Byte" /> 型の配列。</param>
      <param name="bytes">データグラム内のバイト数。</param>
      <returns>送信されたバイト数。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dgram" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.UdpClient" /> が既定のリモート ホストを既に確立しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpClient" /> が閉じています。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセス中にエラーが発生しました。</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
      <summary>指定したリモート エンドポイントにあるホストに UDP データグラムを送信します。</summary>
      <param name="dgram">バイトの配列として表された、送信する UDP データグラムを指定する <see cref="T:System.Byte" /> 型の配列。</param>
      <param name="bytes">データグラム内のバイト数。</param>
      <param name="endPoint">データグラムの送信先のホストとポートを表す <see cref="T:System.Net.IPEndPoint" />。</param>
      <returns>送信されたバイト数。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dgram" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.UdpClient" /> が既定のリモート ホストを既に確立しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpClient" /> が閉じています。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセス中にエラーが発生しました。</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
      <summary>指定されたリモート ホストの指定されたポートに UDP データグラムを送信します。</summary>
      <param name="dgram">バイトの配列として表された、送信する UDP データグラムを指定する <see cref="T:System.Byte" /> 型の配列。</param>
      <param name="bytes">データグラム内のバイト数。</param>
      <param name="hostname">データグラム送信先のリモート ホストの名前。</param>
      <param name="port">通信先のリモート ポート番号。</param>
      <returns>送信されたバイト数。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dgram" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.UdpClient" /> が既定のリモート ホストを既に確立しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpClient" /> が閉じています。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセス中にエラーが発生しました。</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
      <summary>UDP データグラムをリモート ホストに非同期的に送信します。</summary>
      <param name="datagram">バイトの配列として表された、送信する UDP データグラムを指定する <see cref="T:System.Byte" /> 型の配列。</param>
      <param name="bytes">データグラム内のバイト数。</param>
      <returns>
        <see cref="T:System.Threading.Tasks.Task`1" /> を返します。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dgram" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.UdpClient" /> が既定のリモート ホストを既に確立しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpClient" /> が閉じています。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセス中にエラーが発生しました。</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
      <summary>UDP データグラムをリモート ホストに非同期的に送信します。</summary>
      <param name="datagram">バイトの配列として表された、送信する UDP データグラムを指定する <see cref="T:System.Byte" /> 型の配列。</param>
      <param name="bytes">データグラム内のバイト数。</param>
      <param name="endPoint">データグラムの送信先のホストとポートを表す <see cref="T:System.Net.IPEndPoint" />。</param>
      <returns>
        <see cref="T:System.Threading.Tasks.Task`1" /> を返します。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dgram" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.UdpClient" /> が既定のリモート ホストを既に確立しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpClient" /> が閉じています。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセス中にエラーが発生しました。</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
      <summary>UDP データグラムをリモート ホストに非同期的に送信します。</summary>
      <param name="datagram">バイトの配列として表された、送信する UDP データグラムを指定する <see cref="T:System.Byte" /> 型の配列。</param>
      <param name="bytes">データグラム内のバイト数。</param>
      <param name="hostname">データグラム送信先のリモート ホストの名前。</param>
      <param name="port">通信先のリモート ポート番号。</param>
      <returns>
        <see cref="T:System.Threading.Tasks.Task`1" /> を返します。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dgram" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.UdpClient" /> が既定のリモート ホストを既に確立しました。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpClient" /> が閉じています。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセス中にエラーが発生しました。</exception>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.Ttl">
      <summary>
        <see cref="T:System.Net.Sockets.UdpClient" /> によって送信されたインターネット プロトコル (IP) パケットの有効期間 (TTL) の値を指定する値を取得または設定します。</summary>
      <returns>TTL の値。</returns>
    </member>
    <member name="T:System.Net.Sockets.UdpReceiveResult">
      <summary>
        <see cref="M:System.Net.Sockets.UdpClient.ReceiveAsync" /> メソッドの呼び出しからの UPD 受け取り結果情報を示します。</summary>
    </member>
    <member name="M:System.Net.Sockets.UdpReceiveResult.#ctor(System.Byte[],System.Net.IPEndPoint)">
      <summary>
        <see cref="T:System.Net.Sockets.UdpReceiveResult" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="buffer">UDP パケット内で受信するデータ用のバッファー。</param>
      <param name="remoteEndPoint">UDP パケットのリモート エンドポイントです。</param>
    </member>
    <member name="P:System.Net.Sockets.UdpReceiveResult.Buffer">
      <summary>UDP パケット内で受信されたデータを含むパケットを取得します。</summary>
      <returns>UDP パケット内で受信されたデータを含む <see cref="T:System.Byte" /> 配列。</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpReceiveResult.Equals(System.Net.Sockets.UdpReceiveResult)">
      <summary>このインスタンスが、指定されたオブジェクトと等価であるかどうかを示す値を返します。</summary>
      <param name="other">このインスタンスと比較するオブジェクト。</param>
      <returns>
        <paramref name="other" /> が <see cref="T:System.Net.Sockets.UdpReceiveResult" /> のインスタンスであり、そのインスタンスの値に等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpReceiveResult.Equals(System.Object)">
      <summary>このインスタンスが、指定されたオブジェクトと等価であるかどうかを示す値を返します。</summary>
      <param name="obj">このインスタンスと比較するオブジェクト。</param>
      <returns>
        <paramref name="obj" /> が <see cref="T:System.Net.Sockets.UdpReceiveResult" /> のインスタンスであり、そのインスタンスの値に等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpReceiveResult.GetHashCode">
      <summary>このインスタンスのハッシュ コードを返します。</summary>
      <returns>ハッシュ コード。</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpReceiveResult.op_Equality(System.Net.Sockets.UdpReceiveResult,System.Net.Sockets.UdpReceiveResult)">
      <summary>指定した 2 つの <see cref="T:System.Net.Sockets.UdpReceiveResult" /> インスタンスが等価であるかどうかをテストします。</summary>
      <param name="left">等値演算子の左側に表示される <see cref="T:System.Net.Sockets.UdpReceiveResult" /> インスタンス。</param>
      <param name="right">等値演算子の右側に表示される <see cref="T:System.Net.Sockets.UdpReceiveResult" /> インスタンス。</param>
      <returns>
        <see langword="true" /> と <paramref name="left" /> が等しい場合は <paramref name="right" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpReceiveResult.op_Inequality(System.Net.Sockets.UdpReceiveResult,System.Net.Sockets.UdpReceiveResult)">
      <summary>指定した 2 つの <see cref="T:System.Net.Sockets.UdpReceiveResult" /> インスタンスが等しくないかどうかをテストします。</summary>
      <param name="left">非等値演算子の左辺の <see cref="T:System.Net.Sockets.UdpReceiveResult" /> インスタンス。</param>
      <param name="right">非等値演算子の右辺の <see cref="T:System.Net.Sockets.UdpReceiveResult" /> インスタンス。</param>
      <returns>
        <paramref name="left" /> と <paramref name="right" /> が等しくない場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Sockets.UdpReceiveResult.RemoteEndPoint">
      <summary>UDP パケットの送信元のリモート エンドポイントを取得します。</summary>
      <returns>UDP パケットの送信元のリモート エンドポイント。</returns>
    </member>
    <member name="T:System.Net.Sockets.UnixDomainSocketEndPoint">
      <summary>UNIX ドメイン ソケット エンドポイントをパスとして表します。</summary>
    </member>
    <member name="M:System.Net.Sockets.UnixDomainSocketEndPoint.#ctor(System.String)">
      <param name="path" />
    </member>
  </members>
</doc>