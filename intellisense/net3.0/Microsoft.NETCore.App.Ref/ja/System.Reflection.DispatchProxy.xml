<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Reflection.DispatchProxy</name>
  </assembly>
  <members>
    <member name="T:System.Reflection.DispatchProxy">
      <summary>プロキシ オブジェクトのインスタンス化およびそのメソッドのディスパッチ処理のメカニズムを提供します。</summary>
    </member>
    <member name="M:System.Reflection.DispatchProxy.#ctor" />
    <member name="M:System.Reflection.DispatchProxy.Create``2">
      <summary>クラス <typeparamref name="TProxy" /> から派生し、インターフェイス <typeparamref name="T" /> を実装するオブジェクト インスタンスを作成します。</summary>
      <typeparam name="T">プロキシが実装する必要があるインターフェイス。</typeparam>
      <typeparam name="TProxy">プロキシクラスに使用する基本クラス。</typeparam>
      <returns>
        <typeparamref name="T" /> を実装するオブジェクト インスタンス。</returns>
      <exception cref="T:System.ArgumentException">
        <typeparamref name="T" /> がクラスであるか、<typeparamref name="TProxy" /> がシールドされているか、パラメーターなしのコンストラクターがありません。</exception>
    </member>
    <member name="M:System.Reflection.DispatchProxy.Invoke(System.Reflection.MethodInfo,System.Object[])">
      <summary>生成されたプロキシ型の任意のメソッドが呼び出されるたびに、コントロールをディスパッチするためにこのメソッドが呼び出されます。</summary>
      <param name="targetMethod">呼び出し元が呼び出したメソッド。</param>
      <param name="args">呼び出し元がメソッドに渡した引数。</param>
      <returns>呼び出し元に返すオブジェクト。void メソッドの場合は <see langword="null" />。</returns>
    </member>
  </members>
</doc>