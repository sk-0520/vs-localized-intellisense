<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net.WebSockets.Client</name>
  </assembly>
  <members>
    <member name="T:System.Net.WebSockets.ClientWebSocket">
      <summary>Proporciona un cliente para conectarse a los servicios de WebSocket.</summary>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.#ctor">
      <summary>Crea una instancia de la clase <see cref="T:System.Net.WebSockets.ClientWebSocket" />.</summary>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.Abort">
      <summary>Anula la conexión y cualquier operación pendiente de E/S.</summary>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
      <summary>Cierra la instancia <see cref="T:System.Net.WebSockets.ClientWebSocket" /> como una operación asincrónica.</summary>
      <param name="closeStatus">El estado de cierre de WebSocket.</param>
      <param name="statusDescription">Descripción de estado de cierre.</param>
      <param name="cancellationToken">Token de cancelación que se usa para propagar la notificación de que se debería cancelar esta operación.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
      <summary>Cierre la salida de la instancia <see cref="T:System.Net.WebSockets.ClientWebSocket" /> como una operación asincrónica.</summary>
      <param name="closeStatus">El estado de cierre de WebSocket.</param>
      <param name="statusDescription">Descripción de estado de cierre.</param>
      <param name="cancellationToken">Token de cancelación que se usa para propagar la notificación de que se debería cancelar esta operación.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocket.CloseStatus">
      <summary>Obtiene la razón por la que el se inició el enlace de cierre en la instancia <see cref="T:System.Net.WebSockets.ClientWebSocket" />.</summary>
      <returns>La razón por la que el se inició el enlace de cierre.</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocket.CloseStatusDescription">
      <summary>Obtiene la descripción de la causa por la que se cerró la instancia de <see cref="T:System.Net.WebSockets.ClientWebSocket" />.</summary>
      <returns>La descripción de la causa por la que se cerró la instancia de <see cref="T:System.Net.WebSockets.ClientWebSocket" />.</returns>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.ConnectAsync(System.Uri,System.Threading.CancellationToken)">
      <summary>Conectarse a un servidor de WebSocket como una operación asincrónica.</summary>
      <param name="uri">El URI del servidor de WebSocket al que conectarse.</param>
      <param name="cancellationToken">Un token de cancelación que se puede usar para propagar la notificación de que la operación debe cancelarse.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.Dispose">
      <summary>Libera los recursos no administrados que utiliza la instancia <see cref="T:System.Net.WebSockets.ClientWebSocket" />.</summary>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocket.Options">
      <summary>Obtiene las opciones de WebSocket para la instancia <see cref="T:System.Net.WebSockets.ClientWebSocket" /> .</summary>
      <returns>Las opciones de WebSocket para la instancia <see cref="T:System.Net.WebSockets.ClientWebSocket" /> .</returns>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
      <summary>Recibe datos en <see cref="T:System.Net.WebSockets.ClientWebSocket" /> como una operación asincrónica.</summary>
      <param name="buffer">El búfer para recibir la respuesta.</param>
      <param name="cancellationToken">Token de cancelación que se usa para propagar la notificación de que se debería cancelar esta operación.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.InvalidOperationException">El elemento <see cref="T:System.Net.WebSockets.ClientWebSocket" /> no está conectado.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.WebSockets.ClientWebSocket" /> se ha cerrado.</exception>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.ReceiveAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <summary>Recibe datos en <see cref="T:System.Net.WebSockets.ClientWebSocket" /> en un rango de memoria de bytes como una operación asincrónica.</summary>
      <param name="buffer">Región de memoria que va a recibir la respuesta.</param>
      <param name="cancellationToken">Token de cancelación que se usa para propagar la notificación de que se debería cancelar esta operación.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.InvalidOperationException">El elemento <see cref="T:System.Net.WebSockets.ClientWebSocket" /> no está conectado.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.WebSockets.ClientWebSocket" /> se ha cerrado.</exception>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
      <summary>Envía datos de <see cref="T:System.Net.WebSockets.ClientWebSocket" /> como una operación asincrónica.</summary>
      <param name="buffer">Búfer que contiene el mensaje que se enviará.</param>
      <param name="messageType">Uno de los valores de enumeración que especifica si el búfer es texto no cifrado o se encuentra en formato binario.</param>
      <param name="endOfMessage">
        <see langword="true" /> para indicar que es el envío asincrónico final; en caso contrario, <see langword="false" />.</param>
      <param name="cancellationToken">Token de cancelación que se usa para propagar la notificación de que se debería cancelar esta operación.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.InvalidOperationException">El elemento <see cref="T:System.Net.WebSockets.ClientWebSocket" /> no está conectado.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.WebSockets.ClientWebSocket" /> se ha cerrado.</exception>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.SendAsync(System.ReadOnlyMemory{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
      <summary>Envía datos de <see cref="T:System.Net.WebSockets.ClientWebSocket" /> a partir de un rango de memoria de bytes de solo lectura como una operación asincrónica.</summary>
      <param name="buffer">Región de memoria que contiene el mensaje que se va a enviar.</param>
      <param name="messageType">Uno de los valores de enumeración que especifica si el búfer es texto no cifrado o se encuentra en formato binario.</param>
      <param name="endOfMessage">
        <see langword="true" /> para indicar que es el envío asincrónico final; en caso contrario, <see langword="false" />.</param>
      <param name="cancellationToken">Token de cancelación que se usa para propagar la notificación de que se debería cancelar esta operación.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.InvalidOperationException">El elemento <see cref="T:System.Net.WebSockets.ClientWebSocket" /> no está conectado.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.WebSockets.ClientWebSocket" /> se ha cerrado.</exception>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocket.State">
      <summary>Obtiene el estado de WebSocket de la instancia <see cref="T:System.Net.WebSockets.ClientWebSocket" />.</summary>
      <returns>El estado de WebSocket de la instancia <see cref="T:System.Net.WebSockets.ClientWebSocket" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocket.SubProtocol">
      <summary>Obtiene el subprotocolo compatible de WebSocket para la instancia <see cref="T:System.Net.WebSockets.ClientWebSocket" /> .</summary>
      <returns>El subprotocolo compatible de WebSocket.</returns>
    </member>
    <member name="T:System.Net.WebSockets.ClientWebSocketOptions">
      <summary>Opciones para utilizar con un objeto <see cref="T:System.Net.WebSockets.ClientWebSocket" /> .</summary>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocketOptions.AddSubProtocol(System.String)">
      <summary>Agrega un subprotocolo que se negociará durante el protocolo de enlace de la conexión WebSocket.</summary>
      <param name="subProtocol">El subprotocolo de WebSocket que se va a agregar.</param>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocketOptions.ClientCertificates">
      <summary>Obtiene o establece una colección de certificados del lado cliente.</summary>
      <returns>Una colección de certificados del lado cliente.</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocketOptions.Cookies">
      <summary>Obtiene o establece las cookies asociadas a la solicitud.</summary>
      <returns>Las cookies asociadas a la solicitud.</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocketOptions.Credentials">
      <summary>Obtiene o establece la información de credenciales para el cliente.</summary>
      <returns>La información de credenciales para el cliente.</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocketOptions.KeepAliveInterval">
      <summary>Obtiene o establece el intervalo persistente del protocolo WebSocket.</summary>
      <returns>El intervalo persistente del protocolo WebSocket.</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocketOptions.Proxy">
      <summary>Obtiene o establece el proxy para las solicitudes WebSocket.</summary>
      <returns>El proxy para las solicitudes WebSocket.</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocketOptions.RemoteCertificateValidationCallback" />
    <member name="M:System.Net.WebSockets.ClientWebSocketOptions.SetBuffer(System.Int32,System.Int32)">
      <summary>Establece los parámetros de búfer del cliente.</summary>
      <param name="receiveBufferSize">Tamaño, en bytes, del búfer de recepción de cliente.</param>
      <param name="sendBufferSize">Tamaño, en bytes, del búfer de envío de cliente.</param>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocketOptions.SetBuffer(System.Int32,System.Int32,System.ArraySegment{System.Byte})">
      <summary>Establece parámetros de búfer del cliente.</summary>
      <param name="receiveBufferSize">Tamaño, en bytes, del búfer de recepción de cliente.</param>
      <param name="sendBufferSize">Tamaño, en bytes, del búfer de envío de cliente.</param>
      <param name="buffer">El tamaño de búfer que se va a usar.</param>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocketOptions.SetRequestHeader(System.String,System.String)">
      <summary>Crea un encabezado de solicitud HTTP y su valor.</summary>
      <param name="headerName">Nombre del encabezado HTTP.</param>
      <param name="headerValue">Valor del encabezado HTTP.</param>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocketOptions.UseDefaultCredentials">
      <summary>Obtiene o establece un valor <see cref="T:System.Boolean" /> que indica si las credenciales predeterminadas deben utilizarse durante el protocolo de enlace de WebSocket.</summary>
      <returns>
        <see langword="true" />Si se deben usar credenciales predeterminadas durante el protocolo de enlace de WebSocket; en caso <see langword="false" />contrario,. De manera predeterminada, es <see langword="true" />.</returns>
    </member>
  </members>
</doc>