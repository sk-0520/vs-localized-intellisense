<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net.Sockets</name>
  </assembly>
  <members>
    <member name="T:System.Net.Sockets.IOControlCode">
      <summary>Especifica los códigos de control de E/S admitidos por el método <see cref="M:System.Net.Sockets.Socket.IOControl(System.Int32,System.Byte[],System.Byte[])" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AbsorbRouterAlert">
      <summary>Este valor es igual a la constante SIO_ABSORB_RTRALERT de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AddMulticastGroupOnInterface">
      <summary>Se utiliza para unirse a un grupo de multidifusión a través de una interfaz identificada por su índice. Este código de control es compatible con Windows 2000 y los sistemas operativos posteriores. Este valor es igual a la constante SIO_INDEX_ADD_MCAST de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AddressListChange">
      <summary>Habilita la recepción de notificaciones cuando cambia la lista de interfaces locales de la familia de protocolos del socket. Este código de control es compatible con Windows 2000 y los sistemas operativos posteriores. Este valor es igual a la constante SIO_ADDRESS_LIST_CHANGE de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AddressListQuery">
      <summary>Devuelve la lista de interfaces locales a las que el socket se puede enlazar. Este código de control es compatible con Windows 2000 y los sistemas operativos posteriores. Este valor es igual a la constante SIO_ADDRESS_LIST_QUERY de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AddressListSort">
      <summary>Ordena la estructura devuelta por el campo <see cref="F:System.Net.Sockets.IOControlCode.AddressListQuery" /> y agrega información de identificador de ámbito para las direcciones IPv6. Este código de control es compatible con Windows XP y los sistemas operativos posteriores. Este valor es igual a la constante SIO_ADDRESS_LIST_SORT de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AssociateHandle">
      <summary>Asocie este socket al identificador (handle) especificado de la interfaz correspondiente. Vea el anexo específico de cada protocolo en la referencia o la documentación de Winsock 2 que trata sobre cada interfaz para obtener información adicional detallada. Se recomienda utilizar el Modelo de objetos componentes (COM) en lugar de este comando IOCTL para detectar y realizar un seguimiento del resto de interfaces que puede admitir un socket. Este código de control está presente por la compatibilidad con versiones anteriores, en sistemas donde COM no esté disponible o no se pueda utilizar por alguna otra razón. Este valor es igual a la constante SIO_ASSOCIATE_HANDLE de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AsyncIO">
      <summary>Habilita la notificación cuando hay datos a la espera de recibirse. Este valor es igual a la constante FIOASYNC de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.BindToInterface">
      <summary>Enlaza el socket a un índice de interfaz especificado. Este código de control es compatible con Windows 2000 y los sistemas operativos posteriores. Este valor es igual a la constante SIO_INDEX_BIND de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.DataToRead">
      <summary>Devuelve el número de bytes disponibles para leer. Este valor es igual a la constante FIONREAD de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.DeleteMulticastGroupFromInterface">
      <summary>Quita el socket de un grupo de multidifusión. Este código de control es compatible con Windows 2000 y los sistemas operativos posteriores. Este valor es igual a la constante SIO_INDEX_ADD_MCAST de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.EnableCircularQueuing">
      <summary>Reemplaza el datagrama en cola más antiguo por un datagrama de entrada cuando las colas de mensajes entrantes están completas. Este valor es igual a la constante SIO_ENABLE_CIRCULAR_QUEUEING de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.Flush">
      <summary>Descarta el contenido de la cola de envío. Este valor es igual a la constante SIO_FLUSH de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.GetBroadcastAddress">
      <summary>Devuelve una estructura SOCKADDR que contiene la dirección de difusión de la familia de direcciones del socket actual. La dirección devuelta se puede utilizar con el método <see cref="Overload:System.Net.Sockets.Socket.SendTo" />. Este valor es igual a la constante SIO_GET_BROADCAST_ADDRESS de Winsock 2. Su valor sólo se puede utilizar en sockets UDP (Protocolo de datagramas de usuarios).</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.GetExtensionFunctionPointer">
      <summary>Obtiene funciones específicas del proveedor que no forman parte de la especificación Winsock. Las funciones se especifican utilizando el GUID asignado por su proveedor. Este valor es igual a la constante SIO_GET_EXTENSION_FUNCTION_POINTER de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.GetGroupQos">
      <summary>Devuelve los atributos de Calidad del servicio (QoS) del grupo de sockets. Este valor se reserva para uso futuro y es igual a la constante SIO_GET_GROUP_QOS de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.GetQos">
      <summary>Recupera la estructura QoS asociada al socket. Este control sólo puede utilizar en plataformas que proporcionan un transporte compatible con QoS (Windows Me, Windows 2000 y posteriores). Este valor es igual a la constante SIO_GET_QOS de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.KeepAliveValues">
      <summary>Controla el envío de paquetes TCP "keep-alive" y el intervalo en el que se envían. Este código de control es compatible con Windows 2000 y los sistemas operativos posteriores. Para obtener información adicional, consulte el documento RFC 1122 sección 4.2.3.6. Este valor es igual a la constante SIO_KEEPALIVE_VALS de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.LimitBroadcasts">
      <summary>Este valor es igual a la constante SIO_LIMIT_BROADCASTS de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.MulticastInterface">
      <summary>Establece la interfaz utilizada para los paquetes de multidifusión salientes. La interfaz se identifica mediante su índice. Este código de control es compatible con Windows 2000 y los sistemas operativos posteriores.  Este valor es igual a la constante SIO_INDEX_MCASTIF de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.MulticastScope">
      <summary>Controla el número de veces que un enrutador puede reenviar un paquete de multidifusión, también conocido como TTL (Período de vida o, en inglés, Time To Live) o número de saltos. Este valor es igual a la constante SIO_MULTICAST_SCOPE de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.MultipointLoopback">
      <summary>Controla si los datos de multidifusión enviados por el socket aparecerán como datos de entrada en la cola de recepción de sockets. Este valor es igual a la constante SIO_MULTIPOINT_LOOPBACK de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.NamespaceChange">
      <summary>Controla si el socket recibirá notificación cuando una consulta de espacio de nombres deje de ser válida. Este código de control es compatible con Windows XP y los sistemas operativos posteriores. Este valor es igual a la constante SIO_NSP_NOTIFY_CHANGE de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.NonBlockingIO">
      <summary>Controla el comportamiento de bloqueo del socket. Si el argumento especificado en este código de control es cero, el socket se coloca en modo de bloqueo. Si el argumento es distinto de cero, el socket se coloca en modo de no bloqueo. Este valor es igual a la constante FIONBIO de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.OobDataRead">
      <summary>Devuelve información sobre datos fuera de banda a la espera de recibirse. Al utilizar este código de control en sockets de secuencia, el valor devuelto indica el número de bytes disponibles.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.QueryTargetPnpHandle">
      <summary>Recupera el identificador SOCKET del proveedor subyacente. Dicho identificador se puede utilizar para recibir la notificación de eventos Plug and Play. Este código de control es compatible con Windows 2000 y los sistemas operativos posteriores. Este valor es igual a la constante SIO_QUERY_TARGET_PNP_HANDLE de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.ReceiveAll">
      <summary>Permite la recepción de todos los paquetes IPv4 de la red. El socket debe tener la familia de direcciones <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />; el tipo de socket debe ser <see cref="F:System.Net.Sockets.SocketType.Raw" /> y el tipo de protocolo debe ser <see cref="F:System.Net.Sockets.ProtocolType.IP" />. El usuario actual debe pertenecer al grupo Administradores del equipo local, y el socket debe estar enlazado a un puerto concreto. Este código de control es compatible con Windows 2000 y los sistemas operativos posteriores. Este valor es igual a la constante SIO_RCVALL de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.ReceiveAllIgmpMulticast">
      <summary>Permite la recepción de todos los paquetes IGMP (Protocolo de administración de grupos de Internet) de la red. El socket debe tener la familia de direcciones <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />; el tipo de socket debe ser <see cref="F:System.Net.Sockets.SocketType.Raw" /> y el tipo de protocolo debe ser <see cref="F:System.Net.Sockets.ProtocolType.Igmp" />. El usuario actual debe pertenecer al grupo Administradores del equipo local, y el socket debe estar enlazado a un puerto concreto. Este código de control es compatible con Windows 2000 y los sistemas operativos posteriores. Este valor es igual a la constante SIO_RCVALL_IGMPMCAST de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.ReceiveAllMulticast">
      <summary>Permite la recepción de todos los paquetes de multidifusión IPv4 de la red. Éstos son paquetes cuya dirección de destino se encuentra en el intervalo 224.0.0.0 a 239.255.255.255. El socket debe tener la familia de direcciones <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />; el tipo de socket debe ser <see cref="F:System.Net.Sockets.SocketType.Raw" /> y el tipo de protocolo debe ser <see cref="F:System.Net.Sockets.ProtocolType.Udp" />. El usuario actual debe pertenecer al grupo Administradores del equipo local, y el socket debe estar enlazado a un puerto concreto. Este código de control es compatible con Windows 2000 y los sistemas operativos posteriores. Este valor es igual a la constante SIO_RCVALL_MCAST de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.RoutingInterfaceChange">
      <summary>Habilita la recepción de notificación cuando la interfaz local utilizada para obtener acceso a un extremo remoto de la red varía. Este valor es igual a la constante SIO_ROUTING_INTERFACE_CHANGE de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.RoutingInterfaceQuery">
      <summary>Devuelve las direcciones de interfaz que se pueden utilizar para conectar con la dirección remota especificada. Este valor es igual a la constante SIO_ROUTING_INTERFACE_QUERY de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.SetGroupQos">
      <summary>Establece los atributos de Calidad del servicio (QoS) del grupo de sockets. Este valor se reserva para uso futuro y es igual a la constante SIO_SET_GROUP_QOS de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.SetQos">
      <summary>Establece los atributos de Calidad del servicio (QoS) del socket. QoS define los requisitos de ancho de banda del socket. Este código de control es compatible con Windows Me, Windows 2000 y los sistemas operativos posteriores. Este valor es igual a la constante SIO_SET_QOS de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.TranslateHandle">
      <summary>Devuelve un identificador (handle) del socket que es válido en el contexto de una interfaz de complemento. Este valor es igual a la constante SIO_TRANSLATE_HANDLE de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.UnicastInterface">
      <summary>Establece la interfaz utilizada para los paquetes de unidifusión salientes. Este valor es igual a la constante SIO_UCAST_IF de Winsock 2.</summary>
    </member>
    <member name="T:System.Net.Sockets.IPPacketInformation">
      <summary>Presenta la información de paquete de una llamada a <see cref="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> o <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" />.</summary>
    </member>
    <member name="P:System.Net.Sockets.IPPacketInformation.Address">
      <summary>Obtiene la información del origen del paquete que se recibió como resultado de una llamada al método <see cref="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> o <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" />.</summary>
      <returns>Una <see cref="T:System.Net.IPAddress" /> que indica la información del origen del paquete recibido como resultado de llamar al método <see cref="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> o al método <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" />. Para los paquetes enviados desde una dirección unidifusión, la propiedad <see cref="P:System.Net.Sockets.IPPacketInformation.Address" /> devolverá la <see cref="T:System.Net.IPAddress" /> del remitente; en el caso de los paquetes de multidifusión o difusión, la propiedad <see cref="P:System.Net.Sockets.IPPacketInformation.Address" /> devolverá la <see cref="T:System.Net.IPAddress" /> de multidifusión o difusión.</returns>
    </member>
    <member name="M:System.Net.Sockets.IPPacketInformation.Equals(System.Object)">
      <summary>Devuelve un valor que indica si esta instancia es igual que un objeto especificado.</summary>
      <param name="comparand">Objeto que se va a comparar con esta instancia.</param>
      <returns>Es <see langword="true" /> si <paramref name="comparand" /> es una instancia de <see cref="T:System.Net.Sockets.IPPacketInformation" /> y es igual al valor de la instancia; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.IPPacketInformation.GetHashCode">
      <summary>Devuelve el código hash de esta instancia.</summary>
      <returns>Un código hash Int32.</returns>
    </member>
    <member name="P:System.Net.Sockets.IPPacketInformation.Interface">
      <summary>Obtiene la información de la interfaz de red que está asociada a una llamada a <see cref="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> o <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" />.</summary>
      <returns>Un valor <see cref="T:System.Int32" />, que representa el índice de la interfaz de red. Este índice se puede utilizar con <see cref="M:System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces" /> para obtener más información sobre la interfaz pertinente.</returns>
    </member>
    <member name="M:System.Net.Sockets.IPPacketInformation.op_Equality(System.Net.Sockets.IPPacketInformation,System.Net.Sockets.IPPacketInformation)">
      <summary>Comprueba si dos instancias de <see cref="T:System.Net.Sockets.IPPacketInformation" /> especificadas son equivalentes.</summary>
      <param name="packetInformation1">Instancia de <see cref="T:System.Net.Sockets.IPPacketInformation" /> situada a la izquierda del operador de igualdad.</param>
      <param name="packetInformation2">Instancia de <see cref="T:System.Net.Sockets.IPPacketInformation" /> situada a la derecha del operador de igualdad.</param>
      <returns>
        <see langword="true" /> si <paramref name="packetInformation1" /> y <paramref name="packetInformation2" /> son iguales; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.IPPacketInformation.op_Inequality(System.Net.Sockets.IPPacketInformation,System.Net.Sockets.IPPacketInformation)">
      <summary>Comprueba si dos instancias especificadas de <see cref="T:System.Net.Sockets.IPPacketInformation" /> no son iguales.</summary>
      <param name="packetInformation1">Instancia de <see cref="T:System.Net.Sockets.IPPacketInformation" /> situada a la izquierda del operador de desigualdad.</param>
      <param name="packetInformation2">Instancia de <see cref="T:System.Net.Sockets.IPPacketInformation" /> situada a la derecha del operador de desigualdad.</param>
      <returns>
        <see langword="true" /> si <paramref name="packetInformation1" /> y <paramref name="packetInformation2" /> no son iguales; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Sockets.IPProtectionLevel">
      <summary>Representa un valor que permite restringir un socket de IPv6 al ámbito especificado, como direcciones con el mismo prefijo local de vínculo o sitio.</summary>
    </member>
    <member name="F:System.Net.Sockets.IPProtectionLevel.EdgeRestricted">
      <summary>El nivel de protección de IP tiene una restricción perimetral. Este valor lo usan las aplicaciones diseñadas para funcionar a través de Internet. Este valor no permite NAT (Traducción de direcciones de red) transversal mediante la implementación de Teredo en Windows. Estas aplicaciones pueden eludir los firewalls de IPv4, lo que hace necesario protegerlas frente a los ataques por Internet dirigidos al puerto abierto. En Windows Server 2003 y Windows XP, el valor predeterminado para el nivel de protección de IP en un socket es la restricción perimetral.</summary>
    </member>
    <member name="F:System.Net.Sockets.IPProtectionLevel.Restricted">
      <summary>El nivel de protección de IP está restringido. Este valor lo usan las aplicaciones de intranet que no implementan escenarios de Internet. Estas aplicaciones no se suelen probar ni proteger frente a los ataques por Internet. Este valor limitará el tráfico recibido a las direcciones locales de vínculo.</summary>
    </member>
    <member name="F:System.Net.Sockets.IPProtectionLevel.Unrestricted">
      <summary>El nivel de protección de IP no está restringido. Este valor lo usan las aplicaciones diseñadas para funcionar a través de Internet, incluidas las aplicaciones que aprovechan las funciones de NAT transversal de IPv6 integradas en Windows (por ejemplo, Teredo). Estas aplicaciones pueden eludir los firewalls de IPv4, lo que hace necesario protegerlas frente a los ataques por Internet dirigidos al puerto abierto. En Windows Server 2008 R2 y Windows Vista, el valor predeterminado para el nivel de protección de IP en un socket es no restringido.</summary>
    </member>
    <member name="F:System.Net.Sockets.IPProtectionLevel.Unspecified">
      <summary>El nivel de protección de IP no está especificado. En Windows 7 y Windows Server 2008 R2, este es el valor predeterminado para el nivel de protección de IP en un socket.</summary>
    </member>
    <member name="T:System.Net.Sockets.IPv6MulticastOption">
      <summary>Contiene valores de opciones para unirse a un grupo de multidifusión IPv6.</summary>
    </member>
    <member name="M:System.Net.Sockets.IPv6MulticastOption.#ctor(System.Net.IPAddress)">
      <summary>Inicializa una nueva versión de la clase <see cref="T:System.Net.Sockets.IPv6MulticastOption" /> para el grupo de multidifusión de IP especificado.</summary>
      <param name="group">
        <see cref="T:System.Net.IPAddress" /> del grupo de multidifusión.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="group" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.IPv6MulticastOption.#ctor(System.Net.IPAddress,System.Int64)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Sockets.IPv6MulticastOption" /> con el grupo de multidifusión IP y la dirección de interfaz local especificados.</summary>
      <param name="group">
        <see cref="T:System.Net.IPAddress" /> del grupo.</param>
      <param name="ifindex">La dirección de interfaz local.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ifindex" /> es menor que 0.  
o bien 
 <paramref name="ifindex" /> es mayor que 0x00000000FFFFFFFF.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="group" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Net.Sockets.IPv6MulticastOption.Group">
      <summary>Obtiene o establece la dirección IP de un grupo de multidifusión.</summary>
      <returns>
        <see cref="T:System.Net.IPAddress" /> que contiene la dirección de Internet de un grupo de multidifusión.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="group" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Net.Sockets.IPv6MulticastOption.InterfaceIndex">
      <summary>Obtiene o establece el índice de interfaz asociado a un grupo de multidifusión.</summary>
      <returns>Valor <see cref="T:System.UInt64" /> que especifica la dirección de la interfaz.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor especificado para una determinada operación es menor que 0 o mayor que 0x00000000FFFFFFFF.</exception>
    </member>
    <member name="T:System.Net.Sockets.LingerOption">
      <summary>Especifica si un objeto <see cref="T:System.Net.Sockets.Socket" /> seguirá estando conectado después de llamar a los métodos <see cref="M:System.Net.Sockets.Socket.Close" /> o <see cref="M:System.Net.Sockets.TcpClient.Close" />, así como la duración de la conexión si hay datos pendientes de enviar.</summary>
    </member>
    <member name="M:System.Net.Sockets.LingerOption.#ctor(System.Boolean,System.Int32)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Sockets.LingerOption" />.</summary>
      <param name="enable">
        <see langword="true" /> para que continúe la conexión después de llamar al método <see cref="M:System.Net.Sockets.Socket.Close" />; <see langword="false" /> en cualquier otro caso.</param>
      <param name="seconds">Número de segundos que debe permanecer abierta la conexión después de llamar al método <see cref="M:System.Net.Sockets.Socket.Close" />.</param>
    </member>
    <member name="P:System.Net.Sockets.LingerOption.Enabled">
      <summary>Obtiene o establece un valor que indica si se permite un plazo de permanencia después de cerrar <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.Net.Sockets.Socket" /> tuviera que permanecer después de llamar al método <see cref="M:System.Net.Sockets.Socket.Close" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.LingerOption.LingerTime">
      <summary>Obtiene o establece el período de tiempo que la conexión permanece abierta después de llamar al método <see cref="M:System.Net.Sockets.Socket.Close" /> si quedan datos pendientes de envío.</summary>
      <returns>El tiempo, en segundos, que debe permanecer abierta la conexión después de llamar al método <see cref="M:System.Net.Sockets.Socket.Close" />.</returns>
    </member>
    <member name="T:System.Net.Sockets.MulticastOption">
      <summary>Contiene los valores de <see cref="T:System.Net.IPAddress" /> usados para unirse y separarse de un grupo de multidifusión.</summary>
    </member>
    <member name="M:System.Net.Sockets.MulticastOption.#ctor(System.Net.IPAddress)">
      <summary>Inicializa una nueva versión de la clase <see cref="T:System.Net.Sockets.MulticastOption" /> para el grupo de multidifusión de IP especificado.</summary>
      <param name="group">
        <see cref="T:System.Net.IPAddress" /> del grupo de multidifusión.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="group" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.MulticastOption.#ctor(System.Net.IPAddress,System.Int32)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Sockets.MulticastOption" /> con la dirección del grupo de multidifusión IP y el índice de interfaz especificados.</summary>
      <param name="group">
        <see cref="T:System.Net.IPAddress" /> del grupo de multidifusión.</param>
      <param name="interfaceIndex">Índice de la interfaz que se utiliza para enviar y recibir paquetes de multidifusión.</param>
    </member>
    <member name="M:System.Net.Sockets.MulticastOption.#ctor(System.Net.IPAddress,System.Net.IPAddress)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Sockets.MulticastOption" /> con las direcciones de grupo de multidifusión de IP y de IP local especificadas asociadas a una interfaz de red.</summary>
      <param name="group">
        <see cref="T:System.Net.IPAddress" /> del grupo.</param>
      <param name="mcint">
        <see cref="T:System.Net.IPAddress" /> local.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="group" /> es <see langword="null" />.  
o bien 
 <paramref name="mcint" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Net.Sockets.MulticastOption.Group">
      <summary>Obtiene o establece la dirección IP de un grupo de multidifusión.</summary>
      <returns>
        <see cref="T:System.Net.IPAddress" /> que contiene la dirección de Internet de un grupo de multidifusión.</returns>
    </member>
    <member name="P:System.Net.Sockets.MulticastOption.InterfaceIndex">
      <summary>Obtiene o establece el Índice de la interfaz que se utiliza para enviar y recibir paquetes de multidifusión.</summary>
      <returns>Un entero que representa el índice del elemento de una matriz <see cref="T:System.Net.NetworkInformation.NetworkInterface" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.MulticastOption.LocalAddress">
      <summary>Obtiene o establece la dirección local asociada a un grupo de multidifusión.</summary>
      <returns>
        <see cref="T:System.Net.IPAddress" /> que contiene la dirección local asociada a un grupo de multidifusión.</returns>
    </member>
    <member name="T:System.Net.Sockets.NetworkStream">
      <summary>Proporciona el flujo de datos subyacente para el acceso a través de la red.</summary>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket)">
      <summary>Crea una nueva instancia de la clase <see cref="T:System.Net.Sockets.NetworkStream" /> para el elemento <see cref="T:System.Net.Sockets.Socket" /> especificado.</summary>
      <param name="socket">El elemento <see cref="T:System.Net.Sockets.Socket" /> que usará <see cref="T:System.Net.Sockets.NetworkStream" /> para enviar y recibir datos.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="socket" /> es <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException">El parámetro <paramref name="socket" /> no está conectado.  
O bien 
La propiedad <see cref="P:System.Net.Sockets.Socket.SocketType" /> del parámetro <paramref name="socket" /> no es <see cref="F:System.Net.Sockets.SocketType.Stream" />.  
O bien 
El parámetro <paramref name="socket" /> está en un estado de no bloqueo.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Sockets.NetworkStream" /> para el elemento <see cref="T:System.Net.Sockets.Socket" /> especificado con la propiedad <see cref="T:System.Net.Sockets.Socket" /> especificada.</summary>
      <param name="socket">El elemento <see cref="T:System.Net.Sockets.Socket" /> que usará <see cref="T:System.Net.Sockets.NetworkStream" /> para enviar y recibir datos.</param>
      <param name="ownsSocket">Se establece en <see langword="true" /> para indicar que <see cref="T:System.Net.Sockets.NetworkStream" /> tomará posesión de <see cref="T:System.Net.Sockets.Socket" />; en caso contrario, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="socket" /> es <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException">El parámetro <paramref name="socket" /> no está conectado.  
o bien 
El valor de la propiedad <see cref="P:System.Net.Sockets.Socket.SocketType" /> del parámetro <paramref name="socket" /> no es <see cref="F:System.Net.Sockets.SocketType.Stream" />.  
O bien 
El parámetro <paramref name="socket" /> está en un estado de no bloqueo.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.IO.FileAccess)">
      <summary>Crea una nueva instancia de la clase <see cref="T:System.Net.Sockets.NetworkStream" /> para el elemento <see cref="T:System.Net.Sockets.Socket" /> especificado con los derechos de acceso indicados.</summary>
      <param name="socket">El elemento <see cref="T:System.Net.Sockets.Socket" /> que usará <see cref="T:System.Net.Sockets.NetworkStream" /> para enviar y recibir datos.</param>
      <param name="access">Combinación bit a bit de los valores de <see cref="T:System.IO.FileAccess" /> que especifican el tipo de acceso dado a <see cref="T:System.Net.Sockets.NetworkStream" /> en el elemento <see cref="T:System.Net.Sockets.Socket" /> proporcionado.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="socket" /> es <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException">El parámetro <paramref name="socket" /> no está conectado.  
o bien 
La propiedad <see cref="P:System.Net.Sockets.Socket.SocketType" /> del parámetro <paramref name="socket" /> no es <see cref="F:System.Net.Sockets.SocketType.Stream" />.  
o bien 
El parámetro <paramref name="socket" /> está en un estado de no bloqueo.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.IO.FileAccess,System.Boolean)">
      <summary>Crea una nueva instancia de la clase <see cref="T:System.Net.Sockets.NetworkStream" /> para el elemento <see cref="T:System.Net.Sockets.Socket" /> especificado con los derechos de acceso y la propiedad del elemento <see cref="T:System.Net.Sockets.Socket" /> indicado.</summary>
      <param name="socket">El elemento <see cref="T:System.Net.Sockets.Socket" /> que usará <see cref="T:System.Net.Sockets.NetworkStream" /> para enviar y recibir datos.</param>
      <param name="access">Combinación bit a bit de los valores de <see cref="T:System.IO.FileAccess" /> que especifican el tipo de acceso dado a <see cref="T:System.Net.Sockets.NetworkStream" /> en el elemento <see cref="T:System.Net.Sockets.Socket" /> proporcionado.</param>
      <param name="ownsSocket">Se establece en <see langword="true" /> para indicar que <see cref="T:System.Net.Sockets.NetworkStream" /> tomará posesión de <see cref="T:System.Net.Sockets.Socket" />; en caso contrario, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="socket" /> es <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException">El parámetro <paramref name="socket" /> no está conectado.  
o bien 
La propiedad <see cref="P:System.Net.Sockets.Socket.SocketType" /> del parámetro <paramref name="socket" /> no es <see cref="F:System.Net.Sockets.SocketType.Stream" />.  
o bien 
El parámetro <paramref name="socket" /> está en un estado de no bloqueo.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Comienza una lectura asincrónica de <see cref="T:System.Net.Sockets.NetworkStream" />.</summary>
      <param name="buffer">Matriz de tipo <see cref="T:System.Byte" /> que corresponde a la ubicación de la memoria donde se almacenan los datos leídos de <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
      <param name="offset">Ubicación de <paramref name="buffer" /> donde se inicia el almacenamiento de los datos.</param>
      <param name="size">Número de bytes que se va a leer de <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
      <param name="callback">Delegado de <see cref="T:System.AsyncCallback" /> que se ejecuta al finalizar <see cref="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</param>
      <param name="state">Objeto que contiene los datos adicionales definidos por el usuario.</param>
      <returns>Elemento <see cref="T:System.IAsyncResult" /> que representa la llamada asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="offset" /> es menor que 0.  
o bien 
El parámetro <paramref name="offset" /> es mayor que la longitud del parámetro <paramref name="buffer" />.  
o bien 
<paramref name="size" /> es menor que 0.  
O bien 
<paramref name="size" /> es mayor que la longitud de <paramref name="buffer" /> menos el valor del parámetro <paramref name="offset" />.</exception>
      <exception cref="T:System.IO.IOException">El elemento <see cref="T:System.Net.Sockets.Socket" /> subyacente está cerrado.  
o bien 
Se produce un error al leer de la red.  
o bien 
Se produjo un error al acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">La clase <see cref="T:System.Net.Sockets.NetworkStream" /> está cerrada.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Inicia una escritura asincrónica en una secuencia.</summary>
      <param name="buffer">Una matriz de tipo <see cref="T:System.Byte" /> que contiene los datos que se va a escribir en <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
      <param name="offset">Ubicación de <paramref name="buffer" /> en la que se inicia el envío de datos.</param>
      <param name="size">Número de bytes que se van a escribir en <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
      <param name="callback">Delegado de <see cref="T:System.AsyncCallback" /> que se ejecuta al finalizar <see cref="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</param>
      <param name="state">Objeto que contiene los datos adicionales definidos por el usuario.</param>
      <returns>Elemento <see cref="T:System.IAsyncResult" /> que representa la llamada asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="offset" /> es menor que 0.  
o bien 
El parámetro <paramref name="offset" /> es mayor que la longitud de <paramref name="buffer" />.  
o bien 
El parámetro <paramref name="size" /> es menor que 0.  
o bien 
El parámetro <paramref name="size" /> es mayor que la longitud de <paramref name="buffer" /> menos el valor del parámetro <paramref name="offset" />.</exception>
      <exception cref="T:System.IO.IOException">El elemento <see cref="T:System.Net.Sockets.Socket" /> subyacente está cerrado.  
O bien 
Se produjo un error al escribir en la red.  
O bien 
Se produjo un error al acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">La clase <see cref="T:System.Net.Sockets.NetworkStream" /> está cerrada.</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.CanRead">
      <summary>Obtiene un valor que indica si <see cref="T:System.Net.Sockets.NetworkStream" /> admite la lectura.</summary>
      <returns>
        <see langword="true" /> si se pueden leer los datos de la secuencia; en caso contrario, <see langword="false" />. El valor predeterminado es <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.CanSeek">
      <summary>Obtiene un valor que indica si la secuencia admite búsquedas. Esta propiedad no se admite actualmente. Esta propiedad devuelve siempre <see langword="false" />.</summary>
      <returns>
        <see langword="false" /> en todos los casos para indicar que <see cref="T:System.Net.Sockets.NetworkStream" /> no puede buscar una ubicación específica en la secuencia.</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.CanTimeout">
      <summary>Indica si las propiedades de tiempo de espera pueden utilizarse para <see cref="T:System.Net.Sockets.NetworkStream" />.</summary>
      <returns>
        <see langword="true" /> en todos los casos.</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.CanWrite">
      <summary>Obtiene un valor que indica si <see cref="T:System.Net.Sockets.NetworkStream" /> admite la escritura.</summary>
      <returns>Es <see langword="true" /> si se pueden escribir datos en <see cref="T:System.Net.Sockets.NetworkStream" />; en caso contrario, es <see langword="false" />. El valor predeterminado es <see langword="true" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Close(System.Int32)">
      <summary>Cierra <see cref="T:System.Net.Sockets.NetworkStream" /> después de esperar el tiempo especificado para permitir que se envíen los datos.</summary>
      <param name="timeout">Un entero con signo de 32 bits que especifica el número de milisegundos que se debe esperar para enviar los datos restantes antes de salir.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="timeout" /> es menor que -1.</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.DataAvailable">
      <summary>Obtiene un valor que indica si hay datos disponibles en <see cref="T:System.Net.Sockets.NetworkStream" /> para su lectura.</summary>
      <returns>
        <see langword="true" /> si hay datos que leer en la secuencia; en caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ObjectDisposedException">La clase <see cref="T:System.Net.Sockets.NetworkStream" /> está cerrada.</exception>
      <exception cref="T:System.IO.IOException">El elemento <see cref="T:System.Net.Sockets.Socket" /> subyacente está cerrado.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Use la propiedad <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> para obtener el código de error concreto y consulte la documentación de códigos de error de la API de Windows Sockets, versión 2, para ver una descripción detallada del error.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Dispose(System.Boolean)">
      <summary>Libera los recursos no administrados que usa <see cref="T:System.Net.Sockets.NetworkStream" /> y, de forma opcional, libera los recursos administrados.</summary>
      <param name="disposing">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</param>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.EndRead(System.IAsyncResult)">
      <summary>Controla el final de una lectura asincrónica.</summary>
      <param name="asyncResult">Elemento <see cref="T:System.IAsyncResult" /> que representa la llamada asincrónica.</param>
      <returns>Número de bytes leídos de <see cref="T:System.Net.Sockets.NetworkStream" />.</returns>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="asyncResult" /> es <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException">El elemento <see cref="T:System.Net.Sockets.Socket" /> subyacente está cerrado.  
O bien 
Se produjo un error al acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">La clase <see cref="T:System.Net.Sockets.NetworkStream" /> está cerrada.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.EndWrite(System.IAsyncResult)">
      <summary>Controla el final de una escritura asincrónica.</summary>
      <param name="asyncResult">Ellemento <see cref="T:System.IAsyncResult" /> que representa la llamada asincrónica.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="asyncResult" /> es <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException">El elemento <see cref="T:System.Net.Sockets.Socket" /> subyacente está cerrado.  
o bien 
Se produjo un error al escribir en la red.  
o bien 
Se produjo un error al acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">La clase <see cref="T:System.Net.Sockets.NetworkStream" /> está cerrada.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Finalize">
      <summary>Libera todos los recursos que usa <see cref="T:System.Net.Sockets.NetworkStream" />.</summary>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Flush">
      <summary>Vacía los datos de la secuencia. Este método está reservado para un uso futuro.</summary>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.FlushAsync(System.Threading.CancellationToken)">
      <summary>Vacía los datos de la secuencia como una operación asincrónica.</summary>
      <param name="cancellationToken">Token de cancelación que se usa para propagar la notificación de que se debería cancelar esta operación.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.Length">
      <summary>Obtiene la longitud de los datos disponibles en la secuencia. Esta propiedad no se admite actualmente y siempre produce una excepción <see cref="T:System.NotSupportedException" />.</summary>
      <returns>Longitud de los datos disponibles en la secuencia.</returns>
      <exception cref="T:System.NotSupportedException">Cualquier uso de esta propiedad.</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.Position">
      <summary>Obtiene o establece la posición actual en la secuencia. Esta propiedad no se admite actualmente y siempre produce una excepción <see cref="T:System.NotSupportedException" />.</summary>
      <returns>La posición actual en la secuencia.</returns>
      <exception cref="T:System.NotSupportedException">Cualquier uso de esta propiedad.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>Lee datos de <see cref="T:System.Net.Sockets.NetworkStream" /> y los almacena en una matriz de bytes.</summary>
      <param name="buffer">Matriz de tipo <see cref="T:System.Byte" /> que corresponde a la ubicación de la memoria donde se almacenan los datos leídos de <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
      <param name="offset">Ubicación de <paramref name="buffer" /> donde se inicia el almacenamiento de los datos.</param>
      <param name="size">Número de bytes que se va a leer de <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
      <returns>Número de bytes leídos de <see cref="T:System.Net.Sockets.NetworkStream" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> es menor que 0.  
o bien 
 <paramref name="offset" /> es mayor que la longitud de <paramref name="buffer" />.  
O bien 
 <paramref name="size" /> es menor que 0.  
O bien 
 <paramref name="size" /> es mayor que la longitud de <paramref name="buffer" /> menos <paramref name="offset" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> no admite lectura.</exception>
      <exception cref="">Se produjo un error al acceder al socket.
O bien
Se ha producido un error al leer de la red.</exception>
      <exception cref="T:System.ObjectDisposedException">La clase <see cref="T:System.Net.Sockets.NetworkStream" /> está cerrada.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Read(System.Span{System.Byte})">
      <summary>Lee datos de <see cref="T:System.Net.Sockets.NetworkStream" /> y los almacena en un intervalo de bytes en memoria.</summary>
      <param name="buffer">Región de memoria para almacenar los datos leídos de <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
      <returns>Número de bytes leídos de <see cref="T:System.Net.Sockets.NetworkStream" />.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> no admite lectura.</exception>
      <exception cref="">Se produjo un error al acceder al socket.
o bien
Se ha producido un error al leer de la red.</exception>
      <exception cref="T:System.ObjectDisposedException">La clase <see cref="T:System.Net.Sockets.NetworkStream" /> está cerrada.</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.Readable">
      <summary>Obtiene o establece un valor que indica si <see cref="T:System.Net.Sockets.NetworkStream" /> admite la lectura.</summary>
      <returns>Es <see langword="true" /> para indicar que se puede leer <see cref="T:System.Net.Sockets.NetworkStream" />; en caso contrario, es <see langword="false" />. El valor predeterminado es <see langword="true" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>Lee datos de <see cref="T:System.Net.Sockets.NetworkStream" /> y los almacena en un rango especificado de una matriz de bytes como una operación asincrónica.</summary>
      <param name="buffer">El búfer en el que se escriben los datos.</param>
      <param name="offset">Ubicación de <paramref name="buffer" /> donde se inicia el almacenamiento de los datos.</param>
      <param name="size">Número de bytes que se va a leer de <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
      <param name="cancellationToken">Token para supervisar solicitudes de cancelación.</param>
      <returns>Tarea que representa la operación de lectura asincrónica. El valor de la propiedad <see cref="P:System.Threading.Tasks.Task`1.Result" /> contiene el número total de bytes leídos en <paramref name="buffer" />.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> no admite lectura.</exception>
      <exception cref="">Se produjo un error al acceder al socket.
O bien
Se ha producido un error al leer de la red.</exception>
      <exception cref="T:System.ObjectDisposedException">La clase <see cref="T:System.Net.Sockets.NetworkStream" /> está cerrada.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <summary>Lee datos de <see cref="T:System.Net.Sockets.NetworkStream" /> y los almacena en un rango de memoria de bytes como una operación asincrónica.</summary>
      <param name="buffer">El búfer en el que se van a escribir los datos.</param>
      <param name="cancellationToken">Token para supervisar solicitudes de cancelación.</param>
      <returns>Un <see cref="T:System.Threading.Tasks.ValueTask`1" /> que representa la operación de lectura asincrónica. El valor de la propiedad <see cref="P:System.Threading.Tasks.ValueTask`1.Result" /> contiene el número total de bytes leídos en <paramref name="buffer" />.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> no admite lectura.</exception>
      <exception cref="">Se produjo un error al acceder al socket.
O bien
Se ha producido un error al leer de la red.</exception>
      <exception cref="T:System.ObjectDisposedException">La clase <see cref="T:System.Net.Sockets.NetworkStream" /> está cerrada.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.ReadByte">
      <summary>Lee un byte de <see cref="T:System.Net.Sockets.NetworkStream" /> y hace avanzar la posición de la secuencia en un byte, o devuelve -1 si está al final de la secuencia.</summary>
      <returns>Byte sin signo convertido en <see langword="Int32" />,o bien -1 si está al final de la secuencia.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> no admite lectura.</exception>
      <exception cref="">Se produjo un error al acceder al socket.
o bien
Se ha producido un error al leer de la red.</exception>
      <exception cref="T:System.ObjectDisposedException">La clase <see cref="T:System.Net.Sockets.NetworkStream" /> está cerrada.</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.ReadTimeout">
      <summary>Obtiene o establece la cantidad de tiempo que una operación de lectura se bloquea en espera de los datos.</summary>
      <returns>Objeto <see cref="T:System.Int32" /> que especifica la cantidad de tiempo, en milisegundos, que pasará antes de que se produzca un error en la operación de lectura. El valor predeterminado, <see cref="F:System.Threading.Timeout.Infinite" />, especifica que no se agota el tiempo de espera de la operación de lectura.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor especificado es menor o igual que cero y distinto de <see cref="F:System.Threading.Timeout.Infinite" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>Establece la posición actual de la secuencia en el valor especificado. Este método no se admite actualmente y siempre produce <see cref="T:System.NotSupportedException" />.</summary>
      <param name="offset">Este parámetro no se utiliza.</param>
      <param name="origin">Este parámetro no se utiliza.</param>
      <returns>Posición en el flujo.</returns>
      <exception cref="T:System.NotSupportedException">Cualquier uso de esta propiedad.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.SetLength(System.Int64)">
      <summary>Establece la longitud del flujo. Este método produce siempre una excepción <see cref="T:System.NotSupportedException" />.</summary>
      <param name="value">Este parámetro no se utiliza.</param>
      <exception cref="T:System.NotSupportedException">Cualquier uso de esta propiedad.</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.Socket">
      <summary>Obtiene la <see cref="T:System.Net.Sockets.Socket" /> subyacente.</summary>
      <returns>
        <see cref="T:System.Net.Sockets.Socket" /> que representa la conexión de red subyacente.</returns>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>Escribe datos en <see cref="T:System.Net.Sockets.NetworkStream" /> desde un rango especificado de una matriz de bytes.</summary>
      <param name="buffer">Una matriz de tipo <see cref="T:System.Byte" /> que contiene los datos que se va a escribir en <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
      <param name="offset">Ubicación de <paramref name="buffer" /> donde se comienza a escribir los datos.</param>
      <param name="size">Número de bytes que se van a escribir en <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="offset" /> es menor que 0.  
o bien 
El parámetro <paramref name="offset" /> es mayor que la longitud de <paramref name="buffer" />.  
o bien 
El parámetro <paramref name="size" /> es menor que 0.  
o bien 
El parámetro <paramref name="size" /> es mayor que la longitud de <paramref name="buffer" /> menos el valor del parámetro <paramref name="offset" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> no admite escritura.</exception>
      <exception cref="T:System.IO.IOException">Se produjo un error al acceder al socket.
O bien
Se produjo un error al escribir en la red.</exception>
      <exception cref="T:System.ObjectDisposedException">La clase <see cref="T:System.Net.Sockets.NetworkStream" /> está cerrada.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Write(System.ReadOnlySpan{System.Byte})">
      <summary>Escribe datos en <see cref="T:System.Net.Sockets.NetworkStream" /> desde un intervalo de bytes de solo lectura.</summary>
      <param name="buffer">Datos que se van a escribir en <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> no admite escritura.</exception>
      <exception cref="T:System.IO.IOException">Se produjo un error al acceder al socket.
o bien
Se produjo un error al escribir en la red.</exception>
      <exception cref="T:System.ObjectDisposedException">La clase <see cref="T:System.Net.Sockets.NetworkStream" /> está cerrada.</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.Writeable">
      <summary>Obtiene un valor que indica si <see cref="T:System.Net.Sockets.NetworkStream" /> admite la escritura.</summary>
      <returns>
        <see langword="true" /> si se pueden escribir datos en la secuencia; en caso contrario, <see langword="false" />. El valor predeterminado es <see langword="true" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>Escribe datos en <see cref="T:System.Net.Sockets.NetworkStream" /> desde el rango especificado de una matriz de bytes como una operación asincrónica.</summary>
      <param name="buffer">Matriz de bytes que contiene los datos que se van a escribir en <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
      <param name="offset">Ubicación de <paramref name="buffer" /> donde se comienza a escribir los datos.</param>
      <param name="size">Número de bytes que se van a escribir en <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
      <param name="cancellationToken">Token para supervisar solicitudes de cancelación.</param>
      <returns>Tarea que representa la operación de escritura asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="offset" /> es menor que 0.  
O bien 
El parámetro <paramref name="offset" /> es mayor que la longitud de <paramref name="buffer" />.  
O bien 
El parámetro <paramref name="size" /> es menor que 0.  
O bien 
El parámetro <paramref name="size" /> es mayor que la longitud de <paramref name="buffer" /> menos el valor del parámetro <paramref name="offset" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> no admite escritura.</exception>
      <exception cref="T:System.IO.IOException">Se produjo un error al escribir en la red.  
 o bien  
 Se produjo un error al acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">La clase <see cref="T:System.Net.Sockets.NetworkStream" /> está cerrada.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
      <summary>Escribe datos en <see cref="T:System.Net.Sockets.NetworkStream" /> a partir de un rango de memoria de bytes de solo lectura como una operación asincrónica.</summary>
      <param name="buffer">Región de memoria que contiene los datos que se van a escribir en <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
      <param name="cancellationToken">Token para supervisar solicitudes de cancelación.</param>
      <returns>Tarea que representa la operación de escritura asincrónica.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> no admite escritura.</exception>
      <exception cref="T:System.IO.IOException">Se produjo un error al acceder al socket.
o bien
Se produjo un error al escribir en la red.</exception>
      <exception cref="T:System.ObjectDisposedException">La clase <see cref="T:System.Net.Sockets.NetworkStream" /> está cerrada.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.WriteByte(System.Byte)">
      <summary>Escribe un byte a la posición actual en <see cref="T:System.Net.Sockets.NetworkStream" /> y avanza la posición de la secuencia en un byte.</summary>
      <param name="value">Byte que se debe escribir en la secuencia.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.NetworkStream" /> no admite escritura.</exception>
      <exception cref="T:System.IO.IOException">Se produjo un error al acceder al socket.
o bien
Se produjo un error al escribir en la red.</exception>
      <exception cref="T:System.ObjectDisposedException">La clase <see cref="T:System.Net.Sockets.NetworkStream" /> está cerrada.</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.WriteTimeout">
      <summary>Obtiene o establece la cantidad de tiempo que una operación de escritura se bloquea en espera de los datos.</summary>
      <returns>Objeto <see cref="T:System.Int32" /> que especifica la cantidad de tiempo, en milisegundos, que pasará antes de que se produzca un error en la operación de escritura. El valor predeterminado, <see cref="F:System.Threading.Timeout.Infinite" />, especifica que no se agota el tiempo de espera de la operación de escritura.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor especificado es menor o igual que cero y distinto de <see cref="F:System.Threading.Timeout.Infinite" />.</exception>
    </member>
    <member name="T:System.Net.Sockets.ProtocolFamily">
      <summary>Especifica el tipo de protocolo que puede utilizar una instancia de la clase <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.AppleTalk">
      <summary>Protocolo AppleTalk.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Atm">
      <summary>Protocolo nativo de servicios ATM.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Banyan">
      <summary>Protocolo Banyan.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Ccitt">
      <summary>Protocolo CCITT, como X.25.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Chaos">
      <summary>Protocolo MIT CHAOS.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Cluster">
      <summary>Protocolo de productos de clúster de Microsoft.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.ControllerAreaNetwork">
      <summary>Protocolo de red de área de controlador.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.DataKit">
      <summary>Protocolo DataKit.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.DataLink">
      <summary>Protocolo de enlace directo a datos.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.DecNet">
      <summary>Protocolo DECNet.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Ecma">
      <summary>Protocolo de la Asociación europea de fabricantes de Informática (ECMA).</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.FireFox">
      <summary>Protocolo FireFox.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.HyperChannel">
      <summary>Protocolo NSC de HyperChannel.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Ieee12844">
      <summary>Protocolo para el grupo de trabajo IEEE 1284.4.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.ImpLink">
      <summary>Protocolo IMP de ARPANET.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.InterNetwork">
      <summary>Protocolo IP versión 4.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.InterNetworkV6">
      <summary>Protocolo IP versión 6.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Ipx">
      <summary>Protocolo IPX o SPX.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Irda">
      <summary>Protocolo IrDA.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Iso">
      <summary>Protocolo ISO.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Lat">
      <summary>Protocolo LAT.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Max">
      <summary>Protocolo MAX.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.NetBios">
      <summary>Protocolo NetBIOS.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Netlink">
      <summary>Protocolo NetLink.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.NetworkDesigners">
      <summary>Protocolo OSI compatible con puertas de enlace Network Designers.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.NS">
      <summary>Protocolo Xerox NS.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Osi">
      <summary>Protocolo OSI.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Packet">
      <summary>Protocolo de paquete de bajo nivel.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Pup">
      <summary>Protocolo PUP.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Sna">
      <summary>Protocolo SNA de IBM.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Unix">
      <summary>Protocolo Unix local a host.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Unknown">
      <summary>Protocolo desconocido.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Unspecified">
      <summary>Protocolo no especificado.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.VoiceView">
      <summary>Protocolo VoiceView.</summary>
    </member>
    <member name="T:System.Net.Sockets.ProtocolType">
      <summary>Especifica los protocolos que admite la clase <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Ggp">
      <summary>Protocolo de puerta de enlace a puerta de enlace.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Icmp">
      <summary>Protocolo de mensajes de control de Internet.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IcmpV6">
      <summary>Protocolo de mensajes de control de Internet para IPv6.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Idp">
      <summary>Protocolo de datagramas de Internet.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Igmp">
      <summary>Protocolo de administración de grupos de Internet.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IP">
      <summary>Protocolo de Internet.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPSecAuthenticationHeader">
      <summary>Encabezado de autenticación de IPv6. Para obtener más información, vea la sección 2.2.1 de RFC 2292, disponible en https://www.ietf.org.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPSecEncapsulatingSecurityPayload">
      <summary>Encabezado de carga de seguridad encapsuladora de IPv6.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv4">
      <summary>Protocolo de Internet versión 4.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6">
      <summary>Protocolo de Internet versión 6 (IPv6).</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6DestinationOptions">
      <summary>Encabezado de opciones de destino IPv6.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6FragmentHeader">
      <summary>Encabezado de fragmentos IPv6.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6HopByHopOptions">
      <summary>Encabezado de opciones salto a salto IPv6.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6NoNextHeader">
      <summary>Encabezado no siguiente IPv6.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6RoutingHeader">
      <summary>Encabezado de enrutamiento IPv6.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Ipx">
      <summary>Protocolo de intercambio de paquetes de Internet.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.ND">
      <summary>Protocolo Net Disk (no oficial).</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Pup">
      <summary>Protocolo de paquetes universal del PARC.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Raw">
      <summary>Protocolo de paquetes IP sin procesar.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Spx">
      <summary>Protocolo de intercambio de paquetes secuenciado.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.SpxII">
      <summary>Protocolo de intercambio secuenciado de paquetes versión 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Tcp">
      <summary>Protocolo de control de transporte.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Udp">
      <summary>Protocolo de datagramas de usuarios.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Unknown">
      <summary>Protocolo desconocido.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Unspecified">
      <summary>Protocolo no especificado.</summary>
    </member>
    <member name="T:System.Net.Sockets.SafeSocketHandle">
      <summary>Representa una clase contenedora para un identificador de socket.</summary>
    </member>
    <member name="M:System.Net.Sockets.SafeSocketHandle.#ctor(System.IntPtr,System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Sockets.SafeSocketHandle" />.</summary>
      <param name="preexistingHandle">El identificador preexistente que se va a utilizar.</param>
      <param name="ownsHandle">
        <see langword="true" /> para liberar de manera fiable el identificador durante la fase de finalización; <see langword="false" /> para impedir que se libere de manera fiable (no se recomienda).</param>
    </member>
    <member name="T:System.Net.Sockets.SelectMode">
      <summary>Define los modos de sondeo del método <see cref="M:System.Net.Sockets.Socket.Poll(System.Int32,System.Net.Sockets.SelectMode)" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SelectMode.SelectError">
      <summary>Modo de estado de error.</summary>
    </member>
    <member name="F:System.Net.Sockets.SelectMode.SelectRead">
      <summary>Modo de estado de lectura.</summary>
    </member>
    <member name="F:System.Net.Sockets.SelectMode.SelectWrite">
      <summary>Modo de estado de escritura.</summary>
    </member>
    <member name="T:System.Net.Sockets.SendPacketsElement">
      <summary>Representa un elemento de una matriz <see cref="T:System.Net.Sockets.SendPacketsElement" />.</summary>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[])">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Sockets.SendPacketsElement" /> con el búfer especificado.</summary>
      <param name="buffer">Matriz de bytes de datos que se va a enviar mediante el método <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="buffer" /> no puede ser null.</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Sockets.SendPacketsElement" /> con el rango especificado del búfer.</summary>
      <param name="buffer">Matriz de bytes de datos que se va a enviar mediante el método <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</param>
      <param name="offset">Desplazamiento, en bytes, desde el comienzo del <paramref name="buffer" /> a la ubicación indicada en <paramref name="buffer" /> para empezar a enviar los datos especificados en el parámetro <paramref name="buffer" />.</param>
      <param name="count">Número de bytes que se va a enviar, empezando en el parámetro <paramref name="offset" />. Si <paramref name="count" /> es cero, no se envía ningún byte.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="buffer" /> no puede ser null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Los parámetros <paramref name="offset" /> y <paramref name="count" /> deben ser mayores o iguales que cero.  
<paramref name="offset" /> y <paramref name="count" /> deben ser menores que el tamaño del búfer.</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Sockets.SendPacketsElement" /> mediante el rango especificado del búfer, con una opción para combinar este elemento con el elemento siguiente en una única solicitud de envío de la capa de sockets para el transporte.</summary>
      <param name="buffer">Matriz de bytes de datos que se va a enviar mediante el método <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</param>
      <param name="offset">Desplazamiento, en bytes, desde el comienzo del <paramref name="buffer" /> a la ubicación indicada en <paramref name="buffer" /> para empezar a enviar los datos especificados en el parámetro <paramref name="buffer" />.</param>
      <param name="count">Número de bytes que se va a enviar, empezando en el parámetro <paramref name="offset" />. Si <paramref name="count" /> es cero, no se envía ningún byte.</param>
      <param name="endOfPacket">Valor booleano que especifica que este elemento no se debe combinar con el elemento siguiente en una única solicitud de envío de la capa de sockets para el transporte. Este marcador se usa para el control específico del contenido de cada mensaje en un datagrama o en el socket orientado a mensajes.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="buffer" /> no puede ser null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Los parámetros <paramref name="offset" /> y <paramref name="count" /> deben ser mayores o iguales que cero.  
<paramref name="offset" /> y <paramref name="count" /> deben ser menores que el tamaño del búfer.</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.IO.FileStream)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Sockets.SendPacketsElement" /> utilizando el objeto <see cref="T:System.IO.FileStream" /> especificado.</summary>
      <param name="fileStream">Archivo que se va a transmitir mediante el método <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="fileStream" /> no está abierto para lectura y escritura asincrónicas.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileStream" /> no puede ser null.</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.IO.FileStream,System.Int64,System.Int32)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Sockets.SendPacketsElement" /> mediante el rango especificado de un objeto <see cref="T:System.IO.FileStream" />.</summary>
      <param name="fileStream">Archivo que se va a transmitir mediante el método <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</param>
      <param name="offset">Desplazamiento, en bytes, desde el comienzo a la ubicación del archivo para empezar a enviar los bytes en este archivo.</param>
      <param name="count">Número de bytes que se va a enviar, empezando en <paramref name="offset" />. Si <paramref name="count" /> es cero, se envía el archivo completo.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="fileStream" /> se tiene que haber abierto para lectura y escritura asincrónicas.</exception>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="fileStream" /> no puede ser <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Los parámetros <paramref name="offset" /> y <paramref name="count" /> deben ser mayores o iguales que cero.</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.IO.FileStream,System.Int64,System.Int32,System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Sockets.SendPacketsElement" /> mediante el rango especificado de un objeto <see cref="T:System.IO.FileStream" />, con una opción para combinar este elemento con el elemento siguiente en una única solicitud de envío de la capa de sockets para el transporte.</summary>
      <param name="fileStream">Archivo que se va a transmitir mediante el método <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</param>
      <param name="offset">Desplazamiento, en bytes, desde el comienzo a la ubicación del archivo para empezar a enviar los bytes en este archivo.</param>
      <param name="count">Número de bytes que se van a enviar a partir del parámetro offset. Si el parámetro count es cero, se envía el archivo completo.</param>
      <param name="endOfPacket">Especifica que este elemento no se debe combinar con el elemento siguiente en una única solicitud de envío de la capa de sockets para el transporte. Este marcador se usa para el control específico del contenido de cada mensaje en un datagrama o en el socket orientado a mensajes.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="fileStream" /> se tiene que haber abierto para lectura y escritura asincrónicas.</exception>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="fileStream" /> no puede ser <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Los parámetros <paramref name="offset" /> y <paramref name="count" /> deben ser mayores o iguales que cero.</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Sockets.SendPacketsElement" /> con el archivo especificado.</summary>
      <param name="filepath">Nombre del archivo que se va a transmitir mediante el método <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="filepath" /> no puede ser null.</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Sockets.SendPacketsElement" /> con el rango especificado del archivo.</summary>
      <param name="filepath">Nombre del archivo que se va a transmitir mediante el método <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</param>
      <param name="offset">Desplazamiento, en bytes, desde el comienzo del archivo a la ubicación del archivo para empezar a enviar el archivo especificado en el parámetro <paramref name="filepath" />.</param>
      <param name="count">Número de bytes que se va a enviar, empezando en el parámetro <paramref name="offset" />. Si <paramref name="count" /> es cero, se envía el archivo completo.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="filepath" /> no puede ser null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Los parámetros <paramref name="offset" /> y <paramref name="count" /> deben ser mayores o iguales que cero.</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32,System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Sockets.SendPacketsElement" /> mediante el rango especificado del archivo, con una opción para combinar este elemento con el elemento siguiente en una única solicitud de envío de la capa de sockets para el transporte.</summary>
      <param name="filepath">Nombre del archivo que se va a transmitir mediante el método <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</param>
      <param name="offset">Desplazamiento, en bytes, desde el comienzo del archivo a la ubicación del archivo para empezar a enviar el archivo especificado en el parámetro <paramref name="filepath" />.</param>
      <param name="count">Número de bytes que se va a enviar, empezando en el parámetro <paramref name="offset" />. Si <paramref name="count" /> es cero, se envía el archivo completo.</param>
      <param name="endOfPacket">Valor booleano que especifica que este elemento no se debe combinar con el elemento siguiente en una única solicitud de envío de la capa de sockets para el transporte. Este marcador se usa para el control específico del contenido de cada mensaje en un datagrama o en el socket orientado a mensajes.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="filepath" /> no puede ser null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Los parámetros <paramref name="offset" /> y <paramref name="count" /> deben ser mayores o iguales que cero.</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int64,System.Int32)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Sockets.SendPacketsElement" /> con el rango especificado del archivo.</summary>
      <param name="filepath">Nombre del archivo que se va a transmitir mediante el método <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</param>
      <param name="offset">Desplazamiento, en bytes, desde el comienzo del archivo a la ubicación del archivo para empezar a enviar el archivo especificado en el parámetro <paramref name="filepath" />.</param>
      <param name="count">Número de bytes que se va a enviar, empezando en <paramref name="offset" />. Si <paramref name="count" /> es cero, se envía el archivo completo.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="filepath" /> no puede ser <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Los parámetros <paramref name="offset" /> y <paramref name="count" /> deben ser mayores o iguales que cero.</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int64,System.Int32,System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Sockets.SendPacketsElement" /> mediante el rango especificado del archivo, con una opción para combinar este elemento con el elemento siguiente en una única solicitud de envío de la capa de sockets para el transporte.</summary>
      <param name="filepath">Nombre del archivo que se va a transmitir mediante el método <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</param>
      <param name="offset">Desplazamiento, en bytes, desde el comienzo del archivo a la ubicación del archivo para empezar a enviar el archivo especificado en el parámetro <paramref name="filepath" />.</param>
      <param name="count">Número de bytes que se va a enviar, empezando en el parámetro <paramref name="offset" />. Si <paramref name="count" /> es cero, se envía el archivo completo.</param>
      <param name="endOfPacket">Especifica que este elemento no se debe combinar con el elemento siguiente en una única solicitud de envío de la capa de sockets para el transporte. Este marcador se usa para el control específico del contenido de cada mensaje en un datagrama o en el socket orientado a mensajes.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="filepath" /> no puede ser <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Los parámetros <paramref name="offset" /> y <paramref name="count" /> deben ser mayores o iguales que cero.</exception>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.Buffer">
      <summary>Obtiene el búfer que se va a enviar si el objeto <see cref="T:System.Net.Sockets.SendPacketsElement" /> se ha inicializado con un parámetro <paramref name="buffer" />.</summary>
      <returns>Búfer de bytes que se va <see cref="T:System.Net.Sockets.SendPacketsElement" /> a enviar si el objeto se <paramref name="buffer" /> inicializó con un parámetro.</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.Count">
      <summary>Obtiene el recuento de bytes que se van a enviar.</summary>
      <returns>Recuento de bytes que se envía si la clase <see cref="T:System.Net.Sockets.SendPacketsElement" /> se inicializó con un parámetro <paramref name="count" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.EndOfPacket">
      <summary>Obtiene un valor booleano que indica si este elemento no se debe combinar con el elemento siguiente en una única solicitud de envío de la capa de sockets para el transporte.</summary>
      <returns>Valor booleano que indica si este elemento no se debe combinar con el elemento siguiente en una única solicitud de envío.</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.FilePath">
      <summary>Obtiene el nombre del archivo que se va a enviar si el objeto <see cref="T:System.Net.Sockets.SendPacketsElement" /> se ha inicializado con un parámetro <paramref name="filepath" />.</summary>
      <returns>Nombre del archivo que se va a enviar si <see cref="T:System.Net.Sockets.SendPacketsElement" /> el objeto se inicializó con <paramref name="filepath" /> un parámetro.</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.FileStream">
      <summary>Obtiene la representación del objeto que se va a enviar si el objeto <see cref="T:System.Net.Sockets.SendPacketsElement" /> se ha inicializado con un parámetro <see cref="T:System.IO.FileStream" />.</summary>
      <returns>Representación de objeto del archivo que se va a enviar <see cref="T:System.Net.Sockets.SendPacketsElement" /> si el objeto se inicializó <see cref="T:System.IO.FileStream" /> con un parámetro.</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.Offset">
      <summary>Obtiene el desplazamiento, en bytes, desde el principio del búfer de datos o archivo a la ubicación en el búfer o archivo para iniciar el envío de los datos.</summary>
      <returns>Desplazamiento, en bytes, desde el principio del búfer de datos o archivo a la ubicación en el búfer o archivo para iniciar el envío de los datos.</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.OffsetLong">
      <summary>Obtiene el desplazamiento, en bytes, desde el principio del búfer de datos o archivo a la ubicación en el búfer o archivo para iniciar el envío de los datos.</summary>
      <returns>Desplazamiento, en bytes, desde el principio del búfer de datos o archivo a la ubicación en el búfer o archivo para iniciar el envío de los datos.</returns>
    </member>
    <member name="T:System.Net.Sockets.Socket">
      <summary>Implementa la interfaz de sockets Berkeley.</summary>
    </member>
    <member name="M:System.Net.Sockets.Socket.#ctor(System.Net.Sockets.AddressFamily,System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.Net.Sockets.Socket" /> con la familia de direcciones, el tipo de socket y el protocolo que se especifiquen.</summary>
      <param name="addressFamily">Uno de los valores de <see cref="T:System.Net.Sockets.AddressFamily" />.</param>
      <param name="socketType">Uno de los valores de <see cref="T:System.Net.Sockets.SocketType" />.</param>
      <param name="protocolType">Uno de los valores de <see cref="T:System.Net.Sockets.ProtocolType" />.</param>
      <exception cref="T:System.Net.Sockets.SocketException">La combinación de <paramref name="addressFamily" />, <paramref name="socketType" /> y <paramref name="protocolType" /> tiene como resultado un socket no válido.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.#ctor(System.Net.Sockets.SocketInformation)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Sockets.Socket" /> utilizando el valor devuelto por <see cref="M:System.Net.Sockets.Socket.DuplicateAndClose(System.Int32)" />.</summary>
      <param name="socketInformation">Información sobre el socket devuelta por <see cref="M:System.Net.Sockets.Socket.DuplicateAndClose(System.Int32)" />.</param>
    </member>
    <member name="M:System.Net.Sockets.Socket.#ctor(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.Net.Sockets.Socket" /> usando el tipo de socket y el protocolo que se especifiquen.</summary>
      <param name="socketType">Uno de los valores de <see cref="T:System.Net.Sockets.SocketType" />.</param>
      <param name="protocolType">Uno de los valores de <see cref="T:System.Net.Sockets.ProtocolType" />.</param>
      <exception cref="T:System.Net.Sockets.SocketException">La combinación de <paramref name="socketType" /> y <paramref name="protocolType" /> da como resultado un socket no válido.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Accept">
      <summary>Crea un nuevo objeto <see cref="T:System.Net.Sockets.Socket" /> para una conexión recién establecida.</summary>
      <returns>Objeto <see cref="T:System.Net.Sockets.Socket" /> para una conexión recién establecida.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.InvalidOperationException">El socket receptor no realiza escuchas de conexiones. Debe llamar a <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> y a <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> antes de llamar a <see cref="M:System.Net.Sockets.Socket.Accept" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Comienza una operación asincrónica para aceptar un intento de conexión entrante.</summary>
      <param name="e">Objeto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> que se usa para esta operación de socket asincrónica.</param>
      <returns>Devuelve <see langword="true" /> si la operación de E/S está pendiente. Al completar la operación se provoca el evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> del parámetro <paramref name="e" />.  
 Devuelve <see langword="false" /> si la operación de E/S se ha completado de forma sincrónica. El evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> del parámetro <paramref name="e" /> no se provoca y el objeto <paramref name="e" /> que se pasa como parámetro puede examinarse inmediatamente después de que se devuelva la llamada al método para recuperar el resultado de la operación.</returns>
      <exception cref="T:System.ArgumentException">Un argumento no es válido. Esta excepción produce si el búfer proporcionado no es suficientemente grande. El búfer debe ser de al menos 2 bytes * (sizeof(SOCKADDR_STORAGE + 16).  
Esta excepción también se produce si se especifican varios búferes; es decir, si la propiedad <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> no es null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Un argumento está fuera de intervalo. La excepción produce si <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Count" /> es menor que 0.</exception>
      <exception cref="T:System.InvalidOperationException">Se ha solicitado una operación no válida. Esta excepción se produce si el <see cref="T:System.Net.Sockets.Socket" /> de aceptación no realiza escuchas para las conexiones o el socket aceptado está enlazado.  
Debe llamar al método <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> y <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> antes de llamar al método <see cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.  
Esta excepción también se produce si el socket ya está conectado o si ya hay una operación de socket en curso con el parámetro <paramref name="e" /> especificado.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.NotSupportedException">Se requiere Windows XP o posteriores para este método.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.AddressFamily">
      <summary>Obtiene la familia de direcciones de <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>Uno de los valores de <see cref="T:System.Net.Sockets.AddressFamily" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.Available">
      <summary>Obtiene la cantidad de datos que se han recibido de la red y están disponibles para leer.</summary>
      <returns>Número de bytes de datos recibidos de la red y disponibles para su lectura.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)">
      <summary>Comienza una operación asincrónica para aceptar un intento de conexión entrante.</summary>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Objeto que contiene la información de estado para esta solicitud.</param>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la creación asincrónica de <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.ObjectDisposedException">El objeto <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.NotSupportedException">Se requiere Windows NT para este método.</exception>
      <exception cref="T:System.InvalidOperationException">El socket receptor no realiza escuchas de conexiones. Debe llamar a <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> y a <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> antes de llamar a <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />.  
O bien 
El socket aceptado se encuentra enlazado.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="receiveSize" /> es menor que 0.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginAccept(System.Int32,System.AsyncCallback,System.Object)">
      <summary>Comienza una operación asincrónica para aceptar un intento de conexión entrante y recibe el primer bloque de datos enviado por la aplicación cliente.</summary>
      <param name="receiveSize">Número de bytes que se han de aceptar del remitente.</param>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Objeto que contiene la información de estado para esta solicitud.</param>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la creación asincrónica de <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.ObjectDisposedException">El objeto <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.NotSupportedException">Se requiere Windows NT para este método.</exception>
      <exception cref="T:System.InvalidOperationException">El socket receptor no realiza escuchas de conexiones. Debe llamar a <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> y a <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> antes de llamar a <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />.  
O bien 
El socket aceptado se encuentra enlazado.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="receiveSize" /> es menor que 0.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginAccept(System.Net.Sockets.Socket,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Comienza una operación asincrónica para aceptar un intento de conexión entrante desde un socket específico y recibe el primer bloque de datos enviado por la aplicación cliente.</summary>
      <param name="acceptSocket">Objeto <see cref="T:System.Net.Sockets.Socket" /> aceptado. Este valor puede ser <see langword="null" />.</param>
      <param name="receiveSize">Número máximo de bytes que se va a recibir.</param>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Objeto que contiene la información de estado para esta solicitud.</param>
      <returns>Objeto <see cref="T:System.IAsyncResult" /> que hace referencia a la creación asincrónica del objeto <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.ObjectDisposedException">El objeto <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.NotSupportedException">Se requiere Windows NT para este método.</exception>
      <exception cref="T:System.InvalidOperationException">El socket receptor no realiza escuchas de conexiones. Debe llamar a <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> y a <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> antes de llamar a <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />.  
O bien 
El socket aceptado se encuentra enlazado.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="receiveSize" /> es menor que 0.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginConnect(System.Net.EndPoint,System.AsyncCallback,System.Object)">
      <summary>Inicia una solicitud asincrónica para una conexión a host remoto.</summary>
      <param name="remoteEP">
        <see cref="T:System.Net.EndPoint" /> que representa el host remoto.</param>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Objeto que contiene la información de estado para esta solicitud.</param>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la conexión asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="remoteEP" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.Security.SecurityException">Un llamador de la pila de llamadas no tiene permiso para la operación solicitada.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.Socket" /> se ha colocado en un estado de escucha mediante una llamada a <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> o ya hay una operación asincrónica en curso.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Inicia una solicitud asincrónica para una conexión a host remoto. El host se especifica mediante una <see cref="T:System.Net.IPAddress" /> y un número de puerto.</summary>
      <param name="address">
        <see cref="T:System.Net.IPAddress" /> del host remoto.</param>
      <param name="port">Número de puerto del host remoto.</param>
      <param name="requestCallback">Delegado de <see cref="T:System.AsyncCallback" /> que hace referencia al método que se invocará cuando la operación de conexión se complete.</param>
      <param name="state">Objeto definido por el usuario que contiene información sobre la operación de conexión. Este objeto se pasa al delegado de <paramref name="requestCallback" /> cuando la operación se completa.</param>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la conexión asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.NotSupportedException">El <see cref="T:System.Net.Sockets.Socket" /> no está en la familia de sockets.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El número de puerto no es válido.</exception>
      <exception cref="T:System.ArgumentException">La longitud de <paramref name="address" /> es cero.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.Socket" /> se ha colocado en un estado de escucha mediante una llamada a <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> o ya hay una operación asincrónica en curso.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
      <summary>Inicia una solicitud asincrónica para una conexión a host remoto. El host se especifica mediante una matriz <see cref="T:System.Net.IPAddress" /> y un número de puerto.</summary>
      <param name="addresses">Al menos una <see cref="T:System.Net.IPAddress" />, que designa el host remoto.</param>
      <param name="port">Número de puerto del host remoto.</param>
      <param name="requestCallback">Delegado de <see cref="T:System.AsyncCallback" /> que hace referencia al método que se invocará cuando la operación de conexión se complete.</param>
      <param name="state">Objeto definido por el usuario que contiene información sobre la operación de conexión. Este objeto se pasa al delegado de <paramref name="requestCallback" /> cuando la operación se completa.</param>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a las conexiones asincrónicas.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="addresses" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.NotSupportedException">Este método es válido para sockets que usan <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> o <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El número de puerto no es válido.</exception>
      <exception cref="T:System.ArgumentException">La longitud de <paramref name="address" /> es cero.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.Socket" /> se ha colocado en un estado de escucha mediante una llamada a <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> o ya hay una operación asincrónica en curso.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Inicia una solicitud asincrónica para una conexión a host remoto. El host se especifica mediante un nombre de host y un número de puerto.</summary>
      <param name="host">Nombre del host remoto.</param>
      <param name="port">Número de puerto del host remoto.</param>
      <param name="requestCallback">Delegado de <see cref="T:System.AsyncCallback" /> que hace referencia al método que se invocará cuando la operación de conexión se complete.</param>
      <param name="state">Objeto definido por el usuario que contiene información sobre la operación de conexión. Este objeto se pasa al delegado de <paramref name="requestCallback" /> cuando la operación se completa.</param>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la conexión asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="host" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Se cerró el <see cref="T:System.Net.Sockets.Socket" />.</exception>
      <exception cref="T:System.NotSupportedException">Este método es válido para sockets de las familias <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> o <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El número de puerto no es válido.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.Socket" /> se ha colocado en un estado de escucha mediante una llamada a <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> o ya hay una operación asincrónica en curso.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginDisconnect(System.Boolean,System.AsyncCallback,System.Object)">
      <summary>Comienza una solicitud asincrónica para la desconexión de un extremo remoto.</summary>
      <param name="reuseSocket">
        <see langword="true" /> si se puede reutilizar el socket una vez cerrada la conexión; de lo contrario, <see langword="false" />.</param>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Objeto que contiene la información de estado para esta solicitud.</param>
      <returns>Objeto <see cref="T:System.IAsyncResult" /> que hace referencia a la operación asincrónica.</returns>
      <exception cref="T:System.NotSupportedException">El sistema operativo es Windows 2000 o una versión anterior, y este método requiere Windows XP.</exception>
      <exception cref="T:System.ObjectDisposedException">El objeto <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)">
      <summary>Comienza a recibir asincrónicamente los datos de un objeto <see cref="T:System.Net.Sockets.Socket" /> conectado.</summary>
      <param name="buffer">Matriz de tipo <see cref="T:System.Byte" /> que constituye la ubicación de almacenamiento de los datos recibidos.</param>
      <param name="offset">Posición de base cero del parámetro <paramref name="buffer" /> donde se almacenarán los datos recibidos.</param>
      <param name="size">Número de bytes que se va a recibir.</param>
      <param name="socketFlags">Combinación bit a bit de los valores de <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="callback">Delegado de <see cref="T:System.AsyncCallback" /> que hace referencia al método que se invocará cuando la operación se complete.</param>
      <param name="state">Objeto definido por el usuario que contiene información sobre la operación de recepción. Este objeto se pasa al delegado de <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> cuando la operación se completa.</param>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la lectura asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> es menor que 0.  
O bien 
 <paramref name="offset" /> es mayor que la longitud de <paramref name="buffer" />.  
O bien 
 <paramref name="size" /> es menor que 0.  
o bien 
 <paramref name="size" /> es mayor que la longitud de <paramref name="buffer" /> menos el valor del parámetro <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@,System.AsyncCallback,System.Object)">
      <summary>Comienza a recibir asincrónicamente los datos de un objeto <see cref="T:System.Net.Sockets.Socket" /> conectado.</summary>
      <param name="buffer">Matriz de tipo <see cref="T:System.Byte" /> que constituye la ubicación de almacenamiento de los datos recibidos.</param>
      <param name="offset">Ubicación de <paramref name="buffer" /> en la que se almacenarán los datos recibidos.</param>
      <param name="size">Número de bytes que se va a recibir.</param>
      <param name="socketFlags">Combinación bit a bit de los valores de <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="errorCode">Objeto <see cref="T:System.Net.Sockets.SocketError" /> que almacena el error de socket.</param>
      <param name="callback">Delegado de <see cref="T:System.AsyncCallback" /> que hace referencia al método que se invocará cuando la operación se complete.</param>
      <param name="state">Objeto definido por el usuario que contiene información sobre la operación de recepción. Este objeto se pasa al delegado de <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> cuando la operación se completa.</param>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la lectura asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> es menor que 0.  
O bien 
 <paramref name="offset" /> es mayor que la longitud de <paramref name="buffer" />.  
o bien 
 <paramref name="size" /> es menor que 0.  
o bien 
 <paramref name="size" /> es mayor que la longitud de <paramref name="buffer" /> menos el valor del parámetro <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)">
      <summary>Comienza a recibir asincrónicamente los datos de un objeto <see cref="T:System.Net.Sockets.Socket" /> conectado.</summary>
      <param name="buffers">Matriz de tipo <see cref="T:System.Byte" /> que constituye la ubicación de almacenamiento de los datos recibidos.</param>
      <param name="socketFlags">Combinación bit a bit de los valores de <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="callback">Delegado de <see cref="T:System.AsyncCallback" /> que hace referencia al método que se invocará cuando la operación se complete.</param>
      <param name="state">Objeto definido por el usuario que contiene información sobre la operación de recepción. Este objeto se pasa al delegado de <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> cuando la operación se completa.</param>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la lectura asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@,System.AsyncCallback,System.Object)">
      <summary>Comienza a recibir asincrónicamente los datos de un objeto <see cref="T:System.Net.Sockets.Socket" /> conectado.</summary>
      <param name="buffers">Matriz de tipo <see cref="T:System.Byte" /> que constituye la ubicación de almacenamiento de los datos recibidos.</param>
      <param name="socketFlags">Combinación bit a bit de los valores de <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="errorCode">Objeto <see cref="T:System.Net.Sockets.SocketError" /> que almacena el error de socket.</param>
      <param name="callback">Delegado de <see cref="T:System.AsyncCallback" /> que hace referencia al método que se invocará cuando la operación se complete.</param>
      <param name="state">Objeto definido por el usuario que contiene información sobre la operación de recepción. Este objeto se pasa al delegado de <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> cuando la operación se completa.</param>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la lectura asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)">
      <summary>Comienza a recibir asincrónicamente los datos de un dispositivo de red especificado.</summary>
      <param name="buffer">Matriz de tipo <see cref="T:System.Byte" /> que constituye la ubicación de almacenamiento de los datos recibidos.</param>
      <param name="offset">Posición de base cero del parámetro <paramref name="buffer" /> donde se almacenarán los datos.</param>
      <param name="size">Número de bytes que se va a recibir.</param>
      <param name="socketFlags">Combinación bit a bit de los valores de <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="remoteEP">
        <see cref="T:System.Net.EndPoint" /> que representa el origen de los datos.</param>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Objeto que contiene la información de estado para esta solicitud.</param>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la lectura asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> es <see langword="null" />.  
O bien 
 <paramref name="remoteEP" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> es menor que 0.  
o bien 
 <paramref name="offset" /> es mayor que la longitud de <paramref name="buffer" />.  
o bien 
 <paramref name="size" /> es menor que 0.  
O bien 
 <paramref name="size" /> es mayor que la longitud de <paramref name="buffer" /> menos el valor del parámetro <paramref name="offset" /> .</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.Security.SecurityException">Un llamador de la pila de llamadas no tiene permiso para la operación solicitada.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)">
      <summary>Empieza a recibir de forma asincrónica el número especificado de bytes de datos en la ubicación indicada del búfer de datos, mediante el marcador <see cref="T:System.Net.Sockets.SocketFlags" /> especificado, y almacena el punto de conexión y la información sobre paquetes.</summary>
      <param name="buffer">Matriz de tipo <see cref="T:System.Byte" /> que constituye la ubicación de almacenamiento de los datos recibidos.</param>
      <param name="offset">Posición de base cero del parámetro <paramref name="buffer" /> donde se almacenarán los datos.</param>
      <param name="size">Número de bytes que se va a recibir.</param>
      <param name="socketFlags">Combinación bit a bit de los valores de <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="remoteEP">
        <see cref="T:System.Net.EndPoint" /> que representa el origen de los datos.</param>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Objeto que contiene la información de estado para esta solicitud.</param>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la lectura asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> es <see langword="null" />.  
O bien 
 <paramref name="remoteEP" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> es menor que 0.  
O bien 
 <paramref name="offset" /> es mayor que la longitud de <paramref name="buffer" />.  
O bien 
 <paramref name="size" /> es menor que 0.  
O bien 
 <paramref name="size" /> es mayor que la longitud de <paramref name="buffer" /> menos el valor del parámetro <paramref name="offset" /> .</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.NotSupportedException">El sistema operativo es Windows 2000 o una versión anterior, y este método requiere Windows XP.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)">
      <summary>Envía datos asincrónicamente a un objeto <see cref="T:System.Net.Sockets.Socket" /> conectado.</summary>
      <param name="buffer">Matriz de tipo <see cref="T:System.Byte" /> que contiene los datos que se enviarán.</param>
      <param name="offset">Posición de base cero del parámetro <paramref name="buffer" /> donde se empezará a enviar los datos.</param>
      <param name="size">Número de bytes para enviar.</param>
      <param name="socketFlags">Combinación bit a bit de los valores de <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Objeto que contiene la información de estado para esta solicitud.</param>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia al envío asincrónico.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket. Vea la sección de comentarios que figura más abajo.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> es menor que 0.  
O bien 
 <paramref name="offset" /> es menor que la longitud de <paramref name="buffer" />.  
O bien 
 <paramref name="size" /> es menor que 0.  
O bien 
 <paramref name="size" /> es mayor que la longitud de <paramref name="buffer" /> menos el valor del parámetro <paramref name="offset" /> .</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@,System.AsyncCallback,System.Object)">
      <summary>Envía datos asincrónicamente a un objeto <see cref="T:System.Net.Sockets.Socket" /> conectado.</summary>
      <param name="buffer">Matriz de tipo <see cref="T:System.Byte" /> que contiene los datos que se enviarán.</param>
      <param name="offset">Posición de base cero del parámetro <paramref name="buffer" /> donde se empezará a enviar los datos.</param>
      <param name="size">Número de bytes para enviar.</param>
      <param name="socketFlags">Combinación bit a bit de los valores de <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="errorCode">Objeto <see cref="T:System.Net.Sockets.SocketError" /> que almacena el error de socket.</param>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Objeto que contiene la información de estado para esta solicitud.</param>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia al envío asincrónico.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket. Vea la sección de comentarios que figura más abajo.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> es menor que 0.  
o bien 
 <paramref name="offset" /> es menor que la longitud de <paramref name="buffer" />.  
O bien 
 <paramref name="size" /> es menor que 0.  
o bien 
 <paramref name="size" /> es mayor que la longitud de <paramref name="buffer" /> menos el valor del parámetro <paramref name="offset" /> .</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)">
      <summary>Envía datos asincrónicamente a un objeto <see cref="T:System.Net.Sockets.Socket" /> conectado.</summary>
      <param name="buffers">Matriz de tipo <see cref="T:System.Byte" /> que contiene los datos que se enviarán.</param>
      <param name="socketFlags">Combinación bit a bit de los valores de <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Objeto que contiene la información de estado para esta solicitud.</param>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia al envío asincrónico.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffers" /> está vacía.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket. Vea la sección de comentarios que figura más abajo.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@,System.AsyncCallback,System.Object)">
      <summary>Envía datos asincrónicamente a un objeto <see cref="T:System.Net.Sockets.Socket" /> conectado.</summary>
      <param name="buffers">Matriz de tipo <see cref="T:System.Byte" /> que contiene los datos que se enviarán.</param>
      <param name="socketFlags">Combinación bit a bit de los valores de <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="errorCode">Objeto <see cref="T:System.Net.Sockets.SocketError" /> que almacena el error de socket.</param>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Objeto que contiene la información de estado para esta solicitud.</param>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia al envío asincrónico.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffers" /> está vacía.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket. Vea la sección de comentarios que figura más abajo.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.AsyncCallback,System.Object)">
      <summary>Envía el archivo <paramref name="fileName" /> a un objeto <see cref="T:System.Net.Sockets.Socket" /> conectado mediante el marcador <see cref="F:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread" />.</summary>
      <param name="fileName">Cadena con la ruta de acceso y el nombre del archivo que se ha de enviar. Este parámetro puede ser <see langword="null" />.</param>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Objeto que contiene la información de estado para esta solicitud.</param>
      <returns>Objeto <see cref="T:System.IAsyncResult" /> que representa el envío asincrónico.</returns>
      <exception cref="T:System.ObjectDisposedException">El objeto <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.NotSupportedException">El socket no está conectado a un host remoto.</exception>
      <exception cref="T:System.IO.FileNotFoundException">No se encontró el archivo <paramref name="fileName" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket. Vea la sección de comentarios que figura más abajo.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.Byte[],System.Byte[],System.Net.Sockets.TransmitFileOptions,System.AsyncCallback,System.Object)">
      <summary>Envía, de forma asincrónica, un archivo y búferes de datos a un objeto <see cref="T:System.Net.Sockets.Socket" /> conectado.</summary>
      <param name="fileName">Cadena con la ruta de acceso y el nombre del archivo que se ha de enviar. Este parámetro puede ser <see langword="null" />.</param>
      <param name="preBuffer">Una matriz <see cref="T:System.Byte" /> que contiene los datos que se van a enviar antes de enviar el archivo. Este parámetro puede ser <see langword="null" />.</param>
      <param name="postBuffer">Una matriz <see cref="T:System.Byte" /> que contiene los datos que se van a enviar después de enviar el archivo. Este parámetro puede ser <see langword="null" />.</param>
      <param name="flags">Combinación bit a bit de valores <see cref="T:System.Net.Sockets.TransmitFileOptions" />.</param>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" /> al que invocar una vez completada la operación. Este parámetro puede ser <see langword="null" />.</param>
      <param name="state">Objeto definido por el usuario con información de estado para esta solicitud. Este parámetro puede ser <see langword="null" />.</param>
      <returns>Objeto <see cref="T:System.IAsyncResult" /> que representa la operación asincrónica.</returns>
      <exception cref="T:System.ObjectDisposedException">El objeto <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket. Vea la sección de comentarios que figura más abajo.</exception>
      <exception cref="T:System.NotSupportedException">El sistema operativo no es Windows NT o una versión posterior.  
O bien
 El socket no está conectado a un host remoto.</exception>
      <exception cref="T:System.IO.FileNotFoundException">No se encontró el archivo <paramref name="fileName" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint,System.AsyncCallback,System.Object)">
      <summary>Envía datos de forma asincrónica a un host remoto concreto.</summary>
      <param name="buffer">Matriz de tipo <see cref="T:System.Byte" /> que contiene los datos que se enviarán.</param>
      <param name="offset">Posición de base cero en el parámetro <paramref name="buffer" /> donde comienza el envío de datos.</param>
      <param name="size">Número de bytes para enviar.</param>
      <param name="socketFlags">Combinación bit a bit de los valores de <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="remoteEP">
        <see cref="T:System.Net.EndPoint" /> que representa el dispositivo remoto.</param>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Objeto que contiene la información de estado para esta solicitud.</param>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia al envío asincrónico.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> es <see langword="null" />.  
O bien 
 <paramref name="remoteEP" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> es menor que 0.  
O bien 
 <paramref name="offset" /> es mayor que la longitud de <paramref name="buffer" />.  
O bien 
 <paramref name="size" /> es menor que 0.  
o bien 
 <paramref name="size" /> es mayor que la longitud de <paramref name="buffer" /> menos el valor del parámetro <paramref name="offset" /> .</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.Security.SecurityException">Un llamador de la pila de llamadas no tiene permiso para la operación solicitada.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)">
      <summary>Asocia un objeto <see cref="T:System.Net.Sockets.Socket" /> a un extremo local.</summary>
      <param name="localEP">
        <see cref="T:System.Net.EndPoint" /> local que se va a asociar a <see cref="T:System.Net.Sockets.Socket" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localEP" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.Security.SecurityException">Un llamador de la pila de llamadas no tiene permiso para la operación solicitada.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.Blocking">
      <summary>Obtiene o establece un valor que indica si <see cref="T:System.Net.Sockets.Socket" /> está en modo de bloqueo.</summary>
      <returns>Es <see langword="true" /> si <see cref="T:System.Net.Sockets.Socket" /> se bloquea; de lo contrario, es <see langword="false" />. De manera predeterminada, es <see langword="true" />.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.CancelConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Cancela una solicitud asincrónica de una conexión a un host remoto.</summary>
      <param name="e">Objeto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> que se usa para solicitar la conexión al host remoto llamando a uno de los métodos <see cref="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType,System.Net.Sockets.SocketAsyncEventArgs)" />.</param>
      <exception cref="T:System.ArgumentNullException">El valor del parámetro <paramref name="e" /> y <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> no puede ser null.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.Security.SecurityException">Un llamador de la pila de llamadas no tiene permiso para la operación solicitada.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Close">
      <summary>Cierra la conexión <see cref="T:System.Net.Sockets.Socket" /> y libera todos los recursos asociados.</summary>
    </member>
    <member name="M:System.Net.Sockets.Socket.Close(System.Int32)">
      <summary>Cierra la conexión <see cref="T:System.Net.Sockets.Socket" /> y libera todos los recursos asociados con un tiempo de espera especificado para permitir el envío de los datos en cola.</summary>
      <param name="timeout">Espere hasta <paramref name="timeout" /> segundos para enviar los datos restantes y, después, cierre el socket.</param>
    </member>
    <member name="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)">
      <summary>Establece una conexión a un host remoto.</summary>
      <param name="remoteEP">
        <see cref="T:System.Net.EndPoint" /> que representa el dispositivo remoto.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="remoteEP" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.Security.SecurityException">Un llamador de la pila de llamadas no tiene permiso para la operación solicitada.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.Socket" /> se ha colocado en un estado de escucha mediante una llamada a <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Connect(System.Net.IPAddress,System.Int32)">
      <summary>Establece una conexión a un host remoto. El host se especifica mediante una dirección IP y un número de puerto.</summary>
      <param name="address">Dirección IP del host remoto.</param>
      <param name="port">Número de puerto del host remoto.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El número de puerto no es válido.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.NotSupportedException">Este método es válido para sockets de las familias <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> o <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
      <exception cref="T:System.ArgumentException">La longitud de <paramref name="address" /> es cero.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.Socket" /> se ha colocado en un estado de escucha mediante una llamada a <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Connect(System.Net.IPAddress[],System.Int32)">
      <summary>Establece una conexión a un host remoto. El host se especifica mediante una matriz de direcciones IP y un número de puerto.</summary>
      <param name="addresses">Direcciones IP del host remoto.</param>
      <param name="port">Número de puerto del host remoto.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="addresses" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El número de puerto no es válido.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.NotSupportedException">Este método es válido para sockets de las familias <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> o <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
      <exception cref="T:System.ArgumentException">La longitud de <paramref name="address" /> es cero.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.Socket" /> se ha colocado en un estado de escucha mediante una llamada a <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Connect(System.String,System.Int32)">
      <summary>Establece una conexión a un host remoto. El host se especifica mediante un nombre de host y un número de puerto.</summary>
      <param name="host">Nombre del host remoto.</param>
      <param name="port">Número de puerto del host remoto.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="host" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El número de puerto no es válido.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.NotSupportedException">Este método es válido para sockets de las familias <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> o <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.Socket" /> se ha colocado en un estado de escucha mediante una llamada a <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Comienza una solicitud asincrónica para una conexión a host remoto.</summary>
      <param name="e">Objeto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> que se usa para esta operación de socket asincrónica.</param>
      <returns>Devuelve <see langword="true" /> si la operación de E/S está pendiente. Al completar la operación se provoca el evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> del parámetro <paramref name="e" />.  
 Devuelve <see langword="false" /> si la operación de E/S se ha completado de forma sincrónica. En ese caso, el evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> del parámetro <paramref name="e" /> no se provoca y el objeto <paramref name="e" /> que se pasa como parámetro puede examinarse inmediatamente después de que se devuelva la llamada al método para recuperar el resultado de la operación.</returns>
      <exception cref="T:System.ArgumentException">Un argumento no es válido. Esta excepción también se produce si se especifican varios búferes; es decir, si la propiedad <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> no es null.</exception>
      <exception cref="T:System.ArgumentNullException">El valor del parámetro <paramref name="e" /> y <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> no puede ser null.</exception>
      <exception cref="T:System.InvalidOperationException">El objeto <see cref="T:System.Net.Sockets.Socket" /> está escuchando o ya hay una operación de socket en curso que utiliza el objeto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> especificado en el parámetro <paramref name="e" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.NotSupportedException">Se requiere Windows XP o posteriores para este método. Esta excepción también se produce si el extremo local y <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> no son la misma familia de direcciones.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.Security.SecurityException">Un llamador de la pila de llamadas no tiene permiso para la operación solicitada.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType,System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Comienza una solicitud asincrónica para una conexión a host remoto.</summary>
      <param name="socketType">Uno de los valores de <see cref="T:System.Net.Sockets.SocketType" />.</param>
      <param name="protocolType">Uno de los valores de <see cref="T:System.Net.Sockets.ProtocolType" />.</param>
      <param name="e">Objeto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> que se usa para esta operación de socket asincrónica.</param>
      <returns>Devuelve <see langword="true" /> si la operación de E/S está pendiente. Al completar la operación se provoca el evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> del parámetro <paramref name="e" />.  
 Devuelve <see langword="false" /> si la operación de E/S se ha completado de forma sincrónica. En ese caso, el evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> del parámetro <paramref name="e" /> no se provoca y el objeto <paramref name="e" /> que se pasa como parámetro puede examinarse inmediatamente después de que se devuelva la llamada al método para recuperar el resultado de la operación.</returns>
      <exception cref="T:System.ArgumentException">Un argumento no es válido. Esta excepción también se produce si se especifican varios búferes; es decir, si la propiedad <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> no es null.</exception>
      <exception cref="T:System.ArgumentNullException">El valor del parámetro <paramref name="e" /> y <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> no puede ser null.</exception>
      <exception cref="T:System.InvalidOperationException">El objeto <see cref="T:System.Net.Sockets.Socket" /> está escuchando o ya hay una operación de socket en curso que utiliza el objeto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> especificado en el parámetro <paramref name="e" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.NotSupportedException">Se requiere Windows XP o posteriores para este método. Esta excepción también se produce si el extremo local y <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> no son la misma familia de direcciones.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.Security.SecurityException">Un llamador de la pila de llamadas no tiene permiso para la operación solicitada.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.Connected">
      <summary>Obtiene un valor que indica si <see cref="T:System.Net.Sockets.Socket" /> se conecta con un host remoto a partir de la última operación <see cref="Overload:System.Net.Sockets.Socket.Send" /> u <see cref="Overload:System.Net.Sockets.Socket.Receive" />.</summary>
      <returns>Es <see langword="true" /> si el objeto <see cref="T:System.Net.Sockets.Socket" /> estaba conectado a un recurso remoto desde la operación más reciente; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Disconnect(System.Boolean)">
      <summary>Cierra la conexión del socket y permite reutilizarlo.</summary>
      <param name="reuseSocket">
        <see langword="true" /> si se puede reutilizar el socket una vez cerrada la conexión actual; de lo contrario, <see langword="false" />.</param>
      <exception cref="T:System.PlatformNotSupportedException">Este método requiere Windows 2000 o anterior, o se iniciará la excepción.</exception>
      <exception cref="T:System.ObjectDisposedException">El objeto <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.DisconnectAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Comienza una solicitud asincrónica para la desconexión de un extremo remoto.</summary>
      <param name="e">Objeto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> que se usa para esta operación de socket asincrónica.</param>
      <returns>Devuelve <see langword="true" /> si la operación de E/S está pendiente. Al completar la operación se provoca el evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> del parámetro <paramref name="e" />.  
 Devuelve <see langword="false" /> si la operación de E/S se ha completado de forma sincrónica. En ese caso, el evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> del parámetro <paramref name="e" /> no se provoca y el objeto <paramref name="e" /> que se pasa como parámetro puede examinarse inmediatamente después de que se devuelva la llamada al método para recuperar el resultado de la operación.</returns>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="e" /> no puede ser NULL.</exception>
      <exception cref="T:System.InvalidOperationException">Ya hay una operación de socket en curso que utiliza el objeto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> especificado en el parámetro <paramref name="e" />.</exception>
      <exception cref="T:System.NotSupportedException">Se requiere Windows XP o posteriores para este método.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Dispose">
      <summary>Libera todos los recursos usados por la instancia actual de la clase <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="M:System.Net.Sockets.Socket.Dispose(System.Boolean)">
      <summary>Libera los recursos no administrados que usa <see cref="T:System.Net.Sockets.Socket" /> y, de forma opcional, desecha los recursos administrados.</summary>
      <param name="disposing">Es <see langword="true" /> para liberar los recursos administrados y no administrados; es <see langword="false" /> para liberar sólo los recursos no administrados.</param>
    </member>
    <member name="P:System.Net.Sockets.Socket.DontFragment">
      <summary>Obtiene o establece un valor de <see cref="T:System.Boolean" /> que especifica si <see cref="T:System.Net.Sockets.Socket" /> permite fragmentar los datagramas de protocolo Internet (IP).</summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.Net.Sockets.Socket" /> permite la fragmentación de datagramas; de lo contrario, <see langword="false" />. De manera predeterminada, es <see langword="true" />.</returns>
      <exception cref="T:System.NotSupportedException">Esta propiedad sólo se puede establecer para sockets de las familias de <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> o <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.DualMode">
      <summary>Obtiene o establece un valor <see cref="T:System.Boolean" /> que especifica si <see cref="T:System.Net.Sockets.Socket" /> es un socket de modo dual que se usa tanto para IPv4 como para IPv6.</summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.Net.Sockets.Socket" /> es un socket de modo dual; de lo contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.DuplicateAndClose(System.Int32)">
      <summary>Duplica la referencia del socket para el proceso de destino y cierra el socket para este proceso.</summary>
      <param name="targetProcessId">Identificador del proceso de destino donde se crea un duplicado de la referencia del socket.</param>
      <returns>Referencia del socket que se va a pasar al proceso de destino.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="targetProcessID" /> no es un identificador de proceso válido. 
O bien 
Se produjo un error al duplicar la referencia del socket.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.EnableBroadcast">
      <summary>Obtiene o establece un valor de <see cref="T:System.Boolean" /> que especifica si <see cref="T:System.Net.Sockets.Socket" /> puede enviar o recibir paquetes de difusión.</summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.Net.Sockets.Socket" /> permite la difusión de paquetes; de lo contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Esta opción sólo es válida para un socket de datagramas.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndAccept(System.Byte[]@,System.IAsyncResult)">
      <summary>Acepta de forma asincrónica un intento de conexión entrante y crea un objeto <see cref="T:System.Net.Sockets.Socket" /> nuevo para controlar la comunicación con el host remoto. Este método devuelve un búfer que contiene los datos iniciales transferidos.</summary>
      <param name="buffer">Matriz de tipo <see cref="T:System.Byte" /> que contiene los bytes transferidos.</param>
      <param name="asyncResult">Objeto <see cref="T:System.IAsyncResult" /> que almacena información de estado para esta operación asincrónica así como cualquier dato definido por el usuario.</param>
      <returns>Objeto <see cref="T:System.Net.Sockets.Socket" /> para controlar la comunicación con el host remoto.</returns>
      <exception cref="T:System.NotSupportedException">Se requiere Windows NT para este método.</exception>
      <exception cref="T:System.ObjectDisposedException">El objeto <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> está vacía.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="asyncResult" /> no se creó mediante una llamada a <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó anteriormente al método <see cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder a <see cref="T:System.Net.Sockets.Socket" /></exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndAccept(System.Byte[]@,System.Int32@,System.IAsyncResult)">
      <summary>Acepta de forma asincrónica un intento de conexión entrante y crea un objeto <see cref="T:System.Net.Sockets.Socket" /> nuevo para controlar la comunicación con el host remoto. Este método devuelve un búfer que contiene los datos iniciales y el número de bytes transferidos.</summary>
      <param name="buffer">Matriz de tipo <see cref="T:System.Byte" /> que contiene los bytes transferidos.</param>
      <param name="bytesTransferred">Número de bytes transferidos.</param>
      <param name="asyncResult">Objeto <see cref="T:System.IAsyncResult" /> que almacena información de estado para esta operación asincrónica así como cualquier dato definido por el usuario.</param>
      <returns>Objeto <see cref="T:System.Net.Sockets.Socket" /> para controlar la comunicación con el host remoto.</returns>
      <exception cref="T:System.NotSupportedException">Se requiere Windows NT para este método.</exception>
      <exception cref="T:System.ObjectDisposedException">El objeto <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> está vacía.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="asyncResult" /> no se creó mediante una llamada a <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó anteriormente al método <see cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar obtener acceso a <see cref="T:System.Net.Sockets.Socket" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)">
      <summary>Acepta asincrónicamente un intento de conexión entrante y crea un nuevo objeto <see cref="T:System.Net.Sockets.Socket" /> para controlar la comunicación con el host remoto.</summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> que almacena información de estado para esta operación asincrónica así como cualquier dato definido por el usuario.</param>
      <returns>
        <see cref="T:System.Net.Sockets.Socket" /> para controlar la comunicación con el host remoto.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="asyncResult" /> no se creó mediante una llamada a <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket. Vea la sección Comentarios para obtener más información.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó anteriormente al método <see cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" />.</exception>
      <exception cref="T:System.NotSupportedException">Se requiere Windows NT para este método.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndConnect(System.IAsyncResult)">
      <summary>Finaliza una solicitud de conexión asincrónica pendiente.</summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> que almacena información de estado así como cualquier dato definido por el usuario para esta operación asincrónica.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> no se devolvió mediante una llamada al método <see cref="M:System.Net.Sockets.Socket.BeginConnect(System.Net.EndPoint,System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndConnect(System.IAsyncResult)" /> fue llamado previamente para la conexión asincrónica.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndDisconnect(System.IAsyncResult)">
      <summary>Finaliza una solicitud de desconexión asincrónica pendiente.</summary>
      <param name="asyncResult">Objeto <see cref="T:System.IAsyncResult" /> que almacena información de estado así como cualquier dato definido por el usuario para esta operación asincrónica.</param>
      <exception cref="T:System.NotSupportedException">El sistema operativo es Windows 2000 o una versión anterior, y este método requiere Windows XP.</exception>
      <exception cref="T:System.ObjectDisposedException">El objeto <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> no se devolvió mediante una llamada al método <see cref="M:System.Net.Sockets.Socket.BeginDisconnect(System.Boolean,System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndDisconnect(System.IAsyncResult)" /> fue llamado previamente para la conexión asincrónica.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.Net.WebException">La petición de desconexión ha agotado su tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)">
      <summary>Finaliza una lectura asincrónica pendiente.</summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> que almacena información de estado así como cualquier dato definido por el usuario para esta operación asincrónica.</param>
      <returns>Número de bytes recibidos.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> no se devolvió mediante una llamada al método <see cref="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó previamente a <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> para la lectura asincrónica.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult,System.Net.Sockets.SocketError@)">
      <summary>Finaliza una lectura asincrónica pendiente.</summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> que almacena información de estado así como cualquier dato definido por el usuario para esta operación asincrónica.</param>
      <param name="errorCode">Objeto <see cref="T:System.Net.Sockets.SocketError" /> que almacena el error de socket.</param>
      <returns>Número de bytes recibidos.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> no se devolvió mediante una llamada al método <see cref="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó previamente a <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> para la lectura asincrónica.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndReceiveFrom(System.IAsyncResult,System.Net.EndPoint@)">
      <summary>Finaliza una lectura asincrónica pendiente desde un extremo específico.</summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> que almacena información de estado así como cualquier dato definido por el usuario para esta operación asincrónica.</param>
      <param name="endPoint">
        <see cref="T:System.Net.EndPoint" /> de origen.</param>
      <returns>Si se realiza correctamente, el número de bytes recibidos. Si no se realiza correctamente, devuelve 0.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> no se devolvió mediante una llamada al método <see cref="M:System.Net.Sockets.Socket.BeginReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó previamente a <see cref="M:System.Net.Sockets.Socket.EndReceiveFrom(System.IAsyncResult,System.Net.EndPoint@)" /> para la lectura asincrónica.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)">
      <summary>Finaliza una lectura asincrónica pendiente desde un extremo específico. Este método también desvela más información sobre el paquete que <see cref="M:System.Net.Sockets.Socket.EndReceiveFrom(System.IAsyncResult,System.Net.EndPoint@)" />.</summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> que almacena información de estado así como cualquier dato definido por el usuario para esta operación asincrónica.</param>
      <param name="socketFlags">Combinación bit a bit de los valores de <see cref="T:System.Net.Sockets.SocketFlags" /> para el paquete recibido.</param>
      <param name="endPoint">
        <see cref="T:System.Net.EndPoint" /> de origen.</param>
      <param name="ipPacketInformation">
        <see cref="T:System.Net.IPAddress" /> e interfaz del paquete recibido.</param>
      <returns>Si se realiza correctamente, el número de bytes recibidos. Si no se realiza correctamente, devuelve 0.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> es <see langword="null" />  
o bien 
 <paramref name="endPoint" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> no se devolvió mediante una llamada al método <see cref="M:System.Net.Sockets.Socket.BeginReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó previamente a <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> para la lectura asincrónica.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)">
      <summary>Finaliza un envío asincrónico pendiente.</summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> que almacena información de estado para esta operación asincrónica.</param>
      <returns>Si se realiza con éxito, el número de bytes enviados al objeto <see cref="T:System.Net.Sockets.Socket" />; en caso contrario, un error de <see cref="T:System.Net.Sockets.Socket" /> no válido.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> no se devolvió mediante una llamada al método <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /> fue llamado previamente para el envío asincrónico.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult,System.Net.Sockets.SocketError@)">
      <summary>Finaliza un envío asincrónico pendiente.</summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> que almacena información de estado para esta operación asincrónica.</param>
      <param name="errorCode">Objeto <see cref="T:System.Net.Sockets.SocketError" /> que almacena el error de socket.</param>
      <returns>Si se realiza con éxito, el número de bytes enviados al objeto <see cref="T:System.Net.Sockets.Socket" />; en caso contrario, un error de <see cref="T:System.Net.Sockets.Socket" /> no válido.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> no se devolvió mediante una llamada al método <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /> fue llamado previamente para el envío asincrónico.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndSendFile(System.IAsyncResult)">
      <summary>Finaliza un envío asincrónico de archivo pendiente.</summary>
      <param name="asyncResult">Objeto <see cref="T:System.IAsyncResult" /> que almacena información de estado para esta operación asincrónica.</param>
      <exception cref="T:System.NotSupportedException">Se requiere Windows NT para este método.</exception>
      <exception cref="T:System.ObjectDisposedException">El objeto <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> está vacía.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> no se devolvió mediante una llamada al método <see cref="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó previamente a <see cref="M:System.Net.Sockets.Socket.EndSendFile(System.IAsyncResult)" /> para el <see cref="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.AsyncCallback,System.Object)" /> asincrónico.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket. Vea la sección de comentarios que figura más abajo.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndSendTo(System.IAsyncResult)">
      <summary>Finaliza un envío asincrónico pendiente en una ubicación específica.</summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> que almacena información de estado así como cualquier dato definido por el usuario para esta operación asincrónica.</param>
      <returns>Si se realiza con éxito, el número de bytes enviados; en caso contrario, un error de <see cref="T:System.Net.Sockets.Socket" /> no válido.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> no se devolvió mediante una llamada al método <see cref="M:System.Net.Sockets.Socket.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint,System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndSendTo(System.IAsyncResult)" /> fue llamado previamente para el envío asincrónico.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.ExclusiveAddressUse">
      <summary>Obtiene o establece un valor de <see cref="T:System.Boolean" /> que especifica si <see cref="T:System.Net.Sockets.Socket" /> permite sólo a un proceso el enlace a un puerto.</summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.Net.Sockets.Socket" /> permite sólo a un socket el enlace a un puerto concreto; de lo contrario, <see langword="false" />. El valor predeterminado <see langword="true" /> es para Windows Server 2003 y Windows XP Service Pack 2, <see langword="false" /> y para todas las demás versiones.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.InvalidOperationException">Se ha llamado a <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> para este <see cref="T:System.Net.Sockets.Socket" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Finalize">
      <summary>Libera los recursos utilizados por la clase <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName)">
      <summary>Devuelve el valor de una opción de <see cref="T:System.Net.Sockets.Socket" /> especificada en forma de objeto.</summary>
      <param name="optionLevel">Uno de los valores de <see cref="T:System.Net.Sockets.SocketOptionLevel" />.</param>
      <param name="optionName">Uno de los valores de <see cref="T:System.Net.Sockets.SocketOptionName" />.</param>
      <returns>Objeto que representa el valor de una opción. Cuando se establece el parámetro <paramref name="optionName" /> en <see cref="F:System.Net.Sockets.SocketOptionName.Linger" />, el valor devuelto es una instancia de la clase <see cref="T:System.Net.Sockets.LingerOption" />. Cuando se establece el parámetro <paramref name="optionName" /> en <see cref="F:System.Net.Sockets.SocketOptionName.AddMembership" /> o <see cref="F:System.Net.Sockets.SocketOptionName.DropMembership" />, el valor devuelto es una instancia de la clase <see cref="T:System.Net.Sockets.MulticastOption" />. Cuando <paramref name="optionName" /> está establecido en cualquier otro valor, el valor de devolución es un entero.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.  
o bien 
 <paramref name="optionName" /> se estableció en el valor <see cref="F:System.Net.Sockets.SocketOptionName.MaxConnections" />, que no es compatible.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Byte[])">
      <summary>Devuelve el valor de la opción de <see cref="T:System.Net.Sockets.Socket" /> especificada, representado como una matriz de bytes.</summary>
      <param name="optionLevel">Uno de los valores de <see cref="T:System.Net.Sockets.SocketOptionLevel" />.</param>
      <param name="optionName">Uno de los valores de <see cref="T:System.Net.Sockets.SocketOptionName" />.</param>
      <param name="optionValue">Matriz de tipo <see cref="T:System.Byte" /> que va a recibir el valor de la opción.</param>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.  
o bien 
En aplicaciones de .NET Compact Framework, el espacio en búfer predeterminado de Windows CE está establecido en 32768 bytes. El espacio en búfer por cada socket puede modificarse mediante una llamada a <see cref="Overload:System.Net.Sockets.Socket.SetSocketOption" />.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)">
      <summary>Devuelve el valor de la opción de <see cref="T:System.Net.Sockets.Socket" /> especificada en una matriz.</summary>
      <param name="optionLevel">Uno de los valores de <see cref="T:System.Net.Sockets.SocketOptionLevel" />.</param>
      <param name="optionName">Uno de los valores de <see cref="T:System.Net.Sockets.SocketOptionName" />.</param>
      <param name="optionLength">Longitud, en bytes, del valor devuelto previsto.</param>
      <returns>Matriz de tipo <see cref="T:System.Byte" /> que contiene el valor de la opción de socket.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.  
O bien 
En aplicaciones de .NET Compact Framework, el espacio en búfer predeterminado de Windows CE está establecido en 32768 bytes. El espacio en búfer por cada socket puede modificarse mediante una llamada a <see cref="Overload:System.Net.Sockets.Socket.SetSocketOption" />.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.Handle">
      <summary>Obtiene el identificador del sistema operativo de <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>
        <see cref="T:System.IntPtr" /> que representa el identificador del sistema operativo de <see cref="T:System.Net.Sockets.Socket" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.IOControl(System.Int32,System.Byte[],System.Byte[])">
      <summary>Establece modos operativos de bajo nivel para el <see cref="T:System.Net.Sockets.Socket" /> que utiliza códigos de control numéricos.</summary>
      <param name="ioControlCode">Valor de <see cref="T:System.Int32" /> que especifica el código de control de la operación que se ha de realizar.</param>
      <param name="optionInValue">Matriz <see cref="T:System.Byte" /> que contiene los datos de entrada requeridos por la operación.</param>
      <param name="optionOutValue">Matriz <see cref="T:System.Byte" /> que contiene los datos de salida devueltos por la operación.</param>
      <returns>Número de bytes del parámetro <paramref name="optionOutValue" />.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.InvalidOperationException">Se intentó modificar el modo de bloqueo sin utilizar la propiedad <see cref="P:System.Net.Sockets.Socket.Blocking" />.</exception>
      <exception cref="T:System.Security.SecurityException">Un llamador de la pila de llamadas no tiene los permisos necesarios.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.IOControl(System.Net.Sockets.IOControlCode,System.Byte[],System.Byte[])">
      <summary>Establece modos operativos de bajo nivel para el <see cref="T:System.Net.Sockets.Socket" /> que utiliza la enumeración <see cref="T:System.Net.Sockets.IOControlCode" /> para especificar códigos de control.</summary>
      <param name="ioControlCode">Valor de <see cref="T:System.Net.Sockets.IOControlCode" /> que especifica el código de control de la operación que se ha de realizar.</param>
      <param name="optionInValue">Matriz de tipo <see cref="T:System.Byte" /> que contiene los datos de entrada requeridos por la operación.</param>
      <param name="optionOutValue">Matriz de tipo <see cref="T:System.Byte" /> que contiene los datos de salida requeridos por la operación.</param>
      <returns>Número de bytes del parámetro <paramref name="optionOutValue" />.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.InvalidOperationException">Se intentó modificar el modo de bloqueo sin utilizar la propiedad <see cref="P:System.Net.Sockets.Socket.Blocking" />.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.IsBound">
      <summary>Obtiene un valor que indica si <see cref="T:System.Net.Sockets.Socket" /> se enlaza a un puerto local concreto.</summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.Net.Sockets.Socket" /> se enlaza a un puerto local; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.LingerState">
      <summary>Obtiene o establece un valor que especifica si <see cref="T:System.Net.Sockets.Socket" /> retrasará el cierre de un socket en un intento de envío de todos los datos pendientes.</summary>
      <returns>
        <see cref="T:System.Net.Sockets.LingerOption" /> que especifica cómo aplicar un retraso mientras se cierra un socket.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Listen(System.Int32)">
      <summary>Coloca un objeto <see cref="T:System.Net.Sockets.Socket" /> en un estado de escucha.</summary>
      <param name="backlog">Longitud máxima de la cola de conexiones pendientes.</param>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.LocalEndPoint">
      <summary>Obtiene el extremo local.</summary>
      <returns>
        <see cref="T:System.Net.EndPoint" /> que utiliza el <see cref="T:System.Net.Sockets.Socket" /> para las comunicaciones.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.MulticastLoopback">
      <summary>Obtiene o establece un valor que especifica si se entregan paquetes de multidifusión saliente a la aplicación emisora.</summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.Net.Sockets.Socket" /> recibe paquetes de multidifusión saliente; de lo contrario, <see langword="false" />.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.NoDelay">
      <summary>Obtiene o establece un valor de <see cref="T:System.Boolean" /> que especifica si la secuencia <see cref="T:System.Net.Sockets.Socket" /> está utilizando el algoritmo de Nagle.</summary>
      <returns>
        <see langword="false" /> si <see cref="T:System.Net.Sockets.Socket" /> utiliza el algoritmo de Nagle; de lo contrario, <see langword="true" />. De manera predeterminada, es <see langword="false" />.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar obtener acceso a <see cref="T:System.Net.Sockets.Socket" />.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.OSSupportsIPv4">
      <summary>Indica si el sistema operativo subyacente y los adaptadores de red admiten la versión 4 del protocolo de Internet (IPv4).</summary>
      <returns>Es <see langword="true" /> si el sistema operativo y los adaptadores de red admiten el protocolo IPv4; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.OSSupportsIPv6">
      <summary>Indica si el sistema operativo subyacente y los adaptadores de red admiten la versión 6 del protocolo Internet (IPv6).</summary>
      <returns>
        <see langword="true" /> si el sistema operativo y los adaptadores de red admiten el protocolo IPv6; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Poll(System.Int32,System.Net.Sockets.SelectMode)">
      <summary>Determina el estado de <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <param name="microSeconds">Tiempo que se va a esperar una respuesta, en microsegundos.</param>
      <param name="mode">Uno de los valores de <see cref="T:System.Net.Sockets.SelectMode" />.</param>
      <returns>Estado del objeto <see cref="T:System.Net.Sockets.Socket" /> según el valor del modo de sondeo que se pase en el parámetro <paramref name="mode" />.  
  Modo 
  Valor devuelto 
 <see cref="F:System.Net.Sockets.SelectMode.SelectRead" />Es <see langword="true" /> si se ha llamado a <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> y hay una conexión pendiente; 
O bien 
 Es <see langword="true" /> si hay datos disponibles para su lectura; 
o bien 
 Es <see langword="true" /> si se cerró, restableció o terminó la conexión; 
de lo contrario, devolverá <see langword="false" />.  

 <see cref="F:System.Net.Sockets.SelectMode.SelectWrite" />Es <see langword="true" /> si se procesa un método <see cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" /> y la conexión se ha realizado correctamente; 
o bien 
 Es <see langword="true" /> si se pueden enviar datos; 
de lo contrario, devolverá <see langword="false" />.  

 <see cref="F:System.Net.Sockets.SelectMode.SelectError" />Es <see langword="true" /> si se procesa un método <see cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" /> que no se bloquea y la conexión no se ha realizado correctamente; 
O bien 
 Es <see langword="true" /> si no se ha establecido <see cref="F:System.Net.Sockets.SocketOptionName.OutOfBandInline" /> y hay datos fuera de banda disponibles; 
de lo contrario, devolverá <see langword="false" />.</returns>
      <exception cref="T:System.NotSupportedException">El parámetro <paramref name="mode" /> no es un valor de <see cref="T:System.Net.Sockets.SelectMode" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket. Vea los comentarios más abajo.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.ProtocolType">
      <summary>Obtiene el tipo de protocolo de <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>Uno de los valores de <see cref="T:System.Net.Sockets.ProtocolType" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[])">
      <summary>Recibe datos de un <see cref="T:System.Net.Sockets.Socket" /> enlazado en un búfer de recepción.</summary>
      <param name="buffer">Matriz de tipo <see cref="T:System.Byte" /> que constituye la ubicación de almacenamiento de los datos recibidos.</param>
      <returns>Número de bytes recibidos.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.Security.SecurityException">Un llamador de la pila de llamadas no tiene los permisos necesarios.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)">
      <summary>Recibe el número especificado de bytes de un objeto <see cref="T:System.Net.Sockets.Socket" /> enlazado en la posición de desplazamiento especificada del búfer de recepción, usando el valor de <see cref="T:System.Net.Sockets.SocketFlags" /> especificado.</summary>
      <param name="buffer">Matriz de tipo <see cref="T:System.Byte" /> que es la ubicación de almacenamiento para los datos recibidos.</param>
      <param name="offset">Ubicación de <paramref name="buffer" /> en la que se almacenarán los datos recibidos.</param>
      <param name="size">Número de bytes que se va a recibir.</param>
      <param name="socketFlags">Combinación bit a bit de los valores de <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <returns>Número de bytes recibidos.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> es menor que 0.  
O bien 
 <paramref name="offset" /> es mayor que la longitud de <paramref name="buffer" />.  
o bien 
 <paramref name="size" /> es menor que 0.  
o bien 
 <paramref name="size" /> es mayor que la longitud de <paramref name="buffer" /> menos el valor del parámetro <paramref name="offset" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> no es una combinación válida de valores.  
O bien 
La propiedad <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> no se estableció.  
o bien 
Se produce un error de sistema operativo al acceder a <see cref="T:System.Net.Sockets.Socket" />.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.Security.SecurityException">Un llamador de la pila de llamadas no tiene los permisos necesarios.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <summary>Recibe datos de un <see cref="T:System.Net.Sockets.Socket" /> enlazado en un búfer de recepción, usando el valor de <see cref="T:System.Net.Sockets.SocketFlags" /> especificado.</summary>
      <param name="buffer">Matriz de tipo <see cref="T:System.Byte" /> que constituye la ubicación de almacenamiento de los datos recibidos.</param>
      <param name="offset">Posición en el parámetro <paramref name="buffer" /> para almacenar los datos recibidos.</param>
      <param name="size">Número de bytes que se va a recibir.</param>
      <param name="socketFlags">Combinación bit a bit de los valores de <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="errorCode">Objeto <see cref="T:System.Net.Sockets.SocketError" /> que almacena el error de socket.</param>
      <returns>Número de bytes recibidos.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> es menor que 0.  
o bien 
 <paramref name="offset" /> es mayor que la longitud de <paramref name="buffer" />.  
o bien 
 <paramref name="size" /> es menor que 0.  
o bien 
 <paramref name="size" /> es mayor que la longitud de <paramref name="buffer" /> menos el valor del parámetro <paramref name="offset" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> no es una combinación válida de valores.  
O bien 
La propiedad <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> no se ha establecido.  
O bien 
Se produce un error de sistema operativo al acceder a <see cref="T:System.Net.Sockets.Socket" />.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.Security.SecurityException">Un llamador de la pila de llamadas no tiene los permisos necesarios.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)">
      <summary>Recibe el número especificado de bytes de datos de un objeto <see cref="T:System.Net.Sockets.Socket" /> enlazado en un búfer de recepción, usando el valor de <see cref="T:System.Net.Sockets.SocketFlags" /> especificado.</summary>
      <param name="buffer">Matriz de tipo <see cref="T:System.Byte" /> que constituye la ubicación de almacenamiento de los datos recibidos.</param>
      <param name="size">Número de bytes que se va a recibir.</param>
      <param name="socketFlags">Combinación bit a bit de los valores de <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <returns>Número de bytes recibidos.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="size" /> sobrepasa el tamaño de <paramref name="buffer" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.Security.SecurityException">Un llamador de la pila de llamadas no tiene los permisos necesarios.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Net.Sockets.SocketFlags)">
      <summary>Recibe datos de un <see cref="T:System.Net.Sockets.Socket" /> enlazado en un búfer de recepción, usando el valor de <see cref="T:System.Net.Sockets.SocketFlags" /> especificado.</summary>
      <param name="buffer">Matriz de tipo <see cref="T:System.Byte" /> que constituye la ubicación de almacenamiento de los datos recibidos.</param>
      <param name="socketFlags">Combinación bit a bit de los valores de <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <returns>Número de bytes recibidos.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.Security.SecurityException">Un llamador de la pila de llamadas no tiene los permisos necesarios.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})">
      <summary>Recibe, en la lista de búferes de recepción, datos de un <see cref="T:System.Net.Sockets.Socket" /> enlazado.</summary>
      <param name="buffers">Lista de <see cref="T:System.ArraySegment`1" /> de tipo <see cref="T:System.Byte" /> que contiene los datos recibidos.</param>
      <returns>Número de bytes recibidos.</returns>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Se ha producido un error al intentar obtener acceso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
      <summary>Recibe, en la lista de búferes de recepción, datos de un <see cref="T:System.Net.Sockets.Socket" /> enlazado, utilizando el valor de <see cref="T:System.Net.Sockets.SocketFlags" /> especificado.</summary>
      <param name="buffers">Lista de <see cref="T:System.ArraySegment`1" /> de tipo <see cref="T:System.Byte" /> que contiene los datos recibidos.</param>
      <param name="socketFlags">Combinación bit a bit de los valores de <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <returns>Número de bytes recibidos.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" /> es <see langword="null" />.  
o bien 
 <paramref name="buffers" />.Count es cero.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Se ha producido un error al intentar obtener acceso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <summary>Recibe, en la lista de búferes de recepción, datos de un <see cref="T:System.Net.Sockets.Socket" /> enlazado, utilizando el valor de <see cref="T:System.Net.Sockets.SocketFlags" /> especificado.</summary>
      <param name="buffers">Lista de <see cref="T:System.ArraySegment`1" /> de tipo <see cref="T:System.Byte" /> que contiene los datos recibidos.</param>
      <param name="socketFlags">Combinación bit a bit de los valores de <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="errorCode">Objeto <see cref="T:System.Net.Sockets.SocketError" /> que almacena el error de socket.</param>
      <returns>Número de bytes recibidos.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" /> es <see langword="null" />.  
O bien 
 <paramref name="buffers" />.Count es cero.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Se ha producido un error al intentar obtener acceso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Span{System.Byte})">
      <param name="buffer" />
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Span{System.Byte},System.Net.Sockets.SocketFlags)">
      <param name="buffer" />
      <param name="socketFlags" />
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Span{System.Byte},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <param name="buffer" />
      <param name="socketFlags" />
      <param name="errorCode" />
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Comienza una solicitud asincrónica para recibir los datos de un objeto <see cref="T:System.Net.Sockets.Socket" /> conectado.</summary>
      <param name="e">Objeto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> que se usa para esta operación de socket asincrónica.</param>
      <returns>Devuelve <see langword="true" /> si la operación de E/S está pendiente. Al completar la operación se provoca el evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> del parámetro <paramref name="e" />.  
 Devuelve <see langword="false" /> si la operación de E/S se ha completado de forma sincrónica. En ese caso, el evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> del parámetro <paramref name="e" /> no se provoca y el objeto <paramref name="e" /> que se pasa como parámetro puede examinarse inmediatamente después de que se devuelva la llamada al método para recuperar el resultado de la operación.</returns>
      <exception cref="T:System.ArgumentException">Un argumento no era válido. Las propiedades <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> o <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> del parámetro <paramref name="e" /> deben hacer referencia a los búferes válidos. Se puede establecer una de estas propiedades, pero no ambas al mismo tiempo.</exception>
      <exception cref="T:System.InvalidOperationException">Ya hay una operación de socket en curso que utiliza el objeto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> especificado en el parámetro <paramref name="e" />.</exception>
      <exception cref="T:System.NotSupportedException">Se requiere Windows XP o posteriores para este método.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.ReceiveBufferSize">
      <summary>Obtiene o establece un valor que especifica el tamaño del búfer de recepción de <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>
        <see cref="T:System.Int32" /> que contiene el tamaño, en bytes, del búfer de recepción. El valor predeterminado es 8192.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor especificado para una operación de establecimiento es menor que 0.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)">
      <summary>Recibe el número especificado de bytes de datos en la ubicación especificada del búfer de datos, mediante el <see cref="T:System.Net.Sockets.SocketFlags" /> especificado y almacena el punto de conexión.</summary>
      <param name="buffer">Matriz de tipo <see cref="T:System.Byte" /> que es la ubicación de almacenamiento para los datos recibidos.</param>
      <param name="offset">Posición en el parámetro <paramref name="buffer" /> para almacenar los datos recibidos.</param>
      <param name="size">Número de bytes que se va a recibir.</param>
      <param name="socketFlags">Combinación bit a bit de los valores de <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="remoteEP">
        <see cref="T:System.Net.EndPoint" /> que se pasa por referencia y que representa el servidor remoto.</param>
      <returns>Número de bytes recibidos.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> es <see langword="null" />.  
o bien 
 <paramref name="remoteEP" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> es menor que 0.  
O bien 
 <paramref name="offset" /> es mayor que la longitud de <paramref name="buffer" />.  
o bien 
 <paramref name="size" /> es menor que 0.  
O bien 
 <paramref name="size" /> es mayor que la longitud de <paramref name="buffer" /> menos el valor del parámetro de desplazamiento.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> no es una combinación válida de valores.  
O bien 
La propiedad <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> no se estableció.  
o bien 
Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)">
      <summary>Recibe el número especificado de bytes en el búfer de datos mediante el marcador <see cref="T:System.Net.Sockets.SocketFlags" /> especificado y almacena el extremo.</summary>
      <param name="buffer">Matriz de tipo <see cref="T:System.Byte" /> que es la ubicación de almacenamiento para los datos recibidos.</param>
      <param name="size">Número de bytes que se va a recibir.</param>
      <param name="socketFlags">Combinación bit a bit de los valores de <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="remoteEP">
        <see cref="T:System.Net.EndPoint" /> que se pasa por referencia y que representa el servidor remoto.</param>
      <returns>Número de bytes recibidos.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> es <see langword="null" />.  
o bien 
 <paramref name="remoteEP" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="size" /> es menor que 0.  
O bien 
 <paramref name="size" /> es mayor que la longitud de <paramref name="buffer" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> no es una combinación válida de valores.  
O bien 
La propiedad <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> no se estableció.  
o bien 
Se produce un error de sistema operativo al acceder a <see cref="T:System.Net.Sockets.Socket" />.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.Security.SecurityException">Un llamador de la pila de llamadas no tiene los permisos necesarios.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Net.EndPoint@)">
      <summary>Recibe un datagrama en el búfer de datos y almacena el extremo.</summary>
      <param name="buffer">Matriz de tipo <see cref="T:System.Byte" /> que es la ubicación de almacenamiento para los datos recibidos.</param>
      <param name="remoteEP">
        <see cref="T:System.Net.EndPoint" /> que se pasa por referencia y que representa el servidor remoto.</param>
      <returns>Número de bytes recibidos.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> es <see langword="null" />.  
o bien 
 <paramref name="remoteEP" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.Security.SecurityException">Un llamador de la pila de llamadas no tiene los permisos necesarios.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Net.Sockets.SocketFlags,System.Net.EndPoint@)">
      <summary>Recibe un datagrama en el búfer de datos usando el objeto <see cref="T:System.Net.Sockets.SocketFlags" /> especificado y almacena el extremo.</summary>
      <param name="buffer">Matriz de tipo <see cref="T:System.Byte" /> que constituye la ubicación de almacenamiento de los datos recibidos.</param>
      <param name="socketFlags">Combinación bit a bit de los valores de <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="remoteEP">
        <see cref="T:System.Net.EndPoint" /> que se pasa por referencia y que representa el servidor remoto.</param>
      <returns>Número de bytes recibidos.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> es <see langword="null" />.  
O bien 
 <paramref name="remoteEP" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.Security.SecurityException">Un llamador de la pila de llamadas no tiene los permisos necesarios.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Comienza a recibir asincrónicamente los datos de un dispositivo de red especificado.</summary>
      <param name="e">Objeto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> que se usa para esta operación de socket asincrónica.</param>
      <returns>Devuelve <see langword="true" /> si la operación de E/S está pendiente. Al completar la operación se provoca el evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> del parámetro <paramref name="e" />.  
 Devuelve <see langword="false" /> si la operación de E/S se ha completado de forma sincrónica. En ese caso, el evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> del parámetro <paramref name="e" /> no se provoca y el objeto <paramref name="e" /> que se pasa como parámetro puede examinarse inmediatamente después de que se devuelva la llamada al método para recuperar el resultado de la operación.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> no puede ser null.</exception>
      <exception cref="T:System.InvalidOperationException">Ya hay una operación de socket en curso que utiliza el objeto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> especificado en el parámetro <paramref name="e" />.</exception>
      <exception cref="T:System.NotSupportedException">Se requiere Windows XP o posteriores para este método.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)">
      <summary>Recibe el número especificado de bytes de datos en la ubicación especificada del búfer de datos, mediante el elemento <see cref="T:System.Net.Sockets.SocketFlags" /> especificado y almacena el punto de conexión y la información del paquete.</summary>
      <param name="buffer">Matriz de tipo <see cref="T:System.Byte" /> que es la ubicación de almacenamiento para los datos recibidos.</param>
      <param name="offset">Posición en el parámetro <paramref name="buffer" /> para almacenar los datos recibidos.</param>
      <param name="size">Número de bytes que se va a recibir.</param>
      <param name="socketFlags">Combinación bit a bit de los valores de <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="remoteEP">
        <see cref="T:System.Net.EndPoint" /> que se pasa por referencia y que representa el servidor remoto.</param>
      <param name="ipPacketInformation">
        <see cref="T:System.Net.Sockets.IPPacketInformation" /> que contiene información de dirección e interfaz.</param>
      <returns>Número de bytes recibidos.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> es <see langword="null" />.  
- O bien, 
 <paramref name="remoteEP" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> es menor que 0.  
O bien 
 <paramref name="offset" /> es mayor que la longitud de <paramref name="buffer" />.  
o bien 
 <paramref name="size" /> es menor que 0.  
O bien 
 <paramref name="size" /> es mayor que la longitud de <paramref name="buffer" /> menos el valor del parámetro de desplazamiento.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> no es una combinación válida de valores.  
o bien 
La propiedad <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> no se estableció.  
o bien 
.NET Framework se está ejecutando en procesador AMD de 64 bits.  
O bien 
Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.NotSupportedException">El sistema operativo es Windows 2000 o una versión anterior, y este método requiere Windows XP.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Comienza a recibir de forma asincrónica el número especificado de bytes de datos en la ubicación indicada del búfer de datos, mediante la propiedad <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.SocketFlags" /> especificada, y almacena la información sobre el extremo y el paquete.</summary>
      <param name="e">Objeto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> que se usa para esta operación de socket asincrónica.</param>
      <returns>Devuelve <see langword="true" /> si la operación de E/S está pendiente. Al completar la operación se provoca el evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> del parámetro <paramref name="e" />.  
 Devuelve <see langword="false" /> si la operación de E/S se ha completado de forma sincrónica. En ese caso, el evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> del parámetro <paramref name="e" /> no se provoca y el objeto <paramref name="e" /> que se pasa como parámetro puede examinarse inmediatamente después de que se devuelva la llamada al método para recuperar el resultado de la operación.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> no puede ser null.</exception>
      <exception cref="T:System.NotSupportedException">Se requiere Windows XP o posteriores para este método.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.ReceiveTimeout">
      <summary>Obtiene o establece un valor que especifica el tiempo tras el que una llamada <see cref="Overload:System.Net.Sockets.Socket.Receive" /> sincrónica pasará a tiempo de espera.</summary>
      <returns>El valor del tiempo de espera, en milisegundos. El valor predeterminado es 0, lo que indica un tiempo de espera infinito. Especificar -1 también indica un tiempo infinito.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor especificado para una operación Set es menor que -1.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.RemoteEndPoint">
      <summary>Obtiene el extremo remoto.</summary>
      <returns>
        <see cref="T:System.Net.EndPoint" /> con el que está comunicando el <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.SafeHandle">
      <summary>Obtiene un elemento <see cref="T:System.Net.Sockets.SafeSocketHandle" /> que representa el identificador de socket que encapsula el objeto <see cref="T:System.Net.Sockets.Socket" /> actual.</summary>
      <returns>Identificador de socket expuesto de forma segura para el socket encapsulado por el <see cref="T:System.Net.Sockets.Socket" /> objeto actual.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Select(System.Collections.IList,System.Collections.IList,System.Collections.IList,System.Int32)">
      <summary>Determina el estado de uno o varios sockets.</summary>
      <param name="checkRead">
        <see cref="T:System.Collections.IList" /> de instancias <see cref="T:System.Net.Sockets.Socket" /> para comprobar la legibilidad.</param>
      <param name="checkWrite">
        <see cref="T:System.Collections.IList" /> de instancias <see cref="T:System.Net.Sockets.Socket" /> para comprobar la capacidad de escritura.</param>
      <param name="checkError">
        <see cref="T:System.Collections.IList" /> de instancias <see cref="T:System.Net.Sockets.Socket" /> para comprobar errores.</param>
      <param name="microSeconds">Valor del tiempo de espera, en microsegundos. Un valor de -1 indica un tiempo de espera infinito.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="checkRead" /> es <see langword="null" /> o está vacío.  

y - 
El parámetro <paramref name="checkWrite" /> es <see langword="null" /> o está vacío. 
y - 
El parámetro <paramref name="checkError" /> es <see langword="null" /> o está vacío.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Byte[])">
      <summary>Envía datos a un objeto <see cref="T:System.Net.Sockets.Socket" /> conectado.</summary>
      <param name="buffer">Matriz de tipo <see cref="T:System.Byte" /> que contiene los datos que se van a enviar.</param>
      <returns>Número de bytes enviados a <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)">
      <summary>Envía el número especificado de bytes de datos a un <see cref="T:System.Net.Sockets.Socket" /> conectado, comenzando en el desplazamiento especificado y usando el <see cref="T:System.Net.Sockets.SocketFlags" /> especificado.</summary>
      <param name="buffer">Matriz de tipo <see cref="T:System.Byte" /> que contiene los datos que se van a enviar.</param>
      <param name="offset">Posición en el búfer de datos donde comienza el envío de datos.</param>
      <param name="size">Número de bytes para enviar.</param>
      <param name="socketFlags">Combinación bit a bit de los valores de <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <returns>Número de bytes enviados a <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> es menor que 0.  
O bien 
 <paramref name="offset" /> es mayor que la longitud de <paramref name="buffer" />.  
O bien 
 <paramref name="size" /> es menor que 0.  
O bien 
 <paramref name="size" /> es mayor que la longitud de <paramref name="buffer" /> menos el valor del parámetro <paramref name="offset" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> no es una combinación válida de valores.  
O bien 
Se produce un error de sistema operativo al acceder a <see cref="T:System.Net.Sockets.Socket" />.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <summary>Envía el número especificado de bytes de datos a un objeto <see cref="T:System.Net.Sockets.Socket" /> conectado, a partir de la posición de desplazamiento especificada y usando el valor de <see cref="T:System.Net.Sockets.SocketFlags" /> especificado.</summary>
      <param name="buffer">Matriz de tipo <see cref="T:System.Byte" /> que contiene los datos que se van a enviar.</param>
      <param name="offset">Posición en el búfer de datos donde comienza el envío de datos.</param>
      <param name="size">Número de bytes para enviar.</param>
      <param name="socketFlags">Combinación bit a bit de los valores de <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="errorCode">Objeto <see cref="T:System.Net.Sockets.SocketError" /> que almacena el error de socket.</param>
      <returns>Número de bytes enviados a <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> es menor que 0.  
O bien 
 <paramref name="offset" /> es mayor que la longitud de <paramref name="buffer" />.  
o bien 
 <paramref name="size" /> es menor que 0.  
O bien 
 <paramref name="size" /> es mayor que la longitud de <paramref name="buffer" /> menos el valor del parámetro <paramref name="offset" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> no es una combinación válida de valores.  
o bien 
Se produce un error de sistema operativo al acceder a <see cref="T:System.Net.Sockets.Socket" />.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)">
      <summary>Envía el número especificado de bytes de datos a un objeto <see cref="T:System.Net.Sockets.Socket" /> conectado, usando el marcador <see cref="T:System.Net.Sockets.SocketFlags" /> especificado.</summary>
      <param name="buffer">Matriz de tipo <see cref="T:System.Byte" /> que contiene los datos que se van a enviar.</param>
      <param name="size">Número de bytes para enviar.</param>
      <param name="socketFlags">Combinación bit a bit de los valores de <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <returns>Número de bytes enviados a <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="size" /> es menor que 0 o supera el tamaño del búfer.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> no es una combinación válida de valores.  
O bien 
Se produce un error del sistema operativo al tener acceso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Net.Sockets.SocketFlags)">
      <summary>Envía datos a un objeto <see cref="T:System.Net.Sockets.Socket" /> conectado mediante el marcador <see cref="T:System.Net.Sockets.SocketFlags" /> especificado.</summary>
      <param name="buffer">Matriz de tipo <see cref="T:System.Byte" /> que contiene los datos que se van a enviar.</param>
      <param name="socketFlags">Combinación bit a bit de los valores de <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <returns>Número de bytes enviados a <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})">
      <summary>Envía el conjunto de búferes de la lista a un <see cref="T:System.Net.Sockets.Socket" /> conectado.</summary>
      <param name="buffers">Lista de objetos <see cref="T:System.ArraySegment`1" /> de tipo <see cref="T:System.Byte" /> que contiene los datos que se han de enviar.</param>
      <returns>Número de bytes enviados a <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffers" /> está vacía.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket. Vea la sección de comentarios que figura más abajo.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
      <summary>Envía el conjunto de búferes de la lista a un <see cref="T:System.Net.Sockets.Socket" /> conectado, utilizando el <see cref="T:System.Net.Sockets.SocketFlags" /> especificado.</summary>
      <param name="buffers">Lista de objetos <see cref="T:System.ArraySegment`1" /> de tipo <see cref="T:System.Byte" /> que contiene los datos que se han de enviar.</param>
      <param name="socketFlags">Combinación bit a bit de los valores de <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <returns>Número de bytes enviados a <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffers" /> está vacía.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <summary>Envía el conjunto de búferes de la lista a un <see cref="T:System.Net.Sockets.Socket" /> conectado, utilizando el <see cref="T:System.Net.Sockets.SocketFlags" /> especificado.</summary>
      <param name="buffers">Lista de objetos <see cref="T:System.ArraySegment`1" /> de tipo <see cref="T:System.Byte" /> que contiene los datos que se han de enviar.</param>
      <param name="socketFlags">Combinación bit a bit de los valores de <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="errorCode">Objeto <see cref="T:System.Net.Sockets.SocketError" /> que almacena el error de socket.</param>
      <returns>Número de bytes enviados a <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffers" /> está vacía.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.ReadOnlySpan{System.Byte})">
      <param name="buffer" />
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.ReadOnlySpan{System.Byte},System.Net.Sockets.SocketFlags)">
      <param name="buffer" />
      <param name="socketFlags" />
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.ReadOnlySpan{System.Byte},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <param name="buffer" />
      <param name="socketFlags" />
      <param name="errorCode" />
    </member>
    <member name="M:System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Envía datos de forma asincrónica a un objeto <see cref="T:System.Net.Sockets.Socket" /> conectado.</summary>
      <param name="e">Objeto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> que se usa para esta operación de socket asincrónica.</param>
      <returns>Devuelve <see langword="true" /> si la operación de E/S está pendiente. Al completar la operación se provoca el evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> del parámetro <paramref name="e" />.  
 Devuelve <see langword="false" /> si la operación de E/S se ha completado de forma sincrónica. En ese caso, el evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> del parámetro <paramref name="e" /> no se provoca y el objeto <paramref name="e" /> que se pasa como parámetro puede examinarse inmediatamente después de que se devuelva la llamada al método para recuperar el resultado de la operación.</returns>
      <exception cref="T:System.ArgumentException">Las propiedades <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> o <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> del parámetro <paramref name="e" /> deben hacer referencia a los búferes válidos. Se puede establecer una de estas propiedades, pero no ambas al mismo tiempo.</exception>
      <exception cref="T:System.InvalidOperationException">Ya hay una operación de socket en curso que utiliza el objeto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> especificado en el parámetro <paramref name="e" />.</exception>
      <exception cref="T:System.NotSupportedException">Se requiere Windows XP o posteriores para este método.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">El <see cref="T:System.Net.Sockets.Socket" /> no está conectado todavía o no se obtuvo a través de un método <see cref="M:System.Net.Sockets.Socket.Accept" />, <see cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> o <see cref="Overload:System.Net.Sockets.Socket.BeginAccept" />.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.SendBufferSize">
      <summary>Obtiene o establece un valor que especifica el tamaño del búfer de envío de <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>
        <see cref="T:System.Int32" /> que contiene el tamaño, en bytes, del búfer de envío. El valor predeterminado es 8192.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor especificado para una operación de establecimiento es menor que 0.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendFile(System.String)">
      <summary>Envía el archivo <paramref name="fileName" /> a un objeto <see cref="T:System.Net.Sockets.Socket" /> conectado con el marcador de transmisión <see cref="F:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread" />.</summary>
      <param name="fileName">
        <see cref="T:System.String" /> que contiene la ruta de acceso y el nombre del archivo que se va a enviar. Este parámetro puede ser <see langword="null" />.</param>
      <exception cref="T:System.NotSupportedException">El socket no está conectado a un host remoto.</exception>
      <exception cref="T:System.ObjectDisposedException">El objeto <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.InvalidOperationException">El objeto <see cref="T:System.Net.Sockets.Socket" /> no está en modo de bloqueo y no puede aceptar esta llamada sincrónica.</exception>
      <exception cref="T:System.IO.FileNotFoundException">No se encontró el archivo <paramref name="fileName" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendFile(System.String,System.Byte[],System.Byte[],System.Net.Sockets.TransmitFileOptions)">
      <summary>Envía el archivo <paramref name="fileName" /> y búferes de datos a un objeto <see cref="T:System.Net.Sockets.Socket" /> conectado mediante el valor <see cref="T:System.Net.Sockets.TransmitFileOptions" /> especificado.</summary>
      <param name="fileName">
        <see cref="T:System.String" /> que contiene la ruta de acceso y el nombre del archivo que se va a enviar. Este parámetro puede ser <see langword="null" />.</param>
      <param name="preBuffer">Una matriz <see cref="T:System.Byte" /> que contiene los datos que se van a enviar antes de enviar el archivo. Este parámetro puede ser <see langword="null" />.</param>
      <param name="postBuffer">Una matriz <see cref="T:System.Byte" /> que contiene los datos que se van a enviar después de enviar el archivo. Este parámetro puede ser <see langword="null" />.</param>
      <param name="flags">Uno o varios de los valores <see cref="T:System.Net.Sockets.TransmitFileOptions" />.</param>
      <exception cref="T:System.NotSupportedException">El sistema operativo no es Windows NT o una versión posterior.  
o bien
 El socket no está conectado a un host remoto.</exception>
      <exception cref="T:System.ObjectDisposedException">El objeto <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.InvalidOperationException">El objeto <see cref="T:System.Net.Sockets.Socket" /> no está en modo de bloqueo y no puede aceptar esta llamada sincrónica.</exception>
      <exception cref="T:System.IO.FileNotFoundException">No se encontró el archivo <paramref name="fileName" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Envía de forma asincrónica una colección de archivos o búferes de datos en memoria a un objeto <see cref="T:System.Net.Sockets.Socket" /> conectado.</summary>
      <param name="e">Objeto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> que se usa para esta operación de socket asincrónica.</param>
      <returns>Devuelve <see langword="true" /> si la operación de E/S está pendiente. Al completar la operación se provoca el evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> del parámetro <paramref name="e" />.  
 Devuelve <see langword="false" /> si la operación de E/S se ha completado de forma sincrónica. En ese caso, el evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> del parámetro <paramref name="e" /> no se provoca y el objeto <paramref name="e" /> que se pasa como parámetro puede examinarse inmediatamente después de que se devuelva la llamada al método para recuperar el resultado de la operación.</returns>
      <exception cref="T:System.IO.FileNotFoundException">No se encontró el archivo especificado en la propiedad <see cref="P:System.Net.Sockets.SendPacketsElement.FilePath" />.</exception>
      <exception cref="T:System.InvalidOperationException">Ya hay una operación de socket en curso que utiliza el objeto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> especificado en el parámetro <paramref name="e" />.</exception>
      <exception cref="T:System.NotSupportedException">Se requiere Windows XP o posteriores para este método. Esta excepción también se produce si <see cref="T:System.Net.Sockets.Socket" /> no está conectado a un host remoto.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Se está usando un <see cref="T:System.Net.Sockets.Socket" /> sin conexión y el archivo que se está enviando supera el tamaño de paquete máximo del transporte subyacente.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.SendTimeout">
      <summary>Obtiene o establece un valor que especifica el tiempo tras el que una llamada <see cref="Overload:System.Net.Sockets.Socket.Send" /> sincrónica pasará a tiempo de espera.</summary>
      <returns>El valor del tiempo de espera, en milisegundos. Si establece la propiedad con un valor comprendido entre 1 y 499, el valor cambiará a 500. El valor predeterminado es 0, lo que indica un tiempo de espera infinito. Especificar -1 también indica un tiempo infinito.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor especificado para una operación Set es menor que -1.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary>Envía el número especificado de bytes de datos al extremo especificado, comenzando en la ubicación especificada del búfer y usando los <see cref="T:System.Net.Sockets.SocketFlags" /> especificados.</summary>
      <param name="buffer">Matriz de tipo <see cref="T:System.Byte" /> que contiene los datos que se van a enviar.</param>
      <param name="offset">Posición en el búfer de datos donde comienza el envío de datos.</param>
      <param name="size">Número de bytes para enviar.</param>
      <param name="socketFlags">Combinación bit a bit de los valores de <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="remoteEP">
        <see cref="T:System.Net.EndPoint" /> que representa la ubicación de destino de los datos.</param>
      <returns>Número de bytes enviados.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> es <see langword="null" />.  
O bien 
 <paramref name="remoteEP" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> es menor que 0.  
o bien 
 <paramref name="offset" /> es mayor que la longitud de <paramref name="buffer" />.  
o bien 
 <paramref name="size" /> es menor que 0.  
O bien 
 <paramref name="size" /> es mayor que la longitud de <paramref name="buffer" /> menos el valor del parámetro <paramref name="offset" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> no es una combinación válida de valores.  
o bien 
Se produce un error de sistema operativo al acceder a <see cref="T:System.Net.Sockets.Socket" />.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.Security.SecurityException">Un llamador de la pila de llamadas no tiene los permisos necesarios.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary>Envía el número especificado de bytes de datos al extremo especificado usando los <see cref="T:System.Net.Sockets.SocketFlags" /> especificados.</summary>
      <param name="buffer">Matriz de tipo <see cref="T:System.Byte" /> que contiene los datos que se van a enviar.</param>
      <param name="size">Número de bytes para enviar.</param>
      <param name="socketFlags">Combinación bit a bit de los valores de <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="remoteEP">
        <see cref="T:System.Net.EndPoint" /> que representa la ubicación de destino de los datos.</param>
      <returns>Número de bytes enviados.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> es <see langword="null" />.  
O bien 
 <paramref name="remoteEP" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="size" /> especificado sobrepasa el tamaño de <paramref name="buffer" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Net.EndPoint)">
      <summary>Envía los datos al extremo especificado.</summary>
      <param name="buffer">Matriz de tipo <see cref="T:System.Byte" /> que contiene los datos que se van a enviar.</param>
      <param name="remoteEP">
        <see cref="T:System.Net.EndPoint" /> que representa el destino de los datos.</param>
      <returns>Número de bytes enviados.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> es <see langword="null" />.  
O bien 
 <paramref name="remoteEP" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary>Envía datos a un extremo específico mediante el marcador <see cref="T:System.Net.Sockets.SocketFlags" /> especificado.</summary>
      <param name="buffer">Matriz de tipo <see cref="T:System.Byte" /> que contiene los datos que se van a enviar.</param>
      <param name="socketFlags">Combinación bit a bit de los valores de <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="remoteEP">
        <see cref="T:System.Net.EndPoint" /> que representa la ubicación de destino de los datos.</param>
      <returns>Número de bytes enviados.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> es <see langword="null" />.  
O bien 
 <paramref name="remoteEP" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Envía datos de forma asincrónica a un host remoto concreto.</summary>
      <param name="e">Objeto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> que se usa para esta operación de socket asincrónica.</param>
      <returns>Devuelve <see langword="true" /> si la operación de E/S está pendiente. Al completar la operación se provoca el evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> del parámetro <paramref name="e" />.  
 Devuelve <see langword="false" /> si la operación de E/S se ha completado de forma sincrónica. En ese caso, el evento <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> del parámetro <paramref name="e" /> no se provoca y el objeto <paramref name="e" /> que se pasa como parámetro puede examinarse inmediatamente después de que se devuelva la llamada al método para recuperar el resultado de la operación.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> no puede ser null.</exception>
      <exception cref="T:System.InvalidOperationException">Ya hay una operación de socket en curso que utiliza el objeto <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> especificado en el parámetro <paramref name="e" />.</exception>
      <exception cref="T:System.NotSupportedException">Se requiere Windows XP o posteriores para este método.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">El protocolo especificado está orientado a la conexión, pero el <see cref="T:System.Net.Sockets.Socket" /> no está conectado todavía.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetIPProtectionLevel(System.Net.Sockets.IPProtectionLevel)">
      <summary>Establece el nivel de protección IP en un socket.</summary>
      <param name="level">Nivel de protección IP que se va a establecer en este socket.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="level" /> no puede ser <see cref="F:System.Net.Sockets.IPProtectionLevel.Unspecified" />. El nivel de protección IP no puede estar establecido en no especificado.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Net.Sockets.AddressFamily" /> del socket debe ser <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> o <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Boolean)">
      <summary>Establece la opción de <see cref="T:System.Net.Sockets.Socket" /> especificada en el valor de <see cref="T:System.Boolean" /> indicado.</summary>
      <param name="optionLevel">Uno de los valores de <see cref="T:System.Net.Sockets.SocketOptionLevel" />.</param>
      <param name="optionName">Uno de los valores de <see cref="T:System.Net.Sockets.SocketOptionName" />.</param>
      <param name="optionValue">Valor de la opción, representado como <see cref="T:System.Boolean" />.</param>
      <exception cref="T:System.ObjectDisposedException">El objeto <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Byte[])">
      <summary>Establece la opción de <see cref="T:System.Net.Sockets.Socket" /> indicada en el valor especificado, representado como una matriz de bytes.</summary>
      <param name="optionLevel">Uno de los valores de <see cref="T:System.Net.Sockets.SocketOptionLevel" />.</param>
      <param name="optionName">Uno de los valores de <see cref="T:System.Net.Sockets.SocketOptionName" />.</param>
      <param name="optionValue">Matriz de tipo <see cref="T:System.Byte" /> que representa el valor de la opción.</param>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)">
      <summary>Establece la opción de <see cref="T:System.Net.Sockets.Socket" /> especificada en el valor entero indicado.</summary>
      <param name="optionLevel">Uno de los valores de <see cref="T:System.Net.Sockets.SocketOptionLevel" />.</param>
      <param name="optionName">Uno de los valores de <see cref="T:System.Net.Sockets.SocketOptionName" />.</param>
      <param name="optionValue">Valor de la opción.</param>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Object)">
      <summary>Establece la opción de <see cref="T:System.Net.Sockets.Socket" /> indicada en el valor especificado, representado como un objeto.</summary>
      <param name="optionLevel">Uno de los valores de <see cref="T:System.Net.Sockets.SocketOptionLevel" />.</param>
      <param name="optionName">Uno de los valores de <see cref="T:System.Net.Sockets.SocketOptionName" />.</param>
      <param name="optionValue">
        <see cref="T:System.Net.Sockets.LingerOption" /> o <see cref="T:System.Net.Sockets.MulticastOption" /> que contiene el valor de la opción.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="optionValue" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)">
      <summary>Deshabilita los envíos y recepciones en un objeto <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <param name="how">Uno de los valores de <see cref="T:System.Net.Sockets.SocketShutdown" /> que especifica la operación que ya no estará permitida.</param>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.SocketType">
      <summary>Obtiene el tipo de <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>Uno de los valores de <see cref="T:System.Net.Sockets.SocketType" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.SupportsIPv4">
      <summary>Obtiene un valor que indica si la compatibilidad con IPv4 está disponible y habilitada en el host actual.</summary>
      <returns>
        <see langword="true" /> si el host actual admite el protocolo IPv4; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.SupportsIPv6">
      <summary>Obtiene un valor que indica si el marco de trabajo admite IPv6 para ciertos miembros <see cref="T:System.Net.Dns" /> obsoletos.</summary>
      <returns>Es <see langword="true" /> si el marco de trabajo admite IPv6 para determinados métodos obsoletos de <see cref="T:System.Net.Dns" />; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.Ttl">
      <summary>Obtiene o establece un valor que especifica el valor de período de vida (TTL) de los paquetes de protocolo Internet (IP) enviados por <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>Valor TTL.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor TTL no se puede establecer en un número negativo.</exception>
      <exception cref="T:System.NotSupportedException">Esta propiedad sólo se puede establecer para sockets de las familias de <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> o <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket. También se devuelve este error cuando se ha intentado para establecer TTL en un valor superior a 255.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.UseOnlyOverlappedIO">
      <summary>Especifica si el socket debe utilizar únicamente el modo de E/S superpuesta.</summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.Net.Sockets.Socket" /> utiliza únicamente el modo de E/S superpuesta; de lo contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">El socket se ha enlazado a un puerto de terminación.</exception>
    </member>
    <member name="T:System.Net.Sockets.SocketAsyncEventArgs">
      <summary>Representa una operación de socket asincrónico.</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.#ctor">
      <summary>Crea una instancia de <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> vacía.</summary>
      <exception cref="T:System.NotSupportedException">No se admite la plataforma.</exception>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket">
      <summary>Obtiene o establece el socket que se va a usar o el socket creado para aceptar una conexión con un método de socket asincrónico.</summary>
      <returns>
        <see cref="T:System.Net.Sockets.Socket" /> que se va a usar o socket creado para aceptar una conexión con un método de socket asincrónico.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer">
      <summary>Obtiene el búfer de datos que se va a usar con un método de socket asincrónico.</summary>
      <returns>Matriz <see cref="T:System.Byte" /> que representa el búfer de datos que se va a usar con un método de socket asincrónico.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList">
      <summary>Obtiene o establece una matriz de búferes de datos que se va a usar con un método de socket asincrónico.</summary>
      <returns>
        <see cref="T:System.Collections.IList" /> que representa una matriz de búferes de datos que se va a usar con un método de socket asincrónico.</returns>
      <exception cref="T:System.ArgumentException">Se han especificado búferes ambiguos en una operación de establecimiento. Esta excepción se produce si la propiedad <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> se ha establecido en un valor no nulo y se intenta establecer la propiedad <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> en un valor no nulo.</exception>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.BytesTransferred">
      <summary>Obtiene el número de bytes transferidos en la operación de socket.</summary>
      <returns>
        <see cref="T:System.Int32" /> que contiene el número de bytes transferidos en la operación de socket.</returns>
    </member>
    <member name="E:System.Net.Sockets.SocketAsyncEventArgs.Completed">
      <summary>Evento utilizado para completar una operación asincrónica.</summary>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError">
      <summary>Obtiene la excepción en el caso de un error de conexión cuando se usó <see cref="T:System.Net.DnsEndPoint" />.</summary>
      <returns>Objeto <see cref="T:System.Exception" /> que indica la causa del error de conexión que se produce cuando se especifica un objeto <see cref="T:System.Net.DnsEndPoint" /> para la propiedad <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.ConnectSocket">
      <summary>Objeto <see cref="T:System.Net.Sockets.Socket" /> que se ha creado y conectado después de finalizar correctamente el método <see cref="Overload:System.Net.Sockets.Socket.ConnectAsync" />.</summary>
      <returns>Objeto <see cref="T:System.Net.Sockets.Socket" /> conectado.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.Count">
      <summary>Obtiene la cantidad máxima de datos, en bytes, que se van a enviar o recibir en una operación asincrónica.</summary>
      <returns>
        <see cref="T:System.Int32" /> que contiene la cantidad máxima de datos, en bytes, que se van a enviar o recibir.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.DisconnectReuseSocket">
      <summary>Obtiene o establece un valor que especifica si el socket se puede reutilizar después una operación de desconexión.</summary>
      <returns>
        <see cref="T:System.Boolean" /> que especifica si el socket se puede reutilizar después de una operación de desconexión.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.Dispose">
      <summary>Libera los recursos no administrados utilizados por la instancia de <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> y, de forma opcional, elimina los recursos administrados.</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.Finalize">
      <summary>Libera los recursos utilizados por la clase <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />.</summary>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.LastOperation">
      <summary>Obtiene el tipo de operación de socket más reciente realizada con este objeto de contexto.</summary>
      <returns>Instancia de <see cref="T:System.Net.Sockets.SocketAsyncOperation" /> que indica el tipo de operación de socket más reciente realizada con este objeto de contexto.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.MemoryBuffer" />
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.Offset">
      <summary>Obtiene el desplazamiento, en bytes, en el búfer de datos al que hace referencia la propiedad <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />.</summary>
      <returns>
        <see cref="T:System.Int32" /> que contiene el desplazamiento, en bytes, en el búfer de datos al que hace referencia la propiedad <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.OnCompleted(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Representa un método al que se llama cuando se completa una operación asincrónica.</summary>
      <param name="e">Evento que se señala.</param>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.ReceiveMessageFromPacketInfo">
      <summary>Obtiene la dirección IP e interfaz de un paquete recibido.</summary>
      <returns>Instancia de <see cref="T:System.Net.Sockets.IPPacketInformation" /> que contiene la dirección IP de destino y la interfaz de un paquete recibido.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint">
      <summary>Obtiene o establece el extremo IP remoto de una operación asincrónica.</summary>
      <returns>
        <see cref="T:System.Net.EndPoint" /> que representa el extremo IP remoto para una operación asincrónica.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements">
      <summary>Obtiene o establece una matriz de búferes que se va a enviar para una operación asincrónica utilizada por el método <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</summary>
      <returns>Matriz de objetos <see cref="T:System.Net.Sockets.SendPacketsElement" /> que representan una matriz de búferes que se va a enviar.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsFlags">
      <summary>Obtiene o establece una combinación bit a bit de valores <see cref="T:System.Net.Sockets.TransmitFileOptions" /> para una operación asincrónica utilizada por el método <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</summary>
      <returns>
        <see cref="T:System.Net.Sockets.TransmitFileOptions" /> que contiene una combinación bit a bit de valores que se usan con una operación asincrónica.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsSendSize">
      <summary>Obtiene o establece el tamaño, en bytes, del bloque de datos utilizado en la operación de envío.</summary>
      <returns>
        <see cref="T:System.Int32" /> que contiene el tamaño, en bytes, del bloque de datos utilizado en la operación de envío.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Byte[],System.Int32,System.Int32)">
      <summary>Establece el búfer de datos que se va a usar con un método de socket asincrónico.</summary>
      <param name="buffer">Búfer de datos que se va a usar con un método de socket asincrónico.</param>
      <param name="offset">Desplazamiento, en bytes, en el búfer de datos donde se inicia la operación.</param>
      <param name="count">Cantidad máxima de datos, en bytes, que se van a enviar o recibir en el búfer.</param>
      <exception cref="T:System.ArgumentException">Se especificaron búferes ambiguos. Esta excepción se produce si las propiedades <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> y <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> tampoco son null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Un argumento estaba fuera de intervalo. Esta excepción se produce si el parámetro <paramref name="offset" /> es menor que cero o mayor que la longitud de la matriz en la propiedad <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />. Esta excepción también se produce si el parámetro <paramref name="count" /> es menor que cero o mayor que la longitud de la matriz en la propiedad <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> menos el parámetro <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Int32,System.Int32)">
      <summary>Establece el búfer de datos que se va a usar con un método de socket asincrónico.</summary>
      <param name="offset">Desplazamiento, en bytes, en el búfer de datos donde se inicia la operación.</param>
      <param name="count">Cantidad máxima de datos, en bytes, que se van a enviar o recibir en el búfer.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Un argumento estaba fuera de intervalo. Esta excepción se produce si el parámetro <paramref name="offset" /> es menor que cero o mayor que la longitud de la matriz en la propiedad <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />. Esta excepción también se produce si el parámetro <paramref name="count" /> es menor que cero o mayor que la longitud de la matriz en la propiedad <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> menos el parámetro <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Memory{System.Byte})">
      <param name="buffer" />
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SocketError">
      <summary>Obtiene o establece el resultado de la operación de socket asincrónico.</summary>
      <returns>
        <see cref="T:System.Net.Sockets.SocketError" /> que representa el resultado de la operación de socket asincrónico.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SocketFlags">
      <summary>Obtiene los resultados de una operación de socket asincrónico o establece el comportamiento de una operación asincrónica.</summary>
      <returns>
        <see cref="T:System.Net.Sockets.SocketFlags" /> que representa los resultados de una operación de socket asincrónico.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.UserToken">
      <summary>Obtiene o establece a un objeto de usuario o de aplicación asociado a esta operación de socket asincrónico.</summary>
      <returns>Objeto que representa al objeto de usuario o de aplicación asociado a esta operación de socket asincrónico.</returns>
    </member>
    <member name="T:System.Net.Sockets.SocketAsyncOperation">
      <summary>El tipo de operación del socket asincrónica más reciente realizada con este objeto de contexto.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Accept">
      <summary>Un operación Accept del socket.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Connect">
      <summary>Una operación Connect del socket.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Disconnect">
      <summary>Una operación Disconnect del socket.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.None">
      <summary>Ninguna de las operaciones del socket.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Receive">
      <summary>Una operación Receive del socket.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.ReceiveFrom">
      <summary>Una operación ReceiveFrom del socket.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.ReceiveMessageFrom">
      <summary>Una operación ReceiveMessageFrom del socket.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Send">
      <summary>Una operación Send del socket.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.SendPackets">
      <summary>Una operación SendPackets del socket.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.SendTo">
      <summary>Operación SendTo del socket.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketFlags">
      <summary>Especifica el comportamiento de envío y recepción del socket.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.Broadcast">
      <summary>Indica un paquete de difusión.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.ControlDataTruncated">
      <summary>Indica que los datos del control no caben en un búfer interno de 64 KB y se truncó.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.DontRoute">
      <summary>Enviar sin utilizar tablas de enrutamiento.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.Multicast">
      <summary>Indica un paquete de multidifusión.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.None">
      <summary>No utilizar marcas para esta llamada.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.OutOfBand">
      <summary>Procesar datos fuera de banda.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.Partial">
      <summary>Envío o recepción parcial para el mensaje.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.Peek">
      <summary>Pico en el mensaje entrante.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.Truncated">
      <summary>El mensaje era demasiado grande para caber en el búfer especificado y se truncó.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketInformation">
      <summary>Encapsula la información que es necesaria para duplicar una <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="P:System.Net.Sockets.SocketInformation.Options">
      <summary>Obtiene o establece las opciones para una <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>Instancia de <see cref="T:System.Net.Sockets.SocketInformationOptions" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketInformation.ProtocolInformation">
      <summary>Obtiene o establece la información del protocolo para una <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>Matriz de tipo <see cref="T:System.Byte" />.</returns>
    </member>
    <member name="T:System.Net.Sockets.SocketInformationOptions">
      <summary>Describe los estados para <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketInformationOptions.Connected">
      <summary>La clase <see cref="T:System.Net.Sockets.Socket" /> está conectada.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketInformationOptions.Listening">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> escucha las nuevas conexiones.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketInformationOptions.NonBlocking">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> no se puede bloquear.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketInformationOptions.UseOnlyOverlappedIO">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> utiliza E/S superpuesta.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketOptionLevel">
      <summary>Define los niveles de las opciones de socket para los métodos <see cref="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)" /> y <see cref="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName)" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionLevel.IP">
      <summary>Las opciones de <see cref="T:System.Net.Sockets.Socket" /> sólo se aplican a los sockets IP.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionLevel.IPv6">
      <summary>Las opciones de <see cref="T:System.Net.Sockets.Socket" /> se aplican sólo a sockets de IPv6.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionLevel.Socket">
      <summary>Las opciones de <see cref="T:System.Net.Sockets.Socket" /> se aplican a todos los sockets.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionLevel.Tcp">
      <summary>Las opciones de <see cref="T:System.Net.Sockets.Socket" /> solo se aplican a los sockets TCP.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionLevel.Udp">
      <summary>Las opciones de <see cref="T:System.Net.Sockets.Socket" /> solo se aplican a los sockets UDP.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketOptionName">
      <summary>Define los nombres de las opciones de configuración.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.AcceptConnection">
      <summary>El socket se encuentra a la escucha.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.AddMembership">
      <summary>Agrega la pertenencia a un grupo IP.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.AddSourceMembership">
      <summary>Une un grupo de origen.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.BlockSource">
      <summary>Bloquea los datos de un origen.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Broadcast">
      <summary>Permite el envío de mensajes de difusión en el socket.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.BsdUrgent">
      <summary>Usa datos urgentes según la definición de RFC-1222. Esta opción solo se puede establecer una vez; una vez establecida, no se puede desactivar.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ChecksumCoverage">
      <summary>Obtiene o establece la activación de la suma de comprobación UDP.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Debug">
      <summary>Registra información de depuración.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.DontFragment">
      <summary>No fragmenta los datagramas IP.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.DontLinger">
      <summary>Cierra rápidamente el socket, sin demorarse.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.DontRoute">
      <summary>No realiza ningún tipo de enrutamiento; envía directamente el paquete a las direcciones de interfaz.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.DropMembership">
      <summary>Quita la pertenencia a un grupo IP.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.DropSourceMembership">
      <summary>Coloca un grupo de origen.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Error">
      <summary>Obtiene el estado de error y borra.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ExclusiveAddressUse">
      <summary>Permite enlazar un socket para obtener acceso exclusivo.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Expedited">
      <summary>Usa datos inmediatos según la definición de RFC-1222. Esta opción solo se puede establecer una vez; una vez establecida, no se puede desactivar.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.HeaderIncluded">
      <summary>Indica que la aplicación proporciona el encabezado IP para los datagramas de salida.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.HopLimit">
      <summary>Especifica el número máximo de saltos del enrutador para un paquete IPv6 (Protocolo de Internet versión 6). Esto último es similar al período de vida (TTL) del Protocolo de Internet versión 4.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.IPOptions">
      <summary>Especifica las opciones IP que se van a insertar en los datagramas de salida.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.IPProtectionLevel">
      <summary>Habilita la restricción de un socket IPv6 a un ámbito especificado, como direcciones con el mismo prefijo local de vínculo o sitio. Esta opción de socket permite a las aplicaciones colocar restricciones de acceso en sockets IPv6. Estas restricciones permiten que una aplicación que se ejecuta en una LAN privada se fortalezca de forma sencilla frente a ataques externos. Esta opción de socket amplía o reduce el ámbito de un socket de escucha, lo que permite el acceso no restringido de usuarios públicos y privados cuando sea adecuado o restringe el acceso únicamente al mismo sitio, según necesidad. Esta opción de socket definió niveles de protección especificados en la enumeración <see cref="T:System.Net.Sockets.IPProtectionLevel" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.IpTimeToLive">
      <summary>Establece el campo correspondiente al período de vida del encabezado IP.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.IPv6Only">
      <summary>Indica si un socket creado para la familia de direcciones AF_INET6 sólo está restringido a las comunicaciones IPv6. Los sockets creados para la familia de direcciones AF_INET6 se pueden usar para comunicaciones IPv6 e IPv4. Es posible que algunas aplicaciones deseen restringir su uso de un socket creado para la familia de direcciones AF_INET6 a comunicaciones IPv6 únicamente. Cuando este valor es distinto de cero (el valor predeterminado en Windows), un socket creado para la familia de direcciones AF_INET6 se puede usar para enviar y recibir paquetes IPv6 únicamente. Cuando este valor es cero, un socket creado para la familia de direcciones AF_INET6 se puede usar para enviar y recibir paquetes a y desde una dirección IPv6 o una dirección IPv4. Tenga en cuenta que la capacidad de interactuar con una dirección IPv4 exige el uso de direcciones asignadas IPv4. Esta opción de socket es compatible con Windows Vista o posterior.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.KeepAlive">
      <summary>Usa encabezados de mantenimiento de conexión.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Linger">
      <summary>Se demora el cierre si existen datos no enviados.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.MaxConnections">
      <summary>No se admite; en caso de que se use, se producirá una excepción <see cref="T:System.Net.Sockets.SocketException" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.MulticastInterface">
      <summary>Establece la interfaz para los paquetes de multidifusión salientes.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.MulticastLoopback">
      <summary>Retorno de bucle de multidifusión IP.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.MulticastTimeToLive">
      <summary>Período de vida de multidifusión IP.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.NoChecksum">
      <summary>Envía datagramas UDP con la suma de comprobación establecida en cero.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.NoDelay">
      <summary>Deshabilita el algoritmo de Nagle para la fusión de envíos.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.OutOfBandInline">
      <summary>Recibe los datos fuera de banda en el flujo normal de datos.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.PacketInformation">
      <summary>Devuelve información sobre los paquetes recibidos.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ReceiveBuffer">
      <summary>Especifica el espacio total de búfer por socket reservado para las recepciones. Este espacio no está relacionado con el tamaño máximo de los mensajes o el tamaño de una ventana TCP.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ReceiveLowWater">
      <summary>Especifica la marca de agua suave para las operaciones <see cref="Overload:System.Net.Sockets.Socket.Receive" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ReceiveTimeout">
      <summary>Recibe un tiempo de espera. Esta opción sólo se aplica a los métodos sincrónicos; no tiene ningún efecto sobre los métodos asincrónicos, como el método <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ReuseAddress">
      <summary>Permite enlazar el socket a una dirección que ya está en uso.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ReuseUnicastPort">
      <summary>Indica que el sistema debe aplazar la asignación de puertos efímeros para las conexiones salientes. Equivale a usar la opción de socket SO_REUSE_UNICASTPORT de Winsock2.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.SendBuffer">
      <summary>Especifica el espacio total de búfer por socket reservado para los envíos. Este espacio no está relacionado con el tamaño máximo de los mensajes o el tamaño de una ventana TCP.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.SendLowWater">
      <summary>Especifica la marca de agua suave para las operaciones <see cref="Overload:System.Net.Sockets.Socket.Send" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.SendTimeout">
      <summary>Envía un tiempo de espera. Esta opción sólo se aplica a los métodos sincrónicos; no tiene ningún efecto sobre los métodos asincrónicos, como el método <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.TcpKeepAliveInterval">
      <summary>El número de segundos que esperará una conexión TCP para obtener una respuesta persistente antes de enviar otro sondeo persistente.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.TcpKeepAliveRetryCount">
      <summary>Número de sondeos persistentes de TCP que se enviarán antes de que finalice la conexión.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.TcpKeepAliveTime">
      <summary>Número de segundos durante los que una conexión TCP permanecerá activa o inactiva antes de que se envíen sondeos persistentes al repositorio remoto.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Type">
      <summary>Obtiene el tipo de socket.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.TypeOfService">
      <summary>Cambia el tipo de encabezado IP del campo de servicios.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.UnblockSource">
      <summary>Desbloquea un origen anteriormente bloqueado.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.UpdateAcceptContext">
      <summary>Actualiza las propiedades de un socket aceptado usando las propiedades de un socket existente. Esto último equivale a usar la opción de socket SO_UPDATE_ACCEPT_CONTEXT de Winsock2 y sólo se admite en sockets orientados a conexiones.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.UpdateConnectContext">
      <summary>Actualiza las propiedades de un socket conectado usando las propiedades de un socket existente. Esto último equivale a usar la opción de socket SO_UPDATE_CONNECT_CONTEXT de Winsock2 y sólo se admite en sockets orientados a conexiones.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.UseLoopback">
      <summary>Omite el hardware siempre que sea posible.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketReceiveFromResult">
      <summary>Resultado de una operación de <see cref="M:System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketReceiveFromResult.ReceivedBytes">
      <summary>Número de bytes recibidos. Si la operación <see cref="M:System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)" /> no se ha realizado correctamente, es 0.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketReceiveFromResult.RemoteEndPoint">
      <summary>
        <see cref="T:System.Net.EndPoint" /> de origen.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketReceiveMessageFromResult">
      <summary>Resultado de una operación de <see cref="M:System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketReceiveMessageFromResult.PacketInformation">
      <summary>
        <see cref="T:System.Net.Sockets.IPPacketInformation" /> que contiene información de dirección e interfaz.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketReceiveMessageFromResult.ReceivedBytes">
      <summary>Número de bytes recibidos. Si la operación <see cref="M:System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)" /> no se realiza correctamente, este valor será 0.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketReceiveMessageFromResult.RemoteEndPoint">
      <summary>
        <see cref="T:System.Net.EndPoint" /> de origen.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketReceiveMessageFromResult.SocketFlags">
      <summary>Combinación bit a bit de los valores de <see cref="T:System.Net.Sockets.SocketFlags" /> para el paquete recibido.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketShutdown">
      <summary>Define las constantes utilizadas por el método <see cref="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketShutdown.Both">
      <summary>Deshabilita un objeto <see cref="T:System.Net.Sockets.Socket" /> tanto para el envío como para la recepción. Este campo es constante.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketShutdown.Receive">
      <summary>Deshabilita un objeto <see cref="T:System.Net.Sockets.Socket" /> para la recepción. Este campo es constante.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketShutdown.Send">
      <summary>Deshabilita un objeto <see cref="T:System.Net.Sockets.Socket" /> para el envío. Este campo es constante.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketTaskExtensions">
      <summary>Esta clase contiene métodos de extensión para la clase <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket)">
      <summary>Realiza una operación asincrónica para aceptar un intento de conexión entrante en el socket.</summary>
      <param name="socket">Socket que está realizando escuchas para conexiones.</param>
      <returns>Tarea asincrónica que finaliza con <see cref="T:System.Net.Sockets.Socket" /> para controlar la comunicación con el host remoto.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket,System.Net.Sockets.Socket)">
      <summary>Realiza una operación asincrónica para aceptar un intento de conexión entrante en el socket.</summary>
      <param name="socket">Socket que está realizando escuchas para conexiones entrantes.</param>
      <param name="acceptSocket">Objeto <see cref="T:System.Net.Sockets.Socket" /> aceptado. Este valor puede ser <see langword="null" />.</param>
      <returns>Tarea asincrónica que finaliza con <see cref="T:System.Net.Sockets.Socket" /> para controlar la comunicación con el host remoto.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.EndPoint)">
      <summary>Establece una conexión a un host remoto.</summary>
      <param name="socket">Socket que se usa para establecer una conexión.</param>
      <param name="remoteEP">Punto de conexión que representa el dispositivo remoto.</param>
      <returns>Tarea asincrónica.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress,System.Int32)">
      <summary>Establece una conexión a un host remoto. El host se especifica mediante una dirección IP y un número de puerto.</summary>
      <param name="socket">Socket en el que realizar la operación de conexión.</param>
      <param name="address">Dirección IP del host remoto.</param>
      <param name="port">Número de puerto del host remoto.</param>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress[],System.Int32)">
      <summary>Establece una conexión a un host remoto. El host se especifica mediante una matriz de direcciones IP y un número de puerto.</summary>
      <param name="socket">Socket en el que se realiza la operación de conexión.</param>
      <param name="addresses">Direcciones IP del host remoto.</param>
      <param name="port">Número de puerto del host remoto.</param>
      <returns>Tarea que representa la operación de conexión asincrónica.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.String,System.Int32)">
      <summary>Establece una conexión a un host remoto. El host se especifica mediante un nombre de host y un número de puerto.</summary>
      <param name="socket">Socket en el que realizar la operación de conexión.</param>
      <param name="host">Nombre del host remoto.</param>
      <param name="port">Número de puerto del host remoto.</param>
      <returns>Tarea asincrónica.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)">
      <summary>Recibe datos de un socket conectado.</summary>
      <param name="socket">Socket en el que realizar la operación de recepción.</param>
      <param name="buffer">Matriz que es la ubicación de almacenamiento para los datos recibidos.</param>
      <param name="socketFlags">Combinación bit a bit de los valores de <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <returns>Tarea que representa la operación de recepción asincrónica. El valor del parámetro <paramref name="TResult" /> contiene el número de bytes recibidos.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
      <summary>Recibe datos de un socket conectado.</summary>
      <param name="socket">Socket en el que realizar la operación de recepción.</param>
      <param name="buffers">Matriz que es la ubicación de almacenamiento para los datos recibidos.</param>
      <param name="socketFlags">Combinación bit a bit de los valores de <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <returns>Tarea que representa la operación de recepción asincrónica. El valor del parámetro <paramref name="TResult" /> contiene el número de bytes recibidos.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.Memory{System.Byte},System.Net.Sockets.SocketFlags,System.Threading.CancellationToken)">
      <param name="socket" />
      <param name="buffer" />
      <param name="socketFlags" />
      <param name="cancellationToken" />
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary>Recibe datos de un dispositivo de red especificado.</summary>
      <param name="socket">Socket en el que se realizará la operación ReceiveFrom.</param>
      <param name="buffer">Matriz de tipo Byte que es la ubicación de almacenamiento para los datos recibidos.</param>
      <param name="socketFlags">Combinación bit a bit de los valores de <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="remoteEndPoint">Punto de conexión que representa el origen de los datos.</param>
      <returns>Tarea asincrónica que se completa con una estructura SocketReceiveFromResult.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary>Recibe el número especificado de bytes de datos en la ubicación especificada del búfer de datos, mediante el elemento <see cref="T:System.Net.Sockets.SocketFlags" /> especificado y almacena el punto de conexión y la información del paquete.</summary>
      <param name="socket">Socket en el que realizar la operación.</param>
      <param name="buffer">Matriz que es la ubicación de almacenamiento para los datos recibidos.</param>
      <param name="socketFlags">Combinación bit a bit de los valores de <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="remoteEndPoint">
        <see cref="T:System.Net.EndPoint" /> que representa el servidor remoto.</param>
      <returns>Tarea asincrónica que se completa con una estructura <see cref="T:System.Net.Sockets.SocketReceiveMessageFromResult" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)">
      <summary>Envía datos a un socket conectado.</summary>
      <param name="socket">Socket en el que realizar la operación.</param>
      <param name="buffer">Matriz de tipo Byte que contiene los datos que se van a enviar.</param>
      <param name="socketFlags">Combinación bit a bit de los valores de <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <returns>Tarea asincrónica que se completa con el número de bytes enviados al socket si la operación se realizó correctamente. En caso contrario, la tarea se completará con un error de socket no válido.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
      <summary>Envía datos a un socket conectado.</summary>
      <param name="socket">Socket en el que realizar la operación.</param>
      <param name="buffers">Matriz que contiene los datos para enviar.</param>
      <param name="socketFlags">Combinación bit a bit de los valores de <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <returns>Tarea asincrónica que se completa con el número de bytes enviados al socket si la operación se realizó correctamente. En caso contrario, la tarea se completará con un error de socket no válido.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.ReadOnlyMemory{System.Byte},System.Net.Sockets.SocketFlags,System.Threading.CancellationToken)">
      <param name="socket" />
      <param name="buffer" />
      <param name="socketFlags" />
      <param name="cancellationToken" />
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.SendToAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary>Envía datos de forma asincrónica a un host remoto concreto.</summary>
      <param name="socket">Socket en el que realizar la operación.</param>
      <param name="buffer">Matriz que contiene los datos para enviar.</param>
      <param name="socketFlags">Combinación bit a bit de los valores de <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="remoteEP">
        <see cref="T:System.Net.EndPoint" /> que representa el dispositivo remoto.</param>
      <returns>Tarea asincrónica que se completa con el número de bytes enviados si la operación se realizó correctamente. En caso contrario, la tarea se completará con un error de socket no válido.</returns>
    </member>
    <member name="T:System.Net.Sockets.SocketType">
      <summary>Especifica el tipo de socket que representa una instancia de la clase <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Dgram">
      <summary>Admite datagramas, que son mensajes no confiables sin conexión con una longitud máxima fija (normalmente corta). Los mensajes pueden perderse o duplicarse y llegar desordenados. Un objeto <see cref="T:System.Net.Sockets.Socket" /> de tipo <see cref="F:System.Net.Sockets.SocketType.Dgram" /> no necesita conexión antes de enviar y recibir datos, y puede comunicarse con varios elementos del mismo nivel. <see cref="F:System.Net.Sockets.SocketType.Dgram" /> usa el Protocolo de datagramas (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Udp" />) y <see langword="AddressFamily" />.<see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> familia de direcciones.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Raw">
      <summary>Admite el acceso al protocolo de transporte subyacente. Al usar <see cref="F:System.Net.Sockets.SocketType.Raw" />, se puede comunicar mediante protocolos como el Protocolo de mensajes de control de Internet (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Icmp" />) y el Protocolo de administración de grupos de Internet (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Igmp" />). La aplicación debe proporcionar un encabezado IP completo al realizar envíos. Los datagramas recibidos se devuelven con el encabezado IP y las opciones intactas.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Rdm">
      <summary>Admite mensajes entregados con confianza orientados a mensajes sin conexión y conserva los límites de mensaje en los datos. Los mensajes entregados con confianza (Rdm) llegan sin duplicidad y ordenados. Más aún, el remitente recibe notificación en caso de producirse pérdida de mensajes. Si <see cref="T:System.Net.Sockets.Socket" /> se inicializa con <see cref="F:System.Net.Sockets.SocketType.Rdm" />, no será necesaria una conexión al host remoto antes de enviar y recibir datos. Con <see cref="F:System.Net.Sockets.SocketType.Rdm" /> se puede establecer comunicación con varios elementos del mismo nivel.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Seqpacket">
      <summary>Proporciona la transferencia bidireccional, confiable y basada en conexiones, de secuencias de bytes ordenadas a través de una red. <see cref="F:System.Net.Sockets.SocketType.Seqpacket" /> no duplica los datos y mantiene los límites dentro del flujo de datos. Las clases <see cref="T:System.Net.Sockets.Socket" /> de tipo <see cref="F:System.Net.Sockets.SocketType.Seqpacket" /> se comunican con un solo elemento del mismo nivel y requieren una conexión con el host remoto para poder iniciar la comunicación.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Stream">
      <summary>Admite secuencias de bytes bidireccionales confiables, basadas en conexión, sin duplicidad de datos ni conservación de límites. Un objeto <see cref="T:System.Net.Sockets.Socket" /> de este tipo se comunica con un solo elemento del mismo nivel y requiere una conexión con el host remoto para poder iniciar la comunicación. <see cref="F:System.Net.Sockets.SocketType.Stream" /> usa el Protocolo de control de transporte (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Tcp" />) y <see langword="AddressFamily" />.<see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> familia de direcciones.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Unknown">
      <summary>Especifica un tipo de <see cref="T:System.Net.Sockets.Socket" /> desconocido.</summary>
    </member>
    <member name="T:System.Net.Sockets.TcpClient">
      <summary>Proporciona conexiones de cliente para servicios de red TCP.</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Sockets.TcpClient" />.</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Sockets.TcpClient" /> y la enlaza con el extremo local especificado.</summary>
      <param name="localEP">
        <see cref="T:System.Net.IPEndPoint" /> a la que asociará la clase <see cref="T:System.Net.Sockets.Socket" /> TCP.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="localEP" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Sockets.TcpClient" /> con la familia especificada.</summary>
      <param name="family">Propiedad <see cref="P:System.Net.IPAddress.AddressFamily" /> del protocolo IP.</param>
      <exception cref="T:System.ArgumentException">El valor del parámetro <paramref name="family" /> no es igual a AddressFamily.InterNetwork. 
O bien 
El valor del parámetro <paramref name="family" /> no es igual a AddressFamily.InterNetworkV6.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Sockets.TcpClient" /> y se conecta a al puerto especificado, en el host especificado.</summary>
      <param name="hostname">Nombre DNS del host remoto con el que se desea establecer conexión.</param>
      <param name="port">Número de puerto del host remoto con el que se desea establecer conexión.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="hostname" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="port" /> no está entre <see cref="F:System.Net.IPEndPoint.MinPort" /> y <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Se produjo un error al acceder al socket.</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.Active">
      <summary>Obtiene o establece un valor que indica si se ha establecido una conexión.</summary>
      <returns>Es <see langword="true" /> si se ha realizado la conexión; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.Available">
      <summary>Obtiene la cantidad de datos que se han recibido de la red y están disponibles para leer.</summary>
      <returns>Número de bytes de datos recibidos de la red y disponibles para su lectura.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Inicia una solicitud asincrónica para una conexión a host remoto. El host remoto se especifica mediante un <see cref="T:System.Net.IPAddress" /> y un número de puerto (<see cref="T:System.Int32" />).</summary>
      <param name="address">
        <see cref="T:System.Net.IPAddress" /> del host remoto.</param>
      <param name="port">Número de puerto del host remoto.</param>
      <param name="requestCallback">Delegado de <see cref="T:System.AsyncCallback" /> que hace referencia al método que se invocará cuando la operación se complete.</param>
      <param name="state">Objeto definido por el usuario que contiene información sobre la operación de conexión. Este objeto se pasa al delegado de <paramref name="requestCallback" /> cuando la operación se completa.</param>
      <returns>Objeto <see cref="T:System.IAsyncResult" /> que hace referencia a la conexión asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.Security.SecurityException">Un llamador de la pila de llamadas no tiene permiso para la operación solicitada.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El número de puerto no es válido.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
      <summary>Inicia una solicitud asincrónica para una conexión a host remoto. El host remoto se especifica mediante una matriz <see cref="T:System.Net.IPAddress" /> y un número de puerto (<see cref="T:System.Int32" />).</summary>
      <param name="addresses">Como mínimo un <see cref="T:System.Net.IPAddress" /> que designa los host remotos.</param>
      <param name="port">Número de puerto de los host remotos.</param>
      <param name="requestCallback">Delegado de <see cref="T:System.AsyncCallback" /> que hace referencia al método que se invocará cuando la operación se complete.</param>
      <param name="state">Objeto definido por el usuario que contiene información sobre la operación de conexión. Este objeto se pasa al delegado de <paramref name="requestCallback" /> cuando la operación se completa.</param>
      <returns>Objeto <see cref="T:System.IAsyncResult" /> que hace referencia a la conexión asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="addresses" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.Security.SecurityException">Un llamador de la pila de llamadas no tiene permiso para la operación solicitada.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El número de puerto no es válido.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Inicia una solicitud asincrónica para una conexión a host remoto. El host remoto se especifica mediante un nombre de host (<see cref="T:System.String" />) y un número de puerto (<see cref="T:System.Int32" />).</summary>
      <param name="host">Nombre del host remoto.</param>
      <param name="port">Número de puerto del host remoto.</param>
      <param name="requestCallback">Delegado de <see cref="T:System.AsyncCallback" /> que hace referencia al método que se invocará cuando la operación se complete.</param>
      <param name="state">Objeto definido por el usuario que contiene información sobre la operación de conexión. Este objeto se pasa al delegado de <paramref name="requestCallback" /> cuando la operación se completa.</param>
      <returns>Objeto <see cref="T:System.IAsyncResult" /> que hace referencia a la conexión asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="host" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.Security.SecurityException">Un llamador de la pila de llamadas no tiene permiso para la operación solicitada.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El número de puerto no es válido.</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.Client">
      <summary>Obtiene o establece el objeto <see cref="T:System.Net.Sockets.Socket" /> subyacente.</summary>
      <returns>
        <see cref="T:System.Net.Sockets.Socket" /> de red subyacente.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Close">
      <summary>Elimina esta instancia <see cref="T:System.Net.Sockets.TcpClient" /> y solicita que se cierre la conexión TCP subyacente.</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
      <summary>Conecta el cliente a un host TCP remoto con la dirección IP y el número de puerto especificados.</summary>
      <param name="address">
        <see cref="T:System.Net.IPAddress" /> del host con el que desea conectar.</param>
      <param name="port">Número de puerto al que se desea conectar.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> no se encuentra en el intervalo definido por <see cref="F:System.Net.IPEndPoint.MinPort" /> y <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Se produjo un error al acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.TcpClient" /> está cerrado.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
      <summary>Conecta el cliente a un host TCP remoto con las direcciones IP y el número de puerto que se hayan especificado.</summary>
      <param name="ipAddresses">Matriz <see cref="T:System.Net.IPAddress" /> del host con el que desea conectar.</param>
      <param name="port">Número de puerto al que se desea conectar.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="ipAddresses" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El número de puerto no es válido.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.Security.SecurityException">Un llamador de la pila de llamadas no tiene permiso para la operación solicitada.</exception>
      <exception cref="T:System.NotSupportedException">Este método es válido para sockets que utilizan el marcador <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> o el marcador <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
      <summary>Conecta el cliente a un host TCP remoto con el extremo de red remoto especificado.</summary>
      <param name="remoteEP">
        <see cref="T:System.Net.IPEndPoint" /> con el que desea conectar.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="remoteEp" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Se produjo un error al acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">La clase <see cref="T:System.Net.Sockets.TcpClient" /> está cerrada.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
      <summary>Conecta el cliente al puerto especificado en el host especificado.</summary>
      <param name="hostname">Nombre DNS del host remoto con el que se desea establecer conexión.</param>
      <param name="port">Número de puerto del host remoto con el que se desea establecer conexión.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="hostname" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="port" /> no está entre <see cref="F:System.Net.IPEndPoint.MinPort" /> y <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Se produjo un error al acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.TcpClient" /> está cerrado.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
      <summary>Conecta el cliente a un host TCP remoto con la dirección IP y el número de puerto especificados como una operación asincrónica.</summary>
      <param name="address">
        <see cref="T:System.Net.IPAddress" /> del host con el que desea conectar.</param>
      <param name="port">Número de puerto al que se desea conectar.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="address" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> no se encuentra en el intervalo definido por <see cref="F:System.Net.IPEndPoint.MinPort" /> y <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Se produjo un error al acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.TcpClient" /> está cerrado.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
      <summary>Conecta el cliente a un host TCP remoto con las direcciones IP y el número de puerto especificados como una operación asincrónica.</summary>
      <param name="addresses">Matriz <see cref="T:System.Net.IPAddress" /> del host con el que desea conectar.</param>
      <param name="port">Número de puerto al que se desea conectar.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="ipAddresses" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El número de puerto no es válido.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
      <exception cref="T:System.Security.SecurityException">Un llamador de la pila de llamadas no tiene permiso para la operación solicitada.</exception>
      <exception cref="T:System.NotSupportedException">Este método es válido para sockets que utilizan el marcador <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> o el marcador <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
      <summary>Conecta al cliente con el puerto TCP especificado en el host especificado como una operación asincrónica.</summary>
      <param name="host">Nombre DNS del host remoto con el que se desea establecer conexión.</param>
      <param name="port">Número de puerto del host remoto con el que se desea establecer conexión.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="hostname" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="port" /> no está entre <see cref="F:System.Net.IPEndPoint.MinPort" /> y <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Se produjo un error al acceder al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.TcpClient" /> está cerrado.</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.Connected">
      <summary>Obtiene un valor que indica si el objeto <see cref="T:System.Net.Sockets.Socket" /> subyacente de un objeto <see cref="T:System.Net.Sockets.TcpClient" /> está conectado a un host remoto.</summary>
      <returns>Es <see langword="true" /> si el socket de <see cref="P:System.Net.Sockets.TcpClient.Client" /> estaba conectado a un recurso remoto desde la operación más reciente; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Dispose">
      <summary>Libera los recursos administrados y no administrados que utiliza el objeto <see cref="T:System.Net.Sockets.TcpClient" />.</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
      <summary>Libera los recursos no administrados que usa <see cref="T:System.Net.Sockets.TcpClient" /> y, de forma opcional, libera los recursos administrados.</summary>
      <param name="disposing">Se establece en <see langword="true" /> para liberar tanto los recursos administrados como los no administrados; se establece en <see langword="false" /> para liberar únicamente los recursos no administrados.</param>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
      <summary>Finaliza un intento de conexión asincrónica pendiente.</summary>
      <param name="asyncResult">Objeto <see cref="T:System.IAsyncResult" /> devuelto por una llamada a <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" />.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="asyncResult" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="asyncResult" /> no se devolvió mediante una llamada a un método <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" />.</exception>
      <exception cref="T:System.InvalidOperationException">Se ha llamado previamente al método <see cref="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" /> para la conexión asincrónica.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Error al intentar obtener acceso a <see cref="T:System.Net.Sockets.Socket" />.</exception>
      <exception cref="T:System.ObjectDisposedException">El objeto <see cref="T:System.Net.Sockets.Socket" /> subyacente se ha cerrado.</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
      <summary>Obtiene o establece un valor <see cref="T:System.Boolean" /> que especifica si el objeto <see cref="T:System.Net.Sockets.TcpClient" /> permite a un único cliente utilizar un puerto.</summary>
      <returns>Es <see langword="true" /> si el objeto <see cref="T:System.Net.Sockets.TcpClient" /> permite a un único cliente utilizar un puerto específico; en caso contrario, es <see langword="false" />. El valor predeterminado es <see langword="true" /> para Windows Server 2003 y el Service Pack 2 y posteriores de Windows XP, y <see langword="false" /> para el resto de versiones.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Se ha producido un error al intentar obtener acceso al socket subyacente.</exception>
      <exception cref="T:System.ObjectDisposedException">El objeto <see cref="T:System.Net.Sockets.Socket" /> subyacente se ha cerrado.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Finalize">
      <summary>Libera los recursos utilizados por la clase <see cref="T:System.Net.Sockets.TcpClient" />.</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.GetStream">
      <summary>Devuelve la <see cref="T:System.Net.Sockets.NetworkStream" /> usada para enviar y recibir datos.</summary>
      <returns>Objeto <see cref="T:System.Net.Sockets.NetworkStream" /> subyacente.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.TcpClient" /> no está conectada a un host remoto.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.TcpClient" /> se ha cerrado.</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.LingerState">
      <summary>Obtiene o establece información sobre el estado de permanencia del socket asociado.</summary>
      <returns>Objeto <see cref="T:System.Net.Sockets.LingerOption" />. La permanencia está deshabilitada de manera predeterminada.</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.NoDelay">
      <summary>Obtiene o establece un valor que deshabilita cualquier retraso cuando los búferes de envío o recepción no están llenos.</summary>
      <returns>
        <see langword="true" />Si el retraso está deshabilitado; en caso <see langword="false" />contrario,. El valor predeterminado es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
      <summary>Obtiene o establece el tamaño del búfer de recepción.</summary>
      <returns>Tamaño del búfer de recepción, en bytes. El valor predeterminado es 8192 bytes.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Se ha producido un error al establecer el tamaño del búfer.  
 O bien  
 En las aplicaciones .NET Compact Framework, no se puede establecer esta propiedad. Para obtener una solución alternativa, vea la Nota de la plataforma que se describe en Comentarios.</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.ReceiveTimeout">
      <summary>Obtiene o establece el período de tiempo durante el cual un <see cref="T:System.Net.Sockets.TcpClient" /> esperará para recibir datos tras iniciarse una operación de lectura.</summary>
      <returns>Valor de tiempo de espera de la conexión, en milisegundos. El valor predeterminado es 0.</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.SendBufferSize">
      <summary>Obtiene o establece el tamaño del búfer de envío.</summary>
      <returns>Tamaño del búfer de envío, en bytes. El valor predeterminado es 8192 bytes.</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.SendTimeout">
      <summary>Obtiene o establece el período de tiempo durante el cual un <see cref="T:System.Net.Sockets.TcpClient" /> esperará para que finalice correctamente una operación de envío.</summary>
      <returns>Valor de tiempo de espera de envío, en milisegundos. El valor predeterminado es 0.</returns>
    </member>
    <member name="T:System.Net.Sockets.TcpListener">
      <summary>Realiza escuchas para conexiones de clientes de red TCP.</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.#ctor(System.Int32)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Sockets.TcpListener" /> que escucha en el puerto especificado.</summary>
      <param name="port">Puerto en el cual se escucharán los intentos de conexión entrantes.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> no se encuentra en el intervalo definido por <see cref="F:System.Net.IPEndPoint.MinPort" /> y <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPAddress,System.Int32)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Sockets.TcpListener" /> que escucha los intentos de conexión entrantes en la dirección IP local y el número de puerto especificados.</summary>
      <param name="localaddr">
        <see cref="T:System.Net.IPAddress" /> que representa la dirección IP local.</param>
      <param name="port">Puerto en el cual se escucharán los intentos de conexión entrantes.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localaddr" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> no se encuentra en el intervalo definido por <see cref="F:System.Net.IPEndPoint.MinPort" /> y <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPEndPoint)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Sockets.TcpListener" /> con el extremo local especificado.</summary>
      <param name="localEP">
        <see cref="T:System.Net.IPEndPoint" /> que representa el extremo local con el que desea enlazar el <see cref="T:System.Net.Sockets.Socket" /> del agente de escucha.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localEP" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.AcceptSocket">
      <summary>Acepta una solicitud de conexión pendiente.</summary>
      <returns>
        <see cref="T:System.Net.Sockets.Socket" /> que se utiliza para enviar y recibir datos.</returns>
      <exception cref="T:System.InvalidOperationException">El agente de escucha no se ha iniciado con una llamada a <see cref="M:System.Net.Sockets.TcpListener.Start" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.AcceptSocketAsync">
      <summary>Acepta una solicitud de conexión pendiente como una operación asincrónica.</summary>
      <returns>Objeto de tarea que representa la operación asincrónica. La propiedad <see cref="P:System.Threading.Tasks.Task`1.Result" /> en el objeto de tarea devuelve <see cref="T:System.Net.Sockets.Socket" /> utilizado para enviar y recibir datos.</returns>
      <exception cref="T:System.InvalidOperationException">El agente de escucha no se ha iniciado con una llamada a <see cref="M:System.Net.Sockets.TcpListener.Start" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.AcceptTcpClient">
      <summary>Acepta una solicitud de conexión pendiente.</summary>
      <returns>
        <see cref="T:System.Net.Sockets.TcpClient" /> que se utiliza para enviar y recibir datos.</returns>
      <exception cref="T:System.InvalidOperationException">El agente de escucha no se ha iniciado con una llamada a <see cref="M:System.Net.Sockets.TcpListener.Start" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Utilice la propiedad <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> para obtener el código de error específico. Cuando obtenga este código, puede ver la documentación de códigos de error de la API de Windows Sockets, versión 2, para ver una descripción detallada del error.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.AcceptTcpClientAsync">
      <summary>Acepta una solicitud de conexión pendiente como una operación asincrónica.</summary>
      <returns>Objeto de tarea que representa la operación asincrónica. La propiedad <see cref="P:System.Threading.Tasks.Task`1.Result" /> en el objeto de tarea devuelve <see cref="T:System.Net.Sockets.TcpClient" /> utilizado para enviar y recibir datos.</returns>
      <exception cref="T:System.InvalidOperationException">El agente de escucha no se ha iniciado con una llamada a <see cref="M:System.Net.Sockets.TcpListener.Start" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Utilice la propiedad <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> para obtener el código de error específico. Cuando obtenga este código, puede ver la documentación de códigos de error de la API de Windows Sockets, versión 2, para ver una descripción detallada del error.</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpListener.Active">
      <summary>Obtiene un valor que indica si <see cref="T:System.Net.Sockets.TcpListener" /> escucha activamente las conexiones de clientes.</summary>
      <returns>Es <see langword="true" /> si <see cref="T:System.Net.Sockets.TcpListener" /> escucha activamente; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)">
      <summary>Habilita o deshabilita NAT (Traducción de direcciones de red) transversal en una instancia de <see cref="T:System.Net.Sockets.TcpListener" />.</summary>
      <param name="allowed">Valor booleano que especifica si se va a habilitar o deshabilitar NAT transversal.</param>
      <exception cref="T:System.InvalidOperationException">Se llama al método <see cref="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)" /> después de llamar al método <see cref="M:System.Net.Sockets.TcpListener.Start" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)">
      <summary>Comienza una operación asincrónica para aceptar un intento de conexión entrante.</summary>
      <param name="callback">Delegado de <see cref="T:System.AsyncCallback" /> que hace referencia al método que se invocará cuando la operación se complete.</param>
      <param name="state">Objeto definido por el usuario que contiene información sobre la operación de aceptación. Este objeto se pasa al delegado de <paramref name="callback" /> cuando la operación se completa.</param>
      <returns>Interfaz <see cref="T:System.IAsyncResult" /> que hace referencia a la creación asincrónica del objeto <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Se ha producido un error al intentar obtener acceso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)">
      <summary>Comienza una operación asincrónica para aceptar un intento de conexión entrante.</summary>
      <param name="callback">Delegado de <see cref="T:System.AsyncCallback" /> que hace referencia al método que se invocará cuando la operación se complete.</param>
      <param name="state">Objeto definido por el usuario que contiene información sobre la operación de aceptación. Este objeto se pasa al delegado de <paramref name="callback" /> cuando la operación se completa.</param>
      <returns>Interfaz <see cref="T:System.IAsyncResult" /> que hace referencia a la creación asincrónica del objeto <see cref="T:System.Net.Sockets.TcpClient" />.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Se ha producido un error al intentar obtener acceso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.Create(System.Int32)">
      <summary>Crea una nueva instancia de <see cref="T:System.Net.Sockets.TcpListener" /> para realizar escuchas en el puerto especificado.</summary>
      <param name="port">Puerto en el cual se escucharán los intentos de conexión entrantes.</param>
      <returns>Una nueva instancia de <see cref="T:System.Net.Sockets.TcpListener" /> para realizar escuchas en el puerto especificado.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)">
      <summary>Acepta asincrónicamente un intento de conexión entrante y crea un nuevo objeto <see cref="T:System.Net.Sockets.Socket" /> para controlar la comunicación con el host remoto.</summary>
      <param name="asyncResult">Interfaz <see cref="T:System.IAsyncResult" /> que se devuelve al llamar al método <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" />.</param>
      <returns>Objeto <see cref="T:System.Net.Sockets.Socket" />.  
Objeto <see cref="T:System.Net.Sockets.Socket" /> que se utiliza para enviar y recibir datos.</returns>
      <exception cref="T:System.ObjectDisposedException">El objeto <see cref="T:System.Net.Sockets.Socket" /> subyacente se ha cerrado.</exception>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="asyncResult" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="asyncResult" /> no se creó mediante una llamada al método <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">El método <see cref="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)" /> se definió previamente.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Se ha producido un error al intentar obtener acceso al <see cref="T:System.Net.Sockets.Socket" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.EndAcceptTcpClient(System.IAsyncResult)">
      <summary>Acepta asincrónicamente un intento de conexión entrante y crea un nuevo objeto <see cref="T:System.Net.Sockets.TcpClient" /> para controlar la comunicación con el host remoto.</summary>
      <param name="asyncResult">Interfaz <see cref="T:System.IAsyncResult" /> que se devuelve al llamar al método <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)" />.</param>
      <returns>Objeto <see cref="T:System.Net.Sockets.TcpClient" />.  
Objeto <see cref="T:System.Net.Sockets.TcpClient" /> que se utiliza para enviar y recibir datos.</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpListener.ExclusiveAddressUse">
      <summary>Obtiene o establece un valor <see cref="T:System.Boolean" /> que especifica si <see cref="T:System.Net.Sockets.TcpListener" /> permite a sólo un socket subyacente escuchar en un puerto concreto.</summary>
      <returns>Es <see langword="true" /> si <see cref="T:System.Net.Sockets.TcpListener" /> sólo permite a un objeto <see cref="T:System.Net.Sockets.TcpListener" /> escuchar en un puerto concreto; de lo contrario, es <see langword="false" />. . El valor predeterminado es <see langword="true" /> para Windows Server 2003 y el Service Pack 2 y posteriores de Windows XP, y <see langword="false" /> para el resto de versiones.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.TcpListener" /> se ha iniciado. Llame al método <see cref="M:System.Net.Sockets.TcpListener.Stop" /> y, a continuación, establezca la propiedad <see cref="P:System.Net.Sockets.Socket.ExclusiveAddressUse" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Se ha producido un error al intentar obtener acceso al socket subyacente.</exception>
      <exception cref="T:System.ObjectDisposedException">El objeto <see cref="T:System.Net.Sockets.Socket" /> subyacente se ha cerrado.</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpListener.LocalEndpoint">
      <summary>Obtiene el objeto <see cref="T:System.Net.EndPoint" /> subyacente del objeto <see cref="T:System.Net.Sockets.TcpListener" /> actual.</summary>
      <returns>Objeto <see cref="T:System.Net.EndPoint" /> al que está enlazado el <see cref="T:System.Net.Sockets.Socket" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.Pending">
      <summary>Determina si existen solicitudes de conexión pendientes.</summary>
      <returns>Es <see langword="true" /> si hay conexiones pendientes; en caso contrario, es <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">El agente de escucha no se ha iniciado con una llamada a <see cref="M:System.Net.Sockets.TcpListener.Start" />.</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpListener.Server">
      <summary>Obtiene el objeto de red <see cref="T:System.Net.Sockets.Socket" /> subyacente.</summary>
      <returns>Objeto <see cref="T:System.Net.Sockets.Socket" /> subyacente.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.Start">
      <summary>Comienza la escucha de solicitudes de conexión entrantes.</summary>
      <exception cref="T:System.Net.Sockets.SocketException">Utilice la propiedad <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> para obtener el código de error específico. Cuando obtenga este código, puede ver la documentación de códigos de error de la API de Windows Sockets, versión 2, para ver una descripción detallada del error.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.Start(System.Int32)">
      <summary>Comienza la escucha de solicitudes de conexión entrantes en un número máximo de conexión pendiente.</summary>
      <param name="backlog">Longitud máxima de la cola de conexiones pendientes.</param>
      <exception cref="T:System.Net.Sockets.SocketException">Se ha producido un error al obtener acceso al socket.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="backlog" /> es menor que cero o supera el número máximo de conexiones permitidas.</exception>
      <exception cref="T:System.InvalidOperationException">El <see cref="T:System.Net.Sockets.Socket" /> es nulo.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.Stop">
      <summary>Cierra el agente de escucha.</summary>
      <exception cref="T:System.Net.Sockets.SocketException">Utilice la propiedad <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> para obtener el código de error específico. Cuando obtenga este código, puede ver la documentación de códigos de error de la API de Windows Sockets, versión 2, para ver una descripción detallada del error.</exception>
    </member>
    <member name="T:System.Net.Sockets.TransmitFileOptions">
      <summary>La enumeración <see cref="T:System.Net.Sockets.TransmitFileOptions" /> define valores utilizados en solicitudes de transferencia de archivos.</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.Disconnect">
      <summary>Inicia una desconexión de nivel de transporte después de que todos los datos de archivos se han colocado en la cola para la transmisión. Cuando se utiliza con <see cref="F:System.Net.Sockets.TransmitFileOptions.ReuseSocket" />, estos marcadores devuelven el socket a un estado desconectado y reutilizable después de que se ha transmitido el archivo.</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.ReuseSocket">
      <summary>Se puede reutilizar el identificador del socket cuando la solicitud finaliza. Este marcador sólo es válido si también se especifica <see cref="F:System.Net.Sockets.TransmitFileOptions.Disconnect" />. Cuando se utiliza con <see cref="F:System.Net.Sockets.TransmitFileOptions.Disconnect" />, estos marcadores devuelven el socket a un estado desconectado y reutilizable después de que se ha transmitido el archivo.</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread">
      <summary>Utilice el subproceso predeterminado para procesar las solicitudes de transferencia de archivos largas.</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.UseKernelApc">
      <summary>Utilice llamadas a procedimientos asincrónicos (APC) del kernel, en lugar de subprocesos de trabajo, para procesar las solicitudes largas de transferencia de archivos. Las solicitudes largas se definen como solicitudes que requieren más de una lectura del archivo o de una caché; la solicitud depende, por tanto, del tamaño del archivo y de la longitud especificada del paquete de envío.</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.UseSystemThread">
      <summary>Utilice el subproceso del sistema para procesar las solicitudes largas de transferencia de archivos.</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.WriteBehind">
      <summary>Finaliza la solicitud de la transferencia de archivos de forma inmediata y completa. Si se especifica este marcador y la transferencia de archivos se realiza, el sistema ha aceptado los datos pero no han sido necesariamente confirmados por el fin remoto. No utilice este marcador con marcadores <see cref="F:System.Net.Sockets.TransmitFileOptions.Disconnect" /> y <see cref="F:System.Net.Sockets.TransmitFileOptions.ReuseSocket" />.</summary>
    </member>
    <member name="T:System.Net.Sockets.UdpClient">
      <summary>Proporciona servicios de red de Protocolo de datagramas de usuarios (UDP).</summary>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Sockets.UdpClient" />.</summary>
      <exception cref="T:System.Net.Sockets.SocketException">Se produjo un error al acceder al socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Sockets.UdpClient" /> y la enlaza con el número de puerto local especificado.</summary>
      <param name="port">Número de puerto local desde el que se desea establecer comunicación.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="port" /> es mayor que <see cref="F:System.Net.IPEndPoint.MaxPort" /> o menor que <see cref="F:System.Net.IPEndPoint.MinPort" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Se produjo un error al acceder al socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Sockets.UdpClient" /> y la enlaza con el número de puerto local especificado.</summary>
      <param name="port">Puerto en el cual se escucharán los intentos de conexión entrantes.</param>
      <param name="family">Uno de los valores <see cref="T:System.Net.Sockets.AddressFamily" /> que especifica el esquema de direccionamiento del socket.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="family" /> no es <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> ni <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> es mayor que <see cref="F:System.Net.IPEndPoint.MaxPort" /> o menor que <see cref="F:System.Net.IPEndPoint.MinPort" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Se produjo un error al acceder al socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Sockets.UdpClient" /> y la enlaza con el extremo local especificado.</summary>
      <param name="localEP">
        <see cref="T:System.Net.IPEndPoint" /> que representa el punto de conexión local al que se enlaza la conexión UDP.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localEP" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Se produjo un error al acceder al socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Sockets.UdpClient" />.</summary>
      <param name="family">Uno de los valores <see cref="T:System.Net.Sockets.AddressFamily" /> que especifica el esquema de direccionamiento del socket.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="family" /> no es <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> ni <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Se produjo un error al acceder al socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Sockets.UdpClient" /> y establece un host remoto predeterminado.</summary>
      <param name="hostname">Nombre del host DNS (Sistema de nombres de dominio) remoto al que se desea conectar.</param>
      <param name="port">Número de puerto remoto al que se desea conectar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hostname" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> no se encuentra en el intervalo definido por <see cref="F:System.Net.IPEndPoint.MinPort" /> y <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Se produjo un error al acceder al socket.</exception>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.Active">
      <summary>Obtiene o establece un valor que indica si se ha establecido un host remoto predeterminado.</summary>
      <returns>Es <see langword="true" /> si hay una conexión activa; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)">
      <summary>Habilita o deshabilita NAT (Traducción de direcciones de red) transversal en una instancia de <see cref="T:System.Net.Sockets.UdpClient" />.</summary>
      <param name="allowed">Valor booleano que especifica si se va a habilitar o deshabilitar NAT transversal.</param>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.Available">
      <summary>Obtiene la cantidad de datos recibidos de la red que se pueden leer.</summary>
      <returns>El número de bytes de datos recibido de la red.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Se ha producido un error al intentar obtener acceso al socket.</exception>
      <exception cref="T:System.ObjectDisposedException">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
      <summary>Recibe un datagrama de un host remoto de forma asincrónica.</summary>
      <param name="requestCallback">Delegado de <see cref="T:System.AsyncCallback" /> que hace referencia al método que se invocará cuando la operación se complete.</param>
      <param name="state">Objeto definido por el usuario que contiene información sobre la operación de recepción. Este objeto se pasa al delegado de <paramref name="requestCallback" /> cuando la operación se completa.</param>
      <returns>Objeto <see cref="T:System.IAsyncResult" /> que hace referencia a la recepción asincrónica.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
      <summary>Envía un datagrama a un host remoto de forma asincrónica. El destino se especificó anteriormente mediante una llamada a <see cref="Overload:System.Net.Sockets.UdpClient.Connect" />.</summary>
      <param name="datagram">Matriz <see cref="T:System.Byte" /> que contiene los datos que se desea enviar.</param>
      <param name="bytes">Número de bytes para enviar.</param>
      <param name="requestCallback">Delegado de <see cref="T:System.AsyncCallback" /> que hace referencia al método que se invocará cuando la operación se complete.</param>
      <param name="state">Objeto definido por el usuario que contiene información sobre la operación. Este objeto se pasa al delegado de <paramref name="requestCallback" /> cuando la operación se completa.</param>
      <returns>Objeto <see cref="T:System.IAsyncResult" /> que hace referencia al envío asincrónico.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
      <summary>Envía un datagrama a un destino de forma asincrónica. <see cref="T:System.Net.EndPoint" /> especifica el destino.</summary>
      <param name="datagram">Matriz <see cref="T:System.Byte" /> que contiene los datos que se desea enviar.</param>
      <param name="bytes">Número de bytes para enviar.</param>
      <param name="endPoint">
        <see cref="T:System.Net.EndPoint" /> que representa el destino de los datos.</param>
      <param name="requestCallback">Delegado de <see cref="T:System.AsyncCallback" /> que hace referencia al método que se invocará cuando la operación se complete.</param>
      <param name="state">Objeto definido por el usuario que contiene información sobre la operación. Este objeto se pasa al delegado de <paramref name="requestCallback" /> cuando la operación se completa.</param>
      <returns>Objeto <see cref="T:System.IAsyncResult" /> que hace referencia al envío asincrónico.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Envía un datagrama a un destino de forma asincrónica. El nombre de host y el número de puerto especifican el destino.</summary>
      <param name="datagram">Matriz <see cref="T:System.Byte" /> que contiene los datos que se desea enviar.</param>
      <param name="bytes">Número de bytes para enviar.</param>
      <param name="hostname">Host de destino.</param>
      <param name="port">Número de puerto de destino.</param>
      <param name="requestCallback">Delegado de <see cref="T:System.AsyncCallback" /> que hace referencia al método que se invocará cuando la operación se complete.</param>
      <param name="state">Objeto definido por el usuario que contiene información sobre la operación. Este objeto se pasa al delegado de <paramref name="requestCallback" /> cuando la operación se completa.</param>
      <returns>Objeto <see cref="T:System.IAsyncResult" /> que hace referencia al envío asincrónico.</returns>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.Client">
      <summary>Obtiene o establece el <see cref="T:System.Net.Sockets.Socket" /> de red subyacente.</summary>
      <returns>
        <see cref="T:System.Net.Sockets.Socket" /> de red subyacente.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Close">
      <summary>Cierra la conexión UDP.</summary>
      <exception cref="T:System.Net.Sockets.SocketException">Se produjo un error al acceder al socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
      <summary>Establece un host remoto predeterminado mediante la dirección IP y el número de puerto especificados.</summary>
      <param name="addr">
        <see cref="T:System.Net.IPAddress" /> del host remoto al que desea enviar datos.</param>
      <param name="port">Número de puerto al que desea enviar datos.</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpClient" /> está cerrado.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="addr" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> no se encuentra en el intervalo definido por <see cref="F:System.Net.IPEndPoint.MinPort" /> y <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Se produjo un error al acceder al socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
      <summary>Establece un host remoto predeterminado mediante el extremo de red especificado.</summary>
      <param name="endPoint">
        <see cref="T:System.Net.IPEndPoint" /> que especifica el extremo de red al que desea enviar datos.</param>
      <exception cref="T:System.Net.Sockets.SocketException">Se produjo un error al acceder al socket.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="endPoint" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">La clase <see cref="T:System.Net.Sockets.UdpClient" /> está cerrada.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
      <summary>Establece un host remoto predeterminado mediante el nombre de host y el número de puerto especificados.</summary>
      <param name="hostname">Nombre DNS del host remoto al que desea enviar datos.</param>
      <param name="port">Número de puerto del host remoto al que desea enviar datos.</param>
      <exception cref="T:System.ObjectDisposedException">La clase <see cref="T:System.Net.Sockets.UdpClient" /> está cerrada.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> no se encuentra en el intervalo definido por <see cref="F:System.Net.IPEndPoint.MinPort" /> y <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Se produjo un error al acceder al socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Dispose">
      <summary>Libera los recursos administrados y no administrados que utiliza el objeto <see cref="T:System.Net.Sockets.UdpClient" />.</summary>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)">
      <summary>Libera los recursos no administrados que usa <see cref="T:System.Net.Sockets.UdpClient" /> y, de forma opcional, libera los recursos administrados.</summary>
      <param name="disposing">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</param>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.DontFragment">
      <summary>Obtiene o establece un valor de <see cref="T:System.Boolean" /> que especifica si <see cref="T:System.Net.Sockets.UdpClient" /> permite fragmentar los datagramas de protocolo Internet (IP).</summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.Net.Sockets.UdpClient" /> permite la fragmentación de datagramas; de lo contrario, <see langword="false" />. De manera predeterminada, es <see langword="true" />.</returns>
      <exception cref="T:System.NotSupportedException">Esta propiedad sólo se puede establecer para sockets que utilicen el marcador <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> o <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
      <summary>Abandona un grupo de multidifusión.</summary>
      <param name="multicastAddr">
        <see cref="T:System.Net.IPAddress" /> del grupo de multidifusión que se va a abandonar.</param>
      <exception cref="T:System.ObjectDisposedException">El objeto <see cref="T:System.Net.Sockets.Socket" /> subyacente se ha cerrado.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Se produjo un error al acceder al socket.</exception>
      <exception cref="T:System.ArgumentException">La dirección IP no es compatible con el valor de <see cref="T:System.Net.Sockets.AddressFamily" /> que define el esquema de direcciones del socket.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="multicastAddr" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
      <summary>Abandona un grupo de multidifusión.</summary>
      <param name="multicastAddr">
        <see cref="T:System.Net.IPAddress" /> del grupo de multidifusión que se va a abandonar.</param>
      <param name="ifindex">La dirección local del grupo de multidifusión que se va a abandonar.</param>
      <exception cref="T:System.ObjectDisposedException">El objeto <see cref="T:System.Net.Sockets.Socket" /> subyacente se ha cerrado.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Se produjo un error al acceder al socket.</exception>
      <exception cref="T:System.ArgumentException">La dirección IP no es compatible con el valor de <see cref="T:System.Net.Sockets.AddressFamily" /> que define el esquema de direcciones del socket.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="multicastAddr" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.EnableBroadcast">
      <summary>Obtiene o establece un valor de <see cref="T:System.Boolean" /> que especifica si <see cref="T:System.Net.Sockets.UdpClient" /> puede enviar o recibir paquetes de difusión.</summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.Net.Sockets.UdpClient" /> permite la difusión de paquetes; de lo contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
      <summary>Finaliza una recepción asincrónica pendiente.</summary>
      <param name="asyncResult">Objeto <see cref="T:System.IAsyncResult" /> devuelto por una llamada a <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" />.</param>
      <param name="remoteEP">Extremo remoto especificado.</param>
      <returns>Si se completa correctamente, una matriz de bytes que contiene los datos del datagrama.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> no se devolvió mediante una llamada al método <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó previamente a <see cref="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)" /> para la lectura asincrónica.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Ocurrió un error al intentar obtener acceso al <see cref="T:System.Net.Sockets.Socket" /> subyacente.</exception>
      <exception cref="T:System.ObjectDisposedException">El objeto <see cref="T:System.Net.Sockets.Socket" /> subyacente se ha cerrado.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)">
      <summary>Finaliza un envío asincrónico pendiente.</summary>
      <param name="asyncResult">Objeto <see cref="T:System.IAsyncResult" /> devuelto por una llamada a <see cref="Overload:System.Net.Sockets.UdpClient.BeginSend" />.</param>
      <returns>Si se realiza correctamente, el número de bytes enviados a <see cref="T:System.Net.Sockets.UdpClient" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> no se devolvió mediante una llamada al método <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó previamente a <see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /> para la lectura asincrónica.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Se ha producido un error al intentar obtener acceso al socket subyacente.</exception>
      <exception cref="T:System.ObjectDisposedException">El objeto <see cref="T:System.Net.Sockets.Socket" /> subyacente se ha cerrado.</exception>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse">
      <summary>Obtiene o establece un valor <see cref="T:System.Boolean" /> que especifica si el objeto <see cref="T:System.Net.Sockets.UdpClient" /> permite a un único cliente utilizar un puerto.</summary>
      <returns>Es <see langword="true" /> si el objeto <see cref="T:System.Net.Sockets.UdpClient" /> permite a un único cliente utilizar un puerto específico; en caso contrario, es <see langword="false" />. El valor predeterminado es <see langword="true" /> para Windows Server 2003 y el Service Pack 2 y posteriores de Windows XP, y <see langword="false" /> para el resto de versiones.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Se ha producido un error al intentar obtener acceso al socket subyacente.</exception>
      <exception cref="T:System.ObjectDisposedException">El objeto <see cref="T:System.Net.Sockets.Socket" /> subyacente se ha cerrado.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)">
      <summary>Agrega una clase <see cref="T:System.Net.Sockets.UdpClient" /> a un grupo de multidifusión.</summary>
      <param name="ifindex">Índice de interfaz asociado a la dirección IP local donde se va unir al grupo de multidifusión.</param>
      <param name="multicastAddr">Clase <see cref="T:System.Net.IPAddress" /> de multidifusión del grupo al que se piensa incorporar.</param>
      <exception cref="T:System.ObjectDisposedException">El objeto <see cref="T:System.Net.Sockets.Socket" /> subyacente se ha cerrado.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Se produjo un error al acceder al socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
      <summary>Agrega una clase <see cref="T:System.Net.Sockets.UdpClient" /> a un grupo de multidifusión.</summary>
      <param name="multicastAddr">Clase <see cref="T:System.Net.IPAddress" /> de multidifusión del grupo al que se piensa incorporar.</param>
      <exception cref="T:System.ObjectDisposedException">El objeto <see cref="T:System.Net.Sockets.Socket" /> subyacente se ha cerrado.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Se produjo un error al acceder al socket.</exception>
      <exception cref="T:System.ArgumentException">La dirección IP no es compatible con el valor de <see cref="T:System.Net.Sockets.AddressFamily" /> que define el esquema de direcciones del socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
      <summary>Agrega una clase <see cref="T:System.Net.Sockets.UdpClient" /> a un grupo de multidifusión con el período de vida (TTL) especificado.</summary>
      <param name="multicastAddr">Clase <see cref="T:System.Net.IPAddress" /> del grupo de multidifusión que se piensa incorporar.</param>
      <param name="timeToLive">Período de vida, medido en saltos del enrutador.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">El TTL proporcionado no se encuentra entre 0 y 255.</exception>
      <exception cref="T:System.ObjectDisposedException">El objeto <see cref="T:System.Net.Sockets.Socket" /> subyacente se ha cerrado.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Se produjo un error al acceder al socket.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="multicastAddr" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La dirección IP no es compatible con el valor de <see cref="T:System.Net.Sockets.AddressFamily" /> que define el esquema de direcciones del socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)">
      <summary>Agrega una clase <see cref="T:System.Net.Sockets.UdpClient" /> a un grupo de multidifusión.</summary>
      <param name="multicastAddr">Clase <see cref="T:System.Net.IPAddress" /> de multidifusión del grupo al que se piensa incorporar.</param>
      <param name="localAddress">
        <see cref="T:System.Net.IPAddress" /> local.</param>
      <exception cref="T:System.ObjectDisposedException">El objeto <see cref="T:System.Net.Sockets.Socket" /> subyacente se ha cerrado.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Se produjo un error al acceder al socket.</exception>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.MulticastLoopback">
      <summary>Obtiene o establece un valor <see cref="T:System.Boolean" /> que especifica si se entregan paquetes de multidifusión saliente a la aplicación emisora.</summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.Net.Sockets.UdpClient" /> recibe paquetes de multidifusión saliente; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
      <summary>Devuelve un datagrama UDP enviado por un host remoto.</summary>
      <param name="remoteEP">
        <see cref="T:System.Net.IPEndPoint" /> que representa el host remoto desde el que se enviaron los datos.</param>
      <returns>Matriz de tipo <see cref="T:System.Byte" /> que contiene datos de datagramas.</returns>
      <exception cref="T:System.ObjectDisposedException">El objeto <see cref="T:System.Net.Sockets.Socket" /> subyacente se ha cerrado.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Se produjo un error al acceder al socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.ReceiveAsync">
      <summary>Devuelve de forma asincrónica un datagrama UDP enviado por un host remoto.</summary>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ObjectDisposedException">El objeto <see cref="T:System.Net.Sockets.Socket" /> subyacente se ha cerrado.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Se produjo un error al acceder al socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
      <summary>Envía un datagrama UDP a un host remoto.</summary>
      <param name="dgram">Matriz de tipo <see cref="T:System.Byte" /> que especifica el datagrama UDP que desea enviar, representado como matriz de bytes.</param>
      <param name="bytes">Número de bytes del datagrama.</param>
      <returns>Número de bytes enviados.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dgram" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">La clase <see cref="T:System.Net.Sockets.UdpClient" /> ya estableció un host remoto predeterminado.</exception>
      <exception cref="T:System.ObjectDisposedException">La clase <see cref="T:System.Net.Sockets.UdpClient" /> está cerrada.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Se produjo un error al acceder al socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
      <summary>Envía un datagrama UDP al host en el extremo remoto especificado.</summary>
      <param name="dgram">Matriz de tipo <see cref="T:System.Byte" /> que especifica el datagrama UDP que desea enviar, representado como matriz de bytes.</param>
      <param name="bytes">Número de bytes del datagrama.</param>
      <param name="endPoint">
        <see cref="T:System.Net.IPEndPoint" /> que representa el host y el puerto al que se va a enviar el datagrama.</param>
      <returns>Número de bytes enviados.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dgram" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.UdpClient" /> ya ha establecido un host remoto predeterminado.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpClient" /> está cerrado.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Se produjo un error al acceder al socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
      <summary>Envía un datagrama UDP a un puerto especificado, en un host remoto especificado.</summary>
      <param name="dgram">Matriz de tipo <see cref="T:System.Byte" /> que especifica el datagrama UDP que desea enviar, representado como matriz de bytes.</param>
      <param name="bytes">Número de bytes del datagrama.</param>
      <param name="hostname">Nombre del host remoto al que desea enviar el datagrama.</param>
      <param name="port">Número de puerto remoto con el que se desea establecer comunicación.</param>
      <returns>Número de bytes enviados.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dgram" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">La clase <see cref="T:System.Net.Sockets.UdpClient" /> ya estableció un host remoto predeterminado.</exception>
      <exception cref="T:System.ObjectDisposedException">La clase <see cref="T:System.Net.Sockets.UdpClient" /> está cerrada.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Se produjo un error al acceder al socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
      <summary>Envía un datagrama UDP a un host remoto de forma asincrónica.</summary>
      <param name="datagram">Matriz de tipo <see cref="T:System.Byte" /> que especifica el datagrama UDP que desea enviar, representado como matriz de bytes.</param>
      <param name="bytes">Número de bytes del datagrama.</param>
      <returns>Devuelva <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dgram" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">La clase <see cref="T:System.Net.Sockets.UdpClient" /> ya estableció un host remoto predeterminado.</exception>
      <exception cref="T:System.ObjectDisposedException">La clase <see cref="T:System.Net.Sockets.UdpClient" /> está cerrada.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Se produjo un error al acceder al socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
      <summary>Envía un datagrama UDP a un host remoto de forma asincrónica.</summary>
      <param name="datagram">Matriz de tipo <see cref="T:System.Byte" /> que especifica el datagrama UDP que desea enviar, representado como matriz de bytes.</param>
      <param name="bytes">Número de bytes del datagrama.</param>
      <param name="endPoint">
        <see cref="T:System.Net.IPEndPoint" /> que representa el host y el puerto al que se va a enviar el datagrama.</param>
      <returns>Devuelva <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dgram" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.UdpClient" /> ya ha establecido un host remoto predeterminado.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpClient" /> está cerrado.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Se produjo un error al acceder al socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
      <summary>Envía un datagrama UDP a un host remoto de forma asincrónica.</summary>
      <param name="datagram">Matriz de tipo <see cref="T:System.Byte" /> que especifica el datagrama UDP que desea enviar, representado como matriz de bytes.</param>
      <param name="bytes">Número de bytes del datagrama.</param>
      <param name="hostname">Nombre del host remoto al que desea enviar el datagrama.</param>
      <param name="port">Número de puerto remoto con el que se desea establecer comunicación.</param>
      <returns>Devuelva <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dgram" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">La clase <see cref="T:System.Net.Sockets.UdpClient" /> ya estableció un host remoto predeterminado.</exception>
      <exception cref="T:System.ObjectDisposedException">La clase <see cref="T:System.Net.Sockets.UdpClient" /> está cerrada.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Se produjo un error al acceder al socket.</exception>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.Ttl">
      <summary>Obtiene o establece un valor que especifica el valor de período de vida (TTL) de los paquetes de protocolo de Internet (IP) enviados por <see cref="T:System.Net.Sockets.UdpClient" />.</summary>
      <returns>Valor TTL.</returns>
    </member>
    <member name="T:System.Net.Sockets.UdpReceiveResult">
      <summary>Muestra el UDP que recibe información del resultado de una llamada al método <see cref="M:System.Net.Sockets.UdpClient.ReceiveAsync" /> .</summary>
    </member>
    <member name="M:System.Net.Sockets.UdpReceiveResult.#ctor(System.Byte[],System.Net.IPEndPoint)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Sockets.UdpReceiveResult" />.</summary>
      <param name="buffer">Un búfer de datos para recibir en el paquete UDP.</param>
      <param name="remoteEndPoint">El extremo remoto del paquete UDP.</param>
    </member>
    <member name="P:System.Net.Sockets.UdpReceiveResult.Buffer">
      <summary>Obtiene un búfer con los datos recibidos en el paquete UDP.</summary>
      <returns>Una matriz <see cref="T:System.Byte" /> con los datos recibidos en el paquete UDP.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpReceiveResult.Equals(System.Net.Sockets.UdpReceiveResult)">
      <summary>Devuelve un valor que indica si esta instancia es igual que un objeto especificado.</summary>
      <param name="other">Objeto que se va a comparar con esta instancia.</param>
      <returns>Es <see langword="true" /> si <paramref name="other" /> es una instancia de <see cref="T:System.Net.Sockets.UdpReceiveResult" /> y es igual al valor de la instancia; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpReceiveResult.Equals(System.Object)">
      <summary>Devuelve un valor que indica si esta instancia es igual que un objeto especificado.</summary>
      <param name="obj">Objeto que se va a comparar con esta instancia.</param>
      <returns>Es <see langword="true" /> si <paramref name="obj" /> es una instancia de <see cref="T:System.Net.Sockets.UdpReceiveResult" /> y es igual al valor de la instancia; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpReceiveResult.GetHashCode">
      <summary>Devuelve el código hash de esta instancia.</summary>
      <returns>Código hash.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpReceiveResult.op_Equality(System.Net.Sockets.UdpReceiveResult,System.Net.Sockets.UdpReceiveResult)">
      <summary>Comprueba si dos instancias de <see cref="T:System.Net.Sockets.UdpReceiveResult" /> especificadas son equivalentes.</summary>
      <param name="left">Instancia de <see cref="T:System.Net.Sockets.UdpReceiveResult" /> situada a la izquierda del operador de igualdad.</param>
      <param name="right">Instancia de <see cref="T:System.Net.Sockets.UdpReceiveResult" /> situada a la derecha del operador de igualdad.</param>
      <returns>
        <see langword="true" /> si <paramref name="left" /> y <paramref name="right" /> son iguales; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpReceiveResult.op_Inequality(System.Net.Sockets.UdpReceiveResult,System.Net.Sockets.UdpReceiveResult)">
      <summary>Comprueba si dos instancias especificadas de <see cref="T:System.Net.Sockets.UdpReceiveResult" /> no son iguales.</summary>
      <param name="left">Instancia de <see cref="T:System.Net.Sockets.UdpReceiveResult" /> situada a la izquierda del operador de desigualdad.</param>
      <param name="right">Instancia de <see cref="T:System.Net.Sockets.UdpReceiveResult" /> situada a la derecha del operador de desigualdad.</param>
      <returns>
        <see langword="true" /> si <paramref name="left" /> y <paramref name="right" /> no son iguales; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.UdpReceiveResult.RemoteEndPoint">
      <summary>Obtiene el extremo remoto desde el que se ha recibido el paquete UDP.</summary>
      <returns>Extremo remoto desde el que se ha recibido el paquete UDP.</returns>
    </member>
    <member name="T:System.Net.Sockets.UnixDomainSocketEndPoint">
      <summary>Representa un punto de conexión de socket de dominio de Unix como una ruta de acceso.</summary>
    </member>
    <member name="M:System.Net.Sockets.UnixDomainSocketEndPoint.#ctor(System.String)">
      <param name="path" />
    </member>
  </members>
</doc>