<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Xml.XmlSerializer</name>
  </assembly>
  <members>
    <member name="T:System.Xml.Serialization.CodeGenerationOptions">
      <summary>Especifica diversas opciones que se pueden utilizar al generar tipos de .NET Framework para su uso con un servicio web XML.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.EnableDataBinding">
      <summary>Habilita el enlace de datos.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateNewAsync">
      <summary>Crea eventos para la llamada asincrónica de métodos web.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateOldAsync">
      <summary>Crea métodos Begin y End para la llamada asincrónica de métodos web.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder">
      <summary>Genera el código de serialización explícitamente ordenado como se especificó mediante la propiedad <see langword="Order" /> de los atributos <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />, <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> y <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateProperties">
      <summary>Representa los tipos primitivos por propiedades.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.None">
      <summary>Representa los tipos primitivos por campos y los tipos primitivos por tipos de espacio de nombres <see cref="N:System" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.CodeIdentifier">
      <summary>Proporciona métodos estáticos para convertir el texto de entrada en nombres para las entidades de código.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.CodeIdentifier" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakeCamel(System.String)">
      <summary>Genera una cadena con mayúscula y minúscula Camel de una cadena de entrada.</summary>
      <param name="identifier">El nombre de una entidad de código, como un parámetro de método, normalmente tomado de un nombre de atributo o elemento XML.</param>
      <returns>Una versión con mayúscula y minúscula Camel de la cadena de parámetro.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakePascal(System.String)">
      <summary>Genera una cadena con mayúscula y minúscula Pascal de una cadena de entrada.</summary>
      <param name="identifier">El nombre de una entidad de código, como un parámetro de método, normalmente tomado de un nombre de atributo o elemento XML.</param>
      <returns>Una versión con mayúscula y minúscula Pascal de la cadena de parámetro.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakeValid(System.String)">
      <summary>Genera un nombre de entidad de código válido a partir de una cadena de entrada.</summary>
      <param name="identifier">El nombre de una entidad de código, como un parámetro de método, normalmente tomado de un nombre de atributo o elemento XML.</param>
      <returns>Una cadena que se puede utilizar como un identificador de código, como el nombre de un parámetro de método.</returns>
    </member>
    <member name="T:System.Xml.Serialization.CodeIdentifiers">
      <summary>Mantiene un grupo de nombres para entidades de código o asignaciones de tipo que son generadas por la infraestructura de serialización XML de .NET Framework.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.#ctor(System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> y determina si los identificadores de código distinguen entre mayúsculas y minúsculas.</summary>
      <param name="caseSensitive">Es <see langword="true" /> si los identificadores distinguen entre mayúsculas y minúsculas; en caso contrario, es <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Add(System.String,System.Object)">
      <summary>Agrega una entidad de código con nombre o asignación de tipo al ámbito de la instancia <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</summary>
      <param name="identifier">Un nombre que se utiliza para indizar la entidad de código.</param>
      <param name="value">La entidad de código o información de asignación de tipos.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.AddReserved(System.String)">
      <summary>Evita que un nombre especificado se utilice dentro del ámbito de la instancia <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</summary>
      <param name="identifier">Un nombre que no estará disponible dentro del ámbito de la instancia de <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.AddUnique(System.String,System.Object)">
      <summary>Agrega una entidad de código o asignación de tipo con nombre al ámbito de la instancia <see cref="T:System.Xml.Serialization.CodeIdentifiers" />, garantizando que el nombre es único dentro del ámbito.</summary>
      <param name="identifier">Un nombre candidato que se utiliza para indizar la entidad de código.</param>
      <param name="value">La entidad de código o información de asignación de tipos.</param>
      <returns>El valor de parámetro del identificador o una cadena modificada si hay una coincidencia de nombres.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Clear">
      <summary>Quita todas las entidades de código o asignaciones de tipo, incluidos sus nombres, del ámbito de la instancia <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.IsInUse(System.String)">
      <summary>Determina si un nombre especificado ya se utiliza dentro del ámbito de la instancia <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</summary>
      <param name="identifier">El nombre que se comprobará para utilizarlo dentro del ámbito de la instancia <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</param>
      <returns>Es <see langword="true" /> si el nombre ya se utiliza; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.MakeRightCase(System.String)">
      <summary>Garantiza que la entrada es del caso correcto modificando el nombre según el valor de la propiedad <see cref="P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing" />.</summary>
      <param name="identifier">El nombre que posiblemente se modificará.</param>
      <returns>Una cadena que es igual que el identificador de entrada o que tiene modificada la mayúscula o minúscula de la primera letra.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.MakeUnique(System.String)">
      <summary>Determina las coincidencias de nombre de entrada con otro nombre dentro del ámbito de la instancia <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> y, si las hay, genera una cadena modificada.</summary>
      <param name="identifier">El nombre que se modificará si aún no es único.</param>
      <returns>El valor de parámetro del identificador o una cadena modificada si hay una coincidencia de nombres.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Remove(System.String)">
      <summary>Quita del ámbito de la instancia <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> la entidad de código o la asignación de tipo identificada por el nombre de entrada.</summary>
      <param name="identifier">El nombre de la entidad de código o información de asignación de tipo que se quitará.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.RemoveReserved(System.String)">
      <summary>Quita el nombre de entrada de los nombres reservados de la instancia <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</summary>
      <param name="identifier">Un nombre que estará disponible dentro del ámbito de la instancia <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.ToArray(System.Type)">
      <summary>Devuelve una matriz de las entidades de código o asignaciones de tipo dentro del ámbito de la instancia <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</summary>
      <param name="type">El tipo de todas las entidades de código o asignaciones de tipo para la instancia.</param>
      <returns>Una matriz de las entidades de código o asignaciones de tipo que es almacenada por el objeto <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing">
      <summary>Obtiene o establece un valor que indica si la instancia utiliza mayúsculas y minúsculas Camel.</summary>
      <returns>
        <see langword="true" /> para indicar que la instancia utiliza mayúsculas y minúsculas Camel; <see langword="false" /> para indicar que la instancia utiliza mayúsculas y minúsculas Pascal.</returns>
    </member>
    <member name="T:System.Xml.Serialization.ImportContext">
      <summary>Describe el contexto en el que un conjunto de esquema se enlaza a las entidades de código de .NET Framework.</summary>
    </member>
    <member name="M:System.Xml.Serialization.ImportContext.#ctor(System.Xml.Serialization.CodeIdentifiers,System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.ImportContext" /> para los identificadores de código dados, con la correspondiente opción para compartir tipos.</summary>
      <param name="identifiers">Entidades del código a las que se aplica el contexto.</param>
      <param name="shareTypes">Valor <see cref="T:System.Boolean" /> que determina si los tipos personalizados se comparten entre el esquema.</param>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.ShareTypes">
      <summary>Obtiene un valor que determina si se comparten los tipos personalizados.</summary>
      <returns>
        <see langword="true" />, si los tipos personalizados se comparten entre el esquema; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.TypeIdentifiers">
      <summary>Obtiene un conjunto de entidades de código a las que se aplica el contexto.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> que especifica las entidades del código a las que se aplica el contexto.</returns>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.Warnings">
      <summary>Obtiene una colección de advertencias que se generan al importar las descripciones de entidad del código.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.StringCollection" /> que contiene advertencias que se generaron al importar las descripciones de entidad del código.</returns>
    </member>
    <member name="T:System.Xml.Serialization.IXmlTextParser">
      <summary>Establece una propiedad <see cref="P:System.Xml.Serialization.IXmlTextParser.Normalized" /> para ser utilizada por la infraestructura de .NET Framework.</summary>
    </member>
    <member name="P:System.Xml.Serialization.IXmlTextParser.Normalized">
      <summary>Obtiene o establece si se normalizan los valores de atributo y espacio en blanco.</summary>
      <returns>
        <see langword="true" /> si se normalizan los valores de atributo y espacio en blanco; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.IXmlTextParser.WhitespaceHandling">
      <summary>Obtiene o establece cómo se trata el carácter de espacio en blanco al analizar XML.</summary>
      <returns>Un miembro de la enumeración <see cref="T:System.Xml.WhitespaceHandling" /> que describe cómo se trata el carácter de espacio en blanco al analizar XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SchemaImporter">
      <summary>Describe un importador de esquemas.</summary>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributeAttribute">
      <summary>Especifica que <see cref="T:System.Xml.Serialization.XmlSerializer" /> debe serializar el miembro de clase como un atributo SOAP codificado.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeAttribute.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> utilizando el valor especificado como nombre del atributo XML.</summary>
      <param name="attributeName">Nombre del atributo XML.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.AttributeName">
      <summary>Obtiene o establece el nombre del atributo XML generado por <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns>Nombre del atributo XML. El valor predeterminado es el identificador de miembros.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.DataType">
      <summary>Obtiene o establece el tipo de datos XSD (Lenguaje de definición de esquemas XML) del atributo SOAP generado por <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns>Un tipo de datos de esquema XML.</returns>
      <exception cref="T:System.Exception">El tipo de datos de esquemas XML especificado no se puede asignar al tipo de datos .NET.</exception>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.Namespace">
      <summary>Obtiene o establece el espacio de nombres XML del atributo XML.</summary>
      <returns>Espacio de nombres XML del atributo XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributeOverrides">
      <summary>Permite reemplazar atributos aplicados a propiedades, campos y clases cuando se utiliza un objeto <see cref="T:System.Xml.Serialization.XmlSerializer" /> para serializar o deserializar un objeto como SOAP codificado.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.SoapAttributes)">
      <summary>Agrega un objeto <see cref="T:System.Xml.Serialization.SoapAttributes" /> a la colección de objetos <see cref="T:System.Xml.Serialization.SoapAttributes" /> incluidos en <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" />. El parámetro <paramref name="type" /> especifica el objeto que va a ser reemplazado por <see cref="T:System.Xml.Serialization.SoapAttributes" />. El parámetro <paramref name="member" /> especifica el nombre de un miembro que se va a reemplazar.</summary>
      <param name="type">
        <see cref="T:System.Type" /> del objeto que se va a reemplazar.</param>
      <param name="member">Nombre del miembro que se va a reemplazar.</param>
      <param name="attributes">
        <see cref="T:System.Xml.Serialization.SoapAttributes" /> que representa a los atributos de reemplazo.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.Xml.Serialization.SoapAttributes)">
      <summary>Agrega un objeto <see cref="T:System.Xml.Serialization.SoapAttributes" /> a una colección de objetos <see cref="T:System.Xml.Serialization.SoapAttributes" />. El parámetro <paramref name="type" /> especifica un objeto que va a ser reemplazado por el objeto <see cref="T:System.Xml.Serialization.SoapAttributes" />.</summary>
      <param name="type">Tipo <see cref="T:System.Type" /> del objeto que se va a reemplazar.</param>
      <param name="attributes">
        <see cref="T:System.Xml.Serialization.SoapAttributes" /> que representa a los atributos de reemplazo.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type)">
      <summary>Obtiene el objeto asociado al tipo (de clase base) especificado.</summary>
      <param name="type">Tipo <see cref="T:System.Type" /> de la clase base que está asociado a la colección de atributos que se desea recuperar.</param>
      <returns>
        <see cref="T:System.Xml.Serialization.SoapAttributes" /> que representa la colección de atributos de reemplazo.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type,System.String)">
      <summary>Obtiene el objeto asociado al tipo (de clase base) especificado. El parámetro <paramref name="member" /> especifica el miembro de clase base que se reemplaza.</summary>
      <param name="type">Tipo <see cref="T:System.Type" /> de la clase base que está asociado a la colección de atributos que se desea reemplazar.</param>
      <param name="member">Nombre del miembro reemplazado que especifica el objeto <see cref="T:System.Xml.Serialization.SoapAttributes" /> que se va a devolver.</param>
      <returns>
        <see cref="T:System.Xml.Serialization.SoapAttributes" /> que representa la colección de atributos de reemplazo.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributes">
      <summary>Representa a una colección de objetos de atributos que controlan el modo en que <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa y deserializa los métodos SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributes.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapAttributes" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapAttributes" /> utilizando el tipo personalizado especificado.</summary>
      <param name="provider">Objeto que implementa la interfaz <see cref="T:System.Reflection.ICustomAttributeProvider" />, como la clase <see cref="T:System.Type" />.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapAttribute">
      <summary>Obtiene o establece el <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> que se va a reemplazar.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> que reemplaza el comportamiento del <see cref="T:System.Xml.Serialization.XmlSerializer" /> cuando se serializa el miembro.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapDefaultValue">
      <summary>Obtiene o establece el valor predeterminado de un elemento o atributo XML.</summary>
      <returns>Objeto que representa el valor predeterminado de un elemento o atributo XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapElement">
      <summary>Obtiene o establece un objeto <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> que se va a reemplazar.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> que se va a reemplazar.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapEnum">
      <summary>Obtiene o establece un objeto que especifica el modo en que <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa una enumeración SOAP.</summary>
      <returns>Objeto que especifica el modo en que <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa un miembro de enumeración.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapIgnore">
      <summary>Obtiene o establece un valor que especifica si <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa o no un campo público o una propiedad pública como XML SOAP codificado.</summary>
      <returns>
        <see langword="true" /> si el objeto <see cref="T:System.Xml.Serialization.XmlSerializer" /> no debe serializar ni el campo ni la propiedad; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapType">
      <summary>Obtiene o establece un objeto que indica al <see cref="T:System.Xml.Serialization.XmlSerializer" /> cómo serializar un tipo de objeto en XML SOAP codificado.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> que reemplaza un atributo <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> aplicado a una declaración de clase o que se aplica a una declaración de clase.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapElementAttribute">
      <summary>Especifica que <see cref="T:System.Xml.Serialization.XmlSerializer" /> debe serializar el valor del miembro público como un elemento XML SOAP codificado.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapElementAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapElementAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapElementAttribute.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> y especifica el nombre del elemento XML.</summary>
      <param name="elementName">Nombre de elemento XML del miembro serializado.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.DataType">
      <summary>Obtiene o establece el tipo de datos XSD (Lenguaje de definición de esquemas XML) del elemento XML generado.</summary>
      <returns>Uno de los tipos de datos de esquemas XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.ElementName">
      <summary>Obtiene o establece el nombre del elemento XML generado.</summary>
      <returns>Nombre del elemento XML generado. El valor predeterminado es el identificador de miembros.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.IsNullable">
      <summary>Obtiene o establece un valor que indica si <see cref="T:System.Xml.Serialization.XmlSerializer" /> debe serializar un miembro con el atributo <see langword="xsi:null" /> establecido en "1".</summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.Xml.Serialization.XmlSerializer" /> genera el atributo <see langword="xsi:null" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapEnumAttribute">
      <summary>Controla el modo en que <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa un miembro de enumeración.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapEnumAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapEnumAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapEnumAttribute.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapEnumAttribute" />, utilizando el nombre de elemento especificado.</summary>
      <param name="name">Nombre del elemento XML generado por <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapEnumAttribute.Name">
      <summary>Obtiene o establece el valor generado en un documento XML cuando <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa una enumeración o el valor reconocido al deserializar el miembro de la enumeración.</summary>
      <returns>Valor generado en un documento XML cuando <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa la enumeración o el valor reconocido al deserializar el miembro de la enumeración.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapIgnoreAttribute">
      <summary>Instruye al <see cref="T:System.Xml.Serialization.XmlSerializer" /> para que no serialice el valor de campo público o propiedad pública de lectura/escritura.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapIgnoreAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapIgnoreAttribute" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.SoapIncludeAttribute">
      <summary>Permite que <see cref="T:System.Xml.Serialization.XmlSerializer" /> reconozca un tipo al serializar o deserializar un objeto como XML SOAP codificado.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapIncludeAttribute.#ctor(System.Type)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapIncludeAttribute" /> utilizando el tipo especificado.</summary>
      <param name="type">Tipo del objeto que se va a incluir.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapIncludeAttribute.Type">
      <summary>Obtiene o establece el tipo del objeto que debe utilizarse cuando se serializa o se deserializa un objeto.</summary>
      <returns>Tipo del objeto que se va a incluir.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapReflectionImporter">
      <summary>Genera asignaciones a los mensajes con codificación SOAP desde los tipos de .NET Framework o la información de métodos del servicio Web.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />, especificando un espacio de nombres XML predeterminado para las asignaciones de tipo importadas.</summary>
      <param name="defaultNamespace">Espacio de nombres XML predeterminado que se utilizará para las asignaciones de tipo importadas.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.Xml.Serialization.SoapAttributeOverrides)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />, especificando los reemplazos de la serialización XML.</summary>
      <param name="attributeOverrides">Objeto <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> que reemplaza cómo la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa tipos asignados mediante la codificación SOAP.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.Xml.Serialization.SoapAttributeOverrides,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />, especificando los reemplazos de la serialización XML y un espacio de nombres XML predeterminado.</summary>
      <param name="attributeOverrides">Objeto <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> que reemplaza cómo la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa tipos asignados mediante la codificación SOAP.</param>
      <param name="defaultNamespace">Espacio de nombres XML predeterminado que se utilizará para las asignaciones de tipo importadas.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[])">
      <summary>Genera las asignaciones de tipo internas para obtener información que se recopila de un método de servicio Web.</summary>
      <param name="elementName">Nombre de un elemento XML producido desde el método de servicio Web.</param>
      <param name="ns">Espacio de nombres del elemento XML producido desde el método de servicio Web.</param>
      <param name="members">Matriz de entidades de código de .NET Framework que pertenecen a un método de servicio Web.</param>
      <returns>Asignaciones internas de tipos de .NET Framework para las partes que componen una definición de mensaje WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)">
      <summary>Genera las asignaciones de tipo internas para obtener información que se recopila de un método de servicio Web.</summary>
      <param name="elementName">Nombre de un elemento XML producido desde el método de servicio Web.</param>
      <param name="ns">Espacio de nombres del elemento XML producido desde el método de servicio Web.</param>
      <param name="members">Matriz de entidades de código de .NET Framework que pertenecen a un método de servicio Web.</param>
      <param name="hasWrapperElement">
        <see langword="true" /> para indicar qué elementos que corresponden a las partes del mensaje WSDL se deberían encerrar en un elemento contenedor adicional de un mensaje SOAP; de lo contrario, <see langword="false" />.</param>
      <param name="writeAccessors">
        <see langword="true" /> para indicar un enlace de servicio Web de estilo RPC; <see langword="false" /> para indicar un enlace de servicio Web de estilo del documento o un encabezado SOAP.</param>
      <returns>Asignaciones internas de tipos de .NET Framework para las partes que componen una definición de mensaje WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)">
      <summary>Genera las asignaciones de tipo internas para obtener información que se recopila de un método de servicio Web.</summary>
      <param name="elementName">Nombre de un elemento XML producido desde el método de servicio Web.</param>
      <param name="ns">Espacio de nombres del elemento XML producido desde el método de servicio Web.</param>
      <param name="members">Matriz de entidades de código de .NET Framework que pertenecen a un método de servicio Web.</param>
      <param name="hasWrapperElement">
        <see langword="true" /> para indicar qué elementos que corresponden a las partes del mensaje WSDL se deberían encerrar en un elemento contenedor adicional de un mensaje SOAP; de lo contrario, <see langword="false" />.</param>
      <param name="writeAccessors">
        <see langword="true" /> para indicar un enlace de servicio Web de estilo RPC; <see langword="false" /> para indicar un enlace de servicio Web de estilo del documento o un encabezado SOAP.</param>
      <param name="validate">
        <see langword="true" /> para indicar que un deserializador generado debería comprobar el nombre completo esperado del elemento contenedor; de lo contrario, <see langword="false" />. El valor de este parámetro sólo es relevante si el valor del parámetro <paramref name="hasWrapperElement" /> es <see langword="true" />.</param>
      <returns>Asignaciones internas de tipos de .NET Framework para las partes que componen una definición de mensaje WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)">
      <summary>Genera las asignaciones de tipo internas para obtener información que se recopila de un método de servicio Web.</summary>
      <param name="elementName">Nombre de un elemento XML producido desde el método de servicio Web.</param>
      <param name="ns">Espacio de nombres del elemento XML producido desde el método de servicio Web.</param>
      <param name="members">Matriz de entidades de código de .NET Framework que pertenecen a un método de servicio Web.</param>
      <param name="hasWrapperElement">
        <see langword="true" /> para indicar qué elementos que corresponden a las partes del mensaje WSDL se deberían encerrar en un elemento contenedor adicional de un mensaje SOAP; de lo contrario, <see langword="false" />.</param>
      <param name="writeAccessors">
        <see langword="true" /> para indicar un enlace de servicio Web de estilo RPC; <see langword="false" /> para indicar un enlace de servicio Web de estilo del documento o un encabezado SOAP.</param>
      <param name="validate">
        <see langword="true" /> para indicar que un deserializador generado debería comprobar el nombre completo esperado del elemento contenedor; de lo contrario, <see langword="false" />. El valor de este parámetro sólo es relevante si el valor del parámetro <paramref name="hasWrapperElement" /> es <see langword="true" />.</param>
      <param name="access">Uno de los valores de <see cref="T:System.Xml.Serialization.XmlMappingAccess" />.</param>
      <returns>Asignaciones internas de tipos de .NET Framework para las partes que componen una definición de mensaje WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type)">
      <summary>Genera una asignación a un elemento del esquema XML para un tipo de .NET Framework.</summary>
      <param name="type">El tipo de .NET Framework para el que se genera una asignación de tipos.</param>
      <returns>Asignación .NET Framework interna de un tipo a un elemento de esquema XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type,System.String)">
      <summary>Genera una asignación a un elemento del esquema XML para un tipo de .NET Framework.</summary>
      <param name="type">El tipo de .NET Framework para el que se genera una asignación de tipos.</param>
      <param name="defaultNamespace">El espacio de nombres XML predeterminado que se va a utilizar.</param>
      <returns>Asignación .NET Framework interna de un tipo a un elemento de esquema XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.IncludeType(System.Type)">
      <summary>Coloca las asignaciones para un tipo en el contexto de la instancia <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> para su uso posterior cuando se invoquen los métodos de importación.</summary>
      <param name="type">El tipo de .NET Framework para el que se guarda la información de asignación de tipos.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)">
      <summary>Coloca las asignaciones para los tipos derivados en el contexto de la instancia <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> para su uso posterior cuando se invoquen los métodos de importación.</summary>
      <param name="provider">Un objeto de reflexión <see cref="T:System.Reflection.ICustomAttributeProvider" /> que contiene atributos personalizados que se derivan del atributo <see cref="T:System.Xml.Serialization.SoapIncludeAttribute" />.</param>
    </member>
    <member name="T:System.Xml.Serialization.SoapSchemaMember">
      <summary>Representa ciertos atributos de un elemento &lt;<see langword="part" />&gt; XSD elemento en un documento WSDL para generar clases a partir del documento.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaMember.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapSchemaMember" />.</summary>
    </member>
    <member name="P:System.Xml.Serialization.SoapSchemaMember.MemberName">
      <summary>Obtiene o establece un valor que corresponde al atributo de nombre del elemento de la parte WSDL.</summary>
      <returns>Nombre del elemento.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapSchemaMember.MemberType">
      <summary>Obtiene o establece un valor que corresponde con el atributo de tipo del elemento de la parte WSDL.</summary>
      <returns>
        <see cref="T:System.Xml.XmlQualifiedName" /> que corresponde al tipo XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapTypeAttribute">
      <summary>Controla el esquema generado por <see cref="T:System.Xml.Serialization.XmlSerializer" /> cuando se serializa una instancia de clase como XML SOAP codificado.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapTypeAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> y especifica el nombre del tipo XML.</summary>
      <param name="typeName">Nombre del tipo XML que <see cref="T:System.Xml.Serialization.XmlSerializer" /> genera cuando serializa la instancia de clase (y reconoce al deserializar la instancia de clase).</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> y especifica el nombre y el espacio de nombres XML del tipo.</summary>
      <param name="typeName">Nombre del tipo XML que <see cref="T:System.Xml.Serialization.XmlSerializer" /> genera cuando serializa la instancia de clase (y reconoce al deserializar la instancia de clase).</param>
      <param name="ns">Espacio de nombres XML del tipo.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema">
      <summary>Obtiene o establece un valor que indica si se debe incluir el tipo en los documentos de esquema XML codificados en SOAP.</summary>
      <returns>
        <see langword="true" /> para incluir el tipo en los documentos de esquema XML codificados en SOAP; en caso contrario, <see langword="false" />. De manera predeterminada, es <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.Namespace">
      <summary>Obtiene o establece el espacio de nombres del tipo XML.</summary>
      <returns>Espacio de nombres del tipo XML. El valor predeterminado es una cadena vacía ("").</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.TypeName">
      <summary>Obtiene o establece el nombre del tipo XML.</summary>
      <returns>Nombre del tipo XML. El valor predeterminado es el nombre de la clase.</returns>
    </member>
    <member name="T:System.Xml.Serialization.UnreferencedObjectEventArgs">
      <summary>Proporciona datos del objeto conocido, pero sin referencia, detectado en una secuencia XML SOAP codificada durante la deserialización.</summary>
    </member>
    <member name="M:System.Xml.Serialization.UnreferencedObjectEventArgs.#ctor(System.Object,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.UnreferencedObjectEventArgs" />.</summary>
      <param name="o">Objeto sin referencia.</param>
      <param name="id">Una cadena única que se utiliza para identificar el objeto sin referencia.</param>
    </member>
    <member name="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId">
      <summary>Obtiene el id. del objeto.</summary>
      <returns>Id. del objeto.</returns>
    </member>
    <member name="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject">
      <summary>Obtiene el objeto deserializado sin referencia.</summary>
      <returns>Objeto deserializado sin referencia.</returns>
    </member>
    <member name="T:System.Xml.Serialization.UnreferencedObjectEventHandler">
      <summary>Representa el método que controlará el evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" /> de un <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <param name="sender">Origen del evento.</param>
      <param name="e">Objeto <see cref="T:System.Xml.Serialization.UnreferencedObjectEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAnyElementAttributes">
      <summary>Representa una colección de objetos <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Add(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>Agrega un objeto <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> a la colección.</summary>
      <param name="attribute">
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> que se va a agregar.</param>
      <returns>Índice del objeto <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> que se acaba de agregar.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Contains(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>Obtiene un valor que indica si el <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> especificado existe en la colección.</summary>
      <param name="attribute">
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> que interesa al usuario.</param>
      <returns>Es <see langword="true" /> si el objeto <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> existe en la colección; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.CopyTo(System.Xml.Serialization.XmlAnyElementAttribute[],System.Int32)">
      <summary>Copia los objetos <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> de la colección en una matriz unidimensional compatible, empezando por el índice especificado de la matriz de destino.</summary>
      <param name="array">Matriz unidimensional de objetos <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> que constituye el destino de los elementos copiados de la colección. La matriz debe tener una indización de base cero.</param>
      <param name="index">Índice de base cero en la <paramref name="array" /> donde comienza la copia.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.IndexOf(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>Obtiene el índice del objeto <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> especificado.</summary>
      <param name="attribute">
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> cuyo índice se desea obtener.</param>
      <returns>Índice del objeto <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> especificado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>Inserta un objeto <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> en el índice especificado de la colección.</summary>
      <param name="index">Índice donde se insertará el objeto <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</param>
      <param name="attribute">
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> que se va a insertar.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttributes.Item(System.Int32)">
      <summary>Obtiene o establece la clase <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> en el índice especificado.</summary>
      <param name="index">Índice del objeto <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> en el índice especificado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Remove(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>Quita el objeto <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> especificado de la colección.</summary>
      <param name="attribute">
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> que se va a quitar.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayAttribute">
      <summary>Especifica que <see cref="T:System.Xml.Serialization.XmlSerializer" /> debe serializar un miembro de clase determinado como matriz de elementos XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlArrayAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayAttribute.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> y especifica el nombre del elemento XML generado en la instancia del documento XML.</summary>
      <param name="elementName">Nombre del elemento XML que genera <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.ElementName">
      <summary>Obtiene o establece el nombre de elemento XML asignado a la matriz serializada.</summary>
      <returns>Nombre del elemento XML de la matriz serializada. El valor predeterminado es el nombre del miembro al que se ha asignado <see cref="T:System.Xml.Serialization.XmlArrayAttribute" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Form">
      <summary>Obtiene o establece un valor que indica si el nombre del elemento XML generado por el objeto <see cref="T:System.Xml.Serialization.XmlSerializer" /> está calificado o no.</summary>
      <returns>Uno de los valores de <see cref="T:System.Xml.Schema.XmlSchemaForm" />. De manera predeterminada, es <see langword="XmlSchemaForm.None" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.IsNullable">
      <summary>Obtiene o establece un valor que indica si <see cref="T:System.Xml.Serialization.XmlSerializer" /> debe serializar un miembro como una etiqueta XML vacía con el atributo <see langword="xsi:nil" /> establecido en <see langword="true" />.</summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.Xml.Serialization.XmlSerializer" /> genera el atributo <see langword="xsi:nil" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Namespace">
      <summary>Obtiene o establece el espacio de nombres del elemento XML.</summary>
      <returns>Espacio de nombres del elemento XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Order">
      <summary>Obtiene o establece el orden explícito en el que los elementos son serializados o deserializados.</summary>
      <returns>Orden de la generación de código.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayItemAttribute">
      <summary>Representa un atributo que especifica los tipos derivados que <see cref="T:System.Xml.Serialization.XmlSerializer" /> puede colocar en una matriz serializada.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String)">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> y especifica el nombre del elemento XML generado en el documento XML.</summary>
      <param name="elementName">Nombre del elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String,System.Type)">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> y especifica el nombre del elemento XML generado en el documento XML, así como el <see cref="T:System.Type" /> que puede insertarse en el documento XML generado.</summary>
      <param name="elementName">Nombre del elemento XML.</param>
      <param name="type">
        <see cref="T:System.Type" /> del objeto que se va a serializar.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.Type)">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> y especifica el <see cref="T:System.Type" /> que puede insertarse en la matriz serializada.</summary>
      <param name="type">
        <see cref="T:System.Type" /> del objeto que se va a serializar.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.DataType">
      <summary>Obtiene o establece el tipo de datos XML del elemento XML generado.</summary>
      <returns>Un tipo de datos de definición de esquemas XML (XSD).</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.ElementName">
      <summary>Obtiene o establece el nombre del elemento XML generado.</summary>
      <returns>Nombre del elemento XML generado. El valor predeterminado es el identificador de miembros.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Form">
      <summary>Obtiene o establece un valor que indica si el nombre del elemento XML generado está calificado.</summary>
      <returns>Uno de los valores de <see cref="T:System.Xml.Schema.XmlSchemaForm" />. De manera predeterminada, es <see langword="XmlSchemaForm.None" />.</returns>
      <exception cref="T:System.Exception">La propiedad <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Form" /> se establece en <see langword="XmlSchemaForm.Unqualified" /> y se especifica un valor para la propiedad <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace" />.</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable">
      <summary>Obtiene o establece un valor que indica si <see cref="T:System.Xml.Serialization.XmlSerializer" /> debe serializar un miembro como una etiqueta XML vacía con el atributo <see langword="xsi:nil" /> establecido en <see langword="true" />.</summary>
      <returns>Es <see langword="true" /> si <see cref="T:System.Xml.Serialization.XmlSerializer" /> genera el atributo <see langword="xsi:nil" />; en caso contrario, es <see langword="false" /> y no se genera ninguna instancia. De manera predeterminada, es <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace">
      <summary>Obtiene o establece el espacio de nombres del elemento XML generado.</summary>
      <returns>Espacio de nombres del elemento XML generado.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel">
      <summary>Obtiene o establece el nivel en una jerarquía de elementos XML a los que afecta <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</summary>
      <returns>Índice de base cero de un conjunto de índices en una matriz de matrices.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Type">
      <summary>Obtiene o establece el tipo permitido en una matriz.</summary>
      <returns>
        <see cref="T:System.Type" /> permitido en la matriz.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayItemAttributes">
      <summary>Representa una colección de objetos <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Add(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>Agrega un objeto <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> a la colección.</summary>
      <param name="attribute">
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> que se agrega a la colección.</param>
      <returns>Índice del elemento que se ha agregado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Contains(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>Determina si la colección contiene el objeto <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> especificado.</summary>
      <param name="attribute">
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> que se va a comprobar.</param>
      <returns>
        <see langword="true" /> si la colección contiene el objeto <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> especificado; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.CopyTo(System.Xml.Serialization.XmlArrayItemAttribute[],System.Int32)">
      <summary>Copia una matriz <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> a la colección, comenzando por el índice de destino especificado.</summary>
      <param name="array">Matriz de objetos <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> que se copiará en la colección.</param>
      <param name="index">Índice por el que empiezan los atributos copiados.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.IndexOf(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>Devuelve el índice de base cero de la primera aparición del <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> especificado en la colección o -1 si el atributo no se encuentra en la colección.</summary>
      <param name="attribute">
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> que se va a buscar en la colección.</param>
      <returns>El primer índice de <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> en la colección o -1 si el atributo no se encuentra en la colección.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Insert(System.Int32,System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>Inserta un objeto <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> en el índice especificado de la colección.</summary>
      <param name="index">Índice en el que se inserta el atributo.</param>
      <param name="attribute">
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> que se va a insertar.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttributes.Item(System.Int32)">
      <summary>Obtiene o establece el elemento en el índice especificado.</summary>
      <param name="index">Índice de base cero del miembro de la colección que se va a obtener o establecer.</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> en el índice especificado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Remove(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>Quita <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> de la colección, en caso de que esté presente.</summary>
      <param name="attribute">
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> que se va a quitar.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeEventArgs">
      <summary>Proporciona datos para el evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.Attr">
      <summary>Obtiene un objeto que representa el atributo XML desconocido.</summary>
      <returns>
        <see cref="T:System.Xml.XmlAttribute" /> que representa el atributo XML desconocido.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.ExpectedAttributes">
      <summary>Obtiene una lista delimitada por comas de los nombres de atributos XML que se espera que haya en una instancia de documento XML.</summary>
      <returns>Una lista delimitada por comas de nombres de atributos XML. Cada nombre tiene el formato siguiente: <paramref name="namespace" />:<paramref name="name" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.LineNumber">
      <summary>Obtiene el número de línea del atributo XML desconocido.</summary>
      <returns>Número de línea del atributo XML desconocido.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.LinePosition">
      <summary>Obtiene la posición de la línea del atributo XML desconocido.</summary>
      <returns>Número de posición del atributo XML desconocido.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized">
      <summary>Obtiene el objeto que se está deserializando.</summary>
      <returns>Objeto que se está deserializando.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeEventHandler">
      <summary>Representa el método que controla <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />.</summary>
      <param name="sender">Origen del evento.</param>
      <param name="e">Objeto <see cref="T:System.Xml.Serialization.XmlAttributeEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeOverrides">
      <summary>Permite reemplazar los atributos de las propiedades, campos y clases al utilizar <see cref="T:System.Xml.Serialization.XmlSerializer" /> para serializar o deserializar un objeto.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.XmlAttributes)">
      <summary>Agrega un objeto <see cref="T:System.Xml.Serialization.XmlAttributes" /> a la colección de objetos <see cref="T:System.Xml.Serialization.XmlAttributes" />. El parámetro <paramref name="type" /> especifica un objeto que se va a reemplazar. El parámetro <paramref name="member" /> especifica el nombre de un miembro que se va a reemplazar.</summary>
      <param name="type">
        <see cref="T:System.Type" /> del objeto que se va a reemplazar.</param>
      <param name="member">Nombre del miembro que se va a reemplazar.</param>
      <param name="attributes">Objeto <see cref="T:System.Xml.Serialization.XmlAttributes" /> que representa los atributos reemplazados.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.Xml.Serialization.XmlAttributes)">
      <summary>Agrega un objeto <see cref="T:System.Xml.Serialization.XmlAttributes" /> a la colección de objetos <see cref="T:System.Xml.Serialization.XmlAttributes" />. El parámetro <paramref name="type" /> especifica un objeto que va a ser reemplazado por el objeto <see cref="T:System.Xml.Serialization.XmlAttributes" />.</summary>
      <param name="type">Tipo <see cref="T:System.Type" /> del objeto que se va a reemplazar.</param>
      <param name="attributes">Objeto <see cref="T:System.Xml.Serialization.XmlAttributes" /> que representa los atributos reemplazados.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type)">
      <summary>Obtiene el objeto asociado al tipo de clase base especificado.</summary>
      <param name="type">Tipo <see cref="T:System.Type" /> de la clase base que está asociado a la colección de atributos que se desea recuperar.</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlAttributes" /> que representa la colección de atributos de reemplazo.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type,System.String)">
      <summary>Obtiene el objeto asociado al tipo (de clase base) especificado. El parámetro de miembro especifica el miembro de clase base que se reemplaza.</summary>
      <param name="type">Tipo <see cref="T:System.Type" /> de la clase base que está asociado a la colección de atributos que se desea.</param>
      <param name="member">Nombre del miembro reemplazado que especifica el objeto <see cref="T:System.Xml.Serialization.XmlAttributes" /> que se va a devolver.</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlAttributes" /> que representa la colección de atributos de reemplazo.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributes">
      <summary>Representa una colección de objetos de atributo que controlan el modo en que <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa y deserializa un objeto.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributes.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlAttributes" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlAttributes" /> y personaliza el modo cómo <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa y deserializa un objeto.</summary>
      <param name="provider">Clase que puede proporcionar implementaciones alternativas de atributos que controlan la serialización XML.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute">
      <summary>Obtiene o establece el <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /> que se va a reemplazar.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /> que se va a reemplazar.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
      <summary>Obtiene la colección de objetos <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> que se va a reemplazar.</summary>
      <returns>Objeto <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" /> que representa la colección de objetos <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlArray">
      <summary>Obtiene o establece un objeto que especifica el modo en que <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa un campo público o una propiedad pública de lectura/escritura que devuelve una matriz.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> que especifica el modo en que <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa un campo público o una propiedad pública de lectura/escritura que devuelve una matriz.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems">
      <summary>Obtiene o establece una colección de objetos que especifica el modo en que <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa los elementos insertados en una matriz devuelta por un campo público o una propiedad pública de lectura/escritura.</summary>
      <returns>Objeto <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" /> que contiene una colección de objetos <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
      <summary>Obtiene o establece un objeto que especifica el modo en que <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa un campo público o una propiedad pública de lectura/escritura como atributo XML.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> que controla la serialización de un campo público o una propiedad pública de lectura/escritura como atributo XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier">
      <summary>Obtiene o establece un objeto que permite distinguir entre varias opciones.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" /> que se puede aplicar a un miembro de clase serializado como un elemento <see langword="xsi:choice" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
      <summary>Obtiene o establece el valor predeterminado de un elemento o atributo XML.</summary>
      <returns>
        <see cref="T:System.Object" /> que representa el valor predeterminado de un elemento o atributo XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlElements">
      <summary>Obtiene una colección de objetos que especifican el modo en que <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa un campo público o una propiedad pública de lectura/escritura como elemento XML.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> que contiene una colección de objetos <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlEnum">
      <summary>Obtiene o establece un objeto que especifica el modo en que <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa un miembro de enumeración.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlEnumAttribute" /> que especifica el modo en que <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa un miembro de enumeración.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlIgnore">
      <summary>Obtiene o establece un valor que especifica si <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa o no un campo público o una propiedad pública de lectura/escritura.</summary>
      <returns>
        <see langword="true" /> si el objeto <see cref="T:System.Xml.Serialization.XmlSerializer" /> no debe serializar ni el campo ni la propiedad; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.Xmlns">
      <summary>Obtiene o establece un valor que especifica si se mantienen todas las declaraciones de espacio de nombres al reemplazar un objeto con un miembro que devuelve un objeto <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />.</summary>
      <returns>Es <see langword="true" />si deben mantenerse las declaraciones de espacio de nombres; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlRoot">
      <summary>Obtiene o establece un objeto que especifica el modo en que <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa una clase como elemento raíz XML.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> que reemplaza una clase con atributos de elemento raíz XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlText">
      <summary>Obtiene o establece un objeto que instruye al objeto <see cref="T:System.Xml.Serialization.XmlSerializer" /> para que serialice un campo público o una propiedad pública de lectura/escritura como texto XML.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlTextAttribute" /> que reemplaza la serialización predeterminada de un campo público o una propiedad pública.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlType">
      <summary>Obtiene o establece un objeto que especifica el modo en que <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa una clase a la que se ha aplicado el objeto <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> que reemplaza un <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> aplicado a una declaración de clase.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute">
      <summary>Especifica que el miembro se puede detectar mejor utilizando una enumeración.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />.</summary>
      <param name="name">El nombre de miembro que devuelve la enumeración se utiliza para detectar una elección.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlChoiceIdentifierAttribute.MemberName">
      <summary>Obtiene o establece el nombre del campo que devuelve la enumeración que se va a utilizar para detectar tipos.</summary>
      <returns>Nombre de un campo que devuelve una enumeración.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlDeserializationEvents">
      <summary>Contiene campos que se pueden utilizar para pasar los delegados de eventos a un método <see cref="Overload:System.Xml.Serialization.XmlSerializer.Deserialize" /> seguro para la ejecución de subprocesos de <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownAttribute_p">
      <summary>Obtiene o establece un objeto que representa el método que controla el evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlAttributeEventHandler" /> que señala al controlador de eventos.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownElement_p">
      <summary>Obtiene o establece un objeto que representa el método que controla el evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" />.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlElementEventHandler" /> que señala al controlador de eventos.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownNode_p">
      <summary>Obtiene o establece un objeto que representa el método que controla el evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" />.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlNodeEventHandler" /> que señala al controlador de eventos.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnreferencedObject_p">
      <summary>Obtiene o establece un objeto que representa el método que controla el evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" />.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.UnreferencedObjectEventHandler" /> que señala al controlador de eventos.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementAttributes">
      <summary>Representa una colección de objetos <see cref="T:System.Xml.Serialization.XmlElementAttribute" />, que <see cref="T:System.Xml.Serialization.XmlSerializer" /> utiliza para reemplazar la forma predeterminada en que serializa una clase.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlElementAttributes" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Add(System.Xml.Serialization.XmlElementAttribute)">
      <summary>Agrega un objeto <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> a la colección.</summary>
      <param name="attribute">
        <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> que se va a agregar.</param>
      <returns>Índice de base cero del elemento que acaba de agregarse.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Contains(System.Xml.Serialization.XmlElementAttribute)">
      <summary>Determina si la colección contiene el objeto especificado.</summary>
      <param name="attribute">
        <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> que se va a buscar.</param>
      <returns>Es <see langword="true" /> si el objeto existe en la colección; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.CopyTo(System.Xml.Serialization.XmlElementAttribute[],System.Int32)">
      <summary>Copia <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> o una parte de la misma en una matriz unidimensional.</summary>
      <param name="array">La matriz de <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> para contener los elementos copiados.</param>
      <param name="index">Índice de base cero en la <paramref name="array" /> donde comienza la copia.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.IndexOf(System.Xml.Serialization.XmlElementAttribute)">
      <summary>Obtiene el índice del objeto <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> especificado.</summary>
      <param name="attribute">
        <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> cuyo índice se recupera.</param>
      <returns>Índice de base cero de <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlElementAttribute)">
      <summary>Inserta <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> en la colección.</summary>
      <param name="index">Índice de base cero en el que se inserta el miembro.</param>
      <param name="attribute">
        <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> que se va a insertar.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttributes.Item(System.Int32)">
      <summary>Obtiene o establece el elemento en el índice especificado.</summary>
      <param name="index">Índice de base cero del elemento que se va a obtener o establecer.</param>
      <returns>Elemento en el índice especificado.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> no es un índice válido para <see cref="T:System.Xml.Serialization.XmlElementAttributes" />.</exception>
      <exception cref="T:System.NotSupportedException">La propiedad está establecida y <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> es de solo lectura.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Remove(System.Xml.Serialization.XmlElementAttribute)">
      <summary>Quita el objeto especificado de la colección.</summary>
      <param name="attribute">
        <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> que se va a quitar de la colección.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementEventArgs">
      <summary>Proporciona datos para el evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" />.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.Element">
      <summary>Obtiene el objeto que representa al elemento XML desconocido.</summary>
      <returns>Objeto que representa al elemento XML desconocido.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.ExpectedElements">
      <summary>Obtiene una lista delimitada por comas de los nombres de elementos XML que se espera que haya en una instancia de documento XML.</summary>
      <returns>Una lista delimitada por comas de nombres de elementos XML. Cada nombre tiene el formato siguiente: <paramref name="namespace" />:<paramref name="name" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.LineNumber">
      <summary>Obtiene el número de línea donde se ha detectado el elemento desconocido si el lector XML es un <see cref="T:System.Xml.XmlTextReader" />.</summary>
      <returns>Número de línea donde se ha detectado el elemento desconocido si el lector XML es un <see cref="T:System.Xml.XmlTextReader" />; en caso contrario, -1.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.LinePosition">
      <summary>Obtiene la ubicación en la línea donde se produce el elemento desconocido si el lector XML es un <see cref="T:System.Xml.XmlTextReader" />.</summary>
      <returns>Número en la línea donde se produce el elemento desconocido si el lector XML es un <see cref="T:System.Xml.XmlTextReader" />; en caso contrario, -1.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.ObjectBeingDeserialized">
      <summary>Obtiene el objeto que <see cref="T:System.Xml.Serialization.XmlSerializer" /> está deserializando.</summary>
      <returns>Objeto que está deserializando <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementEventHandler">
      <summary>Representa el método que controlará el evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> de un <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <param name="sender">Origen del evento.</param>
      <param name="e">Objeto <see cref="T:System.Xml.Serialization.XmlElementEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlIncludeAttribute">
      <summary>Permite que <see cref="T:System.Xml.Serialization.XmlSerializer" /> reconozca un tipo al serializar o deserializar un objeto.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlIncludeAttribute.#ctor(System.Type)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" />.</summary>
      <param name="type">
        <see cref="T:System.Type" /> del objeto que se va a incluir.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlIncludeAttribute.Type">
      <summary>Obtiene o establece el tipo de objeto que se va a incluir.</summary>
      <returns>
        <see cref="T:System.Type" /> del objeto que se va a incluir.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMapping">
      <summary>Admite asignaciones entre tipos de .NET Framework y tipos de datos de esquemas XML.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.ElementName">
      <summary>Obtiene el nombre del elemento asignado.</summary>
      <returns>El nombre del elemento asignado.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.Namespace">
      <summary>Obtiene el espacio de nombres del elemento asignado.</summary>
      <returns>El espacio de nombres del elemento asignado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlMapping.SetKey(System.String)">
      <summary>Establece la clave utilizada para buscar la asignación.</summary>
      <param name="key">Clave de búsqueda.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.XsdElementName">
      <summary>Obtiene el nombre del elemento XSD de la asignación.</summary>
      <returns>El nombre del elemento XSD.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMappingAccess">
      <summary>Especifica si una asignación se lee, se escribe o ambas cosas.</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.None">
      <summary>Se generan métodos de lectura y escritura.</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.Read">
      <summary>Se generan métodos de lectura.</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.Write">
      <summary>Se generan métodos de escritura.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlMemberMapping">
      <summary>Asigna una entidad de código de un método del servicio Web de .NET Framework a un elemento de un mensaje escrito en Lenguaje de descripción de servicios Web (WSDL).</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.Any">
      <summary>Obtiene o establece un valor que indica si el tipo de .NET Framework se asigna a un elemento o atributo XML de cualquier tipo.</summary>
      <returns>
        <see langword="true" />, si el tipo asigna se a cualquier elemento o atributo XML; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.CheckSpecified">
      <summary>Obtiene un valor que indica si el campo que acompaña al tipo de .NET Framework tiene un valor especificado.</summary>
      <returns>
        <see langword="true" />, si el campo acompañante tiene un valor especificado; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.ElementName">
      <summary>Obtiene el nombre incompleto de la declaración de elemento XML que se aplica a esta asignación.</summary>
      <returns>Nombre incompleto de la declaración de elemento XML que se aplica a esta asignación.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.MemberName">
      <summary>Obtiene el nombre del miembro de método de servicio Web representado por esta asignación.</summary>
      <returns>Nombre del miembro de método de servicio Web representado por esta asignación.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.Namespace">
      <summary>Obtiene el espacio de nombres XML que se aplica a esta asignación.</summary>
      <returns>Espacio de nombres XML que se aplica a esta asignación.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeFullName">
      <summary>Obtiene el nombre de tipo completo del tipo de .NET Framework para esta asignación.</summary>
      <returns>Nombre de tipo completo del tipo de .NET Framework para esta asignación.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeName">
      <summary>Obtiene el nombre de tipo del tipo de .NET Framework para esta asignación.</summary>
      <returns>Nombre de tipo del tipo de .NET Framework para esta asignación.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeNamespace">
      <summary>Obtiene el espacio de nombres del tipo de .NET Framework para esta asignación.</summary>
      <returns>Espacio de nombres del tipo de .NET Framework para esta asignación.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.XsdElementName">
      <summary>Obtiene el nombre del elemento XML tal y como aparece en el documento de descripción del servicio.</summary>
      <returns>Nombre del elemento XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMembersMapping">
      <summary>Proporciona asignaciones entre los métodos del servicio Web de .NET Framework y los mensajes del lenguaje de descripción de servicios Web (WSDL) que se definen para los servicios Web de SOAP.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.Count">
      <summary>Obtiene el número de entidades de código de .NET Framework que pertenecen a un método de servicio Web al que se asigna un mensaje SOAP.</summary>
      <returns>Número de asignaciones de la colección.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.Item(System.Int32)">
      <summary>Obtiene un elemento que contiene información de asignación de tipo interno para una entidad de código de .NET Framework que pertenece a un método de servicio Web que se va a asignar a un mensaje SOAP.</summary>
      <param name="index">El índice de la asignación que se va a devolver.</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlMemberMapping" /> solicitado.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.TypeName">
      <summary>Obtiene el nombre del tipo de .NET Framework que se va a asignar al tipo de datos de un elemento de esquema XML que representa un mensaje SOAP.</summary>
      <returns>El nombre del tipo de .NET Framework.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.TypeNamespace">
      <summary>Obtiene el espacio de nombres del tipo de .NET Framework que se va a asignar al tipo de datos de un elemento de esquema XML que representa un mensaje SOAP.</summary>
      <returns>El espacio de nombres de .NET Framework de la asignación.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlNodeEventArgs">
      <summary>Proporciona datos para el evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" />.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LineNumber">
      <summary>Obtiene el número de línea del nodo XML desconocido.</summary>
      <returns>Número de línea del nodo XML desconocido.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LinePosition">
      <summary>Obtiene la posición de la línea del nodo XML desconocido.</summary>
      <returns>Número de posición del nodo XML desconocido.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LocalName">
      <summary>Obtiene el nombre local XML del nodo XML que se está deserializando.</summary>
      <returns>Nombre local XML del nodo que se está deserializando.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.Name">
      <summary>Obtiene el nombre del nodo XML que se está deserializando.</summary>
      <returns>Nombre del nodo que se está deserializando.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.NamespaceURI">
      <summary>Obtiene el URI de espacio de nombres asociado al nodo XML que se está deserializando.</summary>
      <returns>URI de espacio de nombres asociado al nodo XML que se está deserializando.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.NodeType">
      <summary>Obtiene el tipo de nodo XML que se está deserializando.</summary>
      <returns>
        <see cref="T:System.Xml.XmlNodeType" /> que representa el nodo XML que se está deserializando.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.ObjectBeingDeserialized">
      <summary>Obtiene el objeto que se está deserializando.</summary>
      <returns>
        <see cref="T:System.Object" /> que se está deserializando.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.Text">
      <summary>Obtiene el texto del nodo XML que se está deserializando.</summary>
      <returns>Texto del nodo XML que se está deserializando.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlNodeEventHandler">
      <summary>Representa el método que controlará el evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> de un <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <param name="sender">Origen del evento.</param>
      <param name="e">Objeto <see cref="T:System.Xml.Serialization.XmlNodeEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlReflectionImporter">
      <summary>Genera asignaciones a declaraciones de elementos de esquema XML, incluidas las partes de mensaje literales de definición de esquemas XML (XSD) de un documento escrito en lenguaje de descripción de servicios Web (WSDL), para los tipos de .NET Framework o la información del método de servicio Web.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlReflectionImporter" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> mediante el espacio de nombres XML predeterminado especificado.</summary>
      <param name="defaultNamespace">Espacio de nombres XML predeterminado que se utilizará para las asignaciones de tipo importadas.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> utilizando las omisiones de serialización XML especificadas.</summary>
      <param name="attributeOverrides">Un objeto que omite cómo la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa los tipos asignados.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides,System.String)">
      <summary>Se inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> utilizando las omisiones de serialización XML especificadas y el espacio de nombres XML predeterminado.</summary>
      <param name="attributeOverrides">Un objeto que omite cómo la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa los tipos asignados.</param>
      <param name="defaultNamespace">Espacio de nombres XML predeterminado que se utilizará para las asignaciones de tipo importadas.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean)">
      <summary>Genera las asignaciones de tipo internas para obtener información de un método de servicio Web.</summary>
      <param name="elementName">Nombre de un elemento XML producido desde el método de servicio Web.</param>
      <param name="ns">Espacio de nombres del elemento XML producido desde el método de servicio Web.</param>
      <param name="members">Matriz de objetos <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> que contiene entidades de código de .NET Framework que pertenecen a un método de servicio Web.</param>
      <param name="hasWrapperElement">
        <see langword="true" /> si deberían incluirse los elementos que corresponden a partes del mensaje de lenguaje de descripción de servicios Web (WSDL) en un elemento contenedor adicional de mensajes SOAP; en caso contrario, <see langword="false" />.</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> con asignaciones a las partes de elemento de una definición de mensaje WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)">
      <summary>Devuelve asignaciones de tipo internas que usan información de un método de servicio Web y permite especificar un nombre de elemento XML, un espacio de nombres XML y otras opciones.</summary>
      <param name="elementName">Nombre de un elemento XML producido desde el método de servicio Web.</param>
      <param name="ns">Espacio de nombres del elemento XML producido desde el método de servicio Web.</param>
      <param name="members">Matriz de objetos <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> que contiene entidades de código de .NET Framework que pertenecen a un método de servicio Web.</param>
      <param name="hasWrapperElement">
        <see langword="true" /> si deberían incluirse los elementos que corresponden a partes del mensaje de lenguaje de descripción de servicios Web (WSDL) en un elemento contenedor adicional de mensajes SOAP; en caso contrario, <see langword="false" />.</param>
      <param name="rpc">
        <see langword="true" /> si el método es una llamada a procedimiento remoto; de lo contrario, <see langword="false" />.</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> que contiene las asignaciones.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)">
      <summary>Devuelve asignaciones de tipo internas que usan información de un método de servicio Web y permite especificar un nombre de elemento XML, un espacio de nombres XML y otras opciones.</summary>
      <param name="elementName">Nombre de un elemento XML producido desde el método de servicio Web.</param>
      <param name="ns">Espacio de nombres del elemento XML producido desde el método de servicio Web.</param>
      <param name="members">Matriz de objetos <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> que contiene entidades de código de .NET Framework que pertenecen a un método de servicio Web.</param>
      <param name="hasWrapperElement">
        <see langword="true" /> si deberían incluirse los elementos que corresponden a partes del mensaje de lenguaje de descripción de servicios Web (WSDL) en un elemento contenedor adicional de mensajes SOAP; en caso contrario, <see langword="false" />.</param>
      <param name="rpc">
        <see langword="true" /> si el método es una llamada a procedimiento remoto; de lo contrario, <see langword="false" />.</param>
      <param name="openModel">
        <see langword="true" /> para especificar que el tipo de esquema generado se marcará con el elemento <see langword="&lt;xs:anyAttribute&gt;" />; de lo contrario, <see langword="false" />.</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> que contiene las asignaciones.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)">
      <summary>Genera las asignaciones de tipo internas para obtener información de un método de servicio Web.</summary>
      <param name="elementName">Nombre de un elemento XML producido desde el método de servicio Web.</param>
      <param name="ns">Espacio de nombres del elemento XML producido desde el método de servicio Web.</param>
      <param name="members">Matriz de objetos <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> que contiene entidades de código de .NET Framework que pertenecen a un método de servicio Web.</param>
      <param name="hasWrapperElement">
        <see langword="true" /> si deberían incluirse los elementos que corresponden a partes del mensaje de lenguaje de descripción de servicios Web (WSDL) en un elemento contenedor adicional de mensajes SOAP; en caso contrario, <see langword="false" />.</param>
      <param name="rpc">
        <see langword="true" /> si el método es una llamada a procedimiento remoto; de lo contrario, <see langword="false" />.</param>
      <param name="openModel">
        <see langword="true" /> para especificar que el tipo de esquema generado se marcará con el elemento <see langword="&lt;xs:anyAttribute&gt;" />; de lo contrario, <see langword="false" />.</param>
      <param name="access">Uno de los valores de <see cref="T:System.Xml.Serialization.XmlMappingAccess" />. De manera predeterminada, es <see langword="None" />.</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> que contiene las asignaciones.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type)">
      <summary>Genera una asignación a un elemento del esquema XML para un tipo de .NET Framework especificado.</summary>
      <param name="type">El tipo de .NET Framework para el que se genera una asignación de tipos.</param>
      <returns>Asignación .NET Framework interna de un tipo a un elemento de esquema XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.String)">
      <summary>Genera una asignación a un elemento de esquema XML para un tipo de .NET Framework, utilizando el tipo y el espacio de nombres especificados.</summary>
      <param name="type">El tipo de .NET Framework para el que se genera una asignación de tipos.</param>
      <param name="defaultNamespace">El espacio de nombres XML predeterminado que se va a utilizar.</param>
      <returns>Asignación .NET Framework interna de un tipo a un elemento de esquema XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary>Genera una asignación a un elemento de esquema XML para un tipo de .NET Framework, utilizando el tipo y el atributo especificados.</summary>
      <param name="type">El tipo de .NET Framework para el que se genera una asignación de tipos.</param>
      <param name="root">Un atributo <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> que se aplica al tipo.</param>
      <returns>Un <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> que representa una asignación de un tipo de .NET Framework a un elemento de esquema XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary>Genera una asignación a un elemento de esquema XML para un tipo de .NET Framework, utilizando el tipo, el atributo y el espacio de nombres especificados.</summary>
      <param name="type">El tipo de .NET Framework para el que se genera una asignación de tipos.</param>
      <param name="root">Un atributo <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> que se aplica al tipo.</param>
      <param name="defaultNamespace">El espacio de nombres XML predeterminado que se va a utilizar.</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> que contiene la asignación .NET Framework interna de un tipo a un elemento de esquema XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.IncludeType(System.Type)">
      <summary>Incluye asignaciones para un tipo para su uso posterior cuando se invoquen los métodos de importación.</summary>
      <param name="type">El tipo de .NET Framework para el que se guarda la información de asignación de tipos.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)">
      <summary>Incluye asignaciones para los tipos derivados para su uso posterior cuando se invoquen los métodos de importación.</summary>
      <param name="provider">Una instancia de la clase <see cref="T:System.Reflection.ICustomAttributeProvider" /> que contiene los atributos personalizados derivados del atributo <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" />.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlReflectionMember">
      <summary>Proporciona asignaciones entre las entidades de código de los métodos del servicio Web de .NET Framework y el contenido de los mensajes del lenguaje de descripción de servicios Web (WSDL) que se definen para los servicios Web de SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionMember.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlReflectionMember" />.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.IsReturnValue">
      <summary>Obtiene o establece un valor que indica si <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> representa un valor devuelto de método de servicio Web, como opuesto a un parámetro de salida.</summary>
      <returns>
        <see langword="true" />, si el miembro representa un valor devuelto del servicio Web; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.MemberName">
      <summary>Obtiene o establece el nombre del miembro de método de servicios Web para esta asignación.</summary>
      <returns>Nombre del método de servicios Web.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.MemberType">
      <summary>Obtiene o establece el tipo de la entidad de código del miembro de método de servicios Web que se representa mediante esta asignación.</summary>
      <returns>
        <see cref="T:System.Type" /> de la entidad de código del miembro de método de servicios Web que se representa mediante esta asignación.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.OverrideIsNullable">
      <summary>Obtiene o establece un valor que indica que el valor del atributo <c>isNullable</c> de la definición del elemento XML correspondiente es <see langword="false" />.</summary>
      <returns>
        <see langword="true" /> para reemplazar la propiedad <see cref="P:System.Xml.Serialization.XmlElementAttribute.IsNullable" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.SoapAttributes">
      <summary>Obtiene o establece <see cref="T:System.Xml.Serialization.SoapAttributes" /> con la colección de atributos relacionados con SOAP que se han aplicado a la entidad de código de miembro.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.SoapAttributes" /> que contiene los objetos que representan los atributos SOAP aplicados al miembro.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.XmlAttributes">
      <summary>Obtiene o establece <see cref="T:System.Xml.Serialization.XmlAttributes" /> con la colección de atributos relacionados con <see cref="T:System.Xml.Serialization.XmlSerializer" /> que se han aplicado a la entidad de código de miembro.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlAttributes" /> que representa atributos XML que se han aplicado al código de miembro.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaEnumerator">
      <summary>Habilita la iteración sobre una colección de objetos <see cref="T:System.Xml.Schema.XmlSchema" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSchemaEnumerator" />.</summary>
      <param name="list">El objeto <see cref="T:System.Xml.Serialization.XmlSchemas" /> que desea recorrer en iteración.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaEnumerator.Current">
      <summary>Obtiene el elemento actual de la colección.</summary>
      <returns>El objeto <see cref="T:System.Xml.Schema.XmlSchema" /> actual de la colección.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.Dispose">
      <summary>Libera todos los recursos que usa <see cref="T:System.Xml.Serialization.XmlSchemaEnumerator" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.MoveNext">
      <summary>Desplaza el enumerador al siguiente elemento de la colección.</summary>
      <returns>
        <see langword="true" /> si el movimiento es correcto; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaEnumerator.System#Collections#IEnumerator#Current">
      <summary>Obtiene el elemento actual de la colección de objetos <see cref="T:System.Xml.Schema.XmlSchema" />.</summary>
      <returns>Elemento actual de la colección de objetos <see cref="T:System.Xml.Schema.XmlSchema" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.System#Collections#IEnumerator#Reset">
      <summary>Establece el enumerador en su posición inicial, que es delante del primer elemento de la colección de objetos <see cref="T:System.Xml.Schema.XmlSchema" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaExporter">
      <summary>Rellena los objetos <see cref="T:System.Xml.Schema.XmlSchema" /> con declaraciones del elemento de esquema XML que se encuentran en los objetos de asignación de tipo.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSchemaExporter" />.</summary>
      <param name="schemas">Colección de objetos <see cref="T:System.Xml.Schema.XmlSchema" /> a los que se agregan las declaraciones del elemento obtenidas de las asignaciones de tipo.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType(System.String)">
      <summary>Exporta un elemento &lt;any&gt;  al objeto <see cref="T:System.Xml.Schema.XmlSchema" /> identificado por el espacio de nombres especificado.</summary>
      <param name="ns">El espacio de nombres del documento de esquema XML al que se va a agregar un elemento &lt;any&gt;.</param>
      <returns>Un nombre arbitrario asignado a la declaración de elemento &lt;any&gt;.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType(System.Xml.Serialization.XmlMembersMapping)">
      <summary>Agrega una declaración de elemento para un objeto o tipo a un mensaje SOAP o a un objeto <see cref="T:System.Xml.Schema.XmlSchema" />.</summary>
      <param name="members">
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> que contiene las asignaciones que se van a exportar.</param>
      <returns>La cadena "any" con un entero anexado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping)">
      <summary>Agrega una declaración del elemento al <see cref="T:System.Xml.Schema.XmlSchema" /> aplicable para cada una de las partes que componen una definición literal del mensaje SOAP.</summary>
      <param name="xmlMembersMapping">Asignaciones internas de tipo de .NET Framework para las partes que componen una definición de mensaje de Lenguaje de descripción de servicios Web (WSDL).</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping,System.Boolean)">
      <summary>Agrega una declaración del elemento al <see cref="T:System.Xml.Schema.XmlSchema" /> aplicable para cada una de las partes que componen una definición literal del mensaje SOAP y especifica si están incluidos los elementos envolventes.</summary>
      <param name="xmlMembersMapping">Asignación interna entre un tipo de .NET Framework y un elemento de esquema XML.</param>
      <param name="exportEnclosingType">
        <see langword="true" /> si los elementos de esquema que incluyen el esquema se van a incluir; de lo contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlMembersMapping)">
      <summary>Agrega una declaración de elemento al objeto <see cref="T:System.Xml.Schema.XmlSchema" /> aplicable para una parte de elemento única de una definición literal del mensaje SOAP.</summary>
      <param name="xmlMembersMapping">Asignaciones internas de tipo de .NET Framework para las partes que componen una definición de mensaje de Lenguaje de descripción de servicios Web (WSDL).</param>
      <returns>
        <see cref="T:System.Xml.XmlQualifiedName" /> que representa el nombre XML calificado de la declaración de elemento exportada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlTypeMapping)">
      <summary>Agrega una declaración de elemento para un tipo de .NET Framework al objeto <see cref="T:System.Xml.Schema.XmlSchema" /> aplicable.</summary>
      <param name="xmlTypeMapping">Asignación interna entre un tipo de .NET Framework y un elemento de esquema XML.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaImporter">
      <summary>Genera las asignaciones internas a los tipos de .NET Framework para las declaraciones del elemento de esquema XML, incluidas las partes literales del mensaje XSD en un documento WSDL.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSchemaImporter" />, tomando una colección de objetos <see cref="T:System.Xml.Schema.XmlSchema" /> que representan los esquemas XML utilizados por los mensajes literales de SOAP definidos en un documento WSDL.</summary>
      <param name="schemas">Una colección de objetos <see cref="T:System.Xml.Schema.XmlSchema" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeIdentifiers)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSchemaImporter" />, tomando una colección de objetos <see cref="T:System.Xml.Schema.XmlSchema" /> que representan los esquemas XML utilizados por los mensajes literales de SOAP, además de las clases generadas para los enlaces definidos en un documento de lenguaje de descripción de servicios Web (WSDL).</summary>
      <param name="schemas">Un objeto <see cref="T:System.Xml.Serialization.XmlSchemas" />.</param>
      <param name="typeIdentifiers">Un objeto <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> que especifica una colección de clases que se generan para los enlaces definidos en un documento WSDL.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportAnyType(System.Xml.XmlQualifiedName,System.String)">
      <summary>Genera información de asignación de tipo interna para una única parte componente literal (SOAP) definida en un documento WSDL.</summary>
      <param name="typeName">
        <see cref="T:System.Xml.XmlQualifiedName" /> que especifica el nombre de un tipo de elemento para el que se genera un tipo de .NET Framework.</param>
      <param name="elementName">El nombre del elemento de parte en el documento WSDL.</param>
      <returns>Una <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> representando la asignación de tipo .NET Framework para una parte componente única de una definición de mensaje WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type)">
      <summary>Genera información interna de asignación de tipos para un elemento definido en un documento de esquema XML.</summary>
      <param name="name">
        <see cref="T:System.Xml.XmlQualifiedName" /> que especifica el nombre de un elemento definido en un documento de esquema XML.</param>
      <param name="baseType">Un tipo base para el tipo .NET Framework que se genera para corresponder a un tipo de elemento de XSD.</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> que representa la información de asignación de tipos de .NET Framework para un elemento de esquema XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type,System.Boolean)">
      <summary>Genera la información de asignación de tipos interna por un elemento definido en un documento de esquema XML o como parte de un documento WSDL.</summary>
      <param name="name">
        <see cref="T:System.Xml.XmlQualifiedName" /> que especifica el nombre de un elemento definido en un documento de esquema XML.</param>
      <param name="baseType">Un tipo base para el tipo .NET Framework que se genera para corresponder a un tipo de elemento de XSD.</param>
      <param name="baseTypeCanBeIndirect">
        <see langword="true" /> para indicar que el tipo que corresponde a un elemento XSD puede heredar indirectamente del tipo base; de lo contrario, <see langword="false" />.</param>
      <returns>Información de asignación de tipos de .NET Framework para un elemento del esquema XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember[])">
      <summary>Genera información interna de asignación de tipos de las partes componentes de un mensaje SOAP de uso literal definido en un documento WSDL.</summary>
      <param name="name">Nombre del elemento para el que se va a generar una asignación.</param>
      <param name="ns">Espacio de nombres del elemento para el que se va a generar una asignación.</param>
      <param name="members">Matriz de instancias <see cref="T:System.Xml.Serialization.SoapSchemaMember" /> que especifica los miembros del elemento para el que se va a generar una asignación.</param>
      <returns>Un <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> que contiene información de asignación de tipo.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName)">
      <summary>Genera información de asignación de tipos interna para una parte componente única de un mensaje SOAP de uso literal definido en un documento WSDL.</summary>
      <param name="name">
        <see cref="T:System.Xml.XmlQualifiedName" /> que especifica el nombre de la parte del mensaje.</param>
      <returns>La asignación de tipos de .NET Framework para una definición del mensaje WSDL que contiene una parte componente única.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName[])">
      <summary>Genera información interna de asignación de tipos de las partes componentes de un mensaje SOAP de uso literal definido en un documento WSDL.</summary>
      <param name="names">Una matriz de tipo <see cref="T:System.Xml.XmlQualifiedName" /> que especifica los nombres de las partes del mensaje.</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> que representa las asignaciones de tipos .NET Framework para las partes componentes de una definición de mensaje WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName[],System.Type,System.Boolean)">
      <summary>Genera información interna de asignación de tipos de las partes componentes de un mensaje SOAP de uso literal definido en un documento WSDL.</summary>
      <param name="names">Una matriz de tipo <see cref="T:System.Xml.XmlQualifiedName" /> que especifica los nombres de las partes del mensaje.</param>
      <param name="baseType">Un tipo base para todos los tipos de .NET Framework que se generan para corresponder a las partes del mensaje.</param>
      <param name="baseTypeCanBeIndirect">
        <see langword="true" /> para indicar que los tipos que corresponden a las partes del mensaje pueden heredar indirectamente del tipo base; de lo contrario, <see langword="false" />.</param>
      <returns>Asignaciones de tipos de .NET Framework para las partes componentes de una definición de mensaje WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName)">
      <summary>Genera información interna de asignación de tipos para un elemento definido en un documento de esquema XML.</summary>
      <param name="typeName">Objeto <see cref="T:System.Xml.XmlQualifiedName" /> que especifica un elemento XML.</param>
      <returns>Objeto <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> que describe una asignación de tipo.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName,System.Type)">
      <summary>Genera información interna de asignación de tipos para un elemento definido en un documento de esquema XML.</summary>
      <param name="typeName">Objeto <see cref="T:System.Xml.XmlQualifiedName" /> que especifica un elemento XML.</param>
      <param name="baseType">Objeto <see cref="T:System.Type" /> que especifica un tipo base.</param>
      <returns>Objeto <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> que describe una asignación de tipo.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName,System.Type,System.Boolean)">
      <summary>Genera información interna de asignación de tipos para un elemento definido en un documento de esquema XML.</summary>
      <param name="typeName">Objeto <see cref="T:System.Xml.XmlQualifiedName" /> que especifica un elemento XML.</param>
      <param name="baseType">Objeto <see cref="T:System.Type" /> que especifica un tipo base.</param>
      <param name="baseTypeCanBeIndirect">Valor <see cref="T:System.Boolean" /> que especifica si el tipo generado puede heredar indirectamente el <paramref name="baseType" />.</param>
      <returns>Objeto <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> que describe una asignación de tipo.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportTypeMapping(System.Xml.XmlQualifiedName)">
      <summary>Genera información interna de asignación de tipos para un elemento definido en un documento de esquema XML.</summary>
      <param name="name">
        <see cref="T:System.Xml.XmlQualifiedName" /> que especifica el nombre de un elemento definido en un documento de esquema XML.</param>
      <returns>Información de asignación de tipos de .NET Framework para un elemento del esquema XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemas">
      <summary>Representa la colección de esquemas XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Schema.XmlSchema)">
      <summary>Agrega un objeto al final de la colección.</summary>
      <param name="schema">Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que se va a agregar a la colección de objetos.</param>
      <returns>Índice en el que se agrega el objeto <see cref="T:System.Xml.Schema.XmlSchema" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Schema.XmlSchema,System.Uri)">
      <summary>Agrega un objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que representa una referencia de ensamblado a la colección.</summary>
      <param name="schema">
        <see cref="T:System.Xml.Schema.XmlSchema" /> que se va a agregar.</param>
      <param name="baseUri">
        <see cref="T:System.Uri" /> del objeto de esquema.</param>
      <returns>Índice en el que se agrega el objeto <see cref="T:System.Xml.Schema.XmlSchema" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Serialization.XmlSchemas)">
      <summary>Agrega una instancia de la clase <see cref="T:System.Xml.Serialization.XmlSchemas" /> al final de la colección.</summary>
      <param name="schemas">Objeto <see cref="T:System.Xml.Serialization.XmlSchemas" /> que se va a agregar al final de la colección.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.AddReference(System.Xml.Schema.XmlSchema)">
      <summary>Agrega un objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que representa una referencia de ensamblado a la colección.</summary>
      <param name="schema">
        <see cref="T:System.Xml.Schema.XmlSchema" /> que se va a agregar.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Compile(System.Xml.Schema.ValidationEventHandler,System.Boolean)">
      <summary>Procesa el elemento y los nombres de atributo de los esquemas XML y, opcionalmente, valida los esquemas XML.</summary>
      <param name="handler">Delegado <see cref="T:System.Xml.Schema.ValidationEventHandler" /> que especifica el método de devolución de llamada que controla los errores y las advertencias durante la validación de esquemas XML, si el parámetro strict se establece en <see langword="true" />.</param>
      <param name="fullCompile">
        <see langword="true" /> para validar los esquemas XML de la colección utilizando el método <see cref="M:System.Xml.Serialization.XmlSchemas.Compile(System.Xml.Schema.ValidationEventHandler,System.Boolean)" /> de la clase <see cref="T:System.Xml.Serialization.XmlSchemas" />; en caso contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Contains(System.String)">
      <summary>Devuelve un valor que indica si la colección contiene un objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que pertenece al espacio de nombres especificado.</summary>
      <param name="targetNamespace">Espacio de nombres del elemento que se va a comprobar.</param>
      <returns>
        <see langword="true" /> si se encuentra el elemento; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Contains(System.Xml.Schema.XmlSchema)">
      <summary>Determina si la clase <see cref="T:System.Xml.Serialization.XmlSchemas" /> contiene un esquema específico.</summary>
      <param name="schema">Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que se va a buscar.</param>
      <returns>
        <see langword="true" /> si la colección contiene el elemento especificado; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
      <summary>Copia la clase <see cref="T:System.Xml.Serialization.XmlSchemas" /> completa en un objeto <see cref="T:System.Array" /> unidimensional compatible, empezando en el índice especificado de la matriz de destino.</summary>
      <param name="array">Objeto <see cref="T:System.Array" /> unidimensional que constituye el destino de los esquemas copiados desde la clase <see cref="T:System.Xml.Serialization.XmlSchemas" />. <see cref="T:System.Array" /> debe tener una indización de base cero.</param>
      <param name="index">Entero de 32 bits que representa el índice de la matriz donde comienza la copia.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Find(System.Xml.XmlQualifiedName,System.Type)">
      <summary>Busca en uno de los esquemas XML un objeto <see cref="T:System.Xml.Schema.XmlSchemaObject" /> del nombre y tipo especificados.</summary>
      <param name="name">
        <see cref="T:System.Xml.XmlQualifiedName" /> que especifica un nombre completo con un espacio de nombres utilizado para buscar un objeto <see cref="T:System.Xml.Schema.XmlSchema" /> en la colección.</param>
      <param name="type">
        <see cref="T:System.Type" /> del objeto que se va a buscar. Entre los posibles tipos se incluyen <see cref="T:System.Xml.Schema.XmlSchemaGroup" />, <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroup" />, <see cref="T:System.Xml.Schema.XmlSchemaElement" />, <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> y <see cref="T:System.Xml.Schema.XmlSchemaNotation" />.</param>
      <returns>Una instancia de <see cref="T:System.Xml.Schema.XmlSchemaObject" />, por ejemplo, una clase <see cref="T:System.Xml.Schema.XmlSchemaElement" /> o <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.GetSchemas(System.String)">
      <summary>Obtiene una colección de esquemas que pertenecen al mismo espacio de nombres.</summary>
      <param name="ns">Espacio de nombres de los esquemas que se van a recuperar.</param>
      <returns>Una implementación de la interfaz <see cref="T:System.Collections.IList" /> que contiene los esquemas.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.IndexOf(System.Xml.Schema.XmlSchema)">
      <summary>Busca el esquema especificado y devuelve el índice de base cero de la primera aparición en la clase <see cref="T:System.Xml.Serialization.XmlSchemas" /> completa.</summary>
      <param name="schema">Clase <see cref="T:System.Xml.Schema.XmlSchema" /> que se va a localizar.</param>
      <returns>Índice de base cero de la primera aparición del valor en la clase <see cref="T:System.Xml.Serialization.XmlSchemas" /> completa, si se encuentra; en caso contrario, -1.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Insert(System.Int32,System.Xml.Schema.XmlSchema)">
      <summary>Inserta un esquema en la clase <see cref="T:System.Xml.Serialization.XmlSchemas" /> en el índice especificado.</summary>
      <param name="index">Índice basado en cero en el que debe insertarse <paramref name="schema" />.</param>
      <param name="schema">Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que se va a insertar.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.IsCompiled">
      <summary>Obtiene un valor que indica si se han compilado los esquemas.</summary>
      <returns>
        <see langword="true" />, si los esquemas se han compilado; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.IsDataSet(System.Xml.Schema.XmlSchema)">
      <summary>Método estático que determina si el esquema XML especificado contiene un atributo <see langword="IsDataSet" /> personalizado establecido en <see langword="true" />, o su equivalente.</summary>
      <param name="schema">Esquema XML para el que se va a comprobar si existe un atributo <see langword="IsDataSet" /> con un valor <see langword="true" />.</param>
      <returns>
        <see langword="true" /> si existe el esquema especificado; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.Item(System.Int32)">
      <summary>Obtiene o establece el objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que se encuentra en el índice especificado.</summary>
      <param name="index">Índice del elemento que se va a recuperar.</param>
      <returns>Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> especificado.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.Item(System.String)">
      <summary>Obtiene un objeto <see cref="T:System.Xml.Schema.XmlSchema" /> especificado que representa el esquema XML asociado al espacio de nombres especificado.</summary>
      <param name="ns">Espacio de nombres del objeto especificado.</param>
      <returns>Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> especificado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnClear">
      <summary>Realiza procesos de personalización adicionales al borrar el contenido de la instancia de <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnInsert(System.Int32,System.Object)">
      <summary>Realiza procesos personalizados adicionales antes de insertar un nuevo elemento en la instancia de <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
      <param name="index">Índice de base cero en el que se va a insertar <paramref name="value" />.</param>
      <param name="value">Nuevo valor del elemento situado en <paramref name="index" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnRemove(System.Int32,System.Object)">
      <summary>Realiza procesos de personalización adicionales al quitar un elemento de la instancia de <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
      <param name="index">Índice de base cero en el que se puede encontrar <paramref name="value" />.</param>
      <param name="value">Valor del elemento que se va a quitar de <paramref name="index" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnSet(System.Int32,System.Object,System.Object)">
      <summary>Realiza procesos personalizados adicionales antes de establecer un valor en la instancia de <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
      <param name="index">Índice de base cero en el que se puede encontrar <paramref name="oldValue" />.</param>
      <param name="oldValue">Valor que se va a reemplazar por <paramref name="newValue" />.</param>
      <param name="newValue">Nuevo valor del elemento situado en <paramref name="index" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Remove(System.Xml.Schema.XmlSchema)">
      <summary>Quita la primera aparición de un esquema concreto de <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
      <param name="schema">
        <see cref="T:System.Xml.Schema.XmlSchema" /> que se va a quitar.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.System#Collections#Generic#IEnumerable{System#Xml#Schema#XmlSchema}#GetEnumerator">
      <summary>Devuelve un enumerador que recorre en iteración la colección de esquemas XML.</summary>
      <returns>Objeto <see cref="T:System.Collections.IEnumerator" /> que puede usarse para recorrer en iteración la colección.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback">
      <summary>Delegado utilizado por la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> para la deserialización de tipos de datos XML codificados en SOAP que se asignan a colecciones o enumeraciones.</summary>
      <param name="collection">Colección en la que se copia la matriz de elementos de colección.</param>
      <param name="collectionItems">Matriz de elementos que se va a copiar en la <c>colección de objetos</c>.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationFixupCallback">
      <summary>Delegado utilizado por la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> para la deserialización de datos XML con codificación SOAP.</summary>
      <param name="fixup">Una instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializationReader.Fixup" /> que contiene el objeto que se va a fijar y la matriz de los identificadores de cadena para los elementos que hay que rellenar.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationGeneratedCode">
      <summary>Clase abstracta que es la clase base para <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> y <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> y que contiene los métodos comunes a ambos tipos.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationGeneratedCode.#ctor">
      <summary>Inicializa una instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializationGeneratedCode" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReadCallback">
      <summary>Delegado utilizado por la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> para la deserialización de tipos con respecto a datos sin raíz XML codificados en SOAP.</summary>
      <returns>Objeto devuelto por la devolución de llamada.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader">
      <summary>Controla la deserialización por la clase <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializationReader" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.CollectionFixup)">
      <summary>Almacena un objeto que contiene un método de devolución de llamada al que se llamará, cuanto sea necesario, para rellenar colecciones o enumeraciones de .NET Framework que se asignen a matrices codificadas con SOAP o a elementos con referencias múltiples y codificación SOAP.</summary>
      <param name="fixup">Un delegado <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> y los datos de entrada del método de devolución de llamada.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.Fixup)">
      <summary>Almacena un objeto que contiene una instancia del método de devolución de llamada al que se llamará, según sea necesario, para rellenar los objetos de una matriz codificada con SOAP.</summary>
      <param name="fixup">Un delegado <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> y los datos de entrada del método de devolución de llamada.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddReadCallback(System.String,System.String,System.Type,System.Xml.Serialization.XmlSerializationReadCallback)">
      <summary>Almacena una implementación del delegado <see cref="T:System.Xml.Serialization.XmlSerializationReadCallback" /> y sus datos de entrada para una invocación posterior.</summary>
      <param name="name">El nombre del tipo de .NET Framework que se deserializa.</param>
      <param name="ns">El espacio de nombres del tipo de .NET Framework que se deserializa.</param>
      <param name="type">
        <see cref="T:System.Type" /> que se va a deserializar.</param>
      <param name="read">Delegado <see cref="T:System.Xml.Serialization.XmlSerializationReadCallback" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)">
      <summary>Almacena un objeto que se deserializa de un elemento <see langword="multiRef" /> codificado con SOAP para un acceso posterior a través del método <see cref="M:System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)" />.</summary>
      <param name="id">El valor del atributo <see langword="id" /> de un elemento <see langword="multiRef" /> que identifica el elemento.</param>
      <param name="o">El objeto que se deserializa del elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CheckReaderCount(System.Int32@,System.Int32@)">
      <summary>Comprueba si el deserializador ha avanzado.</summary>
      <param name="whileIterations">
        <see langword="count" /> actual de un bucle while.</param>
      <param name="readerCount">Objeto <see cref="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount" /> actual.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount" /> no ha avanzado.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CollapseWhitespace(System.String)">
      <summary>Quita todas las apariciones de caracteres de espacio en blanco del principio y del final de la instancia especificada.</summary>
      <param name="value">La cadena que tendrá su espacio en blanco recortado.</param>
      <returns>La cadena recortada.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup">
      <summary>Contiene una instancia de delegado <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" />, más las entradas del método; también proporciona los parámetros del método.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationCollectionFixupCallback,System.Object)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup" /> con parámetros para un método de devolución de llamada.</summary>
      <param name="collection">Una colección en la que el método de devolución de llamada copia la matriz de elementos de colección.</param>
      <param name="callback">Método que crea instancias del delegado <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" />.</param>
      <param name="collectionItems">Una matriz en la que el método de devolución de llamada copia una colección.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.Callback">
      <summary>Obtiene el método de devolución de llamada que crea instancias del delegado <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" />.</summary>
      <returns>El delegado <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> que señala al método de devolución de llamada.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.Collection">
      <summary>Obtiene <paramref name="object collection" /> para el método de devolución de llamada.</summary>
      <returns>La colección que se utiliza para la corrección.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.CollectionItems">
      <summary>Obtiene la matriz en la que el método de devolución de llamada copia una colección.</summary>
      <returns>La matriz en la que el método de devolución de llamada copia una colección.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException(System.String,System.String)">
      <summary>Crea un <see cref="T:System.InvalidOperationException" /> que indica que un objeto que está deserializándose debería ser abstracto.</summary>
      <param name="name">Nombre del tipo abstracto.</param>
      <param name="ns">Espacio de nombres de .NET Framework de tipo abstracto.</param>
      <returns>Excepción <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException(System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>Rellena un objeto de su representación XML en la ubicación actual de <see cref="T:System.Xml.XmlReader" />, con una opción para leer el elemento interno.</summary>
      <param name="xsdDerived">El nombre local del tipo de datos de esquema XML derivado.</param>
      <param name="nsDerived">El espacio de nombres del tipo de datos de esquema XML derivado.</param>
      <param name="xsdBase">El nombre local del tipo de datos de esquema XML de base.</param>
      <param name="nsBase">El espacio de nombres del tipo de datos de esquema XML de base.</param>
      <param name="clrDerived">El espacio de nombres del tipo de .NET Framework derivado.</param>
      <param name="clrBase">El nombre del tipo de .NET Framework de base.</param>
      <returns>Excepción <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException(System.String)">
      <summary>Crea <see cref="T:System.InvalidOperationException" /> que indica que no se pueden crear instancias de un objeto que se está deserializando porque el constructor produce una excepción de seguridad.</summary>
      <param name="typeName">Nombre del tipo.</param>
      <returns>Excepción <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException(System.String)">
      <summary>Crea un <see cref="T:System.InvalidOperationException" /> que indica que no se pueden crear instancias de un objeto que se está deserializando porque no hay ningún constructor disponible.</summary>
      <param name="typeName">Nombre del tipo.</param>
      <returns>Excepción <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object)">
      <summary>Crea una excepción <see cref="T:System.InvalidCastException" /> que indica que ha habido un error de conversión de referencia explícita.</summary>
      <param name="type">
        <see cref="T:System.Type" /> al que no se puede convertir un objeto. Este tipo se incorpora en el mensaje de excepción.</param>
      <param name="value">El objeto que no se puede convertir. Este objeto se incorpora en el mensaje de excepción.</param>
      <returns>Excepción <see cref="T:System.InvalidCastException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object,System.String)">
      <summary>Crea una excepción <see cref="T:System.InvalidCastException" /> que indica que ha habido un error de conversión de referencia explícita.</summary>
      <param name="type">
        <see cref="T:System.Type" /> al que no se puede convertir un objeto. Este tipo se incorpora en el mensaje de excepción.</param>
      <param name="value">El objeto que no se puede convertir. Este objeto se incorpora en el mensaje de excepción.</param>
      <param name="id">Un identificador de cadena.</param>
      <returns>Excepción <see cref="T:System.InvalidCastException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType(System.String,System.String,System.String)">
      <summary>Crea un <see cref="T:System.InvalidOperationException" /> que indica que no se puede encontrar un tipo derivado que se asigna a un tipo de datos de esquemas XML.</summary>
      <param name="name">El nombre local del tipo de datos de esquemas XML que se asigna al tipo derivado no disponible.</param>
      <param name="ns">El espacio de nombres del tipo de datos de esquemas XML que se asigna al tipo derivado no disponible.</param>
      <param name="clrType">El nombre completo del tipo base de .NET Framework para el que no se puede buscar un tipo derivado.</param>
      <returns>Excepción <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException(System.String)">
      <summary>Crea un <see cref="T:System.InvalidOperationException" /> que indica que no se puede modificar un tipo de colección codificado con SOAP y no se pueden rellenar sus valores.</summary>
      <param name="name">El nombre completo del tipo de .NET Framework para el que hay una asignación.</param>
      <returns>Excepción <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException(System.String,System.Type)">
      <summary>Crea un <see cref="T:System.InvalidOperationException" /> que indica que un valor de enumeración no es válido.</summary>
      <param name="value">Valor de enumeración que no es válido.</param>
      <param name="enumType">Tipo de enumeración.</param>
      <returns>Excepción <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException">
      <summary>Crea un <see cref="T:System.InvalidOperationException" /> que indica que la posición actual de <see cref="T:System.Xml.XmlReader" /> representa un nodo de XML desconocido.</summary>
      <returns>Excepción <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException(System.Xml.XmlQualifiedName)">
      <summary>Crea un <see cref="T:System.InvalidOperationException" /> que indica que un tipo es desconocido.</summary>
      <param name="type">
        <see cref="T:System.Xml.XmlQualifiedName" /> que representa el nombre del tipo desconocido.</param>
      <returns>Excepción <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.DecodeName">
      <summary>Obtiene o establece un valor que determina si las cadenas XML se traducen en nombres de tipo .NET Framework válidos.</summary>
      <returns>
        <see langword="true" /> si las cadenas XML se descodifican en nombres de tipo .NET Framework válidos; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Document">
      <summary>Obtiene el objeto de documento XML en el que se deserializa el documento XML.</summary>
      <returns>
        <see cref="T:System.Xml.XmlDocument" /> que representa los datos <see cref="T:System.Xml.XmlDocument" /> deserializados.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex(System.Array,System.Int32,System.Type)">
      <summary>Garantiza que una matriz o una copia determinada, es lo bastante grande como para contener un índice especificado.</summary>
      <param name="a">
        <see cref="T:System.Array" /> que se va a revisar.</param>
      <param name="index">El índice necesario.</param>
      <param name="elementType">
        <see cref="T:System.Type" /> de los elementos de la matriz.</param>
      <returns>El <see cref="T:System.Array" /> existente, si ya es bastante grande; de lo contrario, una nueva, matriz más grande que contiene los elementos de la matriz original.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader.Fixup">
      <summary>Contiene una instancia del delegado <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" />, además de las entradas del método; también actúa como parámetro del método.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Fixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationFixupCallback,System.Int32)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializationReader.Fixup" />.</summary>
      <param name="o">Objeto que contiene otros objetos cuyos valores se rellenan mediante la implementación de la devolución de llamada.</param>
      <param name="callback">Método que crea instancias del delegado <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" />.</param>
      <param name="count">Tamaño de la matriz de cadenas que se obtiene por medio de la propiedad <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Fixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationFixupCallback,System.String[])">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializationReader.Fixup" />.</summary>
      <param name="o">Objeto que contiene otros objetos cuyos valores se rellenan mediante la implementación de la devolución de llamada.</param>
      <param name="callback">Método que crea instancias del delegado <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" />.</param>
      <param name="ids">Matriz de cadenas que se obtiene por medio de la propiedad <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids" />.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Callback">
      <summary>Obtiene el método de devolución de llamada que crea una instancia del delegado <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" />.</summary>
      <returns>Método de devolución de llamada que crea una instancia del delegado <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids">
      <summary>Obtiene o establece una matriz de claves para los objetos que pertenecen a la propiedad <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Source" /> cuyos valores se rellenan mediante la implementación de la devolución de llamada.</summary>
      <returns>La matriz de claves.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Source">
      <summary>Obtiene o establece el objeto que contiene otros objetos cuyos valores se rellenan mediante la implementación de la devolución de llamada.</summary>
      <returns>El origen que contiene objetos con valores para rellenar.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.FixupArrayRefs(System.Object)">
      <summary>Rellena los valores de una matriz codificada con SOAP cuyo tipo de datos se asigna a un tipo de referencia de .NET Framework.</summary>
      <param name="fixup">Un objeto que contiene la matriz cuyos valores se rellenan.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetArrayLength(System.String,System.String)">
      <summary>Obtiene la longitud de la matriz codificada con SOAP donde se coloca <see cref="T:System.Xml.XmlReader" /> actualmente.</summary>
      <param name="name">El nombre local que la matriz debería tener.</param>
      <param name="ns">El espacio de nombres que la matriz debería tener.</param>
      <returns>Longitud de la matriz SOAP.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetNullAttr">
      <summary>Determina si el elemento XML donde se coloca <see cref="T:System.Xml.XmlReader" /> actualmente tiene un atributo null establecido en el valor <see langword="true" /></summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.Xml.XmlReader" /> se coloca actualmente sobre un atributo null con el valor <see langword="true" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)">
      <summary>Obtiene un objeto que se deserializa de un elemento <see langword="multiRef" /> codificado con SOAP y almacenado anteriormente por <see cref="M:System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)" />.</summary>
      <param name="id">El valor del atributo <see langword="id" /> de un elemento <see langword="multiRef" /> que identifica el elemento.</param>
      <returns>Objeto que se va a deserializar de un elemento <see langword="multiRef" /> codificado con SOAP.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetXsiType">
      <summary>Obtiene el valor del atributo <see langword="xsi:type" /> para el elemento XML en la ubicación actual de <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Nombre XML calificado que indica el tipo de datos de un elemento XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.InitCallbacks">
      <summary>Inicializa los métodos de devolución de llamada que rellenan los objetos que se asignan a los datos XML codificados con SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.InitIDs">
      <summary>Almacena nombres de elementos y atributos en un objeto <see cref="T:System.Xml.NameTable" />.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.IsReturnValue">
      <summary>Obtiene o establece un valor que debería ser <see langword="true" /> para un valor devuelto de SOAP 1.1.</summary>
      <returns>
        <see langword="true" />, si el valor es un valor devuelto.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute(System.String)">
      <summary>Determina si un nombre de atributo XML indica un espacio de nombres XML.</summary>
      <param name="name">Nombre de un atributo XML.</param>
      <returns>
        <see langword="true" /> si el nombre del atributo XML indica un espacio de nombres XML; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ParseWsdlArrayType(System.Xml.XmlAttribute)">
      <summary>Establece el valor del atributo XML si es del tipo <see langword="arrayType" /> del espacio de nombres del Lenguaje de descripción de servicios Web (WSDL).</summary>
      <param name="attr">
        <see cref="T:System.Xml.XmlAttribute" /> que puede tener el tipo <see langword="wsdl:array" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadElementQualifiedName">
      <summary>Hace que <see cref="T:System.Xml.XmlReader" /> lea el nombre completo del elemento donde se está situado actualmente.</summary>
      <returns>El nombre completo del elemento XML actual.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadEndElement">
      <summary>Hace que <see cref="T:System.Xml.XmlReader" /> lea una etiqueta de cierre XML.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Reader">
      <summary>Obtiene el objeto <see cref="T:System.Xml.XmlReader" /> que está utilizando <see cref="T:System.Xml.Serialization.XmlSerializationReader" />.</summary>
      <returns>Objeto <see cref="T:System.Xml.XmlReader" /> que utiliza <see cref="T:System.Xml.Serialization.XmlSerializationReader" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount">
      <summary>Obtiene el número actual del <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>El número actual de un <see cref="T:System.Xml.XmlReader" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNull">
      <summary>Indica a <see cref="T:System.Xml.XmlReader" /> que lea el elemento XML actual si éste tiene un atributo null con el valor true.</summary>
      <returns>
        <see langword="true" /> si el elemento tiene un valor de atributo null="true" y se ha leído; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNullableQualifiedName">
      <summary>Hace que <see cref="T:System.Xml.XmlReader" /> lea el nombre completo del elemento donde se está situado actualmente.</summary>
      <returns>
        <see cref="T:System.Xml.XmlQualifiedName" /> que representa el nombre completo del elemento XML actual; de lo contrario, <see langword="null" /> si hay presente un valor de atributo null="true".</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNullableString">
      <summary>Indica a <see cref="T:System.Xml.XmlReader" /> que lea un elemento XML sencillo de sólo texto que podría ser <see langword="null" />.</summary>
      <returns>El valor de cadena; de lo contrario, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReference(System.String@)">
      <summary>Lee el valor del atributo <see langword="href" /> (atributo <see langword="ref" /> para SOAP 1.2) que se utiliza para hacer referencia a un elemento XML codificado con SOAP.</summary>
      <param name="fixupReference">Cadena de salida en la que se lee el valor de atributo <see langword="href" />.</param>
      <returns>Es <see langword="true" /> si se leyó el valor; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement">
      <summary>Deserializa un objeto de un elemento XML <see langword="multiRef" /> codificado con SOAP.</summary>
      <returns>El valor del elemento al que se hace referencia en el documento.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement(System.String,System.String)">
      <summary>Deserializa un objeto de un elemento XML <see langword="multiRef" /> codificado con SOAP.</summary>
      <param name="name">Nombre local del tipo de datos del esquema XML del elemento.</param>
      <param name="ns">El espacio de nombres del tipo de datos del esquema XML del elemento.</param>
      <returns>El valor del elemento al que se hace referencia en el documento.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElements">
      <summary>Deserializa los objetos de los elementos <see langword="multiRef" /> codificados con SOAP en un mensaje SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.Boolean,System.String@)">
      <summary>Deserializa un objeto de un elemento XML en un mensaje SOAP que contiene una referencia a un elemento <see langword="multiRef" />.</summary>
      <param name="name">Nombre local del tipo de datos del esquema XML del elemento.</param>
      <param name="ns">El espacio de nombres del tipo de datos del esquema XML del elemento.</param>
      <param name="elementCanBeType">
        <see langword="true" /> si el nombre del elemento también es el nombre del tipo de datos del esquema XML; de lo contrario, <see langword="false" />.</param>
      <param name="fixupReference">Cadena de salida en la que se lee el valor de atributo <see langword="href" />.</param>
      <returns>El objeto deserializado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.String@)">
      <summary>Deserializa un objeto de un elemento XML en un mensaje SOAP que contiene una referencia a un elemento <see langword="multiRef" />.</summary>
      <param name="name">Nombre local del tipo de datos del esquema XML del elemento.</param>
      <param name="ns">El espacio de nombres del tipo de datos del esquema XML del elemento.</param>
      <param name="fixupReference">Cadena de salida en la que se lee el valor de atributo <see langword="href" />.</param>
      <returns>El objeto deserializado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String@)">
      <summary>Deserializa un objeto de un elemento XML en un mensaje SOAP que contiene una referencia a un elemento <see langword="multiRef" />.</summary>
      <param name="fixupReference">Cadena de salida en la que se lee el valor de atributo <see langword="href" />.</param>
      <returns>El objeto deserializado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable)">
      <summary>Rellena un objeto de su representación XML en la ubicación actual de <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="serializable">
        <see cref="T:System.Xml.Serialization.IXmlSerializable" /> que corresponde a la posición actual de <see cref="T:System.Xml.XmlReader" />.</param>
      <returns>Un objeto que implementa la interfaz <see cref="T:System.Xml.Serialization.IXmlSerializable" /> con sus miembros rellenado desde la ubicación de <see cref="T:System.Xml.XmlReader" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable,System.Boolean)">
      <summary>Este método es compatible con la infraestructura de .NET Framework y no está diseñado para utilizarse directamente desde el código.</summary>
      <param name="serializable">Un objeto IXmlSerializable que corresponde a la posición actual de XMLReader.</param>
      <param name="wrappedAny">Especifica si se ajusta el objeto serializable.</param>
      <returns>Un objeto que implementa la interfaz IXmlSerializable con sus miembros rellenados desde la ubicación de XmlReader.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadString(System.String)">
      <summary>Genera el resultado de una llamada al método <see cref="M:System.Xml.XmlReader.ReadString" /> anexado al valor de entrada.</summary>
      <param name="value">Una cadena para prefijar al resultado de una llamada al método <see cref="M:System.Xml.XmlReader.ReadString" />.</param>
      <returns>El resultado de llamada al método <see cref="M:System.Xml.XmlReader.ReadString" /> anexado al valor de entrada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadString(System.String,System.Boolean)">
      <summary>Devuelve el resultado de una llamada al método <see cref="M:System.Xml.XmlReader.ReadString" /> de la clase <see cref="T:System.Xml.XmlReader" />, recortado de espacios en blanco si es necesario y anexado al valor de entrada.</summary>
      <param name="value">Una cadena a la que se anexará.</param>
      <param name="trim">
        <see langword="true" /> si se debería recortar el resultado de la operación de lectura; de lo contrario, <see langword="false" />.</param>
      <returns>El resultado de la operación de lectura anexado al valor de entrada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadTypedNull(System.Xml.XmlQualifiedName)">
      <summary>Lee un elemento XML que permite los valores null (<see langword="xsi:nil = 'true'" />) y devuelve un valor <see cref="T:System.Nullable`1" /> genérico.</summary>
      <param name="type">
        <see cref="T:System.Xml.XmlQualifiedName" /> que representa el tipo de datos sencillos para la ubicación actual de <see cref="T:System.Xml.XmlReader" />.</param>
      <returns>Un valor <see cref="T:System.Nullable`1" /> genérico que representa un valor XML null.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive(System.Xml.XmlQualifiedName)">
      <summary>Obtiene el valor del nodo XML en el que se coloca <see cref="T:System.Xml.XmlReader" /> actualmente.</summary>
      <param name="type">
        <see cref="T:System.Xml.XmlQualifiedName" /> que representa el tipo de datos sencillos para la ubicación actual de <see cref="T:System.Xml.XmlReader" />.</param>
      <returns>El valor del nodo como un tipo de valor de .NET Framework, si el valor es un tipo de datos de esquemas XML sencillo.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadXmlDocument(System.Boolean)">
      <summary>Indica a <see cref="T:System.Xml.XmlReader" /> que lea un elemento raíz del documento XML en su posición actual.</summary>
      <param name="wrapped">
        <see langword="true" /> si el método debería leer el contenido sólo después de leer el elemento de inicio del elemento; de lo contrario, <see langword="false" />.</param>
      <returns>
        <see cref="T:System.Xml.XmlDocument" /> que contiene el elemento raíz que se ha leído.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadXmlNode(System.Boolean)">
      <summary>Indica a <see cref="T:System.Xml.XmlReader" /> que lea el nodo XML en su posición actual.</summary>
      <param name="wrapped">
        <see langword="true" /> para leer el contenido sólo después de leer el elemento de inicio del elemento; de lo contrario, <see langword="false" />.</param>
      <returns>
        <see cref="T:System.Xml.XmlNode" /> que representa el nodo XML que se ha leído.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Referenced(System.Object)">
      <summary>Almacena un objeto que se va a deserializar de un elemento <see langword="multiRef" /> codificado con SOAP.</summary>
      <param name="o">El objeto que se va a deserializar.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ResolveDynamicAssembly(System.String)">
      <summary>Obtiene un ensamblado generado dinámicamente por nombre.</summary>
      <param name="assemblyFullName">Nombre completo del ensamblado.</param>
      <returns>Un <see cref="T:System.Reflection.Assembly" /> generado dinámicamente.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ShrinkArray(System.Array,System.Int32,System.Type,System.Boolean)">
      <summary>Garantiza que una matriz determinada, o una copia, no supera una longitud especificada.</summary>
      <param name="a">Matriz que se va a revisar.</param>
      <param name="length">Longitud máxima de la matriz.</param>
      <param name="elementType">
        <see cref="T:System.Type" /> de los elementos de la matriz.</param>
      <param name="isNullable">
        <see langword="true" /> si se puede devolver el valor <see langword="null" /> para la matriz, si está presente para la matriz de entrada; de lo contrario, una nueva matriz de menor tamaño.</param>
      <returns>La <see cref="T:System.Array" /> existente, si ya es suficientemente pequeña; de lo contrario, una nueva matriz más pequeña que contenga los elementos de la matriz original hasta un tamaño de <paramref name="length" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.Boolean)">
      <summary>Indica a <see cref="T:System.Xml.XmlReader" /> que hay que leer el valor de la cadena en su posición actual y devolverlo como una matriz de bytes Base-64.</summary>
      <param name="isNull">
        <see langword="true" /> para devolver <see langword="null" />; <see langword="false" /> para devolver una matriz de bytes Base-64.</param>
      <returns>Una matriz de bytes Base-64; de lo contrario, <see langword="null" /> si el valor del parámetro <paramref name="isNull" /> es <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.String)">
      <summary>Genera una matriz de bytes Base-64 de una cadena de entrada.</summary>
      <param name="value">Una cadena para traducir en una matriz de bytes Base-64.</param>
      <returns>Una matriz de bytes Base-64 .</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.Boolean)">
      <summary>Indica a <see cref="T:System.Xml.XmlReader" /> que hay que leer el valor de la cadena en su posición actual y devolverlo como una matriz de bytes hexadecimal.</summary>
      <param name="isNull">
        <see langword="true" /> para devolver <see langword="null" />; <see langword="false" /> para devolver una matriz de bytes hexadecimal.</param>
      <returns>Matriz de bytes hexadecimal; de lo contrario, <see langword="null" /> si el valor del parámetro <paramref name="isNull" /> es <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.String)">
      <summary>Produce una matriz de bytes hexadecimal a partir de una cadena de entrada.</summary>
      <param name="value">Cadena para traducir en una matriz de bytes hexadecimal.</param>
      <returns>Matriz de bytes hexadecimal.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToChar(System.String)">
      <summary>Genera un objeto <see cref="T:System.Char" /> de una cadena de entrada.</summary>
      <param name="value">Una cadena para traducir en un objeto <see cref="T:System.Char" />.</param>
      <returns>Objeto <see cref="T:System.Char" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToDate(System.String)">
      <summary>Genera un objeto <see cref="T:System.DateTime" /> de una cadena de entrada.</summary>
      <param name="value">Una cadena para traducir en un objeto de clase <see cref="T:System.DateTime" />.</param>
      <returns>Objeto <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToDateTime(System.String)">
      <summary>Genera un objeto <see cref="T:System.DateTime" /> de una cadena de entrada.</summary>
      <param name="value">Una cadena para traducir en un objeto <see cref="T:System.DateTime" />.</param>
      <returns>Objeto <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToEnum(System.String,System.Collections.Hashtable,System.String)">
      <summary>Genera un valor de enumeración numérico de una cadena que está compuesto de identificadores delimitados que representan las constantes de la lista de enumeradores.</summary>
      <param name="value">Cadena que está compuesta de identificadores delimitados, donde cada identificador representa una constante de la lista de enumeradores establecida.</param>
      <param name="h">
        <see cref="T:System.Collections.Hashtable" /> que está compuesto de los identificadores como claves y las constantes como números enteros.</param>
      <param name="typeName">Nombre del tipo de enumeración.</param>
      <returns>Un valor largo que está compuesto del valor de enumeración como una serie de operaciones <see langword="OR" /> bit a bit.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToTime(System.String)">
      <summary>Genera <see cref="T:System.DateTime" /> de una cadena que representa la hora.</summary>
      <param name="value">Una cadena para traducir en un objeto <see cref="T:System.DateTime" />.</param>
      <returns>Objeto <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlName(System.String)">
      <summary>Descodifica un nombre XML.</summary>
      <param name="value">Nombre XML que se va a descodificar.</param>
      <returns>Cadena descodificada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNCName(System.String)">
      <summary>Descodifica un nombre XML.</summary>
      <param name="value">Nombre XML que se va a descodificar.</param>
      <returns>Cadena descodificada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNmToken(System.String)">
      <summary>Descodifica un nombre XML.</summary>
      <param name="value">Nombre XML que se va a descodificar.</param>
      <returns>Cadena descodificada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNmTokens(System.String)">
      <summary>Descodifica un nombre XML.</summary>
      <param name="value">Nombre XML que se va a descodificar.</param>
      <returns>Cadena descodificada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlQualifiedName(System.String)">
      <summary>Obtiene un <see cref="T:System.Xml.XmlQualifiedName" /> de un nombre que puede contener un prefijo.</summary>
      <param name="value">Un nombre que puede contener un prefijo.</param>
      <returns>Un <see cref="T:System.Xml.XmlQualifiedName" /> que representa un nombre XML calificado con el nombre de espacio de nombres.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute)">
      <summary>Provoca un evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> para la posición actual de <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="o">Objeto que <see cref="T:System.Xml.Serialization.XmlSerializer" /> intenta deserializar, accesible posteriormente mediante la propiedad <see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" />.</param>
      <param name="attr">
        <see cref="T:System.Xml.XmlAttribute" /> que representa el atributo.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute,System.String)">
      <summary>Provoca un evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> para la posición actual de <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="o">Objeto que <see cref="T:System.Xml.Serialization.XmlSerializer" /> intenta deserializar, accesible posteriormente mediante la propiedad <see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" />.</param>
      <param name="attr">
        <see cref="T:System.Xml.XmlAttribute" /> que representa el atributo.</param>
      <param name="qnames">Una lista delimitada por comas de nombres XML calificados.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement)">
      <summary>Provoca un evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> para la posición actual de <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="o">
        <see cref="T:System.Object" /> que se va a deserializar.</param>
      <param name="elem">
        <see cref="T:System.Xml.XmlElement" /> para el que se provoca un evento.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement,System.String)">
      <summary>Provoca un evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> para la posición actual de <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="o">Objeto que <see cref="T:System.Xml.Serialization.XmlSerializer" /> intenta deserializar, accesible posteriormente mediante la propiedad <see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" />.</param>
      <param name="elem">
        <see cref="T:System.Xml.XmlElement" /> para el que se provoca un evento.</param>
      <param name="qnames">Una lista delimitada por comas de nombres XML calificados.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object)">
      <summary>Provoca un evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> para la posición actual de <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="o">Objeto que se va a deserializar.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object,System.String)">
      <summary>Provoca un evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> para la posición actual de <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="o">Objeto que se está deserializando.</param>
      <param name="qnames">Una lista delimitada por comas de nombres XML calificados.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnreferencedObject(System.String,System.Object)">
      <summary>Provoca un evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" /> para la posición actual de <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="id">Una cadena única que se utiliza para identificar el objeto sin referencia, más tarde accesible a través de la propiedad <see cref="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId" />.</param>
      <param name="o">Objeto que <see cref="T:System.Xml.Serialization.XmlSerializer" /> intenta deserializar, accesible posteriormente mediante la propiedad <see cref="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject" />.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationWriteCallback">
      <summary>Delegado utilizado por la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> para la serialización de tipos de datos XML sin raíz codificados en SOAP.</summary>
      <param name="o">Objeto que se va a serializar.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationWriter">
      <summary>Representa una clase abstracta usada para controlar la serialización realizada por la clase <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.AddWriteCallback(System.Type,System.String,System.String,System.Xml.Serialization.XmlSerializationWriteCallback)">
      <summary>Almacena una implementación del delegado <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" /> y el tipo al que se aplica, para su invocación posterior.</summary>
      <param name="type">
        <see cref="T:System.Type" /> de objetos que se serializan.</param>
      <param name="typeName">Nombre del tipo de objetos que se serializan.</param>
      <param name="typeNs">Espacio de nombres del tipo de objetos que se serializan.</param>
      <param name="callback">Instancia del delegado <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateChoiceIdentifierValueException(System.String,System.String,System.String,System.String)">
      <summary>Crea un <see cref="T:System.InvalidOperationException" /> que indica un nombre inesperado para un elemento que se adhiere a una declaración de elemento <see langword="choice" /> de esquema XML.</summary>
      <param name="value">Nombre que no es válido.</param>
      <param name="identifier">Declaración de elemento <see langword="choice" /> a la que pertenece el nombre.</param>
      <param name="name">Nombre local esperado de un elemento.</param>
      <param name="ns">Espacio de nombres esperado de un elemento.</param>
      <returns>Excepción creada recientemente.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Object)">
      <summary>Crea una <see cref="T:System.InvalidOperationException" /> que indica que <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> se aplicó de forma no válida a un miembro; solo los miembros de tipo <see cref="T:System.Xml.XmlNode" />, o procedentes de <see cref="T:System.Xml.XmlNode" />, son válidos.</summary>
      <param name="o">Objeto que representa el miembro no válido.</param>
      <returns>Excepción creada recientemente.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Type)">
      <summary>Crea una <see cref="T:System.InvalidOperationException" /> que indica que <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> se aplicó de forma no válida a un miembro; solo los miembros de tipo <see cref="T:System.Xml.XmlNode" />, o procedentes de <see cref="T:System.Xml.XmlNode" />, son válidos.</summary>
      <param name="type">
        <see cref="T:System.Type" /> que no es válido.</param>
      <returns>Excepción creada recientemente.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException(System.String,System.String)">
      <summary>Crea un <see cref="T:System.InvalidOperationException" /> que indica un error al escribir una matriz donde se aplica una declaración de elemento <see langword="choice" /> de esquema XML.</summary>
      <param name="type">Tipo que se va a serializar.</param>
      <param name="identifier">Nombre para la declaración de elemento <see langword="choice" />.</param>
      <returns>Excepción creada recientemente.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidEnumValueException(System.Object,System.String)">
      <summary>Crea un <see cref="T:System.InvalidOperationException" /> para un valor de enumeración no válido.</summary>
      <param name="value">Objeto que representa la enumeración no válida.</param>
      <param name="typeName">Nombre del tipo XML.</param>
      <returns>Excepción creada recientemente.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateMismatchChoiceException(System.String,System.String,System.String)">
      <summary>Crea un <see cref="T:System.InvalidOperationException" /> que indica que un valor para un elemento XML no coincide con un tipo de enumeración.</summary>
      <param name="value">Valor que no es válido.</param>
      <param name="elementName">Nombre del elemento XML con un valor no válido.</param>
      <param name="enumValue">El valor válido.</param>
      <returns>Excepción creada recientemente.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownAnyElementException(System.String,System.String)">
      <summary>Crea un <see cref="T:System.InvalidOperationException" /> que indica que no se puede procesar un elemento XML que debería adherirse a la declaración de elemento <see langword="any" /> de esquema XML.</summary>
      <param name="name">Elemento XML que no se puede procesar.</param>
      <param name="ns">Espacio de nombres del elemento XML.</param>
      <returns>Excepción creada recientemente.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Object)">
      <summary>Crea una excepción <see cref="T:System.InvalidOperationException" /> que indica que un tipo que se está serializando no se está utilizando de una forma válida o se ha encontrado de forma inesperada.</summary>
      <param name="o">Objeto cuyo tipo no se puede serializar.</param>
      <returns>Excepción creada recientemente.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Type)">
      <summary>Crea una excepción <see cref="T:System.InvalidOperationException" /> que indica que un tipo que se está serializando no se está utilizando de una forma válida o se ha encontrado de forma inesperada.</summary>
      <param name="type">Tipo que no se puede serializar.</param>
      <returns>Excepción creada recientemente.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.EscapeName">
      <summary>Obtiene o establece un valor que indica si el método <see cref="M:System.Xml.XmlConvert.EncodeName(System.String)" /> se utiliza para escribir XML válido.</summary>
      <returns>
        <see langword="true" /> si el método <see cref="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)" /> devuelve un nombre codificado; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromByteArrayBase64(System.Byte[])">
      <summary>Procesa una matriz de 64 bytes.</summary>
      <param name="value">Una matriz de base 64 <see cref="T:System.Byte" />.</param>
      <returns>La misma matriz de bytes que se pasó como un argumento.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromByteArrayHex(System.Byte[])">
      <summary>Genera una cadena de una matriz de bytes hexadecimal de entrada.</summary>
      <param name="value">Matriz de bytes hexadecimal para traducir en una cadena.</param>
      <returns>Valor de la matriz de bytes convertido en una cadena.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromChar(System.Char)">
      <summary>Genera una cadena de una entrada <see cref="T:System.Char" />.</summary>
      <param name="value">Un objeto <see cref="T:System.Char" /> para convertir en una cadena.</param>
      <returns>El valor <see cref="T:System.Char" /> convertido en una cadena.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromDate(System.DateTime)">
      <summary>Genera una cadena de un objeto <see cref="T:System.DateTime" />.</summary>
      <param name="value">Un objeto <see cref="T:System.DateTime" /> para convertir en una cadena.</param>
      <returns>Una representación de cadena de <see cref="T:System.DateTime" /> que muestra la fecha pero no la hora.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromDateTime(System.DateTime)">
      <summary>Genera una cadena de una entrada <see cref="T:System.DateTime" />.</summary>
      <param name="value">Un objeto <see cref="T:System.DateTime" /> para convertir en una cadena.</param>
      <returns>Una representación de cadena de <see cref="T:System.DateTime" /> que muestra la fecha y la hora.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[])">
      <summary>Genera una cadena compuesta de identificadores delimitados que representan los miembros de enumeración que se han establecido.</summary>
      <param name="value">Valor de enumeración como una serie de operaciones <see langword="OR" /> bit a bit.</param>
      <param name="values">Valores de nombres de la enumeración.</param>
      <param name="ids">Valores constantes de la enumeración.</param>
      <returns>Cadena compuesta de identificadores delimitados, donde cada uno representa un miembro de la lista de enumeradores establecida.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[],System.String)">
      <summary>Toma un valor de enumeración numérico y los nombres y constantes de la lista de enumeradores para la enumeración y devuelve una cadena formada por identificadores delimitados que representan los miembros de la enumeración que se han establecido.</summary>
      <param name="value">Valor de enumeración como una serie de operaciones <see langword="OR" /> bit a bit.</param>
      <param name="values">Valores de la enumeración.</param>
      <param name="ids">Constantes de la enumeración.</param>
      <param name="typeName">Nombre del tipo.</param>
      <returns>Cadena que compuesta por identificadores delimitados, donde cada elemento es uno de los valores establecidos por la operación bit a bit.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromTime(System.DateTime)">
      <summary>Genera una cadena de un objeto <see cref="T:System.DateTime" />.</summary>
      <param name="value">
        <see cref="T:System.DateTime" /> que se convierte en una cadena.</param>
      <returns>Representación de cadena del objeto <see cref="T:System.DateTime" /> que muestra la hora pero no la fecha.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlName(System.String)">
      <summary>Codifica un nombre XML válido reemplazando caracteres que no son válidos con secuencias de escape.</summary>
      <param name="name">Cadena que se va a utilizar como un nombre XML.</param>
      <returns>Cadena codificada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNCName(System.String)">
      <summary>Codifica un nombre local XML válido reemplazando caracteres que no son válidos con secuencias de escape.</summary>
      <param name="ncName">Cadena que se va a utilizar como nombre XML local (no calificado).</param>
      <returns>Cadena codificada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNmToken(System.String)">
      <summary>Codifica un nombre XML.</summary>
      <param name="nmToken">Nombre XML que se va a codificar.</param>
      <returns>Cadena codificada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNmTokens(System.String)">
      <summary>Codifica una secuencia delimitada por espacios con nombres XML en un nombre XML único.</summary>
      <param name="nmTokens">Secuencia delimitada por espacios con nombres XML que se va a codificar.</param>
      <returns>Cadena codificada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)">
      <summary>Devuelve un nombre XML calificado, con caracteres no válidos reemplazados por secuencias de escape.</summary>
      <param name="xmlQualifiedName">Clase <see cref="T:System.Xml.XmlQualifiedName" /> que representa los datos XML que se van a escribir.</param>
      <returns>Un nombre XML calificado, con los caracteres no válidos reemplazados por secuencias de escape.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName,System.Boolean)">
      <summary>Genera una cadena que se puede escribir como un nombre XML calificado, con caracteres no válidos reemplazados por secuencias de escape.</summary>
      <param name="xmlQualifiedName">Clase <see cref="T:System.Xml.XmlQualifiedName" /> que representa los datos XML que se van a escribir.</param>
      <param name="ignoreEmpty">
        <see langword="true" /> para omitir los espacios vacíos de la cadena; de lo contrario, <see langword="false" />.</param>
      <returns>Un nombre XML calificado, con los caracteres no válidos reemplazados por secuencias de escape.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.InitCallbacks">
      <summary>Inicializa instancias del delegado <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" /> para serializar los datos XML con codificación SOAP.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.Namespaces">
      <summary>Obtiene o establece una lista de objetos de nombre XML calificado que contienen los espacios de nombres y los prefijos utilizados para generar nombres calificados en documentos XML.</summary>
      <returns>
        <see cref="T:System.Collections.ArrayList" /> que contiene los espacios de nombres y los pares de prefijos.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.ResolveDynamicAssembly(System.String)">
      <summary>Obtiene un ensamblado generado dinámicamente por nombre.</summary>
      <param name="assemblyFullName">Nombre completo del ensamblado.</param>
      <returns>Un ensamblado generado dinámicamente.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.TopLevelElement">
      <summary>Sólo inicializa las referencias a objetos al serializar un mensaje SOAP con codificación SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.Byte[])">
      <summary>Indica a un objeto <see cref="T:System.Xml.XmlWriter" /> que escriba un atributo XML que no tenga ningún espacio de nombres especificado para su nombre.</summary>
      <param name="localName">El nombre local del atributo XML.</param>
      <param name="value">El valor del atributo XML como una matriz de bytes.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String)">
      <summary>Indica a <see cref="T:System.Xml.XmlWriter" /> que escriba un atributo XML que no tenga ningún espacio de nombres especificado para su nombre.</summary>
      <param name="localName">El nombre local del atributo XML.</param>
      <param name="value">Valor del atributo XML especificado como una cadena.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.Byte[])">
      <summary>Indica a un objeto <see cref="T:System.Xml.XmlWriter" /> que escriba un atributo XML.</summary>
      <param name="localName">El nombre local del atributo XML.</param>
      <param name="ns">Espacio de nombres del atributo XML.</param>
      <param name="value">El valor del atributo XML como una matriz de bytes.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String)">
      <summary>Escribe un atributo XML.</summary>
      <param name="localName">El nombre local del atributo XML.</param>
      <param name="ns">Espacio de nombres del atributo XML.</param>
      <param name="value">Valor del atributo XML especificado como una cadena.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String,System.String)">
      <summary>Escribe un atributo XML donde se proporciona el prefijo de espacio de nombres manualmente.</summary>
      <param name="prefix">El prefijo de espacio de nombres que se escribirá.</param>
      <param name="localName">El nombre local del atributo XML.</param>
      <param name="ns">Espacio de nombres representado por el prefijo.</param>
      <param name="value">Valor del atributo XML especificado como una cadena.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementEncoded(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)">
      <summary>Escribe un objeto de nodo XML dentro del cuerpo de un elemento XML con nombre.</summary>
      <param name="node">Nodo XML que se va a escribir, posiblemente un elemento XML secundario.</param>
      <param name="name">Nombre local del elemento XML principal que se escribirá.</param>
      <param name="ns">El espacio de nombres del elemento XML que se escribirá.</param>
      <param name="isNullable">
        <see langword="true" /> para escribir un atributo <see langword="xsi:nil='true'" /> si el objeto que se va a serializar es <see langword="null" />; en caso contrario, <see langword="false" />.</param>
      <param name="any">
        <see langword="true" /> para indicar que el nodo, si es un elemento XML, se adhiere a una declaración de elemento <see langword="any" /> de esquema XML; de lo contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementLiteral(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)">
      <summary>Indica a un objeto <see cref="T:System.Xml.XmlWriter" /> que escriba un objeto <see cref="T:System.Xml.XmlNode" /> dentro del cuerpo de un elemento XML con nombre.</summary>
      <param name="node">Nodo XML que se va a escribir, posiblemente un elemento XML secundario.</param>
      <param name="name">Nombre local del elemento XML principal que se escribirá.</param>
      <param name="ns">El espacio de nombres del elemento XML que se escribirá.</param>
      <param name="isNullable">
        <see langword="true" /> para escribir un atributo <see langword="xsi:nil='true'" /> si el objeto que se va a serializar es <see langword="null" />; en caso contrario, <see langword="false" />.</param>
      <param name="any">
        <see langword="true" /> para indicar que el nodo, si es un elemento XML, se adhiere a una declaración de elemento <see langword="any" /> de esquema XML; de lo contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>Escribe un elemento XML con un nombre calificado especificado en su cuerpo.</summary>
      <param name="localName">Nombre local del elemento XML.</param>
      <param name="ns">Espacio de nombres del elemento XML.</param>
      <param name="value">El nombre que se va a escribir en el texto de elemento utilizando su prefijo si está calificado con el nombre de espacio de nombres.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>Escribe un elemento XML con un nombre calificado especificado en su cuerpo.</summary>
      <param name="localName">Nombre local del elemento XML.</param>
      <param name="ns">Espacio de nombres del elemento XML.</param>
      <param name="value">El nombre que se va a escribir en el texto de elemento utilizando su prefijo si está calificado con el nombre de espacio de nombres.</param>
      <param name="xsiType">Nombre del tipo de datos de esquemas XML que se va a escribir en el atributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName)">
      <summary>Escribe un elemento XML con un nombre calificado especificado en su cuerpo.</summary>
      <param name="localName">Nombre local del elemento XML.</param>
      <param name="value">El nombre que se va a escribir en el texto de elemento utilizando su prefijo si está calificado con el nombre de espacio de nombres.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>Escribe un elemento XML con un nombre calificado especificado en su cuerpo.</summary>
      <param name="localName">Nombre local del elemento XML.</param>
      <param name="value">El nombre que se va a escribir en el texto de elemento utilizando su prefijo si está calificado con el nombre de espacio de nombres.</param>
      <param name="xsiType">Nombre del tipo de datos de esquemas XML que se va a escribir en el atributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String)">
      <summary>Escribe un elemento XML con un valor especificado en su cuerpo.</summary>
      <param name="localName">El nombre local del elemento XML que se va a escribir sin la calificación de espacio de nombres.</param>
      <param name="value">El valor de texto del elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String)">
      <summary>Escribe un elemento XML con un valor especificado en su cuerpo.</summary>
      <param name="localName">Nombre local del elemento XML.</param>
      <param name="ns">Espacio de nombres del elemento XML.</param>
      <param name="value">El valor de texto del elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>Escribe un elemento XML con un valor especificado en su cuerpo.</summary>
      <param name="localName">Nombre local del elemento XML.</param>
      <param name="ns">Espacio de nombres del elemento XML.</param>
      <param name="value">El valor de texto del elemento XML.</param>
      <param name="xsiType">Nombre del tipo de datos de esquemas XML que se va a escribir en el atributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>Escribe un elemento XML con un valor especificado en su cuerpo.</summary>
      <param name="localName">Nombre local del elemento XML.</param>
      <param name="value">El valor de texto del elemento XML.</param>
      <param name="xsiType">Nombre del tipo de datos de esquemas XML que se va a escribir en el atributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[])">
      <summary>Escribe un elemento XML con un valor especificado en su cuerpo.</summary>
      <param name="localName">Nombre local del elemento XML.</param>
      <param name="value">El valor de texto del elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary>Escribe un elemento XML con un valor especificado en su cuerpo.</summary>
      <param name="localName">Nombre local del elemento XML.</param>
      <param name="value">El valor de texto del elemento XML.</param>
      <param name="xsiType">Nombre del tipo de datos de esquemas XML que se va a escribir en el atributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String)">
      <summary>Escribe un elemento XML con un valor especificado en su cuerpo.</summary>
      <param name="localName">Nombre local del elemento XML.</param>
      <param name="value">El valor de texto del elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[])">
      <summary>Escribe un elemento XML con un valor especificado en su cuerpo.</summary>
      <param name="localName">Nombre local del elemento XML.</param>
      <param name="ns">Espacio de nombres del elemento XML.</param>
      <param name="value">El valor de texto del elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary>Escribe un elemento XML con un valor especificado en su cuerpo.</summary>
      <param name="localName">Nombre local del elemento XML.</param>
      <param name="ns">Espacio de nombres del elemento XML.</param>
      <param name="value">El valor de texto del elemento XML.</param>
      <param name="xsiType">Nombre del tipo de datos de esquemas XML que se va a escribir en el atributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String)">
      <summary>Escribe un elemento XML con un valor especificado en su cuerpo.</summary>
      <param name="localName">Nombre local del elemento XML.</param>
      <param name="ns">Espacio de nombres del elemento XML.</param>
      <param name="value">El valor de texto del elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>Escribe un elemento XML con un valor especificado en su cuerpo.</summary>
      <param name="localName">Nombre local del elemento XML.</param>
      <param name="ns">Espacio de nombres del elemento XML.</param>
      <param name="value">El valor de texto del elemento XML.</param>
      <param name="xsiType">Nombre del tipo de datos de esquemas XML que se va a escribir en el atributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>Escribe un elemento XML con un valor especificado en su cuerpo.</summary>
      <param name="localName">Nombre local del elemento XML.</param>
      <param name="value">El valor de texto del elemento XML.</param>
      <param name="xsiType">Nombre del tipo de datos de esquemas XML que se va a escribir en el atributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String)">
      <summary>Escribe un elemento XML cuyo cuerpo está vacío.</summary>
      <param name="name">El nombre local del elemento XML que se va a escribir.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String,System.String)">
      <summary>Escribe un elemento XML cuyo cuerpo está vacío.</summary>
      <param name="name">El nombre local del elemento XML que se va a escribir.</param>
      <param name="ns">El espacio de nombres del elemento XML que se va a escribir.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement">
      <summary>Escribe una etiqueta de elemento <see langword="&lt;closing&gt;" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement(System.Object)">
      <summary>Escribe una etiqueta de elemento <see langword="&lt;closing&gt;" />.</summary>
      <param name="o">Objeto que se va a serializar.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteId(System.Object)">
      <summary>Escribe un atributo <see langword="id" /> que aparece en un elemento <see langword="multiRef" /> codificado con SOAP.</summary>
      <param name="o">Objeto que se va a serializar.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNamespaceDeclarations(System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>Escribe los atributos de declaración de espacio de nombres.</summary>
      <param name="xmlns">Los espacios de nombres XML que se van a declarar.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameEncoded(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>Escribe un elemento XML cuyo cuerpo contiene un nombre XML calificado válido. <see cref="T:System.Xml.XmlWriter" /> inserta un atributo <see langword="xsi:nil='true'" /> si el valor de la cadena es <see langword="null" />.</summary>
      <param name="name">El nombre local del elemento XML que se va a escribir.</param>
      <param name="ns">El espacio de nombres del elemento XML que se va a escribir.</param>
      <param name="value">Nombre XML calificado que se va a escribir en el cuerpo del elemento XML.</param>
      <param name="xsiType">Nombre del tipo de datos de esquemas XML que se va a escribir en el atributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameLiteral(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>Escribe un elemento XML cuyo cuerpo contiene un nombre XML calificado válido. <see cref="T:System.Xml.XmlWriter" /> inserta un atributo <see langword="xsi:nil='true'" /> si el valor de la cadena es <see langword="null" />.</summary>
      <param name="name">El nombre local del elemento XML que se va a escribir.</param>
      <param name="ns">El espacio de nombres del elemento XML que se va a escribir.</param>
      <param name="value">Nombre XML calificado que se va a escribir en el cuerpo del elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncoded(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>Escribe un elemento de XML que contiene una cadena como cuerpo. <see cref="T:System.Xml.XmlWriter" /> inserta un atributo <see langword="xsi:nil='true'" /> si el valor de la cadena es <see langword="null" />.</summary>
      <param name="name">El nombre local del elemento XML que se va a escribir.</param>
      <param name="ns">El espacio de nombres del elemento XML que se va a escribir.</param>
      <param name="value">La cadena que se va a escribir en el cuerpo del elemento XML.</param>
      <param name="xsiType">Nombre del tipo de datos de esquemas XML que se va a escribir en el atributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary>Escribe una matriz de bytes como cuerpo de un elemento XML. <see cref="T:System.Xml.XmlWriter" /> inserta un atributo <see langword="xsi:nil='true'" /> si el valor de la cadena es <see langword="null" />.</summary>
      <param name="name">El nombre local del elemento XML que se va a escribir.</param>
      <param name="ns">El espacio de nombres del elemento XML que se va a escribir.</param>
      <param name="value">La matriz de bytes que se va a escribir en el cuerpo del elemento XML.</param>
      <param name="xsiType">Nombre del tipo de datos de esquemas XML que se va a escribir en el atributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>Escribe un elemento de XML que contiene una cadena como cuerpo. <see cref="T:System.Xml.XmlWriter" /> inserta un atributo <see langword="xsi:nil='true'" /> si el valor de la cadena es <see langword="null" />.</summary>
      <param name="name">El nombre local del elemento XML que se va a escribir.</param>
      <param name="ns">El espacio de nombres del elemento XML que se va a escribir.</param>
      <param name="value">La cadena que se va a escribir en el cuerpo del elemento XML.</param>
      <param name="xsiType">Nombre del tipo de datos de esquemas XML que se va a escribir en el atributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteral(System.String,System.String,System.String)">
      <summary>Escribe un elemento de XML que contiene una cadena como cuerpo. <see cref="T:System.Xml.XmlWriter" /> inserta un atributo <see langword="xsi:nil='true'" /> si el valor de la cadena es <see langword="null" />.</summary>
      <param name="name">El nombre local del elemento XML que se va a escribir.</param>
      <param name="ns">El espacio de nombres del elemento XML que se va a escribir.</param>
      <param name="value">La cadena que se va a escribir en el cuerpo del elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.Byte[])">
      <summary>Escribe una matriz de bytes como cuerpo de un elemento XML. <see cref="T:System.Xml.XmlWriter" /> inserta un atributo <see langword="xsi:nil='true'" /> si el valor de la cadena es <see langword="null" />.</summary>
      <param name="name">El nombre local del elemento XML que se va a escribir.</param>
      <param name="ns">El espacio de nombres del elemento XML que se va a escribir.</param>
      <param name="value">La matriz de bytes que se va a escribir en el cuerpo del elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.String)">
      <summary>Escribe un elemento de XML que contiene una cadena como cuerpo. <see cref="T:System.Xml.XmlWriter" /> inserta un atributo <see langword="xsi:nil='true'" /> si el valor de la cadena es <see langword="null" />.</summary>
      <param name="name">El nombre local del elemento XML que se va a escribir.</param>
      <param name="ns">El espacio de nombres del elemento XML que se va a escribir.</param>
      <param name="value">La cadena que se va a escribir en el cuerpo del elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String)">
      <summary>Escribe un elemento XML con un atributo <see langword="xsi:nil='true'" />.</summary>
      <param name="name">El nombre local del elemento XML que se va a escribir.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String,System.String)">
      <summary>Escribe un elemento XML con un atributo <see langword="xsi:nil='true'" />.</summary>
      <param name="name">El nombre local del elemento XML que se va a escribir.</param>
      <param name="ns">El espacio de nombres del elemento XML que se va a escribir.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String)">
      <summary>Escribe un elemento XML con un atributo <see langword="xsi:nil='true'" />.</summary>
      <param name="name">El nombre local del elemento XML que se va a escribir.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String,System.String)">
      <summary>Escribe un elemento XML con un atributo <see langword="xsi:nil='true'" />.</summary>
      <param name="name">El nombre local del elemento XML que se va a escribir.</param>
      <param name="ns">El espacio de nombres del elemento XML que se va a escribir.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object)">
      <summary>Escribe un elemento XML de mensaje SOAP que puede contener una referencia a un elemento XML <see langword="&lt;multiRef&gt;" /> para un objeto determinado.</summary>
      <param name="n">El nombre local del elemento XML que se va a escribir.</param>
      <param name="ns">El espacio de nombres del elemento XML que se va a escribir.</param>
      <param name="o">Objeto que se va a serializar en el elemento XML actual o en un elemento <see langword="multiRef" /> al que hace referencia el elemento actual.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type)">
      <summary>Escribe un elemento XML de mensaje SOAP que puede contener una referencia a un elemento XML <see langword="&lt;multiRef&gt;" /> para un objeto determinado.</summary>
      <param name="n">El nombre local del elemento XML que se va a escribir.</param>
      <param name="ns">El espacio de nombres del elemento XML que se va a escribir.</param>
      <param name="o">Objeto que se va a serializar en el elemento XML actual o en un elemento <see langword="multiRef" /> al que hace referencia el elemento actual.</param>
      <param name="ambientType">Tipo almacenado en la asignación del tipo de objeto (como opuesto al tipo del objeto situado directamente a través de la operación <see langword="typeof" />).</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean)">
      <summary>Escribe un elemento XML de mensaje SOAP que puede contener una referencia a un elemento XML <see langword="&lt;multiRef&gt;" /> para un objeto determinado.</summary>
      <param name="n">El nombre local del elemento XML que se va a escribir.</param>
      <param name="ns">El espacio de nombres del elemento XML que se va a escribir.</param>
      <param name="o">Objeto que se va a serializar en el elemento XML actual o en un elemento <see langword="multiRef" /> al que hace referencia el elemento actual.</param>
      <param name="ambientType">Tipo almacenado en la asignación del tipo de objeto (como opuesto al tipo del objeto situado directamente a través de la operación <see langword="typeof" />).</param>
      <param name="suppressReference">
        <see langword="true" /> para serializar directamente el objeto en el elemento XML en lugar de que el elemento haga referencia a otro elemento que contiene los datos; de lo contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean,System.Boolean)">
      <summary>Escribe un elemento XML de mensaje SOAP que puede contener una referencia a un elemento XML <see langword="multiRef" /> para un objeto determinado.</summary>
      <param name="n">El nombre local del elemento XML que se va a escribir.</param>
      <param name="ns">El espacio de nombres del elemento XML que se va a escribir.</param>
      <param name="o">Objeto que se va a serializar en el elemento XML actual o en un elemento <see langword="multiRef" /> al que hace referencia el elemento actual.</param>
      <param name="ambientType">Tipo almacenado en la asignación del tipo de objeto (como opuesto al tipo del objeto situado directamente a través de la operación <see langword="typeof" />).</param>
      <param name="suppressReference">
        <see langword="true" /> para serializar directamente el objeto en el elemento XML en lugar de que el elemento haga referencia a otro elemento que contiene los datos; de lo contrario, <see langword="false" />.</param>
      <param name="isNullable">
        <see langword="true" /> para escribir un atributo <see langword="xsi:nil='true'" /> si el objeto que se va a serializar es <see langword="null" />; en caso contrario, <see langword="false" />.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.Writer">
      <summary>Obtiene o establece el <see cref="T:System.Xml.XmlWriter" /> predeterminado utilizado por <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />.</summary>
      <returns>El valor de <see cref="T:System.Xml.XmlWriter" /> que utiliza la instancia de clase.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencedElements">
      <summary>Serializa los objetos en elementos XML <see langword="multiRef" /> con codificación SOAP en un mensaje SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object)">
      <summary>Escribe un elemento XML de mensaje SOAP que contiene una referencia a un elemento XML <see langword="multiRef" /> para un objeto determinado.</summary>
      <param name="n">Nombre local del elemento de referencia que se va a escribir.</param>
      <param name="ns">Espacio de nombres del elemento de referencia que se va a escribir.</param>
      <param name="o">Objeto que se va a serializar.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object,System.Boolean)">
      <summary>Escribe un elemento XML de mensaje SOAP que contiene una referencia a un elemento XML <see langword="multiRef" /> para un objeto determinado.</summary>
      <param name="n">Nombre local del elemento de referencia que se va a escribir.</param>
      <param name="ns">Espacio de nombres del elemento de referencia que se va a escribir.</param>
      <param name="o">Objeto que se va a serializar.</param>
      <param name="isNullable">
        <see langword="true" /> para escribir un atributo <see langword="xsi:nil='true'" /> si el objeto que se va a serializar es <see langword="null" />; en caso contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteRpcResult(System.String,System.String)">
      <summary>Escribe un elemento de resultado RPC de SOAP 1.2 con un nombre calificado especificado en su cuerpo.</summary>
      <param name="name">Nombre local del cuerpo del resultado.</param>
      <param name="ns">Espacio de nombres del cuerpo del resultado.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean)">
      <summary>Escribe un objeto que utiliza el formato XML personalizado como un elemento XML.</summary>
      <param name="serializable">Objeto que implementa la interfaz <see cref="T:System.Xml.Serialization.IXmlSerializable" /> que utiliza un formato XML personalizado.</param>
      <param name="name">El nombre local del elemento XML que se va a escribir.</param>
      <param name="ns">El espacio de nombres del elemento XML que se va a escribir.</param>
      <param name="isNullable">
        <see langword="true" /> para escribir un atributo <see langword="xsi:nil='true'" /> si el objeto de clase <see cref="T:System.Xml.Serialization.IXmlSerializable" /> es <see langword="null" />; de lo contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean,System.Boolean)">
      <summary>Indica a <see cref="T:System.Xml.XmlNode" /> que escriba un objeto que utilice el formato XML personalizado como un elemento XML.</summary>
      <param name="serializable">Objeto que implementa la interfaz <see cref="T:System.Xml.Serialization.IXmlSerializable" /> que utiliza un formato XML personalizado.</param>
      <param name="name">El nombre local del elemento XML que se va a escribir.</param>
      <param name="ns">El espacio de nombres del elemento XML que se va a escribir.</param>
      <param name="isNullable">
        <see langword="true" /> para escribir un atributo <see langword="xsi:nil='true'" /> si el objeto <see cref="T:System.Xml.Serialization.IXmlSerializable" /> es <see langword="null" />; de lo contrario, <see langword="false" />.</param>
      <param name="wrapped">
        <see langword="true" /> para omitir la escritura de la etiqueta del elemento de apertura; de lo contrario, <see langword="false" /> para escribir la etiqueta del elemento de apertura.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartDocument">
      <summary>Escribe la declaración XML si el escritor se coloca al principio de un documento XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String)">
      <summary>Escribe una etiqueta de elemento de apertura, que incluye atributos.</summary>
      <param name="name">El nombre local del elemento XML que se va a escribir.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String)">
      <summary>Escribe una etiqueta de elemento de apertura, que incluye atributos.</summary>
      <param name="name">El nombre local del elemento XML que se va a escribir.</param>
      <param name="ns">El espacio de nombres del elemento XML que se va a escribir.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Boolean)">
      <summary>Escribe una etiqueta de elemento de apertura, que incluye atributos.</summary>
      <param name="name">El nombre local del elemento XML que se va a escribir.</param>
      <param name="ns">El espacio de nombres del elemento XML que se va a escribir.</param>
      <param name="writePrefixed">
        <see langword="true" /> para escribir el nombre de elemento con un prefijo si no hay ninguno disponible para el espacio de nombres especificado; de lo contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object)">
      <summary>Escribe una etiqueta de elemento de apertura, que incluye atributos.</summary>
      <param name="name">El nombre local del elemento XML que se va a escribir.</param>
      <param name="ns">El espacio de nombres del elemento XML que se va a escribir.</param>
      <param name="o">El objeto serializándose como un elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean)">
      <summary>Escribe una etiqueta de elemento de apertura, que incluye atributos.</summary>
      <param name="name">El nombre local del elemento XML que se va a escribir.</param>
      <param name="ns">El espacio de nombres del elemento XML que se va a escribir.</param>
      <param name="o">El objeto serializándose como un elemento XML.</param>
      <param name="writePrefixed">
        <see langword="true" /> para escribir el nombre de elemento con un prefijo si no hay ninguno disponible para el espacio de nombres especificado; de lo contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>Escribe una etiqueta de elemento de apertura, que incluye atributos.</summary>
      <param name="name">El nombre local del elemento XML que se va a escribir.</param>
      <param name="ns">El espacio de nombres del elemento XML que se va a escribir.</param>
      <param name="o">El objeto serializándose como un elemento XML.</param>
      <param name="writePrefixed">
        <see langword="true" /> para escribir el nombre de elemento con un prefijo si no hay ninguno disponible para el espacio de nombres especificado; de lo contrario, <see langword="false" />.</param>
      <param name="xmlns">Una instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> que contiene los pares de prefijo y espacio de nombres que se utilizarán en el código XML generado.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteTypedPrimitive(System.String,System.String,System.Object,System.Boolean)">
      <summary>Escribe un elemento XML cuyo cuerpo de texto es un valor de un tipo de datos del esquema XML sencillo.</summary>
      <param name="name">Nombre local del elemento que se va a escribir.</param>
      <param name="ns">Espacio de nombres del elemento que se va a escribir.</param>
      <param name="o">Objeto que se va a serializar en el cuerpo del elemento.</param>
      <param name="xsiType">
        <see langword="true" /> si el elemento XML especifica explícitamente el tipo de valor de texto mediante el atributo <see langword="xsi:type" />; de lo contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.Byte[])">
      <summary>Escribe una matriz de 64 bytes.</summary>
      <param name="value">Matriz de bytes que se va a escribir.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.String)">
      <summary>Escribe un valor de cadena especificada.</summary>
      <param name="value">Valor de la cadena que se va a escribir.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode)">
      <summary>Escribe el <see cref="T:System.Xml.XmlNode" /> especificado como un atributo XML.</summary>
      <param name="node">Nodo XML que se va a escribir.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode,System.Object)">
      <summary>Escribe el objeto <see cref="T:System.Xml.XmlNode" /> especificado como un atributo XML.</summary>
      <param name="node">Nodo XML que se va a escribir.</param>
      <param name="container">Objeto <see cref="T:System.Xml.Schema.XmlSchemaObject" /> (o <see langword="null" />) usado para generar un nombre calificado para un atributo <see langword="arrayType" /> del espacio de nombres de Lenguaje de descripción de servicios web o WSDL ("http://schemas.xmlsoap.org/wsdl/").</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXsiType(System.String,System.String)">
      <summary>Escribe un atributo <see langword="xsi:type" /> para un elemento XML que se serializa en un documento.</summary>
      <param name="name">Nombre local de un tipo de datos de esquemas XML.</param>
      <param name="ns">Espacio de nombres de un tipo de datos de esquemas XML.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializer">
      <summary>Serializa y deserializa objetos en y desde documentos XML. <see cref="T:System.Xml.Serialization.XmlSerializer" /> permite controlar el modo en que se codifican los objetos en XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> que puede serializar objetos del tipo especificado en documentos XML y deserializar documentos XML en objetos del tipo especificado.</summary>
      <param name="type">El tipo del objeto que este <see cref="T:System.Xml.Serialization.XmlSerializer" /> puede serializar.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> que puede serializar objetos del tipo especificado en documentos XML y deserializar documentos XML en objetos del tipo especificado. Especifica el espacio de nombres predeterminado para todos los elementos XML.</summary>
      <param name="type">El tipo del objeto que este <see cref="T:System.Xml.Serialization.XmlSerializer" /> puede serializar.</param>
      <param name="defaultNamespace">Espacio de nombres predeterminado que se utilizará para todos los elementos XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> que puede serializar objetos del tipo especificado en documentos XML y deserializar documentos XML en objetos del tipo especificado. Si una propiedad o un campo devuelve una matriz, el parámetro <paramref name="extraTypes" /> especifica aquellos objetos que pueden insertarse en la matriz.</summary>
      <param name="type">El tipo del objeto que este <see cref="T:System.Xml.Serialization.XmlSerializer" /> puede serializar.</param>
      <param name="extraTypes">Matriz <see cref="T:System.Type" /> de tipos de objeto adicionales que se han de serializar.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> que puede serializar objetos del tipo especificado en documentos XML y deserializar documentos XML en objetos del tipo especificado. Cada objeto que se ha de serializar también puede contener instancias de clases, que esta sobrecarga puede reemplazar con otras clases.</summary>
      <param name="type">Tipo del objeto que se va a serializar.</param>
      <param name="overrides">Una clase <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> que puede serializar objetos del tipo <see cref="T:System.Object" /> en instancias de documentos XML y deserializar instancias de documentos XML en objetos del tipo <see cref="T:System.Object" />. Cada objeto que se ha de serializar también puede contener instancias de clases, que esta sobrecarga reemplaza con otras clases. Esta sobrecarga especifica asimismo el espacio de nombres predeterminado para todos los elementos XML, así como la clase que se ha de utilizar como elemento raíz XML.</summary>
      <param name="type">El tipo del objeto que este <see cref="T:System.Xml.Serialization.XmlSerializer" /> puede serializar.</param>
      <param name="overrides">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> que extiende o reemplaza el comportamiento de la clase especificada en el parámetro <paramref name="type" />.</param>
      <param name="extraTypes">Matriz <see cref="T:System.Type" /> de tipos de objeto adicionales que se han de serializar.</param>
      <param name="root">
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> que define las propiedades del elemento raíz XML.</param>
      <param name="defaultNamespace">Espacio de nombres predeterminado de todos los elementos XML en el documento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> que puede serializar objetos del tipo <see cref="T:System.Object" /> en instancias de documentos XML y deserializar instancias de documentos XML en objetos del tipo <see cref="T:System.Object" />. Cada objeto que se ha de serializar también puede contener instancias de clases, que esta sobrecarga reemplaza con otras clases. Esta sobrecarga especifica asimismo el espacio de nombres predeterminado para todos los elementos XML, así como la clase que se ha de utilizar como elemento raíz XML.</summary>
      <param name="type">El tipo del objeto que este <see cref="T:System.Xml.Serialization.XmlSerializer" /> puede serializar.</param>
      <param name="overrides">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> que extiende o reemplaza el comportamiento de la clase especificada en el parámetro <paramref name="type" />.</param>
      <param name="extraTypes">Matriz <see cref="T:System.Type" /> de tipos de objeto adicionales que se han de serializar.</param>
      <param name="root">
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> que define las propiedades del elemento raíz XML.</param>
      <param name="defaultNamespace">Espacio de nombres predeterminado de todos los elementos XML en el documento XML.</param>
      <param name="location">La ubicación de los tipos.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> que puede serializar objetos del tipo especificado en documentos XML y deserializar un documento XML en un objeto del tipo especificado. Especifica también la clase que se utilizará como elemento raíz XML.</summary>
      <param name="type">El tipo del objeto que este <see cref="T:System.Xml.Serialization.XmlSerializer" /> puede serializar.</param>
      <param name="root">
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> que representa el elemento raíz XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Xml.Serialization.XmlTypeMapping)">
      <summary>Inicializa una instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> utilizando un objeto que asigna un tipo a otro.</summary>
      <param name="xmlTypeMapping">
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> que asigna un tipo a otro.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)">
      <summary>Obtiene un valor que indica si este <see cref="T:System.Xml.Serialization.XmlSerializer" /> puede deserializar un documento XML especificado.</summary>
      <param name="xmlReader">
        <see cref="T:System.Xml.XmlReader" /> que señala el documento que se ha de deserializar.</param>
      <returns>Es <see langword="true" /> si este <see cref="T:System.Xml.Serialization.XmlSerializer" /> puede deserializar el objeto seleccionado por <see cref="T:System.Xml.XmlReader" />; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CreateReader">
      <summary>Devuelve un objeto utilizado para leer el documento XML que se va a serializar.</summary>
      <returns>Objeto <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> que se utiliza para leer el documento XML.</returns>
      <exception cref="T:System.NotImplementedException">Se intenta por todos los medios tener acceso al método cuando el método no se reemplaza en una clase descendiente.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CreateWriter">
      <summary>Cuando se reemplaza en una clase derivada, devuelve un sistema de escritura para serializar el objeto.</summary>
      <returns>Instancia que implementa la clase <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />.</returns>
      <exception cref="T:System.NotImplementedException">Se intenta por todos los medios tener acceso al método cuando el método no se reemplaza en una clase descendiente.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)">
      <summary>Deserializa un documento XML que contiene el <see cref="T:System.IO.Stream" /> especificado.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" /> que contiene el documento XML que se va a deserializar.</param>
      <returns>
        <see cref="T:System.Object" /> que se está deserializando.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)">
      <summary>Deserializa un documento XML que contiene el <see cref="T:System.IO.TextReader" /> especificado.</summary>
      <param name="textReader">
        <see cref="T:System.IO.TextReader" /> que contiene el documento XML que se va a deserializar.</param>
      <returns>
        <see cref="T:System.Object" /> que se está deserializando.</returns>
      <exception cref="T:System.InvalidOperationException">Se ha producido un error durante la deserialización. La excepción original está disponible mediante la propiedad <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.Serialization.XmlSerializationReader)">
      <summary>Deserializa un documento XML que contiene el <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> especificado.</summary>
      <param name="reader">
        <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> que contiene el documento XML que se va a deserializar.</param>
      <returns>El objeto deserializado.</returns>
      <exception cref="T:System.NotImplementedException">Se intenta por todos los medios tener acceso al método cuando el método no se reemplaza en una clase descendiente.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)">
      <summary>Deserializa un documento XML que contiene el <see cref="T:System.Xml.XmlReader" /> especificado.</summary>
      <param name="xmlReader">
        <see cref="T:System.Xml.XmlReader" /> que contiene el documento XML que se va a deserializar.</param>
      <returns>
        <see cref="T:System.Object" /> que se está deserializando.</returns>
      <exception cref="T:System.InvalidOperationException">Se ha producido un error durante la deserialización. La excepción original está disponible mediante la propiedad <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String)">
      <summary>Deserializa un documento XML que contiene el <see cref="T:System.Xml.XmlReader" /> especificado y el estilo de codificación.</summary>
      <param name="xmlReader">
        <see cref="T:System.Xml.XmlReader" /> que contiene el documento XML que se va a deserializar.</param>
      <param name="encodingStyle">Estilo de codificación del XML serializado.</param>
      <returns>El objeto deserializado.</returns>
      <exception cref="T:System.InvalidOperationException">Se ha producido un error durante la deserialización. La excepción original está disponible mediante la propiedad <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String,System.Xml.Serialization.XmlDeserializationEvents)">
      <summary>Deserializa el objeto utilizando los datos que se encuentran en el <see cref="T:System.Xml.XmlReader" /> especificado.</summary>
      <param name="xmlReader">Instancia de la clase <see cref="T:System.Xml.XmlReader" /> utilizada para leer el documento.</param>
      <param name="encodingStyle">Codificación utilizada.</param>
      <param name="events">Instancia de la clase <see cref="T:System.Xml.Serialization.XmlDeserializationEvents" />.</param>
      <returns>Objeto que se está deserializando.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.Xml.Serialization.XmlDeserializationEvents)">
      <summary>Deserializa un documento XML que se encuentra en el <see cref="T:System.Xml.XmlReader" /> especificado y permite reemplazar los eventos que se producen durante la deserialización.</summary>
      <param name="xmlReader">
        <see cref="T:System.Xml.XmlReader" /> que contiene el documento que se va a deserializar.</param>
      <param name="events">Instancia de la clase <see cref="T:System.Xml.Serialization.XmlDeserializationEvents" />.</param>
      <returns>
        <see cref="T:System.Object" /> que se está deserializando.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[])">
      <summary>Devuelve una matriz de objetos <see cref="T:System.Xml.Serialization.XmlSerializer" /> creada a partir de una matriz de objetos <see cref="T:System.Xml.Serialization.XmlTypeMapping" />.</summary>
      <param name="mappings">Matriz de objetos <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> que asigna un tipo a otro.</param>
      <returns>Matriz de objetos <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Type)">
      <summary>Devuelve una instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> a partir de las asignaciones especificadas.</summary>
      <param name="mappings">Matriz de objetos <see cref="T:System.Xml.Serialization.XmlMapping" />.</param>
      <param name="type">
        <see cref="T:System.Type" /> del objeto deserializado.</param>
      <returns>Instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromTypes(System.Type[])">
      <summary>Devuelve una matriz de objetos <see cref="T:System.Xml.Serialization.XmlSerializer" /> creada a partir de una matriz de tipos.</summary>
      <param name="types">Matriz de objetos <see cref="T:System.Type" />.</param>
      <returns>Matriz de objetos <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type)">
      <summary>Devuelve el nombre del ensamblado que contiene una o más versiones de <see cref="T:System.Xml.Serialization.XmlSerializer" /> creado especialmente para serializar o deserializar el tipo especificado.</summary>
      <param name="type">
        <see cref="T:System.Type" /> que se está deserializando.</param>
      <returns>Nombre del ensamblado que contiene <see cref="T:System.Xml.Serialization.XmlSerializer" /> para el tipo.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type,System.String)">
      <summary>Devuelve el nombre del ensamblado que contiene el serializador para el tipo especificado en el espacio de nombres especificado.</summary>
      <param name="type">
        <see cref="T:System.Type" /> que interesa al usuario.</param>
      <param name="defaultNamespace">Espacio de nombres del tipo.</param>
      <returns>Nombre del ensamblado que contiene serializadores creados especialmente.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)">
      <summary>Serializa el <see cref="T:System.Object" /> especificado y escribe el documento XML en un archivo utilizando el <see cref="T:System.IO.Stream" /> especificado.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" /> que se utiliza para escribir el documento XML.</param>
      <param name="o">
        <see cref="T:System.Object" /> que se va a serializar.</param>
      <exception cref="T:System.InvalidOperationException">Se ha producido un error durante la serialización. La excepción original está disponible mediante la propiedad <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>Serializa el <see cref="T:System.Object" /> especificado y escribe el documento XML en un archivo utilizando el <see cref="T:System.IO.Stream" /> especificado, que hace referencia a los espacios de nombres especificados.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" /> que se utiliza para escribir el documento XML.</param>
      <param name="o">
        <see cref="T:System.Object" /> que se va a serializar.</param>
      <param name="namespaces">
        <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> al que hace referencia el objeto.</param>
      <exception cref="T:System.InvalidOperationException">Se ha producido un error durante la serialización. La excepción original está disponible mediante la propiedad <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)">
      <summary>Serializa el <see cref="T:System.Object" /> especificado y escribe el documento XML en un archivo utilizando el <see cref="T:System.IO.TextWriter" /> especificado.</summary>
      <param name="textWriter">
        <see cref="T:System.IO.TextWriter" /> que se utiliza para escribir el documento XML.</param>
      <param name="o">
        <see cref="T:System.Object" /> que se va a serializar.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>Serializa el objeto <see cref="T:System.Object" /> especificado, escribe el documento XML en un archivo utilizando el objeto <see cref="T:System.IO.TextWriter" /> especificado y hace referencia a los espacios de nombres especificados.</summary>
      <param name="textWriter">
        <see cref="T:System.IO.TextWriter" /> que se utiliza para escribir el documento XML.</param>
      <param name="o">
        <see cref="T:System.Object" /> que se va a serializar.</param>
      <param name="namespaces">
        <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> que contiene los espacios de nombres para el documento XML generado.</param>
      <exception cref="T:System.InvalidOperationException">Se ha producido un error durante la serialización. La excepción original está disponible mediante la propiedad <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.Serialization.XmlSerializationWriter)">
      <summary>Serializa el <see cref="T:System.Object" /> especificado y escribe el documento XML en un archivo utilizando el <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> especificado.</summary>
      <param name="o">
        <see cref="T:System.Object" /> que se va a serializar.</param>
      <param name="writer">
        <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> que se utiliza para escribir el documento XML.</param>
      <exception cref="T:System.NotImplementedException">Se intenta por todos los medios tener acceso al método cuando el método no se reemplaza en una clase descendiente.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)">
      <summary>Serializa el <see cref="T:System.Object" /> especificado y escribe el documento XML en un archivo utilizando el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="xmlWriter">
        <see cref="T:System.Xml.XmlWriter" /> que se utiliza para escribir el documento XML.</param>
      <param name="o">
        <see cref="T:System.Object" /> que se va a serializar.</param>
      <exception cref="T:System.InvalidOperationException">Se ha producido un error durante la serialización. La excepción original está disponible mediante la propiedad <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>Serializa el objeto <see cref="T:System.Object" /> especificado, escribe el documento XML en un archivo utilizando el objeto <see cref="T:System.Xml.XmlWriter" /> especificado y hace referencia a los espacios de nombres especificados.</summary>
      <param name="xmlWriter">
        <see cref="T:System.Xml.XmlWriter" /> que se utiliza para escribir el documento XML.</param>
      <param name="o">
        <see cref="T:System.Object" /> que se va a serializar.</param>
      <param name="namespaces">
        <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> al que hace referencia el objeto.</param>
      <exception cref="T:System.InvalidOperationException">Se ha producido un error durante la serialización. La excepción original está disponible mediante la propiedad <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)">
      <summary>Serializa el objeto especificado, escribe el documento XML en un archivo utilizando el <see cref="T:System.Xml.XmlWriter" /> especificado y hace referencia a los espacios de nombres especificados y al estilo de codificación.</summary>
      <param name="xmlWriter">
        <see cref="T:System.Xml.XmlWriter" /> que se utiliza para escribir el documento XML.</param>
      <param name="o">El objeto que se va a serializar.</param>
      <param name="namespaces">
        <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> al que hace referencia el objeto.</param>
      <param name="encodingStyle">Estilo de codificación del XML serializado.</param>
      <exception cref="T:System.InvalidOperationException">Se ha producido un error durante la serialización. La excepción original está disponible mediante la propiedad <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String,System.String)">
      <summary>Serializa el <see cref="T:System.Object" /> especificado y escribe el documento XML en un archivo mediante el <see cref="T:System.Xml.XmlWriter" /> especificado, así como los espacios de nombres y la codificación especificados.</summary>
      <param name="xmlWriter">
        <see cref="T:System.Xml.XmlWriter" /> que se utiliza para escribir el documento XML.</param>
      <param name="o">El objeto que se va a serializar.</param>
      <param name="namespaces">Instancia de <see langword="XmlSerializerNamespaces" /> que contiene los espacios de nombres y prefijos que se van a utilizar.</param>
      <param name="encodingStyle">Codificación utilizada en el documento.</param>
      <param name="id">Para mensajes con codificación SOAP, base utilizada para generar los atributos de identificador.</param>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute">
      <summary>Se produce cuando <see cref="T:System.Xml.Serialization.XmlSerializer" /> detecta un atributo XML de tipo desconocido durante la deserialización.</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownElement">
      <summary>Se produce cuando <see cref="T:System.Xml.Serialization.XmlSerializer" /> detecta un elemento XML de tipo desconocido durante la deserialización.</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownNode">
      <summary>Se produce cuando <see cref="T:System.Xml.Serialization.XmlSerializer" /> detecta un nodo XML de tipo desconocido durante la deserialización.</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject">
      <summary>Se produce durante la deserialización de una secuencia XML con codificación SOAP, cuando <see cref="T:System.Xml.Serialization.XmlSerializer" /> encuentra un tipo reconocido que no se utiliza o al que no se hace referencia.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute">
      <summary>Aplicado a un proxy cliente de servicios Web, le permite especificar un ensamblado que contiene los serializadores hechos a medida.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" /> con el nombre de ensamblado especificado.</summary>
      <param name="assemblyName">Nombre sencillo del ensamblado sin cifrar.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor(System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" /> con el nombre y la ubicación de ensamblado especificadas.</summary>
      <param name="assemblyName">Nombre sencillo del ensamblado sin cifrar.</param>
      <param name="codeBase">Cadena que representa la dirección URL del ensamblado.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerAssemblyAttribute.AssemblyName">
      <summary>Obtiene o establece el nombre del ensamblado que contiene los serializadores para un conjunto de tipos concreto.</summary>
      <returns>Nombre sencillo del ensamblado sin cifrar.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerAssemblyAttribute.CodeBase">
      <summary>Obtiene o establece la ubicación del ensamblado que contiene los serializadores.</summary>
      <returns>Una ubicación, como una ruta de acceso o un Identificador de recursos uniforme (URI), que señala al ensamblado.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerFactory">
      <summary>Crea versiones con establecimiento de tipos de <see cref="T:System.Xml.Serialization.XmlSerializer" /> para una serialización más eficaz.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializerFactory" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type)">
      <summary>Devuelve una derivación de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> que se utiliza para serializar el tipo especificado.</summary>
      <param name="type">
        <see cref="T:System.Type" /> que se va a serializar.</param>
      <returns>Una derivación de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> que se crea específicamente para serializar el tipo especificado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.String)">
      <summary>Devuelve una derivación de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> que se utiliza para serializar el tipo y el espacio de nombres especificados.</summary>
      <param name="type">
        <see cref="T:System.Type" /> que se va a serializar.</param>
      <param name="defaultNamespace">Espacio de nombres predeterminado que se utilizará para todos los elementos XML.</param>
      <returns>Una derivación de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> que se crea específicamente para serializar el tipo especificado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Type[])">
      <summary>Devuelve una derivación de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> que se utiliza para serializar el tipo especificado. Si una propiedad o un campo devuelve una matriz, el parámetro <paramref name="extraTypes" /> especifica aquellos objetos que pueden insertarse en la matriz.</summary>
      <param name="type">
        <see cref="T:System.Type" /> que se va a serializar.</param>
      <param name="extraTypes">Matriz <see cref="T:System.Type" /> de tipos de objeto adicionales que se han de serializar.</param>
      <returns>Derivación de <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
      <summary>Devuelve una derivación de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> que puede serializar objetos del tipo especificado en documentos XML y viceversa. Cada objeto que se ha de serializar también puede contener instancias de clases, que esta sobrecarga puede reemplazar con otras clases.</summary>
      <param name="type">
        <see cref="T:System.Type" /> que se va a serializar.</param>
      <param name="overrides">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> que contiene campos que omiten el comportamiento de serialización predeterminado.</param>
      <returns>Derivación de <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary>Devuelve una derivación de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> que puede serializar objetos del tipo especificado en instancias de documentos XML y viceversa. Cada objeto que se ha de serializar también puede contener instancias de clases, que esta sobrecarga puede reemplazar con otras clases. Esta sobrecarga especifica asimismo el espacio de nombres predeterminado para todos los elementos XML, así como la clase que se ha de utilizar como elemento raíz XML.</summary>
      <param name="type">
        <see cref="T:System.Type" /> que se va a serializar.</param>
      <param name="overrides">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> que contiene campos que omiten el comportamiento de serialización predeterminado.</param>
      <param name="extraTypes">Matriz <see cref="T:System.Type" /> de tipos de objeto adicionales que se han de serializar.</param>
      <param name="root">
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> que representa el elemento raíz XML.</param>
      <param name="defaultNamespace">Espacio de nombres predeterminado de todos los elementos XML en el documento XML.</param>
      <returns>Derivación de <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
      <summary>Devuelve una derivación de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> que puede serializar objetos del tipo especificado en instancias de documentos XML y viceversa. Cada objeto que se ha de serializar también puede contener instancias de clases, que esta sobrecarga puede reemplazar con otras clases. Esta sobrecarga especifica asimismo el espacio de nombres predeterminado para todos los elementos XML, así como la clase que se ha de utilizar como elemento raíz XML.</summary>
      <param name="type">El <see cref="T:System.Type" /> del objeto que este <see cref="T:System.Xml.Serialization.XmlSerializer" /> puede serializar.</param>
      <param name="overrides">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> que extiende o reemplaza el comportamiento de la clase especificada en el parámetro de tipo.</param>
      <param name="extraTypes">Matriz <see cref="T:System.Type" /> de tipos de objeto adicionales que se han de serializar.</param>
      <param name="root">
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> que define las propiedades del elemento raíz XML.</param>
      <param name="defaultNamespace">Espacio de nombres predeterminado de todos los elementos XML en el documento XML.</param>
      <param name="location">Ruta de acceso que especifica la ubicación de los tipos.</param>
      <returns>Derivación de <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary>Devuelve una derivación de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> que puede serializar objetos del tipo especificado en documentos XML y viceversa. Especifica el objeto que representa el elemento raíz de XML.</summary>
      <param name="type">
        <see cref="T:System.Type" /> que se va a serializar.</param>
      <param name="root">
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> que representa el elemento raíz XML.</param>
      <returns>Derivación de <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Xml.Serialization.XmlTypeMapping)">
      <summary>Devuelve una derivación de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> utilizando un objeto que asigna un tipo a otro.</summary>
      <param name="xmlTypeMapping">
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> que asigna un tipo a otro.</param>
      <returns>Una derivación de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> que se crea específicamente para serializar el tipo asignado.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerImplementation">
      <summary>Define el lector, el escritor y los métodos para los serializadores con establecimiento de tipos generados previamente.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializerImplementation" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.CanSerialize(System.Type)">
      <summary>Obtiene un valor que determina si se puede serializar un tipo.</summary>
      <param name="type">Tipo que se va a serializar.</param>
      <returns>
        <see langword="true" /> si el tipo se puede serializar; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.GetSerializer(System.Type)">
      <summary>Devuelve un serializador para el tipo especificado.</summary>
      <param name="type">Tipo que se va a serializar.</param>
      <returns>Una instancia de un un tipo derivado de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.Reader">
      <summary>Obtiene el objeto del lector de XML que utiliza el serializador.</summary>
      <returns>Un <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> que se utiliza para leer un flujo de datos o documento XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.ReadMethods">
      <summary>Obtiene la colección de métodos que se utilizan para leer un flujo de datos.</summary>
      <returns>
        <see cref="T:System.Collections.Hashtable" /> que contiene los métodos.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.TypedSerializers">
      <summary>Obtiene la colección de serializadores con establecimiento de tipos que se encuentran en el ensamblado.</summary>
      <returns>
        <see cref="T:System.Collections.Hashtable" /> que contiene los serializadores con establecimiento de tipos.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.WriteMethods">
      <summary>Obtiene la colección de métodos que se utilizan para escribir en un flujo de datos.</summary>
      <returns>
        <see cref="T:System.Collections.Hashtable" /> que contiene los métodos.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.Writer">
      <summary>Obtiene el objeto del escritor de XML para el serializador.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> que se utiliza para escribir en un flujo de datos o documento XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerVersionAttribute">
      <summary>Significa que el código lo generó la infraestructura de serialización y se puede reutilizar para aumentar el rendimiento, cuando este atributo se aplica a un ensamblado.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerVersionAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializerVersionAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerVersionAttribute.#ctor(System.Type)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializerVersionAttribute" /> para el tipo especificado.</summary>
      <param name="type">El tipo que se serializa.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Namespace">
      <summary>Obtiene o establece el espacio de nombres de Common Language Runtime (CLR) del ensamblado.</summary>
      <returns>
        <see cref="T:System.String" /> que contiene el espacio de nombres de Common Language Runtime (CLR) del ensamblado.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.ParentAssemblyId">
      <summary>Obtiene o establece la identidad del ensamblado principal.</summary>
      <returns>Versión del ensamblado principal.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Type">
      <summary>Obtiene o establece el tipo en el que funciona el serializador.</summary>
      <returns>
        <see cref="T:System.Type" /> que se va a serializar.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Version">
      <summary>Obtiene o establece el número de versión del ensamblado.</summary>
      <returns>Versión del ensamblado.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTypeAttribute">
      <summary>Controla el esquema XML generado cuando <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa el destino del atributo.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTypeAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTypeAttribute.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> y especifica el nombre del tipo XML.</summary>
      <param name="typeName">Nombre del tipo XML que <see cref="T:System.Xml.Serialization.XmlSerializer" /> genera cuando serializa la instancia de clase (y reconoce al deserializar la instancia de clase).</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.AnonymousType">
      <summary>Obtiene o establece un valor que determina si el tipo de esquema resultante es un tipo anónimo del XSD.</summary>
      <returns>Es <see langword="true" /> si el tipo de esquema resultante es un tipo anónimo del XSD; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema">
      <summary>Obtiene o establece un valor que indica si se debe incluir el tipo en los documentos de esquema XML.</summary>
      <returns>
        <see langword="true" /> para incluir el tipo en los documentos de esquema XML; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.Namespace">
      <summary>Obtiene o establece el espacio de nombres del tipo XML.</summary>
      <returns>Espacio de nombres del tipo XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.TypeName">
      <summary>Obtiene o establece el nombre del tipo XML.</summary>
      <returns>Nombre del tipo XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTypeMapping">
      <summary>Contiene una asignación de un tipo a otro.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.TypeFullName">
      <summary>Nombre de tipo completo que incluye el espacio de nombres (o espacios de nombres) y el tipo.</summary>
      <returns>Nombre de tipo completo.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.TypeName">
      <summary>Obtiene el nombre de tipo del objeto asignado.</summary>
      <returns>Nombre de tipo del objeto asignado.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.XsdTypeName">
      <summary>Obtiene el nombre del elemento XML del objeto asignado.</summary>
      <returns>Nombre del elemento XML del objeto asignado. El valor predeterminado es el nombre de la clase del objeto.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.XsdTypeNamespace">
      <summary>Obtiene el espacio de nombres XML del objeto asignado.</summary>
      <returns>Espacio de nombres XML del objeto asignado. El valor predeterminado es una cadena vacía ("").</returns>
    </member>
  </members>
</doc>