<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net.ServicePoint</name>
  </assembly>
  <members>
    <member name="T:System.Net.BindIPEndPoint">
      <summary>Representa el método que especifica una dirección del protocolo Internet local y un número de puerto para un objeto <see cref="T:System.Net.ServicePoint" />.</summary>
      <param name="servicePoint">El objeto <see cref="T:System.Net.ServicePoint" /> asociado a la conexión que se va a crear.</param>
      <param name="remoteEndPoint">El <see cref="T:System.Net.IPEndPoint" /> remoto que especifica el host remoto.</param>
      <param name="retryCount">El número de veces que se llamó a este delegado para una conexión especificada.</param>
      <returns>El objeto <see cref="T:System.Net.IPEndPoint" /> local al que está enlazado el <see cref="T:System.Net.ServicePoint" />.</returns>
    </member>
    <member name="T:System.Net.SecurityProtocolType">
      <summary>Especifica los protocolos de seguridad que admite el paquete de seguridad Schannel.</summary>
    </member>
    <member name="F:System.Net.SecurityProtocolType.Ssl3">
      <summary>Especifica el protocolo de seguridad Secure Socket Layer (SSL) 3.0. El protocolo Seguridad de la capa de transporte (TLS) ha reemplazado a SSL 3.0 y solo se proporciona para la compatibilidad con versiones anteriores.</summary>
    </member>
    <member name="F:System.Net.SecurityProtocolType.SystemDefault">
      <summary>Permite que el sistema operativo seleccione el mejor protocolo y que impida el uso de protocolos que no se consideren seguros. Le recomendamos que use este valor, excepto si existe un motivo específico para no usarlo en la aplicación.</summary>
    </member>
    <member name="F:System.Net.SecurityProtocolType.Tls">
      <summary>Especifica el protocolo Seguridad de la capa de transporte (TLS) 1.0. El protocolo TLS 1.0 está definido en IETF RFC 2246.</summary>
    </member>
    <member name="F:System.Net.SecurityProtocolType.Tls11">
      <summary>Especifica el protocolo Seguridad de la capa de transporte (TLS) 1.1. El protocolo TLS 1.1 está definido en IETF RFC 4346. En los sistemas de Windows, este valor se admite a partir de Windows 7.</summary>
    </member>
    <member name="F:System.Net.SecurityProtocolType.Tls12">
      <summary>Especifica el protocolo Seguridad de la capa de transporte (TLS) 1.2. El protocolo TLS 1.2 está definido en IETF RFC 5246. En los sistemas de Windows, este valor se admite a partir de Windows 7.</summary>
    </member>
    <member name="F:System.Net.SecurityProtocolType.Tls13">
      <summary>Especifica el protocolo de seguridad TLS 1.3. El protocolo TLS está definido en IETF RFC 8446.</summary>
    </member>
    <member name="T:System.Net.ServicePoint">
      <summary>Proporciona administración de conexiones para las conexiones HTTP.</summary>
    </member>
    <member name="P:System.Net.ServicePoint.Address">
      <summary>Obtiene el identificador URI del servidor al que se conecta este objeto <see cref="T:System.Net.ServicePoint" />.</summary>
      <returns>Una instancia de la clase <see cref="T:System.Uri" /> que contiene el identificador URI del servidor de Internet al que se conecta este objeto <see cref="T:System.Net.ServicePoint" />.</returns>
      <exception cref="T:System.NotSupportedException">El control <see cref="T:System.Net.ServicePoint" /> está en modo de host.</exception>
    </member>
    <member name="P:System.Net.ServicePoint.BindIPEndPointDelegate">
      <summary>Especifica el delegado que asocia un objeto <see cref="T:System.Net.IPEndPoint" /> local a un objeto <see cref="T:System.Net.ServicePoint" />.</summary>
      <returns>Un delegado que fuerza a un objeto <see cref="T:System.Net.ServicePoint" /> a que utilice una dirección del protocolo Internet (IP) local y un número de puerto determinados. El valor predeterminado es <see langword="null" />.</returns>
    </member>
    <member name="P:System.Net.ServicePoint.Certificate">
      <summary>Obtiene el certificado recibido para este objeto <see cref="T:System.Net.ServicePoint" />.</summary>
      <returns>Una instancia de la clase <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> que contiene el certificado de seguridad recibido para este objeto <see cref="T:System.Net.ServicePoint" />.</returns>
    </member>
    <member name="P:System.Net.ServicePoint.ClientCertificate">
      <summary>Obtiene el último certificado de cliente enviado al servidor.</summary>
      <returns>Un objeto <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> que contiene los valores públicos del último certificado de cliente enviado al servidor.</returns>
    </member>
    <member name="M:System.Net.ServicePoint.CloseConnectionGroup(System.String)">
      <summary>Quita el grupo de conexiones especificado de este objeto <see cref="T:System.Net.ServicePoint" />.</summary>
      <param name="connectionGroupName">El nombre del grupo de conexiones que contiene las conexiones que se cierran y quitan de este punto de servicio.</param>
      <returns>Un valor <see cref="T:System.Boolean" /> que indica si se cerró el grupo de conexiones.</returns>
    </member>
    <member name="P:System.Net.ServicePoint.ConnectionLeaseTimeout">
      <summary>Obtiene o establece el número de milisegundos transcurridos los cuales una conexión <see cref="T:System.Net.ServicePoint" /> activa se cierra.</summary>
      <returns>
        <see cref="T:System.Int32" /> especifica el número de milisegundos que una conexión <see cref="T:System.Net.ServicePoint" /> activa permanece abierta. El valor predeterminado es -1, que permite a una conexión <see cref="T:System.Net.ServicePoint" /> activa permanecer conectada indefinidamente. Establezca esta propiedad en 0 para forzar el cierre de las conexiones <see cref="T:System.Net.ServicePoint" /> después de atender una solicitud.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor especificado para una operación de conjunto es un número negativo menor que -1.</exception>
    </member>
    <member name="P:System.Net.ServicePoint.ConnectionLimit">
      <summary>Obtiene o establece el número máximo de conexiones permitidas en este objeto <see cref="T:System.Net.ServicePoint" />.</summary>
      <returns>El número máximo de conexiones permitidas en este objeto <see cref="T:System.Net.ServicePoint" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">El límite de conexiones es menor o igual que 0.</exception>
    </member>
    <member name="P:System.Net.ServicePoint.ConnectionName">
      <summary>Obtiene el nombre de la conexión.</summary>
      <returns>
        <see cref="T:System.String" /> que representa el nombre de la conexión.</returns>
    </member>
    <member name="P:System.Net.ServicePoint.CurrentConnections">
      <summary>Obtiene el número de conexiones abiertas asociadas a este objeto <see cref="T:System.Net.ServicePoint" />.</summary>
      <returns>Número de conexiones abiertas asociadas a este objeto <see cref="T:System.Net.ServicePoint" />.</returns>
    </member>
    <member name="P:System.Net.ServicePoint.Expect100Continue">
      <summary>Obtiene o establece un valor <see cref="T:System.Boolean" /> que determina si se utiliza el comportamiento 100-Continue.</summary>
      <returns>Es <see langword="true" /> para las respuestas de tipo Expect 100-Continue a las solicitudes <see langword="POST" />; en caso contrario, es <see langword="false" />. El valor predeterminado es <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.ServicePoint.IdleSince">
      <summary>Obtiene la fecha y la hora en que el objeto <see cref="T:System.Net.ServicePoint" /> se conectó al host por última vez.</summary>
      <returns>Un objeto <see cref="T:System.DateTime" /> que contiene la fecha y la hora en que el objeto <see cref="T:System.Net.ServicePoint" /> se conectó por última vez.</returns>
    </member>
    <member name="P:System.Net.ServicePoint.MaxIdleTime">
      <summary>Obtiene o establece la cantidad de tiempo que una conexión asociada al objeto <see cref="T:System.Net.ServicePoint" /> puede permanecer inactiva antes de cerrarse.</summary>
      <returns>Duración, expresada en milisegundos, que una conexión asociada al objeto <see cref="T:System.Net.ServicePoint" /> puede permanecer inactiva antes de que se cierre y la utilice otra conexión.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.Net.ServicePoint.MaxIdleTime" /> se establece en un valor menor que <see cref="F:System.Threading.Timeout.Infinite" /> o mayor que <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="P:System.Net.ServicePoint.ProtocolVersion">
      <summary>Obtiene la versión del protocolo HTTP que usa el objeto <see cref="T:System.Net.ServicePoint" />.</summary>
      <returns>Un objeto <see cref="T:System.Version" /> que contiene la versión del protocolo HTTP que usa el objeto <see cref="T:System.Net.ServicePoint" />.</returns>
    </member>
    <member name="P:System.Net.ServicePoint.ReceiveBufferSize">
      <summary>Obtiene o establece el tamaño del búfer de recepción para el socket utilizado por <see cref="T:System.Net.ServicePoint" />.</summary>
      <returns>Un objeto <see cref="T:System.Int32" /> que contiene el tamaño, en bytes, del búfer de recepción. El valor predeterminado es 8192.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor especificado para una operación de conjunto es mayor que <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Net.ServicePoint.SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)">
      <summary>Habilita o deshabilita la opción keep-alive en una conexión TCP.</summary>
      <param name="enabled">Si su valor es true, la opción keep-alive en una conexión TCP estará habilitada con los valores especificados de <paramref name="keepAliveTime" /> y <paramref name="keepAliveInterval" />.  
Si su valor es false, esta opción estará deshabilitada y se omitirán los parámetros restantes.  
El valor predeterminado es false.</param>
      <param name="keepAliveTime">Especifica el tiempo de espera sin actividad, en milisegundos, hasta que se envía el primer paquete keep-alive.  
El valor debe ser mayor que 0.  Si se pasa un valor menor o igual que cero, se iniciará una excepción <see cref="T:System.ArgumentOutOfRangeException" />.</param>
      <param name="keepAliveInterval">Especifica el intervalo, en milisegundos, entre envíos sucesivos de paquetes keep-alive si no se recibe ninguna confirmación.  
El valor debe ser mayor que 0.  Si se pasa un valor menor o igual que cero, se iniciará una excepción <see cref="T:System.ArgumentOutOfRangeException" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor especificado para el parámetro <paramref name="keepAliveTime" /> o <paramref name="keepAliveInterval" /> es menor o igual que 0.</exception>
    </member>
    <member name="P:System.Net.ServicePoint.SupportsPipelining">
      <summary>Indica si el objeto <see cref="T:System.Net.ServicePoint" /> admite conexiones canalizadas.</summary>
      <returns>Es <see langword="true" /> si el objeto <see cref="T:System.Net.ServicePoint" /> admite conexiones canalizadas; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.ServicePoint.UseNagleAlgorithm">
      <summary>Obtiene o establece un valor <see cref="T:System.Boolean" /> que determina si se utiliza el algoritmo de Nagle en las conexiones administradas por este objeto <see cref="T:System.Net.ServicePoint" />.</summary>
      <returns>Es <see langword="true" /> para utilizar el algoritmo de Nagle; en caso contrario, es <see langword="false" />. El valor predeterminado es <see langword="true" />.</returns>
    </member>
    <member name="T:System.Net.ServicePointManager">
      <summary>Administra la colección de objetos <see cref="T:System.Net.ServicePoint" />.</summary>
    </member>
    <member name="P:System.Net.ServicePointManager.CheckCertificateRevocationList">
      <summary>Obtiene o establece un valor <see cref="T:System.Boolean" /> que indica si el certificado se coteja con la lista de revocación de la entidad de certificación.</summary>
      <returns>Es <see langword="true" /> si la lista de revocación de certificados se comprueba; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.ServicePointManager.DefaultConnectionLimit">
      <summary>Obtiene o establece el número máximo de conexiones simultáneas permitido por un objeto <see cref="T:System.Net.ServicePoint" />.</summary>
      <returns>El número máximo de conexiones simultáneas permitido por un objeto <see cref="T:System.Net.ServicePoint" />. El límite de conexiones predeterminado es 10 para las aplicaciones hospedadas en ASP.NET y 2 para todos los demás. Cuando se ejecuta una aplicación como host de ASP.NET, no se puede modificar el valor de esta propiedad mediante el archivo de configuración si se establece la propiedad autoConfig en <see langword="true" />. Sin embargo, puede cambiar el valor mediante programación cuando la propiedad autoConfig es <see langword="true" />. Defina el valor preferido una vez cuando se cargue AppDomain.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.Net.ServicePointManager.DefaultConnectionLimit" /> es menor o igual que 0.</exception>
    </member>
    <member name="F:System.Net.ServicePointManager.DefaultNonPersistentConnectionLimit">
      <summary>El número predeterminado de conexiones no persistentes (4) que se permite en un objeto <see cref="T:System.Net.ServicePoint" /> conectado a un servidor HTTP/1.0 o posterior. Este campo es constante pero no se utiliza en .NET Framework 2.0.</summary>
    </member>
    <member name="F:System.Net.ServicePointManager.DefaultPersistentConnectionLimit">
      <summary>El número predeterminado de conexiones persistentes (2) que se permite en un objeto <see cref="T:System.Net.ServicePoint" /> conectado a un servidor HTTP/1.1 o posterior. Este campo es constante y se usa para inicializar la propiedad <see cref="P:System.Net.ServicePointManager.DefaultConnectionLimit" /> si el valor de la propiedad <see cref="P:System.Net.ServicePointManager.DefaultConnectionLimit" /> no se ha establecido ni directamente ni a través de la configuración.</summary>
    </member>
    <member name="P:System.Net.ServicePointManager.DnsRefreshTimeout">
      <summary>Obtiene o establece un valor que indica cuánto tiempo se considera válida una resolución del Servicio de nombres de dominio (DNS).</summary>
      <returns>El valor del tiempo de espera, en milisegundos. Un valor de -1 indica un período de tiempo de espera infinito. El valor predeterminado es 120.000 milisegundos (dos minutos).</returns>
    </member>
    <member name="P:System.Net.ServicePointManager.EnableDnsRoundRobin">
      <summary>Obtiene o establece un valor que indica si una resolución del Servicio de nombres de dominio (DNS) rota entre las direcciones del protocolo Internet (IP) aplicables.</summary>
      <returns>Es <see langword="false" /> si una resolución de DNS siempre devuelve la primera dirección IP para un host determinado; de lo contrario, es <see langword="true" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.ServicePointManager.EncryptionPolicy">
      <summary>Obtiene el objeto <see cref="T:System.Net.Security.EncryptionPolicy" /> para esta instancia de <see cref="T:System.Net.ServicePointManager" />.</summary>
      <returns>Directiva de cifrado que se va a utilizar para esta instancia de <see cref="T:System.Net.ServicePointManager" />.</returns>
    </member>
    <member name="P:System.Net.ServicePointManager.Expect100Continue">
      <summary>Obtiene o establece un valor <see cref="T:System.Boolean" /> que determina si se utiliza el comportamiento 100-Continue.</summary>
      <returns>Es <see langword="true" /> para habilitar el comportamiento 100-Continue. El valor predeterminado es <see langword="true" />.</returns>
    </member>
    <member name="M:System.Net.ServicePointManager.FindServicePoint(System.String,System.Net.IWebProxy)">
      <summary>Busca un objeto <see cref="T:System.Net.ServicePoint" /> existente o crea un objeto <see cref="T:System.Net.ServicePoint" /> nuevo para administrar las comunicaciones con el identificador URI especificado.</summary>
      <param name="uriString">Identificador URI del recurso de Internet con el que se establecerá contacto.</param>
      <param name="proxy">Los datos del proxy para esta solicitud.</param>
      <returns>El objeto <see cref="T:System.Net.ServicePoint" /> que administra las comunicaciones para la solicitud.</returns>
      <exception cref="T:System.UriFormatException">El identificador URI especificado en <paramref name="uriString" /> no es válido.</exception>
      <exception cref="T:System.InvalidOperationException">Se ha alcanzado el número máximo de objetos <see cref="T:System.Net.ServicePoint" /> definido en <see cref="P:System.Net.ServicePointManager.MaxServicePoints" />.</exception>
    </member>
    <member name="M:System.Net.ServicePointManager.FindServicePoint(System.Uri)">
      <summary>Busca un objeto <see cref="T:System.Net.ServicePoint" /> existente o crea un objeto <see cref="T:System.Net.ServicePoint" /> nuevo para administrar las comunicaciones con el objeto <see cref="T:System.Uri" /> especificado.</summary>
      <param name="address">El objeto <see cref="T:System.Uri" /> del recurso de Internet con el que se establecerá contacto.</param>
      <returns>El objeto <see cref="T:System.Net.ServicePoint" /> que administra las comunicaciones para la solicitud.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Se ha alcanzado el número máximo de objetos <see cref="T:System.Net.ServicePoint" /> definido en <see cref="P:System.Net.ServicePointManager.MaxServicePoints" />.</exception>
    </member>
    <member name="M:System.Net.ServicePointManager.FindServicePoint(System.Uri,System.Net.IWebProxy)">
      <summary>Busca un objeto <see cref="T:System.Net.ServicePoint" /> existente o crea un objeto <see cref="T:System.Net.ServicePoint" /> nuevo para administrar las comunicaciones con el objeto <see cref="T:System.Uri" /> especificado.</summary>
      <param name="address">Un objeto <see cref="T:System.Uri" /> que contiene la dirección del recurso de Internet con el que se establecerá el contacto.</param>
      <param name="proxy">Los datos del proxy para esta solicitud.</param>
      <returns>El objeto <see cref="T:System.Net.ServicePoint" /> que administra las comunicaciones para la solicitud.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Se ha alcanzado el número máximo de objetos <see cref="T:System.Net.ServicePoint" /> definido en <see cref="P:System.Net.ServicePointManager.MaxServicePoints" />.</exception>
    </member>
    <member name="P:System.Net.ServicePointManager.MaxServicePointIdleTime">
      <summary>Obtiene o establece el tiempo de inactividad máximo de un objeto <see cref="T:System.Net.ServicePoint" />.</summary>
      <returns>El tiempo de inactividad máximo, en milisegundos, de un objeto <see cref="T:System.Net.ServicePoint" />. El valor predeterminado es 100.000 milisegundos (100 segundos).</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.Net.ServicePointManager.MaxServicePointIdleTime" /> es menor que <see cref="F:System.Threading.Timeout.Infinite" /> o mayor que <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="P:System.Net.ServicePointManager.MaxServicePoints">
      <summary>Obtiene o establece el número máximo de objetos <see cref="T:System.Net.ServicePoint" /> que deben mantenerse en cualquier momento.</summary>
      <returns>El número máximo de objetos <see cref="T:System.Net.ServicePoint" /> que se deben mantener. El valor predeterminado es 0, es decir, no hay límite para el número de objetos <see cref="T:System.Net.ServicePoint" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.Net.ServicePointManager.MaxServicePoints" /> es menor que 0 o mayor que <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="P:System.Net.ServicePointManager.ReusePort">
      <summary>Al establecer este valor de propiedad en <see langword="true" />, todas las conexiones TCP salientes de HttpWebRequest usan la opción de socket nativo SO_REUSE_UNICASTPORT en el socket. Esto provoca que se compartan los puertos salientes subyacentes. Es útil en los escenarios en los que se efectúa un gran número de conexiones salientes en poco tiempo, y la aplicación se arriesga a quedarse sin puertos.</summary>
      <returns>Devuelva <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Net.ServicePointManager.SecurityProtocol">
      <summary>Obtiene o establece el protocolo de seguridad usado por los objetos <see cref="T:System.Net.ServicePoint" /> administrados por el objeto <see cref="T:System.Net.ServicePointManager" />.</summary>
      <returns>Uno de los valores definidos en la enumeración <see cref="T:System.Net.SecurityProtocolType" />.</returns>
      <exception cref="T:System.NotSupportedException">El valor especificado para establecer la propiedad no es un valor de enumeración <see cref="T:System.Net.SecurityProtocolType" /> válido.</exception>
    </member>
    <member name="P:System.Net.ServicePointManager.ServerCertificateValidationCallback">
      <summary>Obtiene o establece la devolución de llamada para validar un certificado de servidor.</summary>
      <returns>Objeto <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" />. El valor predeterminado es <see langword="null" />.</returns>
    </member>
    <member name="M:System.Net.ServicePointManager.SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)">
      <summary>Habilita o deshabilita la opción keep-alive en una conexión TCP.</summary>
      <param name="enabled">Si su valor es true, la opción keep-alive en una conexión TCP estará habilitada con los valores especificados de <paramref name="keepAliveTime" /> y <paramref name="keepAliveInterval" />.  
Si su valor es false, esta opción estará deshabilitada y se omitirán los parámetros restantes.  
El valor predeterminado es false.</param>
      <param name="keepAliveTime">Especifica el tiempo de espera sin actividad, en milisegundos, hasta que se envía el primer paquete keep-alive.  
El valor debe ser mayor que 0.  Si se pasa un valor menor o igual que cero, se iniciará una excepción <see cref="T:System.ArgumentOutOfRangeException" />.</param>
      <param name="keepAliveInterval">Especifica el intervalo, en milisegundos, entre envíos sucesivos de paquetes keep-alive si no se recibe ninguna confirmación.  
El valor debe ser mayor que 0.  Si se pasa un valor menor o igual que cero, se iniciará una excepción <see cref="T:System.ArgumentOutOfRangeException" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor especificado para el parámetro <paramref name="keepAliveTime" /> o <paramref name="keepAliveInterval" /> es menor o igual que 0.</exception>
    </member>
    <member name="P:System.Net.ServicePointManager.UseNagleAlgorithm">
      <summary>Determina si los puntos del servicio administrados por este objeto <see cref="T:System.Net.ServicePointManager" /> utilizan el algoritmo de Nagle.</summary>
      <returns>Es <see langword="true" /> para utilizar el algoritmo de Nagle; en caso contrario, es <see langword="false" />. El valor predeterminado es <see langword="true" />.</returns>
    </member>
  </members>
</doc>