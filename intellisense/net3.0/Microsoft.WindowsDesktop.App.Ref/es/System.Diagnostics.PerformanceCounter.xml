<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Diagnostics.PerformanceCounter</name>
  </assembly>
  <members>
    <member name="T:System.Diagnostics.CounterCreationData">
      <summary>Define el tipo de contador, el nombre y la cadena de Ayuda de un contador personalizado.</summary>
    </member>
    <member name="M:System.Diagnostics.CounterCreationData.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.CounterCreationData" /> para un contador de tipo <see langword="NumberOfItems32" />, con las cadenas de nombre y de Ayuda vacías.</summary>
    </member>
    <member name="M:System.Diagnostics.CounterCreationData.#ctor(System.String,System.String,System.Diagnostics.PerformanceCounterType)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.CounterCreationData" /> para un contador del tipo especificado, utilizando las cadenas de nombre de contador y de Ayuda especificadas.</summary>
      <param name="counterName">Nombre del contador, que debe ser único dentro de su categoría.</param>
      <param name="counterHelp">Texto que describe el comportamiento del contador.</param>
      <param name="counterType">
        <see cref="T:System.Diagnostics.PerformanceCounterType" /> que identifica el comportamiento del contador.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">El valor especificado para <paramref name="counterType" /> no es un miembro de la enumeración <see cref="T:System.Diagnostics.PerformanceCounterType" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="counterHelp" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Diagnostics.CounterCreationData.CounterHelp">
      <summary>Obtiene o establece la descripción del contador personalizado.</summary>
      <returns>Texto que describe el comportamiento del contador.</returns>
      <exception cref="T:System.ArgumentNullException">El valor es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Diagnostics.CounterCreationData.CounterName">
      <summary>Obtiene o establece el nombre del contador personalizado.</summary>
      <returns>Nombre del contador, que es único en su categoría.</returns>
      <exception cref="T:System.ArgumentNullException">El valor es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La longitud del valor especificado no está comprendida entre 1 y 80 caracteres o contiene comillas dobles, caracteres de control o espacios en blanco iniciales o finales.</exception>
    </member>
    <member name="P:System.Diagnostics.CounterCreationData.CounterType">
      <summary>Obtiene o establece el tipo de contador de rendimiento del contador personalizado.</summary>
      <returns>
        <see cref="T:System.Diagnostics.PerformanceCounterType" /> que define el comportamiento del contador de rendimiento.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">El tipo especificado no es un miembro de la enumeración <see cref="T:System.Diagnostics.PerformanceCounterType" />.</exception>
    </member>
    <member name="T:System.Diagnostics.CounterCreationDataCollection">
      <summary>Proporciona una colección fuertemente tipada de objetos <see cref="T:System.Diagnostics.CounterCreationData" />.</summary>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.CounterCreationDataCollection" /> sin instancias de <see cref="T:System.Diagnostics.CounterCreationData" /> asociadas.</summary>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.#ctor(System.Diagnostics.CounterCreationData[])">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.Diagnostics.CounterCreationDataCollection" /> utilizando la matriz de instancias <see cref="T:System.Diagnostics.CounterCreationData" /> especificada.</summary>
      <param name="value">Matriz de instancias de <see cref="T:System.Diagnostics.CounterCreationData" /> con la que inicializar <see cref="T:System.Diagnostics.CounterCreationDataCollection" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.#ctor(System.Diagnostics.CounterCreationDataCollection)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.CounterCreationDataCollection" /> utilizando la colección especificada de instancias de <see cref="T:System.Diagnostics.CounterCreationData" />.</summary>
      <param name="value">
        <see cref="T:System.Diagnostics.CounterCreationDataCollection" /> que contiene las instancias de <see cref="T:System.Diagnostics.CounterCreationData" /> con las que inicializar <see cref="T:System.Diagnostics.CounterCreationDataCollection" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.Add(System.Diagnostics.CounterCreationData)">
      <summary>Agrega una instancia de la clase <see cref="T:System.Diagnostics.CounterCreationData" /> a la colección.</summary>
      <param name="value">Objeto <see cref="T:System.Diagnostics.CounterCreationData" /> que se va a agregar a la colección existente.</param>
      <returns>El índice del nuevo objeto <see cref="T:System.Diagnostics.CounterCreationData" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> no es un objeto <see cref="T:System.Diagnostics.CounterCreationData" />.</exception>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.AddRange(System.Diagnostics.CounterCreationData[])">
      <summary>Agrega a la colección la matriz especificada de instancias de <see cref="T:System.Diagnostics.CounterCreationData" />.</summary>
      <param name="value">Matriz de instancias de <see cref="T:System.Diagnostics.CounterCreationData" /> que se va a agregar a la colección existente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.AddRange(System.Diagnostics.CounterCreationDataCollection)">
      <summary>Agrega a la colección la colección especificada de instancias de <see cref="T:System.Diagnostics.CounterCreationData" />.</summary>
      <param name="value">Colección de instancias de <see cref="T:System.Diagnostics.CounterCreationData" /> que se va a agregar a la colección existente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.Contains(System.Diagnostics.CounterCreationData)">
      <summary>Determina si una instancia de <see cref="T:System.Diagnostics.CounterCreationData" /> existe en la colección.</summary>
      <param name="value">Objeto <see cref="T:System.Diagnostics.CounterCreationData" /> que se va a buscar en la colección.</param>
      <returns>Es <see langword="true" /> si el objeto <see cref="T:System.Diagnostics.CounterCreationData" /> especificado existe en la colección; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.CopyTo(System.Diagnostics.CounterCreationData[],System.Int32)">
      <summary>Copia los elementos de <see cref="T:System.Diagnostics.CounterCreationData" /> en una matriz, empezando por el índice especificado de la matriz.</summary>
      <param name="array">Matriz de instancias de <see cref="T:System.Diagnostics.CounterCreationData" /> que se va a agregar a la colección.</param>
      <param name="index">Ubicación en la que se van a agregar las nuevas instancias.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> es menor que 0.</exception>
      <exception cref="T:System.ArgumentException">El número de elementos del control <see cref="T:System.Diagnostics.CounterCreationDataCollection" /> es mayor que el espacio disponible desde el <paramref name="index" /> hasta el final de la matriz de destino.</exception>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.IndexOf(System.Diagnostics.CounterCreationData)">
      <summary>Devuelve el índice de un objeto <see cref="T:System.Diagnostics.CounterCreationData" /> de la colección.</summary>
      <param name="value">Objeto <see cref="T:System.Diagnostics.CounterCreationData" /> que se va a buscar en la colección.</param>
      <returns>Índice de base cero del objeto  <see cref="T:System.Diagnostics.CounterCreationData" /> especificado si se encuentra en la colección; en caso contrario, -1.</returns>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.Insert(System.Int32,System.Diagnostics.CounterCreationData)">
      <summary>Inserta un objeto <see cref="T:System.Diagnostics.CounterCreationData" /> en la colección, en el índice especificado.</summary>
      <param name="index">Índice de base cero de la ubicación en la que se va a insertar <see cref="T:System.Diagnostics.CounterCreationData" />.</param>
      <param name="value">
        <see cref="T:System.Diagnostics.CounterCreationData" /> que se va a insertar en la colección.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> no es un objeto <see cref="T:System.Diagnostics.CounterCreationData" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> es menor que 0.  
o bien 
 <paramref name="index" /> es mayor que el número de elementos de la colección.</exception>
    </member>
    <member name="P:System.Diagnostics.CounterCreationDataCollection.Item(System.Int32)">
      <summary>Indiza la colección <see cref="T:System.Diagnostics.CounterCreationData" />.</summary>
      <param name="index">Índice de <see cref="T:System.Diagnostics.CounterCreationDataCollection" />.</param>
      <returns>Índice de la colección, que se utiliza para obtener acceso a los elementos individuales de la colección.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> es menor que 0.  
O bien 
 <paramref name="index" /> es igual o mayor que el número de elementos incluidos en la colección.</exception>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.OnValidate(System.Object)">
      <summary>Comprueba el objeto especificado para determinar si es un tipo de <see cref="T:System.Diagnostics.CounterCreationData" /> válido.</summary>
      <param name="value">Objeto que se va a validar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> no es un objeto <see cref="T:System.Diagnostics.CounterCreationData" />.</exception>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.Remove(System.Diagnostics.CounterCreationData)">
      <summary>Quita un objeto <see cref="T:System.Diagnostics.CounterCreationData" /> de la colección.</summary>
      <param name="value">
        <see cref="T:System.Diagnostics.CounterCreationData" /> que se va a quitar de la colección.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> no es un objeto <see cref="T:System.Diagnostics.CounterCreationData" />.  
o bien 
 <paramref name="value" /> no existe en la colección.</exception>
    </member>
    <member name="T:System.Diagnostics.CounterSample">
      <summary>Define una estructura que contiene los datos sin procesar de un contador de rendimiento.</summary>
    </member>
    <member name="M:System.Diagnostics.CounterSample.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Diagnostics.PerformanceCounterType)">
      <summary>Inicializa una nueva instancia de la estructura <see cref="T:System.Diagnostics.CounterSample" /> y establece el valor de la propiedad <see cref="P:System.Diagnostics.CounterSample.CounterTimeStamp" /> en 0 (cero).</summary>
      <param name="rawValue">Valor numérico asociado al ejemplo de contador de rendimiento.</param>
      <param name="baseValue">Valor básico opcional sin formato del contador, que sólo se utiliza si la muestra se basa en varios contadores.</param>
      <param name="counterFrequency">Frecuencia con la que se lee el contador.</param>
      <param name="systemFrequency">Frecuencia con la que el sistema lee del contador.</param>
      <param name="timeStamp">Marca de hora sin formato.</param>
      <param name="timeStamp100nSec">Marca de hora sin formato de alta fidelidad.</param>
      <param name="counterType">Objeto <see cref="T:System.Diagnostics.PerformanceCounterType" /> que indica el tipo del contador para el que este ejemplo es una instantánea.</param>
    </member>
    <member name="M:System.Diagnostics.CounterSample.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Diagnostics.PerformanceCounterType,System.Int64)">
      <summary>Inicializa una nueva instancia de la estructura <see cref="T:System.Diagnostics.CounterSample" /> y establece el valor de la propiedad <see cref="P:System.Diagnostics.CounterSample.CounterTimeStamp" /> en el valor que se pasa.</summary>
      <param name="rawValue">Valor numérico asociado al ejemplo de contador de rendimiento.</param>
      <param name="baseValue">Valor básico opcional sin formato del contador, que sólo se utiliza si la muestra se basa en varios contadores.</param>
      <param name="counterFrequency">Frecuencia con la que se lee el contador.</param>
      <param name="systemFrequency">Frecuencia con la que el sistema lee del contador.</param>
      <param name="timeStamp">Marca de hora sin formato.</param>
      <param name="timeStamp100nSec">Marca de hora sin formato de alta fidelidad.</param>
      <param name="counterType">Objeto <see cref="T:System.Diagnostics.PerformanceCounterType" /> que indica el tipo del contador para el que este ejemplo es una instantánea.</param>
      <param name="counterTimeStamp">Momento en el que se tomó la muestra.</param>
    </member>
    <member name="P:System.Diagnostics.CounterSample.BaseValue">
      <summary>Obtiene un valor básico opcional sin formato para el contador.</summary>
      <returns>Valor básico sin formato que sólo se utiliza si la muestra se basa en varios contadores.</returns>
    </member>
    <member name="M:System.Diagnostics.CounterSample.Calculate(System.Diagnostics.CounterSample)">
      <summary>Calcula los datos de rendimiento del contador a partir de un único punto de muestra. Normalmente, este método se utiliza para los tipos de contador de rendimiento sin calcular.</summary>
      <param name="counterSample">Estructura <see cref="T:System.Diagnostics.CounterSample" /> que se va a usar como punto de partida para calcular los datos de rendimiento.</param>
      <returns>Valor de rendimiento calculado.</returns>
    </member>
    <member name="M:System.Diagnostics.CounterSample.Calculate(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)">
      <summary>Calcula los datos de rendimiento del contador a partir de dos puntos de muestra. Este método suele utilizarse para tipos de contador de rendimiento calculados, como los promedios.</summary>
      <param name="counterSample">Estructura <see cref="T:System.Diagnostics.CounterSample" /> que se va a usar como punto de partida para calcular los datos de rendimiento.</param>
      <param name="nextCounterSample">Estructura <see cref="T:System.Diagnostics.CounterSample" /> que se va a usar como punto final para calcular los datos de rendimiento.</param>
      <returns>Valor de rendimiento calculado.</returns>
    </member>
    <member name="P:System.Diagnostics.CounterSample.CounterFrequency">
      <summary>Obtiene la frecuencia del contador sin formato.</summary>
      <returns>Frecuencia con la que se lee el contador.</returns>
    </member>
    <member name="P:System.Diagnostics.CounterSample.CounterTimeStamp">
      <summary>Obtiene la marca de hora del contador.</summary>
      <returns>Momento en el que se tomó la muestra.</returns>
    </member>
    <member name="P:System.Diagnostics.CounterSample.CounterType">
      <summary>Obtiene el tipo de contador de rendimiento.</summary>
      <returns>Objeto <see cref="T:System.Diagnostics.PerformanceCounterType" /> que indica el tipo del contador para el que este ejemplo es una instantánea.</returns>
    </member>
    <member name="F:System.Diagnostics.CounterSample.Empty">
      <summary>Define una muestra de contador de rendimiento sin inicializar, vacía, de tipo <see langword="NumberOfItems32" />.</summary>
    </member>
    <member name="M:System.Diagnostics.CounterSample.Equals(System.Diagnostics.CounterSample)">
      <summary>Indica si la estructura <see cref="T:System.Diagnostics.CounterSample" /> especificada es igual a la estructura <see cref="T:System.Diagnostics.CounterSample" /> actual.</summary>
      <param name="sample">Estructura <see cref="T:System.Diagnostics.CounterSample" /> que se va a comparar con esta instancia.</param>
      <returns>Es <see langword="true" /> si <paramref name="sample" /> es igual a la instancia actual; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.CounterSample.Equals(System.Object)">
      <summary>Indica si la estructura especificada es una estructura <see cref="T:System.Diagnostics.CounterSample" /> y si es idéntica a la estructura <see cref="T:System.Diagnostics.CounterSample" /> actual.</summary>
      <param name="o">Estructura <see cref="T:System.Diagnostics.CounterSample" /> que se va a comparar con la estructura actual.</param>
      <returns>Es <see langword="true" /> si <paramref name="o" /> es una estructura <see cref="T:System.Diagnostics.CounterSample" /> y es igual a la instancia actual; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.CounterSample.GetHashCode">
      <summary>Obtiene un código hash para la actual muestra del contador.</summary>
      <returns>Un código hash para la actual muestra del contador.</returns>
    </member>
    <member name="M:System.Diagnostics.CounterSample.op_Equality(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)">
      <summary>Devuelve un valor que indica si dos estructuras <see cref="T:System.Diagnostics.CounterSample" /> son iguales.</summary>
      <param name="a">Estructura <see cref="T:System.Diagnostics.CounterSample" />.</param>
      <param name="b">Otra estructura <see cref="T:System.Diagnostics.CounterSample" /> que se va a comparar con la estructura especificada por el parámetro <paramref name="a" />.</param>
      <returns>
        <see langword="true" /> si <paramref name="a" /> y <paramref name="b" /> son iguales; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.CounterSample.op_Inequality(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)">
      <summary>Devuelve un valor que indica si dos estructuras <see cref="T:System.Diagnostics.CounterSample" /> no son iguales.</summary>
      <param name="a">Estructura <see cref="T:System.Diagnostics.CounterSample" />.</param>
      <param name="b">Otra estructura <see cref="T:System.Diagnostics.CounterSample" /> que se va a comparar con la estructura especificada por el parámetro <paramref name="a" />.</param>
      <returns>Es <see langword="true" /> si <paramref name="a" /> y <paramref name="b" /> no son iguales; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.CounterSample.RawValue">
      <summary>Obtiene el valor sin formato del contador.</summary>
      <returns>Valor numérico asociado al ejemplo de contador de rendimiento.</returns>
    </member>
    <member name="P:System.Diagnostics.CounterSample.SystemFrequency">
      <summary>Obtiene la frecuencia del sistema sin formato.</summary>
      <returns>Frecuencia con la que el sistema lee del contador.</returns>
    </member>
    <member name="P:System.Diagnostics.CounterSample.TimeStamp">
      <summary>Obtiene la marca de hora sin formato.</summary>
      <returns>Marca de hora del sistema.</returns>
    </member>
    <member name="P:System.Diagnostics.CounterSample.TimeStamp100nSec">
      <summary>Obtiene la marca de hora sin formato de alta fidelidad.</summary>
      <returns>La marca de hora del sistema, representada en 0,1 milisegundos.</returns>
    </member>
    <member name="T:System.Diagnostics.CounterSampleCalculator">
      <summary>Proporciona un conjunto de funciones de utilidad para interpretar los datos del contador de rendimiento.</summary>
    </member>
    <member name="M:System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(System.Diagnostics.CounterSample)">
      <summary>Analiza el valor calculado de un único ejemplo de contador sin formato.</summary>
      <param name="newSample">
        <see cref="T:System.Diagnostics.CounterSample" /> que indica la muestra más reciente tomada por el sistema.</param>
      <returns>Representación de punto flotante del valor calculado del contador de rendimiento.</returns>
    </member>
    <member name="M:System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)">
      <summary>Analiza el valor calculado de dos ejemplos de contador sin formato.</summary>
      <param name="oldSample">
        <see cref="T:System.Diagnostics.CounterSample" /> que indica una muestra anterior tomada por el sistema.</param>
      <param name="newSample">
        <see cref="T:System.Diagnostics.CounterSample" /> que indica la muestra más reciente tomada por el sistema.</param>
      <returns>Representación de punto flotante del valor calculado del contador de rendimiento.</returns>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="oldSample" /> utiliza un tipo de contador que es diferente de <paramref name="newSample" />.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">El tipo de contador <paramref name="newSample" /> presenta un error del Asistente de datos de rendimiento (PDH). Para obtener más información, consulte "Comprobación de los valores devueltos por la interfaz PDH" en la sección Desarrollo Win32 y COM de esta documentación.</exception>
    </member>
    <member name="T:System.Diagnostics.ICollectData">
      <summary>Prepara los datos de rendimiento para el archivo DLL de rendimiento que el sistema carga al trabajar con los contadores de rendimiento.</summary>
    </member>
    <member name="M:System.Diagnostics.ICollectData.CloseData">
      <summary>Método al que llama la función de datos de rendimiento de cierre del archivo DLL de rendimiento.</summary>
    </member>
    <member name="M:System.Diagnostics.ICollectData.CollectData(System.Int32,System.IntPtr,System.IntPtr,System.Int32,System.IntPtr@)">
      <summary>Recopila los datos de rendimiento para el archivo DLL de rendimiento.</summary>
      <param name="id">El índice de llamadas.</param>
      <param name="valueName">Puntero a una lista de cadenas Unicode con los identificadores de objeto solicitados.</param>
      <param name="data">Puntero al búfer de datos.</param>
      <param name="totalBytes">Puntero a un número de bytes.</param>
      <param name="res">Cuando este método devuelve un resultado, contiene un puntero <see cref="T:System.IntPtr" /> al primer byte que sigue a los datos, -1 en caso de error ó -2 si se requiere un búfer mayor. Este parámetro se pasa sin inicializar.</param>
    </member>
    <member name="T:System.Diagnostics.InstanceData">
      <summary>Contiene los datos de instancia asociados a un contador de rendimiento de ejemplo.</summary>
    </member>
    <member name="M:System.Diagnostics.InstanceData.#ctor(System.String,System.Diagnostics.CounterSample)">
      <summary>Inicializa una nueva instancia de la clase InstanceData, utilizando el ejemplo y la instancia de contador de rendimiento especificados.</summary>
      <param name="instanceName">Nombre de una instancia asociada al contador de rendimiento.</param>
      <param name="sample">Objeto <see cref="T:System.Diagnostics.CounterSample" /> tomado de la instancia especificada por el parámetro <paramref name="instanceName" />.</param>
    </member>
    <member name="P:System.Diagnostics.InstanceData.InstanceName">
      <summary>Obtiene el nombre de instancia asociado a estos datos de instancia.</summary>
      <returns>Nombre de una instancia asociada al contador de rendimiento.</returns>
    </member>
    <member name="P:System.Diagnostics.InstanceData.RawValue">
      <summary>Obtiene el valor de datos sin procesar asociado al contador de rendimiento de ejemplo.</summary>
      <returns>Valor sin formato que el contador de rendimiento de ejemplo asociado a la propiedad <see cref="P:System.Diagnostics.InstanceData.Sample" /> lee.</returns>
    </member>
    <member name="P:System.Diagnostics.InstanceData.Sample">
      <summary>Obtiene el contador de rendimiento de ejemplo que generó estos datos.</summary>
      <returns>Objeto <see cref="T:System.Diagnostics.CounterSample" /> tomado de la instancia especificada por la propiedad <see cref="P:System.Diagnostics.InstanceData.InstanceName" />.</returns>
    </member>
    <member name="T:System.Diagnostics.InstanceDataCollection">
      <summary>Proporciona una colección fuertemente tipada de objetos <see cref="T:System.Diagnostics.InstanceData" />.</summary>
    </member>
    <member name="M:System.Diagnostics.InstanceDataCollection.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.InstanceDataCollection" />, utilizando el contador de rendimiento especificado (que define una instancia de rendimiento).</summary>
      <param name="counterName">Nombre del contador, que a menudo describe la cantidad que se cuenta.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="counterName" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.InstanceDataCollection.Contains(System.String)">
      <summary>Determina si existe en la colección una instancia de rendimiento con un nombre especificado (identificado por uno de los objetos <see cref="T:System.Diagnostics.InstanceData" /> indizados).</summary>
      <param name="instanceName">Nombre de la instancia que se va a buscar en esta colección.</param>
      <returns>Es <see langword="true" /> si la instancia está en la colección; en caso contrario, es <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="instanceName" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.InstanceDataCollection.CopyTo(System.Diagnostics.InstanceData[],System.Int32)">
      <summary>Copia los elementos de la colección en la matriz unidimensional especificada en el índice indicado.</summary>
      <param name="instances">
        <see cref="T:System.Array" /> unidimensional que constituye el destino de los valores copiados de la colección.</param>
      <param name="index">Valor de índice de base cero en el que se van a agregar las nuevas instancias.</param>
    </member>
    <member name="P:System.Diagnostics.InstanceDataCollection.CounterName">
      <summary>Obtiene el nombre del contador de rendimiento cuyos datos de instancia se desea obtener.</summary>
      <returns>Nombre del contador de rendimiento.</returns>
    </member>
    <member name="P:System.Diagnostics.InstanceDataCollection.Item(System.String)">
      <summary>Obtiene los datos de instancia asociados a este contador. Normalmente, es un conjunto de valores de contador sin formato.</summary>
      <param name="instanceName">Nombre de la instancia de categoría del contador de rendimiento, o cadena vacía (""), si la categoría contiene una sola instancia.</param>
      <returns>Elemento de <see cref="T:System.Diagnostics.InstanceData" /> por el que se indiza el objeto <see cref="T:System.Diagnostics.InstanceDataCollection" />.</returns>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="instanceName" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Diagnostics.InstanceDataCollection.Keys">
      <summary>Obtiene las claves del Registro de contador y de objeto para los objetos asociados a estos datos de instancia.</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> que representa un conjunto de claves del Registro específicas del objeto.</returns>
    </member>
    <member name="P:System.Diagnostics.InstanceDataCollection.Values">
      <summary>Obtiene los valores de contador sin formato que forman los datos de instancia del contador.</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> que representa los valores de los datos sin procesar del contador.</returns>
    </member>
    <member name="T:System.Diagnostics.InstanceDataCollectionCollection">
      <summary>Proporciona una colección fuertemente tipada de objetos <see cref="T:System.Diagnostics.InstanceDataCollection" />.</summary>
    </member>
    <member name="M:System.Diagnostics.InstanceDataCollectionCollection.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.InstanceDataCollectionCollection" />.</summary>
    </member>
    <member name="M:System.Diagnostics.InstanceDataCollectionCollection.Contains(System.String)">
      <summary>Determine si en la recolección existe una recolección de datos de instancia para el contador especificado (identificado por uno de los objetos <see cref="T:System.Diagnostics.InstanceDataCollection" /> indizados).</summary>
      <param name="counterName">Nombre del contador de rendimiento.</param>
      <returns>
        <see langword="true" /> si en la colección existe una recolección de datos de instancia que contiene el contador especificado; en caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="counterName" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.InstanceDataCollectionCollection.CopyTo(System.Diagnostics.InstanceDataCollection[],System.Int32)">
      <summary>Copia una matriz de instancias de <see cref="T:System.Diagnostics.InstanceDataCollection" /> a la colección, en el índice especificado.</summary>
      <param name="counters">Matriz de instancias de <see cref="T:System.Diagnostics.InstanceDataCollection" /> (identificadas por los contadores que contienen) que se agregarán a la colección.</param>
      <param name="index">Ubicación en la que se van a agregar las nuevas instancias.</param>
    </member>
    <member name="P:System.Diagnostics.InstanceDataCollectionCollection.Item(System.String)">
      <summary>Obtiene los datos de instancia para el contador especificado.</summary>
      <param name="counterName">Nombre del contador de rendimiento.</param>
      <returns>Elemento de <see cref="T:System.Diagnostics.InstanceDataCollection" /> por el que se indiza el objeto <see cref="T:System.Diagnostics.InstanceDataCollectionCollection" />.</returns>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="counterName" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Diagnostics.InstanceDataCollectionCollection.Keys">
      <summary>Obtiene las claves del Registro de contador y de objeto para los objetos asociados a esta recolección de datos de instancia.</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> que representa un conjunto de claves del Registro específicas del objeto.</returns>
    </member>
    <member name="P:System.Diagnostics.InstanceDataCollectionCollection.Values">
      <summary>Obtiene los valores de los datos de instancia que forman la colección de instancias del contador.</summary>
      <returns>Interfaz <see cref="T:System.Collections.ICollection" /> que representa las instancias del contador y los valores de sus datos asociados.</returns>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounter">
      <summary>Representa un componente de contador de rendimiento de Windows NT.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.#ctor">
      <summary>Inicializa una nueva instancia de sólo lectura de la clase <see cref="T:System.Diagnostics.PerformanceCounter" />, sin asociar la instancia a ningún contador de rendimiento del sistema o personalizado.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String)">
      <summary>Inicializa una nueva instancia de sólo lectura de la clase <see cref="T:System.Diagnostics.PerformanceCounter" /> y la asocia al contador de rendimiento personalizado o del sistema especificado en el equipo local. Este constructor precisa que la categoría tenga una sola instancia.</summary>
      <param name="categoryName">Nombre de la categoría de contador de rendimiento (objeto de rendimiento) a la que está asociado este contador de rendimiento.</param>
      <param name="counterName">Nombre del contador de rendimiento.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="categoryName" /> es una cadena vacía ("").  
o bien 
 <paramref name="counterName" /> es una cadena vacía ("").  
o bien 
La categoría especificada no existe.  
o bien 
La categoría especificada se marca como de varias instancias y exige que se cree un contador de rendimiento con el nombre de una instancia.  
O bien 
 <paramref name="categoryName" /> y <paramref name="counterName" /> se han localizado en distintos idiomas.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> o <paramref name="counterName" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Error de acceso a la API del sistema.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Código que se ejecuta sin privilegios administrativos para intentar leer un contador de rendimiento.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.Boolean)">
      <summary>Inicializa una nueva instancia de sólo lectura o de lectura y escritura de la clase <see cref="T:System.Diagnostics.PerformanceCounter" /> y la asocia al contador de rendimiento personalizado o del sistema especificado en el equipo local. Este constructor precisa que la categoría contenga una sola instancia.</summary>
      <param name="categoryName">Nombre de la categoría de contador de rendimiento (objeto de rendimiento) a la que está asociado este contador de rendimiento.</param>
      <param name="counterName">Nombre del contador de rendimiento.</param>
      <param name="readOnly">Este atributo se establece en <see langword="true" /> para obtener acceso al contador en modo de sólo lectura (aunque el propio contador pueda ser de lectura y escritura); se establece en <see langword="false" /> para obtener acceso al contador en modo de lectura y escritura.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="categoryName" /> es una cadena vacía ("").  
O bien 
<paramref name="counterName" /> es una cadena vacía ("").  
o bien 
La categoría especificada no existe. (Si <paramref name="readOnly" /> es <see langword="true" />).  
O bien 
La categoría especificada no es una categoría personalizada de .NET Framework (si <paramref name="readOnly" /> es <see langword="false" />).  
O bien 
La categoría especificada se marca como de varias instancias y exige que se cree un contador de rendimiento con el nombre de una instancia.  
O bien 
 <paramref name="categoryName" /> y <paramref name="counterName" /> se han localizado en distintos idiomas.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> o <paramref name="counterName" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Error de acceso a la API del sistema.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Código que se ejecuta sin privilegios administrativos para intentar leer un contador de rendimiento.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String)">
      <summary>Inicializa una nueva instancia de sólo lectura de la clase <see cref="T:System.Diagnostics.PerformanceCounter" /> y la asocia al contador de rendimiento personalizado o del sistema y a la instancia de categoría especificados en el equipo local.</summary>
      <param name="categoryName">Nombre de la categoría de contador de rendimiento (objeto de rendimiento) a la que está asociado este contador de rendimiento.</param>
      <param name="counterName">Nombre del contador de rendimiento.</param>
      <param name="instanceName">Nombre de la instancia de categoría del contador de rendimiento; o bien, cadena vacía ("") si la categoría contiene una sola instancia.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="categoryName" /> es una cadena vacía ("").  
O bien 
 <paramref name="counterName" /> es una cadena vacía ("").  
o bien 
La categoría especificada no es válida.  
O bien 
La categoría especificada se marca como de varias instancias y exige que se cree un contador de rendimiento con el nombre de una instancia.  
o bien 
 <paramref name="instanceName" /> tiene más de 127 caracteres.  
o bien 
 <paramref name="categoryName" /> y <paramref name="counterName" /> se han localizado en distintos idiomas.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> o <paramref name="counterName" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Error de acceso a la API del sistema.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Código que se ejecuta sin privilegios administrativos para intentar leer un contador de rendimiento.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String,System.Boolean)">
      <summary>Inicializa una nueva instancia de sólo lectura o de lectura y escritura de la clase <see cref="T:System.Diagnostics.PerformanceCounter" /> y la asocia al contador de rendimiento personalizado o del sistema y a la instancia de categoría especificados en el equipo local.</summary>
      <param name="categoryName">Nombre de la categoría de contador de rendimiento (objeto de rendimiento) a la que está asociado este contador de rendimiento.</param>
      <param name="counterName">Nombre del contador de rendimiento.</param>
      <param name="instanceName">Nombre de la instancia de categoría del contador de rendimiento; o bien, cadena vacía ("") si la categoría contiene una sola instancia.</param>
      <param name="readOnly">Este atributo se establece en <see langword="true" /> para obtener acceso a un contador en modo de sólo lectura; se establece en <see langword="false" /> para obtener acceso a un contador en modo de lectura y escritura.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="categoryName" /> es una cadena vacía ("").  
o bien 
 <paramref name="counterName" /> es una cadena vacía ("").  
O bien 
El valor del permiso de lectura y escritura solicitado no es válido para este contador.  
O bien 
La categoría especificada no existe (si <paramref name="readOnly" /> es <see langword="true" />).  
O bien 
La categoría especificada no es una categoría personalizada de .NET Framework (si <paramref name="readOnly" /> es <see langword="false" />).  
o bien 
La categoría especificada se marca como de varias instancias y exige que se cree un contador de rendimiento con el nombre de una instancia.  
O bien 
 <paramref name="instanceName" /> tiene más de 127 caracteres.  
o bien 
 <paramref name="categoryName" /> y <paramref name="counterName" /> se han localizado en distintos idiomas.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> o <paramref name="counterName" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Error de acceso a la API del sistema.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Código que se ejecuta sin privilegios administrativos para intentar leer un contador de rendimiento.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Inicializa una nueva instancia de sólo lectura de la clase <see cref="T:System.Diagnostics.PerformanceCounter" /> y la asocia al contador de rendimiento personalizado o del sistema y a la instancia de categoría indicados en el equipo especificado.</summary>
      <param name="categoryName">Nombre de la categoría de contador de rendimiento (objeto de rendimiento) a la que está asociado este contador de rendimiento.</param>
      <param name="counterName">Nombre del contador de rendimiento.</param>
      <param name="instanceName">Nombre de la instancia de categoría del contador de rendimiento; o bien, cadena vacía ("") si la categoría contiene una sola instancia.</param>
      <param name="machineName">Equipo en el que residen el contador de rendimiento y su categoría asociada.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="categoryName" /> es una cadena vacía ("").  
o bien 
 <paramref name="counterName" /> es una cadena vacía ("").  
o bien 
El valor del permiso de lectura y escritura solicitado no es válido para este contador.  
O bien 
El contador no existe en el equipo especificado.  
O bien 
La categoría especificada se marca como de varias instancias y exige que se cree un contador de rendimiento con el nombre de una instancia.  
O bien 
 <paramref name="instanceName" /> tiene más de 127 caracteres.  
o bien 
 <paramref name="categoryName" /> y <paramref name="counterName" /> se han localizado en distintos idiomas.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="machineName" /> no es válido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> o <paramref name="counterName" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Error de acceso a la API del sistema.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Código que se ejecuta sin privilegios administrativos para intentar leer un contador de rendimiento.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.BeginInit">
      <summary>Activa la inicialización de una instancia de <see cref="T:System.Diagnostics.PerformanceCounter" /> que se utiliza en un formulario o que otro componente utiliza. La inicialización se produce en tiempo de ejecución.</summary>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounter.CategoryName">
      <summary>Obtiene o establece el nombre de la categoría de contador de rendimiento para este contador de rendimiento.</summary>
      <returns>Nombre de la categoría de contador de rendimiento (objeto de rendimiento) a la que está asociado este contador de rendimiento.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <see cref="P:System.Diagnostics.PerformanceCounter.CategoryName" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.Close">
      <summary>Cierra el contador de rendimiento y libera todos los recursos asignados por esta instancia de contador de rendimiento.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.CloseSharedResources">
      <summary>Libera el estado compartido de la biblioteca de contadores de rendimiento asignado por los contadores.</summary>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounter.CounterHelp">
      <summary>Obtiene la descripción de este contador de rendimiento.</summary>
      <returns>Descripción del elemento o de la cantidad que este contador de rendimiento mide.</returns>
      <exception cref="T:System.InvalidOperationException">La instancia de <see cref="T:System.Diagnostics.PerformanceCounter" /> no está asociada a un contador de rendimiento.  
O bien 
La propiedad <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> se ha establecido en <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> pero se está usando la memoria compartida global.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Código que se ejecuta sin privilegios administrativos para intentar leer un contador de rendimiento.</exception>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounter.CounterName">
      <summary>Obtiene o establece el nombre del contador de rendimiento asociado a esta instancia de <see cref="T:System.Diagnostics.PerformanceCounter" />.</summary>
      <returns>Nombre del contador, que normalmente describe la cantidad que se cuenta. Este nombre se muestra en la lista de contadores del cuadro de diálogo Add Counters del complemento Administrador de contadores de rendimiento de MMC (Microsoft Management Console).</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <see cref="P:System.Diagnostics.PerformanceCounter.CounterName" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounter.CounterType">
      <summary>Obtiene el tipo de contador del contador de rendimiento asociado.</summary>
      <returns>
        <see cref="T:System.Diagnostics.PerformanceCounterType" /> que describe la forma en que el contador interactúa con una aplicación de supervisión y la naturaleza de los valores que contiene (por ejemplo, calculados o no calculados).</returns>
      <exception cref="T:System.InvalidOperationException">La instancia no está correctamente asociada a un contador de rendimiento.  
o bien 
La propiedad <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> se ha establecido en <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> pero se está usando la memoria compartida global.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Código que se ejecuta sin privilegios administrativos para intentar leer un contador de rendimiento.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.Decrement">
      <summary>Reduce el valor del contador de rendimiento asociado en uno, mediante una operación atómica eficaz.</summary>
      <returns>Valor de contador reducido.</returns>
      <exception cref="T:System.InvalidOperationException">El contador es de sólo lectura, por lo que la aplicación no puede reducirlo.  
o bien 
La instancia no está correctamente asociada a un contador de rendimiento.  
o bien 
La propiedad <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> se ha establecido en <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> pero se está usando la memoria compartida global.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Error de acceso a la API del sistema.</exception>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounter.DefaultFileMappingSize">
      <summary>Especifica el tamaño (en bytes) de la memoria global compartida por los contadores de rendimiento. El tamaño predeterminado es de 524.288 bytes.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.EndInit">
      <summary>Finaliza la inicialización de una instancia de <see cref="T:System.Diagnostics.PerformanceCounter" /> que se utiliza en un formulario o en otro componente. La inicialización se produce en tiempo de ejecución.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.Increment">
      <summary>Aumenta el valor del contador de rendimiento asociado en uno, mediante una operación atómica eficaz.</summary>
      <returns>Valor de contador aumentado.</returns>
      <exception cref="T:System.InvalidOperationException">El contador es de sólo lectura, por lo que la aplicación no puede aumentarlo.  
o bien 
La instancia no está correctamente asociada a un contador de rendimiento.  
O bien 
La propiedad <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> se ha establecido en <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> pero se está usando la memoria compartida global.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Error de acceso a la API del sistema.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.IncrementBy(System.Int64)">
      <summary>Aumenta o reduce el valor del contador de rendimiento asociado en la cantidad especificada mediante una operación atómica eficaz.</summary>
      <param name="value">Valor que se debe aumentar. (Un valor negativo reduce el contador.)</param>
      <returns>Nuevo valor del contador.</returns>
      <exception cref="T:System.InvalidOperationException">El contador es de sólo lectura, por lo que la aplicación no puede aumentarlo.  
o bien 
La instancia no está correctamente asociada a un contador de rendimiento.  
o bien 
La propiedad <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> se ha establecido en <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> pero se está usando la memoria compartida global.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Error de acceso a la API del sistema.</exception>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounter.InstanceLifetime">
      <summary>Obtiene o establece el período de duración de un proceso.</summary>
      <returns>Uno de los valores de <see cref="T:System.Diagnostics.PerformanceCounterInstanceLifetime" />. De manera predeterminada, es <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Global" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor establecido no es un miembro de la enumeración <see cref="T:System.Diagnostics.PerformanceCounterInstanceLifetime" />.</exception>
      <exception cref="T:System.InvalidOperationException">Se ha establecido <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> después de haber inicializado <see cref="T:System.Diagnostics.PerformanceCounter" />.</exception>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounter.InstanceName">
      <summary>Obtiene o establece un nombre de instancia para este contador de rendimiento.</summary>
      <returns>Nombre de la instancia de categoría del contador de rendimiento; o bien, cadena vacía ("") si se trata de un contador de una sola instancia.</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounter.MachineName">
      <summary>Obtiene o establece el nombre de equipo para este contador de rendimiento</summary>
      <returns>Servidor en el que residen el contador de rendimiento y su categoría asociada.</returns>
      <exception cref="T:System.ArgumentException">El formato de <see cref="P:System.Diagnostics.PerformanceCounter.MachineName" /> no es válido.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.NextSample">
      <summary>Obtiene un contador de ejemplo y devuelve su valor sin formato o sin calcular.</summary>
      <returns>Objeto <see cref="T:System.Diagnostics.CounterSample" /> que representa el siguiente valor sin formato que el sistema obtiene para este contador.</returns>
      <exception cref="T:System.InvalidOperationException">La instancia no está correctamente asociada a un contador de rendimiento.  
o bien 
La propiedad <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> se ha establecido en <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> pero se está usando la memoria compartida global.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Error de acceso a la API del sistema.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Código que se ejecuta sin privilegios administrativos para intentar leer un contador de rendimiento.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.NextValue">
      <summary>Obtiene un contador de ejemplo y devuelve su valor calculado.</summary>
      <returns>Siguiente valor calculado que el sistema obtiene para este contador.</returns>
      <exception cref="T:System.InvalidOperationException">La instancia no está correctamente asociada a un contador de rendimiento.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Error de acceso a la API del sistema.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Código que se ejecuta sin privilegios administrativos para intentar leer un contador de rendimiento.</exception>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounter.RawValue">
      <summary>Obtiene o establece el valor sin formato o sin calcular de este contador.</summary>
      <returns>Valor sin formato del contador.</returns>
      <exception cref="T:System.InvalidOperationException">Está intentando establecer el valor sin formato del contador, pero el contador es de sólo lectura.  
O bien 
La instancia no está correctamente asociada a un contador de rendimiento.  
o bien 
La propiedad <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> se ha establecido en <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> pero se está usando la memoria compartida global.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Error de acceso a la API del sistema.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Código que se ejecuta sin privilegios administrativos para intentar leer un contador de rendimiento.</exception>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounter.ReadOnly">
      <summary>Obtiene o establece un valor que indica si esta instancia de <see cref="T:System.Diagnostics.PerformanceCounter" /> está en modo de sólo lectura.</summary>
      <returns>
        <see langword="true" /> si la instancia de <see cref="T:System.Diagnostics.PerformanceCounter" /> está en modo de sólo lectura (aunque el propio contador sea un contador personalizado de .NET Framework); <see langword="false" /> si está en modo de lectura y escritura. El valor predeterminado es el establecido por el constructor.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.RemoveInstance">
      <summary>Elimina la instancia de categoría especificada por la propiedad <see cref="T:System.Diagnostics.PerformanceCounter" /> del objeto <see cref="P:System.Diagnostics.PerformanceCounter.InstanceName" />.</summary>
      <exception cref="T:System.InvalidOperationException">Este contador es de sólo lectura, por lo que cualquier instancia asociada a la categoría no se puede quitar.  
o bien 
La instancia no está correctamente asociada a un contador de rendimiento.  
O bien 
La propiedad <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> se ha establecido en <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> pero se está usando la memoria compartida global.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Error de acceso a la API del sistema.</exception>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterCategory">
      <summary>Representa un objeto de rendimiento que define una categoría de contadores de rendimiento.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.PerformanceCounterCategory" />, deja la propiedad <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> vacía y establece la propiedad <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> en el equipo local.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.PerformanceCounterCategory" />, establece la propiedad <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> en el valor especificado y establece la propiedad <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> en el equipo local.</summary>
      <param name="categoryName">Nombre de la categoría de contador de rendimiento u objeto de rendimiento al que se va a asociar esta instancia de <see cref="T:System.Diagnostics.PerformanceCounterCategory" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="categoryName" /> es una cadena vacía ("").</exception>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="categoryName" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.#ctor(System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> y establece las propiedades <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> y <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> en los valores especificados.</summary>
      <param name="categoryName">Nombre de la categoría de contador de rendimiento u objeto de rendimiento al que se va a asociar esta instancia de <see cref="T:System.Diagnostics.PerformanceCounterCategory" />.</param>
      <param name="machineName">Equipo en el que residen la categoría del contador de rendimiento y los contadores asociados.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="categoryName" /> es una cadena vacía ("").  
O bien 
La sintaxis de <paramref name="machineName" /> no es válida.</exception>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="categoryName" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterCategory.CategoryHelp">
      <summary>Obtiene el texto de ayuda de la categoría.</summary>
      <returns>Descripción del objeto de rendimiento que esta categoría mide.</returns>
      <exception cref="T:System.InvalidOperationException">La propiedad <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> es <see langword="null" />. Es necesario establecer el nombre de la categoría antes de obtener la ayuda de la categoría.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Se ha producido un error en la llamada a una API del sistema subyacente.</exception>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterCategory.CategoryName">
      <summary>Obtiene o establece el nombre del objeto de rendimiento que define esta categoría.</summary>
      <returns>Nombre de la categoría de contador de rendimiento u objeto de rendimiento al que se va a asociar esta instancia de <see cref="T:System.Diagnostics.PerformanceCounterCategory" />.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> es una cadena vacía ("").</exception>
      <exception cref="T:System.ArgumentNullException">El valor de <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterCategory.CategoryType">
      <summary>Obtiene el tipo de categoría de contador de rendimiento.</summary>
      <returns>Uno de los valores de <see cref="T:System.Diagnostics.PerformanceCounterCategoryType" />.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)">
      <summary>Determina si el contador especificado está registrado en esta categoría; esta información se indica mediante las propiedades <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> y <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />.</summary>
      <param name="counterName">Nombre del contador de rendimiento que se va a buscar.</param>
      <returns>Es <see langword="true" /> si el contador está registrado en la categoría especificada por las propiedades <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> y <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />; de lo contrario, es <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="counterName" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">No se ha establecido el valor de la propiedad <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Se ha producido un error en la llamada a una API del sistema subyacente.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Código que se ejecuta sin privilegios administrativos para intentar leer un contador de rendimiento.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String,System.String)">
      <summary>Determina si el contador especificado está registrado en la categoría especificada del equipo local.</summary>
      <param name="counterName">Nombre del contador de rendimiento que se va a buscar.</param>
      <param name="categoryName">Nombre de la categoría de contador de rendimiento u objeto de rendimiento al que está asociado el contador de rendimiento especificado.</param>
      <returns>Es <see langword="true" /> si el contador está registrado en la categoría especificada del equipo local; de lo contrario, es <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="categoryName" /> es <see langword="null" />.  
o bien 
El valor de <paramref name="counterName" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="categoryName" /> es una cadena vacía ("").</exception>
      <exception cref="T:System.InvalidOperationException">El nombre de categoría especificado no existe.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Se ha producido un error en la llamada a una API del sistema subyacente.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Código que se ejecuta sin privilegios administrativos para intentar leer un contador de rendimiento.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String,System.String,System.String)">
      <summary>Determina si el contador especificado está registrado en la categoría especificada de un equipo remoto.</summary>
      <param name="counterName">Nombre del contador de rendimiento que se va a buscar.</param>
      <param name="categoryName">Nombre de la categoría de contador de rendimiento u objeto de rendimiento al que está asociado el contador de rendimiento especificado.</param>
      <param name="machineName">Nombre del equipo en el que residen la categoría del contador de rendimiento y los contadores asociados.</param>
      <returns>Es <see langword="true" /> si el contador está registrado en la categoría especificada del equipo especificado; de lo contrario, es <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="categoryName" /> es <see langword="null" />.  
O bien 
El valor de <paramref name="counterName" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="categoryName" /> es una cadena vacía ("").  
o bien 
<paramref name="machineName" /> no es válido.</exception>
      <exception cref="T:System.InvalidOperationException">El nombre de categoría especificado no existe.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Se ha producido un error en la llamada a una API del sistema subyacente.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Código que se ejecuta sin privilegios administrativos para intentar leer un contador de rendimiento.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.CounterCreationDataCollection)">
      <summary>Registra la categoría de contador de rendimiento personalizada que contiene los contadores especificados en el equipo local.</summary>
      <param name="categoryName">Nombre de la categoría de contador de rendimiento personalizada que se va a crear y registrar en el sistema.</param>
      <param name="categoryHelp">Descripción de la categoría personalizada.</param>
      <param name="counterData">
        <see cref="T:System.Diagnostics.CounterCreationDataCollection" /> que especifica los contadores que se van a crear como parte de la nueva categoría.</param>
      <returns>
        <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> que está asociado a la nueva categoría personalizada, u objeto de rendimiento.</returns>
      <exception cref="T:System.ArgumentException">Un nombre de contador especificado dentro de la colección <paramref name="counterData" /> es <see langword="null" /> o una cadena vacía ("").  
O bien 
Un contador especificado dentro de la colección <paramref name="counterData" /> ya existe.  
O bien 
El parámetro <paramref name="counterName" /> tiene una sintaxis no válida. Puede que contenga caracteres de barra invertida ("\") o su longitud supere los 80 caracteres.</exception>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="categoryName" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Ya existe la categoría en el equipo local.  
o bien 
El diseño de la colección <paramref name="counterData" /> es incorrecto para los contadores base. Un contador de tipo <see langword="AverageCount64" />, <see langword="AverageTimer32" />, <see langword="CounterMultiTimer" />, <see langword="CounterMultiTimerInverse" />, <see langword="CounterMultiTimer100Ns" />, <see langword="CounterMultiTimer100NsInverse" />, <see langword="RawFraction" />, <see langword="SampleFraction" /> o <see langword="SampleCounter" /> debe ir seguido inmediatamente de uno de los tipos de contador base (<see langword="AverageBase" />, <see langword="MultiBase" />, <see langword="RawBase" /> o <see langword="SampleBase" />).</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Se ha producido un error en la llamada a una API del sistema subyacente.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Código que se ejecuta sin privilegios administrativos para intentar leer un contador de rendimiento.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.PerformanceCounterCategoryType,System.Diagnostics.CounterCreationDataCollection)">
      <summary>Registra la categoría de contador de rendimiento personalizada que contiene los contadores especificados en el equipo local.</summary>
      <param name="categoryName">Nombre de la categoría de contador de rendimiento personalizada que se va a crear y registrar en el sistema.</param>
      <param name="categoryHelp">Descripción de la categoría personalizada.</param>
      <param name="categoryType">Uno de los valores de <see cref="T:System.Diagnostics.PerformanceCounterCategoryType" />.</param>
      <param name="counterData">
        <see cref="T:System.Diagnostics.CounterCreationDataCollection" /> que especifica los contadores que se van a crear como parte de la nueva categoría.</param>
      <returns>
        <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> que está asociado a la nueva categoría personalizada, u objeto de rendimiento.</returns>
      <exception cref="T:System.ArgumentException">Un nombre de contador especificado dentro de la colección <paramref name="counterData" /> es <see langword="null" /> o una cadena vacía ("").  
O bien 
Un contador especificado dentro de la colección <paramref name="counterData" /> ya existe.  
O bien 
 <paramref name="counterName" /> tiene una sintaxis no válida. Puede que contenga caracteres de barra invertida ("\") o su longitud supere los 80 caracteres.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> es <see langword="null" />.  
o bien 
 <paramref name="counterData" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor de <paramref name="categoryType" /> está fuera del intervalo de los valores siguientes: <see langword="MultiInstance" />, <see langword="SingleInstance" /> o <see langword="Unknown" />.</exception>
      <exception cref="T:System.InvalidOperationException">Ya existe la categoría en el equipo local.  
o bien 
El diseño de la colección <paramref name="counterData" /> es incorrecto para los contadores base. Un contador de tipo <see langword="AverageCount64" />, <see langword="AverageTimer32" />, <see langword="CounterMultiTimer" />, <see langword="CounterMultiTimerInverse" />, <see langword="CounterMultiTimer100Ns" />, <see langword="CounterMultiTimer100NsInverse" />, <see langword="RawFraction" />, <see langword="SampleFraction" /> o <see langword="SampleCounter" /> debe ir seguido inmediatamente de uno de los tipos de contador base (<see langword="AverageBase" />, <see langword="MultiBase" />, <see langword="RawBase" /> o <see langword="SampleBase" />).</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Se ha producido un error en la llamada a una API del sistema subyacente.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Código que se ejecuta sin privilegios administrativos para intentar leer un contador de rendimiento.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.PerformanceCounterCategoryType,System.String,System.String)">
      <summary>Registra la categoría de contador de rendimiento personalizada que contiene un solo contador de tipo <see cref="F:System.Diagnostics.PerformanceCounterType.NumberOfItems32" /> en el equipo local.</summary>
      <param name="categoryName">Nombre de la categoría de contador de rendimiento personalizada que se va a crear y registrar en el sistema.</param>
      <param name="categoryHelp">Descripción de la categoría personalizada.</param>
      <param name="categoryType">Uno de los valores de <see cref="T:System.Diagnostics.PerformanceCounterCategoryType" /> que especifica si la categoría es <see cref="F:System.Diagnostics.PerformanceCounterCategoryType.MultiInstance" />, <see cref="F:System.Diagnostics.PerformanceCounterCategoryType.SingleInstance" /> o <see cref="F:System.Diagnostics.PerformanceCounterCategoryType.Unknown" />.</param>
      <param name="counterName">Nombre de un nuevo contador que se va a crear como parte de la nueva categoría.</param>
      <param name="counterHelp">Descripción del contador asociado a la nueva categoría personalizada.</param>
      <returns>
        <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> que está asociado a la nueva categoría del sistema, u objeto de rendimiento.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="counterName" /> es <see langword="null" /> o una cadena vacía ("").  
O bien 
Ya existe el contador especificado por el parámetro <paramref name="counterName" />.  
o bien 
 <paramref name="counterName" /> tiene una sintaxis no válida. Puede que contenga caracteres de barra invertida ("\") o su longitud supere los 80 caracteres.</exception>
      <exception cref="T:System.InvalidOperationException">Ya existe la categoría en el equipo local.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> es <see langword="null" />.  
O bien 
 <paramref name="counterHelp" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Se ha producido un error en la llamada a una API del sistema subyacente.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Código que se ejecuta sin privilegios administrativos para intentar leer un contador de rendimiento.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.String,System.String)">
      <summary>Registra una categoría de contador de rendimiento personalizada que contiene un solo contador de tipo <see langword="NumberOfItems32" /> en el equipo local.</summary>
      <param name="categoryName">Nombre de la categoría de contador de rendimiento personalizada que se va a crear y registrar en el sistema.</param>
      <param name="categoryHelp">Descripción de la categoría personalizada.</param>
      <param name="counterName">Nombre de un nuevo contador de tipo <see langword="NumberOfItems32" /> que se va a crear como parte de la nueva categoría.</param>
      <param name="counterHelp">Descripción del contador asociado a la nueva categoría personalizada.</param>
      <returns>
        <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> que está asociado a la nueva categoría del sistema, u objeto de rendimiento.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="counterName" /> es <see langword="null" /> o una cadena vacía ("").  
O bien 
Ya existe el contador especificado por el parámetro <paramref name="counterName" />.  
O bien 
 <paramref name="counterName" /> tiene una sintaxis no válida. Puede que contenga caracteres de barra invertida ("\") o su longitud supere los 80 caracteres.</exception>
      <exception cref="T:System.InvalidOperationException">Ya existe la categoría en el equipo local.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> es <see langword="null" />.  
O bien 
 <paramref name="counterHelp" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Se ha producido un error en la llamada a una API del sistema subyacente.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Código que se ejecuta sin privilegios administrativos para intentar leer un contador de rendimiento.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.Delete(System.String)">
      <summary>Quita la categoría y los contadores asociados del equipo local.</summary>
      <param name="categoryName">Nombre de la categoría de contador de rendimiento personalizada que se va a eliminar.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="categoryName" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="categoryName" /> tiene una sintaxis no válida. Puede que contenga caracteres de barra invertida ("\") o su longitud supere los 80 caracteres.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Se ha producido un error en la llamada a una API del sistema subyacente.</exception>
      <exception cref="T:System.InvalidOperationException">No se puede eliminar la categoría porque no es una categoría personalizada.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Código que se ejecuta sin privilegios administrativos para intentar leer un contador de rendimiento.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)">
      <summary>Determina si la categoría está registrada en el equipo local.</summary>
      <param name="categoryName">Nombre de la categoría de contador de rendimiento que se va a buscar.</param>
      <returns>Es <see langword="true" /> si la categoría está registrada; de lo contrario, es <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="categoryName" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="categoryName" /> es una cadena vacía ("").</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Se ha producido un error en la llamada a una API del sistema subyacente.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Código que se ejecuta sin privilegios administrativos para intentar leer un contador de rendimiento.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String,System.String)">
      <summary>Determina si la categoría está registrada en el equipo especificado.</summary>
      <param name="categoryName">Nombre de la categoría de contador de rendimiento que se va a buscar.</param>
      <param name="machineName">Nombre del equipo en el que se va a buscar la categoría.</param>
      <returns>Es <see langword="true" /> si la categoría está registrada; de lo contrario, es <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="categoryName" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="categoryName" /> es una cadena vacía ("").  
O bien 
El parámetro <paramref name="machineName" /> no es válido.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Se ha producido un error en la llamada a una API del sistema subyacente.</exception>
      <exception cref="T:System.IO.IOException">No se puede encontrar la ruta de acceso a la red.</exception>
      <exception cref="T:System.UnauthorizedAccessException">El llamador no dispone del permiso requerido.  
 o bien  
 Código que se ejecuta sin privilegios administrativos para intentar leer un contador de rendimiento.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.GetCategories">
      <summary>Recupera una lista de las categorías de contador de rendimiento registradas en el equipo local.</summary>
      <returns>Matriz de objetos <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> que indica las categorías que están registradas en el equipo local.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">Se ha producido un error en la llamada a una API del sistema subyacente.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Código que se ejecuta sin privilegios administrativos para intentar leer un contador de rendimiento.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.GetCategories(System.String)">
      <summary>Recupera una lista de las categorías de contador de rendimiento registradas en el equipo especificado.</summary>
      <param name="machineName">Equipo en el que se va a buscar.</param>
      <returns>Matriz de objetos <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> que indica las categorías que están registradas en el equipo especificado.</returns>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="machineName" /> no es válido.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Se ha producido un error en la llamada a una API del sistema subyacente.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Código que se ejecuta sin privilegios administrativos para intentar leer un contador de rendimiento.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.GetCounters">
      <summary>Recupera una lista de los contadores de una categoría de contador de rendimiento que contiene exactamente una instancia.</summary>
      <returns>Matriz de objetos <see cref="T:System.Diagnostics.PerformanceCounter" /> que indica los contadores que están asociados a esta categoría de contador de rendimiento de una sola instancia.</returns>
      <exception cref="T:System.ArgumentException">La categoría no es una instancia única.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Se ha producido un error en la llamada a una API del sistema subyacente.</exception>
      <exception cref="T:System.InvalidOperationException">La categoría no tiene una instancia asociada.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Código que se ejecuta sin privilegios administrativos para intentar leer un contador de rendimiento.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.GetCounters(System.String)">
      <summary>Recupera una lista de los contadores de una categoría de contador de rendimiento que contiene una o más instancias.</summary>
      <param name="instanceName">Instancia de objeto de rendimiento para la que se va a recuperar una lista de contadores asociados.</param>
      <returns>Matriz de objetos <see cref="T:System.Diagnostics.PerformanceCounter" /> que indica los contadores asociados a la instancia de objeto especificada de esta categoría de contador de rendimiento.</returns>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="instanceName" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">No se ha establecido la propiedad <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> para esta instancia de <see cref="T:System.Diagnostics.PerformanceCounterCategory" />.  
o bien 
La categoría no contiene la instancia especificada en el parámetro <paramref name="instanceName" />.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Se ha producido un error en la llamada a una API del sistema subyacente.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Código que se ejecuta sin privilegios administrativos para intentar leer un contador de rendimiento.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.GetInstanceNames">
      <summary>Recupera la lista de instancias de objetos de rendimiento asociados a esta categoría.</summary>
      <returns>Matriz de cadenas que representa los nombres de las instancias de objetos de rendimiento que están asociadas a esta categoría o, si la categoría contiene una sola instancia de objeto de rendimiento, matriz de una sola entrada que contiene una cadena vacía ("").</returns>
      <exception cref="T:System.InvalidOperationException">La propiedad <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> es <see langword="null" />. Es posible que no se haya establecido la propiedad.  
O bien 
La categoría no tiene una instancia asociada.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Se ha producido un error en la llamada a una API del sistema subyacente.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Código que se ejecuta sin privilegios administrativos para intentar leer un contador de rendimiento.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)">
      <summary>Determina si la instancia de objeto de rendimiento especificada existe en la categoría identificada por la propiedad <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> de este objeto <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />.</summary>
      <param name="instanceName">Instancia de objeto de rendimiento de esta categoría de contadores de rendimiento que se va a buscar.</param>
      <returns>Es <see langword="true" /> si la categoría contiene la instancia de objeto de rendimiento especificada; de lo contrario, es <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">La propiedad <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> es <see langword="null" />. Es posible que no se haya establecido la propiedad.</exception>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="instanceName" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Se ha producido un error en la llamada a una API del sistema subyacente.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Código que se ejecuta sin privilegios administrativos para intentar leer un contador de rendimiento.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String,System.String)">
      <summary>Determina si una categoría especificada en el equipo local contiene la instancia de objeto de rendimiento especificada.</summary>
      <param name="instanceName">Instancia de objeto de rendimiento que se va a buscar.</param>
      <param name="categoryName">Categoría de contador de rendimiento en la que se va a buscar.</param>
      <returns>Es <see langword="true" /> si la categoría contiene la instancia de objeto de rendimiento especificada; de lo contrario, es <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="instanceName" /> es <see langword="null" />.  
o bien 
El parámetro <paramref name="categoryName" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="categoryName" /> es una cadena vacía ("").</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Se ha producido un error en la llamada a una API del sistema subyacente.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Código que se ejecuta sin privilegios administrativos para intentar leer un contador de rendimiento.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String,System.String,System.String)">
      <summary>Determina si una categoría especificada en un equipo especificado contiene la instancia de objeto de rendimiento especificada.</summary>
      <param name="instanceName">Instancia de objeto de rendimiento que se va a buscar.</param>
      <param name="categoryName">Categoría de contador de rendimiento en la que se va a buscar.</param>
      <param name="machineName">Nombre del equipo en el que se va a buscar la instancia de la categoría.</param>
      <returns>Es <see langword="true" /> si la categoría contiene la instancia de objeto de rendimiento especificada; de lo contrario, es <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="instanceName" /> es <see langword="null" />.  
o bien 
El parámetro <paramref name="categoryName" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="categoryName" /> es una cadena vacía ("").  
O bien 
El parámetro <paramref name="machineName" /> no es válido.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Se ha producido un error en la llamada a una API del sistema subyacente.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Código que se ejecuta sin privilegios administrativos para intentar leer un contador de rendimiento.</exception>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterCategory.MachineName">
      <summary>Obtiene o establece el nombre del equipo en el que reside esta categoría.</summary>
      <returns>Nombre del equipo en el que residen la categoría del contador de rendimiento y los contadores asociados.</returns>
      <exception cref="T:System.ArgumentException">La sintaxis de <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> no es válida.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.ReadCategory">
      <summary>Lee todos los datos sobre el contador y la instancia de objeto de rendimiento asociados a esta categoría de contador de rendimiento.</summary>
      <returns>
        <see cref="T:System.Diagnostics.InstanceDataCollectionCollection" /> que contiene los datos sobre el contador y la instancia de objeto de rendimiento asociados a la categoría.</returns>
      <exception cref="T:System.InvalidOperationException">La propiedad <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> es <see langword="null" />. Es posible que no se haya establecido la propiedad.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Se ha producido un error en la llamada a una API del sistema subyacente.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Código que se ejecuta sin privilegios administrativos para intentar leer un contador de rendimiento.</exception>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterCategoryType">
      <summary>Indica si la categoría de contador de rendimiento puede tener varias instancias.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterCategoryType.MultiInstance">
      <summary>La categoría de contador de rendimiento puede tener varias instancias.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterCategoryType.SingleInstance">
      <summary>La categoría de contador de rendimiento puede tener sólo una instancia.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterCategoryType.Unknown">
      <summary>Se desconoce la funcionalidad de instancia de la categoría de contador de rendimiento.</summary>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterInstanceLifetime">
      <summary>Especifica la duración de una instancia del contador de rendimiento.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Global">
      <summary>Quita la instancia del contador de rendimiento cuando ningún contador utiliza la categoría de proceso.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process">
      <summary>Quita la instancia del contador de rendimiento cuando está cerrado el proceso.</summary>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterManager">
      <summary>Prepara los datos de rendimiento para el archivo performance.dll que carga el sistema al trabajar con contadores de rendimiento.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterManager.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.PerformanceCounterManager" />.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterManager.System#Diagnostics#ICollectData#CloseData">
      <summary>Llamado por los datos de rendimiento de cierre del archivo performance.dll</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterManager.System#Diagnostics#ICollectData#CollectData(System.Int32,System.IntPtr,System.IntPtr,System.Int32,System.IntPtr@)">
      <summary>Rutina de recolección de datos de rendimiento. Llamado por el archivo DLL de rendimiento PerfCount.</summary>
      <param name="callIdx">El índice de llamadas.</param>
      <param name="valueNamePtr">Puntero a una lista de cadenas de Unicode con los identificadores de objeto solicitados.</param>
      <param name="dataPtr">Puntero al búfer de datos.</param>
      <param name="totalBytes">Puntero a un número de bytes.</param>
      <param name="res">Cuando este método devuelve un resultado, contiene un puntero <see cref="T:System.IntPtr" /> con un valor de -1.</param>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterType">
      <summary>Especifica la fórmula que se utiliza para calcular el método <see cref="M:System.Diagnostics.PerformanceCounter.NextValue" /> para una instancia de <see cref="T:System.Diagnostics.PerformanceCounter" />.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.AverageBase">
      <summary>Contador base que se utiliza para calcular el promedio de tiempos o recuentos, como <see langword="AverageTimer32" /> y <see langword="AverageCount64" />. Almacena el denominador que se utiliza en el cálculo de un contador para presentar el "tiempo por operación" o el "recuento por operación".</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.AverageCount64">
      <summary>Contador de promedio que muestra cuántos elementos se procesan de promedio durante una operación. Los contadores de este tipo muestran la relación entre los elementos procesados y el número de operaciones completadas. Dicha relación se calcula comparando el número de elementos procesados durante el último intervalo con el número de operaciones completadas durante el mismo intervalo. Los contadores de este tipo incluyen DiscoFísico\promedio. Bytes de datos/transferencia.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.AverageTimer32">
      <summary>Contador de tipo promedio que mide el tiempo transcurrido, de promedio, para completar un proceso u operación. Los contadores de este tipo muestran la relación entre el tiempo total transcurrido del intervalo de muestra y el número de procesos u operaciones completadas durante dicho tiempo. Este tipo de contador mide el tiempo en pasos del reloj del sistema. Los contadores de este tipo incluyen DiscoFísico\promedio. Segundos de disco/transferencia.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CounterDelta32">
      <summary>Contador de diferencia que muestra la variación del atributo medido entre los dos intervalos de muestra más recientes.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CounterDelta64">
      <summary>Contador de diferencia que muestra la variación del atributo medido entre los dos intervalos de muestra más recientes. Es igual que el tipo de contador <see langword="CounterDelta32" />, salvo que usa campos de mayor tamaño para poder albergar valores mayores.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CounterMultiBase">
      <summary>Contador base que indica el número de elementos analizados en la muestra. Se utiliza como denominador en los cálculos, para obtener un promedio de los elementos muestreados al tomar mediciones de tiempo de varios elementos similares. Se utiliza con <see langword="CounterMultiTimer" />, <see langword="CounterMultiTimerInverse" />, <see langword="CounterMultiTimer100Ns" /> y <see langword="CounterMultiTimer100NsInverse" />.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CounterMultiTimer">
      <summary>Contador de porcentaje que muestra el tiempo activo de uno o más componentes como un porcentaje del tiempo total del intervalo de muestra. Debido a que el numerador registra el tiempo activo de componentes que funcionan simultáneamente, el porcentaje resultante puede superar el 100 por ciento. Este tipo de contador se diferencia de <see langword="CounterMultiTimer100Ns" /> en que mide el tiempo en unidades de pasos del contador de rendimiento del sistema, en lugar de unidades de 100 nanosegundos. Este tipo de contador es un temporizador múltiple.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CounterMultiTimer100Ns">
      <summary>Contador de porcentaje que muestra el tiempo activo de uno o más componentes como un porcentaje del tiempo total del intervalo de muestra. Mide el tiempo en unidades de 100 nanosegundos (ns). Este tipo de contador es un temporizador múltiple.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CounterMultiTimer100NsInverse">
      <summary>Contador de porcentaje que muestra el tiempo activo de uno o más componentes como un porcentaje del tiempo total del intervalo de muestra. Los contadores de este tipo miden el tiempo en unidades de 100 nanosegundos (ns). Derivan el tiempo activo midiendo el tiempo durante el cual los componentes no estaban activos y restándole el resultado de multiplicar 100 por ciento por el número de objetos supervisados. Este tipo de contador es un temporizador múltiple inverso.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CounterMultiTimerInverse">
      <summary>Contador de porcentaje que muestra el tiempo activo de uno o más componentes como un porcentaje del tiempo total del intervalo de muestra. Deriva el tiempo activo midiendo el tiempo durante el cual los componentes no estaban activos y restándole el resultado de multiplicar 100 por ciento por el número de objetos supervisados. Este tipo de contador es un temporizador múltiple inverso. Se diferencia de CounterMultiTimer100NsInverse en que mide el tiempo en unidades de pasos del contador de rendimiento del sistema, en lugar de unidades de 100 nanosegundos.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CounterTimer">
      <summary>Contador de porcentaje que muestra el promedio de tiempo que un componente está activo como un porcentaje del tiempo de muestra total.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CounterTimerInverse">
      <summary>Contador de porcentaje que muestra el porcentaje promedio de tiempo activo observado durante el intervalo de muestra. El valor de estos contadores se calcula supervisando el porcentaje de tiempo que el servicio estuvo inactivo y restando ese valor del 100 por ciento. Este tipo de contador es un contador inverso. Es igual que CounterTimer100NsInv, salvo que mide el tiempo en unidades de pasos del contador de rendimiento del sistema, en lugar de unidades de 100 nanosegundos.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CountPerTimeInterval32">
      <summary>Contador de promedio diseñado para supervisar la longitud promedio de la cola de un recurso a lo largo de un determinado período de tiempo. Muestra la diferencia entre las longitudes de cola observadas durante los dos últimos intervalos de muestra, dividida por la duración del intervalo. Este tipo de contador se utiliza normalmente para hacer un seguimiento del número de elementos que están en la cola o a la espera.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CountPerTimeInterval64">
      <summary>Contador de promedio que supervisa la longitud promedio de la cola de un recurso a lo largo de un determinado período de tiempo. Los contadores de este tipo muestran la diferencia entre las longitudes de cola observadas durante los dos últimos intervalos de muestra, dividida por la duración del intervalo. Este tipo de contador es lo mismo que <see langword="CountPerTimeInterval32" />, salvo que utiliza campos de mayor tamaño para poder albergar valores más grandes. Este tipo de contador se utiliza normalmente para hacer un seguimiento de un gran volumen o de un número muy elevado de elementos que están en la cola o a la espera.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.ElapsedTime">
      <summary>Temporizador de diferencia que muestra el tiempo total transcurrido entre el inicio de un componente o proceso y el momento en que se calcula este valor. Los contadores de este tipo incluyen Sistema\tiempo de actividad del sistema.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.NumberOfItems32">
      <summary>Contador instantáneo que muestra el valor observado más reciente. Se utiliza, por ejemplo, para mantener un recuento simple de elementos o de operaciones. Los contadores de este tipo incluyen Memoria\Bytes disponibles.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.NumberOfItems64">
      <summary>Contador instantáneo que muestra el valor observado más reciente. Se utiliza, por ejemplo, para mantener un recuento simple de un número muy elevado de elementos o de operaciones. Este tipo de contador es lo mismo que <see langword="NumberOfItems32" />, salvo que utiliza campos de mayor tamaño para poder albergar valores más grandes.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX32">
      <summary>Contador instantáneo que muestra el valor observado más reciente en formato hexadecimal. Se utiliza, por ejemplo, para mantener un recuento simple de elementos o de operaciones.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX64">
      <summary>Contador instantáneo que muestra el valor observado más reciente. Se utiliza, por ejemplo, para mantener un recuento simple de un número muy elevado de elementos o de operaciones. Este tipo de contador es lo mismo que <see langword="NumberOfItemsHEX32" />, salvo que utiliza campos de mayor tamaño para poder albergar valores más grandes.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond32">
      <summary>Contador de diferencia que muestra el número promedio de operaciones completadas durante cada segundo del intervalo de muestra. Este tipo de contador mide el tiempo en pasos del reloj del sistema. Los contadores de este tipo incluyen Sistema\Operaciones de lectura de archivo/s.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond64">
      <summary>Contador de diferencia que muestra el número promedio de operaciones completadas durante cada segundo del intervalo de muestra. Este tipo de contador mide el tiempo en pasos del reloj del sistema. Este tipo de contador es el mismo que el tipo <see langword="RateOfCountsPerSecond32" />, pero utiliza campos más grandes para albergar valores más grandes y así supervisar un alto número de elementos u operaciones por segundo, como por ejemplo una tasa de transmisión de bytes. Los contadores de este tipo incluyen Sistema\Bytes de lectura de archivo/s.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.RawBase">
      <summary>Contador base que almacena el denominador de un contador que presenta una fracción aritmética general. Compruebe que este valor es mayor que cero antes de utilizarlo como denominador para calcular el valor <see langword="RawFraction" />.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.RawFraction">
      <summary>Contador de porcentaje instantáneo que muestra la relación entre un subconjunto y su conjunto, en porcentaje. Por ejemplo, compara el número de bytes utilizados en un disco con el número total de bytes que contiene el disco. Los contadores de este tipo muestran sólo el porcentaje actual, no un promedio a lo largo del tiempo. Los contadores de este tipo incluyen Archivo de paginación\% uso máximo.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.SampleBase">
      <summary>Contador base que almacena el número de interrupciones de muestreo tomadas y se utiliza como denominador en la fracción de muestreo. La fracción de muestreo es el número de muestras que dieron 1 (o <see langword="true" />) para una interrupción de muestra. Compruebe que este valor es mayor que cero antes de utilizarlo como denominador para calcular <see langword="SampleFraction" />.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.SampleCounter">
      <summary>Contador de promedio que muestra el promedio de operaciones completadas en un segundo. Cuando un contador de este tipo toma una muestra de los datos, cada interrupción de muestreo devuelve uno o cero. Los datos del contador son el número de contadores muestreados. Mide el tiempo en unidades de pasos del temporizador de rendimiento del sistema.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.SampleFraction">
      <summary>Contador de porcentaje que muestra la relación media entre el número de aciertos y todas las operaciones realizadas durante los dos últimos intervalos de muestra. Los contadores de este tipo incluyen Caché% de aciertos de lecturas de anclaje.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.Timer100Ns">
      <summary>Contador de porcentaje que muestra el tiempo activo de un componente como un porcentaje del tiempo total transcurrido del intervalo de muestra. Mide el tiempo en unidades de 100 nanosegundos (ns). Los contadores de este tipo están diseñados para medir la actividad de un componente en cada momento. Los contadores de este tipo incluyen Procesador% de tiempo de usuario.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.Timer100NsInverse">
      <summary>Contador de porcentaje que muestra el porcentaje promedio de tiempo activo observado durante el intervalo de muestra. Este tipo de contador es un contador inverso. Los contadores de este tipo incluyen Procesador% de tiempo de procesador.</summary>
    </member>
    <member name="T:System.Diagnostics.PerformanceData.CounterData">
      <summary>Contiene los datos sin procesar para un contador.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterData.Decrement">
      <summary>Disminuye el valor del contador en 1.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterData.Increment">
      <summary>Incrementa el valor del contador en 1.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterData.IncrementBy(System.Int64)">
      <summary>Incrementa el valor del contador en la cantidad especificada.</summary>
      <param name="value">Cantidad en la que se va a incrementar el valor del contador. El valor de incremento puede ser positivo o negativo.</param>
    </member>
    <member name="P:System.Diagnostics.PerformanceData.CounterData.RawValue">
      <summary>Obtiene o establece los datos sin formato del contador.</summary>
      <returns>Datos sin formato del contador.</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceData.CounterData.Value">
      <summary>Obtiene o establece los datos del contador.</summary>
      <returns>Los datos del contador.</returns>
    </member>
    <member name="T:System.Diagnostics.PerformanceData.CounterSet">
      <summary>Define un conjunto de contadores lógicos.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSet.#ctor(System.Guid,System.Guid,System.Diagnostics.PerformanceData.CounterSetInstanceType)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.PerformanceData.CounterSet" />.</summary>
      <param name="providerGuid">Guid que identifica de forma inequívoca el proveedor de los datos del contador. Utilice el Guid especificado en el manifiesto.</param>
      <param name="counterSetGuid">Guid que identifica de forma inequívoca el conjunto de contadores de un proveedor. Utilice el Guid especificado en el manifiesto.</param>
      <param name="instanceType">Identifica el tipo del conjunto de contadores; por ejemplo, si el conjunto de contadores es un conjunto de contadores con una o varias instancias.</param>
      <exception cref="T:System.InsufficientMemoryException">Memoria insuficiente para completar la operación.</exception>
      <exception cref="T:System.PlatformNotSupportedException">No se admite en versiones anteriores a Windows Vista.</exception>
      <exception cref="T:System.ArgumentException">Uno de los parámetros es NULL o no es válido.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Se ha producido un error en una llamada a la función subyacente de Win32.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType)">
      <summary>Agrega un contador al conjunto de contadores utilizando el identificador y el tipo de contador especificados.</summary>
      <param name="counterId">Identifica el contador. Utilice el mismo valor que utilizó en el manifiesto para definir el contador.</param>
      <param name="counterType">Identifica el tipo de contador. El tipo de contador determina el modo en que se calculan los datos del contador, se muestran y se calcula su promedio.</param>
      <exception cref="T:System.ArgumentException">El identificador del contador ya existe en el conjunto o es negativo, o bien el tipo de contador es NULL o no es válido.</exception>
      <exception cref="T:System.InvalidOperationException">No se pueden agregar contadores al conjunto de contadores después de crear una instancia del conjunto de contadores.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType,System.String)">
      <summary>Agrega un contador al conjunto de contadores utilizando el identificador, el tipo y el nombre para mostrar del contador especificados.</summary>
      <param name="counterId">Identifica el contador. Utilice el mismo valor que utilizó en el manifiesto para definir el contador.</param>
      <param name="counterType">Identifica el tipo de contador. El tipo de contador determina el modo en que se calculan los datos del contador, se muestran y se calcula su promedio.</param>
      <param name="counterName">Nombre del contador. Puede utilizar este nombre para indizar el contador en la instancia del conjunto de contadores. (Vea <see cref="P:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Item(System.String)" />.)</param>
      <exception cref="T:System.ArgumentException">El identificador del contador ya existe en el conjunto o es negativo, o bien el tipo de contador es NULL o no es válido.</exception>
      <exception cref="T:System.InvalidOperationException">No se pueden agregar contadores al conjunto de contadores después de crear una instancia del conjunto de contadores.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance(System.String)">
      <summary>Crea una instancia del conjunto de contadores.</summary>
      <param name="instanceName">Nombre de la instancia. El nombre debe ser único.</param>
      <returns>Una instancia del conjunto de contadores que contendrá los datos del contador.</returns>
      <exception cref="T:System.ArgumentException">El nombre de instancia es NULL.</exception>
      <exception cref="T:System.InvalidOperationException">Deben agregarse contadores al conjunto de contadores antes de crear una instancia del conjunto de contadores.</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSet.Dispose">
      <summary>Libera todos los recursos no administrados que utiliza este objeto.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSet.Dispose(System.Boolean)">
      <summary>Libera todos los recursos no administrados usados por este objeto y, de forma opcional, libera los recursos administrados.</summary>
      <param name="disposing">Es <see langword="True" /> si se invocó desde el método Dispose; de lo contrario, es <see langword="False" />.</param>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSet.Finalize">
      <summary>Libera los recursos antes de que el objeto sea reclamado por la recolección de elementos no utilizados.</summary>
    </member>
    <member name="T:System.Diagnostics.PerformanceData.CounterSetInstance">
      <summary>Crea una instancia de los contadores lógicos definidos en la clase <see cref="T:System.Diagnostics.PerformanceData.CounterSet" />.</summary>
    </member>
    <member name="P:System.Diagnostics.PerformanceData.CounterSetInstance.Counters">
      <summary>Recupera la colección de datos del contador para la instancia del conjunto de contadores.</summary>
      <returns>Colección de los datos del contador incluidos en la instancia del conjunto de contadores.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSetInstance.Dispose">
      <summary>Libera todos los recursos no administrados que usa este objeto.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSetInstance.Finalize">
      <summary>Libera los recursos no administrados y realiza otras operaciones de limpieza.</summary>
    </member>
    <member name="T:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet">
      <summary>Contiene la colección de valores de un contador.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Dispose">
      <summary>Libera todos los recursos no administrados que usa este objeto.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Finalize">
      <summary>Permite que un objeto intente liberar recursos y realizar otras operaciones de limpieza antes de que sea reclamado por la recolección de elementos no utilizados.</summary>
    </member>
    <member name="P:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Item(System.Int32)">
      <summary>Tiene acceso a un valor de un contador de la colección mediante el identificador de contador especificado.</summary>
      <param name="counterId">Identificador del contador. Éste es el identificador que utilizó cuando agregó el contador al conjunto de contadores.</param>
      <returns>Los datos del contador.</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Item(System.String)">
      <summary>Tiene acceso a un valor de un contador de la colección mediante el nombre de contador especificado.</summary>
      <param name="counterName">Nombre del contador. Éste es el nombre que utilizó cuando agregó el contador al conjunto de contadores.</param>
      <returns>Los datos del contador.</returns>
    </member>
    <member name="T:System.Diagnostics.PerformanceData.CounterSetInstanceType">
      <summary>Especifica si el conjunto de contadores permite varias instancias, como procesos y discos físicos, o una única instancia, como la memoria.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.GlobalAggregate">
      <summary>El conjunto contiene contadores de una única instancia cuyo valor agregado se obtiene de uno o varios orígenes. Por ejemplo, un contador de este tipo de conjunto de contadores podría obtener el número de lecturas de cada uno de los tres discos duros del equipo y sumar sus valores.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.GlobalAggregateWithHistory">
      <summary>Este tipo es similar a <see cref="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.GlobalAggregate" />, salvo porque este tipo de conjunto de contadores almacena todos los valores de un contador durante el tiempo de vida de la aplicación de consumidor (el valor de un contador se almacena en memoria caché durante más tiempo que la duración del contador). Por ejemplo, si uno de los discos duros del ejemplo de agregado global dejara de estar disponible, el total de bytes leído por ese disco seguiría estando disponible y se utilizará para calcular el valor agregado.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.InstanceAggregate">
      <summary>Este tipo es similar a <see cref="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.MultipleAggregate" />, salvo porque en lugar de agregar los datos de todas las instancias a una instancia agregada (_Total), agregará los datos del contador de las instancias que tienen el mismo nombre. Por ejemplo, si varios procesos del proveedor tuvieran instancias denominadas IExplore, el elemento CounterSet <see cref="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.Multiple" /> y <see cref="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.MultipleAggregate" /> mostrará varias instancias de IExplore (IExplore, IExplore#1, IExplore#2, etc.); sin embargo, un tipo de instancia <see cref="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.InstanceAggregate" /> publicará sólo una instancia de IExplore con los datos del contador agregados de todas las instancias denominadas IExplore.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.Multiple">
      <summary>El conjunto de contadores tiene contadores de varias instancias; por ejemplo, un contador que mide el promedio de E/S en un disco en relación a un proceso.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.MultipleAggregate">
      <summary>El conjunto de contadores contiene contadores de varias instancias cuyo valor agregado se obtiene de todas las instancias del contador. Por ejemplo, un contador de este tipo de conjunto de contadores podría obtener el tiempo de ejecución total de todos los subprocesos de una aplicación multiproceso y sumar sus valores.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.Single">
      <summary>El conjunto de contadores tiene contadores de una instancia; por ejemplo, un contador que mide la memoria física.</summary>
    </member>
    <member name="T:System.Diagnostics.PerformanceData.CounterType">
      <summary>Define los tipos posibles de contadores. Cada contador está asignado a un tipo de contador. El tipo de contador determina el modo en que se calculan los datos del contador, se muestran y se calcula su promedio.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.AverageBase">
      <summary>Este contador se utiliza como datos base (denominador) en el cálculo del promedio de recuento o tiempo de los tipos de contador <see cref="F:System.Diagnostics.PerformanceData.CounterType.AverageCount64" /> y <see cref="F:System.Diagnostics.PerformanceData.CounterType.AverageTimer32" />. Este tipo de contador solamente recopila el último valor observado. (Vea el tipo de contador PERF_AVERAGE_BASE en el kit de implementación).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.AverageCount64">
      <summary>Este tipo de contador muestra cuántos elementos se procesan de promedio durante una operación. Los contadores de este tipo muestran la relación entre los elementos procesados (por ejemplo, los bytes enviados) y el número de operaciones completadas. Dicha relación se calcula comparando el número de elementos procesados durante el último intervalo con el número de operaciones completadas durante el mismo intervalo. (Vea el tipo de contador PERF_AVERAGE_BULK en el kit de implementación).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.AverageTimer32">
      <summary>Este tipo de contador mide el promedio de tiempo transcurrido para completar un proceso u operación. Los contadores de este tipo muestran la relación entre el tiempo total transcurrido del intervalo de muestra y el número de procesos u operaciones completadas durante dicho tiempo. Este tipo de contador mide el tiempo en pasos del reloj del sistema. (Vea el tipo de contador PERF_AVERAGE_TIMER en el kit de implementación).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.Delta32">
      <summary>Este tipo de contador muestra la variación del atributo que se ha medido entre los dos intervalos de muestra más recientes. (Vea el tipo de contador PERF_COUNTER_DELTA en el kit de implementación).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.Delta64">
      <summary>Este tipo de contador muestra la variación del atributo que se ha medido entre los dos intervalos de muestra más recientes. Es igual que el tipo de contador <see cref="F:System.Diagnostics.PerformanceData.CounterType.Delta32" />, salvo porque utiliza campos de mayor tamaño para poder albergar valores mayores. (Vea el tipo de contador PERF_COUNTER_LARGE_DELTA en el kit de implementación).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.ElapsedTime">
      <summary>Este tipo de contador muestra el tiempo total transcurrido entre el inicio de un componente o proceso y el momento en que se calcula este valor. (Vea el tipo de contador PERF_ELAPSED_TIME en el kit de implementación).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.LargeQueueLength">
      <summary>Este tipo de contador supervisa el promedio de longitud de la cola de un recurso a lo largo de un determinado período de tiempo. Los contadores de este tipo muestran la diferencia entre las longitudes de cola observadas durante los dos últimos intervalos de muestra, dividida por la duración del intervalo. Este tipo de contador es igual que el tipo de contador <see cref="F:System.Diagnostics.PerformanceData.CounterType.QueueLength" />, salvo porque utiliza campos de mayor tamaño para poder albergar valores mayores. (Vea el tipo de contador PERF_COUNTER_LARGE_QUEUELEN_TYPE en el kit de implementación).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerBase">
      <summary>Indica el número de elementos de muestra. Se utiliza como denominador en los cálculos para obtener un promedio de los elementos muestreados cuando se toman mediciones de tiempo de varios elementos similares. Este tipo admite los siguientes tipos de contador: <see cref="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageActive" />, <see cref="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageNotActive" />, <see cref="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageActive100Ns" /> y <see cref="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageNotActive100Ns" />.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageActive">
      <summary>Este tipo de contador es un temporizador múltiple. Los temporizadores múltiples obtienen datos de más de una instancia de un componente, como un procesador o unidad de disco. Los contadores de este tipo muestran el tiempo de actividad de uno o varios componentes como un porcentaje del tiempo total del intervalo de muestra. Debido a que el numerador registra el tiempo activo de componentes que funcionan simultáneamente, el porcentaje resultante puede superar el 100 por ciento. Este tipo de contador se diferencia de <see cref="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageActive100Ns" /> en que mide el tiempo en unidades de pasos del contador de rendimiento del sistema, en lugar de unidades de 100 nanosegundos. (Vea el tipo de contador PERF_COUNTER_MULTI_TIMER  en el kit de implementación).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageActive100Ns">
      <summary>Este tipo de contador muestra el tiempo de actividad de uno o varios componentes como un porcentaje del tiempo total del intervalo de muestra. Mide el tiempo en unidades de 100 nanosegundos. Este tipo de contador es un temporizador múltiple. Los temporizadores múltiples están diseñados para supervisar más de una instancia de un componente, como un procesador o unidad de disco. (Vea el tipo de contador PERF_100NSEC_MULTI_TIMER en el kit de implementación).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageNotActive">
      <summary>Este tipo de contador muestra el tiempo de actividad de uno o varios componentes como un porcentaje del tiempo total del intervalo de muestra. Este tipo de contador es un temporizador múltiple inverso. Los temporizadores múltiples supervisan más de una instancia de un componente, como un procesador o unidad de disco. Los contadores inversos miden el tiempo que un componente no está activo y derivan su tiempo de actividad de dicha medición. Este contador se diferencia de <see cref="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageNotActive100Ns" /> en que mide el tiempo en unidades de pasos del contador de rendimiento del sistema, en lugar de unidades de 100 nanosegundos. (Vea el tipo de contador PERF_COUNTER_MULTI_INV en el kit de implementación).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageNotActive100Ns">
      <summary>Este tipo de contador muestra el tiempo de actividad de uno o varios componentes como un porcentaje del tiempo total del intervalo de muestra. Los contadores de este tipo miden el tiempo en unidades de 100 nanosegundos. Este tipo de contador es un temporizador múltiple inverso. Los temporizadores múltiples están diseñados para supervisar más de una instancia de un componente, como un procesador o unidad de disco. Los contadores inversos miden el tiempo en que un componente no está activo y derivan su tiempo activo de la medición del tiempo de inactividad. (Vea el tipo de contador PERF_100NSEC_MULTI_TIMER_INV en el kit de implementación).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.ObjectSpecificTimer">
      <summary>Este tipo de contador de 64 bits es un temporizador que muestra los datos en unidades específicas del objeto. (Vea el tipo de contador PERF_OBJ_TIME_TIMER en el kit de implementación).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.PercentageActive">
      <summary>Este tipo de contador muestra el promedio de tiempo que un componente ha estado activo como un porcentaje del tiempo de muestra total. (Vea el tipo de contador PERF_COUNTER_TIMER en el kit de implementación).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.PercentageActive100Ns">
      <summary>Este tipo de contador muestra el tiempo que un componente ha estado activo como un porcentaje del tiempo total transcurrido del intervalo de muestra. Mide el tiempo en unidades de 100 nanosegundos. Los contadores de este tipo están diseñados para medir la actividad de un componente en cada momento. (Vea el tipo de contador PERF_100NSEC_TIMER en el kit de implementación).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.PercentageNotActive">
      <summary>Este tipo de contador es un contador inverso. Los contadores inversos miden el tiempo que un componente no está activo y derivan su tiempo de actividad de dicha medición. Los contadores de este tipo muestran el porcentaje medio de tiempo de actividad observado durante el intervalo de muestra. El valor de estos contadores se calcula supervisando el porcentaje de tiempo que el servicio estuvo inactivo y restando ese valor del 100 por ciento. Este tipo de contador es igual que el tipo de contador <see cref="F:System.Diagnostics.PerformanceData.CounterType.PercentageNotActive100Ns" />, excepto en que mide el tiempo en unidades de pasos del contador de rendimiento del sistema en lugar de en unidades de 100 nanosegundos. (Vea el tipo de contador PERF_COUNTER_TIMER_INV en el kit de implementación).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.PercentageNotActive100Ns">
      <summary>Este tipo de contador muestra el porcentaje medio de tiempo de actividad observado durante el intervalo de muestra. Este tipo de contador es un contador inverso. Los contadores inversos se calculan supervisando el porcentaje de tiempo que el servicio estuvo inactivo y restando ese valor del 100 por ciento. (Vea el tipo de contador PERF_100NSEC_TIMER_INV en el kit de implementación).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.PrecisionObjectSpecificTimer">
      <summary>Este tipo de contador muestra un valor que está compuesto por dos valores de contador: el recuento del tiempo transcurrido del evento que se está supervisando y la frecuencia especificada en el campo PerfFreq del encabezado del objeto. Este tipo de contador se diferencia de otros temporizadores de contador en que el valor en pasos de reloj acompaña al valor del contador, lo que elimina cualquier posible diferencia derivada de la latencia de la llamada de función. Los tipos de contador de precisión se utilizan cuando los temporizadores del sistema estándar no son lo bastante precisos como para realizar lecturas exactas. (Vea el tipo de contador PERF_PRECISION_OBJECT_TIMER en el kit de implementación).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.PrecisionSystemTimer">
      <summary>Este tipo de contador muestra un valor que está compuesto por dos valores de contador: el recuento del tiempo transcurrido del evento que se está supervisando y la frecuencia del temporizador de rendimiento del sistema. Este tipo de contador se diferencia de otros temporizadores del contador en que el valor en pasos de reloj acompaña al valor del contador, lo que elimina cualquier posible diferencia derivada de la latencia de la llamada de función. Los tipos de contador de precisión se utilizan cuando los temporizadores del sistema estándar no son lo bastante precisos como para realizar lecturas exactas. (Vea el tipo de contador PERF_PRECISION_TIMER en el kit de implementación).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.PrecisionTimer100Ns">
      <summary>Este tipo de contador muestra un valor que está compuesto de dos valores de contador: el recuento del tiempo transcurrido del evento que está supervisándose y el tiempo de "reloj" de un temporizador privado en las mismas unidades. Mide el tiempo en unidades de 100 nanosegundos. Este tipo de contador se diferencia de otros temporizadores del contador en que el valor en pasos de reloj acompaña al valor del contador, lo que elimina cualquier posible diferencia derivada de la latencia de la llamada de función. Los tipos de contador de precisión se utilizan cuando los temporizadores del sistema estándar no son lo bastante precisos como para realizar lecturas exactas. (Vea el tipo de contador PERF_PRECISION_100NS_TIMER en el kit de implementación).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.QueueLength">
      <summary>Este tipo de contador se ha diseñado para supervisar la longitud media de la cola de un recurso a lo largo de un determinado período de tiempo. Muestra la diferencia entre las longitudes de cola observadas durante los dos últimos intervalos de muestra, dividida por la duración del intervalo. (Vea el tipo de contador PERF_COUNTER_QUEUELEN_TYPE en el kit de implementación).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.QueueLength100Ns">
      <summary>Este tipo de contador mide el producto del espacio-tiempo de la longitud de la cola utilizando una base de tiempo de 100 nanosegundos. (Vea el tipo de contador PERF_COUNTER_100NS_QUEUELEN_TYPE en el kit de implementación).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.QueueLengthObjectTime">
      <summary>Este tipo de contador mide el producto del espacio-tiempo de la longitud de cola utilizando una base de tiempo específica del objeto. (Vea el tipo de contador PERF_COUNTER_OBJ_QUEUELEN_TYPE en el kit de implementación).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RateOfCountPerSecond32">
      <summary>Este tipo de contador muestra el número medio de operaciones completadas durante cada segundo del intervalo de muestra. Este tipo de contador mide el tiempo en pasos del reloj del sistema. (Vea el tipo de contador PERF_COUNTER_COUNTER en el kit de implementación).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RateOfCountPerSecond64">
      <summary>Este tipo de contador muestra el número medio de operaciones completadas durante cada segundo del intervalo de muestra. Este tipo de contador mide el tiempo en pasos del reloj del sistema. Este tipo de contador es igual que el tipo <see cref="F:System.Diagnostics.PerformanceData.CounterType.RateOfCountPerSecond32" />, salvo porque utiliza campos de mayor tamaño para poder albergar valores mayores. (Vea el tipo de contador PERF_COUNTER_BULK_COUNT en el kit de implementación).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RawBase32">
      <summary>Este tipo de contador solamente recopila el último valor observado. El valor se utiliza como denominador de un contador que presenta una fracción aritmética general. Este tipo admite el tipo de contador <see cref="F:System.Diagnostics.PerformanceData.CounterType.RawFraction32" />. (Vea el tipo de contador PERF_RAW_BASE en el kit de implementación).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RawBase64">
      <summary>Este tipo de contador recopila el último valor observado. Es igual que el tipo de contador <see cref="F:System.Diagnostics.PerformanceData.CounterType.RawBase32" />, salvo que usa campos de mayor tamaño para poder albergar valores mayores. Este tipo admite el tipo de contador <see cref="F:System.Diagnostics.PerformanceData.CounterType.RawFraction64" />. (Vea el tipo de contador PERF_LARGE_RAW_BASE en el kit de implementación).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RawData32">
      <summary>Este tipo de contador muestra únicamente el último valor observado. No muestra promedios. (Vea el tipo de contador PERF_COUNTER_RAWCOUNT en el kit de implementación).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RawData64">
      <summary>Este tipo de contador muestra únicamente el último valor observado; no muestra promedios. Es igual que el tipo de contador <see cref="F:System.Diagnostics.PerformanceData.CounterType.RawData32" />, salvo porque utiliza campos de mayor tamaño para poder albergar valores mayores. (Vea el tipo de contador PERF_COUNTER_LARGE_RAWCOUNT en el kit de implementación).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RawDataHex32">
      <summary>Este tipo de contador muestra el valor observado más reciente en formato hexadecimal. No muestra promedios. (Vea el tipo de contador PERF_COUNTER_RAWCOUNT_HEX en el kit de implementación).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RawDataHex64">
      <summary>Este tipo de contador muestra el último valor observado en formato hexadecimal. Es igual que el tipo de contador <see cref="F:System.Diagnostics.PerformanceData.CounterType.RawDataHex32" />, salvo porque utiliza campos de mayor tamaño para poder albergar valores mayores. (Vea el tipo de contador PERF_COUNTER_LARGE_RAWCOUNT_HEX en el kit de implementación).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RawFraction32">
      <summary>Este tipo de contador muestra la proporción de un subconjunto respecto a su conjunto como un porcentaje. Por ejemplo, compara el número de bytes utilizados en un disco con el número total de bytes que contiene el disco. Los contadores de este tipo muestran sólo el porcentaje actual, no un promedio a lo largo del tiempo. (Vea el tipo de contador PERF_RAW_FRACTION en el kit de implementación).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RawFraction64">
      <summary>Este tipo de contador muestra la proporción de un subconjunto respecto a su conjunto como un porcentaje. Por ejemplo, compara el número de bytes utilizados en un disco con el número total de bytes que contiene el disco. Los contadores de este tipo muestran sólo el porcentaje actual, no un promedio a lo largo del tiempo. Es igual que el tipo de contador <see cref="F:System.Diagnostics.PerformanceData.CounterType.RawFraction32" />, salvo porque utiliza campos de mayor tamaño para poder albergar valores mayores.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.SampleBase">
      <summary>Este contador almacena el número de interrupciones de muestreo tomadas y se utiliza como denominador en la fracción de muestreo. Este tipo admite el tipo de contador <see cref="F:System.Diagnostics.PerformanceData.CounterType.SampleFraction" />.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.SampleCounter">
      <summary>Este tipo de contador muestra el promedio de operaciones completadas en un segundo. Mide el tiempo en unidades de pasos del temporizador de rendimiento del sistema. La variable F representa el número de pasos que se producen en un segundo. El valor de F se calcula en la ecuación de manera que el resultado se muestra en segundos. (Vea el tipo de contador PERF_SAMPLE_COUNTER en el kit de implementación).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.SampleFraction">
      <summary>Este tipo de contador muestra la relación media entre el número de aciertos y todas las operaciones realizadas durante los dos últimos intervalos de muestra. (Vea el tipo de contador PERF_SAMPLE_FRACTION en el kit de implementación).</summary>
    </member>
  </members>
</doc>