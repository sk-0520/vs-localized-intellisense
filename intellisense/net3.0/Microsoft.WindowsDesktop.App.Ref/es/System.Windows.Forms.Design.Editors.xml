<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Windows.Forms.Design.Editors</name>
  </assembly>
  <members>
    <member name="T:System.ComponentModel.Design.ArrayEditor">
      <summary>Proporciona una interfaz de usuario para editar matrices en tiempo de diseño.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.#ctor(System.Type)">
      <summary>Inicializa una nueva instancia de <see cref="T:System.ComponentModel.Design.ArrayEditor" /> utilizando el tipo de datos especificado para la matriz.</summary>
      <param name="type">Tipo de datos de los elementos de la matriz.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.CreateCollectionItemType">
      <summary>Obtiene el tipo de datos que va a contener esta colección.</summary>
      <returns>Un objeto <see cref="T:System.Type" /> que indica el tipo de datos que va a contener la colección.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.GetItems(System.Object)">
      <summary>Obtiene los elementos de la matriz.</summary>
      <param name="editValue">Matriz de la que se recuperan los elementos.</param>
      <returns>Matriz que contiene los elementos de la matriz especificada. Si el objeto especificado en el parámetro <paramref name="editValue" /> no es una matriz, se devuelve un objeto nuevo vacío.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.SetItems(System.Object,System.Object[])">
      <summary>Establece los elementos de la matriz.</summary>
      <param name="editValue">Matriz en la que se van a establecer los elementos.</param>
      <param name="value">Matriz de objetos que se van a establecer como elementos de la matriz.</param>
      <returns>Instancia de la nueva matriz. Si el objeto especificado por el parámetro <paramref name="editValue" /> no es una matriz, se devuelve el objeto especificado por el parámetro <paramref name="editValue" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.CollectionEditor">
      <summary>Proporciona una interfaz de usuario con la que se pueden editar casi todos los tipos de colecciones en tiempo de diseño.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.#ctor(System.Type)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.CollectionEditor" /> utilizando el tipo de colección especificado.</summary>
      <param name="type">Tipo de colección que el editor va a modificar.</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CancelChanges">
      <summary>Cancela los cambios en la colección.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CanRemoveInstance(System.Object)">
      <summary>Indica si se pueden quitar los miembros originales de la colección.</summary>
      <param name="value">Valor que se va a quitar.</param>
      <returns>
        <see langword="true" /> si se permite quitar este valor de la colección; en caso contrario, <see langword="false" />. La implementación predeterminada siempre devuelve <see langword="true" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CanSelectMultipleInstances">
      <summary>Indica si se pueden seleccionar a la vez varios elementos de la colección.</summary>
      <returns>
        <see langword="true" /> si se pueden seleccionar a la vez varios miembros de la colección; en caso contrario, <see langword="false" />. De forma predeterminada, se devuelve <see langword="true" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.CollectionEditor.CollectionForm">
      <summary>Proporciona un cuadro de diálogo modal para editar el contenido de una colección mediante <see cref="T:System.Drawing.Design.UITypeEditor" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.#ctor(System.ComponentModel.Design.CollectionEditor)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" />.</summary>
      <param name="editor">
        <see cref="T:System.ComponentModel.Design.CollectionEditor" /> que se va a usar para la edición de la colección.</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CanRemoveInstance(System.Object)">
      <summary>Indica si se pueden quitar los miembros originales de la colección.</summary>
      <param name="value">Valor que se va a quitar.</param>
      <returns>
        <see langword="true" /> si se permite quitar este valor de la colección; en caso contrario, <see langword="false" />. De forma predeterminada, este método devuelve el valor desde el método <see cref="M:System.ComponentModel.Design.CollectionEditor.CanRemoveInstance(System.Object)" /> del <see cref="T:System.ComponentModel.Design.CollectionEditor" /> de este formulario.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CanSelectMultipleInstances">
      <summary>Indica si se pueden seleccionar a la vez varios elementos de la colección.</summary>
      <returns>
        <see langword="true" /> si se pueden seleccionar a la vez varios miembros de la colección; en caso contrario, <see langword="false" />. De forma predeterminada, este método devuelve el valor desde el método <see cref="M:System.ComponentModel.Design.CollectionEditor.CanSelectMultipleInstances" /> del <see cref="T:System.ComponentModel.Design.CollectionEditor" /> de este formulario.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.CollectionItemType">
      <summary>Obtiene el tipo de datos de cada elemento de la colección.</summary>
      <returns>Tipo de datos de los elementos de la colección.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.CollectionType">
      <summary>Obtiene el tipo de datos del objeto de la colección.</summary>
      <returns>Tipo de datos del objeto de la colección.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.Context">
      <summary>Obtiene un descriptor de tipo que indica el contexto actual.</summary>
      <returns>
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que indica el contexto que se está utilizando actualmente, o <see langword="null" /> si no hay ningún contexto disponible.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CreateInstance(System.Type)">
      <summary>Crea una nueva instancia del tipo de elemento de colección especificado.</summary>
      <param name="itemType">El tipo de elemento que se va a crear.</param>
      <returns>Una instancia nueva del objeto especificado, o <see langword="null" /> si el usuario decide cancelar la creación de esta instancia.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.DestroyInstance(System.Object)">
      <summary>Destruye la instancia especificada del objeto.</summary>
      <param name="instance">Objeto que se va a destruir.</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.DisplayError(System.Exception)">
      <summary>Muestra al usuario la excepción especificada.</summary>
      <param name="e">Excepción que se va a mostrar.</param>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.EditValue">
      <summary>Obtiene o establece el objeto de la colección que se va a editar.</summary>
      <returns>Objeto de la colección que se va a editar.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.GetService(System.Type)">
      <summary>Obtiene el servicio solicitado si está disponible.</summary>
      <param name="serviceType">Tipo de servicio que se va a recuperar.</param>
      <returns>Instancia del servicio o <see langword="null" /> si no se encuentra ningún servicio.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.Items">
      <summary>Obtiene o establece la matriz de elementos que mostrará este formulario.</summary>
      <returns>Matriz de objetos que mostrará el formulario.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.NewItemTypes">
      <summary>Obtiene los tipos de elementos disponibles que se pueden crear para esta colección.</summary>
      <returns>Tipos de elementos que se pueden crear.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.OnEditValueChanged">
      <summary>Proporciona una oportunidad para realizar el procesamiento cuando se ha cambiado un valor de la colección.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.ShowEditorDialog(System.Windows.Forms.Design.IWindowsFormsEditorService)">
      <summary>Muestra el cuadro de diálogo para el editor de la colección mediante el objeto <see cref="T:System.Windows.Forms.Design.IWindowsFormsEditorService" /> especificado.</summary>
      <param name="edSvc">
        <see cref="T:System.Windows.Forms.Design.IWindowsFormsEditorService" /> que se puede utilizar para mostrar el cuadro de diálogo.</param>
      <returns>
        <see cref="T:System.Windows.Forms.DialogResult" /> que indica el código del resultado devuelto desde el cuadro de diálogo.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionItemType">
      <summary>Obtiene el tipo de datos de cada elemento de la colección.</summary>
      <returns>Tipo de datos de los elementos de la colección.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionType">
      <summary>Obtiene el tipo de datos del objeto de la colección.</summary>
      <returns>Tipo de datos del objeto de la colección.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.Context">
      <summary>Obtiene un descriptor de tipo que indica el contexto actual.</summary>
      <returns>
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que indica el contexto que se está utilizando actualmente, o <see langword="null" /> si no hay ningún contexto disponible.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateCollectionForm">
      <summary>Crea un formulario que permite mostrar y editar la colección actual.</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" /> que se va a proporcionar como interfaz de usuario para modificar la colección.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateCollectionItemType">
      <summary>Obtiene el tipo de datos que contiene la colección.</summary>
      <returns>Tipo de datos de los elementos de la colección o <see cref="T:System.Object" /> si no se encuentra la propiedad <see langword="Item" /> en la colección.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateInstance(System.Type)">
      <summary>Crea una nueva instancia del tipo de elemento de colección especificado.</summary>
      <param name="itemType">El tipo de elemento que se va a crear.</param>
      <returns>Nueva instancia del objeto especificado.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateNewItemTypes">
      <summary>Obtiene los tipos de datos que puede contener el editor de la colección.</summary>
      <returns>Matriz de los tipos de datos que puede contener la colección.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.DestroyInstance(System.Object)">
      <summary>Destruye la instancia especificada del objeto.</summary>
      <param name="instance">Objeto que se va a destruir.</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Modifica el valor del objeto especificado mediante el proveedor de servicios y el contexto especificados.</summary>
      <param name="context">Un objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto.</param>
      <param name="provider">Objeto de proveedor de servicios mediante el que se obtienen los servicios de edición.</param>
      <param name="value">Objeto cuyo valor se va a editar.</param>
      <returns>Nuevo valor del objeto. Si el valor del objeto no ha cambiado, se debe devolver el mismo objeto que se pasó.</returns>
      <exception cref="T:System.ComponentModel.Design.CheckoutException">No se ha podido desproteger correctamente un archivo que está protegido en un programa de administración de código fuente.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetDisplayText(System.Object)">
      <summary>Recupera el texto para mostrar del elemento de lista dado.</summary>
      <param name="value">Elemento de lista cuyo texto para mostrar se va a recuperar.</param>
      <returns>Texto para mostrar de <paramref name="value" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Obtiene el estilo de edición utilizado por el método <see cref="M:System.ComponentModel.Design.CollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.</summary>
      <param name="context">Un objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto.</param>
      <returns>Valor de enumeración <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> que indica el estilo de edición proporcionado. Si no se admite el método en el contexto especificado, este método devolverá el identificador <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetItems(System.Object)">
      <summary>Obtiene una matriz de objetos que contiene la colección especificada.</summary>
      <param name="editValue">Colección que se va a editar.</param>
      <returns>Matriz que contiene los objetos de la colección o matriz de objetos vacía si la colección especificada no hereda de <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetObjectsFromInstance(System.Object)">
      <summary>Devuelve una lista que contiene el objeto dado.</summary>
      <param name="instance">
        <see cref="T:System.Collections.ArrayList" /> que se devuelve como objeto.</param>
      <returns>Clase <see cref="T:System.Collections.ArrayList" /> que contiene los objetos individuales que se van a crear.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetService(System.Type)">
      <summary>Obtiene el servicio solicitado si está disponible.</summary>
      <param name="serviceType">Tipo de servicio que se va a recuperar.</param>
      <returns>Instancia del servicio o <see langword="null" /> si no se encuentra ningún servicio.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.HelpTopic">
      <summary>Obtiene la palabra clave de la Ayuda para mostrar el tema o la lista de temas de Ayuda cuando se hace clic en el botón Ayuda del cuadro de diálogo del editor o al presionar la tecla F1.</summary>
      <returns>Palabra clave de la Ayuda para que se muestre el tema de Ayuda o la lista de temas de Ayuda cuando se solicita ayuda desde el editor.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.NewItemTypes">
      <summary>Obtiene los tipos de elementos disponibles que se pueden crear para esta colección.</summary>
      <returns>Tipos de elementos que se pueden crear.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.SetItems(System.Object,System.Object[])">
      <summary>Establece la matriz especificada como elementos de la colección.</summary>
      <param name="editValue">Colección que se va a editar.</param>
      <param name="value">Matriz de objetos que se van a establecer como elementos de la colección.</param>
      <returns>Objeto de colección recién creado o, en cualquier otro caso, colección indicada por el parámetro <paramref name="editValue" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.ShowHelp">
      <summary>Muestra el tema de Ayuda predeterminado del editor de la colección.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.MultilineStringEditor">
      <summary>Muestra un cuadro de diálogo para editar las cadenas multilínea en modo de diseño.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.MultilineStringEditor" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edita el valor del objeto especificado utilizando el estilo de edición proporcionado por <see cref="M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <param name="context">Un objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto.</param>
      <param name="provider">Objeto de proveedor de servicios mediante el que se obtienen los servicios de edición.</param>
      <param name="value">Instancia del valor que se va a editar.</param>
      <returns>Nuevo valor del objeto. En caso de que el valor del objeto no cambie, este método devuelve el mismo objeto que se ha pasado.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Obtiene el estilo de edición del método <see cref="M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.</summary>
      <param name="context">Un objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto.</param>
      <returns>Valor de enumeración <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> que indica el estilo de edición admitido.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Obtiene un valor que indica si este editor permite dibujar una representación del valor de un objeto.</summary>
      <param name="context">Un objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto.</param>
      <returns>Valor <see langword="false" />, que indica que <see cref="T:System.Drawing.Design.UITypeEditor" /> no muestra una representación visual en la ventana Propiedades.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ObjectSelectorEditor">
      <summary>Implementa la funcionalidad básica que se puede utilizar para diseñar editores de valor. A su vez, estos editores pueden proporcionar una interfaz de usuario para representar y editar los valores de los objetos de los tipos de datos compatibles.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.#ctor(System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" />.</summary>
      <param name="subObjectSelector">Valor de selector del subobjeto especificado.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.ApplyTreeViewThemeStyles(System.Windows.Forms.TreeView)">
      <param name="treeView" />
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.currValue">
      <summary>Representa el valor actual de <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Modifica el valor del objeto especificado utilizando el estilo de editor indicado mediante <see cref="Overload:System.ComponentModel.Design.ObjectSelectorEditor.GetEditStyle" />.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto.</param>
      <param name="provider">
        <see cref="T:System.IServiceProvider" /> que puede utilizar este editor para obtener servicios.</param>
      <param name="value">Objeto que se va a modificar.</param>
      <returns>Nuevo valor del objeto. En caso de que el valor del objeto no cambie, el método devolverá el mismo objeto que se ha pasado.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.EqualsToValue(System.Object)">
      <summary>Determina si el objeto <see cref="T:System.Object" /> especificado es igual al objeto <see cref="T:System.Object" /> actual.</summary>
      <param name="value">Objeto <see cref="T:System.Object" /> que se va a comparar con el objeto <see cref="T:System.Object" /> actual.</param>
      <returns>
        <see langword="true" /> si el objeto <see cref="T:System.Object" /> especificado es igual al objeto <see cref="T:System.Object" /> actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.FillTreeWithData(System.ComponentModel.Design.ObjectSelectorEditor.Selector,System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider)">
      <summary>Rellena una colección jerárquica de elementos con etiquetas, en la que cada elemento está representado por un objeto <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
      <param name="selector">Colección jerárquica de elementos con etiquetas.</param>
      <param name="context">Información de contexto para un componente.</param>
      <param name="provider">Método <see cref="M:System.IServiceProvider.GetService(System.Type)" /> de esta interfaz que obtiene el objeto que proporciona el servicio.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Obtiene el estilo de editor utilizado por el método <see cref="Overload:System.ComponentModel.Design.ObjectSelectorEditor.EditValue" />.</summary>
      <param name="context">Un objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto.</param>
      <returns>Valor de <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> que indica el estilo de editor utilizado por <see cref="Overload:System.ComponentModel.Design.ObjectSelectorEditor.EditValue" />.</returns>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.prevValue">
      <summary>Representa el valor anterior de <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" />.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.ObjectSelectorEditor.Selector">
      <summary>Muestra una colección jerárquica de elementos con etiquetas, representado cada uno por un <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.#ctor(System.ComponentModel.Design.ObjectSelectorEditor)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor.Selector" />.</summary>
      <param name="editor">
        <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.AddNode(System.String,System.Object,System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode)">
      <summary>Agrega un nuevo nodo de árbol a la colección.</summary>
      <param name="label">Etiqueta del nodo.</param>
      <param name="value">
        <see cref="T:System.Object" /> que representa el valor del nodo.</param>
      <param name="parent">Elemento principal del nodo.</param>
      <returns>Objeto <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode" /> agregado a la colección.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Clear">
      <summary>Quita todos los nodos de árbol de la colección.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.Selector.clickSeen">
      <summary>Esto campo sólo es para uso interno.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnAfterSelect(System.Object,System.Windows.Forms.TreeViewEventArgs)">
      <summary>Se produce después de seleccionarse el nodo de árbol.</summary>
      <param name="sender">Origen de un evento.</param>
      <param name="e">Objeto <see cref="T:System.Windows.Forms.TreeViewEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>Se produce cuando se presiona una tecla mientras el control tiene el foco.</summary>
      <param name="e">Proporciona datos para el evento <see cref="E:System.Windows.Forms.Control.KeyDown" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary>Se produce cuando se presiona una tecla mientras el control tiene el foco.</summary>
      <param name="e">Proporciona datos para el evento <see cref="E:System.Windows.Forms.Control.KeyPress" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnNodeMouseClick(System.Windows.Forms.TreeNodeMouseClickEventArgs)">
      <summary>Se produce cuando el puntero del mouse se encuentra sobre el control y se hace clic con uno de sus botones.</summary>
      <param name="e">Proporciona datos para los eventos <see cref="E:System.Windows.Forms.Control.MouseUp" />, <see cref="E:System.Windows.Forms.Control.MouseDown" /> y <see cref="E:System.Windows.Forms.Control.MouseMove" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.SetSelection(System.Object,System.Windows.Forms.TreeNodeCollection)">
      <summary>Establece los nodos de colección en un valor concreto.</summary>
      <param name="value">Valor que se va a establecer.</param>
      <param name="nodes">Colección de nodos.</param>
      <returns>
        <see langword="true" /> si se han establecido los nodos de la colección; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Start(System.Windows.Forms.Design.IWindowsFormsEditorService,System.Object)">
      <summary>Inicializa el servicio de editor.</summary>
      <param name="edSvc">Servicio de editor.</param>
      <param name="value">Valor que se va a establecer.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Stop">
      <summary>Quita el servicio de editor.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.WndProc(System.Windows.Forms.Message@)">
      <summary>Procesa los mensajes de Windows.</summary>
      <param name="m">
        <see cref="T:System.Windows.Forms.Message" /> de Windows que se va a procesar.</param>
    </member>
    <member name="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode">
      <summary>Representa un nodo de <see cref="T:System.Windows.Forms.TreeView" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode.#ctor(System.String,System.Object)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode" />.</summary>
      <param name="label">Etiqueta del nodo.</param>
      <param name="value">
        <see cref="T:System.Object" /> que representa el valor del nodo.</param>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode.value">
      <summary>Representa el valor del nodo.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.SetValue(System.Object)">
      <summary>Establece el objeto <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" /> actual en el valor especificado.</summary>
      <param name="value">Valor especificado.</param>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.SubObjectSelector">
      <summary>Controla si son accesibles o no los nodos de la colección jerárquica de elementos con etiquetas.</summary>
    </member>
    <member name="T:System.Drawing.Design.BitmapEditor">
      <summary>Proporciona una interfaz de usuario para la selección de archivos de mapa de bits en un explorador de propiedades.</summary>
    </member>
    <member name="M:System.Drawing.Design.BitmapEditor.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.Design.BitmapEditor" />.</summary>
    </member>
    <member name="F:System.Drawing.Design.BitmapEditor.BitmapExtensions">
      <summary>Proporciona la lista de extensiones de archivo predeterminadas usada para filtrar la lista de archivos.</summary>
    </member>
    <member name="M:System.Drawing.Design.BitmapEditor.GetExtensions">
      <summary>Obtiene las extensiones del filtro de la lista de archivos que el editor de mapa de bits utilizará inicialmente para filtrar la lista de archivos.</summary>
      <returns>Conjunto predeterminado de extensiones de archivo utilizado para filtrar la lista de archivos.</returns>
    </member>
    <member name="M:System.Drawing.Design.BitmapEditor.GetFileDialogDescription">
      <summary>Obtiene la descripción del filtro predeterminado de la lista de archivos proporcionado por este editor.</summary>
      <returns>Descripción del tipo de archivos predeterminado a partir del cual se va a filtrar la lista de archivos.</returns>
    </member>
    <member name="M:System.Drawing.Design.BitmapEditor.LoadFromStream(System.IO.Stream)">
      <summary>Carga una imagen a partir de la secuencia especificada.</summary>
      <param name="stream">Secuencia a partir de la cual se carga la imagen.</param>
      <returns>
        <see cref="T:System.Drawing.Image" /> cargada de la secuencia.</returns>
    </member>
    <member name="T:System.Drawing.Design.ColorEditor">
      <summary>Proporciona un <see cref="T:System.Drawing.Design.UITypeEditor" /> para seleccionar un color visualmente.</summary>
    </member>
    <member name="M:System.Drawing.Design.ColorEditor.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.Design.ColorEditor" />.</summary>
    </member>
    <member name="M:System.Drawing.Design.ColorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edita el objeto especificado utilizando el estilo de editor proporcionado por el método <see cref="M:System.Drawing.Design.ColorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <param name="context">Un objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto.</param>
      <param name="provider">
        <see cref="T:System.IServiceProvider" /> mediante la cual se pueden obtener servicios de edición.</param>
      <param name="value">Instancia del valor que se va a editar.</param>
      <returns>Nuevo valor del objeto. Si el valor del objeto no ha cambiado, se debe devolver el mismo objeto que se pasó.</returns>
    </member>
    <member name="M:System.Drawing.Design.ColorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Obtiene el estilo de edición del método Edit. Si no se admite el método, devolverá <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.</summary>
      <param name="context">Un objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto.</param>
      <returns>Valor enum que indica el estilo de edición proporcionado.</returns>
    </member>
    <member name="M:System.Drawing.Design.ColorEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Obtiene un valor que indica si este editor permite dibujar una representación del valor de un objeto.</summary>
      <param name="context">Un objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto.</param>
      <returns>Es <see langword="true" /> si se implementa <see cref="Overload:System.Drawing.Design.ColorEditor.PaintValue" />; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.ColorEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary>Dibuja un valor representativo del objeto dado en el lienzo proporcionado.</summary>
      <param name="e">Qué pintar y dónde pintarlo.</param>
    </member>
    <member name="T:System.Drawing.Design.CursorEditor">
      <summary>Proporciona un objeto <see cref="T:System.Drawing.Design.UITypeEditor" /> que puede realizar operaciones predeterminadas de búsqueda de archivos de tipo cursor (.cur).</summary>
    </member>
    <member name="M:System.Drawing.Design.CursorEditor.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.Design.CursorEditor" />.</summary>
    </member>
    <member name="M:System.Drawing.Design.CursorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edita el objeto especificado utilizando el estilo de editor proporcionado por el método <see cref="Overload:System.Drawing.Design.CursorEditor.GetEditStyle" />.</summary>
      <param name="context">Contexto de descriptor de tipo que puede utilizarse para proporcionar información de contexto adicional.</param>
      <param name="provider">Objeto de proveedor de servicios mediante el que se pueden obtener los servicios de edición.</param>
      <param name="value">Instancia del valor que se va a editar.</param>
      <returns>Nuevo valor del objeto. Si el valor del objeto no ha cambiado, se debe devolver el mismo objeto que se pasó.</returns>
    </member>
    <member name="M:System.Drawing.Design.CursorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Recupera el estilo de edición del método <see cref="Overload:System.Drawing.Design.CursorEditor.EditValue" />.</summary>
      <param name="context">Contexto de descriptor de tipo que puede utilizarse para proporcionar información de contexto adicional.</param>
      <returns>Valor enum que indica el estilo de edición proporcionado. Si no se admite el método, devolverá <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.</returns>
    </member>
    <member name="P:System.Drawing.Design.CursorEditor.IsDropDownResizable">
      <summary>Obtiene un valor que indica si el usuario puede cambiar el tamaño de los editores desplegables.</summary>
      <returns>Es <see langword="true" /> si se puede cambiar el tamaño de los editores desplegables; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="T:System.Drawing.Design.FontEditor">
      <summary>Proporciona una interfaz de usuario para elegir y configurar un objeto <see cref="T:System.Drawing.Font" />.</summary>
    </member>
    <member name="M:System.Drawing.Design.FontEditor.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.Design.FontEditor" />.</summary>
    </member>
    <member name="M:System.Drawing.Design.FontEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Modifica el valor del objeto especificado utilizando el estilo de editor indicado mediante <see cref="M:System.Drawing.Design.FontEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <param name="context">Un objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto.</param>
      <param name="provider">
        <see cref="T:System.IServiceProvider" /> que puede utilizar este editor para obtener servicios.</param>
      <param name="value">Objeto que se va a modificar.</param>
      <returns>Nuevo valor del objeto. En caso de que el valor del objeto no cambie, se devuelve el mismo objeto que se ha pasado.</returns>
    </member>
    <member name="M:System.Drawing.Design.FontEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Obtiene el estilo de editor utilizado por el método <see cref="M:System.Drawing.Design.FontEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.</summary>
      <param name="context">Un objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto.</param>
      <returns>Valor de <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> que indica el estilo de editor utilizado por <see cref="M:System.Drawing.Design.FontEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.</returns>
    </member>
    <member name="T:System.Drawing.Design.FontNameEditor">
      <summary>Proporciona un <see cref="T:System.Drawing.Design.UITypeEditor" /> que pinta un glifo para el nombre de fuente.</summary>
    </member>
    <member name="M:System.Drawing.Design.FontNameEditor.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.Design.FontNameEditor" />.</summary>
    </member>
    <member name="M:System.Drawing.Design.FontNameEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Determina si este editor permite dibujar una representación del valor de un objeto.</summary>
      <param name="context">Contexto de descriptor de tipo que puede utilizarse para proporcionar información de contexto adicional.</param>
      <returns>Es <see langword="true" /> si se implementa <see cref="Overload:System.Drawing.Design.FontNameEditor.PaintValue" />; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.FontNameEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary>Dibuja un valor representativo del objeto dado en el lienzo proporcionado. El dibujo se debe realizar en el interior del rectángulo proporcionado.</summary>
      <param name="e">Qué pintar y dónde pintarlo.</param>
    </member>
    <member name="T:System.Drawing.Design.ImageEditor">
      <summary>Proporciona una interfaz de usuario para seleccionar una imagen para una propiedad en una cuadrícula de propiedades.</summary>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.Design.ImageEditor" />.</summary>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.CreateExtensionsString(System.String[],System.String)">
      <summary>Crea una cadena de extensiones de nombres de archivos utilizando la matriz de extensiones de archivo y el separador especificados.</summary>
      <param name="extensions">Extensiones por las que se va a realizar el filtrado.</param>
      <param name="sep">Separador que se va a utilizar.</param>
      <returns>Cadena que contiene las extensiones de nombres de archivos especificadas, separadas por el separador especificado.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.CreateFilterEntry(System.Drawing.Design.ImageEditor)">
      <summary>Crea una entrada de filtro para la lista de archivos de un cuadro de diálogo de archivos.</summary>
      <param name="e">Clase <see cref="T:System.Drawing.Design.ImageEditor" /> de donde obtener la entrada del filtro.</param>
      <returns>Nueva cadena de entradas de filtro.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edita el valor del objeto especificado utilizando el estilo de edición proporcionado por el método <see cref="M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <param name="context">Un objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto.</param>
      <param name="provider">Una interfaz <see cref="T:System.IServiceProvider" /> mediante la cual se pueden obtener servicios de edición.</param>
      <param name="value">Un objeto <see cref="T:System.Object" /> que se está editando.</param>
      <returns>Un objeto <see cref="T:System.Object" /> que representa el nuevo valor. En caso de que el valor del objeto no cambie, <see cref="M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> devuelve el mismo objeto que se ha pasado.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Obtiene el estilo de edición del método <see cref="M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.</summary>
      <param name="context">Un objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto.</param>
      <returns>Uno de los valores de <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> que indica el estilo de edición compatible.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.GetExtensions">
      <summary>Obtiene las extensiones del filtro de la lista de archivos que el editor utiliza inicialmente para filtrar la lista de archivos.</summary>
      <returns>Conjunto de extensiones de archivo utilizado para filtrar la lista de archivos.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.GetFileDialogDescription">
      <summary>Obtiene la descripción del filtro predeterminado de la lista de archivos que proporciona este editor.</summary>
      <returns>La descripción del filtro predeterminado de la lista de archivos.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.GetImageExtenders">
      <summary>Obtiene una matriz de tipos de imagen compatibles.</summary>
      <returns>Una matriz de <see cref="T:System.Type" /> que representa los tipos de imagen compatibles.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Obtiene un valor que indica si este editor permite dibujar una representación del valor de un objeto.</summary>
      <param name="context">Un objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto.</param>
      <returns>Es <see langword="true" /> si se implementa <see cref="M:System.Drawing.Design.ImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)" />; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.LoadFromStream(System.IO.Stream)">
      <summary>Carga una imagen a partir de la secuencia especificada.</summary>
      <param name="stream">Clase <see cref="T:System.IO.Stream" /> que contiene la imagen que se va a cargar.</param>
      <returns>
        <see cref="T:System.Drawing.Image" /> que se ha cargado.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary>Dibuja un valor indicado por el <see cref="T:System.Drawing.Design.PaintValueEventArgs" /> especificado.</summary>
      <param name="e">
        <see cref="T:System.Drawing.Design.PaintValueEventArgs" /> que indica qué se va a dibujar y dónde.</param>
    </member>
    <member name="T:System.Drawing.Design.MetafileEditor">
      <summary>Proporciona un objeto <see cref="T:System.Drawing.Design.UITypeEditor" /> que puede realizar operaciones predeterminadas de búsqueda para archivos de tipo metarchivo (.emf).</summary>
    </member>
    <member name="M:System.Drawing.Design.MetafileEditor.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.Design.MetafileEditor" />.</summary>
    </member>
    <member name="M:System.Drawing.Design.MetafileEditor.GetExtensions">
      <summary>Obtiene las extensiones del filtro de la lista de archivos que el editor utiliza inicialmente para filtrar la lista de archivos.</summary>
      <returns>Conjunto de extensiones de archivo utilizado para filtrar la lista de archivos.</returns>
    </member>
    <member name="M:System.Drawing.Design.MetafileEditor.GetFileDialogDescription">
      <summary>Obtiene la descripción del filtro predeterminado de la lista de archivos que proporciona este editor.</summary>
      <returns>La descripción del filtro predeterminado de la lista de archivos.</returns>
    </member>
    <member name="M:System.Drawing.Design.MetafileEditor.LoadFromStream(System.IO.Stream)">
      <summary>Carga una imagen a partir de la secuencia especificada.</summary>
      <param name="stream">Clase <see cref="T:System.IO.Stream" /> que contiene la imagen que se va a cargar.</param>
      <returns>
        <see cref="T:System.Drawing.Image" /> que se ha cargado.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.AnchorEditor">
      <summary>Proporciona una interfaz de usuario para configurar una propiedad <see cref="P:System.Windows.Forms.Control.Anchor" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AnchorEditor.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.AnchorEditor" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AnchorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Modifica el valor del objeto especificado mediante el proveedor de servicios y el contexto especificados.</summary>
      <param name="context">Un objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto.</param>
      <param name="provider">
        <see cref="T:System.IServiceProvider" /> mediante la cual se pueden obtener servicios de edición.</param>
      <param name="value">Instancia del valor que se va a editar.</param>
      <returns>Nuevo valor del objeto. Si el valor del objeto no ha cambiado, este método debe devolver el mismo objeto que se pasó.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AnchorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Obtiene el estilo de editor utilizado por el método <see cref="M:System.Windows.Forms.Design.AnchorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.</summary>
      <param name="context">Un objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto.</param>
      <returns>Uno de los valores de <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> que indica el estilo de edición proporcionado. Si no se admite el método, este método devolverá <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.BorderSidesEditor">
      <summary>Proporciona un editor para establecer la propiedad <see cref="P:System.Windows.Forms.ToolStripStatusLabel.BorderSides" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.BorderSidesEditor.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.BorderSidesEditor" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.BorderSidesEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Modifica el valor del objeto dado utilizando el estilo de editor proporcionado por <see cref="M:System.Windows.Forms.Design.BorderSidesEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona información sobre el control o componente.</param>
      <param name="provider">
        <see cref="T:System.IServiceProvider" /> que proporciona soporte personalizado a otros objetos.</param>
      <param name="value">Valor del objeto que se va a modificar.</param>
      <returns>El objeto modificado.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.BorderSidesEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Recupera el estilo de edición del método <see langword="EditValue" />.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona información sobre el control o componente.</param>
      <returns>Uno de los valores de <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" />. Si no se admite el método, devuelve <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.DockEditor">
      <summary>Proporciona una interfaz de usuario para especificar una propiedad <see cref="P:System.Windows.Forms.Control.Dock" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DockEditor.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.DockEditor" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DockEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Modifica el valor del objeto especificado utilizando el estilo de editor proporcionado por GetEditorStyle. Se proporciona un proveedor de servicios para poder obtener todos los servicios de edición necesarios.</summary>
      <param name="context">Un objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto.</param>
      <param name="provider">Objeto de proveedor de servicios mediante el que se pueden obtener los servicios de edición.</param>
      <param name="value">Instancia del valor que se va a editar.</param>
      <returns>Nuevo valor del objeto. Si el valor del objeto no ha cambiado, este método debe devolver el mismo objeto que se pasó.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DockEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Recupera el estilo de edición del método EditValue. Si no se admite el método, devolverá None.</summary>
      <param name="context">Un objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto.</param>
      <returns>Valor enum que indica el estilo de edición proporcionado.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.FileNameEditor">
      <summary>Proporciona una interfaz de usuario para seleccionar un nombre de archivo.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FileNameEditor.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.FileNameEditor" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FileNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edita el objeto especificado utilizando el estilo de editor proporcionado por el método <see cref="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <param name="context">Un objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto.</param>
      <param name="provider">Objeto de proveedor de servicios mediante el que se pueden obtener los servicios de edición.</param>
      <param name="value">Instancia del valor que se va a editar.</param>
      <returns>Nuevo valor del objeto. Si el valor del objeto no ha cambiado, este método debe devolver el mismo objeto que se pasó.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Obtiene el estilo de edición utilizado por el método <see cref="M:System.Windows.Forms.Design.FileNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.</summary>
      <param name="context">Un objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto.</param>
      <returns>Uno de los valores de <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> que indica el estilo de edición proporcionado.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FileNameEditor.InitializeDialog(System.Windows.Forms.OpenFileDialog)">
      <summary>Inicializa el cuadro de diálogo para abrir archivos cuando se crea.</summary>
      <param name="openFileDialog">
        <see cref="T:System.Windows.Forms.OpenFileDialog" /> que se va a utilizar para seleccionar un nombre de archivo.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.FolderNameEditor">
      <summary>Proporciona una interfaz de usuario para elegir una carpeta del sistema de archivos.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.FolderNameEditor" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edita el objeto especificado utilizando el estilo de editor proporcionado por <see cref="M:System.Windows.Forms.Design.FolderNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <param name="context">Un objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto.</param>
      <param name="provider">Proveedor de objetos de servicio.</param>
      <param name="value">Valor que se va a establecer.</param>
      <returns>El nuevo valor del objeto, o el valor anterior, si no se pudo actualizar el objeto.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser">
      <summary>Representa un cuadro de diálogo que permite al usuario elegir una carpeta. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" />.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.Description">
      <summary>Obtiene o establece una descripción que se va a mostrar por encima de las carpetas.</summary>
      <returns>Descripción que se va a mostrar sobre las carpetas.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.DirectoryPath">
      <summary>Obtiene la ruta de acceso al directorio del objeto seleccionada por el usuario.</summary>
      <returns>La ruta de acceso al directorio del objeto seleccionada por el usuario.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.ShowDialog">
      <summary>Muestra el cuadro de diálogo de explorador de carpetas.</summary>
      <returns>Control <see cref="T:System.Windows.Forms.DialogResult" /> del formulario.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.ShowDialog(System.Windows.Forms.IWin32Window)">
      <summary>Muestra el cuadro de diálogo de explorador de carpetas con el propietario especificado.</summary>
      <param name="owner">Ventana de nivel superior que poseerá el cuadro de diálogo modal (por ejemplo: System.Windows.Forms.Form).</param>
      <returns>Control <see cref="T:System.Windows.Forms.DialogResult" /> del formulario.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.StartLocation">
      <summary>Obtiene o establece la ubicación de inicio del nodo raíz.</summary>
      <returns>Control <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder" /> que indica la ubicación del explorador de carpetas que se va a explorar inicialmente.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.Style">
      <summary>Estilos que el explorador de carpetas utilizará al explorar las carpetas. Esto debe ser una combinación de marcas de la enumeración <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles" />.</summary>
      <returns>Miembro de enumeración del control <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles" /> que indica el comportamiento que debe utilizar el control <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder">
      <summary>Define los identificadores utilizados para indicar la carpeta raíz que se abrirá inicialmente en un explorador de carpetas.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Desktop">
      <summary>El escritorio del usuario.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Favorites">
      <summary>La lista de favoritos del usuario</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.MyComputer">
      <summary>El contenido del icono Mi PC.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.MyDocuments">
      <summary>La carpeta Mis documentos del usuario.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.MyPictures">
      <summary>La ubicación del usuario donde se almacenan las imágenes.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.NetAndDialUpConnections">
      <summary>Conexiones de red y acceso telefónico.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.NetworkNeighborhood">
      <summary>El entorno de red.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Printers">
      <summary>Una carpeta que contiene las impresoras instaladas.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Recent">
      <summary>Una carpeta que contiene los accesos directos a los archivos abiertos recientemente.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.SendTo">
      <summary>Una carpeta que contiene los accesos directos a las aplicaciones a las que se enviarán los documentos.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.StartMenu">
      <summary>El menú Inicio del usuario.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Templates">
      <summary>Las plantillas de archivo del usuario.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles">
      <summary>Define los identificadores utilizados para especificar el comportamiento de un objeto <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" />.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.BrowseForComputer">
      <summary>El explorador de carpetas sólo podrá devolver equipos. Si el usuario selecciona un elemento distinto a un equipo, el botón Aceptar se atenúa.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.BrowseForEverything">
      <summary>El explorador de carpetas podrá devolver cualquiera de los objetos que es capaz de devolver.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.BrowseForPrinter">
      <summary>El explorador de carpetas sólo podrá devolver impresoras. Si el usuario selecciona un elemento distinto a una impresora, el botón Aceptar se atenúa.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.RestrictToDomain">
      <summary>El explorador de carpetas no incluirá carpetas de red por debajo del nivel de dominio en el control de vista de árbol del cuadro de diálogo, ni permitirá navegar a ubicaciones de red fuera del dominio.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.RestrictToFilesystem">
      <summary>El explorador de carpetas sólo podrá devolver directorios del sistemas de archivos local. Si el usuario selecciona carpetas que no forman parte del sistema de archivos local, el botón Aceptar se atenúa.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.RestrictToSubfolders">
      <summary>El explorador de carpetas solo devuelve objetos del sistema de archivos local que estén en la carpeta raíz o una de sus subcarpetas. Si el usuario selecciona una subcarpeta de la carpeta raíz que no forma parte del sistema de archivos local, el botón Aceptar se atenúa.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.ShowTextBox">
      <summary>El explorador de carpetas contiene un control <see cref="T:System.Windows.Forms.TextBox" /> en el cuadro de diálogo del explorador que permite al usuario escribir el nombre de un elemento.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Obtiene el estilo de edición utilizado por el método <see cref="M:System.Windows.Forms.Design.FolderNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.</summary>
      <param name="context">Un objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto.</param>
      <returns>Valor de enumeración <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> que indica el estilo de edición proporcionado.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.InitializeDialog(System.Windows.Forms.Design.FolderNameEditor.FolderBrowser)">
      <summary>Inicializa el cuadro de diálogo del explorador de carpetas.</summary>
      <param name="folderBrowser">
        <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" /> para elegir una carpeta.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.ImageListImageEditor">
      <summary>Proporciona un editor que puede realizar operaciones de búsqueda de archivos predeterminados para archivos de mapa de bits (.bmp) .</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.ImageListImageEditor" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edita el valor del objeto especificado utilizando el estilo de edición proporcionado por el método <see cref="M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <param name="context">Un objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto.</param>
      <param name="provider">Una interfaz <see cref="T:System.IServiceProvider" /> mediante la cual se pueden obtener servicios de edición.</param>
      <param name="value">Un objeto <see cref="T:System.Object" /> que se está editando.</param>
      <returns>Un objeto <see cref="T:System.Object" /> que representa el nuevo valor. Si el valor del objeto no ha cambiado, el método <see cref="M:System.Windows.Forms.Design.ImageListImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> devuelve el objeto que se le ha pasado.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.GetFileDialogDescription">
      <summary>Obtiene la descripción del filtro predeterminado de la lista de archivos que proporciona este editor.</summary>
      <returns>La descripción del filtro predeterminado de la lista de archivos.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.GetImageExtenders">
      <summary>Obtiene una matriz de tipos de imagen compatibles.</summary>
      <returns>Una matriz de <see cref="T:System.Type" /> que representa los tipos de imagen compatibles.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Obtiene un valor que indica si este editor permite dibujar una representación del valor de un objeto.</summary>
      <param name="context">Un objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto.</param>
      <returns>Es <see langword="true" /> si se implementa <see cref="M:System.Drawing.Design.ImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)" />; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary>Dibuja un valor indicado por el <see cref="T:System.Drawing.Design.PaintValueEventArgs" /> especificado.</summary>
      <param name="e">
        <see cref="T:System.Drawing.Design.PaintValueEventArgs" /> que indica qué se va a dibujar y dónde.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.ShortcutKeysEditor">
      <summary>Proporciona un editor para elegir teclas de método abreviado.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ShortcutKeysEditor.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.ShortcutKeysEditor" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ShortcutKeysEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edita el objeto especificado utilizando el estilo de editor proporcionado por el método <see cref="M:System.Windows.Forms.Design.ShortcutKeysEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <param name="context">Un objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto.</param>
      <param name="provider">
        <see cref="T:System.IServiceProvider" /> que puede utilizar este editor para obtener servicios.</param>
      <param name="value">
        <see cref="T:System.Object" /> que se va a editar.</param>
      <returns>Nuevo valor de <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ShortcutKeysEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Obtiene el estilo de editor utilizado por el método <see cref="Overload:System.Windows.Forms.Design.ShortcutKeysEditor.EditValue" />.</summary>
      <param name="context">Un objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto.</param>
      <returns>Valor de <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> que indica el estilo de editor utilizado por el método <see cref="Overload:System.Windows.Forms.Design.ShortcutKeysEditor.EditValue" />.</returns>
    </member>
  </members>
</doc>