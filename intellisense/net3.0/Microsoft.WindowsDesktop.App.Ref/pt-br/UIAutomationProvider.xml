<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>UIAutomationProvider</name>
  </assembly>
  <members>
    <member name="T:System.Windows.Automation.Provider.AutomationInteropProvider">
      <summary>Fornece suporte para a comunicação entre os provedores de Automação da Interface do Usuário e os aplicativos cliente de Automação da Interface do Usuário.</summary>
    </member>
    <member name="F:System.Windows.Automation.Provider.AutomationInteropProvider.AppendRuntimeId">
      <summary>Contém um valor que, quando retornado como o primeiro elemento da matriz passada pelo provedor de Automação da Interface do Usuário para <see cref="M:System.Windows.Automation.Provider.IRawElementProviderFragment.GetRuntimeId" />, indica que a ID é parcial e deve ser acrescentada à ID fornecida pelo provedor de base.</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.AutomationInteropProvider.ClientsAreListening">
      <summary>Obtém um valor que especifica se qualquer aplicativo cliente da Automação da Interface do Usuário está inscrito em eventos Automação da interface do usuário.</summary>
      <returns>
        <see langword="true" />se um cliente for inscrito em eventos; caso <see langword="false" />contrário.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.AutomationInteropProvider.HostProviderFromHandle(System.IntPtr)">
      <summary>Retorna um provedor de Automação da Interface do Usuário que representa a janela especificada.</summary>
      <param name="hwnd">O identificador de janela.</param>
      <returns>O provedor de elemento bruto para a janela especificada.</returns>
    </member>
    <member name="F:System.Windows.Automation.Provider.AutomationInteropProvider.InvalidateLimit">
      <summary>Especifica o número máximo de eventos a serem enviados antes do envio em lote.</summary>
    </member>
    <member name="F:System.Windows.Automation.Provider.AutomationInteropProvider.ItemsInvalidateLimit">
      <summary>O número máximo de eventos a serem enviados antes do envio em lote para itens em contêineres.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.AutomationInteropProvider.RaiseAutomationEvent(System.Windows.Automation.AutomationEvent,System.Windows.Automation.Provider.IRawElementProviderSimple,System.Windows.Automation.AutomationEventArgs)">
      <summary>Gera um evento padrão ou um evento personalizado.</summary>
      <param name="eventId">O identificador de evento.</param>
      <param name="provider">O elemento associado ao evento.</param>
      <param name="e">Informações sobre o evento.</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.AutomationInteropProvider.RaiseAutomationPropertyChangedEvent(System.Windows.Automation.Provider.IRawElementProviderSimple,System.Windows.Automation.AutomationPropertyChangedEventArgs)">
      <summary>Gera um evento quando uma propriedade Automação da interface do usuário foi alterada.</summary>
      <param name="element">O elemento associado ao evento.</param>
      <param name="e">Informações sobre o evento.</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.AutomationInteropProvider.RaiseStructureChangedEvent(System.Windows.Automation.Provider.IRawElementProviderSimple,System.Windows.Automation.StructureChangedEventArgs)">
      <summary>Gera um evento quando a árvore Automação da interface do usuário foi alterada.</summary>
      <param name="provider">O elemento associado ao evento.</param>
      <param name="e">Informações sobre o evento.</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.AutomationInteropProvider.ReturnRawElementProvider(System.IntPtr,System.IntPtr,System.IntPtr,System.Windows.Automation.Provider.IRawElementProviderSimple)">
      <summary>Retorna o provedor de Automação da Interface do Usuário para um elemento em resposta a uma mensagem <see langword="WM_GETOBJECT" />.</summary>
      <param name="hwnd">O identificador da janela do elemento.</param>
      <param name="wParam">O membro <see langword="wParam" /> da mensagem <see langword="WM_GETOBJECT" />.</param>
      <param name="lParam">O membro <see langword="lParam" /> da mensagem <see langword="WM_GETOBJECT" />.</param>
      <param name="el">O provedor de Automação da Interface do Usuário do elemento.</param>
      <returns>Um ponteiro para dados que devem ser atribuídos a <see cref="P:System.Windows.Forms.Message.Result" /> antes de transmitir a mensagem para o procedimento da janela base.</returns>
    </member>
    <member name="F:System.Windows.Automation.Provider.AutomationInteropProvider.RootObjectId">
      <summary>Contém um valor usado membro <see langword="lParam" /> de uma mensagem <see langword="WM_GETOBJECT" />, indicando que o servidor deve retornar uma referência ao provedor de elemento bruto raiz.</summary>
    </member>
    <member name="T:System.Windows.Automation.Provider.IDockProvider">
      <summary>Expõe métodos e propriedades para compatibilidade com o acesso para cliente de Automação da Interface do Usuário para controles que expõem as propriedades de encaixe dentro de um contêiner de encaixe.</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IDockProvider.DockPosition">
      <summary>Obtém a <see cref="T:System.Windows.Automation.DockPosition" /> atual do controle dentro de um contêiner de encaixe.</summary>
      <returns>O <see cref="T:System.Windows.Automation.DockPosition" /> do controle, em relação aos limites do contêiner de encaixe e outros elementos dentro do contêiner.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IDockProvider.SetDockPosition(System.Windows.Automation.DockPosition)">
      <summary>Encaixa o controle dentro de um contêiner de encaixe.</summary>
      <param name="dockPosition">A posição de encaixe, relativa aos limites do contêiner do encaixe e a outros elementos dentro do contêiner.</param>
    </member>
    <member name="T:System.Windows.Automation.Provider.IExpandCollapseProvider">
      <summary>Expõe métodos e propriedades para compatibilidade com o acesso para cliente de Automação da Interface do Usuário para controles que se expandem visualmente para exibir o conteúdo e recolher para ocultar o conteúdo.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IExpandCollapseProvider.Collapse">
      <summary>Oculta todos os nós, controles ou conteúdo que são descendentes do controle.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IExpandCollapseProvider.Expand">
      <summary>Exibe todos os nós filho, controles ou conteúdo do controle.</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IExpandCollapseProvider.ExpandCollapseState">
      <summary>Obtém o estado (expandido ou recolhido) do controle.</summary>
      <returns>O estado, expandido ou recolhido, do controle.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IGridItemProvider">
      <summary>Expõe métodos e propriedades para compatibilidade com o acesso para cliente de Automação da Interface do Usuário para controles filhos individuais de contêineres que implementam <see cref="T:System.Windows.Automation.Provider.IGridProvider" />.</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IGridItemProvider.Column">
      <summary>Obtém o número ordinal da coluna que contém a célula ou o item.</summary>
      <returns>Um número ordinal com base em zero que identifica a coluna que contém a célula ou o item.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IGridItemProvider.ColumnSpan">
      <summary>Obtém o número de colunas abrangidas por uma célula ou um item.</summary>
      <returns>O número de colunas incluídas.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IGridItemProvider.ContainingGrid">
      <summary>Obtém um provedor de Automação da Interface do Usuário que implementa <see cref="T:System.Windows.Automation.Provider.IGridProvider" /> e representa o contêiner da célula ou do item.</summary>
      <returns>Um provedor de automação de interface do <see cref="T:System.Windows.Automation.GridPattern" /> usuário que implementa o e representa o contêiner de célula ou item.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IGridItemProvider.Row">
      <summary>Obtém o número ordinal da linha que contém a célula ou o item.</summary>
      <returns>Um número ordinal com base em zero que identifica a linha que contém a célula ou o item.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IGridItemProvider.RowSpan">
      <summary>Obtém o número de linhas abrangidas por uma célula ou um item.</summary>
      <returns>O número de linhas incluídas.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IGridProvider">
      <summary>Expõe métodos e propriedades para compatibilidade com o acesso para cliente da Automação da Interface do Usuário para controles que agem como contêineres para uma coleção de elementos filhos. Os filhos deste elemento devem implementar <see cref="T:System.Windows.Automation.Provider.IGridItemProvider" /> e ser organizados em um sistema de coordenadas lógico bidimensional que pode ser percorrido (isto é, um cliente de automação de interface do usuário pode mudar para os controles adjacentes) usando o teclado.</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IGridProvider.ColumnCount">
      <summary>Obtém o número total de colunas em uma grade.</summary>
      <returns>O número total de colunas em uma grade.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IGridProvider.GetItem(System.Int32,System.Int32)">
      <summary>Recupera o provedor de Automação da Interface do Usuário para a célula especificada.</summary>
      <param name="row">O número ordinal da linha de interesse.</param>
      <param name="column">O número ordinal da coluna de interesse.</param>
      <returns>O provedor de automação de interface do usuário para a célula especificada.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IGridProvider.RowCount">
      <summary>Obtém o número total de linhas em uma grade.</summary>
      <returns>O número total de linhas em uma grade.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IInvokeProvider">
      <summary>Expõe métodos e propriedades para oferecer suporte ao acesso de cliente à Automação da Interface do Usuário para controles que iniciam ou executam uma ação única e não ambígua e não mantêm o estado quando ativados.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IInvokeProvider.Invoke">
      <summary>Envia uma solicitação para ativar um controle e iniciar sua ação única não ambígua.</summary>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">Se o controle não está habilitado.</exception>
    </member>
    <member name="T:System.Windows.Automation.Provider.IItemContainerProvider">
      <summary>Expõe um método para habilitar aplicativos para localizar um elemento em um contêiner, tal como uma lista virtualizada.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IItemContainerProvider.FindItemByProperty(System.Windows.Automation.Provider.IRawElementProviderSimple,System.Int32,System.Object)">
      <summary>Recupera um elemento pelo valor da propriedade especificado.</summary>
      <param name="startAfter">O item no contêiner após o qual iniciar a pesquisa.</param>
      <param name="propertyId">A propriedade que contém o valor a ser recuperado.</param>
      <param name="value">O valor a ser recuperado.</param>
      <returns>O primeiro item que corresponde ao critério de pesquisa; caso contrário, <see langword="null" /> se nenhum item corresponder a ele.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IMultipleViewProvider">
      <summary>Expõe métodos e propriedades para compatibilidade com acesso para cliente de Automação da Interface do Usuário para controles que fornecem e pode alternar entre várias representações do mesmo conjunto de informações ou controles filho.</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IMultipleViewProvider.CurrentView">
      <summary>Obtém o modo de exibição atual específico do controle.</summary>
      <returns>O valor da exibição atual do elemento de automação da interface do usuário.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IMultipleViewProvider.GetSupportedViews">
      <summary>Recupera uma coleção de identificadores de exibição específicos do controle.</summary>
      <returns>Uma coleção de valores que identifica as exibições disponíveis para um elemento de Automação da interface do usuário.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IMultipleViewProvider.GetViewName(System.Int32)">
      <summary>Recupera o nome de um modo de exibição específico do controle.</summary>
      <param name="viewId">O identificador de modo de exibição.</param>
      <returns>Um nome localizado para o modo de exibição.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="viewId" /> não é um membro da coleção de modos de exibição com suporte.</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.IMultipleViewProvider.SetCurrentView(System.Int32)">
      <summary>Define o modo de exibição atual específico do controle.</summary>
      <param name="viewId">Um identificador de modo de exibição.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="viewId" /> não é um membro da coleção de modos de exibição com suporte.</exception>
    </member>
    <member name="T:System.Windows.Automation.Provider.IRangeValueProvider">
      <summary>Expõe métodos e propriedades para compatibilidade com o acesso para cliente da Automação da Interface do Usuário para controles que podem ser definidos para um valor dentro de um intervalo.</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRangeValueProvider.IsReadOnly">
      <summary>Obtém um valor que especifica se o valor de um controle é somente leitura.</summary>
      <returns>
        <see langword="true" />Se o valor for somente leitura; <see langword="false" /> se ele puder ser modificado.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange">
      <summary>Obtém o valor que é adicionado ou subtraído da propriedade <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /> quando uma grande alteração é feita, tal como com a tecla PAGE DOWN.</summary>
      <returns>O valor de alteração grande com suporte no controle ou nulo (<see langword="Nothing" /> em Visual Basic) se o controle não oferecer suporte <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange" />a.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRangeValueProvider.Maximum">
      <summary>Obtém o valor de intervalo máximo compatível com o controle.</summary>
      <returns>O valor máximo com suporte no controle ou NULL (<see langword="Nothing" /> em Visual Basic) se o controle não oferecer suporte <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Maximum" />a.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRangeValueProvider.Minimum">
      <summary>Obtém o valor de intervalo mínimo compatível com o controle.</summary>
      <returns>O valor mínimo com suporte no controle ou NULL (<see langword="Nothing" /> em Visual Basic) se o controle não oferecer suporte <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Minimum" />a.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IRangeValueProvider.SetValue(System.Double)">
      <summary>Define o valor do controle.</summary>
      <param name="value">O valor a ser definido.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Quando <paramref name="value" /> é menor que o valor mínimo ou maior que o valor máximo do controle.</exception>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange">
      <summary>Obtém o valor que é adicionado ou subtraído da propriedade <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /> quando uma pequena alteração é feita, tal como acontece com uma tecla de direção.</summary>
      <returns>O valor de pequena alteração ou nulo (<see langword="Nothing" /> em Visual Basic) se o controle não oferecer suporte <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange" />a.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRangeValueProvider.Value">
      <summary>Obtém o valor do controle.</summary>
      <returns>O valor do controle ou NULL (<see langword="Nothing" /> em Visual Basic) se o controle não oferecer suporte <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" />a.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IRawElementProviderAdviseEvents">
      <summary>Expõe métodos que são chamados para notificar o elemento raiz de um fragmento quando um aplicativo cliente da Automação da Interface do Usuário começa ou termina a escuta de eventos.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IRawElementProviderAdviseEvents.AdviseEventAdded(System.Int32,System.Int32[])">
      <summary>Notifica o provedor de Automação da Interface do Usuário quando um cliente de Automação da Interface do Usuário começa a escutar um evento específico, incluindo um evento com uma propriedade que sofreu alteração.</summary>
      <param name="eventId">O identificador do evento sendo adicionado.</param>
      <param name="properties">Os identificadores das propriedades que estão sendo adicionados ou <see langword="null" />, se o ouvinte de evento que está sendo adicionado não está escutando eventos de propriedade.</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.IRawElementProviderAdviseEvents.AdviseEventRemoved(System.Int32,System.Int32[])">
      <summary>Notifica o provedor de Automação da Interface do Usuário quando um cliente de Automação da Interface do Usuário interrompe a escuta de um evento específico, incluindo um evento com uma propriedade que sofreu alteração.</summary>
      <param name="eventId">O identificador do evento sendo removido</param>
      <param name="properties">Os identificadores das propriedades que estão sendo removidos ou <see langword="null" />, se o ouvinte de evento que está sendo removido não está escutando eventos de propriedade.</param>
    </member>
    <member name="T:System.Windows.Automation.Provider.IRawElementProviderFragment">
      <summary>Expõe métodos e propriedades nos elementos da IU (interface do usuário) que fazem parte de uma estrutura de mais de um nível de profundidade, como uma caixa de listagem ou um item de lista. Implementado por provedores de Automação da Interface do Usuário.</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRawElementProviderFragment.BoundingRectangle">
      <summary>Obtém o retângulo delimitador deste elemento.</summary>
      <returns>O retângulo delimitador, em coordenadas da tela.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRawElementProviderFragment.FragmentRoot">
      <summary>Recupera o nó raiz do fragmento.</summary>
      <returns>O nó raiz.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IRawElementProviderFragment.GetEmbeddedFragmentRoots">
      <summary>Recupera uma matriz de raízes de fragmento que são inseridas na árvore do elemento Automação da interface do usuário com raiz no elemento atual.</summary>
      <returns>Uma matriz de fragmentos de raiz ou <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IRawElementProviderFragment.GetRuntimeId">
      <summary>Recupera o identificador de tempo de execução de um elemento.</summary>
      <returns>O identificador de tempo de execução exclusivo do elemento.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IRawElementProviderFragment.Navigate(System.Windows.Automation.Provider.NavigateDirection)">
      <summary>Recupera o elemento Automação da interface do usuário em uma direção especificada dentro da árvore.</summary>
      <param name="direction">A direção na qual navegar.</param>
      <returns>O elemento na direção especificada ou então <see langword="null" />, se não houver nenhum elemento nessa direção</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IRawElementProviderFragment.SetFocus">
      <summary>Define o foco para esse elemento.</summary>
    </member>
    <member name="T:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot">
      <summary>Expõe os métodos e as propriedades no elemento raiz em um fragmento.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot.ElementProviderFromPoint(System.Double,System.Double)">
      <summary>Recupera o elemento desse fragmento que está no ponto especificado.</summary>
      <param name="x">A coordenada X.</param>
      <param name="y">A coordenada Y.</param>
      <returns>O provedor para o elemento filho no ponto especificado, se houver ou o provedor de raiz, se o ponto está sobre este elemento, mas não está em nenhum elemento filho. Caso contrário, retornará <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot.GetFocus">
      <summary>Recupera o elemento desse fragmento que tem o foco de entrada.</summary>
      <returns>O provedor para o elemento desse fragmento que tem o foco de entrada, se houver; caso contrário, uma referência nula (<see langword="Nothing" /> no Visual Basic).</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IRawElementProviderHwndOverride">
      <summary>Expõe um método que permite o reposicionamento de elementos baseados em janela dentro da árvore de Automação da Interface do Usuário do fragmento.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IRawElementProviderHwndOverride.GetOverrideProviderForHwnd(System.IntPtr)">
      <summary>Recupera um provedor de Automação da Interface do Usuário para o elemento especificado.</summary>
      <param name="hwnd">O identificador de janela do elemento.</param>
      <returns>O provedor para o elemento especificado ou uma referência nula (<see langword="Nothing" /> no Visual Basic) se o provedor padrão do elemento não está sendo substituído.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IRawElementProviderSimple">
      <summary>Fornece métodos e propriedades que expõem informações básicas sobre um elemento de interface do usuário.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IRawElementProviderSimple.GetPatternProvider(System.Int32)">
      <summary>Recupera um objeto compatível com um padrão de controle em um elemento Automação da interface do usuário.</summary>
      <param name="patternId">Identificador do padrão.</param>
      <returns>O objeto que implementa a interface padrão ou <see langword="null" />, se o padrão não é compatível.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IRawElementProviderSimple.GetPropertyValue(System.Int32)">
      <summary>Recupera o valor de uma propriedade compatível com o provedor da Automação da Interface do Usuário.</summary>
      <param name="propertyId">O identificador da propriedade.</param>
      <returns>O valor da propriedade ou então um <see langword="null" />, se a propriedade não é compatível com esse provedor ou ainda <see cref="F:System.Windows.Automation.AutomationElementIdentifiers.NotSupported" />, se ela não for compatível em absoluto.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRawElementProviderSimple.HostRawElementProvider">
      <summary>Obtém um provedor de base para esse elemento.</summary>
      <returns>O provedor base ou <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRawElementProviderSimple.ProviderOptions">
      <summary>Obtém um valor que especifica as características do provedor da Automação da Interface do Usuário; por exemplo, se ele é um provedor do lado do cliente ou do lado do servidor.</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Provider.ProviderOptions.ClientSideProvider" /> Ou<see cref="F:System.Windows.Automation.Provider.ProviderOptions.ServerSideProvider" />o.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IScrollItemProvider">
      <summary>Expõe métodos e propriedades para compatibilidade com o acesso para cliente de Automação da Interface do Usuário para controles filhos individuais de contêineres que implementam <see cref="T:System.Windows.Automation.Provider.IScrollProvider" />.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IScrollItemProvider.ScrollIntoView">
      <summary>Rola a área de conteúdo de um objeto contêiner para exibir o controle dentro da região visível (visor) do contêiner.</summary>
      <exception cref="T:System.InvalidOperationException">O item não pode ser rolado para dentro da exibição.</exception>
    </member>
    <member name="T:System.Windows.Automation.Provider.IScrollProvider">
      <summary>Expõe métodos e propriedades para compatibilidade com o acesso para cliente da Automação da Interface do Usuário para um controle que atua como um contêiner rolável para uma coleção de objetos filhos. O filho desse controle deve implementar <see cref="T:System.Windows.Automation.Provider.IScrollItemProvider" />.</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IScrollProvider.HorizontallyScrollable">
      <summary>Obtém um valor que indica se o controle pode rolar horizontalmente.</summary>
      <returns>
        <see langword="true" />Se o controle puder rolar horizontalmente; caso <see langword="false" />contrário.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IScrollProvider.HorizontalScrollPercent">
      <summary>Obtém a posição de rolagem horizontal atual.</summary>
      <returns>A posição de rolagem horizontal como uma porcentagem da área de conteúdo total dentro do controle.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IScrollProvider.HorizontalViewSize">
      <summary>Obtém o tamanho de exibição horizontal atual.</summary>
      <returns>O tamanho horizontal da região visível como uma porcentagem da área de conteúdo total dentro do controle.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IScrollProvider.Scroll(System.Windows.Automation.ScrollAmount,System.Windows.Automation.ScrollAmount)">
      <summary>Rola a região visível da área de conteúdo horizontalmente e verticalmente.</summary>
      <param name="horizontalAmount">O incremento horizontal específico para o controle. O<see cref="F:System.Windows.Automation.ScrollPatternIdentifiers.NoScroll" /> deverá ser passado se o controle não puder ser rolado nessa direção.</param>
      <param name="verticalAmount">O incremento vertical específico para o controle. O <see cref="F:System.Windows.Automation.ScrollPatternIdentifiers.NoScroll" /> deverá ser passado se o controle não puder ser rolado nessa direção.</param>
      <exception cref="T:System.ArgumentException">Se um controle for compatível com valores <see cref="F:System.Windows.Automation.ScrollAmount.SmallIncrement" /> exclusivamente para rolagens horizontal ou vertical, mas um valor <see cref="F:System.Windows.Automation.ScrollAmount.LargeIncrement" /> for passado.</exception>
      <exception cref="T:System.InvalidOperationException">É feita uma tentativa de rolar em uma direção sem suporte.</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.IScrollProvider.SetScrollPercent(System.Double,System.Double)">
      <summary>Define a posição de rolagem horizontal e vertical como um percentual da área total de conteúdo dentro do controle.</summary>
      <param name="horizontalPercent">A posição horizontal como um percentual do intervalo total da área de conteúdo. O <see cref="F:System.Windows.Automation.ScrollPatternIdentifiers.NoScroll" /> deverá ser passado se o controle não puder ser rolado nessa direção.</param>
      <param name="verticalPercent">A posição vertical como um percentual do intervalo total da área de conteúdo. O <see cref="F:System.Windows.Automation.ScrollPatternIdentifiers.NoScroll" /> deverá ser passado se o controle não puder ser rolado nessa direção.</param>
      <exception cref="T:System.ArgumentException">Um valor que não pode ser convertido em um duplo é passado.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Um valor maior que 100 ou menor que 0 é passado (exceto -1, que é equivalente a <see cref="F:System.Windows.Automation.ScrollPatternIdentifiers.NoScroll" />). Os valores <see cref="P:System.Windows.Automation.Provider.IScrollProvider.HorizontalScrollPercent" /> e <see cref="P:System.Windows.Automation.Provider.IScrollProvider.VerticalScrollPercent" /> são normalizados em 100% ou 0%.</exception>
      <exception cref="T:System.InvalidOperationException">É feita uma tentativa de rolar em uma direção sem suporte.</exception>
    </member>
    <member name="P:System.Windows.Automation.Provider.IScrollProvider.VerticallyScrollable">
      <summary>Obtém um valor que indica se o controle pode rolar verticalmente.</summary>
      <returns>
        <see langword="true" />Se o controle puder rolar verticalmente; caso <see langword="false" />contrário.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IScrollProvider.VerticalScrollPercent">
      <summary>Obtém a posição de rolagem vertical atual.</summary>
      <returns>A posição da rolagem vertical como uma porcentagem da área de conteúdo total dentro do controle.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IScrollProvider.VerticalViewSize">
      <summary>Obtém o tamanho de exibição vertical.</summary>
      <returns>O tamanho vertical da região visível como uma porcentagem da área de conteúdo total dentro do controle.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.ISelectionItemProvider">
      <summary>Expõe métodos e propriedades para compatibilidade com o acesso para cliente de Automação da Interface do Usuário para controles filhos individuais e selecionáveis de contêineres que implementam <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" />.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.ISelectionItemProvider.AddToSelection">
      <summary>Adiciona o elemento atual à coleção de itens selecionados.</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.ISelectionItemProvider.IsSelected">
      <summary>Obtém um valor que indica se um item está selecionado.</summary>
      <returns>
        <see langword="true" />Se o elemento for selecionado; caso <see langword="false" />contrário.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ISelectionItemProvider.RemoveFromSelection">
      <summary>Remove o elemento atual da coleção de itens selecionados.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.ISelectionItemProvider.Select">
      <summary>Desmarca todos os itens selecionados e, em seguida, seleciona o elemento atual.</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.ISelectionItemProvider.SelectionContainer">
      <summary>Obtém o provedor de Automação da Interface do Usuário que implementa <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" /> e atua como o contêiner do objeto de chamada.</summary>
      <returns>O provedor que dá <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" />suporte ao.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.ISelectionProvider">
      <summary>Expõe métodos e propriedades para compatibilidade com o acesso para cliente da Automação da Interface do Usuário para controles que agem como contêineres para uma coleção de itens filhos selecionáveis e individuais. O filho desse controle deve implementar <see cref="T:System.Windows.Automation.Provider.ISelectionItemProvider" />.</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.ISelectionProvider.CanSelectMultiple">
      <summary>Obtém um valor que especifica se o provedor de Automação da Interface do Usuário permite que mais de um elemento filho seja selecionado simultaneamente.</summary>
      <returns>
        <see langword="true" />se várias seleções forem permitidas; caso <see langword="false" />contrário.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ISelectionProvider.GetSelection">
      <summary>Recupera um provedor de Automação da Interface do Usuário para cada elemento filho selecionado.</summary>
      <returns>Uma coleção de provedores de Automação da Interface do Usuário.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired">
      <summary>Obtém um valor que especifica se o provedor de Automação da Interface do Usuário exige que, pelo menos, um elemento filho seja selecionado.</summary>
      <returns>
        <see langword="true" />se a seleção for necessária; caso <see langword="false" />contrário.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.ISynchronizedInputProvider">
      <summary>Expõe métodos para facilitar o acesso para cliente de Automação da Interface do Usuário para controles compatíveis com entrada sincronizada.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.ISynchronizedInputProvider.Cancel">
      <summary>Interrompe a escuta de entrada.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.ISynchronizedInputProvider.StartListening(System.Windows.Automation.SynchronizedInputType)">
      <summary>Designa que o provedor comece a escutar a entrada do tipo especificado.</summary>
      <param name="inputType">O tipo de entrada pela qual escutar.</param>
    </member>
    <member name="T:System.Windows.Automation.Provider.ITableItemProvider">
      <summary>Expõe métodos e propriedades para compatibilidade com o acesso para cliente de Automação da Interface do Usuário para controles filhos de contêineres que implementam <see cref="T:System.Windows.Automation.Provider.ITableProvider" />.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITableItemProvider.GetColumnHeaderItems">
      <summary>Recupera uma coleção de provedores de Automação da Interface do Usuário que representa todos os cabeçalhos de coluna associados a um item ou uma célula da tabela.</summary>
      <returns>Uma coleção de provedores de Automação da Interface do Usuário.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITableItemProvider.GetRowHeaderItems">
      <summary>Recupera uma coleção de provedores de Automação da Interface do Usuário que representa todos os cabeçalhos de linha associados a um item ou uma célula da tabela.</summary>
      <returns>Uma coleção de provedores de Automação da Interface do Usuário.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.ITableProvider">
      <summary>Expõe métodos e propriedades para compatibilidade com o acesso para cliente da Automação da Interface do Usuário para controles que agem como contêineres para uma coleção de elementos filhos. Os filhos deste elemento devem implementar <see cref="T:System.Windows.Automation.Provider.ITableItemProvider" /> e ser organizados em um sistema de coordenadas lógico bidimensional que pode ser percorrido (isto é, um cliente de automação de interface do usuário pode mudar para os controles adjacentes) usando o teclado.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITableProvider.GetColumnHeaders">
      <summary>Obtém uma coleção de provedores de Automação da Interface do Usuário que representa todos os cabeçalhos de coluna em uma tabela.</summary>
      <returns>Uma coleção de provedores de Automação da Interface do Usuário.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITableProvider.GetRowHeaders">
      <summary>Recupera uma coleção de provedores de Automação da Interface do Usuário que representa todos os cabeçalhos de linha da tabela.</summary>
      <returns>Uma coleção de provedores de Automação da Interface do Usuário.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.ITableProvider.RowOrColumnMajor">
      <summary>Recupera a direção primária da passagem para a tabela.</summary>
      <returns>A direção principal de passagem.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.ITextProvider">
      <summary>Expõe métodos e propriedades para dar suporte ao acesso do cliente de Automação da Interface do Usuário para controles que contêm texto.</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.ITextProvider.DocumentRange">
      <summary>Obtém um intervalo de texto que inclui o texto principal de um documento.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextProvider.GetSelection">
      <summary>Recupera uma coleção de intervalos de texto não contíguos associados às seleções de texto atuais.</summary>
      <returns>Uma coleção de intervalos de texto não contíguos.</returns>
      <exception cref="T:System.InvalidOperationException">Se o provedor de Automação da Interface do Usuário não é compatível com seleção de texto.</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextProvider.GetVisibleRanges">
      <summary>Recupera uma matriz de intervalos de texto não contíguos de um contêiner de texto em que cada intervalo de texto começa com a primeira linha parcialmente visível até o final da última linha parcialmente visível.</summary>
      <returns>A coleção de intervalos de texto visíveis dentro do contêiner ou de uma matriz vazia. Uma referência nula (<see langword="Nothing" /> no Visual Basic) nunca é retornada.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextProvider.RangeFromChild(System.Windows.Automation.Provider.IRawElementProviderSimple)">
      <summary>Recupera um intervalo de texto que inclui um elemento filho, como uma imagem, hiperlink ou outro objeto inserido.</summary>
      <param name="childElement">O objeto contido.</param>
      <returns>Um intervalo que abrange o elemento filho.</returns>
      <exception cref="T:System.ArgumentException">Se o elemento filho é uma referência nula (<see langword="Nothing" /> no Visual Basic).</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextProvider.RangeFromPoint(System.Windows.Point)">
      <summary>Retorna o intervalo de texto (vazio) de degeneração mais próximo das coordenadas da tela especificadas.</summary>
      <param name="screenLocation">O local em coordenadas da tela.</param>
      <returns>Um intervalo de degeneração mais próximo do local especificado. Uma referência nula (<see langword="Nothing" /> no Visual Basic) nunca é retornada.</returns>
      <exception cref="T:System.ArgumentException">Se um ponto especificado está fora do elemento Automação da interface do usuário associado ao padrão de texto.</exception>
    </member>
    <member name="P:System.Windows.Automation.Provider.ITextProvider.SupportedTextSelection">
      <summary>Obtém um valor que especifica se um provedor de texto é compatível com a seleção e, em caso afirmativo, o tipo da seleção compatível.</summary>
      <returns>Um de <see langword="None" />, <see langword="Single" />ou <see langword="Multiple" /> de .<see cref="T:System.Windows.Automation.SupportedTextSelection" /></returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.ITextRangeProvider">
      <summary>Expõe métodos e propriedades para compatibilidade com o acesso para cliente de Automação da Interface do Usuário para um trecho de texto contínuo em um contêiner de texto que implementa <see cref="T:System.Windows.Automation.Provider.ITextProvider" />.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.AddToSelection">
      <summary>Adiciona à coleção do texto realçado em um contêiner de texto que dá suporte a várias seleções não contíguas.</summary>
      <exception cref="T:System.InvalidOperationException">Se o provedor de texto não é compatível com várias seleções não contíguas (por exemplo, <see cref="P:System.Windows.Automation.Provider.ITextProvider.SupportedTextSelection" /> deve ter um valor de <see langword="Multiple" />).</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.Clone">
      <summary>Retorna um novo <see cref="T:System.Windows.Automation.Provider.ITextRangeProvider" /> idêntico ao <see cref="T:System.Windows.Automation.Provider.ITextRangeProvider" /> original e herdando todas as propriedades do original.</summary>
      <returns>O novo intervalo de texto. Uma referência nula (<see langword="Nothing" /> no Visual Basic) nunca é retornada.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.Compare(System.Windows.Automation.Provider.ITextRangeProvider)">
      <summary>Retorna um valor que indica se o alcance (o ponto de extremidade <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> até o ponto de extremidade <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" />) de um intervalo de texto é igual a outro intervalo de texto.</summary>
      <param name="range">Um intervalo de texto a ser comparado</param>
      <returns>
        <see langword="true" /> se o alcance dos dois intervalos de texto for idêntico, caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Se o intervalo sendo comparado não vem do mesmo provedor de texto.</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.CompareEndpoints(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)">
      <summary>Retorna um valor que especifica se dois intervalos de texto têm pontos de extremidade idênticos.</summary>
      <param name="endpoint">O ponto de extremidade <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> ou <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> do chamador.</param>
      <param name="targetRange">O intervalo de destino para comparação.</param>
      <param name="targetEndpoint">O ponto de extremidade <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> ou <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> do destino.</param>
      <returns>Retorna um valor negativo se o ponto de extremidade do chamador ocorre antes no texto do que o ponto de extremidade de destino.  
 Retorna zero se o ponto de extremidade do chamador está no mesmo local que o ponto de extremidade de destino.  
 Retorna um valor positivo se o ponto de extremidade do chamador ocorre depois no texto do que o ponto de extremidade de destino.</returns>
      <exception cref="T:System.ArgumentException">Se <paramref name="targetRange" /> é de um provedor de texto diferente.</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)">
      <summary>Expande o intervalo de texto para a unidade de texto especificada.</summary>
      <param name="unit">A unidade textual.</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.FindAttribute(System.Int32,System.Object,System.Boolean)">
      <summary>Retorna um subconjunto do intervalo de texto que tem o valor de atributo especificado.</summary>
      <param name="attribute">O atributo a ser pesquisado.</param>
      <param name="value">O valor de atributo a ser pesquisado. Esse valor deve corresponder ao tipo especificado para o atributo.</param>
      <param name="backward">
        <see langword="true" /> se o último intervalo de texto que ocorre por último deve ser retornada em vez da primeira, caso contrário, <see langword="false" />.</param>
      <returns>Um intervalo de texto com um atributo e um valor de atributo correspondentes, caso contrário, nulo (<see langword="Nothing" /> no Visual Basic).</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.FindText(System.String,System.Boolean,System.Boolean)">
      <summary>Retorna um subconjunto do intervalo de texto que contém o texto especificado.</summary>
      <param name="text">A cadeia de caracteres de texto a ser pesquisada.</param>
      <param name="backward">
        <see langword="true" /> se o último intervalo de texto que ocorre por último deve ser retornada em vez da primeira, caso contrário, <see langword="false" />.</param>
      <param name="ignoreCase">
        <see langword="true" /> se o uso de maiúsculas e minúsculas deve ser ignorado, caso contrário, <see langword="false" />.</param>
      <returns>Um intervalo de texto que corresponde ao texto especificado, caso contrário, nulo (<see langword="Nothing" /> no Visual Basic).</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.GetAttributeValue(System.Int32)">
      <summary>Recupera o valor do atributo especificado no intervalo de texto.</summary>
      <param name="attribute">O atributo de texto.</param>
      <returns>Recupera um objeto que representa o valor do atributo especificado. Por exemplo, <c>GetAttributeValue(TextPattern.FontNameAttribute)</c> retornaria uma cadeia de caracteres que representa o nome da fonte, se for único, do intervalo de texto, ao passo que <c>GetAttributeValue(TextPattern.IsItalicAttribute)</c> retornaria um valor de tipo <see cref="T:System.Boolean" />.  
Retorna <see cref="F:System.Windows.Automation.TextPattern.MixedAttributeValue" /> se o valor do atributo especificado varia ao longo do intervalo de texto.  
Retorna <see cref="F:System.Windows.Automation.AutomationElement.NotSupported" /> se o atributo especificado não for compatível com o provedor ou com o controle.</returns>
      <exception cref="T:System.ArgumentException">Se o atributo especificado não for válido.</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.GetBoundingRectangles">
      <summary>Recupera uma coleção de retângulos delimitadores para cada linha de texto parcial ou totalmente visível em um intervalo de texto.</summary>
      <returns>Uma matriz de retângulos delimitadores para cada linha de texto total ou parcial em um intervalo de texto.  
 Uma matriz vazia para um intervalo de degeneração.  
 Uma matriz vazia para um intervalo de texto que tem as coordenadas da tela colocando-o completamente fora da tela, rolado para fora da exibição ou obscurecido por uma janela sobreposta.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.GetChildren">
      <summary>Recupera uma coleção de todos os objetos inseridos que estão dentro do intervalo de texto.</summary>
      <returns>Uma coleção de objetos filhos que estão dentro do intervalo. Os filhos que se sobrepuserem ao intervalo de texto mas não estiverem totalmente dentro dele também serão incluídos na coleção.  
 Retorna uma coleção vazia se não há nenhum objeto filho.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.GetEnclosingElement">
      <summary>Retorna o controle mais interno que inclui o intervalo de texto.</summary>
      <returns>O controle delimitador, normalmente o provedor de texto que fornece o intervalo de texto. No entanto, se o provedor de texto é compatível com elementos filhos como tabelas ou hiperlinks, o elemento de fechamento pode ser um descendente do provedor de texto.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.GetText(System.Int32)">
      <summary>Recupera o texto sem formatação do intervalo.</summary>
      <param name="maxLength">O tamanho máximo da cadeia de caracteres a ser retornada. Use <c>-1</c> se não for necessário nenhum limite.</param>
      <returns>O texto sem formatação do intervalo de texto, possivelmente truncado no <paramref name="maxLength" /> especificado.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Se <paramref name="maxLength" /> for menor que -1.</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)">
      <summary>Move o intervalo de texto conforme o número de unidades de texto especificado.</summary>
      <param name="unit">O limite da unidade de texto.</param>
      <param name="count">O número de unidades de texto a serem movidas.  
 Um valor positivo move o intervalo de texto para frente, um valor negativo move o intervalo de texto para trás e 0 não tem nenhum efeito.</param>
      <returns>O número de unidades realmente movidas. Isso pode ser menos que o número solicitado se um dos pontos de extremidade do novo intervalo de texto for maior ou menor do que os pontos de extremidade de <see cref="P:System.Windows.Automation.Provider.ITextProvider.DocumentRange" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByRange(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)">
      <summary>Move um ponto de extremidade de um intervalo de texto para o ponto de extremidade especificado de um segundo intervalo de texto.</summary>
      <param name="endpoint">O ponto de extremidade a ser movido.</param>
      <param name="targetRange">Outro intervalo do mesmo provedor de texto.</param>
      <param name="targetEndpoint">Um ponto de extremidade no outro intervalo.</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)">
      <summary>Move um ponto de extremidade do intervalo de texto conforme o número especificado de unidades de texto dentro do intervalo do documento.</summary>
      <param name="endpoint">O ponto de extremidade a ser movido.</param>
      <param name="unit">A unidade textual para mover.</param>
      <param name="count">O número de unidades a serem movidas. Um valor positivo move o ponto de extremidade para a frente. Um valor negativo move-o para trás. Um valor de 0 não tem nenhum efeito.</param>
      <returns>O número de unidades realmente movidos, que pode ser menor que o número solicitado se mover que o ponto de extremidade é executado no início ou no final do documento.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.RemoveFromSelection">
      <summary>Remove uma seção realçada de texto, correspondente aos pontos de extremidade <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> e <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> do chamador, da coleção de texto realçado em um contêiner de texto compatível com várias seleções não contíguas.</summary>
      <exception cref="T:System.InvalidOperationException">Se o provedor de texto não der suporte a várias seleções não contíguas (por exemplo, <see cref="P:System.Windows.Automation.TextPattern.SupportedTextSelection" /> deve ter um valor de <see langword="Multiple" />).</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView(System.Boolean)">
      <summary>Faz com que o controle de texto role verticalmente até o intervalo do texto ser visível no visor.</summary>
      <param name="alignToTop">
        <see langword="true" /> se o controle de texto deve ser rolado para que o intervalo de texto seja alinhado à parte superior do visor, <see langword="false" /> se ele deve ser alinhado à parte inferior do visor.</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.Select">
      <summary>Realça o texto no controle de texto correspondente aos pontos de extremidade <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> e <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> do intervalo de texto.</summary>
      <exception cref="T:System.InvalidOperationException">Ocorre quando a seleção de texto não é compatível com o controle de texto.</exception>
    </member>
    <member name="T:System.Windows.Automation.Provider.IToggleProvider">
      <summary>Expõe métodos e propriedades para compatibilidade com o acesso para cliente da Automação da Interface do Usuário para controles que podem realizar um ciclo entre um conjunto de estados e manter um estado definido uma vez.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IToggleProvider.Toggle">
      <summary>Percorre os estados de alternância de um controle.</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IToggleProvider.ToggleState">
      <summary>Recupera o estado de alternância do controle.</summary>
      <returns>O <see cref="T:System.Windows.Automation.ToggleState" /> do controle.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.ITransformProvider">
      <summary>Expõe métodos e propriedades para compatibilidade com o acesso para cliente da Automação da Interface do Usuário para controles que podem movidos, redimensionados ou girados dentro de um espaço bidimensional.</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.ITransformProvider.CanMove">
      <summary>Obtém um valor que especifica se o controle pode ser removido.</summary>
      <returns>
        <see langword="true" />Se o elemento puder ser movido; caso <see langword="false" />contrário.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.ITransformProvider.CanResize">
      <summary>Obtém um valor que especifica se o elemento Automação da interface do usuário pode ser redimensionado.</summary>
      <returns>
        <see langword="true" />Se o elemento puder ser redimensionado; caso <see langword="false" />contrário.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.ITransformProvider.CanRotate">
      <summary>Obtém um valor que especifica se o controle pode ser girado.</summary>
      <returns>
        <see langword="true" />Se o elemento puder ser girado; caso <see langword="false" />contrário.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITransformProvider.Move(System.Double,System.Double)">
      <summary>Move o controle.</summary>
      <param name="x">Coordenadas da tela absolutas do lado esquerdo do controle.</param>
      <param name="y">Coordenadas da tela absolutas da parte superior do controle.</param>
      <exception cref="T:System.InvalidOperationException">Se a propriedade <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanMove" /> é false.</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITransformProvider.Resize(System.Double,System.Double)">
      <summary>Redimensiona o controle.</summary>
      <param name="width">A nova largura da janela, em pixels.</param>
      <param name="height">A nova altura da janela, em pixels.</param>
      <exception cref="T:System.InvalidOperationException">Se a propriedade <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanResize" /> é false.</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITransformProvider.Rotate(System.Double)">
      <summary>Gira o controle.</summary>
      <param name="degrees">O número de graus para girar o controle. Um número positivo gira em sentido horário, enquanto um número negativo gira no sentido anti-horário.</param>
      <exception cref="T:System.InvalidOperationException">Se a propriedade <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanRotate" /> é false.</exception>
    </member>
    <member name="T:System.Windows.Automation.Provider.IValueProvider">
      <summary>Expõe métodos e propriedades para oferecer suporte ao acesso de cliente à Automação da Interface do Usuário para controles que têm um valor intrínseco que não abrange um intervalo e que pode ser representado como uma cadeia de caracteres.</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IValueProvider.IsReadOnly">
      <summary>Obtém um valor que especifica se o valor de um controle é somente leitura.</summary>
      <returns>
        <see langword="true" />Se o valor for somente leitura; <see langword="false" /> se ele puder ser modificado.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)">
      <summary>Define o valor de um controle.</summary>
      <param name="value">O valor a ser definido. O provedor é responsável por converter o valor no tipo de dados apropriado.</param>
      <exception cref="T:System.InvalidOperationException">Se informações específicas a uma localidade são passadas para um controle em um formato incorreto, tal como uma data formatada incorretamente.</exception>
      <exception cref="T:System.ArgumentException">Se um novo valor não pode ser convertido de uma cadeia de caracteres em um formato que o controle reconhece.</exception>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">Quando é feita uma tentativa de manipular um controle que não está habilitado.</exception>
    </member>
    <member name="P:System.Windows.Automation.Provider.IValueProvider.Value">
      <summary>Obtém o valor do controle.</summary>
      <returns>O valor do controle como uma cadeia de caracteres.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IVirtualizedItemProvider">
      <summary>Expõe um método para compatibilidade com o padrão de controle de item virtualizado.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IVirtualizedItemProvider.Realize">
      <summary>Torna o item virtual totalmente acessível como um elemento de Automação da interface do usuário.</summary>
    </member>
    <member name="T:System.Windows.Automation.Provider.IWindowProvider">
      <summary>Expõe métodos e propriedades para compatibilidade com o acesso para cliente da Automação da Interface do Usuário para controles que fornecem funcionalidade fundamental com base em janelas dentro de uma GUI (interface gráfica do usuário) tradicional.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IWindowProvider.Close">
      <summary>Tenta fechar a janela.</summary>
      <exception cref="T:System.InvalidOperationException">Quando o controle não pode executar a ação solicitada.</exception>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">Quando o elemento de destino não está mais disponível (por exemplo, a janela fechou).</exception>
    </member>
    <member name="P:System.Windows.Automation.Provider.IWindowProvider.InteractionState">
      <summary>Obtém o estado de interação da janela.</summary>
      <returns>O <see cref="T:System.Windows.Automation.WindowInteractionState" /> do controle.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IWindowProvider.IsModal">
      <summary>Obtém um valor que especifica se a janela é modal.</summary>
      <returns>
        <see langword="true" />se a janela for modal; caso <see langword="false" />contrário.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IWindowProvider.IsTopmost">
      <summary>Obtém um valor que especifica se a janela é o elemento mais alto na ordem z.</summary>
      <returns>
        <see langword="true" />se a janela estiver na extremidade superior; caso <see langword="false" />contrário.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IWindowProvider.Maximizable">
      <summary>Obtém um valor que especifica se a janela pode ser maximizada.</summary>
      <returns>
        <see langword="true" />se a janela puder ser maximizada; caso <see langword="false" />contrário.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IWindowProvider.Minimizable">
      <summary>Obtém um valor que especifica se a janela pode ser minimizada.</summary>
      <returns>
        <see langword="true" />se a janela puder ser minimizada; caso <see langword="false" />contrário.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IWindowProvider.SetVisualState(System.Windows.Automation.WindowVisualState)">
      <summary>Altera o estado visual da janela. Por exemplo, minimiza-a ou maximiza-a.</summary>
      <param name="state">O estado visual solicitado da janela.</param>
      <exception cref="T:System.InvalidOperationException">Quando um controle não é compatível com o comportamento solicitado.</exception>
    </member>
    <member name="P:System.Windows.Automation.Provider.IWindowProvider.VisualState">
      <summary>Obtém o estado visual da janela.</summary>
      <returns>O estado visual da janela.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IWindowProvider.WaitForInputIdle(System.Int32)">
      <summary>Faz com que o código de chamada bloqueie pelo tempo especificado ou até que o processo associado entre em um estado ocioso, aquele que for concluído primeiro.</summary>
      <param name="milliseconds">O período de tempo, em milissegundos, para esperar que o processo associado fique ocioso. O máximo é <see cref="F:System.Int32.MaxValue" />.</param>
      <returns>
        <see langword="true" /> se a janela entrou no estado ocioso, <see langword="false" /> se o tempo limite foi alcançado.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Quando o parâmetro passado não é um número válido.</exception>
    </member>
    <member name="T:System.Windows.Automation.Provider.NavigateDirection">
      <summary>Contém valores usados para especificar a direção de navegação dentro da árvore da Automação da Interface do Usuário.</summary>
    </member>
    <member name="F:System.Windows.Automation.Provider.NavigateDirection.FirstChild">
      <summary>A direção de navegação é rumo ao primeiro filho.</summary>
    </member>
    <member name="F:System.Windows.Automation.Provider.NavigateDirection.LastChild">
      <summary>A direção de navegação é rumo ao último filho.</summary>
    </member>
    <member name="F:System.Windows.Automation.Provider.NavigateDirection.NextSibling">
      <summary>A direção de navegação é rumo ao próximo irmão.</summary>
    </member>
    <member name="F:System.Windows.Automation.Provider.NavigateDirection.Parent">
      <summary>A direção de navegação é rumo ao pai.</summary>
    </member>
    <member name="F:System.Windows.Automation.Provider.NavigateDirection.PreviousSibling">
      <summary>A direção de navegação é rumo ao irmão anterior.</summary>
    </member>
    <member name="T:System.Windows.Automation.Provider.ProviderOptions">
      <summary>Contém valores que especificam o tipo de provedor de Automação de Interface do Usuário.</summary>
    </member>
    <member name="F:System.Windows.Automation.Provider.ProviderOptions.ClientSideProvider">
      <summary>O provedor de Automação de Interface do Usuário é um provedor do lado do cliente.</summary>
    </member>
    <member name="F:System.Windows.Automation.Provider.ProviderOptions.NonClientAreaProvider">
      <summary>O provedor de Automação de Interface do Usuário é um provedor de área não do cliente.</summary>
    </member>
    <member name="F:System.Windows.Automation.Provider.ProviderOptions.OverrideProvider">
      <summary>O provedor de Automação de Interface do Usuário substitui outro provedor.</summary>
    </member>
    <member name="F:System.Windows.Automation.Provider.ProviderOptions.ProviderOwnsSetFocus">
      <summary>O provedor de Automação de Interface do Usuário trata o seu próprio foco e não quer Automação da interface do usuário para definir o foco para a janela mais próxima em seu nome quando <see cref="M:System.Windows.Automation.AutomationElement.SetFocus" /> é chamado. Essa opção é normalmente usada por provedores para janelas que parecem assumir o foco sem realmente receber o foco de Win32, como menus e menus suspensos.</summary>
    </member>
    <member name="F:System.Windows.Automation.Provider.ProviderOptions.ServerSideProvider">
      <summary>O provedor de Automação de Interface do Usuário é um provedor do lado do servidor.</summary>
    </member>
    <member name="F:System.Windows.Automation.Provider.ProviderOptions.UseComThreading">
      <summary>O provedor de Automação de Interface do Usuário espera ser chamado de acordo com as regras de threading COM. Se o provedor estiver em um Single-Threaded Apartment, ele será chamado apenas no thread apartment. Somente provedores no lado do servidor podem usar essa opção.</summary>
    </member>
  </members>
</doc>