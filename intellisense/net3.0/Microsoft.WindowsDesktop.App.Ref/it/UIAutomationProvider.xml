<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>UIAutomationProvider</name>
  </assembly>
  <members>
    <member name="T:System.Windows.Automation.Provider.AutomationInteropProvider">
      <summary>Fornisce supporto per la comunicazione tra i provider e le applicazioni client di automazione interfaccia utente.</summary>
    </member>
    <member name="F:System.Windows.Automation.Provider.AutomationInteropProvider.AppendRuntimeId">
      <summary>Contiene un valore che, se restituito come primo elemento della matrice passata dal provider di automazione interfaccia utente a <see cref="M:System.Windows.Automation.Provider.IRawElementProviderFragment.GetRuntimeId" />, indica che l'ID è parziale e deve essere aggiunto all'ID fornito dal provider di base.</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.AutomationInteropProvider.ClientsAreListening">
      <summary>Ottiene un valore che specifica se le applicazioni client di automazione interfaccia utente hanno eseguito la sottoscrizione agli eventi di Automazione interfaccia utente.</summary>
      <returns>
        <see langword="true" /> se un client ha eseguito la sottoscrizione agli eventi. In caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.AutomationInteropProvider.HostProviderFromHandle(System.IntPtr)">
      <summary>Restituisce un provider di automazione interfaccia utente che rappresenta la finestra specificata.</summary>
      <param name="hwnd">Handle della finestra.</param>
      <returns>Provider di elementi non elaborati per la finestra specificata.</returns>
    </member>
    <member name="F:System.Windows.Automation.Provider.AutomationInteropProvider.InvalidateLimit">
      <summary>Specifica il numero massimo di eventi da inviare prima dell'esecuzione del batch.</summary>
    </member>
    <member name="F:System.Windows.Automation.Provider.AutomationInteropProvider.ItemsInvalidateLimit">
      <summary>Il numero massimo di eventi da inviare prima dell'esecuzione del batch per gli elementi nei contenitori.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.AutomationInteropProvider.RaiseAutomationEvent(System.Windows.Automation.AutomationEvent,System.Windows.Automation.Provider.IRawElementProviderSimple,System.Windows.Automation.AutomationEventArgs)">
      <summary>Genera un evento di modello o un evento personalizzato.</summary>
      <param name="eventId">Identificatore dell'evento.</param>
      <param name="provider">Elemento associato all'evento.</param>
      <param name="e">Informazioni sull'evento.</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.AutomationInteropProvider.RaiseAutomationPropertyChangedEvent(System.Windows.Automation.Provider.IRawElementProviderSimple,System.Windows.Automation.AutomationPropertyChangedEventArgs)">
      <summary>Genera un evento in seguito alla modifica di una proprietà Automazione interfaccia utente .</summary>
      <param name="element">Elemento associato all'evento.</param>
      <param name="e">Informazioni sull'evento.</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.AutomationInteropProvider.RaiseStructureChangedEvent(System.Windows.Automation.Provider.IRawElementProviderSimple,System.Windows.Automation.StructureChangedEventArgs)">
      <summary>Genera un evento in seguito alla modifica dell'albero Automazione interfaccia utente.</summary>
      <param name="provider">Elemento associato all'evento.</param>
      <param name="e">Informazioni sull'evento.</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.AutomationInteropProvider.ReturnRawElementProvider(System.IntPtr,System.IntPtr,System.IntPtr,System.Windows.Automation.Provider.IRawElementProviderSimple)">
      <summary>Restituisce il provider di automazione interfaccia utente per un elemento in risposta a un messaggio <see langword="WM_GETOBJECT" />.</summary>
      <param name="hwnd">Handle della finestra dell'elemento.</param>
      <param name="wParam">Membro <see langword="wParam" /> del messaggio <see langword="WM_GETOBJECT" />.</param>
      <param name="lParam">Membro <see langword="lParam" /> del messaggio <see langword="WM_GETOBJECT" /> .</param>
      <param name="el">Provider di automazione interfaccia utente per l'elemento.</param>
      <returns>Puntatore ai dati che devono essere assegnati a <see cref="P:System.Windows.Forms.Message.Result" /> prima di passare il messaggio alla routine della finestra di base.</returns>
    </member>
    <member name="F:System.Windows.Automation.Provider.AutomationInteropProvider.RootObjectId">
      <summary>Contiene un valore utilizzato nel membro <see langword="lParam" /> di un messaggio <see langword="WM_GETOBJECT" />, pertanto il server deve restituire un riferimento al provider dell'elemento radice non elaborato.</summary>
    </member>
    <member name="T:System.Windows.Automation.Provider.IDockProvider">
      <summary>Espone metodi e proprietà per supportare l'accesso client di automazione interfaccia utente ai controlli che espongono le relative proprietà di ancoraggio all'interno di un contenitore di ancoraggio.</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IDockProvider.DockPosition">
      <summary>Ottiene l'oggetto <see cref="T:System.Windows.Automation.DockPosition" /> corrente del controllo all'interno di un contenitore di ancoraggio.</summary>
      <returns>Oggetto <see cref="T:System.Windows.Automation.DockPosition" /> del controllo, relativo ai limiti del contenitore di ancoraggio e altri elementi all'interno del contenitore.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IDockProvider.SetDockPosition(System.Windows.Automation.DockPosition)">
      <summary>Ancora il controllo all'interno di un contenitore di ancoraggio.</summary>
      <param name="dockPosition">Posizione di ancoraggio rispetto ai limiti del contenitore di ancoraggio e ad altri elementi nel contenitore.</param>
    </member>
    <member name="T:System.Windows.Automation.Provider.IExpandCollapseProvider">
      <summary>Espone metodi e proprietà per supportare l'accesso client di automazione interfaccia utente per i controlli che si espandono visivamente per visualizzare il contenuto e si comprimono per nasconderlo.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IExpandCollapseProvider.Collapse">
      <summary>Nasconde tutti i nodi, i controlli o il contenuto che sono discendenti del controllo.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IExpandCollapseProvider.Expand">
      <summary>Visualizza tutti i nodi figlio, i controlli o il contenuto del controllo.</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IExpandCollapseProvider.ExpandCollapseState">
      <summary>Ottiene lo stato espanso o compresso del controllo.</summary>
      <returns>Stato espanso o compresso del controllo.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IGridItemProvider">
      <summary>Espone metodi e proprietà per supportare l'accesso client di automazione interfaccia utente per singoli controlli figlio di contenitori che implementano <see cref="T:System.Windows.Automation.Provider.IGridProvider" />.</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IGridItemProvider.Column">
      <summary>Ottiene il numero ordinale della colonna contenente la cella o l'elemento.</summary>
      <returns>Numero ordinale in base zero che identifica la colonna contenente la cella o l'elemento.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IGridItemProvider.ColumnSpan">
      <summary>Ottiene il numero di colonne occupate da una cella o un elemento.</summary>
      <returns>Numero di colonne occupate.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IGridItemProvider.ContainingGrid">
      <summary>Ottiene un provider di automazione interfaccia utente che implementa <see cref="T:System.Windows.Automation.Provider.IGridProvider" /> e rappresenta il contenitore della cella o dell'elemento.</summary>
      <returns>Provider di automazione interfaccia utente che implementa <see cref="T:System.Windows.Automation.GridPattern" /> e rappresenta il contenitore della cella o dell'elemento.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IGridItemProvider.Row">
      <summary>Ottiene il numero ordinale della riga contenente la cella o l'elemento.</summary>
      <returns>Numero ordinale in base zero che identifica la riga contenente la cella o l'elemento.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IGridItemProvider.RowSpan">
      <summary>Ottiene il numero di righe occupate da una cella o un elemento.</summary>
      <returns>Numero di righe occupate.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IGridProvider">
      <summary>Espone metodi e proprietà per supportare l'accesso client di automazione interfaccia utente ai controlli che fungono da contenitori per una raccolta di elementi figlio. Gli elementi figlio di questo elemento devono implementare <see cref="T:System.Windows.Automation.Provider.IGridItemProvider" /> e devono essere organizzati in un sistema di coordinate logico bidimensionale che può essere attraversato tramite la tastiera, ovvero un client di automazione interfaccia utente può spostarsi sui controlli adiacenti.</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IGridProvider.ColumnCount">
      <summary>Ottiene il numero totale di colonne in una griglia.</summary>
      <returns>Numero totale di colonne in una griglia.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IGridProvider.GetItem(System.Int32,System.Int32)">
      <summary>Recupera il provider di automazione interfaccia utente per la cella specificata.</summary>
      <param name="row">Numero ordinale della riga di interesse.</param>
      <param name="column">Numero ordinale della colonna di interesse.</param>
      <returns>Provider di automazione interfaccia utente per la cella specificata.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IGridProvider.RowCount">
      <summary>Ottiene il numero totale di righe in una griglia.</summary>
      <returns>Numero totale di righe in una griglia.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IInvokeProvider">
      <summary>Espone metodi e proprietà per supportare l'accesso client di automazione interfaccia utente per i controlli che iniziano o eseguono un'azione singola e non ambigua e non mantengono lo stato quando attivati.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IInvokeProvider.Invoke">
      <summary>Invia una richiesta per l'attivazione di un controllo e l'avvio dell'azione singola e non ambigua corrispondente.</summary>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">Il controllo non è abilitato.</exception>
    </member>
    <member name="T:System.Windows.Automation.Provider.IItemContainerProvider">
      <summary>Espone un metodo per consentire alle applicazioni di trovare un elemento in un contenitore come ad esempio un elenco virtualizzato.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IItemContainerProvider.FindItemByProperty(System.Windows.Automation.Provider.IRawElementProviderSimple,System.Int32,System.Object)">
      <summary>Recupera un elemento dal valore della proprietà specificato.</summary>
      <param name="startAfter">Elemento nel contenitore dopo il quale iniziare la ricerca.</param>
      <param name="propertyId">Proprietà che contiene il valore da recuperare.</param>
      <param name="value">Valore da recuperare.</param>
      <returns>Primo elemento che corrisponde al criterio di ricerca; in caso contrario, <see langword="null" /> se non viene trovato alcun elemento corrispondente.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IMultipleViewProvider">
      <summary>Espone i metodi e le proprietà per supportare l'accesso client di automazione interfaccia utente ai controlli che implementano più rappresentazioni dello stesso set di informazioni o controlli figlio e che sono in grado di scorrere tali rappresentazioni.</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IMultipleViewProvider.CurrentView">
      <summary>Ottiene la visualizzazione specifica del controllo corrente.</summary>
      <returns>Valore per la visualizzazione corrente dell'elemento di automazione interfaccia utente.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IMultipleViewProvider.GetSupportedViews">
      <summary>Recupera una raccolta di identificatori visualizzazione specifica del controllo.</summary>
      <returns>Raccolta di valori che identifica le visualizzazioni disponibili per un elemento di automazione interfaccia utente.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IMultipleViewProvider.GetViewName(System.Int32)">
      <summary>Recupera il nome di una visualizzazione specifica del controllo.</summary>
      <param name="viewId">Identificatore visualizzazione.</param>
      <returns>Nome localizzato per la visualizzazione.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="viewId" /> non è un membro della raccolta delle visualizzazioni supportate.</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.IMultipleViewProvider.SetCurrentView(System.Int32)">
      <summary>Imposta la visualizzazione specifica del controllo corrente.</summary>
      <param name="viewId">Identificatore della visualizzazione.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="viewId" /> non è un membro della raccolta delle visualizzazioni supportate.</exception>
    </member>
    <member name="T:System.Windows.Automation.Provider.IRangeValueProvider">
      <summary>Espone metodi e proprietà per supportare l'accesso client di automazione interfaccia utente ai controlli che è possibile impostare su un valore compreso in un intervallo.</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRangeValueProvider.IsReadOnly">
      <summary>Ottiene un valore che specifica se il valore di un controllo è di sola lettura.</summary>
      <returns>
        <see langword="true" /> se il valore è di sola lettura. <see langword="false" /> se può essere modificato.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange">
      <summary>Ottiene il valore aggiunto o sottratto dalla proprietà <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /> quando viene apportata una modifica di grandi dimensioni, ad esempio con il tasto PGGIÙ.</summary>
      <returns>Valore di modifica di grandi dimensioni supportato dal controllo o null (<see langword="Nothing" /> in Visual Basic) se il controllo non supporta. <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange" /></returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRangeValueProvider.Maximum">
      <summary>Ottiene il massimo valore dell'intervallo supportato dal controllo.</summary>
      <returns>Il valore massimo supportato dal controllo o null (<see langword="Nothing" /> in Visual Basic) se il controllo non supporta. <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Maximum" /></returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRangeValueProvider.Minimum">
      <summary>Ottiene il minimo valore dell'intervallo supportato dal controllo.</summary>
      <returns>Valore minimo supportato dal controllo o null (<see langword="Nothing" /> in Visual Basic) se il controllo non supporta. <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Minimum" /></returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IRangeValueProvider.SetValue(System.Double)">
      <summary>Imposta il valore del controllo.</summary>
      <param name="value">Il valore da impostare.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Quando <paramref name="value" /> è inferiore al valore minimo o superiore al valore massimo del controllo.</exception>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange">
      <summary>Ottiene il valore aggiunto o sottratto dalla proprietà <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /> quando viene apportata una modifica di piccole dimensioni, ad esempio con un tasto di direzione.</summary>
      <returns>Il valore della modifica di piccole dimensioni o<see langword="Nothing" /> null (in Visual Basic) se il controllo non <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange" />supporta.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRangeValueProvider.Value">
      <summary>Ottiene il valore del controllo.</summary>
      <returns>Valore del controllo o null (<see langword="Nothing" /> in Visual Basic) se il controllo non supporta. <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /></returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IRawElementProviderAdviseEvents">
      <summary>Espone i metodi chiamati per indicare all'elemento radice di un frammento i casi in cui un'applicazione client di automazione interfaccia utente inizia o smette di restare in attesa di eventi.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IRawElementProviderAdviseEvents.AdviseEventAdded(System.Int32,System.Int32[])">
      <summary>Notifica al provider di automazione interfaccia utente quando un client di automazione interfaccia utente inizia a essere in ascolto di un evento specifico, incluso un evento di proprietà modificata.</summary>
      <param name="eventId">Identificatore dell'evento da aggiungere.</param>
      <param name="properties">Identificatori delle proprietà da aggiungere oppure <see langword="null" /> se il listener di eventi da aggiungere non è in ascolto degli eventi delle proprietà.</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.IRawElementProviderAdviseEvents.AdviseEventRemoved(System.Int32,System.Int32[])">
      <summary>Notifica al provider di automazione interfaccia utente quando un client di automazione interfaccia utente interrompe l'ascolto di un evento specifico, incluso un evento di proprietà modificata.</summary>
      <param name="eventId">Identificatore dell'evento da rimuovere.</param>
      <param name="properties">Identificatori delle proprietà da rimuovere oppure <see langword="null" /> se il listener di eventi da rimuovere non è in ascolto degli eventi delle proprietà.</param>
    </member>
    <member name="T:System.Windows.Automation.Provider.IRawElementProviderFragment">
      <summary>Espone metodi e proprietà negli elementi dell'interfaccia utente che fanno parte di una struttura con più di un livello, ad esempio una casella di riepilogo o un elemento di un elenco. Implementata dai provider di automazione interfaccia utente.</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRawElementProviderFragment.BoundingRectangle">
      <summary>Ottiene il rettangolo di delimitazione di questo elemento.</summary>
      <returns>Rettangolo di delimitazione, nelle coordinate dello schermo.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRawElementProviderFragment.FragmentRoot">
      <summary>Recupera il nodo radice del frammento.</summary>
      <returns>Nodo radice.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IRawElementProviderFragment.GetEmbeddedFragmentRoots">
      <summary>Recupera una matrice di radici del frammento incluse nella struttura ad albero dell'elemento Automazione interfaccia utente con radice nell'elemento corrente.</summary>
      <returns>Matrice di frammenti radice, o <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IRawElementProviderFragment.GetRuntimeId">
      <summary>Recupera l'identificatore di runtime di un elemento.</summary>
      <returns>Identificatore di runtime univoco dell'elemento.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IRawElementProviderFragment.Navigate(System.Windows.Automation.Provider.NavigateDirection)">
      <summary>Recupera l'elemento Automazione interfaccia utente in una direzione specificata all'interno dell'albero.</summary>
      <param name="direction">Direzione di navigazione.</param>
      <returns>L'elemento nella direzione specificata o <see langword="null" /> se non esiste alcun elemento in quella direzione.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IRawElementProviderFragment.SetFocus">
      <summary>Imposta lo stato attivo su questo elemento.</summary>
    </member>
    <member name="T:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot">
      <summary>Espone metodi e proprietà per l'elemento radice in un frammento.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot.ElementProviderFromPoint(System.Double,System.Double)">
      <summary>Recupera l'elemento nel frammento che si trova nel punto specificato.</summary>
      <param name="x">Coordinata X.</param>
      <param name="y">Coordinata Y.</param>
      <returns>Provider per l'elemento figlio nel punto specificato, se presente, o il provider radice se il punto si trova in questo elemento ma non in alcuno degli elementi figlio. In caso contrario restituisce <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot.GetFocus">
      <summary>Recupera l'elemento nel frammento che ha lo stato attivo per l'input.</summary>
      <returns>Provider per l'elemento nel frammento che ha lo stato attivo per l'input, se presente. In caso contrario, riferimento null (<see langword="Nothing" /> in Visual Basic).</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IRawElementProviderHwndOverride">
      <summary>Espone un metodo che abilita il riposizionamento degli elementi basati su finestra all'interno dell'albero di automazione dell'interfaccia utente del frammento.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IRawElementProviderHwndOverride.GetOverrideProviderForHwnd(System.IntPtr)">
      <summary>Recupera il provider di automazione interfaccia utente per l'elemento specificato.</summary>
      <param name="hwnd">Handle della finestra dell'elemento.</param>
      <returns>Provider per l'elemento specificato o riferimento Null (<see langword="Nothing" /> in Visual Basic) se il provider predefinito dell'elemento non viene sottoposto a override.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IRawElementProviderSimple">
      <summary>Fornisce metodi e proprietà che espongono informazioni di base su un elemento dell'interfaccia utente.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IRawElementProviderSimple.GetPatternProvider(System.Int32)">
      <summary>Recupera un oggetto che implementa il supporto per un pattern di controllo su un elemento Automazione interfaccia utente.</summary>
      <param name="patternId">Identificatore del pattern.</param>
      <returns>Oggetto che implementa l'interfaccia del pattern oppure <see langword="null" /> se il pattern non è supportato.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IRawElementProviderSimple.GetPropertyValue(System.Int32)">
      <summary>Recupera il valore di una proprietà supportata dal provider di automazione interfaccia utente.</summary>
      <param name="propertyId">Identificatore della proprietà.</param>
      <returns>Valore della proprietà o <see langword="null" /> se la proprietà non è supportata dal provider oppure <see cref="F:System.Windows.Automation.AutomationElementIdentifiers.NotSupported" /> se non è mai supportata.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRawElementProviderSimple.HostRawElementProvider">
      <summary>Ottiene un provider di base per questo elemento.</summary>
      <returns>Provider di base, o <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRawElementProviderSimple.ProviderOptions">
      <summary>Ottiene un valore che specifica le caratteristiche del provider di automazione interfaccia utente, ad esempio se è un provider lato client o lato server.</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Provider.ProviderOptions.ClientSideProvider" /> o <see cref="F:System.Windows.Automation.Provider.ProviderOptions.ServerSideProvider" />.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IScrollItemProvider">
      <summary>Espone metodi e proprietà per supportare l'accesso client di automazione interfaccia utente per singoli controlli figlio di contenitori che implementano <see cref="T:System.Windows.Automation.Provider.IScrollProvider" />.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IScrollItemProvider.ScrollIntoView">
      <summary>Scorre l'area del contenuto di un oggetto contenitore per visualizzare il controllo all'interno dell'area visibile (viewport) del contenitore.</summary>
      <exception cref="T:System.InvalidOperationException">Non è possibile visualizzare l'elemento tramite scorrimento.</exception>
    </member>
    <member name="T:System.Windows.Automation.Provider.IScrollProvider">
      <summary>Espone metodi e proprietà per supportare l'accesso client di automazione interfaccia utente a un controllo che funge da contenitore che è possibile scorrere per una raccolta di oggetti figlio. Gli elementi figlio di questo controllo devono implementare <see cref="T:System.Windows.Automation.Provider.IScrollItemProvider" />.</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IScrollProvider.HorizontallyScrollable">
      <summary>Ottiene un valore che indica se il controllo è in grado di scorrere orizzontalmente.</summary>
      <returns>
        <see langword="true" /> se il controllo è in grado di scorrere orizzontalmente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IScrollProvider.HorizontalScrollPercent">
      <summary>Ottiene la posizione di scorrimento orizzontale corrente.</summary>
      <returns>Posizione di scorrimento orizzontale come percentuale dell'area totale di contenuto all'interno del controllo.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IScrollProvider.HorizontalViewSize">
      <summary>Ottiene la dimensione vista orizzontale corrente.</summary>
      <returns>La dimensione orizzontale dell'area visualizzabile come percentuale dell'area totale di contenuto all'interno del controllo.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IScrollProvider.Scroll(System.Windows.Automation.ScrollAmount,System.Windows.Automation.ScrollAmount)">
      <summary>Scorre orizzontalmente e verticalmente l'area visibile dell'area di contenuto.</summary>
      <param name="horizontalAmount">Incremento orizzontale specifico per il controllo. Passare <see cref="F:System.Windows.Automation.ScrollPatternIdentifiers.NoScroll" /> se non è possibile scorrere il controllo in questa direzione.</param>
      <param name="verticalAmount">Incremento verticale specifico per il controllo. Passare <see cref="F:System.Windows.Automation.ScrollPatternIdentifiers.NoScroll" /> se non è possibile scorrere il controllo in questa direzione.</param>
      <exception cref="T:System.ArgumentException">Se un controllo supporta valori di <see cref="F:System.Windows.Automation.ScrollAmount.SmallIncrement" /> esclusivamente per lo scorrimento orizzontale o verticale, ma viene passato un valore <see cref="F:System.Windows.Automation.ScrollAmount.LargeIncrement" />.</exception>
      <exception cref="T:System.InvalidOperationException">Si è tentato lo scorrimento in una direzione non supportata.</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.IScrollProvider.SetScrollPercent(System.Double,System.Double)">
      <summary>Imposta la posizione di scorrimento orizzontale e verticale come percentuale dell'area di contenuto totale nel controllo.</summary>
      <param name="horizontalPercent">Posizione orizzontale come percentuale dell'intervallo totale dell'area di contenuto. Passare <see cref="F:System.Windows.Automation.ScrollPatternIdentifiers.NoScroll" /> se non è possibile scorrere il controllo in questa direzione.</param>
      <param name="verticalPercent">Posizione verticale come percentuale dell'intervallo totale dell'area di contenuto. Passare <see cref="F:System.Windows.Automation.ScrollPatternIdentifiers.NoScroll" /> se non è possibile scorrere il controllo in questa direzione.</param>
      <exception cref="T:System.ArgumentException">Valore che non può essere convertito in un valore double passato.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">È stato passato un valore maggiore di 100 o minore di 0 (eccetto -1, che equivale a <see cref="F:System.Windows.Automation.ScrollPatternIdentifiers.NoScroll" />). I valori <see cref="P:System.Windows.Automation.Provider.IScrollProvider.HorizontalScrollPercent" /> e <see cref="P:System.Windows.Automation.Provider.IScrollProvider.VerticalScrollPercent" /> vengono normalizzati a 100% o 0%.</exception>
      <exception cref="T:System.InvalidOperationException">Si è tentato lo scorrimento in una direzione non supportata.</exception>
    </member>
    <member name="P:System.Windows.Automation.Provider.IScrollProvider.VerticallyScrollable">
      <summary>Ottiene un valore che indica se il controllo è in grado di scorrere verticalmente.</summary>
      <returns>
        <see langword="true" /> se il controllo è in grado di scorrere verticalmente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IScrollProvider.VerticalScrollPercent">
      <summary>Ottiene la posizione di scorrimento verticale corrente.</summary>
      <returns>Posizione di scorrimento verticale come percentuale dell'area totale di contenuto all'interno del controllo.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IScrollProvider.VerticalViewSize">
      <summary>Ottiene la dimensione della visualizzazione verticale.</summary>
      <returns>Dimensione verticale dell'area visualizzabile come percentuale dell'area totale di contenuto all'interno del controllo.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.ISelectionItemProvider">
      <summary>Espone metodi e proprietà per supportare l'accesso client di automazione interfaccia utente ai singoli controlli figlio selezionabili di contenitori che implementano <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" />.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.ISelectionItemProvider.AddToSelection">
      <summary>Aggiunge l'elemento corrente alla raccolta di elementi selezionati.</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.ISelectionItemProvider.IsSelected">
      <summary>Ottiene un valore che indica se un elemento è selezionato.</summary>
      <returns>
        <see langword="true" /> se l'elemento è selezionato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ISelectionItemProvider.RemoveFromSelection">
      <summary>Rimuove l'elemento corrente dalla raccolta di elementi selezionati.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.ISelectionItemProvider.Select">
      <summary>Deseleziona gli elementi selezionati e quindi seleziona l'elemento corrente.</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.ISelectionItemProvider.SelectionContainer">
      <summary>Ottiene il provider di automazione interfaccia utente che implementa <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" /> e funge da contenitore per l'oggetto chiamante.</summary>
      <returns>Provider che supporta <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" />.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.ISelectionProvider">
      <summary>Espone metodi e proprietà per supportare l'accesso client di automazione interfaccia utente ai controlli che fungono da contenitori per una raccolta di singoli elementi figlio selezionabili. Gli elementi figlio di questo controllo devono implementare <see cref="T:System.Windows.Automation.Provider.ISelectionItemProvider" />.</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.ISelectionProvider.CanSelectMultiple">
      <summary>Ottiene un valore che specifica se il provider di automazione interfaccia utente consente la selezione simultanea di più di un elemento figlio.</summary>
      <returns>
        <see langword="true" /> se è consentita la selezione multipla. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ISelectionProvider.GetSelection">
      <summary>Recupera un provider di automazione interfaccia utente per ogni elemento figlio selezionato.</summary>
      <returns>Raccolta di provider di automazione interfaccia utente.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired">
      <summary>Ottiene un valore che specifica se il provider di automazione interfaccia utente richiede la selezione di almeno un elemento figlio.</summary>
      <returns>
        <see langword="true" /> se la selezione è necessaria. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.ISynchronizedInputProvider">
      <summary>Espone i metodi per semplificare l'accesso client di automazione interfaccia utente ai controlli che supportano l'input sincronizzato.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.ISynchronizedInputProvider.Cancel">
      <summary>Interrompe l'ascolto dell'input.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.ISynchronizedInputProvider.StartListening(System.Windows.Automation.SynchronizedInputType)">
      <summary>Indica che il provider avvia l'ascolto dell'input del tipo specificato.</summary>
      <param name="inputType">Tipo di input da ascoltare.</param>
    </member>
    <member name="T:System.Windows.Automation.Provider.ITableItemProvider">
      <summary>Espone metodi e proprietà per supportare l'accesso client di automazione interfaccia utente ai controlli figlio di contenitori che implementano <see cref="T:System.Windows.Automation.Provider.ITableProvider" />.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITableItemProvider.GetColumnHeaderItems">
      <summary>Recupera una raccolta di provider di automazione interfaccia utente che rappresenta tutte le intestazioni di colonna associate a un elemento o una cella della tabella.</summary>
      <returns>Raccolta di provider di automazione interfaccia utente.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITableItemProvider.GetRowHeaderItems">
      <summary>Recupera una raccolta di provider di automazione interfaccia utente che rappresenta tutte le intestazioni di riga associate a un elemento o una cella della tabella.</summary>
      <returns>Raccolta di provider di automazione interfaccia utente.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.ITableProvider">
      <summary>Espone metodi e proprietà per supportare l'accesso client di automazione interfaccia utente ai controlli che fungono da contenitori per una raccolta di elementi figlio. Gli elementi figlio di questo elemento devono implementare <see cref="T:System.Windows.Automation.Provider.ITableItemProvider" /> e devono essere organizzati in un sistema di coordinate logico bidimensionale che può essere attraversato tramite la tastiera, ovvero un client di automazione interfaccia utente può spostarsi sui controlli adiacenti.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITableProvider.GetColumnHeaders">
      <summary>Ottiene una raccolta di provider di automazione interfaccia utente che rappresenta tutte le intestazioni di colonna in una tabella.</summary>
      <returns>Raccolta di provider di automazione interfaccia utente.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITableProvider.GetRowHeaders">
      <summary>Recupera una raccolta di provider di automazione interfaccia utente che rappresenta tutte le intestazioni di riga nella tabella.</summary>
      <returns>Raccolta di provider di automazione interfaccia utente.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.ITableProvider.RowOrColumnMajor">
      <summary>Recupera la direzione primaria di attraversamento per la tabella.</summary>
      <returns>Direzione primaria di attraversamento.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.ITextProvider">
      <summary>Espone metodi e proprietà per supportare l'accesso client di automazione interfaccia utente ai controlli che contengono testo.</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.ITextProvider.DocumentRange">
      <summary>Ottiene un intervallo di testo che include il testo principale di un documento.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextProvider.GetSelection">
      <summary>Recupera una raccolta di intervalli di testo non contigui associati alla selezione o alle selezioni di testo correnti.</summary>
      <returns>Raccolta di intervalli di testo non contigui.</returns>
      <exception cref="T:System.InvalidOperationException">Se il provider di automazione interfaccia utente non supporta la selezione di testo.</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextProvider.GetVisibleRanges">
      <summary>Recupera una matrice di intervalli di testo non contigui da un contenitore di testo in cui ogni intervallo di testo inizia con la prima riga parzialmente visibile fino alla fine dell'ultima riga parzialmente visibile.</summary>
      <returns>Raccolta di intervalli di testo visibile all'interno del contenitore o una matrice vuota. Un riferimento Null (<see langword="Nothing" /> in Visual Basic) non viene mai restituito.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextProvider.RangeFromChild(System.Windows.Automation.Provider.IRawElementProviderSimple)">
      <summary>Recupera un intervallo di testo che include un elemento figlio ad esempio un'immagine, un collegamento ipertestuale o un altro oggetto incorporato.</summary>
      <param name="childElement">Oggetto incluso.</param>
      <returns>Intervallo che include l'elemento figlio.</returns>
      <exception cref="T:System.ArgumentException">Se l'elemento figlio è un riferimento Null (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextProvider.RangeFromPoint(System.Windows.Point)">
      <summary>Restituisce l'intervallo di testo degenerato (vuoto) più vicino alle coordinate dello schermo specificate.</summary>
      <param name="screenLocation">Percorso nelle coordinate dello schermo.</param>
      <returns>Intervallo degenere più vicino al percorso specificato. Un riferimento Null (<see langword="Nothing" /> in Visual Basic) non viene mai restituito.</returns>
      <exception cref="T:System.ArgumentException">Se un punto specificato si trova fuori dell'elemento Automazione interfaccia utente associato al criterio di testo.</exception>
    </member>
    <member name="P:System.Windows.Automation.Provider.ITextProvider.SupportedTextSelection">
      <summary>Ottiene un valore che specifica se un provider di testo supporta la selezione e, in tal caso, il tipo di selezione supportata.</summary>
      <returns>Uno tra <see langword="None" />, <see langword="Single" /> o <see langword="Multiple" /> da <see cref="T:System.Windows.Automation.SupportedTextSelection" />.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.ITextRangeProvider">
      <summary>Espone metodi e proprietà per supportare l'accesso client di automazione interfaccia utente a un'estensione di testo continuo in un contenitore di testo che implementa <see cref="T:System.Windows.Automation.Provider.ITextProvider" />.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.AddToSelection">
      <summary>Aggiunge elementi alla raccolta di testo evidenziato in un contenitore di testo che supporta selezioni multiple non contigue.</summary>
      <exception cref="T:System.InvalidOperationException">Se il provider di testo non supporta le selezioni multiple non contigue (ovvero, <see cref="P:System.Windows.Automation.Provider.ITextProvider.SupportedTextSelection" /> deve avere un valore pari a <see langword="Multiple" />).</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.Clone">
      <summary>Restituisce un nuovo oggetto <see cref="T:System.Windows.Automation.Provider.ITextRangeProvider" /> identico all'oggetto <see cref="T:System.Windows.Automation.Provider.ITextRangeProvider" /> originale che eredita tutte le proprietà dell'originale.</summary>
      <returns>Nuovo intervallo di testo. Un riferimento Null (<see langword="Nothing" /> in Visual Basic) non viene mai restituito.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.Compare(System.Windows.Automation.Provider.ITextRangeProvider)">
      <summary>Restituisce un valore che indica se l'ampiezza (l'endpoint <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> all'endpoint <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> ) di un intervallo di testo corrisponde a un altro intervallo di testo.</summary>
      <param name="range">Intervallo di testo da confrontare</param>
      <returns>
        <see langword="true" /> se l'ampiezza di entrambi gli intervalli di testo è identica; in caso contrario <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Se l'intervallo confrontato non proviene dallo stesso provider di testo.</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.CompareEndpoints(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)">
      <summary>Restituisce un valore che specifica se due intervalli di testo presentano endpoint identici.</summary>
      <param name="endpoint">Endpoint <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> o <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> del chiamante.</param>
      <param name="targetRange">Intervallo di destinazione per il confronto.</param>
      <param name="targetEndpoint">Endpoint <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> o <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> della destinazione.</param>
      <returns>Restituisce un valore negativo se l'endpoint del chiamante si trova nel testo prima dell'endpoint di destinazione.  
 Restituisce zero se l'endpoint del chiamante è nella stessa posizione dell'endpoint di destinazione.  
 Restituisce un valore positivo se l'endpoint del chiamante si verifica nel testo dopo l'endpoint di destinazione.</returns>
      <exception cref="T:System.ArgumentException">Se <paramref name="targetRange" /> proviene da un provider di testo diverso.</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)">
      <summary>Espande l'intervallo di testo all'unità di testo specificata.</summary>
      <param name="unit">Unità testuale.</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.FindAttribute(System.Int32,System.Object,System.Boolean)">
      <summary>Restituisce un sottoinsieme di intervallo di testo che presenta il valore dell'attributo specificato.</summary>
      <param name="attribute">Attributo da cercare.</param>
      <param name="value">Valore dell'attributo da cercare. Questo valore deve corrispondere al tipo specificato per l'attributo.</param>
      <param name="backward">
        <see langword="true" /> se deve essere restituito l'ultimo intervallo di testo invece del primo; in caso contrario <see langword="false" />.</param>
      <returns>Intervallo di testo che presenta un attributo e un valore di attributo corrispondenti; in caso contrario, Null (<see langword="Nothing" /> in Visual Basic).</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.FindText(System.String,System.Boolean,System.Boolean)">
      <summary>Restituisce un sottoinsieme di intervallo di testo contenente il testo specificato.</summary>
      <param name="text">Stringa di testo da cercare.</param>
      <param name="backward">
        <see langword="true" /> se deve essere restituito l'ultimo intervallo di testo invece del primo; in caso contrario <see langword="false" />.</param>
      <param name="ignoreCase">
        <see langword="true" /> se è necessario ignorare la differenza tra maiuscole e minuscole; in caso contrario, <see langword="false" />.</param>
      <returns>Intervallo di testo corrispondente al testo specificato; in caso contrario, Null (<see langword="Nothing" /> in Visual Basic).</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.GetAttributeValue(System.Int32)">
      <summary>Recupera il valore dell'attributo specificato nell'intervallo di testo.</summary>
      <param name="attribute">Attributo di testo.</param>
      <returns>Recupera un oggetto che rappresenta il valore dell'attributo specificato. Ad esempio, <c>GetAttributeValue(TextPattern.FontNameAttribute)</c> restituirebbe una stringa che rappresenta il nome del tipo di carattere dell'intervallo di testo, mentre <c>GetAttributeValue (TextPattern.IsItalicAttribute)</c> restituirebbe un valore di tipo <see cref="T:System.Boolean" />.  
Restituisce <see cref="F:System.Windows.Automation.TextPattern.MixedAttributeValue" /> se il valore dell'attributo specificato varia nell'intervallo di testo.  
Restituisce <see cref="F:System.Windows.Automation.AutomationElement.NotSupported" /> se l'attributo specificato non è supportato dal provider o dal controllo.</returns>
      <exception cref="T:System.ArgumentException">Se l'attributo specificato non è valido.</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.GetBoundingRectangles">
      <summary>Recupera una raccolta di rettangoli di delimitazione per ogni riga di testo visibile del tutto o in parte in un intervallo di testo.</summary>
      <returns>Una matrice di rettangoli di delimitazione per ogni riga di testo completa o parziale in un intervallo di testo.  
 Matrice vuota per un intervallo degenerato.  
 Matrice vuota per un intervallo di testo che presenta coordinate di schermo che lo collocano completamente fuori dello schermo, fuori visualizzazione o nascosto da una finestra sovrapposta.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.GetChildren">
      <summary>Recupera un insieme di tutti gli oggetti incorporati che rientrano nell'intervallo di testo.</summary>
      <returns>Insieme di oggetti figlio che rientrano nell'intervallo. Anche gli oggetti figlio che si sovrappongono con l'intervallo di testo ma ne non sono inclusi completamente verranno inclusi nell'insieme.  
 Restituisce un insieme vuoto se non sono presenti oggetti figlio.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.GetEnclosingElement">
      <summary>Restituisce il controllo più interno che include l'intervallo di testo.</summary>
      <returns>Controllo contenitore, in genere il provider di testo che fornisce l'intervallo di testo. Se tuttavia il provider di testo supporta elementi figlio, quali tabelle o collegamenti ipertestuali, l'elemento contenitore potrebbe essere un discendente del provider di testo.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.GetText(System.Int32)">
      <summary>Recupera il testo normale dell'intervallo.</summary>
      <param name="maxLength">Lunghezza massima della stringa da restituire. Usare <c>-1</c> se non è richiesto alcun limite.</param>
      <returns>Testo normale dell'intervallo di testo, probabilmente troncato all'oggetto <paramref name="maxLength" /> specificato.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Se <paramref name="maxLength" /> è minore di -1.</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)">
      <summary>Sposta l'intervallo di testo di un numero specificato di unità di testo.</summary>
      <param name="unit">Limite di unità di testo.</param>
      <param name="count">Numero di unità di testo da spostare.  
 Un valore positivo consente di spostare l'intervallo di testo in avanti, un valore negativo consente di spostare l'intervallo di testo indietro e 0 non ha effetto.</param>
      <returns>Numero di unità effettivamente spostate. Può essere inferiore al numero richiesto se uno dei nuovi endpoint di intervallo di testo è maggiore o minore degli endpoint di <see cref="P:System.Windows.Automation.Provider.ITextProvider.DocumentRange" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByRange(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)">
      <summary>Sposta un endpoint di un intervallo di testo all'endpoint specificato di un secondo intervallo di testo.</summary>
      <param name="endpoint">Endpoint da spostare.</param>
      <param name="targetRange">Altro intervallo dallo stesso provider di testo.</param>
      <param name="targetEndpoint">Un endpoint nell'altro intervallo.</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)">
      <summary>Sposta un endpoint dell'intervallo di testo del numero specificato di unità di testo nell'intervallo del documento.</summary>
      <param name="endpoint">Endpoint da spostare.</param>
      <param name="unit">Unità testuale per lo spostamento.</param>
      <param name="count">Numero di unità da spostare. Un valore positivo consente di spostare in avanti l'endpoint. Un valore negativo consente di spostarlo indietro. Un valore pari a 0 non ha effetto.</param>
      <returns>Numero di unità effettivamente spostate che può essere inferiore al numero richiesto se gli endpoint vengono spostati verso l'inizio o la fine del documento.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.RemoveFromSelection">
      <summary>Rimuove una sezione evidenziata del testo, corrispondente agli endpoint <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> e <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> del chiamante, dalla raccolta di testo evidenziato in un contenitore di testo che supporta selezioni multiple non contigue.</summary>
      <exception cref="T:System.InvalidOperationException">Se il provider di testo non supporta le selezioni multiple non contigue (ad esempio, <see cref="P:System.Windows.Automation.TextPattern.SupportedTextSelection" /> deve avere un valore pari a <see langword="Multiple" />).</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView(System.Boolean)">
      <summary>Determina lo scorrimento verticale del controllo di testo fino a quando l'intervallo di testo non è visibile nel riquadro di visualizzazione.</summary>
      <param name="alignToTop">
        <see langword="true" /> se il controllo di testo deve essere spostato in modo che l'intervallo di testo sia allineato al margine superiore del riquadro di visualizzazione; <see langword="false" /> se deve essere allineato al margine inferiore del riquadro di visualizzazione.</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.Select">
      <summary>Evidenzia il testo nel controllo di testo corrispondente agli endpoint <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> e <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> dell'intervallo di testo.</summary>
      <exception cref="T:System.InvalidOperationException">Si verifica quando la selezione del testo non è supportata dal controllo del testo.</exception>
    </member>
    <member name="T:System.Windows.Automation.Provider.IToggleProvider">
      <summary>Espone metodi e proprietà per supportare l'accesso client di automazione interfaccia utente per i controlli che possono effettuare cicli attraverso un set di stati e gestire uno stato una volta impostato.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IToggleProvider.Toggle">
      <summary>Scorre gli stati di attivazione o disattivazione di un controllo.</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IToggleProvider.ToggleState">
      <summary>Ottiene lo stato di attivazione o disattivazione del controllo.</summary>
      <returns>Valore <see cref="T:System.Windows.Automation.ToggleState" /> del controllo.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.ITransformProvider">
      <summary>Espone metodi e proprietà per supportare l'accesso client di automazione interfaccia utente ai controlli che è possibile spostare, ridimensionare o ruotare all'interno di uno spazio bidimensionale.</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.ITransformProvider.CanMove">
      <summary>Ottiene un valore che specifica se il controllo può essere spostato.</summary>
      <returns>
        <see langword="true" /> se è possibile spostare l'elemento. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.ITransformProvider.CanResize">
      <summary>Ottiene un valore che specifica se l'elemento Automazione interfaccia utente può essere ridimensionato.</summary>
      <returns>
        <see langword="true" /> se l'elemento può essere ridimensionato. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.ITransformProvider.CanRotate">
      <summary>Ottiene un valore che specifica se il controllo può essere ruotato.</summary>
      <returns>
        <see langword="true" /> se è possibile ruotare l'elemento. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITransformProvider.Move(System.Double,System.Double)">
      <summary>Sposta il controllo.</summary>
      <param name="x">Coordinate assolute dello schermo del lato sinistro del controllo.</param>
      <param name="y">Coordinate assolute dello schermo della parte superiore del controllo.</param>
      <exception cref="T:System.InvalidOperationException">Se la proprietà <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanMove" /> è false.</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITransformProvider.Resize(System.Double,System.Double)">
      <summary>Ridimensiona il controllo.</summary>
      <param name="width">Nuova larghezza della finestra, in pixel.</param>
      <param name="height">Nuova altezza della finestra, in pixel.</param>
      <exception cref="T:System.InvalidOperationException">Se la proprietà <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanResize" /> è false.</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITransformProvider.Rotate(System.Double)">
      <summary>Ruota il controllo.</summary>
      <param name="degrees">Numero di gradi di rotazione del controllo. Un numero positivo ruota in senso orario. Un numero negativo ruota in senso antiorario.</param>
      <exception cref="T:System.InvalidOperationException">Se la proprietà <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanRotate" /> è false.</exception>
    </member>
    <member name="T:System.Windows.Automation.Provider.IValueProvider">
      <summary>Espone metodi e proprietà che supportano l'accesso dei client di automazione interfaccia utente ai controlli con un valore intrinseco che non si estende in un intervallo e che può essere rappresentato come stringa.</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IValueProvider.IsReadOnly">
      <summary>Ottiene un valore che specifica se il valore di un controllo è di sola lettura.</summary>
      <returns>
        <see langword="true" /> se il valore è di sola lettura. <see langword="false" /> se può essere modificato.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)">
      <summary>Imposta il valore di un controllo.</summary>
      <param name="value">Il valore da impostare. Il provider è responsabile della conversione del valore nel tipo di dati appropriato.</param>
      <exception cref="T:System.InvalidOperationException">Se informazioni specifiche delle impostazioni locali vengono passate a un controllo in un formato non corretto, ad esempio una data non formattata correttamente.</exception>
      <exception cref="T:System.ArgumentException">Se un nuovo valore non può essere convertito da una stringa a un formato riconosciuto dal controllo.</exception>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">Quando viene effettuato un tentativo di modificare un controllo non abilitato.</exception>
    </member>
    <member name="P:System.Windows.Automation.Provider.IValueProvider.Value">
      <summary>Ottiene il valore del controllo.</summary>
      <returns>Valore del controllo come stringa.</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IVirtualizedItemProvider">
      <summary>Espone un metodo per supportare il pattern di controllo dell'elemento virtualizzato.</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IVirtualizedItemProvider.Realize">
      <summary>Rende l'elemento virtuale completamente accessibile come elemento di automazione interfaccia utente.</summary>
    </member>
    <member name="T:System.Windows.Automation.Provider.IWindowProvider">
      <summary>Espone i metodi e le proprietà per supportare l'accesso del client di automazione interfaccia utente ai controlli che forniscono importanti funzionalità basate su finestra in una tradizionale interfaccia utente grafica (GUI).</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IWindowProvider.Close">
      <summary>Tenta di chiudere la finestra.</summary>
      <exception cref="T:System.InvalidOperationException">Quando il controllo non è in grado di eseguire l'azione richiesta.</exception>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">Quando l'elemento di destinazione non è più disponibile, ad esempio quando la finestra è stata chiusa.</exception>
    </member>
    <member name="P:System.Windows.Automation.Provider.IWindowProvider.InteractionState">
      <summary>Ottiene lo stato di interazione della finestra.</summary>
      <returns>Valore <see cref="T:System.Windows.Automation.WindowInteractionState" /> del controllo.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IWindowProvider.IsModal">
      <summary>Ottiene un valore che specifica se la finestra è modale.</summary>
      <returns>
        <see langword="true" /> se la finestra è modale; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IWindowProvider.IsTopmost">
      <summary>Ottiene un valore che specifica se la finestra è l'elemento in primo piano nell'ordine z.</summary>
      <returns>
        <see langword="true" /> se la finestra è in primo piano. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IWindowProvider.Maximizable">
      <summary>Ottiene un valore che specifica se la finestra può essere ingrandita.</summary>
      <returns>
        <see langword="true" /> se la finestra può essere ingrandita; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IWindowProvider.Minimizable">
      <summary>Ottiene un valore che specifica se la finestra può essere ridotta a icona.</summary>
      <returns>
        <see langword="true" /> se la finestra può essere ridotta a icona; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IWindowProvider.SetVisualState(System.Windows.Automation.WindowVisualState)">
      <summary>Modifica lo stato di visualizzazione della finestra. Ad esempio, la riduce al minimo o la ingrandisce.</summary>
      <param name="state">Stato di visualizzazione della finestra richiesto.</param>
      <exception cref="T:System.InvalidOperationException">Quando il controllo non supporta il comportamento richiesto.</exception>
    </member>
    <member name="P:System.Windows.Automation.Provider.IWindowProvider.VisualState">
      <summary>Ottiene lo stato di visualizzazione della finestra.</summary>
      <returns>Stato di visualizzazione della finestra.</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IWindowProvider.WaitForInputIdle(System.Int32)">
      <summary>Comporta il blocco del codice chiamante per il lasso di tempo specificato o finché il processo associato non entra in stato di inattività, in base alla prima condizione che viene soddisfatta.</summary>
      <param name="milliseconds">Quantità di tempo, espressa in millisecondi, per cui aspettare che il processo associato diventi inattivo. Il valore massimo è <see cref="F:System.Int32.MaxValue" />.</param>
      <returns>
        <see langword="true" /> se la finestra è diventata inattiva. <see langword="false" /> se si è verificato il timeout.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Quando il parametro è passato non è un numero valido.</exception>
    </member>
    <member name="T:System.Windows.Automation.Provider.NavigateDirection">
      <summary>Contiene valori usati per specificare la direzione di navigazione nell'albero di automazione interfaccia utente.</summary>
    </member>
    <member name="F:System.Windows.Automation.Provider.NavigateDirection.FirstChild">
      <summary>La direzione di navigazione è verso il primo elemento figlio.</summary>
    </member>
    <member name="F:System.Windows.Automation.Provider.NavigateDirection.LastChild">
      <summary>La direzione di navigazione è verso l'ultimo elemento figlio.</summary>
    </member>
    <member name="F:System.Windows.Automation.Provider.NavigateDirection.NextSibling">
      <summary>La direzione di navigazione è verso l'elemento successivo di pari livello.</summary>
    </member>
    <member name="F:System.Windows.Automation.Provider.NavigateDirection.Parent">
      <summary>La direzione di navigazione è verso l'elemento padre.</summary>
    </member>
    <member name="F:System.Windows.Automation.Provider.NavigateDirection.PreviousSibling">
      <summary>La direzione di navigazione è verso l'elemento precedente di pari livello.</summary>
    </member>
    <member name="T:System.Windows.Automation.Provider.ProviderOptions">
      <summary>Contiene valori che specificano il tipo di provider di automazione interfaccia utente.</summary>
    </member>
    <member name="F:System.Windows.Automation.Provider.ProviderOptions.ClientSideProvider">
      <summary>Il provider di automazione interfaccia utente è un provider lato client.</summary>
    </member>
    <member name="F:System.Windows.Automation.Provider.ProviderOptions.NonClientAreaProvider">
      <summary>Il provider di automazione interfaccia utente è un provider area non client.</summary>
    </member>
    <member name="F:System.Windows.Automation.Provider.ProviderOptions.OverrideProvider">
      <summary>Il provider di automazione interfaccia utente esegue l'override di un altro provider.</summary>
    </member>
    <member name="F:System.Windows.Automation.Provider.ProviderOptions.ProviderOwnsSetFocus">
      <summary>Il provider di automazione interfaccia utente gestisce il proprio stato attivo e non consente ad Automazione interfaccia utente di impostare lo stato attivo sulla finestra più vicina per proprio conto quando viene chiamato <see cref="M:System.Windows.Automation.AutomationElement.SetFocus" />. Questa opzione in genere viene usata dai provider per le finestre visualizzate per assumere lo stato attivo senza effettivamente ricevere lo stato attivo di Win32, ad esempio menu e menu a discesa.</summary>
    </member>
    <member name="F:System.Windows.Automation.Provider.ProviderOptions.ServerSideProvider">
      <summary>Il provider di automazione interfaccia utente è un provider lato server.</summary>
    </member>
    <member name="F:System.Windows.Automation.Provider.ProviderOptions.UseComThreading">
      <summary>Il provider di automazione interfaccia utente attende di essere chiamato in base alle regole di threading COM. Se il provider è in un apartment a thread singolo, verrà chiamato solo sul thread apartment. Solo i provider lato server possono usare questa opzione.</summary>
    </member>
  </members>
</doc>