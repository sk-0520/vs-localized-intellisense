<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Drawing.Common</name>
  </assembly>
  <members>
    <member name="T:System.Drawing.Bitmap">
      <summary>封装 GDI+ 位图，此位图由图形图像及其属性的像素数据组成。 <see cref="T:System.Drawing.Bitmap" /> 是用于处理由像素数据定义的图像的对象。</summary>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Drawing.Image)">
      <summary>从指定的现有图像初始化 <see cref="T:System.Drawing.Bitmap" /> 类的新实例。</summary>
      <param name="original">从中创建新 <see cref="T:System.Drawing.Image" /> 的 <see cref="T:System.Drawing.Bitmap" />。</param>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Drawing.Image,System.Drawing.Size)">
      <summary>从指定的现有图像（缩放到指定大小）初始化 <see cref="T:System.Drawing.Bitmap" /> 类的新实例。</summary>
      <param name="original">从中创建新 <see cref="T:System.Drawing.Image" /> 的 <see cref="T:System.Drawing.Bitmap" />。</param>
      <param name="newSize">表示新的 <see cref="T:System.Drawing.Bitmap" /> 大小的 <see cref="T:System.Drawing.Size" /> 结构。</param>
      <exception cref="T:System.Exception">操作失败。</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Drawing.Image,System.Int32,System.Int32)">
      <summary>从指定的现有图像（缩放到指定大小）初始化 <see cref="T:System.Drawing.Bitmap" /> 类的新实例。</summary>
      <param name="original">从中创建新 <see cref="T:System.Drawing.Image" /> 的 <see cref="T:System.Drawing.Bitmap" />。</param>
      <param name="width">新 <see cref="T:System.Drawing.Bitmap" /> 的宽度（以像素为单位）。</param>
      <param name="height">新 <see cref="T:System.Drawing.Bitmap" /> 的高度（以像素为单位）。</param>
      <exception cref="T:System.Exception">操作失败。</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32)">
      <summary>用指定的大小初始化 <see cref="T:System.Drawing.Bitmap" /> 类的新实例。</summary>
      <param name="width">新 <see cref="T:System.Drawing.Bitmap" /> 的宽度（以像素为单位）。</param>
      <param name="height">新 <see cref="T:System.Drawing.Bitmap" /> 的高度（以像素为单位）。</param>
      <exception cref="T:System.Exception">此操作失败。</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Drawing.Graphics)">
      <summary>用指定的大小和指定的 <see cref="T:System.Drawing.Graphics" /> 对象的分辨率初始化 <see cref="T:System.Drawing.Bitmap" /> 类的新实例。</summary>
      <param name="width">新 <see cref="T:System.Drawing.Bitmap" /> 的宽度（以像素为单位）。</param>
      <param name="height">新 <see cref="T:System.Drawing.Bitmap" /> 的高度（以像素为单位）。</param>
      <param name="g">
        <see cref="T:System.Drawing.Graphics" /> 对象，该对象为新 <see cref="T:System.Drawing.Bitmap" /> 指定分辨率。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="g" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat)">
      <summary>用指定的大小和格式初始化 <see cref="T:System.Drawing.Bitmap" /> 类的新实例。</summary>
      <param name="width">新 <see cref="T:System.Drawing.Bitmap" /> 的宽度（以像素为单位）。</param>
      <param name="height">新 <see cref="T:System.Drawing.Bitmap" /> 的高度（以像素为单位）。</param>
      <param name="format">新 <see cref="T:System.Drawing.Bitmap" /> 的像素格式。 这必须指定以格式开头的值<c></c>。</param>
      <exception cref="T:System.ArgumentException">已指定名称不以格式开头的 <see cref="T:System.Drawing.Imaging.PixelFormat" /> 值。 例如，指定 <see cref="F:System.Drawing.Imaging.PixelFormat.Gdi" /> 将导致一个 <see cref="T:System.ArgumentException" />，但 <see cref="F:System.Drawing.Imaging.PixelFormat.Format48bppRgb" /> 不会出现这种情况。</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat,System.IntPtr)">
      <summary>用指定的大小、像素格式和像素数据初始化 <see cref="T:System.Drawing.Bitmap" /> 类的新实例。</summary>
      <param name="width">新 <see cref="T:System.Drawing.Bitmap" /> 的宽度（以像素为单位）。</param>
      <param name="height">新 <see cref="T:System.Drawing.Bitmap" /> 的高度（以像素为单位）。</param>
      <param name="stride">指定相邻扫描行开始处之间字节偏移量的整数。 这通常（但不一定）是以像素格式表示的字节数（例如，2 表示每像素 16 位）乘以位图的宽度。 传递给此参数的值必须为 4 的倍数。</param>
      <param name="format">新 <see cref="T:System.Drawing.Bitmap" /> 的像素格式。 这必须指定以格式开头的值<c></c>。</param>
      <param name="scan0">指针指向包含像素数据的字节数组。</param>
      <exception cref="T:System.ArgumentException">已指定名称不以格式开头的 <see cref="T:System.Drawing.Imaging.PixelFormat" /> 值。 例如，指定 <see cref="F:System.Drawing.Imaging.PixelFormat.Gdi" /> 将导致一个 <see cref="T:System.ArgumentException" />，但 <see cref="F:System.Drawing.Imaging.PixelFormat.Format48bppRgb" /> 不会出现这种情况。</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.IO.Stream)">
      <summary>从指定的数据流初始化 <see cref="T:System.Drawing.Bitmap" /> 类的新实例。</summary>
      <param name="stream">用于加载图像的数据流。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> 不包含图像数据，或者为 <see langword="null" />。  
或 
 <paramref name="stream" /> 包含一个 PNG 图像文件，其一维大于 65,535 像素。</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.IO.Stream,System.Boolean)">
      <summary>从指定的数据流初始化 <see cref="T:System.Drawing.Bitmap" /> 类的新实例。</summary>
      <param name="stream">用于加载图像的数据流。</param>
      <param name="useIcm">如果要为此 <see cref="T:System.Drawing.Bitmap" /> 使用颜色校正，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> 不包含图像数据，或者为 <see langword="null" />。  

或 - 
<paramref name="stream" /> 包含一个 PNG 图像文件，其一维大于 65,535 像素。</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.String)">
      <summary>从指定的文件初始化 <see cref="T:System.Drawing.Bitmap" /> 类的新实例。</summary>
      <param name="filename">位图文件的名称和路径。</param>
      <exception cref="T:System.IO.FileNotFoundException">找不到指定文件。</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.String,System.Boolean)">
      <summary>从指定的文件初始化 <see cref="T:System.Drawing.Bitmap" /> 类的新实例。</summary>
      <param name="filename">位图文件的名称。</param>
      <param name="useIcm">如果要为此 <see cref="T:System.Drawing.Bitmap" /> 使用颜色校正，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Type,System.String)">
      <summary>从指定的资源初始化 <see cref="T:System.Drawing.Bitmap" /> 类的新实例。</summary>
      <param name="type">用于提取资源的类。</param>
      <param name="resource">资源的名称。</param>
    </member>
    <member name="M:System.Drawing.Bitmap.Clone(System.Drawing.Rectangle,System.Drawing.Imaging.PixelFormat)">
      <summary>创建此 <see cref="T:System.Drawing.Bitmap" />（它由 <see cref="T:System.Drawing.Rectangle" /> 结构并使用指定的 <see cref="T:System.Drawing.Imaging.PixelFormat" /> 枚举定义）部分的副本。</summary>
      <param name="rect">定义此 <see cref="T:System.Drawing.Bitmap" /> 中要复制的部分。 坐标相对于此 <see cref="T:System.Drawing.Bitmap" />。</param>
      <param name="format">新 <see cref="T:System.Drawing.Bitmap" /> 的像素格式。 这必须指定以格式开头的值<c></c>。</param>
      <returns>此方法创建的新 <see cref="T:System.Drawing.Bitmap" />。</returns>
      <exception cref="T:System.OutOfMemoryException">
        <paramref name="rect" /> 位于源位图边界之外。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="rect" /> 的高度或宽度为 0。  
或 
已指定名称不以格式开头的 <see cref="T:System.Drawing.Imaging.PixelFormat" /> 值。 例如，指定 <see cref="F:System.Drawing.Imaging.PixelFormat.Gdi" /> 将导致一个 <see cref="T:System.ArgumentException" />，但 <see cref="F:System.Drawing.Imaging.PixelFormat.Format48bppRgb" /> 不会出现这种情况。</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.Clone(System.Drawing.RectangleF,System.Drawing.Imaging.PixelFormat)">
      <summary>创建此 <see cref="T:System.Drawing.Bitmap" />（用指定的 <see cref="T:System.Drawing.Imaging.PixelFormat" /> 枚举定义）部分的副本。</summary>
      <param name="rect">定义此 <see cref="T:System.Drawing.Bitmap" /> 中要复制的部分。</param>
      <param name="format">为目标 <see cref="T:System.Drawing.Bitmap" /> 指定 <see cref="T:System.Drawing.Imaging.PixelFormat" /> 枚举。</param>
      <returns>此方法创建的 <see cref="T:System.Drawing.Bitmap" />。</returns>
      <exception cref="T:System.OutOfMemoryException">
        <paramref name="rect" /> 位于源位图边界之外。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="rect" /> 的高度或宽度为 0。</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.FromHicon(System.IntPtr)">
      <summary>从图标的 Windows 图柄创建 <see cref="T:System.Drawing.Bitmap" />。</summary>
      <param name="hicon">图标的图柄。</param>
      <returns>此方法创建的 <see cref="T:System.Drawing.Bitmap" />。</returns>
    </member>
    <member name="M:System.Drawing.Bitmap.FromResource(System.IntPtr,System.String)">
      <summary>从指定的 Windows 资源创建 <see cref="T:System.Drawing.Bitmap" />。</summary>
      <param name="hinstance">包含该资源的可执行文件的实例图柄。</param>
      <param name="bitmapName">包含资源位图名称的字符串。</param>
      <returns>此方法创建的 <see cref="T:System.Drawing.Bitmap" />。</returns>
    </member>
    <member name="M:System.Drawing.Bitmap.GetHbitmap">
      <summary>从此 <see cref="T:System.Drawing.Bitmap" /> 创建 GDI 位图对象。</summary>
      <returns>此方法创建的 GDI 位图对象的图柄。</returns>
      <exception cref="T:System.ArgumentException">此位图的高度或宽度大于 <see cref="F:System.Int16.MaxValue" />。</exception>
      <exception cref="T:System.Exception">此操作失败。</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.GetHbitmap(System.Drawing.Color)">
      <summary>从此 <see cref="T:System.Drawing.Bitmap" /> 创建 GDI 位图对象。</summary>
      <param name="background">一个 <see cref="T:System.Drawing.Color" /> 结构，指定背景色。 如果位图完全不透明，则忽略此参数。</param>
      <returns>此方法创建的 GDI 位图对象的图柄。</returns>
      <exception cref="T:System.ArgumentException">此位图的高度或宽度大于 <see cref="F:System.Int16.MaxValue" />。</exception>
      <exception cref="T:System.Exception">此操作失败。</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.GetHicon">
      <summary>返回图标的图柄。</summary>
      <returns>图像与 <see cref="T:System.Drawing.Bitmap" /> 相同的图标的 Windows 图柄。</returns>
      <exception cref="T:System.Exception">此操作失败。</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.GetPixel(System.Int32,System.Int32)">
      <summary>获取此 <see cref="T:System.Drawing.Bitmap" /> 中指定像素的颜色。</summary>
      <param name="x">要检索的像素的 X 坐标。</param>
      <param name="y">要检索的像素的 Y 坐标。</param>
      <returns>表示指定像素颜色的 <see cref="T:System.Drawing.Color" /> 结构。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="x" /> 小于 0，或者大于或等于 <see cref="P:System.Drawing.Image.Width" />。  

或 - 
<paramref name="y" /> 小于 0，或者大于或等于 <see cref="P:System.Drawing.Image.Height" />。</exception>
      <exception cref="T:System.Exception">此操作失败。</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.LockBits(System.Drawing.Rectangle,System.Drawing.Imaging.ImageLockMode,System.Drawing.Imaging.PixelFormat)">
      <summary>将 <see cref="T:System.Drawing.Bitmap" /> 锁定到系统内存中。</summary>
      <param name="rect">一个 <see cref="T:System.Drawing.Rectangle" /> 结构，指定要锁定的 <see cref="T:System.Drawing.Bitmap" /> 部分。</param>
      <param name="flags">一个 <see cref="T:System.Drawing.Imaging.ImageLockMode" /> 枚举，指定 <see cref="T:System.Drawing.Bitmap" /> 的访问级别（读/写）。</param>
      <param name="format">一个 <see cref="T:System.Drawing.Imaging.PixelFormat" /> 枚举，指定此 <see cref="T:System.Drawing.Bitmap" /> 的数据格式。</param>
      <returns>包含有关此锁定操作信息的 <see cref="T:System.Drawing.Imaging.BitmapData" />。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Drawing.Imaging.PixelFormat" /> 不是特定的每像素位数值。  

或 - 
为位图传入了错误的 <see cref="T:System.Drawing.Imaging.PixelFormat" />。</exception>
      <exception cref="T:System.Exception">此操作失败。</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.LockBits(System.Drawing.Rectangle,System.Drawing.Imaging.ImageLockMode,System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.BitmapData)">
      <summary>将 <see cref="T:System.Drawing.Bitmap" /> 锁定到系统内存中</summary>
      <param name="rect">一个矩形结构，指定要锁定的 <see cref="T:System.Drawing.Bitmap" /> 部分。</param>
      <param name="flags">某个 <see cref="T:System.Drawing.Imaging.ImageLockMode" /> 值，指定 <see cref="T:System.Drawing.Bitmap" /> 的访问级别（读/写）。</param>
      <param name="format">某个 <see cref="T:System.Drawing.Imaging.PixelFormat" /> 值，指定 <see cref="T:System.Drawing.Bitmap" /> 的数据格式。</param>
      <param name="bitmapData">包含锁定操作信息的 <see cref="T:System.Drawing.Imaging.BitmapData" />。</param>
      <returns>包含锁定操作信息的 <see cref="T:System.Drawing.Imaging.BitmapData" />。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Drawing.Imaging.PixelFormat" /> 值不是特定的每像素位数值。  
或 
为位图传入了错误的 <see cref="T:System.Drawing.Imaging.PixelFormat" />。</exception>
      <exception cref="T:System.Exception">此操作失败。</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.MakeTransparent">
      <summary>让 <see cref="T:System.Drawing.Bitmap" /> 的默认透明颜色为透明。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Drawing.Bitmap" /> 的图像格式为图标格式。</exception>
      <exception cref="T:System.Exception">此操作失败。</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.MakeTransparent(System.Drawing.Color)">
      <summary>使指定的颜色对此 <see cref="T:System.Drawing.Bitmap" /> 透明。</summary>
      <param name="transparentColor">表示要使之透明的颜色的 <see cref="T:System.Drawing.Color" /> 结构。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Drawing.Bitmap" /> 的图像格式为图标格式。</exception>
      <exception cref="T:System.Exception">此操作失败。</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.SetPixel(System.Int32,System.Int32,System.Drawing.Color)">
      <summary>在此 <see cref="T:System.Drawing.Bitmap" /> 中设置指定像素的颜色。</summary>
      <param name="x">要设置的像素的 x 坐标。</param>
      <param name="y">要设置的像素的 y 坐标。</param>
      <param name="color">代表分配到指定像素的颜色的 <see cref="T:System.Drawing.Color" /> 结构。</param>
      <exception cref="T:System.Exception">此操作失败。</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.SetResolution(System.Single,System.Single)">
      <summary>设置此 <see cref="T:System.Drawing.Bitmap" /> 的分辨率。</summary>
      <param name="xDpi">
        <see cref="T:System.Drawing.Bitmap" /> 的水平分辨率（以“点/英寸”为单位）。</param>
      <param name="yDpi">
        <see cref="T:System.Drawing.Bitmap" /> 的垂直分辨率（以“点/英寸”为单位）。</param>
      <exception cref="T:System.Exception">此操作失败。</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.UnlockBits(System.Drawing.Imaging.BitmapData)">
      <summary>从系统内存解锁此 <see cref="T:System.Drawing.Bitmap" />。</summary>
      <param name="bitmapdata">一个 <see cref="T:System.Drawing.Imaging.BitmapData" />，指定有关锁定操作的信息。</param>
      <exception cref="T:System.Exception">此操作失败。</exception>
    </member>
    <member name="T:System.Drawing.BitmapSuffixInSameAssemblyAttribute">
      <summary>指定，当解释 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 声明时，程序集应在同样的程序集中的资源查找，但是，与 <see cref="P:System.Drawing.Configuration.SystemDrawingSection.BitmapSuffix" /> 配置值追加到该声明的文件名。</summary>
    </member>
    <member name="M:System.Drawing.BitmapSuffixInSameAssemblyAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.BitmapSuffixInSameAssemblyAttribute" /> 类的新实例。</summary>
    </member>
    <member name="T:System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute">
      <summary>指定，当解释 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 声明时，程序集应在附属程序集中的资源查找，但是，与 <see cref="P:System.Drawing.Configuration.SystemDrawingSection.BitmapSuffix" /> 配置值追加到该声明的文件名。</summary>
    </member>
    <member name="M:System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute" /> 类的新实例。</summary>
    </member>
    <member name="T:System.Drawing.Brush">
      <summary>定义用于填充图形形状（如矩形、椭圆、饼形、多边形和封闭路径）的内部的对象。</summary>
    </member>
    <member name="M:System.Drawing.Brush.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.Brush" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Drawing.Brush.Clone">
      <summary>当在派生类中重写时，创建此 <see cref="T:System.Drawing.Brush" /> 的一个精确副本。</summary>
      <returns>此方法创建的新 <see cref="T:System.Drawing.Brush" />。</returns>
    </member>
    <member name="M:System.Drawing.Brush.Dispose">
      <summary>释放由此 <see cref="T:System.Drawing.Brush" /> 对象使用的所有资源。</summary>
    </member>
    <member name="M:System.Drawing.Brush.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Drawing.Brush" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Drawing.Brush.Finalize">
      <summary>在垃圾回收将某一对象回收前允许该对象尝试释放资源并执行其他清理操作。</summary>
    </member>
    <member name="M:System.Drawing.Brush.SetNativeBrush(System.IntPtr)">
      <summary>在派生类中，设置对 GDI+ 画笔对象的引用。</summary>
      <param name="brush">一个指向 GDI+ 画笔对象的指针。</param>
    </member>
    <member name="T:System.Drawing.Brushes">
      <summary>所有标准颜色的画笔。 此类不能被继承。</summary>
    </member>
    <member name="P:System.Drawing.Brushes.AliceBlue">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.AntiqueWhite">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Aqua">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Aquamarine">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Azure">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Beige">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Bisque">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Black">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.BlanchedAlmond">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Blue">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.BlueViolet">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Brown">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.BurlyWood">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.CadetBlue">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Chartreuse">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Chocolate">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Coral">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.CornflowerBlue">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Cornsilk">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Crimson">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Cyan">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkBlue">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkCyan">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkGoldenrod">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkGray">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkGreen">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkKhaki">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkMagenta">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkOliveGreen">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkOrange">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkOrchid">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkRed">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkSalmon">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkSeaGreen">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkSlateBlue">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkSlateGray">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkTurquoise">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkViolet">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DeepPink">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DeepSkyBlue">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DimGray">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DodgerBlue">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Firebrick">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.FloralWhite">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.ForestGreen">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Fuchsia">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Gainsboro">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.GhostWhite">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Gold">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Goldenrod">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Gray">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Green">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.GreenYellow">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Honeydew">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.HotPink">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.IndianRed">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Indigo">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Ivory">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Khaki">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Lavender">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LavenderBlush">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LawnGreen">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LemonChiffon">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightBlue">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightCoral">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightCyan">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightGoldenrodYellow">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightGray">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightGreen">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightPink">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightSalmon">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightSeaGreen">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightSkyBlue">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightSlateGray">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightSteelBlue">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightYellow">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Lime">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LimeGreen">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Linen">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Magenta">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Maroon">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumAquamarine">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumBlue">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumOrchid">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumPurple">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumSeaGreen">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumSlateBlue">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumSpringGreen">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumTurquoise">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumVioletRed">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MidnightBlue">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MintCream">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MistyRose">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Moccasin">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.NavajoWhite">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Navy">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.OldLace">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Olive">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.OliveDrab">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Orange">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.OrangeRed">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Orchid">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.PaleGoldenrod">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.PaleGreen">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.PaleTurquoise">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.PaleVioletRed">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.PapayaWhip">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.PeachPuff">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Peru">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Pink">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Plum">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.PowderBlue">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Purple">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Red">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.RosyBrown">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.RoyalBlue">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.SaddleBrown">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Salmon">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.SandyBrown">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.SeaGreen">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.SeaShell">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Sienna">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Silver">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.SkyBlue">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.SlateBlue">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.SlateGray">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Snow">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.SpringGreen">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.SteelBlue">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Tan">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Teal">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Thistle">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Tomato">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Transparent">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Turquoise">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Violet">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Wheat">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.White">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.WhiteSmoke">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Yellow">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.YellowGreen">
      <summary>获取系统定义的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="T:System.Drawing.BufferedGraphics">
      <summary>为双缓冲提供图形缓冲区。</summary>
    </member>
    <member name="M:System.Drawing.BufferedGraphics.Dispose">
      <summary>释放由 <see cref="T:System.Drawing.BufferedGraphics" /> 对象使用的所有资源。</summary>
    </member>
    <member name="M:System.Drawing.BufferedGraphics.Finalize">
      <summary>在垃圾回收将某一对象回收前允许该对象尝试释放资源并执行其他清理操作。</summary>
    </member>
    <member name="P:System.Drawing.BufferedGraphics.Graphics">
      <summary>获取输出到图形缓冲区的 <see cref="T:System.Drawing.Graphics" /> 对象。</summary>
      <returns>输出到图形缓冲区的 <see cref="T:System.Drawing.Graphics" /> 对象。</returns>
    </member>
    <member name="M:System.Drawing.BufferedGraphics.Render">
      <summary>将图形缓冲区的内容写入默认设备。</summary>
    </member>
    <member name="M:System.Drawing.BufferedGraphics.Render(System.Drawing.Graphics)">
      <summary>将图形缓冲区的内容写入指定的 <see cref="T:System.Drawing.Graphics" /> 对象。</summary>
      <param name="target">一个 <see cref="T:System.Drawing.Graphics" /> 对象，要向其中写入图形缓冲区的内容。</param>
    </member>
    <member name="M:System.Drawing.BufferedGraphics.Render(System.IntPtr)">
      <summary>将图形缓冲区的内容写入与指定的 <see cref="T:System.IntPtr" /> 句柄关联的设备上下文。</summary>
      <param name="targetDC">
        <see cref="T:System.IntPtr" /> 指向设备上下文，图形缓冲区的内容将被写入这个设备上下文。</param>
    </member>
    <member name="T:System.Drawing.BufferedGraphicsContext">
      <summary>提供创建图形缓冲区的方法，该缓冲区可用于双缓冲。</summary>
    </member>
    <member name="M:System.Drawing.BufferedGraphicsContext.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.BufferedGraphicsContext" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>使用指定的 <see cref="T:System.Drawing.Graphics" /> 的像素格式，创建指定大小的图形缓冲区。</summary>
      <param name="targetGraphics">
        <see cref="T:System.Drawing.Graphics" /> 与新缓冲区的像素格式匹配。</param>
      <param name="targetRectangle">一个 <see cref="T:System.Drawing.Rectangle" />，指示要创建的缓冲区的大小。</param>
      <returns>一个 <see cref="T:System.Drawing.BufferedGraphics" />，可用于绘制到指定尺寸的缓冲区。</returns>
    </member>
    <member name="M:System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)">
      <summary>使用指定的 <see cref="T:System.Drawing.Graphics" /> 的像素格式，创建指定大小的图形缓冲区。</summary>
      <param name="targetDC">
        <see cref="T:System.IntPtr" /> 指向一个设备上下文，这个设备上下文与新缓冲区的象素格式匹配。</param>
      <param name="targetRectangle">一个 <see cref="T:System.Drawing.Rectangle" />，指示要创建的缓冲区的大小。</param>
      <returns>一个 <see cref="T:System.Drawing.BufferedGraphics" />，可用于绘制到指定尺寸的缓冲区。</returns>
    </member>
    <member name="M:System.Drawing.BufferedGraphicsContext.Dispose">
      <summary>释放由 <see cref="T:System.Drawing.BufferedGraphicsContext" /> 使用的所有资源。</summary>
    </member>
    <member name="M:System.Drawing.BufferedGraphicsContext.Finalize">
      <summary>在垃圾回收将某一对象回收前允许该对象尝试释放资源并执行其他清理操作。</summary>
    </member>
    <member name="M:System.Drawing.BufferedGraphicsContext.Invalidate">
      <summary>如果某个缓冲区已被分配但尚未释放，则释放当前的图形缓冲区。</summary>
    </member>
    <member name="P:System.Drawing.BufferedGraphicsContext.MaximumBuffer">
      <summary>获取或设置要使用的缓冲区的最大大小。</summary>
      <returns>一个 <see cref="T:System.Drawing.Size" />，指示缓冲区尺寸的最大大小。</returns>
      <exception cref="T:System.ArgumentException">缓冲区大小的高度或宽度小于或等于零。</exception>
    </member>
    <member name="T:System.Drawing.BufferedGraphicsManager">
      <summary>提供对应用程序域的主缓冲图形上下文对象的访问。</summary>
    </member>
    <member name="P:System.Drawing.BufferedGraphicsManager.Current">
      <summary>获取当前应用程序域的 <see cref="T:System.Drawing.BufferedGraphicsContext" />。</summary>
      <returns>当前应用程序域的 <see cref="T:System.Drawing.BufferedGraphicsContext" />。</returns>
    </member>
    <member name="T:System.Drawing.CharacterRange">
      <summary>指定字符串内字符位置的范围。</summary>
    </member>
    <member name="M:System.Drawing.CharacterRange.#ctor(System.Int32,System.Int32)">
      <summary>指定字符串内字符位置的范围，初始化 <see cref="T:System.Drawing.CharacterRange" /> 结构的新实例。</summary>
      <param name="First">此范围内第一个字符的位置。 例如，如果 <paramref name="First" /> 设置为 0，那么此范围的第一个位置是字符串中的位置 0。</param>
      <param name="Length">此范围内的位置数。</param>
    </member>
    <member name="M:System.Drawing.CharacterRange.Equals(System.Object)">
      <summary>获取指示此对象是否与指定对象等效的值。</summary>
      <param name="obj">要进行等效性比较的对象。</param>
      <returns>如果指定对象是与此实例具有相同的 <see cref="P:System.Drawing.CharacterRange.First" /> 和 <see cref="P:System.Drawing.CharacterRange.Length" /> 值的实例，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.CharacterRange.First">
      <summary>获取或设置字符串中此 <see cref="T:System.Drawing.CharacterRange" /> 的第一个字符的位置。</summary>
      <returns>此 <see cref="T:System.Drawing.CharacterRange" /> 的第一个位置。</returns>
    </member>
    <member name="M:System.Drawing.CharacterRange.GetHashCode">
      <summary>返回此实例的哈希代码。</summary>
      <returns>一个 32 位带符号整数，它是此实例的哈希代码。</returns>
    </member>
    <member name="P:System.Drawing.CharacterRange.Length">
      <summary>获取或设置此 <see cref="T:System.Drawing.CharacterRange" /> 中的位置数。</summary>
      <returns>此 <see cref="T:System.Drawing.CharacterRange" /> 中的位置数。</returns>
    </member>
    <member name="M:System.Drawing.CharacterRange.op_Equality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)">
      <summary>比较两个 <see cref="T:System.Drawing.CharacterRange" /> 对象。 指示两个 <see cref="T:System.Drawing.CharacterRange" /> 对象的 <see cref="P:System.Drawing.CharacterRange.First" /> 和 <see cref="P:System.Drawing.CharacterRange.Length" /> 值是否相等的值。</summary>
      <param name="cr1">要比较等效性的 <see cref="T:System.Drawing.CharacterRange" />。</param>
      <param name="cr2">要比较等效性的 <see cref="T:System.Drawing.CharacterRange" />。</param>
      <returns>如果两个 <see cref="T:System.Drawing.CharacterRange" /> 对象的 <see cref="P:System.Drawing.CharacterRange.First" /> 和 <see cref="P:System.Drawing.CharacterRange.Length" /> 值均相同，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.CharacterRange.op_Inequality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)">
      <summary>比较两个 <see cref="T:System.Drawing.CharacterRange" /> 对象。 指示两个 <see cref="T:System.Drawing.CharacterRange" /> 对象的 <see cref="P:System.Drawing.CharacterRange.First" /> 和 <see cref="P:System.Drawing.CharacterRange.Length" /> 值是否不等的值。</summary>
      <param name="cr1">要比较不等性的 <see cref="T:System.Drawing.CharacterRange" />。</param>
      <param name="cr2">要比较不等性的 <see cref="T:System.Drawing.CharacterRange" />。</param>
      <returns>如果两个 <see cref="T:System.Drawing.CharacterRange" /> 对象的 <see cref="P:System.Drawing.CharacterRange.First" /> 或 <see cref="P:System.Drawing.CharacterRange.Length" /> 值中的任一个不同，为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Drawing.ColorTranslator">
      <summary>将颜色翻译成 GDI+ <see cref="T:System.Drawing.Color" /> 结构并从该结构翻译颜色。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Drawing.ColorTranslator.FromHtml(System.String)">
      <summary>将 HTML 颜色表示形式翻译成 GDI+ <see cref="T:System.Drawing.Color" /> 结构。</summary>
      <param name="htmlColor">要翻译的 Html 颜色的字符串表示形式。</param>
      <returns>表示已翻译的 HTML 颜色或 <see cref="T:System.Drawing.Color" /> 的<see cref="F:System.Drawing.Color.Empty" /> 结构（如果 <paramref name="htmlColor" /> 为 <see langword="null" />）。</returns>
      <exception cref="T:System.Exception">
        <paramref name="htmlColor" /> 不是有效的 HTML 颜色名称。</exception>
    </member>
    <member name="M:System.Drawing.ColorTranslator.FromOle(System.Int32)">
      <summary>将 OLE 颜色值翻译成 GDI+ <see cref="T:System.Drawing.Color" /> 结构。</summary>
      <param name="oleColor">要翻译的 OLE 颜色。</param>
      <returns>表示已翻译的 OLE 颜色的 <see cref="T:System.Drawing.Color" /> 结构。</returns>
    </member>
    <member name="M:System.Drawing.ColorTranslator.FromWin32(System.Int32)">
      <summary>将 Windows 颜色值翻译成 GDI+ <see cref="T:System.Drawing.Color" /> 结构。</summary>
      <param name="win32Color">要翻译的 Windows 颜色。</param>
      <returns>表示已翻译的 Windows 颜色的 <see cref="T:System.Drawing.Color" /> 结构。</returns>
    </member>
    <member name="M:System.Drawing.ColorTranslator.ToHtml(System.Drawing.Color)">
      <summary>将指定的 <see cref="T:System.Drawing.Color" /> 结构翻译成 HTML 字符串颜色表示形式。</summary>
      <param name="c">要转换的 <see cref="T:System.Drawing.Color" /> 结构。</param>
      <returns>表示 HTML 颜色的字符串。</returns>
    </member>
    <member name="M:System.Drawing.ColorTranslator.ToOle(System.Drawing.Color)">
      <summary>将指定的 <see cref="T:System.Drawing.Color" /> 结构翻译成 OLE 颜色。</summary>
      <param name="c">要转换的 <see cref="T:System.Drawing.Color" /> 结构。</param>
      <returns>OLE 颜色值。</returns>
    </member>
    <member name="M:System.Drawing.ColorTranslator.ToWin32(System.Drawing.Color)">
      <summary>将指定的 <see cref="T:System.Drawing.Color" /> 结构翻译成 Windows 颜色。</summary>
      <param name="c">要转换的 <see cref="T:System.Drawing.Color" /> 结构。</param>
      <returns>Windows 颜色值。</returns>
    </member>
    <member name="T:System.Drawing.ContentAlignment">
      <summary>指定绘图表面上内容的对齐方式。</summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.BottomCenter">
      <summary>内容在垂直方向上底边对齐，在水平方向上居中对齐。</summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.BottomLeft">
      <summary>内容在垂直方向上底边对齐，在水平方向上左边对齐。</summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.BottomRight">
      <summary>内容在垂直方向上底边对齐，在水平方向上右边对齐。</summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.MiddleCenter">
      <summary>内容在垂直方向上中间对齐，在水平方向上居中对齐。</summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.MiddleLeft">
      <summary>内容在垂直方向上中间对齐，在水平方向上左边对齐。</summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.MiddleRight">
      <summary>内容在垂直方向上中间对齐，在水平方向上右边对齐。</summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.TopCenter">
      <summary>内容在垂直方向上顶部对齐，在水平方向上居中对齐。</summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.TopLeft">
      <summary>内容在垂直方向上顶部对齐，在水平方向上左边对齐。</summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.TopRight">
      <summary>内容在垂直方向上顶部对齐，在水平方向上右边对齐。</summary>
    </member>
    <member name="T:System.Drawing.CopyPixelOperation">
      <summary>确定复制像素操作中的源颜色如何与目标颜色组合生成最终颜色。</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.Blackness">
      <summary>通过使用物理调色板中与索引 0 关联的颜色来填充目标区域。 （对于默认的物理调色板，该颜色为黑色。）</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.CaptureBlt">
      <summary>生成的图像中包含您的窗口上层叠的那些窗口。 默认情况下，该图像仅包含您的窗口。 请注意，这通常无法用于打印设备上下文。</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.DestinationInvert">
      <summary>目标区域已逆转。</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.MergeCopy">
      <summary>使用布尔运算符 <see langword="AND" /> 将源区域的颜色与目标设备上下文的所选定画笔的颜色合并。</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.MergePaint">
      <summary>通过使用布尔运算符 <see langword="OR" /> 将已逆转的源区域的颜色与目标区域的颜色合并。</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.NoMirrorBitmap">
      <summary>位图未映射。</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.NotSourceCopy">
      <summary>逆转的源区域已复制到目标。</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.NotSourceErase">
      <summary>使用布尔运算符 <see langword="OR" /> 组合源颜色和目标颜色，然后逆转生成的颜色。</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.PatCopy">
      <summary>目标设备上下文中当前选定的画笔被复制到目标位图。</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.PatInvert">
      <summary>使用布尔运算符 <see langword="XOR" /> 将目标设备上下文中当前选定的画笔颜色与目标的颜色组合。</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.PatPaint">
      <summary>使用布尔运算符 <see langword="OR" /> 将目标设备上下文中当前选定的画笔颜色与已逆转的源区域的颜色组合。 使用布尔运算符 <see langword="OR" /> 将该运算的结果与目标区域的颜色组合。</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.SourceAnd">
      <summary>使用布尔运算符 <see langword="AND" /> 将源区域与目标区域的颜色组合。</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.SourceCopy">
      <summary>源区域已直接复制到目标区域。</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.SourceErase">
      <summary>使用布尔运算符 <see langword="AND" /> 将目标区域的逆转后的颜色与源区域的颜色组合。</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.SourceInvert">
      <summary>使用布尔运算符 <see langword="XOR" /> 将源区域与目标区域的颜色组合。</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.SourcePaint">
      <summary>使用布尔运算符 <see langword="OR" /> 将源区域与目标区域的颜色组合。</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.Whiteness">
      <summary>通过使用物理调色板中与索引 1 关联的颜色来填充目标区域。 （对于默认的物理调色板，该颜色为白色。）</summary>
    </member>
    <member name="T:System.Drawing.Design.CategoryNameCollection">
      <summary>表示类别名称字符串的集合。</summary>
    </member>
    <member name="M:System.Drawing.Design.CategoryNameCollection.#ctor(System.Drawing.Design.CategoryNameCollection)">
      <summary>使用指定的集合初始化 <see cref="T:System.Drawing.Design.CategoryNameCollection" /> 类的新实例。</summary>
      <param name="value">包含名称的 <see cref="T:System.Drawing.Design.CategoryNameCollection" />，集合的值就初始化为这些名称。</param>
    </member>
    <member name="M:System.Drawing.Design.CategoryNameCollection.#ctor(System.String[])">
      <summary>使用指定的名称数组初始化 <see cref="T:System.Drawing.Design.CategoryNameCollection" /> 类的新实例。</summary>
      <param name="value">包含类别名称的字符串数组，集合的值就初始化为这些类别名称。</param>
    </member>
    <member name="M:System.Drawing.Design.CategoryNameCollection.Contains(System.String)">
      <summary>指示指定的类别是否包含在集合中。</summary>
      <param name="value">要在集合中检查的字符串。</param>
      <returns>如果指定的类别包含在集合中，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.CategoryNameCollection.CopyTo(System.String[],System.Int32)">
      <summary>将集合元素复制到指定索引处的指定数组。</summary>
      <param name="array">要复制到的数组。</param>
      <param name="index">开始复制处的目标数组的索引。</param>
    </member>
    <member name="M:System.Drawing.Design.CategoryNameCollection.IndexOf(System.String)">
      <summary>获取指定值的索引。</summary>
      <param name="value">要在集合中检索其索引的类别名称。</param>
      <returns>集合中的索引，如果集合中不存在此字符串则为 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Drawing.Design.CategoryNameCollection.Item(System.Int32)">
      <summary>获取指定索引处的类别名称。</summary>
      <param name="index">要访问的集合元素的索引。</param>
      <returns>指定索引处的类别名称。</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.AdjustableArrowCap">
      <summary>表示可调整的箭头形状的线的末端。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.AdjustableArrowCap.#ctor(System.Single,System.Single)">
      <summary>使用指定的宽度和高度初始化 <see cref="T:System.Drawing.Drawing2D.AdjustableArrowCap" /> 类的新实例。 始终填充用此构造函数创建的箭头末端。</summary>
      <param name="width">箭头宽度。</param>
      <param name="height">箭头高度。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.AdjustableArrowCap.#ctor(System.Single,System.Single,System.Boolean)">
      <summary>使用指定的宽度、高度和填充属性初始化 <see cref="T:System.Drawing.Drawing2D.AdjustableArrowCap" /> 类的新实例。 箭头末端是否填充取决于传递给 <paramref name="isFilled" /> 参数的自变量。</summary>
      <param name="width">箭头宽度。</param>
      <param name="height">箭头高度。</param>
      <param name="isFilled">若要填充箭头末端，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.AdjustableArrowCap.Filled">
      <summary>获取或设置是否填充箭头末端。</summary>
      <returns>如果填充箭头帽，该属性为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.AdjustableArrowCap.Height">
      <summary>获取或设置箭头末端的高度。</summary>
      <returns>箭头帽高度。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.AdjustableArrowCap.MiddleInset">
      <summary>获取或设置箭头末端的边框和填充之间的单位数量。</summary>
      <returns>箭头帽的轮廓和箭头帽的填充之间单位的数目。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.AdjustableArrowCap.Width">
      <summary>获取或设置箭头末端的宽度。</summary>
      <returns>按单位计的箭头帽的宽度。</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.Blend">
      <summary>定义 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 对象的混合图案。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Blend.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.Drawing2D.Blend" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Blend.#ctor(System.Int32)">
      <summary>用指定的因子和位置的数目初始化 <see cref="T:System.Drawing.Drawing2D.Blend" /> 类的新实例。</summary>
      <param name="count">
        <see cref="P:System.Drawing.Drawing2D.Blend.Factors" /> 和 <see cref="P:System.Drawing.Drawing2D.Blend.Positions" /> 数组中元素的数目。</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.Blend.Factors">
      <summary>获取或设置用于渐变的混合因子数组。</summary>
      <returns>混合因子数组，这些因子指定在相应位置处使用的起始色和结束色的百分比。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.Blend.Positions">
      <summary>获取或设置渐变的混合位置的数组。</summary>
      <returns>混合位置的数组，这些位置指定沿渐变线距离的百分比。</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.ColorBlend">
      <summary>定义用于在多色渐变中以内插值取代颜色混合的颜色和位置的数组。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.ColorBlend.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.Drawing2D.ColorBlend" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.ColorBlend.#ctor(System.Int32)">
      <summary>使用指定的颜色和位置的数目初始化 <see cref="T:System.Drawing.Drawing2D.ColorBlend" /> 类的新实例。</summary>
      <param name="count">在此 <see cref="T:System.Drawing.Drawing2D.ColorBlend" /> 中颜色和位置的数目。</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.ColorBlend.Colors">
      <summary>获取或设置表示在沿渐变的相应位置处使用的颜色的颜色数组。</summary>
      <returns>
        <see cref="T:System.Drawing.Color" /> 结构数组，表示在沿渐变的相应位置处使用的颜色。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.ColorBlend.Positions">
      <summary>获取或设置沿渐变线的位置。</summary>
      <returns>值数组，指定沿渐变线距离的百分比。</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.CombineMode">
      <summary>指定如何组合不同的剪辑区域。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CombineMode.Complement">
      <summary>指定由从新区域移除的现有区域的结果替代现有区域。 换言之，从新区域中排除现有区域。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CombineMode.Exclude">
      <summary>指定由从现有区域移除的新区域的结果替代现有区域。 换言之，从现有区域中排除新区域。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CombineMode.Intersect">
      <summary>通过采用两个剪辑区域的交集组合两个剪辑区域。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CombineMode.Replace">
      <summary>一个剪辑区域被另一个剪辑区域替代。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CombineMode.Union">
      <summary>通过采用两个剪辑区域的联合组合两个剪辑区域。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CombineMode.Xor">
      <summary>通过只采纳单独由其中一个区域（而非两个区域一起）包括的范围来组合两个剪辑区域。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.CompositingMode">
      <summary>指定源色与背景色组合的方式。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingMode.SourceCopy">
      <summary>指定在呈现颜色时，它覆盖背景色。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingMode.SourceOver">
      <summary>指定在呈现颜色时，它与背景色混合。 该混合由所呈现的颜色的 alpha 成分确定。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.CompositingQuality">
      <summary>指定在复合期间使用的质量等级。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingQuality.AssumeLinear">
      <summary>假定线性值。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingQuality.Default">
      <summary>默认质量。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingQuality.GammaCorrected">
      <summary>使用灰度校正。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingQuality.HighQuality">
      <summary>高质量、低速度复合。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingQuality.HighSpeed">
      <summary>高速度、低质量。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingQuality.Invalid">
      <summary>无效质量。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.CoordinateSpace">
      <summary>指定计算坐标时使用的系统。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CoordinateSpace.Device">
      <summary>指定设备坐标上下文中存在坐标。 在计算机屏幕上，设备坐标通常以像素为单位进行测量。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CoordinateSpace.Page">
      <summary>指定页面坐标上下文中存在坐标。 其单位由 <see cref="P:System.Drawing.Graphics.PageUnit" /> 属性定义，并且必须是 <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的其中一个元素。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CoordinateSpace.World">
      <summary>指定世界坐标上下文中存在坐标。 世界坐标上下文用于非物理环境中，例如建模环境。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.CustomLineCap">
      <summary>封装自定义的用户定义的线帽。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)">
      <summary>使用指定的轮廓和填充初始化 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 类的新实例。</summary>
      <param name="fillPath">定义自定义线帽填充内容的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 对象。</param>
      <param name="strokePath">定义自定义线帽轮廓的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 对象。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap)">
      <summary>通过指定的轮廓和填充从指定的现有 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 枚举初始化 <see cref="T:System.Drawing.Drawing2D.LineCap" /> 类的新实例。</summary>
      <param name="fillPath">定义自定义线帽填充内容的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 对象。</param>
      <param name="strokePath">定义自定义线帽轮廓的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 对象。</param>
      <param name="baseCap">创建自定义线帽时所基于的线帽。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap,System.Single)">
      <summary>通过指定的轮廓、填充和嵌入从指定的现有 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 枚举初始化 <see cref="T:System.Drawing.Drawing2D.LineCap" /> 类的新实例。</summary>
      <param name="fillPath">定义自定义线帽填充内容的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 对象。</param>
      <param name="strokePath">定义自定义线帽轮廓的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 对象。</param>
      <param name="baseCap">创建自定义线帽时所基于的线帽。</param>
      <param name="baseInset">线帽和直线之间的距离。</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.CustomLineCap.BaseCap">
      <summary>获取或设置该 <see cref="T:System.Drawing.Drawing2D.LineCap" /> 所基于的 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 枚举。</summary>
      <returns>该 <see cref="T:System.Drawing.Drawing2D.LineCap" /> 所基于的 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 枚举。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.CustomLineCap.BaseInset">
      <summary>获取或设置线帽和直线之间的距离。</summary>
      <returns>线帽的起始处和直线的结束处之间的距离。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.Clone">
      <summary>创建此 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 的一个精确副本。</summary>
      <returns>该方法创建的、强制转换为对象的 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" />。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.Dispose">
      <summary>释放由此 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 对象使用的所有资源。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">
        <see langword="true" /> 表示释放托管资源和非托管资源；<see langword="false" /> 表示仅释放非托管资源。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.Finalize">
      <summary>允许 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 在"垃圾回收"回收 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 之前尝试释放资源并执行其他清理操作。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps(System.Drawing.Drawing2D.LineCap@,System.Drawing.Drawing2D.LineCap@)">
      <summary>获取用于构成此自定义线帽的起始直线和结束直线的线帽。</summary>
      <param name="startCap">此线帽内直线开始处所用的 <see cref="T:System.Drawing.Drawing2D.LineCap" /> 枚举。</param>
      <param name="endCap">此线帽内直线结尾处所用的 <see cref="T:System.Drawing.Drawing2D.LineCap" /> 枚举。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap)">
      <summary>设置用于构成此自定义线帽的起始直线和结束直线的线帽。</summary>
      <param name="startCap">此线帽内直线开始处所用的 <see cref="T:System.Drawing.Drawing2D.LineCap" /> 枚举。</param>
      <param name="endCap">此线帽内直线结尾处所用的 <see cref="T:System.Drawing.Drawing2D.LineCap" /> 枚举。</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.CustomLineCap.StrokeJoin">
      <summary>获取或设置 <see cref="T:System.Drawing.Drawing2D.LineJoin" /> 枚举，该枚举确定如何联接构成此 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 对象的直线。</summary>
      <returns>该 <see cref="T:System.Drawing.Drawing2D.LineJoin" /> 对象用来联接直线的 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 枚举。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.CustomLineCap.WidthScale">
      <summary>获取或设置相对于 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 对象的宽度此 <see cref="T:System.Drawing.Pen" /> 类对象的缩放量。</summary>
      <returns>此线帽的缩放量。</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.DashCap">
      <summary>指定虚线中在每一划线段的两端使用的图形形状的类型。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashCap.Flat">
      <summary>指定每一划线段的两端均为方形的方帽。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashCap.Round">
      <summary>指定每一划线段的两端均为圆角的圆帽。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashCap.Triangle">
      <summary>指定每一划线段的两端均为带尖的三角帽。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.DashStyle">
      <summary>指定用 <see cref="T:System.Drawing.Pen" /> 对象绘制的虚线的样式。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashStyle.Custom">
      <summary>指定用户定义的自定义划线段样式。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashStyle.Dash">
      <summary>指定由划线段组成的直线。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashStyle.DashDot">
      <summary>指定由重复的划线点图案构成的直线。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashStyle.DashDotDot">
      <summary>指定由重复的划线点点图案构成的直线。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashStyle.Dot">
      <summary>指定由点构成的直线。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashStyle.Solid">
      <summary>指定实线。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.FillMode">
      <summary>指定如何填充闭合路径的内部。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.FillMode.Alternate">
      <summary>指定交替填充模式。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.FillMode.Winding">
      <summary>指定环绕填充模式。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.FlushIntention">
      <summary>指定是立即终止（刷新）还是尽快执行图形堆栈中的命令。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.FlushIntention.Flush">
      <summary>指定立即刷新所有图形操作的堆栈。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.FlushIntention.Sync">
      <summary>指定尽快执行堆栈上的所有图形操作。 这将同步图形状态。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.GraphicsContainer">
      <summary>表示图形容器的内部数据。 当使用 <see cref="T:System.Drawing.Graphics" /> 和 <see cref="M:System.Drawing.Graphics.BeginContainer" /> 方法保存 <see cref="M:System.Drawing.Graphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)" /> 对象的状态时使用此类。 此类不能被继承。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.GraphicsPath">
      <summary>表示一系列相互连接的直线和曲线。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor">
      <summary>用 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 的 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.FillMode" /> 值初始化 <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Drawing2D.FillMode)">
      <summary>使用指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 枚举初始化 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 类的新实例。</summary>
      <param name="fillMode">
        <see cref="T:System.Drawing.Drawing2D.FillMode" /> 枚举，它确定填充此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 内部的方式。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[])">
      <summary>使用指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 和 <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 数组初始化 <see cref="T:System.Drawing.Point" /> 类的新实例。</summary>
      <param name="pts">
        <see cref="T:System.Drawing.Point" /> 结构的数组，它定义组成此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 的点的坐标。</param>
      <param name="types">
        <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 枚举元素的数组，它指定 <paramref name="pts" /> 数组中各相应点的类型。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[],System.Drawing.Drawing2D.FillMode)">
      <summary>使用指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 和 <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 数组以及指定的 <see cref="T:System.Drawing.Point" /> 枚举元素初始化 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 类的新实例。</summary>
      <param name="pts">
        <see cref="T:System.Drawing.Point" /> 结构的数组，它定义组成此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 的点的坐标。</param>
      <param name="types">
        <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 枚举元素的数组，它指定 <paramref name="pts" /> 数组中各相应点的类型。</param>
      <param name="fillMode">一个 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 枚举，它指定此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 中的形状的内部如何填充。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[])">
      <summary>使用指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 和 <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 数组初始化 <see cref="T:System.Drawing.PointF" /> 数组的新实例。</summary>
      <param name="pts">
        <see cref="T:System.Drawing.PointF" /> 结构的数组，它定义组成此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 的点的坐标。</param>
      <param name="types">
        <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 枚举元素的数组，它指定 <paramref name="pts" /> 数组中各相应点的类型。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[],System.Drawing.Drawing2D.FillMode)">
      <summary>使用指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 和 <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 数组以及指定的 <see cref="T:System.Drawing.PointF" /> 枚举元素初始化 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 数组的新实例。</summary>
      <param name="pts">
        <see cref="T:System.Drawing.PointF" /> 结构的数组，它定义组成此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 的点的坐标。</param>
      <param name="types">
        <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 枚举元素的数组，它指定 <paramref name="pts" /> 数组中各相应点的类型。</param>
      <param name="fillMode">一个 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 枚举，它指定此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 中的形状的内部如何填充。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
      <summary>向当前图形追加一段椭圆弧。</summary>
      <param name="rect">一个 <see cref="T:System.Drawing.Rectangle" />，表示从中截取弧线的椭圆的矩形边界。</param>
      <param name="startAngle">弧线的起始角度，以度为单位从 X 轴顺时针测量。</param>
      <param name="sweepAngle">
        <paramref name="startAngle" /> 和弧线末尾之间的角度。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)">
      <summary>向当前图形追加一段椭圆弧。</summary>
      <param name="rect">一个 <see cref="T:System.Drawing.RectangleF" />，表示从中截取弧线的椭圆的矩形边界。</param>
      <param name="startAngle">弧线的起始角度，以度为单位从 X 轴顺时针测量。</param>
      <param name="sweepAngle">
        <paramref name="startAngle" /> 和弧线末尾之间的角度。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
      <summary>向当前图形追加一段椭圆弧。</summary>
      <param name="x">矩形区域左上角的 X 坐标，该区域定义将要从中绘制弧线的椭圆。</param>
      <param name="y">矩形区域左上角的 Y 坐标，该区域定义将要从中绘制弧线的椭圆。</param>
      <param name="width">矩形区域的宽度，该区域定义将要从中绘制弧线的椭圆。</param>
      <param name="height">矩形区域的高度，该区域定义将要从中绘制弧线的椭圆。</param>
      <param name="startAngle">弧线的起始角度，以度为单位从 X 轴顺时针测量。</param>
      <param name="sweepAngle">
        <paramref name="startAngle" /> 和弧线末尾之间的角度。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>向当前图形追加一段椭圆弧。</summary>
      <param name="x">矩形区域左上角的 X 坐标，该区域定义将要从中绘制弧线的椭圆。</param>
      <param name="y">矩形区域左上角的 Y 坐标，该区域定义将要从中绘制弧线的椭圆。</param>
      <param name="width">矩形区域的宽度，该区域定义将要从中绘制弧线的椭圆。</param>
      <param name="height">矩形区域的高度，该区域定义将要从中绘制弧线的椭圆。</param>
      <param name="startAngle">弧线的起始角度，以度为单位从 X 轴顺时针测量。</param>
      <param name="sweepAngle">
        <paramref name="startAngle" /> 和弧线末尾之间的角度。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
      <summary>在当前图形中添加一段立方贝塞尔曲线。</summary>
      <param name="pt1">表示曲线起始点的 <see cref="T:System.Drawing.Point" />。</param>
      <param name="pt2">表示曲线第一个控制点的 <see cref="T:System.Drawing.Point" />。</param>
      <param name="pt3">表示曲线第二个控制点的 <see cref="T:System.Drawing.Point" />。</param>
      <param name="pt4">表示曲线终结点的 <see cref="T:System.Drawing.Point" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
      <summary>在当前图形中添加一段立方贝塞尔曲线。</summary>
      <param name="pt1">表示曲线起始点的 <see cref="T:System.Drawing.PointF" />。</param>
      <param name="pt2">表示曲线第一个控制点的 <see cref="T:System.Drawing.PointF" />。</param>
      <param name="pt3">表示曲线第二个控制点的 <see cref="T:System.Drawing.PointF" />。</param>
      <param name="pt4">表示曲线终结点的 <see cref="T:System.Drawing.PointF" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>在当前图形中添加一段立方贝塞尔曲线。</summary>
      <param name="x1">曲线起始点的 X 坐标。</param>
      <param name="y1">曲线起始点的 Y 坐标。</param>
      <param name="x2">曲线第一个控制点的 X 坐标。</param>
      <param name="y2">曲线第一个控制点的 Y 坐标。</param>
      <param name="x3">曲线第二个控制点的 X 坐标。</param>
      <param name="y3">曲线第二个控制点的 Y 坐标。</param>
      <param name="x4">曲线终结点的 X 坐标。</param>
      <param name="y4">曲线终结点的 Y 坐标。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>在当前图形中添加一段立方贝塞尔曲线。</summary>
      <param name="x1">曲线起始点的 X 坐标。</param>
      <param name="y1">曲线起始点的 Y 坐标。</param>
      <param name="x2">曲线第一个控制点的 X 坐标。</param>
      <param name="y2">曲线第一个控制点的 Y 坐标。</param>
      <param name="x3">曲线第二个控制点的 X 坐标。</param>
      <param name="y3">曲线第二个控制点的 Y 坐标。</param>
      <param name="x4">曲线终结点的 X 坐标。</param>
      <param name="y4">曲线终结点的 Y 坐标。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])">
      <summary>在当前图形中添加一系列相互连接的立方贝塞尔曲线。</summary>
      <param name="points">一个 <see cref="T:System.Drawing.Point" /> 结构的数组，它表示定义曲线的点。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])">
      <summary>在当前图形中添加一系列相互连接的立方贝塞尔曲线。</summary>
      <param name="points">一个 <see cref="T:System.Drawing.PointF" /> 结构的数组，它表示定义曲线的点。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])">
      <summary>向此路径添加一个闭合曲线。 由于曲线经过数组中的每个点，因此使用基数样条曲线。</summary>
      <param name="points">一个 <see cref="T:System.Drawing.Point" /> 结构的数组，它表示定义曲线的点。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
      <summary>向此路径添加一个闭合曲线。 由于曲线经过数组中的每个点，因此使用基数样条曲线。</summary>
      <param name="points">一个 <see cref="T:System.Drawing.Point" /> 结构的数组，它表示定义曲线的点。</param>
      <param name="tension">介于 0 到 1 之间的一个值，它指定曲线在点与点之间弯曲的程度，0 表示最小弯曲（最锐拐角），1 表示最平滑弯曲。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])">
      <summary>向此路径添加一个闭合曲线。 由于曲线经过数组中的每个点，因此使用基数样条曲线。</summary>
      <param name="points">一个 <see cref="T:System.Drawing.PointF" /> 结构的数组，它表示定义曲线的点。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)">
      <summary>向此路径添加一个闭合曲线。 由于曲线经过数组中的每个点，因此使用基数样条曲线。</summary>
      <param name="points">一个 <see cref="T:System.Drawing.PointF" /> 结构的数组，它表示定义曲线的点。</param>
      <param name="tension">介于 0 到 1 之间的一个值，它指定曲线在点与点之间弯曲的程度，0 表示最小弯曲（最锐拐角），1 表示最平滑弯曲。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[])">
      <summary>向当前图形添加一段样条曲线。 由于曲线经过数组中的每个点，因此使用基数样条曲线。</summary>
      <param name="points">一个 <see cref="T:System.Drawing.Point" /> 结构的数组，它表示定义曲线的点。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
      <summary>向当前图形添加一段样条曲线。</summary>
      <param name="points">一个 <see cref="T:System.Drawing.Point" /> 结构的数组，它表示定义曲线的点。</param>
      <param name="offset">
        <paramref name="points" /> 数组中某元素的索引，该元素将用作曲线的第一个点。</param>
      <param name="numberOfSegments">指定曲线在控制点间弯曲程度的值。 大于 1 的值将产生不可预知的结果。</param>
      <param name="tension">指定曲线在控制点间弯曲程度的值。 大于 1 的值将产生不可预知的结果。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Single)">
      <summary>向当前图形添加一段样条曲线。</summary>
      <param name="points">一个 <see cref="T:System.Drawing.Point" /> 结构的数组，它表示定义曲线的点。</param>
      <param name="tension">指定曲线在控制点间弯曲程度的值。 大于 1 的值将产生不可预知的结果。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[])">
      <summary>向当前图形添加一段样条曲线。 由于曲线经过数组中的每个点，因此使用基数样条曲线。</summary>
      <param name="points">一个 <see cref="T:System.Drawing.PointF" /> 结构的数组，它表示定义曲线的点。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
      <summary>向当前图形添加一段样条曲线。</summary>
      <param name="points">一个 <see cref="T:System.Drawing.PointF" /> 结构的数组，它表示定义曲线的点。</param>
      <param name="offset">
        <paramref name="points" /> 数组中某元素的索引，该元素将用作曲线的第一个点。</param>
      <param name="numberOfSegments">用于绘制曲线的线段的数目。 线段可被视为连接两点的直线。</param>
      <param name="tension">指定曲线在控制点间弯曲程度的值。 大于 1 的值将产生不可预知的结果。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Single)">
      <summary>向当前图形添加一段样条曲线。</summary>
      <param name="points">一个 <see cref="T:System.Drawing.PointF" /> 结构的数组，它表示定义曲线的点。</param>
      <param name="tension">指定曲线在控制点间弯曲程度的值。 大于 1 的值将产生不可预知的结果。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.Rectangle)">
      <summary>向当前路径添加一个椭圆。</summary>
      <param name="rect">一个 <see cref="T:System.Drawing.Rectangle" />，表示定义椭圆的边框。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.RectangleF)">
      <summary>向当前路径添加一个椭圆。</summary>
      <param name="rect">一个 <see cref="T:System.Drawing.RectangleF" />，表示定义椭圆的边框。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>向当前路径添加一个椭圆。</summary>
      <param name="x">定义椭圆的边框的左上角的 X 坐标。</param>
      <param name="y">定义椭圆的边框的左上角的 Y 坐标。</param>
      <param name="width">定义椭圆的边框的宽度。</param>
      <param name="height">定义椭圆的边框的高度。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Single,System.Single,System.Single,System.Single)">
      <summary>向当前路径添加一个椭圆。</summary>
      <param name="x">定义椭圆的边框的左上角的 X 坐标。</param>
      <param name="y">定义椭圆的边框的左上角的 Y 坐标。</param>
      <param name="width">定义椭圆的边框的宽度。</param>
      <param name="height">定义椭圆的边框的高度。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.Point,System.Drawing.Point)">
      <summary>向此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 追加一条线段。</summary>
      <param name="pt1">表示直线起始点的 <see cref="T:System.Drawing.Point" />。</param>
      <param name="pt2">表示直线终结点的 <see cref="T:System.Drawing.Point" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.PointF,System.Drawing.PointF)">
      <summary>向此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 追加一条线段。</summary>
      <param name="pt1">表示直线起始点的 <see cref="T:System.Drawing.PointF" />。</param>
      <param name="pt2">表示直线终结点的 <see cref="T:System.Drawing.PointF" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>向当前图形追加一条线段。</summary>
      <param name="x1">直线起始点的 X 坐标。</param>
      <param name="y1">直线起始点的 Y 坐标。</param>
      <param name="x2">直线终结点的 X 坐标。</param>
      <param name="y2">直线终结点的 Y 坐标。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)">
      <summary>向此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 追加一条线段。</summary>
      <param name="x1">直线起始点的 X 坐标。</param>
      <param name="y1">直线起始点的 Y 坐标。</param>
      <param name="x2">直线终结点的 X 坐标。</param>
      <param name="y2">直线终结点的 Y 坐标。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
      <summary>向此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 末尾追加一系列相互连接的线段。</summary>
      <param name="points">一个 <see cref="T:System.Drawing.Point" /> 结构的数组，它表示定义要添加的线段的点。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])">
      <summary>向此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 末尾追加一系列相互连接的线段。</summary>
      <param name="points">一个 <see cref="T:System.Drawing.PointF" /> 结构的数组，它表示定义要添加的线段的点。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
      <summary>将指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 追加到该路径。</summary>
      <param name="addingPath">要添加的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</param>
      <param name="connect">一个布尔值，它指定添加的路径中的第一个图形是否是该路径中最后一个图形的一部分。 <see langword="true" /> 的值指定（如果可能）添加的路径中的第一个图形是该路径中最后一个图形的一部分。 <see langword="false" /> 的值指定添加的路径中的第一个图形与该路径中最后一个图形不同。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Drawing.Rectangle,System.Single,System.Single)">
      <summary>向此路径添加一个扇形轮廓。</summary>
      <param name="rect">一个 <see cref="T:System.Drawing.Rectangle" />，表示定义要从其绘制扇形的椭圆的边框。</param>
      <param name="startAngle">扇形区的起始角度，以度为单位从 X 轴顺时针测量。</param>
      <param name="sweepAngle">
        <paramref name="startAngle" /> 与扇形区末尾之间的角度，以度为单位从 <paramref name="startAngle" /> 顺时针测量。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
      <summary>向此路径添加一个扇形轮廓。</summary>
      <param name="x">边框左上角的 X 坐标，该边框定义将要从中绘制扇形的椭圆。</param>
      <param name="y">边框左上角的 Y 坐标，该边框定义将要从中绘制扇形的椭圆。</param>
      <param name="width">边框的宽度，该边框定义将要从中绘制扇形的椭圆。</param>
      <param name="height">边框的高度，该边框定义将要从中绘制扇形的椭圆。</param>
      <param name="startAngle">扇形区的起始角度，以度为单位从 X 轴顺时针测量。</param>
      <param name="sweepAngle">
        <paramref name="startAngle" /> 与扇形区末尾之间的角度，以度为单位从 <paramref name="startAngle" /> 顺时针测量。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>向此路径添加一个扇形轮廓。</summary>
      <param name="x">边框左上角的 X 坐标，该边框定义将要从中绘制扇形的椭圆。</param>
      <param name="y">边框左上角的 Y 坐标，该边框定义将要从中绘制扇形的椭圆。</param>
      <param name="width">边框的宽度，该边框定义将要从中绘制扇形的椭圆。</param>
      <param name="height">边框的高度，该边框定义将要从中绘制扇形的椭圆。</param>
      <param name="startAngle">扇形区的起始角度，以度为单位从 X 轴顺时针测量。</param>
      <param name="sweepAngle">
        <paramref name="startAngle" /> 与扇形区末尾之间的角度，以度为单位从 <paramref name="startAngle" /> 顺时针测量。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])">
      <summary>向此路径添加多边形。</summary>
      <param name="points">一个 <see cref="T:System.Drawing.Point" /> 结构的数组，它定义要添加的多边形。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.PointF[])">
      <summary>向此路径添加多边形。</summary>
      <param name="points">一个 <see cref="T:System.Drawing.PointF" /> 结构的数组，它定义要添加的多边形。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.Rectangle)">
      <summary>向此路径添加一个矩形。</summary>
      <param name="rect">表示要添加的矩形的 <see cref="T:System.Drawing.Rectangle" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.RectangleF)">
      <summary>向此路径添加一个矩形。</summary>
      <param name="rect">表示要添加的矩形的 <see cref="T:System.Drawing.RectangleF" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])">
      <summary>向此路径添加一系列矩形。</summary>
      <param name="rects">一个 <see cref="T:System.Drawing.Rectangle" /> 结构的数组，它表示要添加的矩形。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.RectangleF[])">
      <summary>向此路径添加一系列矩形。</summary>
      <param name="rects">一个 <see cref="T:System.Drawing.RectangleF" /> 结构的数组，它表示要添加的矩形。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
      <summary>向此路径添加文本字符串。</summary>
      <param name="s">要添加的 <see cref="T:System.String" />。</param>
      <param name="family">一个 <see cref="T:System.Drawing.FontFamily" />，表示绘制文本所用字体的名称。</param>
      <param name="style">一个 <see cref="T:System.Drawing.FontStyle" /> 枚举，它表示有关文本的样式信息（粗体、斜体等）。 它必须为整数（请参见本节后面的代码示例）。</param>
      <param name="emSize">限定字符的 Em（字体大小）方框的高度。</param>
      <param name="origin">一个 <see cref="T:System.Drawing.Point" />，它表示文本从其起始的点。</param>
      <param name="format">指定文本格式设置信息（如行间距和对齐方式）的 <see cref="T:System.Drawing.StringFormat" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)">
      <summary>向此路径添加文本字符串。</summary>
      <param name="s">要添加的 <see cref="T:System.String" />。</param>
      <param name="family">一个 <see cref="T:System.Drawing.FontFamily" />，表示绘制文本所用字体的名称。</param>
      <param name="style">一个 <see cref="T:System.Drawing.FontStyle" /> 枚举，它表示有关文本的样式信息（粗体、斜体等）。 它必须为整数（请参见本节后面的代码示例）。</param>
      <param name="emSize">限定字符的 Em（字体大小）方框的高度。</param>
      <param name="origin">一个 <see cref="T:System.Drawing.PointF" />，它表示文本从其起始的点。</param>
      <param name="format">指定文本格式设置信息（如行间距和对齐方式）的 <see cref="T:System.Drawing.StringFormat" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)">
      <summary>向此路径添加文本字符串。</summary>
      <param name="s">要添加的 <see cref="T:System.String" />。</param>
      <param name="family">一个 <see cref="T:System.Drawing.FontFamily" />，表示绘制文本所用字体的名称。</param>
      <param name="style">一个 <see cref="T:System.Drawing.FontStyle" /> 枚举，它表示有关文本的样式信息（粗体、斜体等）。 它必须为整数（请参见本节后面的代码示例）。</param>
      <param name="emSize">限定字符的 Em（字体大小）方框的高度。</param>
      <param name="layoutRect">表示限定文本的矩形的 <see cref="T:System.Drawing.Rectangle" />。</param>
      <param name="format">指定文本格式设置信息（如行间距和对齐方式）的 <see cref="T:System.Drawing.StringFormat" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)">
      <summary>向此路径添加文本字符串。</summary>
      <param name="s">要添加的 <see cref="T:System.String" />。</param>
      <param name="family">一个 <see cref="T:System.Drawing.FontFamily" />，表示绘制文本所用字体的名称。</param>
      <param name="style">一个 <see cref="T:System.Drawing.FontStyle" /> 枚举，它表示有关文本的样式信息（粗体、斜体等）。 它必须为整数（请参见本节后面的代码示例）。</param>
      <param name="emSize">限定字符的 Em（字体大小）方框的高度。</param>
      <param name="layoutRect">表示限定文本的矩形的 <see cref="T:System.Drawing.RectangleF" />。</param>
      <param name="format">指定文本格式设置信息（如行间距和对齐方式）的 <see cref="T:System.Drawing.StringFormat" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers">
      <summary>清除此路径的所有标记。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Clone">
      <summary>创建此路径的一个精确副本。</summary>
      <returns>该方法创建的、强制转换为对象的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures">
      <summary>闭合此路径中所有开放的图形并开始一个新图形。 它通过连接一条从图形的终结点到起始点的直线，闭合每一开放的图形。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.CloseFigure">
      <summary>闭合当前图形并开始新的图形。 如果当前图形包含一系列相互连接的直线和曲线，该方法通过连接一条从终结点到起始点的直线，闭合该环回。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Dispose">
      <summary>释放此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 使用的所有资源。</summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPath.FillMode">
      <summary>获取或设置一个 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 枚举，确定此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 中的形状的内部如何填充。</summary>
      <returns>一个 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 枚举，它指定此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 中的形状的内部如何填充。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Finalize">
      <summary>在垃圾回收将某一对象回收前允许该对象尝试释放资源并执行其他清理操作。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Flatten">
      <summary>将此路径中的各段曲线转换成相连的线段序列。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix)">
      <summary>应用指定的变换，然后将此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 中的各段曲线转换成相连的线段的序列。</summary>
      <param name="matrix">用来在展平前对此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 进行变换的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
      <summary>将此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 中的各段曲线转换成相连的线段序列。</summary>
      <param name="matrix">用来在展平前对此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 进行变换的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</param>
      <param name="flatness">指定曲线和其展平的近似直线之间的最大允许误差。 值 0.25 是默认值。 降低该展平值将增加近似直线中线段的数目。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
      <summary>返回限定此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 的矩形。</summary>
      <returns>一个 <see cref="T:System.Drawing.RectangleF" />，表示限定此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 的矩形。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix)">
      <summary>返回当由指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 对该路径进行变换时，限定此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的矩形。</summary>
      <param name="matrix">
        <see cref="T:System.Drawing.Drawing2D.Matrix" />，指定在计算边框前要应用于此路径的变换。 此路径并非被永久变换；仅在计算边框的进程中使用变换。</param>
      <returns>一个 <see cref="T:System.Drawing.RectangleF" />，表示限定此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 的矩形。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)">
      <summary>返回当由指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 对当前路径进行变换并且用指定的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 绘制该路径时，限定此 <see cref="T:System.Drawing.Pen" /> 的矩形。</summary>
      <param name="matrix">
        <see cref="T:System.Drawing.Drawing2D.Matrix" />，指定在计算边框前要应用于此路径的变换。 此路径并非被永久变换；仅在计算边框的进程中使用变换。</param>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，用于绘制 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</param>
      <returns>一个 <see cref="T:System.Drawing.RectangleF" />，表示限定此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 的矩形。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.GetLastPoint">
      <summary>获取此 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> 的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 数组中的最后的点。</summary>
      <returns>一个 <see cref="T:System.Drawing.PointF" />，表示此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 中的最后的点。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen)">
      <summary>指示当使用指定的 <see cref="T:System.Drawing.Pen" /> 绘制此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 时，指定点是否包含在后者的轮廓内（下）。</summary>
      <param name="point">指定测试位置的 <see cref="T:System.Drawing.Point" />。</param>
      <param name="pen">要测试的 <see cref="T:System.Drawing.Pen" />。</param>
      <returns>如果使用指定的 <see cref="T:System.Drawing.Pen" /> 绘制此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 时，指定点包含在后者的轮廓内，则此方法返回 <see langword="true" />；否则，返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)">
      <summary>指示当使用指定的 <see cref="T:System.Drawing.Pen" /> 和 <see cref="T:System.Drawing.Graphics" /> 绘制此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 时，指定点是否包含在后者的轮廓内（下）。</summary>
      <param name="pt">指定测试位置的 <see cref="T:System.Drawing.Point" />。</param>
      <param name="pen">要测试的 <see cref="T:System.Drawing.Pen" />。</param>
      <param name="graphics">要对其测试可见性的 <see cref="T:System.Drawing.Graphics" />。</param>
      <returns>如果使用指定的 <see cref="T:System.Drawing.Pen" /> 绘制此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 时，指定点包含在后者轮廓内，则该方法返回 <see langword="true" />；否则，返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen)">
      <summary>指示当使用指定的 <see cref="T:System.Drawing.Pen" /> 绘制此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 时，指定点是否包含在后者的轮廓内（下）。</summary>
      <param name="point">指定测试位置的 <see cref="T:System.Drawing.PointF" />。</param>
      <param name="pen">要测试的 <see cref="T:System.Drawing.Pen" />。</param>
      <returns>如果使用指定的 <see cref="T:System.Drawing.Pen" /> 绘制此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 时，指定点包含在后者的轮廓内，则此方法返回 <see langword="true" />；否则，返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)">
      <summary>指示当使用指定的 <see cref="T:System.Drawing.Pen" /> 和 <see cref="T:System.Drawing.Graphics" /> 绘制此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 时，指定点是否包含在后者的轮廓内（下）。</summary>
      <param name="pt">指定测试位置的 <see cref="T:System.Drawing.PointF" />。</param>
      <param name="pen">要测试的 <see cref="T:System.Drawing.Pen" />。</param>
      <param name="graphics">要对其测试可见性的 <see cref="T:System.Drawing.Graphics" />。</param>
      <returns>如果使用指定的 <see cref="T:System.Drawing.Pen" /> 绘制此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 时，指定点包含在后者的轮廓内（下），则该方法返回 <see langword="true" />；否则，返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)">
      <summary>指示当使用指定的 <see cref="T:System.Drawing.Pen" /> 绘制此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 时，指定点是否包含在后者的轮廓内（下）。</summary>
      <param name="x">要测试的点的 X 坐标。</param>
      <param name="y">要测试的点的 Y 坐标。</param>
      <param name="pen">要测试的 <see cref="T:System.Drawing.Pen" />。</param>
      <returns>如果使用指定的 <see cref="T:System.Drawing.Pen" /> 绘制此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 时，指定点包含在后者的轮廓内，则此方法返回 <see langword="true" />；否则，返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
      <summary>指示当使用指定的 <see cref="T:System.Drawing.Pen" /> 和 <see cref="T:System.Drawing.Graphics" /> 绘制此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 时，指定点是否包含在后者的轮廓内（下）。</summary>
      <param name="x">要测试的点的 X 坐标。</param>
      <param name="y">要测试的点的 Y 坐标。</param>
      <param name="pen">要测试的 <see cref="T:System.Drawing.Pen" />。</param>
      <param name="graphics">要对其测试可见性的 <see cref="T:System.Drawing.Graphics" />。</param>
      <returns>如果使用指定的 <see cref="T:System.Drawing.Pen" /> 绘制此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 时，指定点包含在后者轮廓内，则该方法返回 <see langword="true" />；否则，返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)">
      <summary>指示当使用指定的 <see cref="T:System.Drawing.Pen" /> 绘制此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 时，指定点是否包含在后者的轮廓内（下）。</summary>
      <param name="x">要测试的点的 X 坐标。</param>
      <param name="y">要测试的点的 Y 坐标。</param>
      <param name="pen">要测试的 <see cref="T:System.Drawing.Pen" />。</param>
      <returns>如果使用指定的 <see cref="T:System.Drawing.Pen" /> 绘制此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 时，指定点包含在后者的轮廓内，则此方法返回 <see langword="true" />；否则，返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)">
      <summary>指示当使用指定的 <see cref="T:System.Drawing.Pen" /> 和 <see cref="T:System.Drawing.Graphics" /> 绘制此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 时，指定点是否包含在后者的轮廓内（下）。</summary>
      <param name="x">要测试的点的 X 坐标。</param>
      <param name="y">要测试的点的 Y 坐标。</param>
      <param name="pen">要测试的 <see cref="T:System.Drawing.Pen" />。</param>
      <param name="graphics">要对其测试可见性的 <see cref="T:System.Drawing.Graphics" />。</param>
      <returns>如果使用指定的 <see cref="T:System.Drawing.Pen" /> 绘制此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 时，指定点包含在后者的轮廓内（下），则该方法返回 <see langword="true" />；否则，返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point)">
      <summary>指示指定点是否包含在此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 内。</summary>
      <param name="point">表示测试点的 <see cref="T:System.Drawing.Point" />。</param>
      <returns>如果指定点包含在此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 内，则该方法返回 <see langword="true" />；否则，返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point,System.Drawing.Graphics)">
      <summary>指示指定点是否包含在此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 内。</summary>
      <param name="pt">表示测试点的 <see cref="T:System.Drawing.Point" />。</param>
      <param name="graphics">要对其测试可见性的 <see cref="T:System.Drawing.Graphics" />。</param>
      <returns>如果指定点包含在此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 内，则该方法返回 <see langword="true" />；否则，返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF)">
      <summary>指示指定点是否包含在此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 内。</summary>
      <param name="point">表示测试点的 <see cref="T:System.Drawing.PointF" />。</param>
      <returns>如果指定点包含在此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 内，则该方法返回 <see langword="true" />；否则，返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)">
      <summary>指示指定点是否包含在此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 内。</summary>
      <param name="pt">表示测试点的 <see cref="T:System.Drawing.PointF" />。</param>
      <param name="graphics">要对其测试可见性的 <see cref="T:System.Drawing.Graphics" />。</param>
      <returns>如果指定点包含在此对象内，则该方法返回 <see langword="true" />；否则，返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32)">
      <summary>指示指定点是否包含在此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 内。</summary>
      <param name="x">要测试的点的 X 坐标。</param>
      <param name="y">要测试的点的 Y 坐标。</param>
      <returns>如果指定点包含在此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 内，则该方法返回 <see langword="true" />；否则，返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
      <summary>使用指定的 <see cref="T:System.Drawing.Graphics" />，指示指定点是否包含在此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 内。</summary>
      <param name="x">要测试的点的 X 坐标。</param>
      <param name="y">要测试的点的 Y 坐标。</param>
      <param name="graphics">要对其测试可见性的 <see cref="T:System.Drawing.Graphics" />。</param>
      <returns>如果指定点包含在此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 内，则该方法返回 <see langword="true" />；否则，返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single)">
      <summary>指示指定点是否包含在此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 内。</summary>
      <param name="x">要测试的点的 X 坐标。</param>
      <param name="y">要测试的点的 Y 坐标。</param>
      <returns>如果指定点包含在此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 内，则该方法返回 <see langword="true" />；否则，返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)">
      <summary>指示指定点是否包含在此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 内，它位于指定的 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域内。</summary>
      <param name="x">要测试的点的 X 坐标。</param>
      <param name="y">要测试的点的 Y 坐标。</param>
      <param name="graphics">要对其测试可见性的 <see cref="T:System.Drawing.Graphics" />。</param>
      <returns>如果指定点包含在此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 内，则该方法返回 <see langword="true" />；否则，返回 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPath.PathData">
      <summary>获取一个 <see cref="T:System.Drawing.Drawing2D.PathData" />，它封装此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 的点（<paramref name="points" />）和类型（<paramref name="types" />）的数组。</summary>
      <returns>一个 <see cref="T:System.Drawing.Drawing2D.PathData" />，封装此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 的点和类型的数组。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints">
      <summary>获取路径中的点。</summary>
      <returns>表示路径的 <see cref="T:System.Drawing.PointF" /> 对象的数组。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
      <summary>获取 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> 数组中相应点的类型。</summary>
      <returns>指定路径中相应点的类型的字节数组。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPath.PointCount">
      <summary>获取 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> 或 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> 数组中的元素数。</summary>
      <returns>一个整数，它指定 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> 或 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> 数组中的元素数。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Reset">
      <summary>清空 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> 和 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> 数组并将 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 设置为 <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" />。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Reverse">
      <summary>反转此 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> 的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 数组中各点的顺序。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.SetMarkers">
      <summary>在此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 上设置标记。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
      <summary>不闭合当前图形即开始一个新图形。 后面添加到该路径的所有点都被添加到此新图形中。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)">
      <summary>将变换矩阵应用到此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</summary>
      <param name="matrix">一个 <see cref="T:System.Drawing.Drawing2D.Matrix" />，表示要应用的变换。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF)">
      <summary>对此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 应用由一个矩形和一个平行四边形定义的扭曲变换。</summary>
      <param name="destPoints">一个 <see cref="T:System.Drawing.PointF" /> 结构的数组，它们定义由 <paramref name="srcRect" /> 定义的矩形将变换到的平行四边形。 该数组可以包含三个或四个元素。 如果该数组包含三个元素，则平行四边形的右下角位置的点可从前三个点导出。</param>
      <param name="srcRect">一个 <see cref="T:System.Drawing.RectangleF" />，表示将变换为 <paramref name="destPoints" /> 定义的平行四边形的矩形。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)">
      <summary>对此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 应用由一个矩形和一个平行四边形定义的扭曲变换。</summary>
      <param name="destPoints">一个 <see cref="T:System.Drawing.PointF" /> 结构的数组，它们定义由 <paramref name="srcRect" /> 定义的矩形将变换到的平行四边形。 该数组可以包含三个或四个元素。 如果该数组包含三个元素，则平行四边形的右下角位置的点可从前三个点导出。</param>
      <param name="srcRect">一个 <see cref="T:System.Drawing.RectangleF" />，表示将变换为 <paramref name="destPoints" /> 定义的平行四边形的矩形。</param>
      <param name="matrix">指定将应用于路径的几何变换的 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)">
      <summary>对此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 应用由一个矩形和一个平行四边形定义的扭曲变换。</summary>
      <param name="destPoints">一个 <see cref="T:System.Drawing.PointF" /> 结构的数组，该数组定义由 <paramref name="srcRect" /> 定义的矩形将变换到的平行四边形。 该数组可以包含三个或四个元素。 如果该数组包含三个元素，则平行四边形的右下角位置的点可从前三个点导出。</param>
      <param name="srcRect">一个 <see cref="T:System.Drawing.RectangleF" />，表示将变换为 <paramref name="destPoints" /> 定义的平行四边形的矩形。</param>
      <param name="matrix">指定将应用于路径的几何变换的 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</param>
      <param name="warpMode">一个 <see cref="T:System.Drawing.Drawing2D.WarpMode" /> 枚举，它指定此扭曲操作是使用透视模式还是双线性模式。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
      <summary>对此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 应用由一个矩形和一个平行四边形定义的扭曲变换。</summary>
      <param name="destPoints">一个 <see cref="T:System.Drawing.PointF" /> 结构的数组，它们定义由 <paramref name="srcRect" /> 定义的矩形将变换到的平行四边形。 该数组可以包含三个或四个元素。 如果该数组包含三个元素，则平行四边形的右下角位置的点可从前三个点导出。</param>
      <param name="srcRect">一个 <see cref="T:System.Drawing.RectangleF" />，表示将变换为 <paramref name="destPoints" /> 定义的平行四边形的矩形。</param>
      <param name="matrix">指定将应用于路径的几何变换的 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</param>
      <param name="warpMode">一个 <see cref="T:System.Drawing.Drawing2D.WarpMode" /> 枚举，它指定此扭曲操作是使用透视模式还是双线性模式。</param>
      <param name="flatness">一个介于 0 到 1 之间的值，它指定如何展平最终路径。 有关更多信息，请参见 <see cref="M:System.Drawing.Drawing2D.GraphicsPath.Flatten" /> 方法。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen)">
      <summary>向该路径添加附加轮廓。</summary>
      <param name="pen">一个 <see cref="T:System.Drawing.Pen" />，指定路径原始轮廓和此方法创建的新轮廓之间的宽度。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix)">
      <summary>向该 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 添加附加轮廓。</summary>
      <param name="pen">一个 <see cref="T:System.Drawing.Pen" />，指定路径原始轮廓和此方法创建的新轮廓之间的宽度。</param>
      <param name="matrix">一个 <see cref="T:System.Drawing.Drawing2D.Matrix" />，指定扩展前应用于路径的变换。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
      <summary>在用指定的钢笔绘制此路径时，用包含所填充区域的曲线代替此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</summary>
      <param name="pen">一个 <see cref="T:System.Drawing.Pen" />，指定路径原始轮廓和此方法创建的新轮廓之间的宽度。</param>
      <param name="matrix">一个 <see cref="T:System.Drawing.Drawing2D.Matrix" />，指定扩展前应用于路径的变换。</param>
      <param name="flatness">指定曲线展平的值。</param>
    </member>
    <member name="T:System.Drawing.Drawing2D.GraphicsPathIterator">
      <summary>提供循环访问 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 中的子路径并测试每一子路径中包含的形状类型的能力。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.#ctor(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>使用指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 对象初始化 <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> 类的新实例。</summary>
      <param name="path">将用于初始化该帮助程序类的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 对象。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.CopyData(System.Drawing.PointF[]@,System.Byte[]@,System.Int32,System.Int32)">
      <summary>将关联的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 的 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> 属性和 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> 属性数组复制到两个指定的数组中。</summary>
      <param name="points">返回时，包含 <see cref="T:System.Drawing.PointF" /> 结构的数组，该数组表示路径中的点。</param>
      <param name="types">返回时，包含字节数组，该数组表示路径中的点类型。</param>
      <param name="startIndex">指定数组的起始索引。</param>
      <param name="endIndex">指定数组的结束索引。</param>
      <returns>复制的点数。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPathIterator.Count">
      <summary>获取路径中的点数。</summary>
      <returns>路径中点的数目。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.Dispose">
      <summary>释放由此 <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> 对象使用的所有资源。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate(System.Drawing.PointF[]@,System.Byte[]@)">
      <summary>将关联的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 的 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> 属性和 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> 属性数组复制到两个指定的数组中。</summary>
      <param name="points">返回时，包含 <see cref="T:System.Drawing.PointF" /> 结构的数组，该数组表示路径中的点。</param>
      <param name="types">返回时，包含字节数组，该数组表示路径中的点类型。</param>
      <returns>复制的点数。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.Finalize">
      <summary>在垃圾回收将某一对象回收前允许该对象尝试释放资源并执行其他清理操作。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve">
      <summary>指示与此 <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> 关联的路径是否包含曲线。</summary>
      <returns>如果当前子路径包含曲线，该方法返回 <see langword="true" />；否则，返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>此 <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> 对象具有与之关联的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 对象。 <see cref="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)" /> 方法将关联的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 增加到其路径中的下一标记，并将当前标记和下一标记（或路径末尾）之间包含的所有点复制到下一个传入该参数的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 对象。</summary>
      <param name="path">将点复制到其中的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 对象。</param>
      <returns>此标记和下一标记间的点数。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Int32@,System.Int32@)">
      <summary>将 <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> 增加到路径中的下一个标记，并通过 [out] 参数返回起始和结束索引。</summary>
      <param name="startIndex">[out] 提供给此参数的整数引用将接收启动子路径的点的索引。</param>
      <param name="endIndex">[out] 提供给此参数的整数索引接收结束 <paramref name="startIndex" /> 所指向的子路径的点的索引。</param>
      <returns>此标记和下一标记间的点数。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType(System.Byte@,System.Int32@,System.Int32@)">
      <summary>获取全部具有相同类型的下一组数据点的起始索引和结束索引。</summary>
      <param name="pathType">[out] 接收由组中所有点共享的点类型。 从 <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 枚举中可检索到可能的类型。</param>
      <param name="startIndex">[out] 接收点组的起始索引。</param>
      <param name="endIndex">[out] 接收点组的结束索引。</param>
      <returns>此方法返回组中数据点的数目。 如果在路径中没有其他组，该方法返回 0。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean@)">
      <summary>从该 <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> 的关联路径获取下一图形（子路径）。</summary>
      <param name="path">一个 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />，其数据点将进行设置，以匹配为此迭代器检索的图形（子路径）的数据点。</param>
      <param name="isClosed">[out] 指示当前子路径是否已关闭。 如果该图形已关闭，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <returns>检索的图形（子路径）中的数据点数目。 如果没有其他要检索的图形，则返回零。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Int32@,System.Int32@,System.Boolean@)">
      <summary>将 <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> 移至路径中的下一子路径。 下一子路径的起始索引和结束索引包含在 [out] 参数中。</summary>
      <param name="startIndex">[out] 接收下一子路径的起始索引。</param>
      <param name="endIndex">[out] 接收下一子路径的结束索引。</param>
      <param name="isClosed">[out] 指示子路径是否已关闭。</param>
      <returns>
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 对象中的子路径数目。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.Rewind">
      <summary>将此 <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> 重绕到其关联路径的起始处。</summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPathIterator.SubpathCount">
      <summary>获取路径中子路径的数目。</summary>
      <returns>路径中子路径的数目。</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.GraphicsState">
      <summary>表示 <see cref="T:System.Drawing.Graphics" /> 对象的状态。 该对象通过调用 <see cref="M:System.Drawing.Graphics.Save" /> 方法返回。 此类不能被继承。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.HatchBrush">
      <summary>用阴影样式、前景色和背景色定义矩形画笔。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.HatchBrush.#ctor(System.Drawing.Drawing2D.HatchStyle,System.Drawing.Color)">
      <summary>使用指定的 <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> 枚举和前景色初始化 <see cref="T:System.Drawing.Drawing2D.HatchStyle" /> 类的新实例。</summary>
      <param name="hatchstyle">
        <see cref="T:System.Drawing.Drawing2D.HatchStyle" /> 值之一，表示此 <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> 所绘制的图案。</param>
      <param name="foreColor">
        <see cref="T:System.Drawing.Color" /> 结构，它表示此 <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> 所绘制线条的颜色。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.HatchBrush.#ctor(System.Drawing.Drawing2D.HatchStyle,System.Drawing.Color,System.Drawing.Color)">
      <summary>使用指定的 <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> 枚举、前景色和背景色初始化 <see cref="T:System.Drawing.Drawing2D.HatchStyle" /> 类的新实例。</summary>
      <param name="hatchstyle">
        <see cref="T:System.Drawing.Drawing2D.HatchStyle" /> 值之一，表示此 <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> 所绘制的图案。</param>
      <param name="foreColor">
        <see cref="T:System.Drawing.Color" /> 结构，它表示此 <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> 所绘制线条的颜色。</param>
      <param name="backColor">
        <see cref="T:System.Drawing.Color" /> 结构，它表示此 <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> 绘制的线条间空间的颜色。</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.HatchBrush.BackgroundColor">
      <summary>获取此 <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> 对象绘制的阴影线条间空间的颜色。</summary>
      <returns>一个 <see cref="T:System.Drawing.Color" /> 结构，表示此 <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> 的背景色。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.HatchBrush.Clone">
      <summary>创建此 <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> 对象的一个精确副本。</summary>
      <returns>该方法创建的、强制转换为对象的 <see cref="T:System.Drawing.Drawing2D.HatchBrush" />。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.HatchBrush.ForegroundColor">
      <summary>获取此 <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> 对象绘制的阴影线条的颜色。</summary>
      <returns>一个 <see cref="T:System.Drawing.Color" /> 结构，表示此 <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> 的前景色。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.HatchBrush.HatchStyle">
      <summary>获取此 <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> 对象的阴影样式。</summary>
      <returns>
        <see cref="T:System.Drawing.Drawing2D.HatchStyle" /> 值之一，表示此 <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> 的图案。</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.HatchStyle">
      <summary>指定可用于 <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> 对象的不同图案。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.BackwardDiagonal">
      <summary>从右上到左下的对角线的线条图案。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Cross">
      <summary>指定交叉的水平线和垂直线。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DarkDownwardDiagonal">
      <summary>指定从顶点到底点向右倾斜的对角线，其两边夹角比 <see cref="F:System.Drawing.Drawing2D.HatchStyle.ForwardDiagonal" /> 小 50%，宽度是其两倍。 此阴影图案不是锯齿消除的。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DarkHorizontal">
      <summary>指定水平线的两边夹角比 <see cref="F:System.Drawing.Drawing2D.HatchStyle.Horizontal" /> 小 50% 并且宽度是 <see cref="F:System.Drawing.Drawing2D.HatchStyle.Horizontal" /> 的两倍。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DarkUpwardDiagonal">
      <summary>指定从顶点到底点向左倾斜的对角线，其两边夹角比 <see cref="F:System.Drawing.Drawing2D.HatchStyle.BackwardDiagonal" /> 小 50%，宽度是其两倍，但这些直线不是锯齿消除的。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DarkVertical">
      <summary>指定垂直线的两边夹角比 <see cref="F:System.Drawing.Drawing2D.HatchStyle.Vertical" /> 小 50% 并且宽度是其两倍。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DashedDownwardDiagonal">
      <summary>指定虚线对角线，这些对角线从顶点到底点向右倾斜。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DashedHorizontal">
      <summary>指定虚线水平线。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DashedUpwardDiagonal">
      <summary>指定虚线对角线，这些对角线从顶点到底点向左倾斜。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DashedVertical">
      <summary>指定虚线垂直线。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DiagonalBrick">
      <summary>指定具有分层砖块外观的阴影，它从顶点到底点向左倾斜。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DiagonalCross">
      <summary>交叉对角线的图案。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Divot">
      <summary>指定具有草皮层外观的阴影。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DottedDiamond">
      <summary>指定互相交叉的正向对角线和反向对角线，每一对角线都是由点构成的。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DottedGrid">
      <summary>指定互相交叉的水平线和垂直线，每一直线都是由点构成的。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.ForwardDiagonal">
      <summary>从左上到右下的对角线的线条图案。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Horizontal">
      <summary>水平线的图案。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.HorizontalBrick">
      <summary>指定具有水平分层砖块外观的阴影。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LargeCheckerBoard">
      <summary>指定具有棋盘外观的阴影，棋盘所具有的方格大小是 <see cref="F:System.Drawing.Drawing2D.HatchStyle.SmallCheckerBoard" /> 大小的两倍。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LargeConfetti">
      <summary>指定具有五彩纸屑外观的阴影，并且它是由比 <see cref="F:System.Drawing.Drawing2D.HatchStyle.SmallConfetti" /> 更大的片构成的。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LargeGrid">
      <summary>指定阴影样式 <see cref="F:System.Drawing.Drawing2D.HatchStyle.Cross" />。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LightDownwardDiagonal">
      <summary>指定从顶点到底点向右倾斜的对角线，其两边夹角比 <see cref="F:System.Drawing.Drawing2D.HatchStyle.ForwardDiagonal" /> 小 50%，但它们不是锯齿消除的。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LightHorizontal">
      <summary>指定水平线，其两边夹角比 <see cref="F:System.Drawing.Drawing2D.HatchStyle.Horizontal" /> 小 50%。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LightUpwardDiagonal">
      <summary>指定从顶点到底点向左倾斜的对角线，其两边夹角比 <see cref="F:System.Drawing.Drawing2D.HatchStyle.BackwardDiagonal" /> 小 50%，但这些直线不是锯齿消除的。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LightVertical">
      <summary>指定垂直线的两边夹角比 <see cref="F:System.Drawing.Drawing2D.HatchStyle.Vertical" /> 小 50%。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Max">
      <summary>指定阴影样式 <see cref="F:System.Drawing.Drawing2D.HatchStyle.SolidDiamond" />。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Min">
      <summary>指定阴影样式 <see cref="F:System.Drawing.Drawing2D.HatchStyle.Horizontal" />。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.NarrowHorizontal">
      <summary>指定水平线的两边夹角比阴影样式 <see cref="F:System.Drawing.Drawing2D.HatchStyle.Horizontal" /> 小 75%（或者比 <see cref="F:System.Drawing.Drawing2D.HatchStyle.LightHorizontal" /> 小 25%）。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.NarrowVertical">
      <summary>指定垂直线的两边夹角比阴影样式 <see cref="F:System.Drawing.Drawing2D.HatchStyle.Vertical" /> 小 75%（或者比 <see cref="F:System.Drawing.Drawing2D.HatchStyle.LightVertical" /> 小 25%）。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.OutlinedDiamond">
      <summary>指定互相交叉的正向对角线和反向对角线，但这些对角线不是锯齿消除的。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent05">
      <summary>指定 5% 阴影。 前景色与背景色的比例为 5:95。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent10">
      <summary>指定 10% 阴影。 前景色与背景色的比例为 10:90。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent20">
      <summary>指定 20% 阴影。 前景色与背景色的比例为 20:80。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent25">
      <summary>指定 25% 阴影。 前景色与背景色的比例为 25:75。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent30">
      <summary>指定 30% 阴影。 前景色与背景色的比例为 30:70。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent40">
      <summary>指定 40% 阴影。 前景色与背景色的比例为 40:60。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent50">
      <summary>指定 50% 阴影。 前景色与背景色的比例为 50:50。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent60">
      <summary>指定 60% 阴影。 前景色与背景色的比例为 60:40。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent70">
      <summary>指定 70% 阴影。 前景色与背景色的比例为 70:30。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent75">
      <summary>指定 75% 阴影。 前景色与背景色的比例为 75:25。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent80">
      <summary>指定 80% 阴影。 前景色与背景色的比例为 80:100。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent90">
      <summary>指定 90% 阴影。 前景色与背景色的比例为 90:10。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Plaid">
      <summary>指定具有格子花呢材料外观的阴影。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Shingle">
      <summary>指定带有对角分层鹅卵石外观的阴影，它从顶点到底点向右倾斜。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.SmallCheckerBoard">
      <summary>指定带有棋盘外观的阴影。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.SmallConfetti">
      <summary>指定带有五彩纸屑外观的阴影。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.SmallGrid">
      <summary>指定互相交叉的水平线和垂直线，其两边夹角比阴影样式 <see cref="F:System.Drawing.Drawing2D.HatchStyle.Cross" /> 小 50%。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.SolidDiamond">
      <summary>指定具有对角放置的棋盘外观的阴影。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Sphere">
      <summary>指定具有球体彼此相邻放置的外观的阴影。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Trellis">
      <summary>指定具有格架外观的阴影。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Vertical">
      <summary>垂直线的图案。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Wave">
      <summary>指定由代字号“~”构成的水平线。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Weave">
      <summary>指定具有织物外观的阴影。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.WideDownwardDiagonal">
      <summary>指定从顶点到底点向右倾斜的对角线，其间距与阴影样式 <see cref="F:System.Drawing.Drawing2D.HatchStyle.ForwardDiagonal" /> 相同，宽度是其三倍，但它们不是锯齿消除的。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.WideUpwardDiagonal">
      <summary>指定从顶点到底点向左倾斜的对角线，其间距与阴影样式 <see cref="F:System.Drawing.Drawing2D.HatchStyle.BackwardDiagonal" /> 相同，宽度是其三倍，但它们不是锯齿消除的。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.ZigZag">
      <summary>指定由 Z 字形构成的水平线。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.InterpolationMode">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.InterpolationMode" /> 枚举指定在缩放或旋转图像时使用的算法。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.Bicubic">
      <summary>指定双三次插值法。 不进行预筛选。 将图像收缩为原始大小的 25% 以下时，此模式不适用。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.Bilinear">
      <summary>指定双线性插值法。 不进行预筛选。 将图像收缩为原始大小的 50% 以下时，此模式不适用。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.Default">
      <summary>指定默认模式。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.High">
      <summary>指定高质量插值法。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.HighQualityBicubic">
      <summary>指定高质量的双三次插值法。 执行预筛选以确保高质量的收缩。 此模式可产生质量最高的转换图像。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.HighQualityBilinear">
      <summary>指定高质量的双线性插值法。 执行预筛选以确保高质量的收缩。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.Invalid">
      <summary>等效于 <see cref="F:System.Drawing.Drawing2D.QualityMode.Invalid" /> 枚举的 <see cref="T:System.Drawing.Drawing2D.QualityMode" /> 元素。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.Low">
      <summary>指定低质量插值法。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.NearestNeighbor">
      <summary>指定最临近插值法。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.LinearGradientBrush">
      <summary>使用线性渐变封装 <see cref="T:System.Drawing.Brush" />。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Point,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color)">
      <summary>使用指定的点和颜色初始化 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 类的新实例。</summary>
      <param name="point1">表示线性渐变起点的 <see cref="T:System.Drawing.Point" /> 结构。</param>
      <param name="point2">表示线性渐变终点的 <see cref="T:System.Drawing.Point" /> 结构。</param>
      <param name="color1">表示线性渐变起始色的 <see cref="T:System.Drawing.Color" /> 结构。</param>
      <param name="color2">表示线性渐变结束色的 <see cref="T:System.Drawing.Color" /> 结构。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.Color,System.Drawing.Color)">
      <summary>使用指定的点和颜色初始化 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 类的新实例。</summary>
      <param name="point1">表示线性渐变起点的 <see cref="T:System.Drawing.PointF" /> 结构。</param>
      <param name="point2">表示线性渐变终点的 <see cref="T:System.Drawing.PointF" /> 结构。</param>
      <param name="color1">表示线性渐变起始色的 <see cref="T:System.Drawing.Color" /> 结构。</param>
      <param name="color2">表示线性渐变结束色的 <see cref="T:System.Drawing.Color" /> 结构。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)">
      <summary>根据一个矩形、起始颜色和结束颜色以及方向，创建 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 类的新实例。</summary>
      <param name="rect">指定线性渐变边界的 <see cref="T:System.Drawing.Rectangle" /> 结构。</param>
      <param name="color1">表示渐变起始色的 <see cref="T:System.Drawing.Color" /> 结构。</param>
      <param name="color2">表示渐变结束色的 <see cref="T:System.Drawing.Color" /> 结构。</param>
      <param name="linearGradientMode">指定渐变方向的 <see cref="T:System.Drawing.Drawing2D.LinearGradientMode" /> 枚举元素。 渐变方向决定渐变的起点和终点。 例如，<see langword="LinearGradientMode.ForwardDiagonal" /> 指定起点是矩形的左上角，而终点是矩形的右下角。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single)">
      <summary>根据一个矩形、起始颜色和结束颜色以及方向角度，创建 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 类的新实例。</summary>
      <param name="rect">指定线性渐变边界的 <see cref="T:System.Drawing.Rectangle" /> 结构。</param>
      <param name="color1">表示渐变起始色的 <see cref="T:System.Drawing.Color" /> 结构。</param>
      <param name="color2">表示渐变结束色的 <see cref="T:System.Drawing.Color" /> 结构。</param>
      <param name="angle">渐变方向线的角度（以 X 轴的顺时针角度计算）。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)">
      <summary>根据一个矩形、起始颜色和结束颜色以及方向角度，创建 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 类的新实例。</summary>
      <param name="rect">指定线性渐变边界的 <see cref="T:System.Drawing.Rectangle" /> 结构。</param>
      <param name="color1">表示渐变起始色的 <see cref="T:System.Drawing.Color" /> 结构。</param>
      <param name="color2">表示渐变结束色的 <see cref="T:System.Drawing.Color" /> 结构。</param>
      <param name="angle">渐变方向线的角度（以 X 轴的顺时针角度计算）。</param>
      <param name="isAngleScaleable">设置为 <see langword="true" />，指定角度受与此 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 关联的转换所影响；否则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)">
      <summary>根据一个矩形、起始颜色和结束颜色以及方向模式，创建 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 类的新实例。</summary>
      <param name="rect">指定线性渐变边界的 <see cref="T:System.Drawing.RectangleF" /> 结构。</param>
      <param name="color1">表示渐变起始色的 <see cref="T:System.Drawing.Color" /> 结构。</param>
      <param name="color2">表示渐变结束色的 <see cref="T:System.Drawing.Color" /> 结构。</param>
      <param name="linearGradientMode">指定渐变方向的 <see cref="T:System.Drawing.Drawing2D.LinearGradientMode" /> 枚举元素。 渐变方向决定渐变的起点和终点。 例如，<see langword="LinearGradientMode.ForwardDiagonal" /> 指定起点是矩形的左上角，而终点是矩形的右下角。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single)">
      <summary>根据一个矩形、起始颜色和结束颜色以及方向角度，创建 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 类的新实例。</summary>
      <param name="rect">指定线性渐变边界的 <see cref="T:System.Drawing.RectangleF" /> 结构。</param>
      <param name="color1">表示渐变起始色的 <see cref="T:System.Drawing.Color" /> 结构。</param>
      <param name="color2">表示渐变结束色的 <see cref="T:System.Drawing.Color" /> 结构。</param>
      <param name="angle">渐变方向线的角度（以 X 轴的顺时针角度计算）。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)">
      <summary>根据一个矩形、起始颜色和结束颜色以及方向角度，创建 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 类的新实例。</summary>
      <param name="rect">指定线性渐变边界的 <see cref="T:System.Drawing.RectangleF" /> 结构。</param>
      <param name="color1">表示渐变起始色的 <see cref="T:System.Drawing.Color" /> 结构。</param>
      <param name="color2">表示渐变结束色的 <see cref="T:System.Drawing.Color" /> 结构。</param>
      <param name="angle">渐变方向线的角度（以 X 轴的顺时针角度计算）。</param>
      <param name="isAngleScaleable">设置为 <see langword="true" />，指定角度受与此 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 关联的转换所影响；否则为 <see langword="false" />。</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.Blend">
      <summary>获取或设置一个 <see cref="T:System.Drawing.Drawing2D.Blend" />，它指定定义渐变自定义过渡的位置和因素。</summary>
      <returns>一个 <see cref="T:System.Drawing.Drawing2D.Blend" />，表示渐变的自定义过渡。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.Clone">
      <summary>创建此 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 的一个精确副本。</summary>
      <returns>该方法创建的、强制转换为对象的 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.GammaCorrection">
      <summary>获取或设置一个值，该值指示是否为该 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 启用灰度校正。</summary>
      <returns>如果为该 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 启用灰度校正，该值为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors">
      <summary>获取或设置一个定义多色线性渐变的 <see cref="T:System.Drawing.Drawing2D.ColorBlend" />。</summary>
      <returns>一个 <see cref="T:System.Drawing.Drawing2D.ColorBlend" />，定义多色线性渐变。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.LinearColors">
      <summary>获取或设置渐变的起始色和结束色。</summary>
      <returns>一个由两个 <see cref="T:System.Drawing.Color" /> 结构组成的数组，表示渐变的起始色和结束色。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
      <summary>通过预先计算指定的 <see cref="T:System.Drawing.Drawing2D.Matrix" />，将表示此 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 的局部几何转换的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 与指定的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 相乘。</summary>
      <param name="matrix">与几何转换相乘的 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>按指定的顺序，将表示此 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 的局部几何转换的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 与指定的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 相乘。</summary>
      <param name="matrix">与几何转换相乘的 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</param>
      <param name="order">一个 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />，它指定两个矩阵相乘的顺序。</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.Rectangle">
      <summary>获取定义渐变的起点和终点的矩形区域。</summary>
      <returns>指定渐变的起始点和终结点的 <see cref="T:System.Drawing.RectangleF" /> 结构。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform">
      <summary>将 <see cref="P:System.Drawing.Drawing2D.LinearGradientBrush.Transform" /> 属性重置为标识。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single)">
      <summary>将局部几何转换旋转指定大小。 此方法预先计算对转换的旋转。</summary>
      <param name="angle">旋转角度。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>将局部几何转换以指定顺序旋转指定量。</summary>
      <param name="angle">旋转角度。</param>
      <param name="order">一个 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />，它指定是在后面追加旋转矩阵还是在前面添加旋转矩阵。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single)">
      <summary>将局部几何转换缩放指定的量。 此方法预先计算转换的缩放矩阵。</summary>
      <param name="sx">转换在 X 轴方向的缩放量。</param>
      <param name="sy">转换在 y 轴方向的缩放量。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>将局部几何转换以指定顺序缩放指定的量。</summary>
      <param name="sx">转换在 X 轴方向的缩放量。</param>
      <param name="sy">转换在 y 轴方向的缩放量。</param>
      <param name="order">一个 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />，指定是在后面追加缩放矩阵还是在前面添加缩放矩阵。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single)">
      <summary>创建一个从中心色向两端单一颜色线性过渡的线性渐变过程。</summary>
      <param name="focus">介于 0 到 1 之间的一个值，它指定渐变中心（只由结束色构成渐变的点）。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single,System.Single)">
      <summary>创建一个从中心色向两端单一颜色线性过渡的线性渐变过程。</summary>
      <param name="focus">介于 0 到 1 之间的一个值，它指定渐变中心（只由结束色构成渐变的点）。</param>
      <param name="scale">介于 0 到 1 之间的一个值，它指定颜色从起始色过渡到 <paramref name="focus" />（结束色）的过渡速度。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single)">
      <summary>创建基于钟形曲线的渐变过渡过程。</summary>
      <param name="focus">介于 0 到 1 之间的一个值，它指定渐变中心（起始色和结束色均匀混合的点）。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single,System.Single)">
      <summary>创建基于钟形曲线的渐变过渡过程。</summary>
      <param name="focus">介于 0 到 1 之间的一个值，它指定渐变中心（只由结束色构成渐变的点）。</param>
      <param name="scale">介于 0 到 1 之间的一个值，它指定颜色从 <paramref name="focus" /> 过渡的过渡速度。</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.Transform">
      <summary>获取或设置一个副本 <see cref="T:System.Drawing.Drawing2D.Matrix" />，它定义此 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 的局部几何转换。</summary>
      <returns>定义几何变换的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的副本，该变换仅适用于通过此 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 绘制的填充。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single)">
      <summary>将局部几何转换平移指定的尺寸。 该方法将预先计算对转换的平移。</summary>
      <param name="dx">X 方向的转换值。</param>
      <param name="dy">Y 方向的转换值。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>按指定的顺序将局部几何转换平移指定的尺寸。</summary>
      <param name="dx">X 方向的转换值。</param>
      <param name="dy">Y 方向的转换值。</param>
      <param name="order">应用转换的顺序（在前面添加或在后面追加）。</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.WrapMode">
      <summary>获取或设置 <see cref="T:System.Drawing.Drawing2D.WrapMode" /> 枚举，它指示该 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 的环绕模式。</summary>
      <returns>一个 <see cref="T:System.Drawing.Drawing2D.WrapMode" />，指定使用此 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 绘制的填充的平铺方式。</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.LinearGradientMode">
      <summary>指定线性渐变的方向。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LinearGradientMode.BackwardDiagonal">
      <summary>指定从右上到左下的渐变。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LinearGradientMode.ForwardDiagonal">
      <summary>指定从左上到右下的渐变。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LinearGradientMode.Horizontal">
      <summary>指定从左到右的渐变。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LinearGradientMode.Vertical">
      <summary>指定从上到下的渐变。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.LineCap">
      <summary>指定可用线帽样式，<see cref="T:System.Drawing.Pen" /> 对象以该线帽结束一段直线。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.AnchorMask">
      <summary>指定用于检查线帽是否为锚头帽的掩码。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.ArrowAnchor">
      <summary>指定箭头状锚头帽。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.Custom">
      <summary>指定自定义线帽。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.DiamondAnchor">
      <summary>指定菱形锚头帽。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.Flat">
      <summary>指定平线帽。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.NoAnchor">
      <summary>指定没有锚。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.Round">
      <summary>指定圆线帽。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.RoundAnchor">
      <summary>指定圆锚头帽。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.Square">
      <summary>指定方线帽。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.SquareAnchor">
      <summary>指定方锚头帽。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.Triangle">
      <summary>指定三角线帽。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.LineJoin">
      <summary>指定如何在图形（子路径）中联接连续的直线或曲线段，该图形（子路径）包含在 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 对象中。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineJoin.Bevel">
      <summary>指定成斜角的联接。 这将产生一个斜角。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineJoin.Miter">
      <summary>指定斜联接。 这将产生一个锐角或切除角，具体取决于斜联接的长度是否超过斜联接限制。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineJoin.MiterClipped">
      <summary>指定斜联接。 这将产生一个锐角或斜角，具体取决于斜联接的长度是否超过斜联接限制。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineJoin.Round">
      <summary>指定圆形联接。 这将在两条线之间产生平滑的圆弧。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.Matrix">
      <summary>封装表示几何变换的 3x3 仿射矩阵。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.#ctor">
      <summary>将 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 类的一个新实例初始化为单位矩阵。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.Rectangle,System.Drawing.Point[])">
      <summary>将 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 类的一个新实例初始化为指定矩形和点数组定义的几何变换。</summary>
      <param name="rect">表示将变换的矩形的 <see cref="T:System.Drawing.Rectangle" /> 结构。</param>
      <param name="plgpts">一个由三个 <see cref="T:System.Drawing.Point" /> 结构构成的数组，该数组表示矩形的左上角、右上角和左下角将变换为的平行四边形的三个点。 平行四边形的右下角的位置可从前三个角的位置导出。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.RectangleF,System.Drawing.PointF[])">
      <summary>将 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 类的一个新实例初始化为指定矩形和点数组定义的几何变换。</summary>
      <param name="rect">表示将变换的矩形的 <see cref="T:System.Drawing.RectangleF" /> 结构。</param>
      <param name="plgpts">一个由三个 <see cref="T:System.Drawing.PointF" /> 结构构成的数组，该数组表示矩形的左上角、右上角和左下角将变换为的平行四边形的三个点。 平行四边形的右下角的位置可从前三个角的位置导出。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>使用指定的元素初始化 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 类的新实例。</summary>
      <param name="m11">新的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的第一行和第一列中的值。</param>
      <param name="m12">新的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的第一行和第二列中的值。</param>
      <param name="m21">新的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的第二行和第一列中的值。</param>
      <param name="m22">新的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的第二行和第二列中的值。</param>
      <param name="dx">新的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的第三行和第一列中的值。</param>
      <param name="dy">新的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的第三行和第二列中的值。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Clone">
      <summary>创建此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的一个精确副本。</summary>
      <returns>此方法创建的 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Dispose">
      <summary>释放此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 使用的所有资源。</summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.Matrix.Elements">
      <summary>获取一个浮点值数组，它表示该 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的元素。</summary>
      <returns>一个浮点值数组，它表示该 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的元素。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Equals(System.Object)">
      <summary>测试指定的对象是否是 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 以及是否与此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 相同。</summary>
      <param name="obj">要测试的对象。</param>
      <returns>如果 <paramref name="obj" /> 是等同于此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的指定 <see cref="T:System.Drawing.Drawing2D.Matrix" />，则该方法返回 <see langword="true" />，否则返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Finalize">
      <summary>在垃圾回收将某一对象回收前允许该对象尝试释放资源并执行其他清理操作。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.GetHashCode">
      <summary>返回哈希代码。</summary>
      <returns>此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的哈希代码。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Invert">
      <summary>如果此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 是可逆转的，则进行逆转。</summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.Matrix.IsIdentity">
      <summary>获取一个值，该值指示此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 是否是单位矩阵。</summary>
      <returns>如果该 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 是标识，则该属性为 <see langword="true" />，否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.Matrix.IsInvertible">
      <summary>获取一个值，该值指示此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 是否可逆转。</summary>
      <returns>如果该 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 是可逆转的，则该属性为 <see langword="true" />，否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix)">
      <summary>通过预先计算指定的 <see cref="T:System.Drawing.Drawing2D.Matrix" />，将此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 与 <paramref name="matrix" /> 参数中指定的矩阵相乘。</summary>
      <param name="matrix">
        <see cref="T:System.Drawing.Drawing2D.Matrix" />，此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 将与之相乘。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>将此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 与 <paramref name="matrix" /> 参数中指定的矩阵相乘，而且采用 <paramref name="order" /> 参数中指定的顺序。</summary>
      <param name="matrix">
        <see cref="T:System.Drawing.Drawing2D.Matrix" />，此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 将与之相乘。</param>
      <param name="order">
        <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />，表示乘法的顺序。</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.Matrix.OffsetX">
      <summary>获取此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的 x 转换值（dx 值，或第三行、第一列中的元素）。</summary>
      <returns>此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的 x 转换值。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.Matrix.OffsetY">
      <summary>获取此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的 y 转换值（dy 值，或第三行、第二列中的元素）。</summary>
      <returns>此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的转换值。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Reset">
      <summary>重置此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 得到单位矩阵的元素。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single)">
      <summary>预先计算此 <see cref="T:System.Drawing.Drawing2D.Matrix" />，沿原点并按指定角度顺时针旋转。</summary>
      <param name="angle">旋转的角度（单位：度）。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>按照 <paramref name="angle" /> 参数中指定的顺时针旋转量，对此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 沿原点（X 和 Y 坐标为零处）旋转。</summary>
      <param name="angle">旋转角度（范围）（单位：度）。</param>
      <param name="order">一个 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />，它指定旋转此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 时所采用的顺序（追加或预先计算）。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF)">
      <summary>沿 <paramref name="point" /> 参数中指定的点并通过预先计算该旋转，来顺时针旋转此 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</summary>
      <param name="angle">旋转角度（范围）（单位：度）。</param>
      <param name="point">一个 <see cref="T:System.Drawing.PointF" />，表示旋转中心。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>按指定的顺序，沿指定点顺时针旋转该 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</summary>
      <param name="angle">旋转的角度（单位：度）。</param>
      <param name="point">一个 <see cref="T:System.Drawing.PointF" />，表示旋转中心。</param>
      <param name="order">一个 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />，它指定旋转的顺序（追加或预先计算）。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single)">
      <summary>通过预先计算比例向量，将指定的比例向量应用到此 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</summary>
      <param name="scaleX">此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 在 X 轴方向缩放的值。</param>
      <param name="scaleY">此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 在 Y 轴方向缩放的值。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>使用指定的顺序，将指定的比例向量（<paramref name="scaleX" /> 和 <paramref name="scaleY" />）应用到此 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</summary>
      <param name="scaleX">此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 在 X 轴方向缩放的值。</param>
      <param name="scaleY">此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 在 Y 轴方向缩放的值。</param>
      <param name="order">一个 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />，指定应用比例向量到此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的顺序（追加或预先计算）。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)">
      <summary>通过预先计算切变变换，将指定的切变向量应用到此 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</summary>
      <param name="shearX">水平切变因子。</param>
      <param name="shearY">垂直切变因子。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>按指定的顺序，将指定的切变向量应用到此 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</summary>
      <param name="shearX">水平切变因子。</param>
      <param name="shearY">垂直切变因子。</param>
      <param name="order">一个 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />，指定应用切变所采用的顺序（追加或预先计算）。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.Point[])">
      <summary>对指定的点数组应用此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 所表示的几何变换。</summary>
      <param name="pts">一个 <see cref="T:System.Drawing.Point" /> 结构的数组，它表示要变换的点。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.PointF[])">
      <summary>对指定的点数组应用此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 所表示的几何变换。</summary>
      <param name="pts">一个 <see cref="T:System.Drawing.PointF" /> 结构的数组，它表示要变换的点。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.Point[])">
      <summary>只将该 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的缩放和旋转成分应用到指定的点数组。</summary>
      <param name="pts">一个 <see cref="T:System.Drawing.Point" /> 结构的数组，它表示要变换的点。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.PointF[])">
      <summary>将数组中的每个矢量与矩阵相乘。 该矩阵的转换元素（第三行）被忽略。</summary>
      <param name="pts">一个 <see cref="T:System.Drawing.Point" /> 结构的数组，它表示要变换的点。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single)">
      <summary>通过预先计算转换向量，将指定的转换向量（<paramref name="offsetX" /> 和 <paramref name="offsetY" />）应用到此 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</summary>
      <param name="offsetX">x 值，通过它转换此 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</param>
      <param name="offsetY">y 值，通过它转换此 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>按指定的顺序，将指定的转换向量应用到此 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</summary>
      <param name="offsetX">x 值，通过它转换此 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</param>
      <param name="offsetY">y 值，通过它转换此 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</param>
      <param name="order">一个 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />，指定将转换应用到此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 所采用的顺序（追加或预先计算）。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.VectorTransformPoints(System.Drawing.Point[])">
      <summary>将数组中的每个矢量与矩阵相乘。 该矩阵的转换元素（第三行）被忽略。</summary>
      <param name="pts">一个 <see cref="T:System.Drawing.Point" /> 结构的数组，它表示要变换的点。</param>
    </member>
    <member name="T:System.Drawing.Drawing2D.MatrixOrder">
      <summary>指定矩阵转换操作的顺序。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.MatrixOrder.Append">
      <summary>在旧操作后应用新操作。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.MatrixOrder.Prepend">
      <summary>在旧操作前应用新操作。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.PathData">
      <summary>包含构成 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 对象的图形数据。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathData.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.Drawing2D.PathData" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathData.Points">
      <summary>获取或设置一个 <see cref="T:System.Drawing.PointF" /> 结构的数组，该数组表示通过其构成路径的点。</summary>
      <returns>
        <see cref="T:System.Drawing.PointF" /> 对象的数组，表示构造路径所使用的点。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathData.Types">
      <summary>获取或设置路径中相应点的类型。</summary>
      <returns>字节数组，这些字节指定路径中相应点的类型。</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.PathGradientBrush">
      <summary>封装 <see cref="T:System.Drawing.Brush" /> 对象，它通过渐变填充 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 对象的内部。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>使用指定的路径初始化 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> 类的新实例。</summary>
      <param name="path">
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />，定义此 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> 填充的区域。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.Point[])">
      <summary>使用指定的点初始化 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> 类的新实例。</summary>
      <param name="points">一个 <see cref="T:System.Drawing.Point" /> 结构的数组，它表示构成路径的顶点的点。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.Point[],System.Drawing.Drawing2D.WrapMode)">
      <summary>使用指定的点和环绕模式初始化 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> 类的新实例。</summary>
      <param name="points">一个 <see cref="T:System.Drawing.Point" /> 结构的数组，它表示构成路径的顶点的点。</param>
      <param name="wrapMode">一个 <see cref="T:System.Drawing.Drawing2D.WrapMode" />，指定使用此 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> 绘制的填充的平铺方式。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.PointF[])">
      <summary>使用指定的点初始化 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> 类的新实例。</summary>
      <param name="points">一个 <see cref="T:System.Drawing.PointF" /> 结构的数组，它表示构成路径的顶点的点。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.PointF[],System.Drawing.Drawing2D.WrapMode)">
      <summary>使用指定的点和环绕模式初始化 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> 类的新实例。</summary>
      <param name="points">一个 <see cref="T:System.Drawing.PointF" /> 结构的数组，它表示构成路径的顶点的点。</param>
      <param name="wrapMode">一个 <see cref="T:System.Drawing.Drawing2D.WrapMode" />，指定使用此 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> 绘制的填充的平铺方式。</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.Blend">
      <summary>获取或设置一个 <see cref="T:System.Drawing.Drawing2D.Blend" />，它指定定义渐变自定义过渡的位置和因素。</summary>
      <returns>一个 <see cref="T:System.Drawing.Drawing2D.Blend" />，表示渐变的自定义过渡。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.CenterColor">
      <summary>获取或设置路径渐变的中心处的颜色。</summary>
      <returns>一个 <see cref="T:System.Drawing.Color" />，表示路径渐变的中心处的颜色。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.CenterPoint">
      <summary>获取或设置路径渐变的中心点。</summary>
      <returns>一个 <see cref="T:System.Drawing.PointF" />，表示路径渐变的中心点。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.Clone">
      <summary>创建此 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> 的一个精确副本。</summary>
      <returns>该方法创建的、强制转换为对象的 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" />。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.FocusScales">
      <summary>获取或设置渐变过渡的焦点。</summary>
      <returns>一个 <see cref="T:System.Drawing.PointF" />，表示渐变过渡的焦点。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.InterpolationColors">
      <summary>获取或设置一个定义多色线性渐变的 <see cref="T:System.Drawing.Drawing2D.ColorBlend" />。</summary>
      <returns>一个 <see cref="T:System.Drawing.Drawing2D.ColorBlend" />，定义多色线性渐变。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
      <summary>通过画笔的变换矩阵与其他的矩阵相乘的乘积更新该画笔的变换矩阵。</summary>
      <param name="matrix">将与画笔的当前变换矩阵相乘的 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>通过画笔的变换矩阵与其他的矩阵相乘的乘积更新该画笔的变换矩阵。</summary>
      <param name="matrix">将与画笔的当前变换矩阵相乘的 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</param>
      <param name="order">一个 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />，它指定两个矩阵相乘的顺序。</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.Rectangle">
      <summary>获取此 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> 的边框。</summary>
      <returns>一个 <see cref="T:System.Drawing.RectangleF" />，表示限定此 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> 填充的路径的矩形区域。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.ResetTransform">
      <summary>将 <see cref="P:System.Drawing.Drawing2D.PathGradientBrush.Transform" /> 属性重置为标识。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.RotateTransform(System.Single)">
      <summary>将局部几何转换旋转指定大小。 此方法预先计算对转换的旋转。</summary>
      <param name="angle">旋转角度（范围）。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>将局部几何转换以指定顺序旋转指定量。</summary>
      <param name="angle">旋转角度（范围）。</param>
      <param name="order">一个 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />，它指定是在后面追加旋转矩阵还是在前面添加旋转矩阵。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform(System.Single,System.Single)">
      <summary>将局部几何转换缩放指定的量。 此方法预先计算转换的缩放矩阵。</summary>
      <param name="sx">X 轴方向上的变换比例因子。</param>
      <param name="sy">Y 轴方向上的变换比例因子。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>将局部几何转换以指定顺序缩放指定的量。</summary>
      <param name="sx">X 轴方向上的变换比例因子。</param>
      <param name="sy">Y 轴方向上的变换比例因子。</param>
      <param name="order">一个 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />，指定是在后面追加缩放矩阵还是在前面添加缩放矩阵。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape(System.Single)">
      <summary>创建一个从中心色向周围色线性过渡的渐变过程。</summary>
      <param name="focus">介于 0 和 1 之间的一个值，它指定沿路径中心到路径边界的任意半径向上中心色亮度最高的位置。 1（默认值）使最高亮度位于路径中心。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape(System.Single,System.Single)">
      <summary>创建一个从中心色向各周围色线性过渡的渐变过程。</summary>
      <param name="focus">介于 0 和 1 之间的一个值，它指定沿路径中心到路径边界的任意半径向上中心色亮度最高的位置。 1（默认值）使最高亮度位于路径中心。</param>
      <param name="scale">介于 0 和 1 之间的一个值，它指定与边界色混合的中心色的最高亮度。 1 导致中心色的最高可能亮度，并且它是默认值。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape(System.Single)">
      <summary>创建一个从路径中心开始向路径边界更改颜色的渐变画笔。 从一种颜色向另一种颜色的转换基于一个钟形曲线。</summary>
      <param name="focus">介于 0 和 1 之间的一个值，它指定沿路径中心到路径边界的任意半径向上中心色亮度最高的位置。 1（默认值）使最高亮度位于路径中心。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape(System.Single,System.Single)">
      <summary>创建一个从路径中心开始向路径边界更改颜色的渐变画笔。 从一种颜色向另一种颜色的转换基于一个钟形曲线。</summary>
      <param name="focus">介于 0 和 1 之间的一个值，它指定沿路径中心到路径边界的任意半径向上中心色亮度最高的位置。 1（默认值）使最高亮度位于路径中心。</param>
      <param name="scale">介于 0 和 1 之间的一个值，它指定与边界色混合的中心色的最高亮度。 1 导致中心色的最高可能亮度，并且它是默认值。</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.SurroundColors">
      <summary>获取或设置与此 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> 填充的路径中的点相对应的颜色的数组。</summary>
      <returns>一个 <see cref="T:System.Drawing.Color" /> 结构的数组，表示与此 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> 填充的路径中的各点相关联的颜色。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.Transform">
      <summary>获取或设置一个用于定义此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的局部几何变换的 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> 的副本。</summary>
      <returns>定义几何变换的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的副本，该变换仅适用于通过此 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> 绘制的填充。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform(System.Single,System.Single)">
      <summary>将指定的转换应用于局部几何变换。 该方法将预先计算对转换的平移。</summary>
      <param name="dx">X 方向的转换值。</param>
      <param name="dy">Y 方向的转换值。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>按指定的顺序向局部几何变换应用指定的转换。</summary>
      <param name="dx">X 方向的转换值。</param>
      <param name="dy">Y 方向的转换值。</param>
      <param name="order">应用转换的顺序（在前面添加或在后面追加）。</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.WrapMode">
      <summary>获取或设置 <see cref="T:System.Drawing.Drawing2D.WrapMode" />，它指示该 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> 的环绕模式。</summary>
      <returns>一个 <see cref="T:System.Drawing.Drawing2D.WrapMode" />，指定使用此 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> 绘制的填充的平铺方式。</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.PathPointType">
      <summary>指定 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 对象中点的类型。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.Bezier">
      <summary>默认贝塞尔曲线。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.Bezier3">
      <summary>立体贝塞尔曲线。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.CloseSubpath">
      <summary>子路径的终结点。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.DashMode">
      <summary>对应线段为虚线。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.Line">
      <summary>连线线段。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.PathMarker">
      <summary>路径标记。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.PathTypeMask">
      <summary>遮盖点。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.Start">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 对象的起始点。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.PenAlignment">
      <summary>指定相对于理论上、零宽度的线条的 <see cref="T:System.Drawing.Pen" /> 对象的对齐方式。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenAlignment.Center">
      <summary>指定 <see cref="T:System.Drawing.Pen" /> 对象以理论的线条为中心。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenAlignment.Inset">
      <summary>指定 <see cref="T:System.Drawing.Pen" /> 被定位于理论的线条内。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenAlignment.Left">
      <summary>指定将 <see cref="T:System.Drawing.Pen" /> 定位于理论的线条的左侧。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenAlignment.Outset">
      <summary>指定将 <see cref="T:System.Drawing.Pen" /> 定位于理论的线条外。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenAlignment.Right">
      <summary>指定将 <see cref="T:System.Drawing.Pen" /> 定位于理论的线条的右侧。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.PenType">
      <summary>指定用来填充直线的 <see cref="T:System.Drawing.Pen" /> 对象填充类型。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenType.HatchFill">
      <summary>指定阴影填充。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenType.LinearGradient">
      <summary>指定线性渐变填充。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenType.PathGradient">
      <summary>指定路径渐变填充。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenType.SolidColor">
      <summary>指定实填充。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenType.TextureFill">
      <summary>指定位图纹理填充。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.PixelOffsetMode">
      <summary>指定在呈现期间像素偏移的方式。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PixelOffsetMode.Default">
      <summary>指定默认模式。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PixelOffsetMode.Half">
      <summary>指定像素在水平和垂直距离上均偏移 -.5 个单位，以进行高速锯齿消除。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PixelOffsetMode.HighQuality">
      <summary>指定高质量、低速度呈现。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PixelOffsetMode.HighSpeed">
      <summary>指定高速度、低质量呈现。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PixelOffsetMode.Invalid">
      <summary>指定无效模式。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PixelOffsetMode.None">
      <summary>指定没有任何像素偏移。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.QualityMode">
      <summary>指定呈现 GDI+ 对象时的总体质量。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.QualityMode.Default">
      <summary>指定默认模式。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.QualityMode.High">
      <summary>指定高质量、低速度呈现。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.QualityMode.Invalid">
      <summary>指定无效模式。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.QualityMode.Low">
      <summary>指定低质量、高速度呈现。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.RegionData">
      <summary>封装构成 <see cref="T:System.Drawing.Region" /> 对象的数据。 此类不能被继承。</summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.RegionData.Data">
      <summary>获取或设置指定 <see cref="T:System.Drawing.Region" /> 对象的字节数组。</summary>
      <returns>指定 <see cref="T:System.Drawing.Region" /> 对象的字节数组。</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.SmoothingMode">
      <summary>指定是否将平滑处理（抗锯齿）应用于直线、曲线和已填充区域的边缘。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.SmoothingMode.AntiAlias">
      <summary>指定抗锯齿的呈现。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.SmoothingMode.Default">
      <summary>指定不抗锯齿。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.SmoothingMode.HighQuality">
      <summary>指定抗锯齿的呈现。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.SmoothingMode.HighSpeed">
      <summary>指定不抗锯齿。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.SmoothingMode.Invalid">
      <summary>指定无效模式。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.SmoothingMode.None">
      <summary>指定不抗锯齿。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.WarpMode">
      <summary>指定在 <see cref="Overload:System.Drawing.Drawing2D.GraphicsPath.Warp" /> 方法中应用的环绕变换的类型。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WarpMode.Bilinear">
      <summary>指定双线性环绕。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WarpMode.Perspective">
      <summary>指定透视环绕。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.WrapMode">
      <summary>指定当纹理或渐变小于所填充的区域时平铺纹理或渐变的方式。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WrapMode.Clamp">
      <summary>纹理或渐变没有平铺。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WrapMode.Tile">
      <summary>平铺渐变或纹理。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WrapMode.TileFlipX">
      <summary>水平反转纹理或渐变，然后平铺该纹理或渐变。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WrapMode.TileFlipXY">
      <summary>水平和垂直反转纹理或渐变，然后平铺该纹理或渐变。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WrapMode.TileFlipY">
      <summary>垂直反转纹理或渐变，然后平铺该纹理或渐变。</summary>
    </member>
    <member name="T:System.Drawing.Font">
      <summary>定义特定的文本格式，包括字体、字号和样式特性。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.Drawing.Font,System.Drawing.FontStyle)">
      <summary>初始化新 <see cref="T:System.Drawing.Font" />，它使用指定的现有 <see cref="T:System.Drawing.Font" /> 和 <see cref="T:System.Drawing.FontStyle" /> 枚举。</summary>
      <param name="prototype">从中创建新 <see cref="T:System.Drawing.Font" /> 的现有 <see cref="T:System.Drawing.Font" />。</param>
      <param name="newStyle">应用于新 <see cref="T:System.Drawing.Font" /> 的 <see cref="T:System.Drawing.FontStyle" />。 可以用 <see langword="OR" /> 运算符将 <see cref="T:System.Drawing.FontStyle" /> 枚举的多个值组合起来。</param>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single)">
      <summary>使用指定的大小初始化新 <see cref="T:System.Drawing.Font" />。</summary>
      <param name="family">新 <see cref="T:System.Drawing.Font" /> 的 <see cref="T:System.Drawing.FontFamily" />。</param>
      <param name="emSize">新字体的全身大小（以磅为单位）。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" /> 小于或等于 0、计算结果为无限大或者不是有效数字。</exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle)">
      <summary>使用指定的大小和样式初始化新 <see cref="T:System.Drawing.Font" />。</summary>
      <param name="family">新 <see cref="T:System.Drawing.Font" /> 的 <see cref="T:System.Drawing.FontFamily" />。</param>
      <param name="emSize">新字体的全身大小（以磅为单位）。</param>
      <param name="style">新字体的 <see cref="T:System.Drawing.FontStyle" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" /> 小于或等于 0、计算结果为无限大或者不是有效数字。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="family" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit)">
      <summary>使用指定的大小、样式和单位初始化新的 <see cref="T:System.Drawing.Font" />。</summary>
      <param name="family">新 <see cref="T:System.Drawing.Font" /> 的 <see cref="T:System.Drawing.FontFamily" />。</param>
      <param name="emSize">新字体的全身大小（采用 <paramref name="unit" /> 参数指定的单位）。</param>
      <param name="style">新字体的 <see cref="T:System.Drawing.FontStyle" />。</param>
      <param name="unit">新字体的 <see cref="T:System.Drawing.GraphicsUnit" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" /> 小于或等于 0、计算结果为无限大或者不是有效数字。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="family" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte)">
      <summary>使用指定的大小、样式、单位和字符集初始化新的 <see cref="T:System.Drawing.Font" />。</summary>
      <param name="family">新 <see cref="T:System.Drawing.Font" /> 的 <see cref="T:System.Drawing.FontFamily" />。</param>
      <param name="emSize">新字体的全身大小（采用 <paramref name="unit" /> 参数指定的单位）。</param>
      <param name="style">新字体的 <see cref="T:System.Drawing.FontStyle" />。</param>
      <param name="unit">新字体的 <see cref="T:System.Drawing.GraphicsUnit" />。</param>
      <param name="gdiCharSet">一个 <see cref="T:System.Byte" />，它指定 
 用于新字体的 GDI 字符集。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" /> 小于或等于 0、计算结果为无限大或者不是有效数字。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="family" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte,System.Boolean)">
      <summary>使用指定的大小、样式、单位和字符集初始化新的 <see cref="T:System.Drawing.Font" />。</summary>
      <param name="family">新 <see cref="T:System.Drawing.Font" /> 的 <see cref="T:System.Drawing.FontFamily" />。</param>
      <param name="emSize">新字体的全身大小（采用 <paramref name="unit" /> 参数指定的单位）。</param>
      <param name="style">新字体的 <see cref="T:System.Drawing.FontStyle" />。</param>
      <param name="unit">新字体的 <see cref="T:System.Drawing.GraphicsUnit" />。</param>
      <param name="gdiCharSet">一个 <see cref="T:System.Byte" />，它指定 
 用于此字体的 GDI 字符集。</param>
      <param name="gdiVerticalFont">一个布尔值，该值指示新字体是否从 GDI 垂直字体派生。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" /> 小于或等于 0、计算结果为无限大或者不是有效数字。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="family" /> 为 <see langword="null" /></exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.GraphicsUnit)">
      <summary>使用指定的大小和单位初始化新的 <see cref="T:System.Drawing.Font" />。 将此样式设置为 <see cref="F:System.Drawing.FontStyle.Regular" />。</summary>
      <param name="family">新 <see cref="T:System.Drawing.Font" /> 的 <see cref="T:System.Drawing.FontFamily" />。</param>
      <param name="emSize">新字体的全身大小（采用 <paramref name="unit" /> 参数指定的单位）。</param>
      <param name="unit">新字体的 <see cref="T:System.Drawing.GraphicsUnit" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="family" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" /> 小于或等于 0、计算结果为无限大或者不是有效数字。</exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.String,System.Single)">
      <summary>使用指定的大小初始化新 <see cref="T:System.Drawing.Font" />。</summary>
      <param name="familyName">新 <see cref="T:System.Drawing.Font" /> 的 <see cref="T:System.Drawing.FontFamily" /> 的字符串表示形式。</param>
      <param name="emSize">新字体的全身大小（以磅为单位）。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" /> 小于或等于 0、计算结果为无限大或者不是有效数字。</exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.FontStyle)">
      <summary>使用指定的大小和样式初始化新 <see cref="T:System.Drawing.Font" />。</summary>
      <param name="familyName">新 <see cref="T:System.Drawing.Font" /> 的 <see cref="T:System.Drawing.FontFamily" /> 的字符串表示形式。</param>
      <param name="emSize">新字体的全身大小（以磅为单位）。</param>
      <param name="style">新字体的 <see cref="T:System.Drawing.FontStyle" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" /> 小于或等于 0、计算结果为无限大或者不是有效数字。</exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit)">
      <summary>使用指定的大小、样式和单位初始化新的 <see cref="T:System.Drawing.Font" />。</summary>
      <param name="familyName">新 <see cref="T:System.Drawing.Font" /> 的 <see cref="T:System.Drawing.FontFamily" /> 的字符串表示形式。</param>
      <param name="emSize">新字体的全身大小（采用 <paramref name="unit" /> 参数指定的单位）。</param>
      <param name="style">新字体的 <see cref="T:System.Drawing.FontStyle" />。</param>
      <param name="unit">新字体的 <see cref="T:System.Drawing.GraphicsUnit" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" /> 小于或等于 0、计算结果为无限大或者不是有效数字。</exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte)">
      <summary>使用指定的大小、样式、单位和字符集初始化新的 <see cref="T:System.Drawing.Font" />。</summary>
      <param name="familyName">新 <see cref="T:System.Drawing.Font" /> 的 <see cref="T:System.Drawing.FontFamily" /> 的字符串表示形式。</param>
      <param name="emSize">新字体的全身大小（采用 <paramref name="unit" /> 参数指定的单位）。</param>
      <param name="style">新字体的 <see cref="T:System.Drawing.FontStyle" />。</param>
      <param name="unit">新字体的 <see cref="T:System.Drawing.GraphicsUnit" />。</param>
      <param name="gdiCharSet">一个 <see cref="T:System.Byte" />，它指定用于此字体的 GDI 字符集。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" /> 小于或等于 0、计算结果为无限大或者不是有效数字。</exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte,System.Boolean)">
      <summary>使用指定的大小、样式、单位和字符集初始化新 <see cref="T:System.Drawing.Font" />。</summary>
      <param name="familyName">新 <see cref="T:System.Drawing.Font" /> 的 <see cref="T:System.Drawing.FontFamily" /> 的字符串表示形式。</param>
      <param name="emSize">新字体的全身大小（采用 <paramref name="unit" /> 参数指定的单位）。</param>
      <param name="style">新字体的 <see cref="T:System.Drawing.FontStyle" />。</param>
      <param name="unit">新字体的 <see cref="T:System.Drawing.GraphicsUnit" />。</param>
      <param name="gdiCharSet">一个 <see cref="T:System.Byte" />，它指定用于此字体的 GDI 字符集。</param>
      <param name="gdiVerticalFont">一个布尔值，该值指示新 <see cref="T:System.Drawing.Font" /> 是否从 GDI 垂直字体派生。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" /> 小于或等于 0、计算结果为无限大或者不是有效数字。</exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.GraphicsUnit)">
      <summary>使用指定的大小和单位初始化新的 <see cref="T:System.Drawing.Font" />。 样式设置为 <see cref="F:System.Drawing.FontStyle.Regular" />。</summary>
      <param name="familyName">新 <see cref="T:System.Drawing.Font" /> 的 <see cref="T:System.Drawing.FontFamily" /> 的字符串表示形式。</param>
      <param name="emSize">新字体的全身大小（采用 <paramref name="unit" /> 参数指定的单位）。</param>
      <param name="unit">新字体的 <see cref="T:System.Drawing.GraphicsUnit" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" /> 小于或等于 0、计算结果为无限大或者不是有效数字。</exception>
    </member>
    <member name="P:System.Drawing.Font.Bold">
      <summary>获取一个值，该值指示此 <see cref="T:System.Drawing.Font" /> 是否为粗体。</summary>
      <returns>如果此 <see cref="T:System.Drawing.Font" /> 为粗体，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Font.Clone">
      <summary>创建此 <see cref="T:System.Drawing.Font" /> 的一个精确副本。</summary>
      <returns>此方法创建的、强制转换为 <see cref="T:System.Object" /> 的 <see cref="T:System.Drawing.Font" />。</returns>
    </member>
    <member name="M:System.Drawing.Font.Dispose">
      <summary>释放此 <see cref="T:System.Drawing.Font" /> 使用的所有资源。</summary>
    </member>
    <member name="M:System.Drawing.Font.Equals(System.Object)">
      <summary>指示指定对象是否为 <see cref="T:System.Drawing.Font" />，以及是否具有与此 <see cref="P:System.Drawing.Font.FontFamily" /> 相同的 <see cref="P:System.Drawing.Font.GdiVerticalFont" />、<see cref="P:System.Drawing.Font.GdiCharSet" />、<see cref="P:System.Drawing.Font.Style" />、<see cref="P:System.Drawing.Font.Size" />、<see cref="P:System.Drawing.Font.Unit" /> 和 <see cref="T:System.Drawing.Font" /> 属性值。</summary>
      <param name="obj">要测试的对象。</param>
      <returns>如果 <paramref name="obj" /> 参数为 <see cref="T:System.Drawing.Font" /> 并且具有与此 <see cref="T:System.Drawing.Font" /> 相同的 <see cref="P:System.Drawing.Font.FontFamily" />、<see cref="P:System.Drawing.Font.GdiVerticalFont" />、<see cref="P:System.Drawing.Font.GdiCharSet" />、<see cref="P:System.Drawing.Font.Style" />、<see cref="P:System.Drawing.Font.Size" /> 和 <see cref="P:System.Drawing.Font.Unit" /> 属性值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Font.Finalize">
      <summary>在垃圾回收将某一对象回收前允许该对象尝试释放资源并执行其他清理操作。</summary>
    </member>
    <member name="P:System.Drawing.Font.FontFamily">
      <summary>获取与此 <see cref="T:System.Drawing.FontFamily" /> 关联的 <see cref="T:System.Drawing.Font" />。</summary>
      <returns>与此 <see cref="T:System.Drawing.FontFamily" /> 关联的 <see cref="T:System.Drawing.Font" />。</returns>
    </member>
    <member name="M:System.Drawing.Font.FromHdc(System.IntPtr)">
      <summary>从设备上下文的指定 Windows 句柄创建 <see cref="T:System.Drawing.Font" />。</summary>
      <param name="hdc">设备上下文的句柄。</param>
      <returns>此方法创建的 <see cref="T:System.Drawing.Font" />。</returns>
      <exception cref="T:System.ArgumentException">指定的设备上下文的字体不是 TrueType 字体。</exception>
    </member>
    <member name="M:System.Drawing.Font.FromHfont(System.IntPtr)">
      <summary>从指定的 Windows 句柄创建一个 <see cref="T:System.Drawing.Font" />。</summary>
      <param name="hfont">GDI 字体的 Windows 句柄。</param>
      <returns>此方法创建的 <see cref="T:System.Drawing.Font" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="hfont" /> 指向不是 TrueType 字体的对象。</exception>
    </member>
    <member name="M:System.Drawing.Font.FromLogFont(System.Object)">
      <summary>从指定的 GDI 逻辑字体 (<c>LOGFONT</c>) 结构创建一个 <see cref="T:System.Drawing.Font" />。</summary>
      <param name="lf">一个 <see cref="T:System.Object" />，它表示从中创建 <see cref="T:System.Drawing.Font" /> 的 GDI <see langword="LOGFONT" /> 结构。</param>
      <returns>此方法创建的 <see cref="T:System.Drawing.Font" />。</returns>
    </member>
    <member name="M:System.Drawing.Font.FromLogFont(System.Object,System.IntPtr)">
      <summary>从指定的 GDI 逻辑字体 (<c>LOGFONT</c>) 结构创建一个 <see cref="T:System.Drawing.Font" />。</summary>
      <param name="lf">一个 <see cref="T:System.Object" />，它表示从中创建 <see cref="T:System.Drawing.Font" /> 的 GDI <see langword="LOGFONT" /> 结构。</param>
      <param name="hdc">包含有关 <paramref name="lf" /> 结构的其他信息的设备上下文的句柄。</param>
      <returns>此方法创建的 <see cref="T:System.Drawing.Font" />。</returns>
      <exception cref="T:System.ArgumentException">该字体不是 TrueType 字体。</exception>
    </member>
    <member name="P:System.Drawing.Font.GdiCharSet">
      <summary>获取一个字节值，该值指定此 <see cref="T:System.Drawing.Font" /> 使用的 GDI 字符集。</summary>
      <returns>一个字节值，该值指定此 GDI 使用的 <see cref="T:System.Drawing.Font" /> 字符集。 默认值为 1。</returns>
    </member>
    <member name="P:System.Drawing.Font.GdiVerticalFont">
      <summary>获取一个布尔值，该值指示此 <see cref="T:System.Drawing.Font" /> 是否从 GDI 垂直字体派生。</summary>
      <returns>如果此 <see cref="T:System.Drawing.Font" /> 是从 GDI 垂直字体派生的，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Font.GetHashCode">
      <summary>获取此 <see cref="T:System.Drawing.Font" /> 的哈希代码。</summary>
      <returns>此 <see cref="T:System.Drawing.Font" /> 的哈希代码。</returns>
    </member>
    <member name="M:System.Drawing.Font.GetHeight">
      <summary>返回此字体的行距（以像素为单位）。</summary>
      <returns>此字体的行距（以像素为单位）。</returns>
    </member>
    <member name="M:System.Drawing.Font.GetHeight(System.Drawing.Graphics)">
      <summary>采用指定的 <see cref="T:System.Drawing.Graphics" /> 的当前单位，返回此字体的行距。</summary>
      <param name="graphics">一个 <see cref="T:System.Drawing.Graphics" /> 对象，它存储显示设备的垂直分辨率（每英寸点数）、页面单位和页面比例设置。</param>
      <returns>此字体的行距（以像素为单位）。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="graphics" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Font.GetHeight(System.Single)">
      <summary>当用指定的垂直分辨率绘制到设备时，返回此 <see cref="T:System.Drawing.Font" /> 的高度（以像素为单位）。</summary>
      <param name="dpi">用于计算字体高度的垂直分辨率，以每英寸的点数为单位。</param>
      <returns>此 <see cref="T:System.Drawing.Font" /> 的高度（以像素为单位）。</returns>
    </member>
    <member name="P:System.Drawing.Font.Height">
      <summary>获取此字体的行距。</summary>
      <returns>此字体的行距（以像素为单位）。</returns>
    </member>
    <member name="P:System.Drawing.Font.IsSystemFont">
      <summary>获取一个值，该值表示此字体是否是 <see cref="T:System.Drawing.SystemFonts" /> 的一个成员。</summary>
      <returns>如果此字体是 <see cref="T:System.Drawing.SystemFonts" /> 的一个成员，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Font.Italic">
      <summary>获取一个值，该值指示此字体是否已应用斜体样式。</summary>
      <returns>
        <see langword="true" /> 表明此字体已应用斜体样式；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Font.Name">
      <summary>获取此 <see cref="T:System.Drawing.Font" /> 的字体名称。</summary>
      <returns>此 <see cref="T:System.Drawing.Font" /> 的字体名称的字符串表示形式。</returns>
    </member>
    <member name="P:System.Drawing.Font.OriginalFontName">
      <summary>获取最初指定的字体的名称。</summary>
      <returns>表示最初指定的字体的名称的字符串。</returns>
    </member>
    <member name="P:System.Drawing.Font.Size">
      <summary>获取此 <see cref="T:System.Drawing.Font" /> 的全身大小，单位采用 <see cref="P:System.Drawing.Font.Unit" /> 属性指定的单位。</summary>
      <returns>此 <see cref="T:System.Drawing.Font" /> 的全身大小。</returns>
    </member>
    <member name="P:System.Drawing.Font.SizeInPoints">
      <summary>获取此 <see cref="T:System.Drawing.Font" /> 的全身大小（以点为单位）。</summary>
      <returns>此 <see cref="T:System.Drawing.Font" /> 的全身大小（以点为单位）。</returns>
    </member>
    <member name="P:System.Drawing.Font.Strikeout">
      <summary>获取一个值，该值指示此 <see cref="T:System.Drawing.Font" /> 是否指定贯穿字体的横线。</summary>
      <returns>如果有一条横线贯穿此 <see cref="T:System.Drawing.Font" />，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Font.Style">
      <summary>获取此 <see cref="T:System.Drawing.Font" /> 的样式信息。</summary>
      <returns>包含此 <see cref="T:System.Drawing.FontStyle" /> 的样式信息的 <see cref="T:System.Drawing.Font" /> 枚举。</returns>
    </member>
    <member name="M:System.Drawing.Font.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>使用将目标对象序列化所需的数据填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</summary>
      <param name="si">要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">此序列化的目标（请参见 <see cref="T:System.Runtime.Serialization.StreamingContext" />）。</param>
    </member>
    <member name="P:System.Drawing.Font.SystemFontName">
      <summary>如果 <see cref="P:System.Drawing.Font.IsSystemFont" /> 属性返回 <see langword="true" />，则获取系统字体的名称。</summary>
      <returns>如果 <see cref="P:System.Drawing.Font.IsSystemFont" /> 返回 <see langword="true" />，则为系统字体的名称；否则为一个空字符串 ("")。</returns>
    </member>
    <member name="M:System.Drawing.Font.ToHfont">
      <summary>返回此 <see cref="T:System.Drawing.Font" /> 的句柄。</summary>
      <returns>此 <see cref="T:System.Drawing.Font" /> 的 Windows 句柄。</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">操作失败。</exception>
    </member>
    <member name="M:System.Drawing.Font.ToLogFont(System.Object)">
      <summary>从此 <see cref="T:System.Drawing.Font" /> 创建一个 GDI 逻辑字体 (<c>LOGFONT</c>) 结构。</summary>
      <param name="logFont">一个 <see cref="T:System.Object" />，它表示此方法创建的 <see langword="LOGFONT" /> 结构。</param>
    </member>
    <member name="M:System.Drawing.Font.ToLogFont(System.Object,System.Drawing.Graphics)">
      <summary>从此 <see cref="T:System.Drawing.Font" /> 创建一个 GDI 逻辑字体 (<c>LOGFONT</c>) 结构。</summary>
      <param name="logFont">一个 <see cref="T:System.Object" />，它表示此方法创建的 <see langword="LOGFONT" /> 结构。</param>
      <param name="graphics">一个 <see cref="T:System.Drawing.Graphics" />，它提供 <see langword="LOGFONT" /> 结构的其他信息。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="graphics" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Font.ToString">
      <summary>返回此 <see cref="T:System.Drawing.Font" /> 可读的字符串表示形式。</summary>
      <returns>表示此 <see cref="T:System.Drawing.Font" /> 的字符串。</returns>
    </member>
    <member name="P:System.Drawing.Font.Underline">
      <summary>获取一个值，该值指示此 <see cref="T:System.Drawing.Font" /> 是否有下划线。</summary>
      <returns>如果此 <see cref="T:System.Drawing.Font" /> 有下划线，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Font.Unit">
      <summary>获取此 <see cref="T:System.Drawing.Font" /> 的度量单位。</summary>
      <returns>一个 <see cref="T:System.Drawing.GraphicsUnit" />，它表示此 <see cref="T:System.Drawing.Font" /> 的度量单位。</returns>
    </member>
    <member name="T:System.Drawing.FontFamily">
      <summary>定义有着相似的基本设计但在形式上有某些差异的一组字样。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Drawing.FontFamily.#ctor(System.Drawing.Text.GenericFontFamilies)">
      <summary>从指定的一般字体系列初始化新 <see cref="T:System.Drawing.FontFamily" />。</summary>
      <param name="genericFamily">从中创建新 <see cref="T:System.Drawing.Text.GenericFontFamilies" /> 的 <see cref="T:System.Drawing.FontFamily" />。</param>
    </member>
    <member name="M:System.Drawing.FontFamily.#ctor(System.String)">
      <summary>用指定的名称初始化新 <see cref="T:System.Drawing.FontFamily" />。</summary>
      <param name="name">新 <see cref="T:System.Drawing.FontFamily" /> 的名称。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 为空字符串 ("")。  

或 - 
<paramref name="name" /> 指定运行应用程序的计算机上未安装的字体。  

或 
 <paramref name="name" /> 指定非 TrueType 字体的字体。</exception>
    </member>
    <member name="M:System.Drawing.FontFamily.#ctor(System.String,System.Drawing.Text.FontCollection)">
      <summary>使用指定名称初始化指定的 <see cref="T:System.Drawing.FontFamily" /> 中的新 <see cref="T:System.Drawing.Text.FontCollection" />。</summary>
      <param name="name">一个 <see cref="T:System.String" />，表示新 <see cref="T:System.Drawing.FontFamily" /> 的名称。</param>
      <param name="fontCollection">包含此 <see cref="T:System.Drawing.Text.FontCollection" /> 的 <see cref="T:System.Drawing.FontFamily" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 为空字符串 ("")。  

或 - 
<paramref name="name" /> 指定运行应用程序的计算机上未安装的字体。  

或 - 
<paramref name="name" /> 指定非 TrueType 字体的字体。</exception>
    </member>
    <member name="M:System.Drawing.FontFamily.Dispose">
      <summary>释放此 <see cref="T:System.Drawing.FontFamily" /> 使用的所有资源。</summary>
    </member>
    <member name="M:System.Drawing.FontFamily.Equals(System.Object)">
      <summary>指示指定的对象是否为 <see cref="T:System.Drawing.FontFamily" /> 以及是否与此 <see cref="T:System.Drawing.FontFamily" /> 相等。</summary>
      <param name="obj">要测试的对象。</param>
      <returns>如果 <paramref name="obj" /> 为 <see cref="T:System.Drawing.FontFamily" /> 且与此 <see cref="T:System.Drawing.FontFamily" /> 相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.FontFamily.Families">
      <summary>返回一个数组，该数组包含与当前图形上下文相关的所有 <see cref="T:System.Drawing.FontFamily" /> 对象。</summary>
      <returns>与当前图形上下文相关的 <see cref="T:System.Drawing.FontFamily" /> 对象的数组。</returns>
    </member>
    <member name="M:System.Drawing.FontFamily.Finalize">
      <summary>在垃圾回收将某一对象回收前允许该对象尝试释放资源并执行其他清理操作。</summary>
    </member>
    <member name="P:System.Drawing.FontFamily.GenericMonospace">
      <summary>获取一般 monospace <see cref="T:System.Drawing.FontFamily" />。</summary>
      <returns>表示一般 monospace 字体的 <see cref="T:System.Drawing.FontFamily" />。</returns>
    </member>
    <member name="P:System.Drawing.FontFamily.GenericSansSerif">
      <summary>获取一般 sans serif <see cref="T:System.Drawing.FontFamily" /> 对象。</summary>
      <returns>表示一般 sans serif 字体的 <see cref="T:System.Drawing.FontFamily" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.FontFamily.GenericSerif">
      <summary>获取一般 serif <see cref="T:System.Drawing.FontFamily" />。</summary>
      <returns>表示一般 serif 字体的 <see cref="T:System.Drawing.FontFamily" />。</returns>
    </member>
    <member name="M:System.Drawing.FontFamily.GetCellAscent(System.Drawing.FontStyle)">
      <summary>返回指定样式的 <see cref="T:System.Drawing.FontFamily" /> 的单元格上升，采用设计单位。</summary>
      <param name="style">
        <see cref="T:System.Drawing.FontStyle" />，它包含字体的样式信息。</param>
      <returns>使用了指定的 <see cref="T:System.Drawing.FontFamily" /> 的此 <see cref="T:System.Drawing.FontStyle" /> 的单元格上升。</returns>
    </member>
    <member name="M:System.Drawing.FontFamily.GetCellDescent(System.Drawing.FontStyle)">
      <summary>返回指定样式的 <see cref="T:System.Drawing.FontFamily" /> 的单元格下降，采用设计单位。</summary>
      <param name="style">
        <see cref="T:System.Drawing.FontStyle" />，它包含字体的样式信息。</param>
      <returns>使用了指定的 <see cref="T:System.Drawing.FontFamily" /> 的此 <see cref="T:System.Drawing.FontStyle" /> 的单元格下降度量。</returns>
    </member>
    <member name="M:System.Drawing.FontFamily.GetEmHeight(System.Drawing.FontStyle)">
      <summary>获取指定样式的 em 方形的高度，采用字体设计单位。</summary>
      <param name="style">为其获取全身高度的 <see cref="T:System.Drawing.FontStyle" />。</param>
      <returns>em 方形的高度。</returns>
    </member>
    <member name="M:System.Drawing.FontFamily.GetFamilies(System.Drawing.Graphics)">
      <summary>返回一个数组，该数组包含指定的图形上下文可用的所有 <see cref="T:System.Drawing.FontFamily" /> 对象。</summary>
      <param name="graphics">从其返回 <see cref="T:System.Drawing.FontFamily" /> 对象的 <see cref="T:System.Drawing.Graphics" /> 对象。</param>
      <returns>指定的 <see cref="T:System.Drawing.Graphics" /> 对象可用的 <see cref="T:System.Drawing.FontFamily" /> 对象的数组。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="graphics" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.FontFamily.GetHashCode">
      <summary>获取此 <see cref="T:System.Drawing.FontFamily" /> 的哈希代码。</summary>
      <returns>此 <see cref="T:System.Drawing.FontFamily" /> 的哈希代码。</returns>
    </member>
    <member name="M:System.Drawing.FontFamily.GetLineSpacing(System.Drawing.FontStyle)">
      <summary>返回指定样式的 <see cref="T:System.Drawing.FontFamily" /> 的行距，采用设计单位。 行距是两个连续文本行的基线之间的垂直距离。</summary>
      <param name="style">要应用的 <see cref="T:System.Drawing.FontStyle" />。</param>
      <returns>两行相邻文本之间的距离。</returns>
    </member>
    <member name="M:System.Drawing.FontFamily.GetName(System.Int32)">
      <summary>用指定的语言返回此 <see cref="T:System.Drawing.FontFamily" /> 的名称。</summary>
      <param name="language">返回此名称所用的语言。</param>
      <returns>一个 <see cref="T:System.String" />，它用指定的语言表示此 <see cref="T:System.Drawing.FontFamily" /> 的名称。</returns>
    </member>
    <member name="M:System.Drawing.FontFamily.IsStyleAvailable(System.Drawing.FontStyle)">
      <summary>指示指定的 <see cref="T:System.Drawing.FontStyle" /> 枚举是否可用。</summary>
      <param name="style">要测试的 <see cref="T:System.Drawing.FontStyle" />。</param>
      <returns>如果指定的 <see cref="T:System.Drawing.FontStyle" /> 可用，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.FontFamily.Name">
      <summary>获取此 <see cref="T:System.Drawing.FontFamily" /> 的名称。</summary>
      <returns>一个 <see cref="T:System.String" />，表示此 <see cref="T:System.Drawing.FontFamily" /> 的名称。</returns>
    </member>
    <member name="M:System.Drawing.FontFamily.ToString">
      <summary>将此 <see cref="T:System.Drawing.FontFamily" /> 转换为可读的字符串表示形式。</summary>
      <returns>表示此 <see cref="T:System.Drawing.FontFamily" /> 的字符串。</returns>
    </member>
    <member name="T:System.Drawing.FontStyle">
      <summary>指定应用到文本的字形信息。</summary>
    </member>
    <member name="F:System.Drawing.FontStyle.Bold">
      <summary>加粗文本。</summary>
    </member>
    <member name="F:System.Drawing.FontStyle.Italic">
      <summary>倾斜文本。</summary>
    </member>
    <member name="F:System.Drawing.FontStyle.Regular">
      <summary>普通文本。</summary>
    </member>
    <member name="F:System.Drawing.FontStyle.Strikeout">
      <summary>中间有直线通过的文本。</summary>
    </member>
    <member name="F:System.Drawing.FontStyle.Underline">
      <summary>带下划线的文本。</summary>
    </member>
    <member name="T:System.Drawing.Graphics">
      <summary>封装一个 GDI+ 绘图图面。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Drawing.Graphics.AddMetafileComment(System.Byte[])">
      <summary>向当前 <see cref="T:System.Drawing.Imaging.Metafile" /> 添加注释。</summary>
      <param name="data">包含注释的字节的数组。</param>
    </member>
    <member name="M:System.Drawing.Graphics.BeginContainer">
      <summary>保存具有此 <see cref="T:System.Drawing.Graphics" /> 的当前状态的图形容器，然后打开并使用新的图形容器。</summary>
      <returns>此方法返回一个 <see cref="T:System.Drawing.Drawing2D.GraphicsContainer" />，该对象表示该方法调用运行时此 <see cref="T:System.Drawing.Graphics" /> 的状态。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.BeginContainer(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
      <summary>保存具有此 <see cref="T:System.Drawing.Graphics" /> 的当前状态的图形容器，然后打开并使用具有指定缩放变形的新图形容器。</summary>
      <param name="dstrect">
        <see cref="T:System.Drawing.Rectangle" /> 结构，它与 <paramref name="srcrect" /> 参数一起为容器指定缩放变换。</param>
      <param name="srcrect">
        <see cref="T:System.Drawing.Rectangle" /> 结构，它与 <paramref name="dstrect" /> 参数一起为容器指定缩放变换。</param>
      <param name="unit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定容器的度量单位。</param>
      <returns>此方法返回一个 <see cref="T:System.Drawing.Drawing2D.GraphicsContainer" />，该对象表示该方法调用运行时此 <see cref="T:System.Drawing.Graphics" /> 的状态。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.BeginContainer(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
      <summary>保存具有此 <see cref="T:System.Drawing.Graphics" /> 的当前状态的图形容器，然后打开并使用具有指定缩放变形的新图形容器。</summary>
      <param name="dstrect">
        <see cref="T:System.Drawing.RectangleF" /> 结构，它与 <paramref name="srcrect" /> 参数一起为新的图形容器指定缩放变换。</param>
      <param name="srcrect">
        <see cref="T:System.Drawing.RectangleF" /> 结构，它与 <paramref name="dstrect" /> 参数一起为新的图形容器指定缩放变换。</param>
      <param name="unit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定容器的度量单位。</param>
      <returns>此方法返回一个 <see cref="T:System.Drawing.Drawing2D.GraphicsContainer" />，该对象表示该方法调用运行时此 <see cref="T:System.Drawing.Graphics" /> 的状态。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.Clear(System.Drawing.Color)">
      <summary>清除整个绘图面并以指定背景色填充。</summary>
      <param name="color">
        <see cref="T:System.Drawing.Color" /> 结构，它表示绘图面的背景色。</param>
    </member>
    <member name="P:System.Drawing.Graphics.Clip">
      <summary>获取或设置 <see cref="T:System.Drawing.Region" />，它限定此 <see cref="T:System.Drawing.Graphics" /> 的绘图区域。</summary>
      <returns>一个 <see cref="T:System.Drawing.Region" />，它限定此 <see cref="T:System.Drawing.Graphics" /> 当前可用的绘图区域。</returns>
    </member>
    <member name="P:System.Drawing.Graphics.ClipBounds">
      <summary>获取一个 <see cref="T:System.Drawing.RectangleF" /> 结构，该结构限定此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域。</summary>
      <returns>一个 <see cref="T:System.Drawing.RectangleF" /> 结构，它表示此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域的边框。</returns>
    </member>
    <member name="P:System.Drawing.Graphics.CompositingMode">
      <summary>获取一个值，该值指定如何将合成图像绘制到此 <see cref="T:System.Drawing.Graphics" />。</summary>
      <returns>此属性指定 <see cref="T:System.Drawing.Drawing2D.CompositingMode" /> 枚举的成员。 默认值为 <see cref="F:System.Drawing.Drawing2D.CompositingMode.SourceOver" />。</returns>
    </member>
    <member name="P:System.Drawing.Graphics.CompositingQuality">
      <summary>获取或设置绘制到此 <see cref="T:System.Drawing.Graphics" /> 的合成图像的呈现质量。</summary>
      <returns>此属性指定 <see cref="T:System.Drawing.Drawing2D.CompositingQuality" /> 枚举的成员。 默认值为 <see cref="F:System.Drawing.Drawing2D.CompositingQuality.Default" />。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size)">
      <summary>执行颜色数据（对应于由像素组成的矩形）从屏幕到 <see cref="T:System.Drawing.Graphics" /> 的绘图图面的位块传输。</summary>
      <param name="upperLeftSource">位于源矩形左上角的点。</param>
      <param name="upperLeftDestination">位于目标矩形左上角的点。</param>
      <param name="blockRegionSize">要传输的区域大小。</param>
      <exception cref="T:System.ComponentModel.Win32Exception">此操作失败。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size,System.Drawing.CopyPixelOperation)">
      <summary>执行颜色数据（对应于由像素组成的矩形）从屏幕到 <see cref="T:System.Drawing.Graphics" /> 的绘图图面的位块传输。</summary>
      <param name="upperLeftSource">位于源矩形左上角的点。</param>
      <param name="upperLeftDestination">位于目标矩形左上角的点。</param>
      <param name="blockRegionSize">要传输的区域大小。</param>
      <param name="copyPixelOperation">
        <see cref="T:System.Drawing.CopyPixelOperation" /> 值之一。</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="copyPixelOperation" /> 不是 <see cref="T:System.Drawing.CopyPixelOperation" /> 的成员。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">此操作失败。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size)">
      <summary>执行颜色数据（对应于由像素组成的矩形）从屏幕到 <see cref="T:System.Drawing.Graphics" /> 的绘图图面的位块传输。</summary>
      <param name="sourceX">位于源矩形左上角的点的 x 坐标。</param>
      <param name="sourceY">位于源矩形左上角的点的 y 坐标。</param>
      <param name="destinationX">位于目标矩形左上角的点的 x 坐标。</param>
      <param name="destinationY">位于目标矩形左上角的点的 y 坐标。</param>
      <param name="blockRegionSize">要传输的区域大小。</param>
      <exception cref="T:System.ComponentModel.Win32Exception">此操作失败。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size,System.Drawing.CopyPixelOperation)">
      <summary>执行颜色数据（对应于由像素组成的矩形）从屏幕到 <see cref="T:System.Drawing.Graphics" /> 的绘图图面的位块传输。</summary>
      <param name="sourceX">位于源矩形左上角的点的 x 坐标。</param>
      <param name="sourceY">位于源矩形左上角的点的 y 坐标</param>
      <param name="destinationX">位于目标矩形左上角的点的 x 坐标。</param>
      <param name="destinationY">位于目标矩形左上角的点的 y 坐标。</param>
      <param name="blockRegionSize">要传输的区域大小。</param>
      <param name="copyPixelOperation">
        <see cref="T:System.Drawing.CopyPixelOperation" /> 值之一。</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="copyPixelOperation" /> 不是 <see cref="T:System.Drawing.CopyPixelOperation" /> 的成员。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">此操作失败。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.Dispose">
      <summary>释放此 <see cref="T:System.Drawing.Graphics" /> 使用的所有资源。</summary>
    </member>
    <member name="P:System.Drawing.Graphics.DpiX">
      <summary>获取此 <see cref="T:System.Drawing.Graphics" /> 的水平分辨率。</summary>
      <returns>此 <see cref="T:System.Drawing.Graphics" /> 支持的水平分辨率的值（以每英寸点数为单位）。</returns>
    </member>
    <member name="P:System.Drawing.Graphics.DpiY">
      <summary>获取此 <see cref="T:System.Drawing.Graphics" /> 的垂直分辨率。</summary>
      <returns>此 <see cref="T:System.Drawing.Graphics" /> 支持的垂直分辨率的值（以每英寸点数为单位）。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
      <summary>绘制一段弧线，它表示 <see cref="T:System.Drawing.Rectangle" /> 结构指定的椭圆的一部分。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，它确定弧线的颜色、宽度和样式。</param>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" /> 结构，它定义椭圆的边界。</param>
      <param name="startAngle">从 x 轴到弧线的起始点沿顺时针方向度量的角（以度为单位）。</param>
      <param name="sweepAngle">从 <paramref name="startAngle" /> 参数到弧线的结束点沿顺时针方向度量的角（以度为单位）。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
      <summary>绘制一段弧线，它表示 <see cref="T:System.Drawing.RectangleF" /> 结构指定的椭圆的一部分。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，它确定弧线的颜色、宽度和样式。</param>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" /> 结构，它定义椭圆的边界。</param>
      <param name="startAngle">从 x 轴到弧线的起始点沿顺时针方向度量的角（以度为单位）。</param>
      <param name="sweepAngle">从 <paramref name="startAngle" /> 参数到弧线的结束点沿顺时针方向度量的角（以度为单位）。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 为 <see langword="null" /></exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>绘制一段弧线，它表示由一对坐标、宽度和高度指定的椭圆部分。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，它确定弧线的颜色、宽度和样式。</param>
      <param name="x">定义椭圆的矩形的左上角的 x 坐标。</param>
      <param name="y">定义椭圆的矩形的左上角的 y 坐标。</param>
      <param name="width">定义椭圆的矩形的宽度。</param>
      <param name="height">定义椭圆的矩形的高度。</param>
      <param name="startAngle">从 x 轴到弧线的起始点沿顺时针方向度量的角（以度为单位）。</param>
      <param name="sweepAngle">从 <paramref name="startAngle" /> 参数到弧线的结束点沿顺时针方向度量的角（以度为单位）。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>绘制一段弧线，它表示由一对坐标、宽度和高度指定的椭圆部分。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，它确定弧线的颜色、宽度和样式。</param>
      <param name="x">定义椭圆的矩形的左上角的 x 坐标。</param>
      <param name="y">定义椭圆的矩形的左上角的 y 坐标。</param>
      <param name="width">定义椭圆的矩形的宽度。</param>
      <param name="height">定义椭圆的矩形的高度。</param>
      <param name="startAngle">从 x 轴到弧线的起始点沿顺时针方向度量的角（以度为单位）。</param>
      <param name="sweepAngle">从 <paramref name="startAngle" /> 参数到弧线的结束点沿顺时针方向度量的角（以度为单位）。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
      <summary>绘制由 4 个 <see cref="T:System.Drawing.Point" /> 结构定义的贝塞尔样条。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> 结构，它确定曲线的颜色、宽度和样式。</param>
      <param name="pt1">
        <see cref="T:System.Drawing.Point" /> 结构，它表示曲线的起始点。</param>
      <param name="pt2">
        <see cref="T:System.Drawing.Point" /> 结构，它表示曲线的第一个控制点。</param>
      <param name="pt3">
        <see cref="T:System.Drawing.Point" /> 结构，它表示曲线的第二个控制点。</param>
      <param name="pt4">
        <see cref="T:System.Drawing.Point" /> 结构，它表示曲线的结束点。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
      <summary>绘制由 4 个 <see cref="T:System.Drawing.PointF" /> 结构定义的贝塞尔样条。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和样式。</param>
      <param name="pt1">
        <see cref="T:System.Drawing.PointF" /> 结构，它表示曲线的起始点。</param>
      <param name="pt2">
        <see cref="T:System.Drawing.PointF" /> 结构，它表示曲线的第一个控制点。</param>
      <param name="pt3">
        <see cref="T:System.Drawing.PointF" /> 结构，它表示曲线的第二个控制点。</param>
      <param name="pt4">
        <see cref="T:System.Drawing.PointF" /> 结构，它表示曲线的结束点。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>绘制由四个表示点的有序坐标对定义的贝塞尔样条。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和样式。</param>
      <param name="x1">曲线起始点的 X 坐标。</param>
      <param name="y1">曲线起始点的 Y 坐标。</param>
      <param name="x2">曲线的第一个控制点的 X 坐标。</param>
      <param name="y2">曲线的第一个控制点的 Y 坐标。</param>
      <param name="x3">曲线的第二个控制点的 X 坐标。</param>
      <param name="y3">曲线的第二个控制点的 Y 坐标。</param>
      <param name="x4">曲线的结束点的 X 坐标。</param>
      <param name="y4">曲线的结束点的 Y 坐标。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.Point[])">
      <summary>用 <see cref="T:System.Drawing.Point" /> 结构数组绘制一系列贝塞尔样条。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和样式。</param>
      <param name="points">
        <see cref="T:System.Drawing.Point" /> 结构的数组，这些结构表示确定曲线的点。 此数组中的点数应为 3 的倍数加 1，如 4、7 或 10。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 为 <see langword="null" />。  
或 
 <paramref name="points" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.PointF[])">
      <summary>用 <see cref="T:System.Drawing.PointF" /> 结构数组绘制一系列贝塞尔样条。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和样式。</param>
      <param name="points">
        <see cref="T:System.Drawing.PointF" /> 结构的数组，这些结构表示确定曲线的点。 此数组中的点数应为 3 的倍数加 1，如 4、7 或 10。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 为 <see langword="null" />。  
或 
 <paramref name="points" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[])">
      <summary>绘制由 <see cref="T:System.Drawing.Point" /> 结构的数组定义的闭合基数样条。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和高度。</param>
      <param name="points">
        <see cref="T:System.Drawing.Point" /> 结构数组，这些结构定义样条。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 为 <see langword="null" />。  
或 
 <paramref name="points" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single,System.Drawing.Drawing2D.FillMode)">
      <summary>使用指定的张力绘制由 <see cref="T:System.Drawing.Point" /> 结构数组定义的闭合基数样条。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和高度。</param>
      <param name="points">
        <see cref="T:System.Drawing.Point" /> 结构数组，这些结构定义样条。</param>
      <param name="tension">大于或等于 0.0F 的值，该值指定曲线的张力。</param>
      <param name="fillmode">
        <see cref="T:System.Drawing.Drawing2D.FillMode" /> 枚举的成员，它确定填充曲线的方式。 需要此参数但被忽略。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 为 <see langword="null" />。  
或 
 <paramref name="points" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[])">
      <summary>绘制由 <see cref="T:System.Drawing.PointF" /> 结构的数组定义的闭合基数样条。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和高度。</param>
      <param name="points">
        <see cref="T:System.Drawing.PointF" /> 结构数组，这些结构定义样条。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 为 <see langword="null" />。  
或 
 <paramref name="points" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)">
      <summary>使用指定的张力绘制由 <see cref="T:System.Drawing.PointF" /> 结构数组定义的闭合基数样条。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和高度。</param>
      <param name="points">
        <see cref="T:System.Drawing.PointF" /> 结构数组，这些结构定义样条。</param>
      <param name="tension">大于或等于 0.0F 的值，该值指定曲线的张力。</param>
      <param name="fillmode">
        <see cref="T:System.Drawing.Drawing2D.FillMode" /> 枚举的成员，它确定填充曲线的方式。 需要此参数但被忽略。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 为 <see langword="null" />。  
或 
 <paramref name="points" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[])">
      <summary>绘制经过一组指定的 <see cref="T:System.Drawing.Point" /> 结构的基数样条。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和高度。</param>
      <param name="points">
        <see cref="T:System.Drawing.Point" /> 结构数组，这些结构定义样条。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 为 <see langword="null" />。  
或 
 <paramref name="points" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
      <summary>使用指定的张力绘制经过一组指定的 <see cref="T:System.Drawing.Point" /> 结构的基数样条。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和样式。</param>
      <param name="points">
        <see cref="T:System.Drawing.Point" /> 结构数组，这些结构定义样条。</param>
      <param name="offset">从 <paramref name="points" /> 参数数组中的第一个元素到曲线中起始点的偏移量。</param>
      <param name="numberOfSegments">起始点之后要包含在曲线中的段数。</param>
      <param name="tension">大于或等于 0.0F 的值，该值指定曲线的张力。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 为 <see langword="null" />。  
或 
 <paramref name="points" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single)">
      <summary>使用指定的张力绘制经过一组指定的 <see cref="T:System.Drawing.Point" /> 结构的基数样条。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和样式。</param>
      <param name="points">
        <see cref="T:System.Drawing.Point" /> 结构数组，这些结构定义样条。</param>
      <param name="tension">大于或等于 0.0F 的值，该值指定曲线的张力。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 为 <see langword="null" />。  
或 
 <paramref name="points" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[])">
      <summary>绘制经过一组指定的 <see cref="T:System.Drawing.PointF" /> 结构的基数样条。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和样式。</param>
      <param name="points">
        <see cref="T:System.Drawing.PointF" /> 结构数组，这些结构定义样条。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 为 <see langword="null" />。  
或 
 <paramref name="points" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32)">
      <summary>绘制经过一组指定的 <see cref="T:System.Drawing.PointF" /> 结构的基数样条。 从相对于数组开始位置的偏移量开始绘制。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和样式。</param>
      <param name="points">
        <see cref="T:System.Drawing.PointF" /> 结构数组，这些结构定义样条。</param>
      <param name="offset">从 <paramref name="points" /> 参数数组中的第一个元素到曲线中起始点的偏移量。</param>
      <param name="numberOfSegments">起始点之后要包含在曲线中的段数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 为 <see langword="null" />。  
或 
 <paramref name="points" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
      <summary>使用指定的张力绘制经过一组指定的 <see cref="T:System.Drawing.PointF" /> 结构的基数样条。 从相对于数组开始位置的偏移量开始绘制。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和样式。</param>
      <param name="points">
        <see cref="T:System.Drawing.PointF" /> 结构数组，这些结构定义样条。</param>
      <param name="offset">从 <paramref name="points" /> 参数数组中的第一个元素到曲线中起始点的偏移量。</param>
      <param name="numberOfSegments">起始点之后要包含在曲线中的段数。</param>
      <param name="tension">大于或等于 0.0F 的值，该值指定曲线的张力。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 为 <see langword="null" />。  
或 
 <paramref name="points" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single)">
      <summary>使用指定的张力绘制经过一组指定的 <see cref="T:System.Drawing.PointF" /> 结构的基数样条。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和样式。</param>
      <param name="points">
        <see cref="T:System.Drawing.PointF" /> 结构的数组，这些结构表示定义曲线的点。</param>
      <param name="tension">大于或等于 0.0F 的值，该值指定曲线的张力。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 为 <see langword="null" />。  
或 
 <paramref name="points" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.Rectangle)">
      <summary>绘制边界 <see cref="T:System.Drawing.Rectangle" /> 结构指定的椭圆。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和样式。</param>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" /> 结构，它定义椭圆的边界。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.RectangleF)">
      <summary>绘制边界 <see cref="T:System.Drawing.RectangleF" /> 定义的椭圆。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和样式。</param>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" /> 结构，它定义椭圆的边界。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>绘制一个由边框定义的椭圆，该边框由矩形的左上角坐标、高度和宽度指定。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和样式。</param>
      <param name="x">定义椭圆的边框的左上角的 X 坐标。</param>
      <param name="y">定义椭圆的边框的左上角的 Y 坐标。</param>
      <param name="width">定义椭圆的边框的宽度。</param>
      <param name="height">定义椭圆的边框的高度。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
      <summary>绘制一个由边框（该边框由一对坐标、高度和宽度指定）定义的椭圆。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和样式。</param>
      <param name="x">定义椭圆的边框的左上角的 X 坐标。</param>
      <param name="y">定义椭圆的边框的左上角的 Y 坐标。</param>
      <param name="width">定义椭圆的边框的宽度。</param>
      <param name="height">定义椭圆的边框的高度。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Drawing.Rectangle)">
      <summary>在 <see cref="T:System.Drawing.Icon" /> 结构指定的区域内绘制指定的 <see cref="T:System.Drawing.Rectangle" /> 表示的图像。</summary>
      <param name="icon">要绘制的 <see cref="T:System.Drawing.Icon" />。</param>
      <param name="targetRect">
        <see cref="T:System.Drawing.Rectangle" /> 结构，它指定显示面上结果图像的位置和大小。 将 <paramref name="icon" /> 参数中包含的图像缩放为此矩形区域的尺寸。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="icon" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Int32,System.Int32)">
      <summary>在指定坐标处绘制由指定的 <see cref="T:System.Drawing.Icon" /> 表示的图像。</summary>
      <param name="icon">要绘制的 <see cref="T:System.Drawing.Icon" />。</param>
      <param name="x">所绘制图像的左上角的 x 坐标。</param>
      <param name="y">所绘制图像的左上角的 y 坐标。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="icon" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawIconUnstretched(System.Drawing.Icon,System.Drawing.Rectangle)">
      <summary>绘制指定的 <see cref="T:System.Drawing.Icon" /> 表示的图像，而不缩放该图像。</summary>
      <param name="icon">要绘制的 <see cref="T:System.Drawing.Icon" />。</param>
      <param name="targetRect">
        <see cref="T:System.Drawing.Rectangle" /> 结构，它指定所绘制图像的位置和大小。 不缩放图像以适合此矩形的大小，但保留其原始大小。 如果该图像比该矩形大，将它剪裁到适合它的大小。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="icon" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point)">
      <summary>在指定的位置使用原始物理大小绘制指定的 <see cref="T:System.Drawing.Image" />。</summary>
      <param name="image">要绘制的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="point">
        <see cref="T:System.Drawing.Point" /> 结构，它表示所绘制图像的左上角的位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[])">
      <summary>在指定位置并且按指定形状和大小绘制指定的 <see cref="T:System.Drawing.Image" />。</summary>
      <param name="image">要绘制的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="destPoints">由三个 <see cref="T:System.Drawing.Point" /> 结构组成的数组，这三个结构定义一个平行四边形。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
      <summary>在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" /> 的指定部分。</summary>
      <param name="image">要绘制的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="destPoints">由三个 <see cref="T:System.Drawing.Point" /> 结构组成的数组，这三个结构定义一个平行四边形。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> 结构，它指定 <paramref name="image" /> 对象中要绘制的部分。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定 <paramref name="srcRect" /> 参数所用的度量单位。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
      <summary>在指定位置绘制指定的 <see cref="T:System.Drawing.Image" /> 的指定部分。</summary>
      <param name="image">要绘制的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="destPoints">由三个 <see cref="T:System.Drawing.Point" /> 结构组成的数组，这三个结构定义一个平行四边形。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> 结构，它指定 <paramref name="image" /> 对象中要绘制的部分。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定 <paramref name="srcRect" /> 参数所用的度量单位。</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定 <paramref name="image" /> 对象的重新着色和伽玛信息。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
      <summary>在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" /> 的指定部分。</summary>
      <param name="image">要绘制的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="destPoints">由三个 <see cref="T:System.Drawing.PointF" /> 结构组成的数组，这三个结构定义一个平行四边形。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> 结构，它指定 <paramref name="image" /> 对象中要绘制的部分。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定 <paramref name="srcRect" /> 参数所用的度量单位。</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定 <paramref name="image" /> 对象的重新着色和伽玛信息。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 委托，它指定在绘制图像期间要调用的方法。 此方法被频繁调用以检查是否根据应用程序确定的条件停止 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" /> 方法的执行。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
      <summary>在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" /> 的指定部分。</summary>
      <param name="image">要绘制的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="destPoints">由三个 <see cref="T:System.Drawing.PointF" /> 结构组成的数组，这三个结构定义一个平行四边形。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> 结构，它指定 <paramref name="image" /> 对象中要绘制的部分。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定 <paramref name="srcRect" /> 参数所用的度量单位。</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定 <paramref name="image" /> 对象的重新着色和伽玛信息。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 委托，它指定在绘制图像期间要调用的方法。 此方法被频繁调用以检查是否根据应用程序确定的条件停止 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" /> 方法的执行。</param>
      <param name="callbackData">一个值，它为 <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 委托指定在检查是否停止执行 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" /> 方法时要使用的附加数据。</param>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF)">
      <summary>在指定的位置使用原始物理大小绘制指定的 <see cref="T:System.Drawing.Image" />。</summary>
      <param name="image">要绘制的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="point">
        <see cref="T:System.Drawing.PointF" /> 结构，它指定所绘制图像的左上角。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[])">
      <summary>在指定位置并且按指定形状和大小绘制指定的 <see cref="T:System.Drawing.Image" />。</summary>
      <param name="image">要绘制的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="destPoints">由三个 <see cref="T:System.Drawing.PointF" /> 结构组成的数组，这三个结构定义一个平行四边形。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
      <summary>在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" /> 的指定部分。</summary>
      <param name="image">要绘制的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="destPoints">由三个 <see cref="T:System.Drawing.PointF" /> 结构组成的数组，这三个结构定义一个平行四边形。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> 结构，它指定 <paramref name="image" /> 对象中要绘制的部分。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定 <paramref name="srcRect" /> 参数所用的度量单位。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
      <summary>在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" /> 的指定部分。</summary>
      <param name="image">要绘制的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="destPoints">由三个 <see cref="T:System.Drawing.PointF" /> 结构组成的数组，这三个结构定义一个平行四边形。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> 结构，它指定 <paramref name="image" /> 对象中要绘制的部分。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定 <paramref name="srcRect" /> 参数所用的度量单位。</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定 <paramref name="image" /> 对象的重新着色和伽玛信息。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
      <summary>在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" /> 的指定部分。</summary>
      <param name="image">要绘制的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="destPoints">由三个 <see cref="T:System.Drawing.PointF" /> 结构组成的数组，这三个结构定义一个平行四边形。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> 结构，它指定 <paramref name="image" /> 对象中要绘制的部分。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定 <paramref name="srcRect" /> 参数所用的度量单位。</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定 <paramref name="image" /> 对象的重新着色和伽玛信息。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 委托，它指定在绘制图像期间要调用的方法。 此方法被频繁调用以检查是否根据应用程序确定的条件停止 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" /> 方法的执行。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
      <summary>在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" /> 的指定部分。</summary>
      <param name="image">要绘制的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="destPoints">由三个 <see cref="T:System.Drawing.PointF" /> 结构组成的数组，这三个结构定义一个平行四边形。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> 结构，它指定 <paramref name="image" /> 对象中要绘制的部分。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定 <paramref name="srcRect" /> 参数所用的度量单位。</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定 <paramref name="image" /> 对象的重新着色和伽玛信息。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 委托，它指定在绘制图像期间要调用的方法。 此方法被频繁调用以检查是否根据应用程序确定的条件停止 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" /> 方法的执行。</param>
      <param name="callbackData">一个值，它为 <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 委托指定在检查是否停止执行 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" /> 方法时要使用的附加数据。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle)">
      <summary>在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" />。</summary>
      <param name="image">要绘制的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" /> 结构，它指定所绘制图像的位置和大小。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
      <summary>在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" /> 的指定部分。</summary>
      <param name="image">要绘制的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> 结构，它指定所绘制图像的位置和大小。 将图像进行缩放以适合该矩形。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> 结构，它指定 <paramref name="image" /> 对象中要绘制的部分。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定 <paramref name="srcRect" /> 参数所用的度量单位。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit)">
      <summary>在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" /> 的指定部分。</summary>
      <param name="image">要绘制的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> 结构，它指定所绘制图像的位置和大小。 将图像进行缩放以适合该矩形。</param>
      <param name="srcX">要绘制的源图像部分的左上角的 x 坐标。</param>
      <param name="srcY">要绘制的源图像部分的左上角的 y 坐标。</param>
      <param name="srcWidth">要绘制的源图像部分的宽度。</param>
      <param name="srcHeight">要绘制的源图像部分的高度。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定用于确定源矩形的度量单位。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
      <summary>在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" /> 的指定部分。</summary>
      <param name="image">要绘制的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> 结构，它指定所绘制图像的位置和大小。 将图像进行缩放以适合该矩形。</param>
      <param name="srcX">要绘制的源图像部分的左上角的 x 坐标。</param>
      <param name="srcY">要绘制的源图像部分的左上角的 y 坐标。</param>
      <param name="srcWidth">要绘制的源图像部分的宽度。</param>
      <param name="srcHeight">要绘制的源图像部分的高度。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定用于确定源矩形的度量单位。</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定 <paramref name="image" /> 对象的重新着色和伽玛信息。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
      <summary>在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" /> 的指定部分。</summary>
      <param name="image">要绘制的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> 结构，它指定所绘制图像的位置和大小。 将图像进行缩放以适合该矩形。</param>
      <param name="srcX">要绘制的源图像部分的左上角的 x 坐标。</param>
      <param name="srcY">要绘制的源图像部分的左上角的 y 坐标。</param>
      <param name="srcWidth">要绘制的源图像部分的宽度。</param>
      <param name="srcHeight">要绘制的源图像部分的高度。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定用于确定源矩形的度量单位。</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定 <paramref name="image" /> 的重新着色和伽玛信息。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 委托，它指定在绘制图像期间要调用的方法。 此方法被频繁调用以检查是否根据应用程序确定的条件停止 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" /> 方法的执行。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
      <summary>在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" /> 的指定部分。</summary>
      <param name="image">要绘制的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> 结构，它指定所绘制图像的位置和大小。 将图像进行缩放以适合该矩形。</param>
      <param name="srcX">要绘制的源图像部分的左上角的 x 坐标。</param>
      <param name="srcY">要绘制的源图像部分的左上角的 y 坐标。</param>
      <param name="srcWidth">要绘制的源图像部分的宽度。</param>
      <param name="srcHeight">要绘制的源图像部分的高度。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定用于确定源矩形的度量单位。</param>
      <param name="imageAttrs">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定 <paramref name="image" /> 对象的重新着色和伽玛信息。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 委托，它指定在绘制图像期间要调用的方法。 此方法被频繁调用以检查是否根据应用程序确定的条件停止 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)" /> 方法的执行。</param>
      <param name="callbackData">一个值，它为 <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 委托指定在检查是否停止执行 <see langword="DrawImage" /> 方法时要使用的附加数据。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit)">
      <summary>在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" /> 的指定部分。</summary>
      <param name="image">要绘制的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> 结构，它指定所绘制图像的位置和大小。 将图像进行缩放以适合该矩形。</param>
      <param name="srcX">要绘制的源图像部分的左上角的 x 坐标。</param>
      <param name="srcY">要绘制的源图像部分的左上角的 y 坐标。</param>
      <param name="srcWidth">要绘制的源图像部分的宽度。</param>
      <param name="srcHeight">要绘制的源图像部分的高度。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定用于确定源矩形的度量单位。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
      <summary>在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" /> 的指定部分。</summary>
      <param name="image">要绘制的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> 结构，它指定所绘制图像的位置和大小。 将图像进行缩放以适合该矩形。</param>
      <param name="srcX">要绘制的源图像部分的左上角的 x 坐标。</param>
      <param name="srcY">要绘制的源图像部分的左上角的 y 坐标。</param>
      <param name="srcWidth">要绘制的源图像部分的宽度。</param>
      <param name="srcHeight">要绘制的源图像部分的高度。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定用于确定源矩形的度量单位。</param>
      <param name="imageAttrs">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定 <paramref name="image" /> 对象的重新着色和伽玛信息。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
      <summary>在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" /> 的指定部分。</summary>
      <param name="image">要绘制的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> 结构，它指定所绘制图像的位置和大小。 将图像进行缩放以适合该矩形。</param>
      <param name="srcX">要绘制的源图像部分的左上角的 x 坐标。</param>
      <param name="srcY">要绘制的源图像部分的左上角的 y 坐标。</param>
      <param name="srcWidth">要绘制的源图像部分的宽度。</param>
      <param name="srcHeight">要绘制的源图像部分的高度。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定用于确定源矩形的度量单位。</param>
      <param name="imageAttrs">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定 <paramref name="image" /> 对象的重新着色和伽玛信息。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 委托，它指定在绘制图像期间要调用的方法。 此方法被频繁调用以检查是否根据应用程序确定的条件停止 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" /> 方法的执行。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
      <summary>在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" /> 的指定部分。</summary>
      <param name="image">要绘制的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> 结构，它指定所绘制图像的位置和大小。 将图像进行缩放以适合该矩形。</param>
      <param name="srcX">要绘制的源图像部分的左上角的 x 坐标。</param>
      <param name="srcY">要绘制的源图像部分的左上角的 y 坐标。</param>
      <param name="srcWidth">要绘制的源图像部分的宽度。</param>
      <param name="srcHeight">要绘制的源图像部分的高度。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定用于确定源矩形的度量单位。</param>
      <param name="imageAttrs">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定 <paramref name="image" /> 对象的重新着色和伽玛信息。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 委托，它指定在绘制图像期间要调用的方法。 此方法被频繁调用以检查是否根据应用程序确定的条件停止 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)" /> 方法的执行。</param>
      <param name="callbackData">一个值，它为 <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 委托指定在检查是否停止执行 <see langword="DrawImage" /> 方法时要使用的附加数据。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF)">
      <summary>在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" />。</summary>
      <param name="image">要绘制的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" /> 结构，它指定所绘制图像的位置和大小。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
      <summary>在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" /> 的指定部分。</summary>
      <param name="image">要绘制的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="destRect">
        <see cref="T:System.Drawing.RectangleF" /> 结构，它指定所绘制图像的位置和大小。 将图像进行缩放以适合该矩形。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> 结构，它指定 <paramref name="image" /> 对象中要绘制的部分。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定 <paramref name="srcRect" /> 参数所用的度量单位。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32)">
      <summary>在由坐标对指定的位置，使用图像的原始物理大小绘制指定的图像。</summary>
      <param name="image">要绘制的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="x">所绘制图像的左上角的 x 坐标。</param>
      <param name="y">所绘制图像的左上角的 y 坐标。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
      <summary>在指定的位置绘制图像的一部分。</summary>
      <param name="image">要绘制的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="x">所绘制图像的左上角的 x 坐标。</param>
      <param name="y">所绘制图像的左上角的 y 坐标。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> 结构，它指定 <paramref name="image" /> 对象中要绘制的部分。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定 <paramref name="srcRect" /> 参数所用的度量单位。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" />。</summary>
      <param name="image">要绘制的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="x">所绘制图像的左上角的 x 坐标。</param>
      <param name="y">所绘制图像的左上角的 y 坐标。</param>
      <param name="width">所绘制图像的宽度。</param>
      <param name="height">所绘制图像的高度。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single)">
      <summary>在指定的位置使用原始物理大小绘制指定的 <see cref="T:System.Drawing.Image" />。</summary>
      <param name="image">要绘制的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="x">所绘制图像的左上角的 x 坐标。</param>
      <param name="y">所绘制图像的左上角的 y 坐标。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
      <summary>在指定的位置绘制图像的一部分。</summary>
      <param name="image">要绘制的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="x">所绘制图像的左上角的 x 坐标。</param>
      <param name="y">所绘制图像的左上角的 y 坐标。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> 结构，它指定 <see cref="T:System.Drawing.Image" /> 中要绘制的部分。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定 <paramref name="srcRect" /> 参数所用的度量单位。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Single,System.Single)">
      <summary>在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" />。</summary>
      <param name="image">要绘制的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="x">所绘制图像的左上角的 x 坐标。</param>
      <param name="y">所绘制图像的左上角的 y 坐标。</param>
      <param name="width">所绘制图像的宽度。</param>
      <param name="height">所绘制图像的高度。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="T:System.Drawing.Graphics.DrawImageAbort">
      <summary>提供一个回调方法，用于决定 <see cref="Overload:System.Drawing.Graphics.DrawImage" /> 方法应何时过早地取消执行并停止绘制图像。</summary>
      <param name="callbackdata">指定回调方法数据的内部指针。 该参数不是由所有的 <see cref="Overload:System.Drawing.Graphics.DrawImage" /> 重载传递的。 可以通过检查 <see cref="F:System.IntPtr.Zero" /> 值来测试它是否存在。</param>
      <returns>如果此方法决定 <see cref="Overload:System.Drawing.Graphics.DrawImage" /> 方法应过早停止执行，则此方法返回 <see langword="true" />。 否则返回 <see langword="false" />，指示 <see cref="Overload:System.Drawing.Graphics.DrawImage" /> 方法应继续执行。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Point)">
      <summary>在指定的位置使用图像的原始物理大小绘制指定的图像。</summary>
      <param name="image">要绘制的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="point">
        <see cref="T:System.Drawing.Point" /> 结构，它指定所绘制图像的左上角。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Rectangle)">
      <summary>在指定的位置使用图像的原始物理大小绘制指定的图像。</summary>
      <param name="image">要绘制的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" />，它指定了所绘制图像的左上角。 该矩形的 X 和 Y 属性指定左上角。 宽度和高度属性被忽略。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32)">
      <summary>在由坐标对指定的位置，使用图像的原始物理大小绘制指定的图像。</summary>
      <param name="image">要绘制的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="x">所绘制图像的左上角的 x 坐标。</param>
      <param name="y">所绘制图像的左上角的 y 坐标。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>在指定的位置使用图像的原始物理大小绘制指定的图像。</summary>
      <param name="image">要绘制的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="x">所绘制图像的左上角的 x 坐标。</param>
      <param name="y">所绘制图像的左上角的 y 坐标。</param>
      <param name="width">未使用。</param>
      <param name="height">未使用。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImageUnscaledAndClipped(System.Drawing.Image,System.Drawing.Rectangle)">
      <summary>在不进行缩放的情况下绘制指定的图像，并在需要时剪辑该图像以适合指定的矩形。</summary>
      <param name="image">要绘制的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="rect">要在其中绘制图像的 <see cref="T:System.Drawing.Rectangle" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point)">
      <summary>绘制一条连接两个 <see cref="T:System.Drawing.Point" /> 结构的线。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，它确定线条的颜色、宽度和样式。</param>
      <param name="pt1">
        <see cref="T:System.Drawing.Point" /> 结构，它表示要连接的第一个点。</param>
      <param name="pt2">
        <see cref="T:System.Drawing.Point" /> 结构，它表示要连接的第二个点。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF)">
      <summary>绘制一条连接两个 <see cref="T:System.Drawing.PointF" /> 结构的线。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，它确定线条的颜色、宽度和样式。</param>
      <param name="pt1">
        <see cref="T:System.Drawing.PointF" /> 结构，它表示要连接的第一个点。</param>
      <param name="pt2">
        <see cref="T:System.Drawing.PointF" /> 结构，它表示要连接的第二个点。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>绘制一条连接由坐标对指定的两个点的线条。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，它确定线条的颜色、宽度和样式。</param>
      <param name="x1">第一个点的 x 坐标。</param>
      <param name="y1">第一个点的 y 坐标。</param>
      <param name="x2">第二个点的 x 坐标。</param>
      <param name="y2">第二个点的 y 坐标。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
      <summary>绘制一条连接由坐标对指定的两个点的线条。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，它确定线条的颜色、宽度和样式。</param>
      <param name="x1">第一个点的 x 坐标。</param>
      <param name="y1">第一个点的 y 坐标。</param>
      <param name="x2">第二个点的 x 坐标。</param>
      <param name="y2">第二个点的 y 坐标。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.Point[])">
      <summary>绘制一系列连接一组 <see cref="T:System.Drawing.Point" /> 结构的线段。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，它确定线段的颜色、宽度和样式。</param>
      <param name="points">
        <see cref="T:System.Drawing.Point" /> 结构数组，这些结构表示要连接的点。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 为 <see langword="null" />。  

或 - 
<paramref name="points" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.PointF[])">
      <summary>绘制一系列连接一组 <see cref="T:System.Drawing.PointF" /> 结构的线段。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，它确定线段的颜色、宽度和样式。</param>
      <param name="points">
        <see cref="T:System.Drawing.PointF" /> 结构数组，这些结构表示要连接的点。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 为 <see langword="null" />。  

或 - 
<paramref name="points" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)">
      <summary>绘制 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，它确定路径的颜色、宽度和样式。</param>
      <param name="path">要绘制的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 为 <see langword="null" />。  
或 
 <paramref name="path" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
      <summary>绘制由一个 <see cref="T:System.Drawing.Rectangle" /> 结构和两条射线所指定的椭圆定义的扇形。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，它确定扇形的颜色、宽度和样式。</param>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" /> 结构，它表示定义该扇形所属的椭圆的边框。</param>
      <param name="startAngle">从 x 轴到扇形的第一条边沿顺时针方向度量的角（以度为单位）。</param>
      <param name="sweepAngle">从 <paramref name="startAngle" /> 参数到扇形的第二条边沿顺时针方向度量的角（以度为单位）。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
      <summary>绘制由一个 <see cref="T:System.Drawing.RectangleF" /> 结构和两条射线所指定的椭圆定义的扇形。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，它确定扇形的颜色、宽度和样式。</param>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" /> 结构，它表示定义该扇形所属的椭圆的边框。</param>
      <param name="startAngle">从 x 轴到扇形的第一条边沿顺时针方向度量的角（以度为单位）。</param>
      <param name="sweepAngle">从 <paramref name="startAngle" /> 参数到扇形的第二条边沿顺时针方向度量的角（以度为单位）。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>绘制一个扇形，该形状由一个坐标对、宽度、高度以及两条射线所指定的椭圆定义。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，它确定扇形的颜色、宽度和样式。</param>
      <param name="x">边框的左上角的 x 坐标，该边框定义扇形所属的椭圆。</param>
      <param name="y">边框的左上角的 y 坐标，该边框定义扇形所属的椭圆。</param>
      <param name="width">边框的宽度，该边框定义扇形所属的椭圆。</param>
      <param name="height">边框的高度，该边框定义扇形所属的椭圆。</param>
      <param name="startAngle">从 x 轴到扇形的第一条边沿顺时针方向度量的角（以度为单位）。</param>
      <param name="sweepAngle">从 <paramref name="startAngle" /> 参数到扇形的第二条边沿顺时针方向度量的角（以度为单位）。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>绘制一个扇形，该形状由一个坐标对、宽度、高度以及两条射线所指定的椭圆定义。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，它确定扇形的颜色、宽度和样式。</param>
      <param name="x">边框的左上角的 x 坐标，该边框定义扇形所属的椭圆。</param>
      <param name="y">边框的左上角的 y 坐标，该边框定义扇形所属的椭圆。</param>
      <param name="width">边框的宽度，该边框定义扇形所属的椭圆。</param>
      <param name="height">边框的高度，该边框定义扇形所属的椭圆。</param>
      <param name="startAngle">从 x 轴到扇形的第一条边沿顺时针方向度量的角（以度为单位）。</param>
      <param name="sweepAngle">从 <paramref name="startAngle" /> 参数到扇形的第二条边沿顺时针方向度量的角（以度为单位）。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.Point[])">
      <summary>绘制由一组 <see cref="T:System.Drawing.Point" /> 结构定义的多边形。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，它确定多边形的颜色、宽度和样式。</param>
      <param name="points">
        <see cref="T:System.Drawing.Point" /> 结构数组，这些结构表示多边形的顶点。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.PointF[])">
      <summary>绘制由一组 <see cref="T:System.Drawing.PointF" /> 结构定义的多边形。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，它确定多边形的颜色、宽度和样式。</param>
      <param name="points">
        <see cref="T:System.Drawing.PointF" /> 结构数组，这些结构表示多边形的顶点。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 为 <see langword="null" />。  
或 
 <paramref name="points" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Drawing.Rectangle)">
      <summary>绘制由 <see cref="T:System.Drawing.Rectangle" /> 结构指定的矩形。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，它确定矩形的颜色、宽度和样式。</param>
      <param name="rect">表示要绘制的矩形的 <see cref="T:System.Drawing.Rectangle" /> 结构。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>绘制由坐标对、宽度和高度指定的矩形。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，它确定矩形的颜色、宽度和样式。</param>
      <param name="x">要绘制的矩形的左上角的 x 坐标。</param>
      <param name="y">要绘制的矩形的左上角的 y 坐标。</param>
      <param name="width">要绘制的矩形的宽度。</param>
      <param name="height">要绘制的矩形的高度。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
      <summary>绘制由坐标对、宽度和高度指定的矩形。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，它确定矩形的颜色、宽度和样式。</param>
      <param name="x">要绘制的矩形的左上角的 x 坐标。</param>
      <param name="y">要绘制的矩形的左上角的 y 坐标。</param>
      <param name="width">要绘制的矩形的宽度。</param>
      <param name="height">要绘制的矩形的高度。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.Rectangle[])">
      <summary>绘制一系列由 <see cref="T:System.Drawing.Rectangle" /> 结构指定的矩形。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，它确定矩形轮廓线的颜色、宽度和样式。</param>
      <param name="rects">
        <see cref="T:System.Drawing.Rectangle" /> 结构数组，这些结构表示要绘制的矩形。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 为 <see langword="null" />。  
或 
 <paramref name="rects" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="rects" /> 是一个长度为零的数组。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.RectangleF[])">
      <summary>绘制一系列由 <see cref="T:System.Drawing.RectangleF" /> 结构指定的矩形。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，它确定矩形轮廓线的颜色、宽度和样式。</param>
      <param name="rects">
        <see cref="T:System.Drawing.RectangleF" /> 结构数组，这些结构表示要绘制的矩形。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 为 <see langword="null" />。  

或 - 
<paramref name="rects" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="rects" /> 是一个长度为零的数组。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF)">
      <summary>在指定位置并且用指定的 <see cref="T:System.Drawing.Brush" /> 和 <see cref="T:System.Drawing.Font" /> 对象绘制指定的文本字符串。</summary>
      <param name="s">要绘制的字符串。</param>
      <param name="font">
        <see cref="T:System.Drawing.Font" />，它定义字符串的文本格式。</param>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" />，它确定所绘制文本的颜色和纹理。</param>
      <param name="point">
        <see cref="T:System.Drawing.PointF" /> 结构，它指定所绘制文本的左上角。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 为 <see langword="null" />。  

或 - 
<paramref name="s" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)">
      <summary>使用指定 <see cref="T:System.Drawing.Brush" /> 的格式化特性，用指定的 <see cref="T:System.Drawing.Font" /> 和 <see cref="T:System.Drawing.StringFormat" /> 对象在指定的位置绘制指定的文本字符串。</summary>
      <param name="s">要绘制的字符串。</param>
      <param name="font">
        <see cref="T:System.Drawing.Font" />，它定义字符串的文本格式。</param>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" />，它确定所绘制文本的颜色和纹理。</param>
      <param name="point">
        <see cref="T:System.Drawing.PointF" /> 结构，它指定所绘制文本的左上角。</param>
      <param name="format">
        <see cref="T:System.Drawing.StringFormat" />，它指定应用于所绘制文本的格式化特性（如行距和对齐方式）。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 为 <see langword="null" />。  
或 
 <paramref name="s" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF)">
      <summary>在指定矩形并且用指定的 <see cref="T:System.Drawing.Brush" /> 和 <see cref="T:System.Drawing.Font" /> 对象绘制指定的文本字符串。</summary>
      <param name="s">要绘制的字符串。</param>
      <param name="font">
        <see cref="T:System.Drawing.Font" />，它定义字符串的文本格式。</param>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" />，它确定所绘制文本的颜色和纹理。</param>
      <param name="layoutRectangle">
        <see cref="T:System.Drawing.RectangleF" /> 结构，它指定所绘制文本的位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 为 <see langword="null" />。  
或 
 <paramref name="s" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)">
      <summary>使用指定 <see cref="T:System.Drawing.Brush" /> 的格式化特性，用指定的 <see cref="T:System.Drawing.Font" /> 和 <see cref="T:System.Drawing.StringFormat" /> 对象在指定的矩形绘制指定的文本字符串。</summary>
      <param name="s">要绘制的字符串。</param>
      <param name="font">
        <see cref="T:System.Drawing.Font" />，它定义字符串的文本格式。</param>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" />，它确定所绘制文本的颜色和纹理。</param>
      <param name="layoutRectangle">
        <see cref="T:System.Drawing.RectangleF" /> 结构，它指定所绘制文本的位置。</param>
      <param name="format">
        <see cref="T:System.Drawing.StringFormat" />，它指定应用于所绘制文本的格式化特性（如行距和对齐方式）。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 为 <see langword="null" />。  
或 
 <paramref name="s" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single)">
      <summary>在指定位置并且用指定的 <see cref="T:System.Drawing.Brush" /> 和 <see cref="T:System.Drawing.Font" /> 对象绘制指定的文本字符串。</summary>
      <param name="s">要绘制的字符串。</param>
      <param name="font">
        <see cref="T:System.Drawing.Font" />，它定义字符串的文本格式。</param>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" />，它确定所绘制文本的颜色和纹理。</param>
      <param name="x">所绘制文本的左上角的 x 坐标。</param>
      <param name="y">所绘制文本的左上角的 y 坐标。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 为 <see langword="null" />。  
或 
 <paramref name="s" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single,System.Drawing.StringFormat)">
      <summary>使用指定 <see cref="T:System.Drawing.Brush" /> 的格式化特性，用指定的 <see cref="T:System.Drawing.Font" /> 和 <see cref="T:System.Drawing.StringFormat" /> 对象在指定的位置绘制指定的文本字符串。</summary>
      <param name="s">要绘制的字符串。</param>
      <param name="font">
        <see cref="T:System.Drawing.Font" />，它定义字符串的文本格式。</param>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" />，它确定所绘制文本的颜色和纹理。</param>
      <param name="x">所绘制文本的左上角的 x 坐标。</param>
      <param name="y">所绘制文本的左上角的 y 坐标。</param>
      <param name="format">
        <see cref="T:System.Drawing.StringFormat" />，它指定应用于所绘制文本的格式化特性（如行距和对齐方式）。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 为 <see langword="null" />。  
或 
 <paramref name="s" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)">
      <summary>关闭当前图形容器，并将此 <see cref="T:System.Drawing.Graphics" /> 的状态还原到通过调用 <see cref="M:System.Drawing.Graphics.BeginContainer" /> 方法保存的状态。</summary>
      <param name="container">
        <see cref="T:System.Drawing.Drawing2D.GraphicsContainer" />，它表示此方法还原的容器。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>将指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的记录逐个发送到回调方法以在指定的点处显示。</summary>
      <param name="metafile">要枚举的<see cref="T:System.Drawing.Imaging.Metafile" /> 。</param>
      <param name="destPoint">
        <see cref="T:System.Drawing.Point" /> 结构，它指定所绘制图元文件的左上角的位置。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>将指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的记录逐个发送到回调方法以在指定的点处显示。</summary>
      <param name="metafile">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoint">
        <see cref="T:System.Drawing.Point" /> 结构，它指定所绘制图元文件的左上角的位置。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</param>
      <param name="callbackData">必需但被忽略的内部指针。 可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>将指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的记录逐个发送到回调方法，以在指定的点处用指定的图像特性显示。</summary>
      <param name="metafile">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoint">
        <see cref="T:System.Drawing.Point" /> 结构，它指定所绘制图元文件的左上角的位置。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</param>
      <param name="callbackData">必需但被忽略的内部指针。 可以为此参数传递 <see cref="F:System.IntPtr.Zero" /> 。</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定所绘制图像的图像特性信息。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>将 <see cref="T:System.Drawing.Imaging.Metafile" /> 中选定矩形内的记录逐个发送到回调方法以在指定的点处显示。</summary>
      <param name="metafile">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoint">
        <see cref="T:System.Drawing.Point" /> 结构，它指定所绘制图元文件的左上角的位置。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> 结构，它相对于图元文件的左上角指定要绘制的部分图元文件。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定度量单位，该度量单位用于确定 <paramref name="srcRect" /> 参数指定的矩形所包含的部分图元文件。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>将 <see cref="T:System.Drawing.Imaging.Metafile" /> 中选定矩形内的记录逐个发送到回调方法以在指定的点处显示。</summary>
      <param name="metafile">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoint">
        <see cref="T:System.Drawing.Point" /> 结构，它指定所绘制图元文件的左上角的位置。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> 结构，它相对于图元文件的左上角指定要绘制的部分图元文件。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定度量单位，该度量单位用于确定 <paramref name="srcRect" /> 参数指定的矩形所包含的部分图元文件。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</param>
      <param name="callbackData">必需但被忽略的内部指针。 可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>将 <see cref="T:System.Drawing.Imaging.Metafile" /> 中选定矩形内的记录逐个发送到回调方法，以在指定的点处用指定的图像特性显示。</summary>
      <param name="metafile">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoint">
        <see cref="T:System.Drawing.Point" /> 结构，它指定所绘制图元文件的左上角的位置。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> 结构，它相对于图元文件的左上角指定要绘制的部分图元文件。</param>
      <param name="unit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定度量单位，该度量单位用于确定 <paramref name="srcRect" /> 参数指定的矩形所包含的部分图元文件。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</param>
      <param name="callbackData">必需但被忽略的内部指针。 可以为此参数传递 <see cref="F:System.IntPtr.Zero" /> 。</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定所绘制图像的图像特性信息。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>将指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的记录逐个发送到回调方法以在指定的平行四边形中显示。</summary>
      <param name="metafile">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoints">由三个 <see cref="T:System.Drawing.Point" /> 结构组成的数组，这三个结构定义一个用来确定所绘制图元文件的大小和位置的平行四边形。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>将指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的记录逐个发送到回调方法以在指定的平行四边形中显示。</summary>
      <param name="metafile">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoints">由三个 <see cref="T:System.Drawing.Point" /> 结构组成的数组，这三个结构定义一个用来确定所绘制图元文件的大小和位置的平行四边形。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</param>
      <param name="callbackData">必需但被忽略的内部指针。 可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>将指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的记录逐个发送到回调方法，以在指定的平行四边形中用指定的图像特性显示。</summary>
      <param name="metafile">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoints">由三个 <see cref="T:System.Drawing.Point" /> 结构组成的数组，这三个结构定义一个用来确定所绘制图元文件的大小和位置的平行四边形。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</param>
      <param name="callbackData">必需但被忽略的内部指针。 可以为此参数传递 <see cref="F:System.IntPtr.Zero" /> 。</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定所绘制图像的图像特性信息。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>将 <see cref="T:System.Drawing.Imaging.Metafile" /> 中选定矩形内的记录逐个发送到回调方法以在指定的平行四边形中显示。</summary>
      <param name="metafile">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoints">由三个 <see cref="T:System.Drawing.Point" /> 结构组成的数组，这三个结构定义一个用来确定所绘制图元文件的大小和位置的平行四边形。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> 结构，它相对于图元文件的左上角指定要绘制的部分图元文件。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定度量单位，该度量单位用于确定 <paramref name="srcRect" /> 参数指定的矩形所包含的部分图元文件。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>将 <see cref="T:System.Drawing.Imaging.Metafile" /> 中选定矩形内的记录逐个发送到回调方法以在指定的平行四边形中显示。</summary>
      <param name="metafile">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoints">由三个 <see cref="T:System.Drawing.Point" /> 结构组成的数组，这三个结构定义一个用来确定所绘制图元文件的大小和位置的平行四边形。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> 结构，它相对于图元文件的左上角指定要绘制的部分图元文件。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定度量单位，该度量单位用于确定 <paramref name="srcRect" /> 参数指定的矩形所包含的部分图元文件。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</param>
      <param name="callbackData">必需但被忽略的内部指针。 可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>将 <see cref="T:System.Drawing.Imaging.Metafile" /> 中选定矩形内的记录逐个发送到回调方法，以在指定的平行四边形中用指定的图像特性显示。</summary>
      <param name="metafile">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoints">由三个 <see cref="T:System.Drawing.Point" /> 结构组成的数组，这三个结构定义一个用来确定所绘制图元文件的大小和位置的平行四边形。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> 结构，它相对于图元文件的左上角指定要绘制的部分图元文件。</param>
      <param name="unit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定度量单位，该度量单位用于确定 <paramref name="srcRect" /> 参数指定的矩形所包含的部分图元文件。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</param>
      <param name="callbackData">必需但被忽略的内部指针。 可以为此参数传递 <see cref="F:System.IntPtr.Zero" /> 。</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定所绘制图像的图像特性信息。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>将指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的记录逐个发送到回调方法以在指定的点处显示。</summary>
      <param name="metafile">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoint">
        <see cref="T:System.Drawing.PointF" /> 结构，它指定所绘制图元文件的左上角的位置。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>将指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的记录逐个发送到回调方法以在指定的点处显示。</summary>
      <param name="metafile">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoint">
        <see cref="T:System.Drawing.PointF" /> 结构，它指定所绘制图元文件的左上角的位置。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</param>
      <param name="callbackData">必需但被忽略的内部指针。 可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>将指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的记录逐个发送到回调方法，以在指定的点处用指定的图像特性显示。</summary>
      <param name="metafile">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoint">
        <see cref="T:System.Drawing.PointF" /> 结构，它指定所绘制图元文件的左上角的位置。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</param>
      <param name="callbackData">必需但被忽略的内部指针。 可以为此参数传递 <see cref="F:System.IntPtr.Zero" /> 。</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定所绘制图像的图像特性信息。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>将 <see cref="T:System.Drawing.Imaging.Metafile" /> 中选定矩形内的记录逐个发送到回调方法以在指定的点处显示。</summary>
      <param name="metafile">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoint">
        <see cref="T:System.Drawing.PointF" /> 结构，它指定所绘制图元文件的左上角的位置。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> 结构，它相对于图元文件的左上角指定要绘制的部分图元文件。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定度量单位，该度量单位用于确定 <paramref name="srcRect" /> 参数指定的矩形所包含的部分图元文件。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>将 <see cref="T:System.Drawing.Imaging.Metafile" /> 中选定矩形内的记录逐个发送到回调方法以在指定的点处显示。</summary>
      <param name="metafile">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoint">
        <see cref="T:System.Drawing.PointF" /> 结构，它指定所绘制图元文件的左上角的位置。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> 结构，它相对于图元文件的左上角指定要绘制的部分图元文件。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定度量单位，该度量单位用于确定 <paramref name="srcRect" /> 参数指定的矩形所包含的部分图元文件。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</param>
      <param name="callbackData">必需但被忽略的内部指针。 可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>将 <see cref="T:System.Drawing.Imaging.Metafile" /> 中选定矩形内的记录逐个发送到回调方法，以在指定的点处用指定的图像特性显示。</summary>
      <param name="metafile">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoint">
        <see cref="T:System.Drawing.PointF" /> 结构，它指定所绘制图元文件的左上角的位置。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> 结构，它相对于图元文件的左上角指定要绘制的部分图元文件。</param>
      <param name="unit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定度量单位，该度量单位用于确定 <paramref name="srcRect" /> 参数指定的矩形所包含的部分图元文件。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</param>
      <param name="callbackData">必需但被忽略的内部指针。 可以为此参数传递 <see cref="F:System.IntPtr.Zero" /> 。</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定所绘制图像的图像特性信息。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>将指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的记录逐个发送到回调方法以在指定的平行四边形中显示。</summary>
      <param name="metafile">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoints">由三个 <see cref="T:System.Drawing.PointF" /> 结构组成的数组，这三个结构定义一个用来确定所绘制图元文件的大小和位置的平行四边形。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>将指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的记录逐个发送到回调方法以在指定的平行四边形中显示。</summary>
      <param name="metafile">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoints">由三个 <see cref="T:System.Drawing.PointF" /> 结构组成的数组，这三个结构定义一个用来确定所绘制图元文件的大小和位置的平行四边形。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</param>
      <param name="callbackData">必需但被忽略的内部指针。 可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>将指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的记录逐个发送到回调方法，以在指定的平行四边形中用指定的图像特性显示。</summary>
      <param name="metafile">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoints">由三个 <see cref="T:System.Drawing.PointF" /> 结构组成的数组，这三个结构定义一个用来确定所绘制图元文件的大小和位置的平行四边形。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</param>
      <param name="callbackData">必需但被忽略的内部指针。 可以为此参数传递 <see cref="F:System.IntPtr.Zero" /> 。</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定所绘制图像的图像特性信息。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>将 <see cref="T:System.Drawing.Imaging.Metafile" /> 中选定矩形内的记录逐个发送到回调方法以在指定的平行四边形中显示。</summary>
      <param name="metafile">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoints">由三个 <see cref="T:System.Drawing.PointF" /> 结构组成的数组，这三个结构定义一个用来确定所绘制图元文件的大小和位置的平行四边形。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> 结构，它相对于图元文件的左上角指定要绘制的部分图元文件。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定度量单位，该度量单位用于确定 <paramref name="srcRect" /> 参数指定的矩形所包含的部分图元文件。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>将 <see cref="T:System.Drawing.Imaging.Metafile" /> 中选定矩形内的记录逐个发送到回调方法以在指定的平行四边形中显示。</summary>
      <param name="metafile">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoints">由三个 <see cref="T:System.Drawing.PointF" /> 结构组成的数组，这三个结构定义一个用来确定所绘制图元文件的大小和位置的平行四边形。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> 结构，它相对于图元文件的左上角指定要绘制的部分图元文件。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定度量单位，该度量单位用于确定 <paramref name="srcRect" /> 参数指定的矩形所包含的部分图元文件。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</param>
      <param name="callbackData">必需但被忽略的内部指针。 可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>将 <see cref="T:System.Drawing.Imaging.Metafile" /> 中选定矩形内的记录逐个发送到回调方法，以在指定的平行四边形中用指定的图像特性显示。</summary>
      <param name="metafile">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoints">由三个 <see cref="T:System.Drawing.PointF" /> 结构组成的数组，这三个结构定义一个用来确定所绘制图元文件的大小和位置的平行四边形。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> 结构，它相对于图元文件的左上角指定要绘制的部分图元文件。</param>
      <param name="unit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定度量单位，该度量单位用于确定 <paramref name="srcRect" /> 参数指定的矩形所包含的部分图元文件。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</param>
      <param name="callbackData">必需但被忽略的内部指针。 可以为此参数传递 <see cref="F:System.IntPtr.Zero" /> 。</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定所绘制图像的图像特性信息。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>将指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的记录逐个发送到回调方法以在指定的矩形中显示。</summary>
      <param name="metafile">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> 结构，它指定所绘制图元文件的位置和大小。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>将指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的记录逐个发送到回调方法以在指定的矩形中显示。</summary>
      <param name="metafile">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> 结构，它指定所绘制图元文件的位置和大小。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</param>
      <param name="callbackData">必需但被忽略的内部指针。 可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>将指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的记录逐个发送到回调方法，以在指定的矩形中用指定的图像特性显示。</summary>
      <param name="metafile">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> 结构，它指定所绘制图元文件的位置和大小。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</param>
      <param name="callbackData">必需但被忽略的内部指针。 可以为此参数传递 <see cref="F:System.IntPtr.Zero" /> 。</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定所绘制图像的图像特性信息。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>将 <see cref="T:System.Drawing.Imaging.Metafile" /> 中选定矩形内的记录逐个发送到回调方法以在指定的矩形中显示。</summary>
      <param name="metafile">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> 结构，它指定所绘制图元文件的位置和大小。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> 结构，它相对于图元文件的左上角指定要绘制的部分图元文件。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定度量单位，该度量单位用于确定 <paramref name="srcRect" /> 参数指定的矩形所包含的部分图元文件。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>将 <see cref="T:System.Drawing.Imaging.Metafile" /> 中选定矩形内的记录逐个发送到回调方法以在指定的矩形中显示。</summary>
      <param name="metafile">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> 结构，它指定所绘制图元文件的位置和大小。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> 结构，它相对于图元文件的左上角指定要绘制的部分图元文件。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定度量单位，该度量单位用于确定 <paramref name="srcRect" /> 参数指定的矩形所包含的部分图元文件。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</param>
      <param name="callbackData">必需但被忽略的内部指针。 可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>将 <see cref="T:System.Drawing.Imaging.Metafile" /> 中选定矩形内的记录逐个发送到回调方法，以在指定的矩形中用指定的图像特性显示。</summary>
      <param name="metafile">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> 结构，它指定所绘制图元文件的位置和大小。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> 结构，它相对于图元文件的左上角指定要绘制的部分图元文件。</param>
      <param name="unit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定度量单位，该度量单位用于确定 <paramref name="srcRect" /> 参数指定的矩形所包含的部分图元文件。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</param>
      <param name="callbackData">必需但被忽略的内部指针。 可以为此参数传递 <see cref="F:System.IntPtr.Zero" /> 。</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定所绘制图像的图像特性信息。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>将指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的记录逐个发送到回调方法以在指定的矩形中显示。</summary>
      <param name="metafile">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destRect">
        <see cref="T:System.Drawing.RectangleF" /> 结构，它指定所绘制图元文件的位置和大小。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>将指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的记录逐个发送到回调方法以在指定的矩形中显示。</summary>
      <param name="metafile">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destRect">
        <see cref="T:System.Drawing.RectangleF" /> 结构，它指定所绘制图元文件的位置和大小。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</param>
      <param name="callbackData">必需但被忽略的内部指针。 可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>将指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的记录逐个发送到回调方法，以在指定的矩形中用指定的图像特性显示。</summary>
      <param name="metafile">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destRect">
        <see cref="T:System.Drawing.RectangleF" /> 结构，它指定所绘制图元文件的位置和大小。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</param>
      <param name="callbackData">必需但被忽略的内部指针。 可以为此参数传递 <see cref="F:System.IntPtr.Zero" /> 。</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定所绘制图像的图像特性信息。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>将 <see cref="T:System.Drawing.Imaging.Metafile" /> 中选定矩形内的记录逐个发送到回调方法以在指定的矩形中显示。</summary>
      <param name="metafile">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destRect">
        <see cref="T:System.Drawing.RectangleF" /> 结构，它指定所绘制图元文件的位置和大小。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> 结构，它相对于图元文件的左上角指定要绘制的部分图元文件。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定度量单位，该度量单位用于确定 <paramref name="srcRect" /> 参数指定的矩形所包含的部分图元文件。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>将 <see cref="T:System.Drawing.Imaging.Metafile" /> 中选定矩形内的记录逐个发送到回调方法以在指定的矩形中显示。</summary>
      <param name="metafile">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destRect">
        <see cref="T:System.Drawing.RectangleF" /> 结构，它指定所绘制图元文件的位置和大小。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> 结构，它相对于图元文件的左上角指定要绘制的部分图元文件。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定度量单位，该度量单位用于确定 <paramref name="srcRect" /> 参数指定的矩形所包含的部分图元文件。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</param>
      <param name="callbackData">必需但被忽略的内部指针。 可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>将 <see cref="T:System.Drawing.Imaging.Metafile" /> 中选定矩形内的记录逐个发送到回调方法，以在指定的矩形中用指定的图像特性显示。</summary>
      <param name="metafile">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destRect">
        <see cref="T:System.Drawing.RectangleF" /> 结构，它指定所绘制图元文件的位置和大小。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> 结构，它相对于图元文件的左上角指定要绘制的部分图元文件。</param>
      <param name="unit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定度量单位，该度量单位用于确定 <paramref name="srcRect" /> 参数指定的矩形所包含的部分图元文件。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</param>
      <param name="callbackData">必需但被忽略的内部指针。 可以为此参数传递 <see cref="F:System.IntPtr.Zero" /> 。</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定所绘制图像的图像特性信息。</param>
    </member>
    <member name="T:System.Drawing.Graphics.EnumerateMetafileProc">
      <summary>为 <see cref="Overload:System.Drawing.Graphics.EnumerateMetafile" /> 方法提供回调方法。</summary>
      <param name="recordType">
        <see cref="T:System.Drawing.Imaging.EmfPlusRecordType" /> 枚举的成员，它指定图元文件记录的类型。</param>
      <param name="flags">指定记录特性的标志集。</param>
      <param name="dataSize">记录数据中的字节数。</param>
      <param name="data">指向包含记录数据的缓冲区的指针。</param>
      <param name="callbackData">未使用。</param>
      <returns>如果要继续枚举记录，则返回 <see langword="true" />，否则返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.ExcludeClip(System.Drawing.Rectangle)">
      <summary>更新此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域，以排除 <see cref="T:System.Drawing.Rectangle" /> 结构所指定的区域。</summary>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" /> 结构，它指定要从剪辑区域排除的矩形。</param>
    </member>
    <member name="M:System.Drawing.Graphics.ExcludeClip(System.Drawing.Region)">
      <summary>更新此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域，以排除 <see cref="T:System.Drawing.Region" /> 所指定的区域。</summary>
      <param name="region">
        <see cref="T:System.Drawing.Region" />，它指定要从剪辑区域排除的区域。</param>
    </member>
    <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[])">
      <summary>填充由 <see cref="T:System.Drawing.Point" /> 结构数组定义的闭合基数样条曲线的内部。</summary>
      <param name="brush">确定填充特性的 <see cref="T:System.Drawing.Brush" />。</param>
      <param name="points">
        <see cref="T:System.Drawing.Point" /> 结构数组，这些结构定义样条。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 为 <see langword="null" />。  
或 
 <paramref name="points" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)">
      <summary>使用指定的填充模式填充 <see cref="T:System.Drawing.Point" /> 结构数组定义的闭合基数样条曲线的内部。</summary>
      <param name="brush">确定填充特性的 <see cref="T:System.Drawing.Brush" />。</param>
      <param name="points">
        <see cref="T:System.Drawing.Point" /> 结构数组，这些结构定义样条。</param>
      <param name="fillmode">
        <see cref="T:System.Drawing.Drawing2D.FillMode" /> 枚举的成员，它确定填充曲线的方式。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 为 <see langword="null" />。  

或 - 
<paramref name="points" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode,System.Single)">
      <summary>使用指定的填充模式和张力填充 <see cref="T:System.Drawing.Point" /> 结构数组定义的闭合基数样条曲线的内部。</summary>
      <param name="brush">确定填充特性的 <see cref="T:System.Drawing.Brush" />。</param>
      <param name="points">
        <see cref="T:System.Drawing.Point" /> 结构数组，这些结构定义样条。</param>
      <param name="fillmode">
        <see cref="T:System.Drawing.Drawing2D.FillMode" /> 枚举的成员，它确定填充曲线的方式。</param>
      <param name="tension">大于或等于 0.0F 的值，该值指定曲线的张力。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 为 <see langword="null" />。  
或 
 <paramref name="points" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[])">
      <summary>填充由 <see cref="T:System.Drawing.PointF" /> 结构数组定义的闭合基数样条曲线的内部。</summary>
      <param name="brush">确定填充特性的 <see cref="T:System.Drawing.Brush" />。</param>
      <param name="points">
        <see cref="T:System.Drawing.PointF" /> 结构数组，这些结构定义样条。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 为 <see langword="null" />。  
或 
 <paramref name="points" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
      <summary>使用指定的填充模式填充 <see cref="T:System.Drawing.PointF" /> 结构数组定义的闭合基数样条曲线的内部。</summary>
      <param name="brush">确定填充特性的 <see cref="T:System.Drawing.Brush" />。</param>
      <param name="points">
        <see cref="T:System.Drawing.PointF" /> 结构数组，这些结构定义样条。</param>
      <param name="fillmode">
        <see cref="T:System.Drawing.Drawing2D.FillMode" /> 枚举的成员，它确定填充曲线的方式。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 为 <see langword="null" />。  
或 
 <paramref name="points" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)">
      <summary>使用指定的填充模式和张力填充 <see cref="T:System.Drawing.PointF" /> 结构数组定义的闭合基数样条曲线的内部。</summary>
      <param name="brush">确定填充特性的 <see cref="T:System.Drawing.Brush" />。</param>
      <param name="points">
        <see cref="T:System.Drawing.PointF" /> 结构数组，这些结构定义样条。</param>
      <param name="fillmode">
        <see cref="T:System.Drawing.Drawing2D.FillMode" /> 枚举的成员，它确定填充曲线的方式。</param>
      <param name="tension">大于或等于 0.0F 的值，该值指定曲线的张力。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 为 <see langword="null" />。  
或 
 <paramref name="points" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.Rectangle)">
      <summary>填充 <see cref="T:System.Drawing.Rectangle" /> 结构指定的边框所定义的椭圆的内部。</summary>
      <param name="brush">确定填充特性的 <see cref="T:System.Drawing.Brush" />。</param>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" /> 结构，它表示定义椭圆的边框。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.RectangleF)">
      <summary>填充 <see cref="T:System.Drawing.RectangleF" /> 结构指定的边框所定义的椭圆的内部。</summary>
      <param name="brush">确定填充特性的 <see cref="T:System.Drawing.Brush" />。</param>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" /> 结构，它表示定义椭圆的边框。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>填充边框所定义的椭圆的内部，该边框由一对坐标、一个宽度和一个高度指定。</summary>
      <param name="brush">确定填充特性的 <see cref="T:System.Drawing.Brush" />。</param>
      <param name="x">定义椭圆的边框的左上角的 X 坐标。</param>
      <param name="y">定义椭圆的边框的左上角的 Y 坐标。</param>
      <param name="width">定义椭圆的边框的宽度。</param>
      <param name="height">定义椭圆的边框的高度。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
      <summary>填充边框所定义的椭圆的内部，该边框由一对坐标、一个宽度和一个高度指定。</summary>
      <param name="brush">确定填充特性的 <see cref="T:System.Drawing.Brush" />。</param>
      <param name="x">定义椭圆的边框的左上角的 X 坐标。</param>
      <param name="y">定义椭圆的边框的左上角的 Y 坐标。</param>
      <param name="width">定义椭圆的边框的宽度。</param>
      <param name="height">定义椭圆的边框的高度。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)">
      <summary>填充 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 的内部。</summary>
      <param name="brush">确定填充特性的 <see cref="T:System.Drawing.Brush" />。</param>
      <param name="path">
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />，它表示要填充的路径。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 为 <see langword="null" />。  

或 - 
<paramref name="path" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Drawing.Rectangle,System.Single,System.Single)">
      <summary>填充椭圆所定义的扇形区的内部，该椭圆由 <see cref="T:System.Drawing.RectangleF" /> 结构和两条射线指定。</summary>
      <param name="brush">确定填充特性的 <see cref="T:System.Drawing.Brush" />。</param>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" /> 结构，它表示定义该扇形区所属的椭圆的边框。</param>
      <param name="startAngle">从 x 轴沿顺时针方向旋转到扇形区第一个边所测得的角度（以度为单位）。</param>
      <param name="sweepAngle">从 <paramref name="startAngle" /> 参数沿顺时针方向旋转到扇形区第二个边所测得的角度（以度为单位）。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>填充由一对坐标、一个宽度、一个高度以及两条射线指定的椭圆所定义的扇形区的内部。</summary>
      <param name="brush">确定填充特性的 <see cref="T:System.Drawing.Brush" />。</param>
      <param name="x">边框左上角的 x 坐标，该边框定义扇形区所属的椭圆。</param>
      <param name="y">边框左上角的 y 坐标，该边框定义扇形区所属的椭圆。</param>
      <param name="width">边框的宽度，该边框定义扇形区所属的椭圆。</param>
      <param name="height">边框的高度，该边框定义扇形区所属的椭圆。</param>
      <param name="startAngle">从 x 轴沿顺时针方向旋转到扇形区第一个边所测得的角度（以度为单位）。</param>
      <param name="sweepAngle">从 <paramref name="startAngle" /> 参数沿顺时针方向旋转到扇形区第二个边所测得的角度（以度为单位）。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>填充由一对坐标、一个宽度、一个高度以及两条射线指定的椭圆所定义的扇形区的内部。</summary>
      <param name="brush">确定填充特性的 <see cref="T:System.Drawing.Brush" />。</param>
      <param name="x">边框左上角的 x 坐标，该边框定义扇形区所属的椭圆。</param>
      <param name="y">边框左上角的 y 坐标，该边框定义扇形区所属的椭圆。</param>
      <param name="width">边框的宽度，该边框定义扇形区所属的椭圆。</param>
      <param name="height">边框的高度，该边框定义扇形区所属的椭圆。</param>
      <param name="startAngle">从 x 轴沿顺时针方向旋转到扇形区第一个边所测得的角度（以度为单位）。</param>
      <param name="sweepAngle">从 <paramref name="startAngle" /> 参数沿顺时针方向旋转到扇形区第二个边所测得的角度（以度为单位）。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[])">
      <summary>填充 <see cref="T:System.Drawing.Point" /> 结构指定的点数组所定义的多边形的内部。</summary>
      <param name="brush">确定填充特性的 <see cref="T:System.Drawing.Brush" />。</param>
      <param name="points">
        <see cref="T:System.Drawing.Point" /> 结构数组，这些结构表示要填充的多边形的顶点。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 为 <see langword="null" />。  
或 
 <paramref name="points" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)">
      <summary>使用指定的填充模式填充 <see cref="T:System.Drawing.Point" /> 结构指定的点数组所定义的多边形的内部。</summary>
      <param name="brush">确定填充特性的 <see cref="T:System.Drawing.Brush" />。</param>
      <param name="points">
        <see cref="T:System.Drawing.Point" /> 结构数组，这些结构表示要填充的多边形的顶点。</param>
      <param name="fillMode">确定填充样式的 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 枚举的成员。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 为 <see langword="null" />。  
或 
 <paramref name="points" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[])">
      <summary>填充 <see cref="T:System.Drawing.PointF" /> 结构指定的点数组所定义的多边形的内部。</summary>
      <param name="brush">确定填充特性的 <see cref="T:System.Drawing.Brush" />。</param>
      <param name="points">
        <see cref="T:System.Drawing.PointF" /> 结构数组，这些结构表示要填充的多边形的顶点。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 为 <see langword="null" />。  
或 
 <paramref name="points" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
      <summary>使用指定的填充模式填充 <see cref="T:System.Drawing.PointF" /> 结构指定的点数组所定义的多边形的内部。</summary>
      <param name="brush">确定填充特性的 <see cref="T:System.Drawing.Brush" />。</param>
      <param name="points">
        <see cref="T:System.Drawing.PointF" /> 结构数组，这些结构表示要填充的多边形的顶点。</param>
      <param name="fillMode">确定填充样式的 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 枚举的成员。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 为 <see langword="null" />。  

或 - 
<paramref name="points" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.Rectangle)">
      <summary>填充 <see cref="T:System.Drawing.Rectangle" /> 结构指定的矩形的内部。</summary>
      <param name="brush">确定填充特性的 <see cref="T:System.Drawing.Brush" />。</param>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" /> 结构，它表示要填充的矩形。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.RectangleF)">
      <summary>填充 <see cref="T:System.Drawing.RectangleF" /> 结构指定的矩形的内部。</summary>
      <param name="brush">确定填充特性的 <see cref="T:System.Drawing.Brush" />。</param>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" /> 结构，它表示要填充的矩形。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>填充由一对坐标、一个宽度和一个高度指定的矩形的内部。</summary>
      <param name="brush">确定填充特性的 <see cref="T:System.Drawing.Brush" />。</param>
      <param name="x">要填充的矩形的左上角的 x 坐标。</param>
      <param name="y">要填充的矩形的左上角的 y 坐标。</param>
      <param name="width">要填充的矩形的宽度。</param>
      <param name="height">要填充的矩形的高度。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
      <summary>填充由一对坐标、一个宽度和一个高度指定的矩形的内部。</summary>
      <param name="brush">确定填充特性的 <see cref="T:System.Drawing.Brush" />。</param>
      <param name="x">要填充的矩形的左上角的 x 坐标。</param>
      <param name="y">要填充的矩形的左上角的 y 坐标。</param>
      <param name="width">要填充的矩形的宽度。</param>
      <param name="height">要填充的矩形的高度。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.Rectangle[])">
      <summary>填充由 <see cref="T:System.Drawing.Rectangle" /> 结构指定的一系列矩形的内部。</summary>
      <param name="brush">确定填充特性的 <see cref="T:System.Drawing.Brush" />。</param>
      <param name="rects">
        <see cref="T:System.Drawing.Rectangle" /> 结构数组，这些结构表示要填充的矩形。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 为 <see langword="null" />。  
或 
 <paramref name="rects" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="rects" /> 是一个长度为零的数组。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.RectangleF[])">
      <summary>填充由 <see cref="T:System.Drawing.RectangleF" /> 结构指定的一系列矩形的内部。</summary>
      <param name="brush">确定填充特性的 <see cref="T:System.Drawing.Brush" />。</param>
      <param name="rects">
        <see cref="T:System.Drawing.RectangleF" /> 结构数组，这些结构表示要填充的矩形。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 为 <see langword="null" />。  

或 - 
<paramref name="rects" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Rects" /> 是一个长度为零的数组。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillRegion(System.Drawing.Brush,System.Drawing.Region)">
      <summary>填充 <see cref="T:System.Drawing.Region" /> 的内部。</summary>
      <param name="brush">确定填充特性的 <see cref="T:System.Drawing.Brush" />。</param>
      <param name="region">
        <see cref="T:System.Drawing.Region" />，它表示要填充的区域。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 为 <see langword="null" />。  
或 
 <paramref name="region" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.Finalize">
      <summary>在垃圾回收将某一对象回收前允许该对象尝试释放资源并执行其他清理操作。</summary>
    </member>
    <member name="M:System.Drawing.Graphics.Flush">
      <summary>强制执行所有挂起的图形操作并立即返回而不等待操作完成。</summary>
    </member>
    <member name="M:System.Drawing.Graphics.Flush(System.Drawing.Drawing2D.FlushIntention)">
      <summary>用此方法强制执行所有挂起的图形操作，按照指定，等待或者不等待，在操作完成之前返回。</summary>
      <param name="intention">
        <see cref="T:System.Drawing.Drawing2D.FlushIntention" /> 枚举的成员，它指定该方法是立即返回还是等待所有现有的操作都完成。</param>
    </member>
    <member name="M:System.Drawing.Graphics.FromHdc(System.IntPtr)">
      <summary>从设备上下文的指定句柄创建新的 <see cref="T:System.Drawing.Graphics" />。</summary>
      <param name="hdc">设备上下文的句柄。</param>
      <returns>此方法为指定的设备上下文返回新的 <see cref="T:System.Drawing.Graphics" />。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.FromHdc(System.IntPtr,System.IntPtr)">
      <summary>从设备上下文的指定句柄和设备的句柄创建新的 <see cref="T:System.Drawing.Graphics" />。</summary>
      <param name="hdc">设备上下文的句柄。</param>
      <param name="hdevice">设备的句柄。</param>
      <returns>此方法为指定的设备上下文和设备返回新的 <see cref="T:System.Drawing.Graphics" />。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.FromHdcInternal(System.IntPtr)">
      <summary>返回指定设备上下文的 <see cref="T:System.Drawing.Graphics" />。</summary>
      <param name="hdc">设备上下文的句柄。</param>
      <returns>指定设备上下文的 <see cref="T:System.Drawing.Graphics" />。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.FromHwnd(System.IntPtr)">
      <summary>从窗口的指定句柄创建新的 <see cref="T:System.Drawing.Graphics" />。</summary>
      <param name="hwnd">窗口的句柄。</param>
      <returns>此方法为指定的窗口句柄返回新的 <see cref="T:System.Drawing.Graphics" />。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.FromHwndInternal(System.IntPtr)">
      <summary>创建指定 Windows 句柄的新 <see cref="T:System.Drawing.Graphics" />。</summary>
      <param name="hwnd">窗口的句柄。</param>
      <returns>指定窗口句柄的 <see cref="T:System.Drawing.Graphics" />。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.FromImage(System.Drawing.Image)">
      <summary>从指定的 <see cref="T:System.Drawing.Graphics" /> 创建新的 <see cref="T:System.Drawing.Image" />。</summary>
      <param name="image">从中创建新 <see cref="T:System.Drawing.Image" /> 的 <see cref="T:System.Drawing.Graphics" />。</param>
      <returns>此方法为指定的 <see cref="T:System.Drawing.Graphics" /> 返回一个新的 <see cref="T:System.Drawing.Image" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Exception">
        <paramref name="image" /> 具有索引像素格式，或者格式未定义。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.GetContextInfo">
      <summary>获取累积的图形上下文。</summary>
      <returns>一个 <see cref="T:System.Object" />，表示累积的图形上下文。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.GetHalftonePalette">
      <summary>获取当前 Windows 的半色调调色板的句柄。</summary>
      <returns>指定调色板的句柄的内部指针。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.GetHdc">
      <summary>获取与此 <see cref="T:System.Drawing.Graphics" /> 关联的设备上下文的句柄。</summary>
      <returns>与此 <see cref="T:System.Drawing.Graphics" /> 关联的设备上下文的句柄。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.GetNearestColor(System.Drawing.Color)">
      <summary>获取与指定的 <see cref="T:System.Drawing.Color" /> 结构最接近的颜色。</summary>
      <param name="color">
        <see cref="T:System.Drawing.Color" /> 结构，为其查找匹配项。</param>
      <returns>一个 <see cref="T:System.Drawing.Color" /> 结构，它表示与 <paramref name="color" /> 参数指定的颜色最接近的颜色。</returns>
    </member>
    <member name="P:System.Drawing.Graphics.InterpolationMode">
      <summary>获取或设置与此 <see cref="T:System.Drawing.Graphics" /> 关联的插补模式。</summary>
      <returns>
        <see cref="T:System.Drawing.Drawing2D.InterpolationMode" /> 值之一。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.IntersectClip(System.Drawing.Rectangle)">
      <summary>将此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域更新为当前剪辑区域与指定 <see cref="T:System.Drawing.Rectangle" /> 结构的交集。</summary>
      <param name="rect">与当前剪辑区域相交的 <see cref="T:System.Drawing.Rectangle" /> 结构。</param>
    </member>
    <member name="M:System.Drawing.Graphics.IntersectClip(System.Drawing.RectangleF)">
      <summary>将此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域更新为当前剪辑区域与指定 <see cref="T:System.Drawing.RectangleF" /> 结构的交集。</summary>
      <param name="rect">与当前剪辑区域相交的 <see cref="T:System.Drawing.RectangleF" /> 结构。</param>
    </member>
    <member name="M:System.Drawing.Graphics.IntersectClip(System.Drawing.Region)">
      <summary>将此 <see cref="T:System.Drawing.Graphics" /> 对象的剪辑区域更新为当前剪辑区域与指定 <see cref="T:System.Drawing.Region" /> 的交集。</summary>
      <param name="region">要与当前区域交叉的 <see cref="T:System.Drawing.Region" />。</param>
    </member>
    <member name="P:System.Drawing.Graphics.IsClipEmpty">
      <summary>获取一个值，该值指示此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域是否为空。</summary>
      <returns>如果此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域为空，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Drawing.Point)">
      <summary>指示指定的 <see cref="T:System.Drawing.Point" /> 结构是否包含在此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域内。</summary>
      <param name="point">要测试其可见性的 <see cref="T:System.Drawing.Point" /> 结构。</param>
      <returns>如果 <paramref name="point" /> 参数指定的点包含在此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域内，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Drawing.PointF)">
      <summary>指示指定的 <see cref="T:System.Drawing.PointF" /> 结构是否包含在此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域内。</summary>
      <param name="point">要测试其可见性的 <see cref="T:System.Drawing.PointF" /> 结构。</param>
      <returns>如果 <paramref name="point" /> 参数指定的点包含在此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域内，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Drawing.Rectangle)">
      <summary>指示 <see cref="T:System.Drawing.Rectangle" /> 结构指定的矩形是否包含在此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域内。</summary>
      <param name="rect">要测试其可见性的 <see cref="T:System.Drawing.Rectangle" /> 结构。</param>
      <returns>如果 <paramref name="rect" /> 参数指定的矩形包含在此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域内，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Drawing.RectangleF)">
      <summary>指示 <see cref="T:System.Drawing.RectangleF" /> 结构指定的矩形是否包含在此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域内。</summary>
      <param name="rect">要测试其可见性的 <see cref="T:System.Drawing.RectangleF" /> 结构。</param>
      <returns>如果 <paramref name="rect" /> 参数指定的矩形包含在此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域内，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Int32,System.Int32)">
      <summary>指示由一对坐标指定的点是否包含在此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域内。</summary>
      <param name="x">要测试其可见性的点的 x 坐标。</param>
      <param name="y">要测试其可见性的点的 y 坐标。</param>
      <returns>如果由 <paramref name="x" /> 和 <paramref name="y" /> 参数定义的点包含在此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域内，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>指示由一对坐标、一个宽度和一个高度指定的矩形是否包含在此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域内。</summary>
      <param name="x">要测试其可见性的矩形的左上角的 x 坐标。</param>
      <param name="y">要测试其可见性的矩形的左上角的 y 坐标。</param>
      <param name="width">要测试其可见性的矩形的宽度。</param>
      <param name="height">要测试其可见性的矩形的高度。</param>
      <returns>如果 <paramref name="x" />、<paramref name="y" />、<paramref name="width" /> 和 <paramref name="height" /> 参数定义的矩形包含在此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域内，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Single,System.Single)">
      <summary>指示由一对坐标指定的点是否包含在此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域内。</summary>
      <param name="x">要测试其可见性的点的 x 坐标。</param>
      <param name="y">要测试其可见性的点的 y 坐标。</param>
      <returns>如果由 <paramref name="x" /> 和 <paramref name="y" /> 参数定义的点包含在此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域内，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Single,System.Single,System.Single,System.Single)">
      <summary>指示由一对坐标、一个宽度和一个高度指定的矩形是否包含在此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域内。</summary>
      <param name="x">要测试其可见性的矩形的左上角的 x 坐标。</param>
      <param name="y">要测试其可见性的矩形的左上角的 y 坐标。</param>
      <param name="width">要测试其可见性的矩形的宽度。</param>
      <param name="height">要测试其可见性的矩形的高度。</param>
      <returns>如果 <paramref name="x" />、<paramref name="y" />、<paramref name="width" /> 和 <paramref name="height" /> 参数定义的矩形包含在此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域内，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Graphics.IsVisibleClipEmpty">
      <summary>获取一个值，该值指示此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域是否为空。</summary>
      <returns>如果此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域的可见部分为空，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)">
      <summary>获取 <see cref="T:System.Drawing.Region" /> 对象的数组，其中每个对象将字符位置的范围限定在指定字符串内。</summary>
      <param name="text">要测量的字符串。</param>
      <param name="font">
        <see cref="T:System.Drawing.Font" />，它定义字符串的文本格式。</param>
      <param name="layoutRect">
        <see cref="T:System.Drawing.RectangleF" /> 结构，它指定字符串的布局矩形。</param>
      <param name="stringFormat">
        <see cref="T:System.Drawing.StringFormat" />，它表示字符串的格式化信息（如行距）。</param>
      <returns>此方法返回 <see cref="T:System.Drawing.Region" /> 对象的数组，其中每个对象将字符位置的范围限定在指定字符串内。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font)">
      <summary>测量用指定的 <see cref="T:System.Drawing.Font" /> 绘制的指定字符串。</summary>
      <param name="text">要测量的字符串。</param>
      <param name="font">
        <see cref="T:System.Drawing.Font" />，它定义字符串的文本格式。</param>
      <returns>此方法返回 <see cref="T:System.Drawing.SizeF" /> 结构，该结构表示 <paramref name="text" /> 参数指定的、使用 <paramref name="font" /> 参数绘制的字符串的大小，单位由 <see cref="P:System.Drawing.Graphics.PageUnit" /> 属性指定。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="font" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.PointF,System.Drawing.StringFormat)">
      <summary>测量用指定的 <see cref="T:System.Drawing.Font" /> 绘制并用指定的 <see cref="T:System.Drawing.StringFormat" /> 格式化的指定字符串。</summary>
      <param name="text">要测量的字符串。</param>
      <param name="font">
        <see cref="T:System.Drawing.Font" /> 定义字符串的文本格式。</param>
      <param name="origin">
        <see cref="T:System.Drawing.PointF" /> 结构，它表示字符串的左上角。</param>
      <param name="stringFormat">
        <see cref="T:System.Drawing.StringFormat" />，它表示字符串的格式化信息（如行距）。</param>
      <returns>此方法返回 <see cref="T:System.Drawing.SizeF" /> 结构，该结构表示 <paramref name="text" /> 参数指定的、使用 <paramref name="font" /> 参数和 <paramref name="stringFormat" /> 参数绘制的字符串的大小，单位由 <see cref="P:System.Drawing.Graphics.PageUnit" /> 属性指定。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="font" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF)">
      <summary>当在指定的布局区域内以指定的 <see cref="T:System.Drawing.Font" /> 绘制时，测量指定的字符串。</summary>
      <param name="text">要测量的字符串。</param>
      <param name="font">
        <see cref="T:System.Drawing.Font" /> 定义字符串的文本格式。</param>
      <param name="layoutArea">
        <see cref="T:System.Drawing.SizeF" /> 结构，它指定文本的最大布局区域。</param>
      <returns>此方法返回 <see cref="T:System.Drawing.SizeF" /> 结构，该结构表示 <paramref name="text" /> 参数指定的、使用 <paramref name="font" /> 参数绘制的字符串的大小，单位由 <see cref="P:System.Drawing.Graphics.PageUnit" /> 属性指定。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="font" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)">
      <summary>测量用指定的 <see cref="T:System.Drawing.Font" /> 绘制并用指定的 <see cref="T:System.Drawing.StringFormat" /> 格式化的指定字符串。</summary>
      <param name="text">要测量的字符串。</param>
      <param name="font">
        <see cref="T:System.Drawing.Font" /> 定义字符串的文本格式。</param>
      <param name="layoutArea">
        <see cref="T:System.Drawing.SizeF" /> 结构，它指定文本的最大布局区域。</param>
      <param name="stringFormat">
        <see cref="T:System.Drawing.StringFormat" />，它表示字符串的格式化信息（如行距）。</param>
      <returns>此方法返回 <see cref="T:System.Drawing.SizeF" /> 结构，该结构表示在 <paramref name="text" /> 参数中指定的、用 <paramref name="font" /> 参数和 <paramref name="stringFormat" /> 参数绘制的字符串的大小，单位由 <see cref="P:System.Drawing.Graphics.PageUnit" /> 属性指定。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="font" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Int32@,System.Int32@)">
      <summary>测量用指定的 <see cref="T:System.Drawing.Font" /> 绘制并用指定的 <see cref="T:System.Drawing.StringFormat" /> 格式化的指定字符串。</summary>
      <param name="text">要测量的字符串。</param>
      <param name="font">
        <see cref="T:System.Drawing.Font" />，它定义字符串的文本格式。</param>
      <param name="layoutArea">
        <see cref="T:System.Drawing.SizeF" /> 结构，它指定文本的最大布局区域。</param>
      <param name="stringFormat">
        <see cref="T:System.Drawing.StringFormat" />，它表示字符串的格式化信息（如行距）。</param>
      <param name="charactersFitted">字符串中的字符数。</param>
      <param name="linesFilled">字符串中的文本行数。</param>
      <returns>此方法返回 <see cref="T:System.Drawing.SizeF" /> 结构，该结构表示 <paramref name="text" /> 参数指定的、使用 <paramref name="font" /> 参数和 <paramref name="stringFormat" /> 参数绘制的字符串的大小，单位由 <see cref="P:System.Drawing.Graphics.PageUnit" /> 属性指定。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="font" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32)">
      <summary>测量用指定的 <see cref="T:System.Drawing.Font" /> 绘制的指定字符串。</summary>
      <param name="text">要测量的字符串。</param>
      <param name="font">
        <see cref="T:System.Drawing.Font" />，它定义字符串的格式。</param>
      <param name="width">字符串的最大宽度（以像素为单位）。</param>
      <returns>此方法返回 <see cref="T:System.Drawing.SizeF" /> 结构，该结构表示在 <paramref name="text" /> 参数中指定的、使用 <paramref name="font" /> 参数绘制的字符串的大小，单位由 <see cref="P:System.Drawing.Graphics.PageUnit" /> 属性指定。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="font" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32,System.Drawing.StringFormat)">
      <summary>测量用指定的 <see cref="T:System.Drawing.Font" /> 绘制并用指定的 <see cref="T:System.Drawing.StringFormat" /> 格式化的指定字符串。</summary>
      <param name="text">要测量的字符串。</param>
      <param name="font">
        <see cref="T:System.Drawing.Font" />，它定义字符串的文本格式。</param>
      <param name="width">字符串的最大宽度。</param>
      <param name="format">
        <see cref="T:System.Drawing.StringFormat" />，它表示字符串的格式化信息（如行距）。</param>
      <returns>此方法返回 <see cref="T:System.Drawing.SizeF" /> 结构，该结构表示在 <paramref name="text" /> 参数中指定的、用 <paramref name="font" /> 参数和 <paramref name="stringFormat" /> 参数绘制的字符串的大小，单位由 <see cref="P:System.Drawing.Graphics.PageUnit" /> 属性指定。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="font" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
      <summary>将此 <see cref="T:System.Drawing.Graphics" /> 的世界变换乘以指定的 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</summary>
      <param name="matrix">乘以世界变换的 4x4 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</param>
    </member>
    <member name="M:System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>以指定顺序将此 <see cref="T:System.Drawing.Graphics" /> 的世界变换乘以指定的 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</summary>
      <param name="matrix">乘以世界变换的 4x4 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</param>
      <param name="order">
        <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> 枚举的成员，它确定乘法的顺序。</param>
    </member>
    <member name="P:System.Drawing.Graphics.PageScale">
      <summary>获取或设置此 <see cref="T:System.Drawing.Graphics" /> 的世界单位和页单位之间的比例。</summary>
      <returns>此属性指定此 <see cref="T:System.Drawing.Graphics" /> 的世界单位和页单位之间的比例值。</returns>
    </member>
    <member name="P:System.Drawing.Graphics.PageUnit">
      <summary>获取或设置用于此 <see cref="T:System.Drawing.Graphics" /> 中的页坐标的度量单位。</summary>
      <returns>除 <see cref="T:System.Drawing.GraphicsUnit" /> 以外的 <see cref="F:System.Drawing.GraphicsUnit.World" /> 值之一。</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <see cref="P:System.Drawing.Graphics.PageUnit" /> 设置为 <see cref="F:System.Drawing.GraphicsUnit.World" />，此值不是物理单位。</exception>
    </member>
    <member name="P:System.Drawing.Graphics.PixelOffsetMode">
      <summary>获取或设置一个值，该值指定在呈现此 <see cref="T:System.Drawing.Graphics" /> 的过程中像素如何偏移。</summary>
      <returns>此属性指定 <see cref="T:System.Drawing.Drawing2D.PixelOffsetMode" /> 枚举的成员。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.ReleaseHdc">
      <summary>释放通过以前对此 <see cref="M:System.Drawing.Graphics.GetHdc" /> 的 <see cref="T:System.Drawing.Graphics" /> 方法的调用获得的设备上下文句柄。</summary>
    </member>
    <member name="M:System.Drawing.Graphics.ReleaseHdc(System.IntPtr)">
      <summary>释放通过以前对此 <see cref="M:System.Drawing.Graphics.GetHdc" /> 的 <see cref="T:System.Drawing.Graphics" /> 方法的调用获得的设备上下文句柄。</summary>
      <param name="hdc">通过以前对此 <see cref="M:System.Drawing.Graphics.GetHdc" /> 的 <see cref="T:System.Drawing.Graphics" /> 方法的调用获得的设备上下文句柄。</param>
    </member>
    <member name="M:System.Drawing.Graphics.ReleaseHdcInternal(System.IntPtr)">
      <summary>释放设备上下文的句柄。</summary>
      <param name="hdc">设备上下文的句柄。</param>
    </member>
    <member name="P:System.Drawing.Graphics.RenderingOrigin">
      <summary>为抵色处理和阴影画笔获取或设置此 <see cref="T:System.Drawing.Graphics" /> 的呈现原点。</summary>
      <returns>一个 <see cref="T:System.Drawing.Point" /> 结构，它表示 8 位/像素和 16 位/像素抖色处理的抖色原点，还用于设置阴影画笔的原点。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.ResetClip">
      <summary>将此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域重置为无限区域。</summary>
    </member>
    <member name="M:System.Drawing.Graphics.ResetTransform">
      <summary>将此 <see cref="T:System.Drawing.Graphics" /> 的世界变换矩阵重置为单位矩阵。</summary>
    </member>
    <member name="M:System.Drawing.Graphics.Restore(System.Drawing.Drawing2D.GraphicsState)">
      <summary>将此 <see cref="T:System.Drawing.Graphics" /> 的状态还原到 <see cref="T:System.Drawing.Drawing2D.GraphicsState" /> 表示的状态。</summary>
      <param name="gstate">
        <see cref="T:System.Drawing.Drawing2D.GraphicsState" />，它表示要将此 <see cref="T:System.Drawing.Graphics" /> 还原到的状态。</param>
    </member>
    <member name="M:System.Drawing.Graphics.RotateTransform(System.Single)">
      <summary>将指定旋转应用于此 <see cref="T:System.Drawing.Graphics" /> 的变换矩阵。</summary>
      <param name="angle">旋转角度（以度为单位）。</param>
    </member>
    <member name="M:System.Drawing.Graphics.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>以指定顺序将指定旋转应用到此 <see cref="T:System.Drawing.Graphics" /> 的变换矩阵。</summary>
      <param name="angle">旋转角度（以度为单位）。</param>
      <param name="order">
        <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> 枚举的成员，它指定是将旋转追加到矩阵变换之后还是添加到矩阵变换之前。</param>
    </member>
    <member name="M:System.Drawing.Graphics.Save">
      <summary>保存此 <see cref="T:System.Drawing.Graphics" /> 的当前状态，并用 <see cref="T:System.Drawing.Drawing2D.GraphicsState" /> 标识保存的状态。</summary>
      <returns>此方法返回 <see cref="T:System.Drawing.Drawing2D.GraphicsState" />，该对象表示此 <see cref="T:System.Drawing.Graphics" /> 的保存状态。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.ScaleTransform(System.Single,System.Single)">
      <summary>将指定的缩放操作应用于此 <see cref="T:System.Drawing.Graphics" /> 的变换矩阵，方法是将该对象的变换矩阵左乘该缩放矩阵。</summary>
      <param name="sx">x 方向的缩放比例。</param>
      <param name="sy">y 方向的缩放比例。</param>
    </member>
    <member name="M:System.Drawing.Graphics.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>以指定顺序将指定的缩放操作应用到此 <see cref="T:System.Drawing.Graphics" /> 的变换矩阵。</summary>
      <param name="sx">x 方向的缩放比例。</param>
      <param name="sy">y 方向的缩放比例。</param>
      <param name="order">
        <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> 枚举的成员，它指定是将缩放操作添加到变换矩阵前还是追加到变换矩阵后。</param>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>将此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域设置为指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</summary>
      <param name="path">
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />，它表示新的剪辑区域。</param>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.CombineMode)">
      <summary>将此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域设置为当前剪辑区域与指定 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 的组合结果。</summary>
      <param name="path">要组合的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</param>
      <param name="combineMode">
        <see cref="T:System.Drawing.Drawing2D.CombineMode" /> 枚举的成员，它指定要使用的组合操作。</param>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.Graphics)">
      <summary>将此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域设置为指定 <see cref="T:System.Drawing.Graphics" /> 的 <see langword="Clip" /> 属性。</summary>
      <param name="g">
        <see cref="T:System.Drawing.Graphics" />，从该对象中获取新剪辑区域。</param>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.Graphics,System.Drawing.Drawing2D.CombineMode)">
      <summary>将此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域设置为当前剪辑区域和指定的 <see cref="P:System.Drawing.Graphics.Clip" /> 的 <see cref="T:System.Drawing.Graphics" /> 属性指定的组合操作的结果。</summary>
      <param name="g">
        <see cref="T:System.Drawing.Graphics" />，它指定要组合的剪辑区域。</param>
      <param name="combineMode">
        <see cref="T:System.Drawing.Drawing2D.CombineMode" /> 枚举的成员，它指定要使用的组合操作。</param>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.Rectangle)">
      <summary>将此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域设置为 <see cref="T:System.Drawing.Rectangle" /> 结构指定的矩形。</summary>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" /> 结构，它表示新的剪辑区域。</param>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.Rectangle,System.Drawing.Drawing2D.CombineMode)">
      <summary>将此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域设置为当前剪辑区域与 <see cref="T:System.Drawing.Rectangle" /> 结构所指定矩形的组合结果。</summary>
      <param name="rect">要组合的 <see cref="T:System.Drawing.Rectangle" /> 结构。</param>
      <param name="combineMode">
        <see cref="T:System.Drawing.Drawing2D.CombineMode" /> 枚举的成员，它指定要使用的组合操作。</param>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.RectangleF)">
      <summary>将此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域设置为 <see cref="T:System.Drawing.RectangleF" /> 结构指定的矩形。</summary>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" /> 结构，它表示新的剪辑区域。</param>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.RectangleF,System.Drawing.Drawing2D.CombineMode)">
      <summary>将此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域设置为当前剪辑区域与 <see cref="T:System.Drawing.RectangleF" /> 结构所指定矩形的组合结果。</summary>
      <param name="rect">要组合的 <see cref="T:System.Drawing.RectangleF" /> 结构。</param>
      <param name="combineMode">
        <see cref="T:System.Drawing.Drawing2D.CombineMode" /> 枚举的成员，它指定要使用的组合操作。</param>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.Region,System.Drawing.Drawing2D.CombineMode)">
      <summary>将此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域设置为当前剪辑区域与指定 <see cref="T:System.Drawing.Region" /> 的组合结果。</summary>
      <param name="region">要组合的 <see cref="T:System.Drawing.Region" />。</param>
      <param name="combineMode">
        <see cref="T:System.Drawing.Drawing2D.CombineMode" /> 枚举的成员，它指定要使用的组合操作。</param>
    </member>
    <member name="P:System.Drawing.Graphics.SmoothingMode">
      <summary>获取或设置此 <see cref="T:System.Drawing.Graphics" /> 的呈现质量。</summary>
      <returns>
        <see cref="T:System.Drawing.Drawing2D.SmoothingMode" /> 值之一。</returns>
    </member>
    <member name="P:System.Drawing.Graphics.TextContrast">
      <summary>获取或设置呈现文本的灰度校正值。</summary>
      <returns>用于呈现抗锯齿和 ClearType 文本的伽玛校正值。</returns>
    </member>
    <member name="P:System.Drawing.Graphics.TextRenderingHint">
      <summary>获取或设置与此 <see cref="T:System.Drawing.Graphics" /> 关联的文本的呈现模式。</summary>
      <returns>
        <see cref="T:System.Drawing.Text.TextRenderingHint" /> 值之一。</returns>
    </member>
    <member name="P:System.Drawing.Graphics.Transform">
      <summary>获取或设置此 <see cref="T:System.Drawing.Graphics" /> 的几何世界变换的副本。</summary>
      <returns>一个 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 副本，表示此 <see cref="T:System.Drawing.Graphics" /> 的几何世界变换。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Point[])">
      <summary>使用此 <see cref="T:System.Drawing.Graphics" /> 的当前世界变换和页变换，将点数组从一个坐标空间转换到另一个坐标空间。</summary>
      <param name="destSpace">
        <see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /> 枚举成员，它指定目标坐标空间。</param>
      <param name="srcSpace">
        <see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /> 枚举成员，它指定源坐标空间。</param>
      <param name="pts">
        <see cref="T:System.Drawing.Point" /> 结构数组，这些结构表示要变换的点。</param>
    </member>
    <member name="M:System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.PointF[])">
      <summary>使用此 <see cref="T:System.Drawing.Graphics" /> 的当前世界变换和页变换，将点数组从一个坐标空间转换到另一个坐标空间。</summary>
      <param name="destSpace">
        <see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /> 枚举成员，它指定目标坐标空间。</param>
      <param name="srcSpace">
        <see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /> 枚举成员，它指定源坐标空间。</param>
      <param name="pts">
        <see cref="T:System.Drawing.PointF" /> 结构数组，这些结构表示要变换的点。</param>
    </member>
    <member name="M:System.Drawing.Graphics.TranslateClip(System.Int32,System.Int32)">
      <summary>将此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域沿水平方向和垂直方向平移指定的量。</summary>
      <param name="dx">平移的 x 坐标。</param>
      <param name="dy">平移的 y 坐标。</param>
    </member>
    <member name="M:System.Drawing.Graphics.TranslateClip(System.Single,System.Single)">
      <summary>将此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域沿水平方向和垂直方向平移指定的量。</summary>
      <param name="dx">平移的 x 坐标。</param>
      <param name="dy">平移的 y 坐标。</param>
    </member>
    <member name="M:System.Drawing.Graphics.TranslateTransform(System.Single,System.Single)">
      <summary>通过使此 <see cref="T:System.Drawing.Graphics" /> 的变换矩阵左乘指定的平移来更改坐标系统的原点。</summary>
      <param name="dx">平移的 x 坐标。</param>
      <param name="dy">平移的 y 坐标。</param>
    </member>
    <member name="M:System.Drawing.Graphics.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>通过以指定顺序将指定平移应用于此 <see cref="T:System.Drawing.Graphics" /> 的变换矩阵来更改坐标系统的原点。</summary>
      <param name="dx">平移的 x 坐标。</param>
      <param name="dy">平移的 y 坐标。</param>
      <param name="order">
        <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> 枚举的成员，它指定是将平移添加到变换矩阵前还是追加到变换矩阵后。</param>
    </member>
    <member name="P:System.Drawing.Graphics.VisibleClipBounds">
      <summary>获取此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域的边框。</summary>
      <returns>一个 <see cref="T:System.Drawing.RectangleF" /> 结构，它表示此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域的边框。</returns>
    </member>
    <member name="T:System.Drawing.GraphicsUnit">
      <summary>指定给定数据的度量单位。</summary>
    </member>
    <member name="F:System.Drawing.GraphicsUnit.Display">
      <summary>指定显示设备的度量单位。 通常，视频显示使用的单位是像素；打印机使用的单位是 1/100 英寸。</summary>
    </member>
    <member name="F:System.Drawing.GraphicsUnit.Document">
      <summary>将文档单位（1/300 英寸）指定为度量单位。</summary>
    </member>
    <member name="F:System.Drawing.GraphicsUnit.Inch">
      <summary>将英寸指定为度量单位。</summary>
    </member>
    <member name="F:System.Drawing.GraphicsUnit.Millimeter">
      <summary>将毫米指定为度量单位。</summary>
    </member>
    <member name="F:System.Drawing.GraphicsUnit.Pixel">
      <summary>将设备像素指定为度量单位。</summary>
    </member>
    <member name="F:System.Drawing.GraphicsUnit.Point">
      <summary>将打印机点（1/72 英寸）指定为度量单位。</summary>
    </member>
    <member name="F:System.Drawing.GraphicsUnit.World">
      <summary>将世界坐标系单位指定为度量单位。</summary>
    </member>
    <member name="T:System.Drawing.Icon">
      <summary>表示 Windows 图标，它是用于表示对象的小位图图像。 尽管图标的大小由系统决定，但仍可将其视为透明的位图。</summary>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.Drawing.Icon,System.Drawing.Size)">
      <summary>初始化 <see cref="T:System.Drawing.Icon" /> 类的新实例，并尝试查找与所请求的大小匹配的图标版本。</summary>
      <param name="original">要从其中加载新调整大小的图标的 <see cref="T:System.Drawing.Icon" />。</param>
      <param name="size">用于指定新 <see cref="T:System.Drawing.Size" /> 的高度和宽度的 <see cref="T:System.Drawing.Icon" /> 结构。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="original" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.Drawing.Icon,System.Int32,System.Int32)">
      <summary>初始化 <see cref="T:System.Drawing.Icon" /> 类的新实例，并尝试查找与所请求的大小匹配的图标版本。</summary>
      <param name="original">要从其中加载不同大小的图标。</param>
      <param name="width">新图标的宽度。</param>
      <param name="height">新图标的高度。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="original" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.IO.Stream)">
      <summary>从指定的数据流初始化 <see cref="T:System.Drawing.Icon" /> 类的新实例。</summary>
      <param name="stream">从其中加载 <see cref="T:System.Drawing.Icon" /> 的数据流。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.IO.Stream,System.Drawing.Size)">
      <summary>从指定的流初始化 <see cref="T:System.Drawing.Icon" /> 类的指定大小的新实例。</summary>
      <param name="stream">包含图标数据的流。</param>
      <param name="size">所需的图标大小。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> 为 <see langword="null" /> 或不包含图像数据。</exception>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.IO.Stream,System.Int32,System.Int32)">
      <summary>从指定的数据流用指定的宽度和高度初始化 <see cref="T:System.Drawing.Icon" /> 类的新实例。</summary>
      <param name="stream">从其中加载图标的数据流。</param>
      <param name="width">图标的宽度（以像素为单位）。</param>
      <param name="height">图标的高度（以像素为单位）。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.String)">
      <summary>从指定的文件名初始化 <see cref="T:System.Drawing.Icon" /> 类的新实例。</summary>
      <param name="fileName">要从其中加载 <see cref="T:System.Drawing.Icon" /> 的文件。</param>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.String,System.Drawing.Size)">
      <summary>从指定的文件初始化 <see cref="T:System.Drawing.Icon" /> 类的指定大小的新实例。</summary>
      <param name="fileName">包含图标数据的文件的名称和路径。</param>
      <param name="size">所需的图标大小。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="string" /> 为 <see langword="null" /> 或不包含图像数据。</exception>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.String,System.Int32,System.Int32)">
      <summary>使用指定文件中的指定宽度和高度初始化 <see cref="T:System.Drawing.Icon" /> 类的一个新实例。</summary>
      <param name="fileName">包含 <see cref="T:System.Drawing.Icon" /> 数据的文件的名称和路径。</param>
      <param name="width">需要的 <see cref="T:System.Drawing.Icon" /> 宽度。</param>
      <param name="height">需要的 <see cref="T:System.Drawing.Icon" /> 高度。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="string" /> 为 <see langword="null" /> 或不包含图像数据。</exception>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.Type,System.String)">
      <summary>从指定程序集中的资源初始化 <see cref="T:System.Drawing.Icon" /> 类的新实例。</summary>
      <param name="type">
        <see cref="T:System.Type" />，它指定在其中查找资源的程序集。</param>
      <param name="resource">要加载的资源的名称。</param>
      <exception cref="T:System.ArgumentException">由 <paramref name="resource" /> 指定的图标无法在包含指定 <paramref name="type" /> 的程序集中找到。</exception>
    </member>
    <member name="M:System.Drawing.Icon.Clone">
      <summary>克隆 <see cref="T:System.Drawing.Icon" />，创建重复图像。</summary>
      <returns>可强制转换为 <see cref="T:System.Drawing.Icon" /> 的对象。</returns>
    </member>
    <member name="M:System.Drawing.Icon.Dispose">
      <summary>释放此 <see cref="T:System.Drawing.Icon" /> 使用的所有资源。</summary>
    </member>
    <member name="M:System.Drawing.Icon.ExtractAssociatedIcon(System.String)">
      <summary>返回指定文件中包含的图像的图标表示形式。</summary>
      <param name="filePath">包含图像的文件的路径。</param>
      <returns>指定文件中包含的图像的 <see cref="T:System.Drawing.Icon" /> 表示形式。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="filePath" /> 不指示有效文件。  
或 
<paramref name="filePath" /> 指示通用命名约定 (UNC) 路径。</exception>
    </member>
    <member name="M:System.Drawing.Icon.Finalize">
      <summary>在垃圾回收将某一对象回收前允许该对象尝试释放资源并执行其他清理操作。</summary>
    </member>
    <member name="M:System.Drawing.Icon.FromHandle(System.IntPtr)">
      <summary>从图标的指定 Windows 句柄 (<see langword="HICON" />) 创建 GDI+ <see cref="T:System.Drawing.Icon" />。</summary>
      <param name="handle">图标的 Windows 句柄。</param>
      <returns>此方法创建的 <see cref="T:System.Drawing.Icon" />。</returns>
    </member>
    <member name="P:System.Drawing.Icon.Handle">
      <summary>获取此 <see cref="T:System.Drawing.Icon" /> 的 Windows 句柄。 这并非该句柄的副本；请不要释放它。</summary>
      <returns>该图标的 Windows 句柄。</returns>
    </member>
    <member name="P:System.Drawing.Icon.Height">
      <summary>获取此 <see cref="T:System.Drawing.Icon" /> 的高度。</summary>
      <returns>此 <see cref="T:System.Drawing.Icon" /> 的高度。</returns>
    </member>
    <member name="M:System.Drawing.Icon.Save(System.IO.Stream)">
      <summary>将此 <see cref="T:System.Drawing.Icon" /> 保存到指定的输出 <see cref="T:System.IO.Stream" />。</summary>
      <param name="outputStream">要保存到的 <see cref="T:System.IO.Stream" />。</param>
    </member>
    <member name="P:System.Drawing.Icon.Size">
      <summary>获取此 <see cref="T:System.Drawing.Icon" /> 的大小。</summary>
      <returns>
        <see cref="T:System.Drawing.Size" /> 结构，它指定此 <see cref="T:System.Drawing.Icon" /> 的宽度和高度。</returns>
    </member>
    <member name="M:System.Drawing.Icon.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>使用序列化目标对象所需的数据填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</summary>
      <param name="info">要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</param>
      <param name="context">此序列化的目标（请参见 <see cref="T:System.Runtime.Serialization.StreamingContext" />）。</param>
    </member>
    <member name="M:System.Drawing.Icon.ToBitmap">
      <summary>将此 <see cref="T:System.Drawing.Icon" /> 转换为 GDI+ <see cref="T:System.Drawing.Bitmap" />。</summary>
      <returns>
        <see cref="T:System.Drawing.Bitmap" />，它表示已转换的 <see cref="T:System.Drawing.Icon" />。</returns>
    </member>
    <member name="M:System.Drawing.Icon.ToString">
      <summary>获取用于描述 <see cref="T:System.Drawing.Icon" /> 的可读字符串。</summary>
      <returns>描述 <see cref="T:System.Drawing.Icon" /> 的字符串。</returns>
    </member>
    <member name="P:System.Drawing.Icon.Width">
      <summary>获取此 <see cref="T:System.Drawing.Icon" /> 的宽度。</summary>
      <returns>此 <see cref="T:System.Drawing.Icon" /> 的宽度。</returns>
    </member>
    <member name="T:System.Drawing.IDeviceContext">
      <summary>定义用于获取并释放 Windows 设备上下文的现有图柄的方法。</summary>
    </member>
    <member name="M:System.Drawing.IDeviceContext.GetHdc">
      <summary>返回 Windows 设备上下文的图柄。</summary>
      <returns>表示设备上下文的图柄的 <see cref="T:System.IntPtr" />。</returns>
    </member>
    <member name="M:System.Drawing.IDeviceContext.ReleaseHdc">
      <summary>释放 Windows 设备上下文的图柄。</summary>
    </member>
    <member name="T:System.Drawing.Image">
      <summary>为源自 <see cref="T:System.Drawing.Bitmap" /> 和 <see cref="T:System.Drawing.Imaging.Metafile" /> 的类提供功能的抽象基类。</summary>
    </member>
    <member name="M:System.Drawing.Image.Clone">
      <summary>创建此 <see cref="T:System.Drawing.Image" /> 的一个精确副本。</summary>
      <returns>该方法创建的、强制转换为对象的 <see cref="T:System.Drawing.Image" />。</returns>
    </member>
    <member name="M:System.Drawing.Image.Dispose">
      <summary>释放此 <see cref="T:System.Drawing.Image" /> 使用的所有资源。</summary>
    </member>
    <member name="M:System.Drawing.Image.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Drawing.Image" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Drawing.Image.Finalize">
      <summary>在垃圾回收将某一对象回收前允许该对象尝试释放资源并执行其他清理操作。</summary>
    </member>
    <member name="P:System.Drawing.Image.Flags">
      <summary>获取该 <see cref="T:System.Drawing.Image" /> 的像素数据的特性标志。</summary>
      <returns>表示该 <see cref="T:System.Drawing.Imaging.ImageFlags" /> 按位组合的 <see cref="T:System.Drawing.Image" /> 的整数。</returns>
    </member>
    <member name="P:System.Drawing.Image.FrameDimensionsList">
      <summary>获取 GUID 的数组，这些 GUID 表示此 <see cref="T:System.Drawing.Image" /> 中帧的维数。</summary>
      <returns>GUID 的数组，这些 GUID 指定 <see cref="T:System.Drawing.Image" /> 中从最重要到最不重要的帧的维数。</returns>
    </member>
    <member name="M:System.Drawing.Image.FromFile(System.String)">
      <summary>从指定的文件创建 <see cref="T:System.Drawing.Image" />。</summary>
      <param name="filename">字符串，包含要从中创建 <see cref="T:System.Drawing.Image" /> 的文件的名称。</param>
      <returns>此方法创建的 <see cref="T:System.Drawing.Image" />。</returns>
      <exception cref="T:System.OutOfMemoryException">该文件没有有效的图像格式。  
或 
 GDI+ 不支持文件的像素格式。</exception>
      <exception cref="T:System.IO.FileNotFoundException">指定的文件不存在。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="filename" /> 为 <see cref="T:System.Uri" />。</exception>
    </member>
    <member name="M:System.Drawing.Image.FromFile(System.String,System.Boolean)">
      <summary>使用该文件中的嵌入颜色管理信息，从指定的文件创建 <see cref="T:System.Drawing.Image" />。</summary>
      <param name="filename">字符串，包含要从中创建 <see cref="T:System.Drawing.Image" /> 的文件的名称。</param>
      <param name="useEmbeddedColorManagement">若要使用图像文件中嵌入的颜色管理信息，则设置为 <see langword="true" />；否则设置为 <see langword="false" />。</param>
      <returns>此方法创建的 <see cref="T:System.Drawing.Image" />。</returns>
      <exception cref="T:System.OutOfMemoryException">该文件没有有效的图像格式。  
或 
 GDI+ 不支持文件的像素格式。</exception>
      <exception cref="T:System.IO.FileNotFoundException">指定的文件不存在。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="filename" /> 为 <see cref="T:System.Uri" />。</exception>
    </member>
    <member name="M:System.Drawing.Image.FromHbitmap(System.IntPtr)">
      <summary>从 GDI 位图的句柄创建 <see cref="T:System.Drawing.Bitmap" />。</summary>
      <param name="hbitmap">要从其创建 <see cref="T:System.Drawing.Bitmap" /> 的 GDI 位图句柄。</param>
      <returns>此方法创建的 <see cref="T:System.Drawing.Bitmap" />。</returns>
    </member>
    <member name="M:System.Drawing.Image.FromHbitmap(System.IntPtr,System.IntPtr)">
      <summary>从 GDI 位图的句柄和 GDI 调色板的句柄创建 <see cref="T:System.Drawing.Bitmap" />。</summary>
      <param name="hbitmap">要从其创建 <see cref="T:System.Drawing.Bitmap" /> 的 GDI 位图句柄。</param>
      <param name="hpalette">如果在 <paramref name="hbitmap" /> 参数中指定的位图不是与设备无关的位图 (DIB)，则为用于定义位图颜色的 GDI 调色板的句柄。</param>
      <returns>此方法创建的 <see cref="T:System.Drawing.Bitmap" />。</returns>
    </member>
    <member name="M:System.Drawing.Image.FromStream(System.IO.Stream)">
      <summary>从指定的数据流创建 <see cref="T:System.Drawing.Image" />。</summary>
      <param name="stream">一个 <see cref="T:System.IO.Stream" />，其中包含此 <see cref="T:System.Drawing.Image" /> 的数据。</param>
      <returns>此方法创建的 <see cref="T:System.Drawing.Image" />。</returns>
      <exception cref="T:System.ArgumentException">该流没有有效的图像格式 
或 
 <paramref name="stream" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean)">
      <summary>可以选择使用指定的数据流中嵌入的颜色管理信息，从该数据流创建 <see cref="T:System.Drawing.Image" />。</summary>
      <param name="stream">一个 <see cref="T:System.IO.Stream" />，其中包含此 <see cref="T:System.Drawing.Image" /> 的数据。</param>
      <param name="useEmbeddedColorManagement">若要使用该数据流中嵌入的颜色管理信息，则设置为 <see langword="true" />；否则设置为 <see langword="false" />。</param>
      <returns>此方法创建的 <see cref="T:System.Drawing.Image" />。</returns>
      <exception cref="T:System.ArgumentException">该流没有有效的图像格式 
或 
 <paramref name="stream" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean,System.Boolean)">
      <summary>可以选择使用嵌入的颜色管理信息并验证图像数据来从指定的数据流创建 <see cref="T:System.Drawing.Image" />。</summary>
      <param name="stream">一个 <see cref="T:System.IO.Stream" />，其中包含此 <see cref="T:System.Drawing.Image" /> 的数据。</param>
      <param name="useEmbeddedColorManagement">若要使用该数据流中嵌入的颜色管理信息，则设置为 <see langword="true" />；否则设置为 <see langword="false" />。</param>
      <param name="validateImageData">若要验证图像数据，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <returns>此方法创建的 <see cref="T:System.Drawing.Image" />。</returns>
      <exception cref="T:System.ArgumentException">该流没有有效的图像格式。</exception>
    </member>
    <member name="M:System.Drawing.Image.GetBounds(System.Drawing.GraphicsUnit@)">
      <summary>以指定的单位获取图像的界限。</summary>
      <param name="pageUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 值之一，指示边框的测量单位。</param>
      <returns>
        <see cref="T:System.Drawing.RectangleF" />，以指定的单位表示图像的界限。</returns>
    </member>
    <member name="M:System.Drawing.Image.GetEncoderParameterList(System.Guid)">
      <summary>返回有关指定的图像编码器所支持的参数的信息。</summary>
      <param name="encoder">用于指定图像编码器的 GUID。</param>
      <returns>一个 <see cref="T:System.Drawing.Imaging.EncoderParameters" />，包含 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象的一个数组。 每个 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 都包含有关指定的图像编码器所支持的某个参数的信息。</returns>
    </member>
    <member name="M:System.Drawing.Image.GetFrameCount(System.Drawing.Imaging.FrameDimension)">
      <summary>返回指定维度的帧数。</summary>
      <param name="dimension">
        <see cref="T:System.Drawing.Imaging.FrameDimension" />，它指定维度类型的标识。</param>
      <returns>指定维度中的帧数。</returns>
    </member>
    <member name="M:System.Drawing.Image.GetPixelFormatSize(System.Drawing.Imaging.PixelFormat)">
      <summary>返回指定像素格式的颜色深度（每个像素的位数）。</summary>
      <param name="pixfmt">
        <see cref="T:System.Drawing.Imaging.PixelFormat" /> 的成员，指定要查找其大小的格式。</param>
      <returns>指定的像素格式的颜色深度。</returns>
    </member>
    <member name="M:System.Drawing.Image.GetPropertyItem(System.Int32)">
      <summary>从该 <see cref="T:System.Drawing.Image" /> 获取指定的属性项。</summary>
      <param name="propid">要获取的属性项的 ID。</param>
      <returns>此方法获取的 <see cref="T:System.Drawing.Imaging.PropertyItem" />。</returns>
      <exception cref="T:System.ArgumentException">此图像的图像格式不支持属性项。</exception>
    </member>
    <member name="M:System.Drawing.Image.GetThumbnailImage(System.Int32,System.Int32,System.Drawing.Image.GetThumbnailImageAbort,System.IntPtr)">
      <summary>返回此 <see cref="T:System.Drawing.Image" /> 的缩略图。</summary>
      <param name="thumbWidth">请求的缩略图的宽度（以像素为单位）。</param>
      <param name="thumbHeight">请求的缩略图的高度（以像素为单位）。</param>
      <param name="callback">一个 <see cref="T:System.Drawing.Image.GetThumbnailImageAbort" /> 委托。  
 注意，必须创建一个委托并将对此委托的引用作为 <paramref name="callback" /> 参数传递，但此委托不会被使用。</param>
      <param name="callbackData">必须为 <see cref="F:System.IntPtr.Zero" />。</param>
      <returns>表示缩略图的 <see cref="T:System.Drawing.Image" />。</returns>
    </member>
    <member name="T:System.Drawing.Image.GetThumbnailImageAbort">
      <summary>提供一个回叫方法，用于确定 <see cref="M:System.Drawing.Image.GetThumbnailImage(System.Int32,System.Int32,System.Drawing.Image.GetThumbnailImageAbort,System.IntPtr)" /> 方法应在何时提前取消执行。</summary>
      <returns>如果此方法确定 <see cref="M:System.Drawing.Image.GetThumbnailImage(System.Int32,System.Int32,System.Drawing.Image.GetThumbnailImageAbort,System.IntPtr)" /> 方法应提前停止执行，它将返回 <see langword="true" />；否则返回 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Image.Height">
      <summary>获取此 <see cref="T:System.Drawing.Image" /> 的高度（以像素为单位）。</summary>
      <returns>此 <see cref="T:System.Drawing.Image" /> 的高度（以像素为单位）。</returns>
    </member>
    <member name="P:System.Drawing.Image.HorizontalResolution">
      <summary>获取此 <see cref="T:System.Drawing.Image" /> 的水平分辨率（以“像素/英寸”为单位）。</summary>
      <returns>此 <see cref="T:System.Drawing.Image" /> 的水平分辨率（以“像素/英寸”为单位）。</returns>
    </member>
    <member name="M:System.Drawing.Image.IsAlphaPixelFormat(System.Drawing.Imaging.PixelFormat)">
      <summary>返回一个值，该值指示此 <see cref="T:System.Drawing.Image" /> 的像素格式是否包含 alpha 信息。</summary>
      <param name="pixfmt">要测试的 <see cref="T:System.Drawing.Imaging.PixelFormat" />。</param>
      <returns>如果 <paramref name="pixfmt" /> 包含 alpha 信息，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Image.IsCanonicalPixelFormat(System.Drawing.Imaging.PixelFormat)">
      <summary>返回一个值，该值指示该像素格式是否为每个像素 32 位。</summary>
      <param name="pixfmt">要测试的 <see cref="T:System.Drawing.Imaging.PixelFormat" />。</param>
      <returns>如果 <paramref name="pixfmt" /> 规范，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Image.IsExtendedPixelFormat(System.Drawing.Imaging.PixelFormat)">
      <summary>返回一个值，该值指示该像素格式是否为每个像素 64 位。</summary>
      <param name="pixfmt">要测试的 <see cref="T:System.Drawing.Imaging.PixelFormat" /> 枚举。</param>
      <returns>如果 <paramref name="pixfmt" /> 是扩展的，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Image.Palette">
      <summary>获取或设置用于此 <see cref="T:System.Drawing.Image" /> 的调色板。</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.ColorPalette" />，表示用于此 <see cref="T:System.Drawing.Image" /> 的调色板。</returns>
    </member>
    <member name="P:System.Drawing.Image.PhysicalDimension">
      <summary>获取此图像的宽度和高度。</summary>
      <returns>
        <see cref="T:System.Drawing.SizeF" /> 结构，表示此 <see cref="T:System.Drawing.Image" /> 的宽度和高度。</returns>
    </member>
    <member name="P:System.Drawing.Image.PixelFormat">
      <summary>获取此 <see cref="T:System.Drawing.Image" /> 的像素格式。</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.PixelFormat" />，表示此 <see cref="T:System.Drawing.Image" /> 的像素格式。</returns>
    </member>
    <member name="P:System.Drawing.Image.PropertyIdList">
      <summary>获取存储于该 <see cref="T:System.Drawing.Image" /> 中的属性项的 ID。</summary>
      <returns>由属性 ID 组成的一个数组，此图像中存储的每个属性项各有一个 ID。</returns>
    </member>
    <member name="P:System.Drawing.Image.PropertyItems">
      <summary>获取存储于该 <see cref="T:System.Drawing.Image" /> 中的所有属性项（元数据片）。</summary>
      <returns>由 <see cref="T:System.Drawing.Imaging.PropertyItem" /> 对象组成的一个数组，这些对象分别对应于此图像中存储的每个属性项。</returns>
    </member>
    <member name="P:System.Drawing.Image.RawFormat">
      <summary>获取此 <see cref="T:System.Drawing.Image" /> 的文件格式。</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.ImageFormat" />，表示此 <see cref="T:System.Drawing.Image" /> 的文件格式。</returns>
    </member>
    <member name="M:System.Drawing.Image.RemovePropertyItem(System.Int32)">
      <summary>从该 <see cref="T:System.Drawing.Image" /> 移除指定的属性项。</summary>
      <param name="propid">要移除的属性项的 ID。</param>
      <exception cref="T:System.ArgumentException">该图像不包含请求的属性项。  
 或  
 该图像的图像格式不支持属性项。</exception>
    </member>
    <member name="M:System.Drawing.Image.RotateFlip(System.Drawing.RotateFlipType)">
      <summary>旋转、翻转或者同时旋转和翻转 <see cref="T:System.Drawing.Image" />。</summary>
      <param name="rotateFlipType">
        <see cref="T:System.Drawing.RotateFlipType" /> 成员，指定要应用于该图像的旋转和翻转的类型。</param>
    </member>
    <member name="M:System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)">
      <summary>使用指定的编码器和图像编码器参数，将该图像保存到指定的流。</summary>
      <param name="stream">将在其中保存图像的 <see cref="T:System.IO.Stream" />。</param>
      <param name="encoder">用于此 <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> 的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="encoderParams">一个 <see cref="T:System.Drawing.Imaging.EncoderParameters" />，它指定图像编码器使用的参数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">该图像以错误的图像格式保存。</exception>
    </member>
    <member name="M:System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageFormat)">
      <summary>将此图像以指定的格式保存到指定的流中。</summary>
      <param name="stream">将在其中保存图像的 <see cref="T:System.IO.Stream" />。</param>
      <param name="format">
        <see cref="T:System.Drawing.Imaging.ImageFormat" />，指定保存的图像的格式。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> 或 <paramref name="format" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">该图像以错误的图像格式保存</exception>
    </member>
    <member name="M:System.Drawing.Image.Save(System.String)">
      <summary>将该 <see cref="T:System.Drawing.Image" /> 保存到指定的文件或流。</summary>
      <param name="filename">字符串，包含要将此 <see cref="T:System.Drawing.Image" /> 保存到的文件的名称。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filename" /> 为 <see langword="null." /></exception>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">该图像以错误的图像格式保存。  
 或  
 该图像被保存到创建该图像的文件。</exception>
    </member>
    <member name="M:System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)">
      <summary>使用指定的编码器和图像编码器参数，将该 <see cref="T:System.Drawing.Image" /> 保存到指定的文件。</summary>
      <param name="filename">字符串，包含要将此 <see cref="T:System.Drawing.Image" /> 保存到的文件的名称。</param>
      <param name="encoder">用于此 <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> 的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="encoderParams">用于该 <see cref="T:System.Drawing.Imaging.EncoderParameters" /> 的 <see cref="T:System.Drawing.Image" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filename" /> 或 <paramref name="encoder" /> 为 <see langword="null." /></exception>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">该图像以错误的图像格式保存。  

或 -  

 该图像被保存到创建该图像的文件。</exception>
    </member>
    <member name="M:System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageFormat)">
      <summary>将此 <see cref="T:System.Drawing.Image" /> 以指定格式保存到指定文件。</summary>
      <param name="filename">字符串，包含要将此 <see cref="T:System.Drawing.Image" /> 保存到的文件的名称。</param>
      <param name="format">用于此 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 的 <see cref="T:System.Drawing.Image" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filename" /> 或 <paramref name="format" /> 为 <see langword="null." /></exception>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">该图像以错误的图像格式保存。  
 或  
 该图像被保存到创建该图像的文件。</exception>
    </member>
    <member name="M:System.Drawing.Image.SaveAdd(System.Drawing.Image,System.Drawing.Imaging.EncoderParameters)">
      <summary>将帧添加到上次对 <see cref="Overload:System.Drawing.Image.Save" /> 方法调用时所指定的文件或流中。</summary>
      <param name="image">包含要添加的帧的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="encoderParams">一个 <see cref="T:System.Drawing.Imaging.EncoderParameters" />，包含保存-添加操作使用的图像编码器所需的参数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Image.SaveAdd(System.Drawing.Imaging.EncoderParameters)">
      <summary>将帧添加到上次对 <see cref="Overload:System.Drawing.Image.Save" /> 方法调用时所指定的文件或流中。 使用此方法将多帧图像中的选定帧保存到另一个多帧图像。</summary>
      <param name="encoderParams">一个 <see cref="T:System.Drawing.Imaging.EncoderParameters" />，包含保存-添加操作使用的图像编码器所需的参数。</param>
    </member>
    <member name="M:System.Drawing.Image.SelectActiveFrame(System.Drawing.Imaging.FrameDimension,System.Int32)">
      <summary>选择由维度和索引指定的帧。</summary>
      <param name="dimension">
        <see cref="T:System.Drawing.Imaging.FrameDimension" />，它指定维度类型的标识。</param>
      <param name="frameIndex">活动帧的索引。</param>
      <returns>始终返回 0。</returns>
    </member>
    <member name="M:System.Drawing.Image.SetPropertyItem(System.Drawing.Imaging.PropertyItem)">
      <summary>在此 <see cref="T:System.Drawing.Image" /> 中存储一个属性项（元数据片）。</summary>
      <param name="propitem">要存储的 <see cref="T:System.Drawing.Imaging.PropertyItem" />。</param>
      <exception cref="T:System.ArgumentException">此图像的图像格式不支持属性项。</exception>
    </member>
    <member name="P:System.Drawing.Image.Size">
      <summary>获取此图像的宽度和高度（以像素为单位）。</summary>
      <returns>
        <see cref="T:System.Drawing.Size" /> 结构，表示此图像的宽度和高度（以像素为单位）。</returns>
    </member>
    <member name="M:System.Drawing.Image.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>使用将目标对象序列化所需的数据填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</summary>
      <param name="info">要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</param>
      <param name="context">此序列化的目标（请参见 <see cref="T:System.Runtime.Serialization.StreamingContext" />）。</param>
    </member>
    <member name="P:System.Drawing.Image.Tag">
      <summary>获取或设置提供有关图像的附加数据的对象。</summary>
      <returns>提供有关图像附加数据的 <see cref="T:System.Object" />。</returns>
    </member>
    <member name="P:System.Drawing.Image.VerticalResolution">
      <summary>获取此 <see cref="T:System.Drawing.Image" /> 的垂直分辨率（以“像素/英寸”为单位）。</summary>
      <returns>此 <see cref="T:System.Drawing.Image" /> 的垂直分辨率（以“像素/英寸”为单位）。</returns>
    </member>
    <member name="P:System.Drawing.Image.Width">
      <summary>获取此 <see cref="T:System.Drawing.Image" /> 的宽度（以像素为单位）。</summary>
      <returns>此 <see cref="T:System.Drawing.Image" /> 的宽度（以像素为单位）。</returns>
    </member>
    <member name="T:System.Drawing.ImageAnimator">
      <summary>动画处理包含基于时间的帧的图像。</summary>
    </member>
    <member name="M:System.Drawing.ImageAnimator.Animate(System.Drawing.Image,System.EventHandler)">
      <summary>将多帧图像显示为动画。</summary>
      <param name="image">要动画处理的 <see cref="T:System.Drawing.Image" /> 对象。</param>
      <param name="onFrameChangedHandler">一个 <see langword="EventHandler" /> 对象，它指定在动画帧发生更改时调用的方法。</param>
    </member>
    <member name="M:System.Drawing.ImageAnimator.CanAnimate(System.Drawing.Image)">
      <summary>返回一个布尔值，该值指示指定图像是否包含基于时间的帧。</summary>
      <param name="image">要测试的 <see cref="T:System.Drawing.Image" /> 对象。</param>
      <returns>如果指定图像包含基于时间的帧，则此方法返回 <see langword="true" />；否则返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.ImageAnimator.StopAnimate(System.Drawing.Image,System.EventHandler)">
      <summary>终止正在运行的动画。</summary>
      <param name="image">要停止动画处理的 <see cref="T:System.Drawing.Image" /> 对象。</param>
      <param name="onFrameChangedHandler">一个 <see langword="EventHandler" /> 对象，它指定在动画帧发生更改时调用的方法。</param>
    </member>
    <member name="M:System.Drawing.ImageAnimator.UpdateFrames">
      <summary>使该帧在当前正被动画处理的所有图像中前移。 新帧在下一次呈现图像时绘制。</summary>
    </member>
    <member name="M:System.Drawing.ImageAnimator.UpdateFrames(System.Drawing.Image)">
      <summary>使帧在指定的图像中前移。 新帧在下一次呈现图像时绘制。 此方法只适用于包含基于时间的帧的图像。</summary>
      <param name="image">要为其更新帧的 <see cref="T:System.Drawing.Image" /> 对象。</param>
    </member>
    <member name="T:System.Drawing.Imaging.BitmapData">
      <summary>指定位图图像的特性。 <see cref="T:System.Drawing.Imaging.BitmapData" /> 类由 <see cref="Overload:System.Drawing.Bitmap.LockBits" /> 类的 <see cref="M:System.Drawing.Bitmap.UnlockBits(System.Drawing.Imaging.BitmapData)" /> 和 <see cref="T:System.Drawing.Bitmap" /> 方法使用。 不可继承。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.BitmapData.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.Imaging.BitmapData" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Drawing.Imaging.BitmapData.Height">
      <summary>获取或设置 <see cref="T:System.Drawing.Bitmap" /> 对象的像素高度。 有时也称作扫描行数。</summary>
      <returns>
        <see cref="T:System.Drawing.Bitmap" /> 对象的像素高度。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.BitmapData.PixelFormat">
      <summary>获取或设置返回此 <see cref="T:System.Drawing.Bitmap" /> 对象的 <see cref="T:System.Drawing.Imaging.BitmapData" /> 对象中像素信息的格式。</summary>
      <returns>指定关联的 <see cref="T:System.Drawing.Imaging.PixelFormat" /> 对象中像素信息格式的 <see cref="T:System.Drawing.Bitmap" />。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.BitmapData.Reserved">
      <summary>保留。 请勿使用。</summary>
      <returns>保留。 请勿使用。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.BitmapData.Scan0">
      <summary>获取或设置位图中第一个像素数据的地址。 它也可以看成是位图中的第一个扫描行。</summary>
      <returns>位图中第一个像素数据的地址。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.BitmapData.Stride">
      <summary>获取或设置 <see cref="T:System.Drawing.Bitmap" /> 对象的跨距宽度（也称为扫描宽度）。</summary>
      <returns>
        <see cref="T:System.Drawing.Bitmap" /> 对象的跨距宽度，以字节为单位。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.BitmapData.Width">
      <summary>获取或设置 <see cref="T:System.Drawing.Bitmap" /> 对象的像素宽度。 这也可以看作是一个扫描行中的像素数。</summary>
      <returns>
        <see cref="T:System.Drawing.Bitmap" /> 对象的像素宽度。</returns>
    </member>
    <member name="T:System.Drawing.Imaging.ColorAdjustType">
      <summary>指定哪些 GDI+ 对象使用颜色调整信息。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Any">
      <summary>指定的类型的数目。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Bitmap">
      <summary>
        <see cref="T:System.Drawing.Bitmap" /> 对象的颜色调整信息。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Brush">
      <summary>
        <see cref="T:System.Drawing.Brush" /> 对象的颜色调整信息。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Count">
      <summary>指定的类型的数目。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Default">
      <summary>自身没有颜色调整信息的所有 GDI+ 对象所使用的颜色调整信息。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Pen">
      <summary>
        <see cref="T:System.Drawing.Pen" /> 对象的颜色调整信息。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Text">
      <summary>文本的颜色调整信息。</summary>
    </member>
    <member name="T:System.Drawing.Imaging.ColorChannelFlag">
      <summary>指定 CMYK（青色、洋红色、黄色、黑色）颜色空间中的个别通道。 此枚举由 <see cref="Overload:System.Drawing.Imaging.ImageAttributes.SetOutputChannel" /> 方法使用。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorChannelFlag.ColorChannelC">
      <summary>青色通道。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorChannelFlag.ColorChannelK">
      <summary>黑色通道。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorChannelFlag.ColorChannelLast">
      <summary>应使用上次选择的通道。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorChannelFlag.ColorChannelM">
      <summary>洋红色通道。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorChannelFlag.ColorChannelY">
      <summary>黄色通道。</summary>
    </member>
    <member name="T:System.Drawing.Imaging.ColorMap">
      <summary>定义转换颜色的映射。 <see cref="T:System.Drawing.Imaging.ImageAttributes" /> 类的几种方法可使用颜色重新映射表来调整图像颜色，该表是 <see cref="T:System.Drawing.Imaging.ColorMap" /> 结构的数组。 不可继承。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ColorMap.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.Imaging.ColorMap" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMap.NewColor">
      <summary>获取或设置要转换至的新 <see cref="T:System.Drawing.Color" /> 结构。</summary>
      <returns>要转换至的新 <see cref="T:System.Drawing.Color" /> 结构。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMap.OldColor">
      <summary>获取或设置要转换的现有 <see cref="T:System.Drawing.Color" /> 结构。</summary>
      <returns>要转换的现有 <see cref="T:System.Drawing.Color" /> 结构。</returns>
    </member>
    <member name="T:System.Drawing.Imaging.ColorMapType">
      <summary>指定颜色映射的类型。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMapType.Brush">
      <summary>指定 <see cref="T:System.Drawing.Brush" /> 的颜色映射。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMapType.Default">
      <summary>默认的颜色映射。</summary>
    </member>
    <member name="T:System.Drawing.Imaging.ColorMatrix">
      <summary>定义包含 RGBAW 空间坐标的 5 x 5 矩阵。 <see cref="T:System.Drawing.Imaging.ImageAttributes" /> 类的若干方法通过使用颜色矩阵调整图像颜色。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ColorMatrix.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ColorMatrix.#ctor(System.Single[][])">
      <summary>使用指定矩阵 <paramref name="newColorMatrix" /> 中的元素初始化 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 类的新实例。</summary>
      <param name="newColorMatrix">新 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 的元素值。</param>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Item(System.Int32,System.Int32)">
      <summary>获取或设置 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 中位于指定行和列的元素。</summary>
      <param name="row">元素的行。</param>
      <param name="column">元素的列。</param>
      <returns>位于指定的行和列的元素。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix00">
      <summary>获取或设置此 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 第 0（零）行第 0 列的元素。</summary>
      <returns>此 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 第 0 行第 0 列的元素。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix01">
      <summary>获取或设置此 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 第 0（零）行第 1 列的元素。</summary>
      <returns>此 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 第 0 行第 1 列的元素。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix02">
      <summary>获取或设置此 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 第 0（零）行第 2 列的元素。</summary>
      <returns>此 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 第 0 行第 2 列的元素。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix03">
      <summary>获取或设置此 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 第 0（零）行第 3 列的元素。 表示 alpha 组件。</summary>
      <returns>此 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 第 0 行第 3 列的元素。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix04">
      <summary>获取或设置此 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 第 0（零）行第 4 列的元素。</summary>
      <returns>此 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 第 0 行第 4 列的元素。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix10">
      <summary>获取或设置此 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 第 1 行第 0（零）列的元素。</summary>
      <returns>此 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 第 1 行第 0 列的元素。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix11">
      <summary>获取或设置此 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 第 1 行第 1 列的元素。</summary>
      <returns>此 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 第 1 行第 1 列的元素。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix12">
      <summary>获取或设置此 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 第 1 行第 2 列的元素。</summary>
      <returns>此 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 第 1 行第 2 列的元素。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix13">
      <summary>获取或设置此 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 第 1 行第 3 列的元素。 表示 alpha 组件。</summary>
      <returns>此 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 第 1 行第 3 列的元素。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix14">
      <summary>获取或设置此 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 第 1 行第 4 列的元素。</summary>
      <returns>此 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 第 1 行第 4 列的元素。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix20">
      <summary>获取或设置此 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 第 2 行第 0（零）列的元素。</summary>
      <returns>此 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 第 2 行第 0 列的元素。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix21">
      <summary>获取或设置此 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 第 2 行第 1 列的元素。</summary>
      <returns>此 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 第 2 行第 1 列的元素。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix22">
      <summary>获取或设置此 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 第 2 行第 2 列的元素。</summary>
      <returns>此 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 第 2 行第 2 列的元素。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix23">
      <summary>获取或设置此 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 第 2 行第 3 列的元素。</summary>
      <returns>此 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 第 2 行第 3 列的元素。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix24">
      <summary>获取或设置此 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 第 2 行第 4 列的元素。</summary>
      <returns>此 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 第 2 行第 4 列的元素。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix30">
      <summary>获取或设置此 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 第 3 行第 0（零）列的元素。</summary>
      <returns>此 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 第 3 行第 0 列的元素。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix31">
      <summary>获取或设置此 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 第 3 行第 1 列的元素。</summary>
      <returns>此 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 第 3 行第 1 列的元素。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix32">
      <summary>获取或设置此 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 第 3 行第 2 列的元素。</summary>
      <returns>此 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 第 3 行第 2 列的元素。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix33">
      <summary>获取或设置此 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 第 3 行第 3 列的元素。 表示 alpha 组件。</summary>
      <returns>此 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 第 3 行第 3 列的元素。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix34">
      <summary>获取或设置此 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 第 3 行第 4 列的元素。</summary>
      <returns>此 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 第 3 行第 4 列的元素。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix40">
      <summary>获取或设置此 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 第 4 行第 0（零）列的元素。</summary>
      <returns>此 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 第 4 行第 0（零）列的元素。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix41">
      <summary>获取或设置此 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 第 4 行第 1 列的元素。</summary>
      <returns>此 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 第 4 行第 1 列的元素。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix42">
      <summary>获取或设置此 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 第 4 行第 2 列的元素。</summary>
      <returns>此 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 第 4 行第 2 列的元素。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix43">
      <summary>获取或设置此 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 第 4 行第 3 列的元素。 表示 alpha 组件。</summary>
      <returns>此 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 第 4 行第 3 列的元素。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix44">
      <summary>获取或设置此 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 第 4 行第 4 列的元素。</summary>
      <returns>此 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 第 4 行第 4 列的元素。</returns>
    </member>
    <member name="T:System.Drawing.Imaging.ColorMatrixFlag">
      <summary>指定将受 <see cref="T:System.Drawing.Imaging.ImageAttributes" /> 的颜色和灰度调整设置影响的图像和颜色的类型。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMatrixFlag.AltGrays">
      <summary>仅调整灰色底纹。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMatrixFlag.Default">
      <summary>指定所有的颜色值（包括灰色底纹）都由同样的颜色调整矩阵来调整。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMatrixFlag.SkipGrays">
      <summary>指定调整所有颜色，但不调整灰色底纹。 灰色底纹是指其红色、绿色和蓝色分量的值都相同的任何颜色。</summary>
    </member>
    <member name="T:System.Drawing.Imaging.ColorMode">
      <summary>指定颜色分量值的两种模式。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMode.Argb32Mode">
      <summary>提供的整数值为 32 位值。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMode.Argb64Mode">
      <summary>提供的整数值为 64 位值。</summary>
    </member>
    <member name="T:System.Drawing.Imaging.ColorPalette">
      <summary>定义组成调色板的颜色的数组。 这些颜色是 32 位 ARGB 颜色。 不可继承。</summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorPalette.Entries">
      <summary>获取 <see cref="T:System.Drawing.Color" /> 结构的数组。</summary>
      <returns>组成此 <see cref="T:System.Drawing.Color" /> 的 <see cref="T:System.Drawing.Imaging.ColorPalette" /> 结构的数组。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorPalette.Flags">
      <summary>获取一个指定如何解释颜色数组中的颜色信息的值。</summary>
      <returns>下面的标志值有效：  
 0x00000001 该数组中的颜色值包含 alpha 信息。  
 0x00000002 该数组中的颜色是灰度值。  
 0x00000004 该数组中的颜色是半色调值。</returns>
    </member>
    <member name="T:System.Drawing.Imaging.EmfPlusRecordType">
      <summary>指定可用于图元文件的读取和写入图形命令方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.BeginContainer">
      <summary>请参见 <see cref="M:System.Drawing.Graphics.BeginContainer" /> 方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.BeginContainerNoParams">
      <summary>请参见 <see cref="M:System.Drawing.Graphics.BeginContainer" /> 方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Clear">
      <summary>请参阅 <see cref="M:System.Drawing.Graphics.Clear(System.Drawing.Color)" />。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Comment">
      <summary>请参阅 <see cref="M:System.Drawing.Graphics.AddMetafileComment(System.Byte[])" />。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawArc">
      <summary>请参见 <see cref="Overload:System.Drawing.Graphics.DrawArc" /> 方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawBeziers">
      <summary>请参见 <see cref="Overload:System.Drawing.Graphics.DrawBeziers" /> 方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawClosedCurve">
      <summary>请参见 <see cref="Overload:System.Drawing.Graphics.DrawClosedCurve" /> 方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawCurve">
      <summary>请参见 <see cref="Overload:System.Drawing.Graphics.DrawCurve" /> 方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawDriverString">
      <summary>指定一个字符串、一个位置和格式信息。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawEllipse">
      <summary>请参见 <see cref="Overload:System.Drawing.Graphics.DrawEllipse" /> 方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawImage">
      <summary>请参见 <see cref="Overload:System.Drawing.Graphics.DrawImage" /> 方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawImagePoints">
      <summary>请参见 <see cref="Overload:System.Drawing.Graphics.DrawImage" /> 方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawLines">
      <summary>请参见 <see cref="Overload:System.Drawing.Graphics.DrawLines" /> 方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawPath">
      <summary>请参阅 <see cref="M:System.Drawing.Graphics.DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)" />。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawPie">
      <summary>请参见 <see cref="Overload:System.Drawing.Graphics.DrawPie" /> 方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawRects">
      <summary>请参见 <see cref="Overload:System.Drawing.Graphics.DrawRectangles" /> 方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawString">
      <summary>请参见 <see cref="Overload:System.Drawing.Graphics.DrawString" /> 方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfAbortPath">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfAlphaBlend">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfAngleArc">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfArcTo">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfBeginPath">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfBitBlt">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfChord">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCloseFigure">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfColorCorrectPalette">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfColorMatchToTargetW">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreateBrushIndirect">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreateColorSpace">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreateColorSpaceW">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreateDibPatternBrushPt">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreateMonoBrush">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreatePalette">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreatePen">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfDeleteColorSpace">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfDeleteObject">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfDrawEscape">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfEllipse">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfEndPath">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfEof">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExcludeClipRect">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtCreateFontIndirect">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtCreatePen">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtEscape">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtFloodFill">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtSelectClipRgn">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtTextOutA">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtTextOutW">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfFillPath">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfFillRgn">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfFlattenPath">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfForceUfiMapping">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfFrameRgn">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfGdiComment">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfGlsBoundedRecord">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfGlsRecord">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfGradientFill">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfHeader">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfIntersectClipRect">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfInvertRgn">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfLineTo">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfMaskBlt">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfMax">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfMin">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfModifyWorldTransform">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfMoveToEx">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfNamedEscpae">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfOffsetClipRgn">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPaintRgn">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPie">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPixelFormat">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPlgBlt">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPlusRecordBase">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyBezier">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyBezier16">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyBezierTo">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyBezierTo16">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyDraw">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyDraw16">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolygon">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolygon16">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyline">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyline16">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyLineTo">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolylineTo16">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyPolygon">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyPolygon16">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyPolyline">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyPolyline16">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyTextOutA">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyTextOutW">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfRealizePalette">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfRectangle">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfReserved069">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfReserved117">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfResizePalette">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfRestoreDC">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfRoundArc">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfRoundRect">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSaveDC">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfScaleViewportExtEx">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfScaleWindowExtEx">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSelectClipPath">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSelectObject">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSelectPalette">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetArcDirection">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetBkColor">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetBkMode">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetBrushOrgEx">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetColorAdjustment">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetColorSpace">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetDIBitsToDevice">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetIcmMode">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetIcmProfileA">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetIcmProfileW">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetLayout">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetLinkedUfis">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetMapMode">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetMapperFlags">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetMetaRgn">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetMiterLimit">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetPaletteEntries">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetPixelV">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetPolyFillMode">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetROP2">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetStretchBltMode">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetTextAlign">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetTextColor">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetTextJustification">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetViewportExtEx">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetViewportOrgEx">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetWindowExtEx">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetWindowOrgEx">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetWorldTransform">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSmallTextOut">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfStartDoc">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfStretchBlt">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfStretchDIBits">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfStrokeAndFillPath">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfStrokePath">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfTransparentBlt">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfWidenPath">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“增强格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EndContainer">
      <summary>请参阅 <see cref="M:System.Drawing.Graphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)" />。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EndOfFile">
      <summary>标识一条记录，它对图元文件的最后一条 EMF+ 记录进行标记。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillClosedCurve">
      <summary>请参见 <see cref="Overload:System.Drawing.Graphics.FillClosedCurve" /> 方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillEllipse">
      <summary>请参见 <see cref="Overload:System.Drawing.Graphics.FillEllipse" /> 方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillPath">
      <summary>请参阅 <see cref="M:System.Drawing.Graphics.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)" />。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillPie">
      <summary>请参见 <see cref="Overload:System.Drawing.Graphics.FillPie" /> 方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillPolygon">
      <summary>请参见 <see cref="Overload:System.Drawing.Graphics.FillPolygon" /> 方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillRects">
      <summary>请参见 <see cref="Overload:System.Drawing.Graphics.FillRectangles" /> 方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillRegion">
      <summary>请参阅 <see cref="M:System.Drawing.Graphics.FillRegion(System.Drawing.Brush,System.Drawing.Region)" />。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.GetDC">
      <summary>请参阅 <see cref="M:System.Drawing.Graphics.GetHdc" />。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Header">
      <summary>标识作为 EMF+ 标题的记录。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Invalid">
      <summary>表示无效的数据。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Max">
      <summary>此枚举的最大值。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Min">
      <summary>此枚举的最小值。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.MultiFormatEnd">
      <summary>标记多格式节的结尾。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.MultiFormatSection">
      <summary>标记多格式节。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.MultiFormatStart">
      <summary>标记多格式节的开头。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.MultiplyWorldTransform">
      <summary>请参见 <see cref="Overload:System.Drawing.Graphics.MultiplyTransform" /> 方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Object">
      <summary>标记一个对象。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.OffsetClip">
      <summary>请参见 <see cref="Overload:System.Drawing.Graphics.TranslateClip" /> 方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.ResetClip">
      <summary>请参阅 <see cref="M:System.Drawing.Graphics.ResetClip" />。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.ResetWorldTransform">
      <summary>请参阅 <see cref="M:System.Drawing.Graphics.ResetTransform" />。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Restore">
      <summary>请参阅 <see cref="M:System.Drawing.Graphics.Restore(System.Drawing.Drawing2D.GraphicsState)" />。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.RotateWorldTransform">
      <summary>请参见 <see cref="Overload:System.Drawing.Graphics.RotateTransform" /> 方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Save">
      <summary>请参阅 <see cref="M:System.Drawing.Graphics.Save" />。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.ScaleWorldTransform">
      <summary>请参见 <see cref="Overload:System.Drawing.Graphics.ScaleTransform" /> 方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetAntiAliasMode">
      <summary>请参阅 <see cref="P:System.Drawing.Graphics.SmoothingMode" />。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetClipPath">
      <summary>请参见 <see cref="Overload:System.Drawing.Graphics.SetClip" /> 方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetClipRect">
      <summary>请参见 <see cref="Overload:System.Drawing.Graphics.SetClip" /> 方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetClipRegion">
      <summary>请参见 <see cref="Overload:System.Drawing.Graphics.SetClip" /> 方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetCompositingMode">
      <summary>请参阅 <see cref="P:System.Drawing.Graphics.CompositingMode" />。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetCompositingQuality">
      <summary>请参阅 <see cref="P:System.Drawing.Graphics.CompositingQuality" />。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetInterpolationMode">
      <summary>请参阅 <see cref="P:System.Drawing.Graphics.InterpolationMode" />。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetPageTransform">
      <summary>请参见 <see cref="Overload:System.Drawing.Graphics.TransformPoints" /> 方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetPixelOffsetMode">
      <summary>请参阅 <see cref="P:System.Drawing.Graphics.PixelOffsetMode" />。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetRenderingOrigin">
      <summary>请参阅 <see cref="P:System.Drawing.Graphics.RenderingOrigin" />。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetTextContrast">
      <summary>请参阅 <see cref="P:System.Drawing.Graphics.TextContrast" />。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetTextRenderingHint">
      <summary>请参阅 <see cref="P:System.Drawing.Graphics.TextRenderingHint" />。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetWorldTransform">
      <summary>请参见 <see cref="Overload:System.Drawing.Graphics.TransformPoints" /> 方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Total">
      <summary>内部使用。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.TranslateWorldTransform">
      <summary>请参见 <see cref="Overload:System.Drawing.Graphics.TransformPoints" /> 方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfAnimatePalette">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfArc">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfBitBlt">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfChord">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfCreateBrushIndirect">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfCreateFontIndirect">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfCreatePalette">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfCreatePatternBrush">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfCreatePenIndirect">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfCreateRegion">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfDeleteObject">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfDibBitBlt">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfDibCreatePatternBrush">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfDibStretchBlt">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfEllipse">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfEscape">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfExcludeClipRect">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfExtFloodFill">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfExtTextOut">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfFillRegion">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfFloodFill">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfFrameRegion">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfIntersectClipRect">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfInvertRegion">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfLineTo">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfMoveTo">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfOffsetCilpRgn">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfOffsetViewportOrg">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfOffsetWindowOrg">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfPaintRegion">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfPatBlt">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfPie">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfPolygon">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfPolyline">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfPolyPolygon">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfRealizePalette">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfRecordBase">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfRectangle">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfResizePalette">
      <summary>根据指定的值增大或减小逻辑调色板的大小。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfRestoreDC">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfRoundRect">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSaveDC">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfScaleViewportExt">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfScaleWindowExt">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSelectClipRegion">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSelectObject">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSelectPalette">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetBkColor">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetBkMode">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetDibToDev">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetLayout">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetMapMode">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetMapperFlags">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetPalEntries">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetPixel">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetPolyFillMode">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetRelAbs">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetROP2">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetStretchBltMode">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetTextAlign">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetTextCharExtra">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetTextColor">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetTextJustification">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetViewportExt">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetViewportOrg">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetWindowExt">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetWindowOrg">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfStretchBlt">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfStretchDib">
      <summary>将 DIB 内的像素矩形的颜色数据复制到指定的目标矩形。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfTextOut">
      <summary>请参阅 MSDN Library 的 GDI 一节中的“Windows 格式图元文件”。</summary>
    </member>
    <member name="T:System.Drawing.Imaging.EmfType">
      <summary>指定放置在增强图元文件 (EMF) 中的记录的性质。 此枚举由 <see cref="T:System.Drawing.Imaging.Metafile" /> 类中的几个构造函数使用。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfType.EmfOnly">
      <summary>指定图元文件中的所有记录都是 EMF 记录，它们可通过 GDI 或 GDI+ 来显示。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfType.EmfPlusDual">
      <summary>指定图元文件中所有的 EMF+ 记录都与一个替换的 EMF 记录相关联。 <see cref="F:System.Drawing.Imaging.EmfType.EmfPlusDual" /> 类型的图元文件可通过 GDI 或 GDI+ 来显示。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfType.EmfPlusOnly">
      <summary>指定图元文件中的所有记录都是 EMF+ 记录，它们可通过 GDI+ 显示而不能通过 GDI 显示。</summary>
    </member>
    <member name="T:System.Drawing.Imaging.Encoder">
      <summary>
        <see cref="T:System.Drawing.Imaging.Encoder" /> 对象封装一个全局唯一标识符 (GUID)，它标识图像编码器参数的类别。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.Encoder.#ctor(System.Guid)">
      <summary>根据指定的全局唯一标识符 (GUID) 初始化 <see cref="T:System.Drawing.Imaging.Encoder" /> 类的新实例。 此 GUID 指定图像编码器参数类别。</summary>
      <param name="guid">标识图像编码器参数类别的全局唯一标识符。</param>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.ChrominanceTable">
      <summary>用色度表参数类别的全局唯一标识符初始化的 <see cref="T:System.Drawing.Imaging.Encoder" /> 对象。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.ColorDepth">
      <summary>用颜色深度参数类别的全局唯一标识符初始化的 <see cref="T:System.Drawing.Imaging.Encoder" /> 对象。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.Compression">
      <summary>用压缩参数类别的全局唯一标识符初始化的 <see cref="T:System.Drawing.Imaging.Encoder" /> 对象。</summary>
    </member>
    <member name="P:System.Drawing.Imaging.Encoder.Guid">
      <summary>获取标识图像编码器参数类别的全局唯一标识符 (GUID)。</summary>
      <returns>标识图像编码器参数类别的 GUID。</returns>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.LuminanceTable">
      <summary>表示用亮度表参数类别的全局唯一标识符初始化的 <see cref="T:System.Drawing.Imaging.Encoder" /> 对象。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.Quality">
      <summary>获取使用质量参数类别的全局唯一标识符初始化的 <see cref="T:System.Drawing.Imaging.Encoder" /> 对象。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.RenderMethod">
      <summary>表示用呈现方法参数类别的全局唯一标识符初始化的 <see cref="T:System.Drawing.Imaging.Encoder" /> 对象。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.SaveFlag">
      <summary>表示用保存标志参数类别的全局唯一标识符初始化的 <see cref="T:System.Drawing.Imaging.Encoder" /> 对象。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.ScanMethod">
      <summary>表示用扫描方法参数类别的全局唯一标识符初始化的 <see cref="T:System.Drawing.Imaging.Encoder" /> 对象。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.Transformation">
      <summary>表示用转换参数类别的全局唯一标识符初始化的 <see cref="T:System.Drawing.Imaging.Encoder" /> 对象。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.Version">
      <summary>表示用版本参数类别的全局唯一标识符初始化的 <see cref="T:System.Drawing.Imaging.Encoder" /> 对象。</summary>
    </member>
    <member name="T:System.Drawing.Imaging.EncoderParameter">
      <summary>用于向图像编码器传递值或值数组。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte)">
      <summary>用指定的 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象和一个无符号 8 位整数初始化 <see cref="T:System.Drawing.Imaging.Encoder" /> 类的新实例。 将 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 属性设置为 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" />，并将 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 属性设置为 1。</summary>
      <param name="encoder">
        <see cref="T:System.Drawing.Imaging.Encoder" /> 对象，用于封装参数类别的全局唯一标识符。</param>
      <param name="value">8 位无符号整数，指定存储在 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象中的值。</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte,System.Boolean)">
      <summary>用指定的 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象和一个 8 位值初始化 <see cref="T:System.Drawing.Imaging.Encoder" /> 类的新实例。 将 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 属性设置为 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeUndefined" /> 或 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" />，将 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 属性设置为 1。</summary>
      <param name="encoder">
        <see cref="T:System.Drawing.Imaging.Encoder" /> 对象，用于封装参数类别的全局唯一标识符。</param>
      <param name="value">一个字节，用于指定 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象中存储的值。</param>
      <param name="undefined">如果为 <see langword="true" />，<see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 属性将设置为 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeUndefined" />；否则，<see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 属性设置为 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" />。</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte[])">
      <summary>用指定的 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象和一个无符号的 8 位整数数组初始化 <see cref="T:System.Drawing.Imaging.Encoder" /> 类的新实例。 将 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 属性设置为 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" />，将 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 属性设置为数组中的元素数。</summary>
      <param name="encoder">
        <see cref="T:System.Drawing.Imaging.Encoder" /> 对象，用于封装参数类别的全局唯一标识符。</param>
      <param name="value">一个无符号的 8 位整数数组，用于指定存储在 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象中的值。</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte[],System.Boolean)">
      <summary>用指定的 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象和一个字节数组初始化 <see cref="T:System.Drawing.Imaging.Encoder" /> 类的新实例。 将 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 属性设置为 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeUndefined" /> 或 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" />，将 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 属性设置为数组中的元素数。</summary>
      <param name="encoder">
        <see cref="T:System.Drawing.Imaging.Encoder" /> 对象，用于封装参数类别的全局唯一标识符。</param>
      <param name="value">一个字节数组，用于指定 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象中存储的值。</param>
      <param name="undefined">如果为 <see langword="true" />，<see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 属性将设置为 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeUndefined" />；否则，<see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 属性设置为 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" />。</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int16)">
      <summary>用指定的 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象和一个 16 位整数初始化 <see cref="T:System.Drawing.Imaging.Encoder" /> 类的新实例。 将 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 属性设置为 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeShort" />，并将 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 属性设置为 1。</summary>
      <param name="encoder">
        <see cref="T:System.Drawing.Imaging.Encoder" /> 对象，用于封装参数类别的全局唯一标识符。</param>
      <param name="value">16 位整数，指定存储在 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象中的值。 必须是非负的。</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int16[])">
      <summary>用指定的 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象和一个 16 位整数数组初始化 <see cref="T:System.Drawing.Imaging.Encoder" /> 类的新实例。 将 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 属性设置为 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeShort" />，将 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 属性设置为数组中的元素数。</summary>
      <param name="encoder">
        <see cref="T:System.Drawing.Imaging.Encoder" /> 对象，用于封装参数类别的全局唯一标识符。</param>
      <param name="value">一个 16 位整数数组，用于指定存储在 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象中的值。 数组中的整数必须是非负的。</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Drawing.Imaging.EncoderParameterValueType,System.IntPtr)">
      <summary>用指定的 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象和三个整数初始化 <see cref="T:System.Drawing.Imaging.Encoder" /> 类的新实例，这三个整数分别指定值的数目、值的数据类型和指向存储在 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象中的值的指针。</summary>
      <param name="encoder">
        <see cref="T:System.Drawing.Imaging.Encoder" /> 对象，用于封装参数类别的全局唯一标识符。</param>
      <param name="numberValues">一个整数，它指定 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象中存储的值的数目。 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 属性被设置为该值。</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.EncoderParameterValueType" /> 枚举的成员，它指定存储在此 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象中的值的数据类型。 <see cref="T:System.Type" /> 和 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 属性设置为该值。</param>
      <param name="value">指向由 <paramref name="Type" /> 参数指定的类型的值数组的指针。</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32)">
      <summary>用指定的 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象和一对 32 位整数初始化 <see cref="T:System.Drawing.Imaging.Encoder" /> 类的新实例。 此整数对表示一个分数，第一个整数为分子，第二个整数为分母。 将 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 属性设置为 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRational" />，并将 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 属性设置为 1。</summary>
      <param name="encoder">
        <see cref="T:System.Drawing.Imaging.Encoder" /> 对象，用于封装参数类别的全局唯一标识符。</param>
      <param name="numerator">32 位整数，表示分数的分子。 必须是非负的。</param>
      <param name="denominator">一个 32 位整数，表示分数的分母。 必须是非负的。</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32)">
      <summary>用指定的 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象和三个整数初始化 <see cref="T:System.Drawing.Imaging.Encoder" /> 类的新实例，这三个整数分别指定值的数目、值的数据类型和指向存储在 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象中的值的指针。</summary>
      <param name="encoder">
        <see cref="T:System.Drawing.Imaging.Encoder" /> 对象，用于封装参数类别的全局唯一标识符。</param>
      <param name="NumberOfValues">一个整数，它指定 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象中存储的值的数目。 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 属性被设置为该值。</param>
      <param name="Type">
        <see cref="T:System.Drawing.Imaging.EncoderParameterValueType" /> 枚举的成员，它指定存储在此 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象中的值的数据类型。 <see cref="T:System.Type" /> 和 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 属性设置为该值。</param>
      <param name="Value">指向由 <paramref name="Type" /> 参数指定的类型的值数组的指针。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Drawing.Imaging.EncoderParameterValueType" /> 不是有效的类型。</exception>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>用指定的 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象和四个 32 位整数初始化 <see cref="T:System.Drawing.Imaging.Encoder" /> 类的新实例。 这四个整数表示一个分数范围。 前两个整数表示该范围中最小的分数，而后两个整数表示该范围中最大的分数。 将 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 属性设置为 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRationalRange" />，并将 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 属性设置为 1。</summary>
      <param name="encoder">
        <see cref="T:System.Drawing.Imaging.Encoder" /> 对象，用于封装参数类别的全局唯一标识符。</param>
      <param name="numerator1">一个 32 整数，它表示该范围中最小分数的分子。 必须是非负的。</param>
      <param name="demoninator1">一个 32 整数，它表示该范围中最小分数的分母。 必须是非负的。</param>
      <param name="numerator2">一个 32 整数，它表示该范围中最小分数的分母。 必须是非负的。</param>
      <param name="demoninator2">一个 32 位整数，它表示该范围中最大分数的分子。 必须是非负的。</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[])">
      <summary>用指定的 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象和两个 32 位整数数组初始化 <see cref="T:System.Drawing.Imaging.Encoder" /> 类的新实例。 这两个数组表示一个分数数组。 将 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 属性设置为 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRational" />，并将 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 属性设置为 <paramref name="numerator" /> 数组中的元素数，它必须与 <paramref name="denominator" /> 数组中的元素数相同。</summary>
      <param name="encoder">
        <see cref="T:System.Drawing.Imaging.Encoder" /> 对象，用于封装参数类别的全局唯一标识符。</param>
      <param name="numerator">一个 32 位整数数组，它指定分数的分子。 数组中的整数必须是非负的。</param>
      <param name="denominator">一个 32 位整数数组，它指定分数的分母。 数组中的整数必须是非负的。 给定索引的分母与同一索引的分子成对出现。</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
      <summary>用指定的 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象和四个 32 位整数数组初始化 <see cref="T:System.Drawing.Imaging.Encoder" /> 类的新实例。 这四个数组表示一个数组有理范围。 有理范围是指从最小分数值到最大分数值的所有分数的集。 将 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 属性设置为 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRationalRange" />，将 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 属性设置为 <paramref name="numerator1" /> 数组中的元素数，该元素数必须与其他三个数组中的元素数相同。</summary>
      <param name="encoder">
        <see cref="T:System.Drawing.Imaging.Encoder" /> 对象，用于封装参数类别的全局唯一标识符。</param>
      <param name="numerator1">32 位整数数组，它指定该范围中最小值的分子。 数组中的整数必须是非负的。</param>
      <param name="denominator1">32 位整数数组，它指定该范围中最小值的分母。 数组中的整数必须是非负的。</param>
      <param name="numerator2">32 位整数数组，它指定该范围中最大值的分子。 数组中的整数必须是非负的。</param>
      <param name="denominator2">32 位整数数组，它指定该范围中最大值的分母。 数组中的整数必须是非负的。</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64)">
      <summary>用指定的 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象和一个 64 位整数初始化 <see cref="T:System.Drawing.Imaging.Encoder" /> 类的新实例。 将 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 属性设置为 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLong" />（32 位），并将 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 属性设置为 1。</summary>
      <param name="encoder">
        <see cref="T:System.Drawing.Imaging.Encoder" /> 对象，用于封装参数类别的全局唯一标识符。</param>
      <param name="value">64 位整数，指定存储在 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象中的值。 必须是非负的。 该参数在存储到 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象中之前被转换为 32 位整数。</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64,System.Int64)">
      <summary>使用指定的 <see cref="T:System.Drawing.Imaging.Encoder" /> 对象和 64 位整数对初始化 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 类的新实例。 这对整数代表一个整数范围，第一个整数是该范围中最小的数，第二个整数是该范围中最大的数。 将 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 属性设置为 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLongRange" />，并将 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 属性设置为 1。</summary>
      <param name="encoder">
        <see cref="T:System.Drawing.Imaging.Encoder" /> 对象，用于封装参数类别的全局唯一标识符。</param>
      <param name="rangebegin">一个 64 位整数，它表示一个整数范围中最小的数。 必须是非负的。 该参数在存储到 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象中之前被转换为 32 位整数。</param>
      <param name="rangeend">一个 64 位整数，它表示一个整数范围中最大的数。 必须是非负的。 该参数在存储到 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象中之前被转换为 32 位整数。</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64[])">
      <summary>用指定的 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象和一个 64 位整数数组初始化 <see cref="T:System.Drawing.Imaging.Encoder" /> 类的新实例。 将 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 属性设置为 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLong" />（32 位），将 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 属性设置为数组中的元素数。</summary>
      <param name="encoder">
        <see cref="T:System.Drawing.Imaging.Encoder" /> 对象，用于封装参数类别的全局唯一标识符。</param>
      <param name="value">一个 64 位整数数组，用于指定存储在 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象中的值。 数组中的整数必须是非负的。 64 位整数在存储到 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象中之前被转换为 32 位整数。</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64[],System.Int64[])">
      <summary>用指定的 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象和两个 64 位整数数组初始化 <see cref="T:System.Drawing.Imaging.Encoder" /> 类的新实例。 这两个数组表示一组整数范围。 将 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 属性设置为 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLongRange" />，并将 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 属性设置为 <paramref name="rangebegin" /> 数组中的元素数，它必须与 <paramref name="rangeend" /> 数组中的元素数相同。</summary>
      <param name="encoder">
        <see cref="T:System.Drawing.Imaging.Encoder" /> 对象，用于封装参数类别的全局唯一标识符。</param>
      <param name="rangebegin">一个 64 位整数数组，它指定该整数范围中的最小值。 数组中的整数必须是非负的。 64 位整数在存储到 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象中之前被转换为 32 位整数。</param>
      <param name="rangeend">一个 64 位整数数组，它指定该整数范围中的最大值。 数组中的整数必须是非负的。 64 位整数在存储到 <see cref="T:System.Drawing.Imaging.EncoderParameters" /> 对象中之前被转换为 32 位整数。 给定索引的最大值与同一索引的最小值成对出现。</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.String)">
      <summary>用指定的 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象和字符串初始化 <see cref="T:System.Drawing.Imaging.Encoder" /> 类的新实例。 该字符串在存储到 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象中之前，被转换成一个用 NULL 结束符终止的 ASCII 字符串。 将 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 属性设置为 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeAscii" />，并将 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 属性设置为此 ASCII 字符串的长度，该长度包括 NULL 结束符。</summary>
      <param name="encoder">
        <see cref="T:System.Drawing.Imaging.Encoder" /> 对象，用于封装参数类别的全局唯一标识符。</param>
      <param name="value">一个 <see cref="T:System.String" />，它指定 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象中存储的值。</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.Dispose">
      <summary>释放由此 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象使用的所有资源。</summary>
    </member>
    <member name="P:System.Drawing.Imaging.EncoderParameter.Encoder">
      <summary>获取或设置与此 <see cref="T:System.Drawing.Imaging.Encoder" /> 对象关联的 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象。 此 <see cref="T:System.Drawing.Imaging.Encoder" /> 对象封装全局唯一标识符 (GUID)，该标识符指定存储在此 <see cref="F:System.Drawing.Imaging.Encoder.Quality" /> 对象中的参数的类别，例如 <see cref="F:System.Drawing.Imaging.Encoder.ColorDepth" />、<see cref="F:System.Drawing.Imaging.Encoder.Compression" /> 或 <see cref="T:System.Drawing.Imaging.EncoderParameter" />。</summary>
      <returns>封装 GUID 的 <see cref="T:System.Drawing.Imaging.Encoder" /> 对象，该 GUID 指定存储在此 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象中的参数的类别。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.Finalize">
      <summary>允许 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象在垃圾回收操作回收 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象之前尝试释放资源并执行其他清理操作。</summary>
    </member>
    <member name="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues">
      <summary>获取存储在此 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象中的值数组的元素数。</summary>
      <returns>指示存储在此 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象中的值数组的元素数的整数。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.EncoderParameter.Type">
      <summary>获取存储在此 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象中的值的数据类型。</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.EncoderParameterValueType" /> 枚举的成员，指示存储在此 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象中的值的数据类型。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.EncoderParameter.ValueType">
      <summary>获取存储在此 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象中的值的数据类型。</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.EncoderParameterValueType" /> 枚举的成员，指示存储在此 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象中的值的数据类型。</returns>
    </member>
    <member name="T:System.Drawing.Imaging.EncoderParameters">
      <summary>封装 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象的数组。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameters.#ctor">
      <summary>初始化可包含一个 <see cref="T:System.Drawing.Imaging.EncoderParameters" /> 对象的 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameters.#ctor(System.Int32)">
      <summary>初始化可包含指定数量的 <see cref="T:System.Drawing.Imaging.EncoderParameters" /> 对象的 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 类的新实例。</summary>
      <param name="count">一个整数，用以指定 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象可包含的 <see cref="T:System.Drawing.Imaging.EncoderParameters" /> 对象的数目。</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameters.Dispose">
      <summary>释放由此 <see cref="T:System.Drawing.Imaging.EncoderParameters" /> 对象使用的所有资源。</summary>
    </member>
    <member name="P:System.Drawing.Imaging.EncoderParameters.Param">
      <summary>获取或设置 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象的数组。</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象的数组。</returns>
    </member>
    <member name="T:System.Drawing.Imaging.EncoderParameterValueType">
      <summary>用于指定图像的 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 或 <see cref="Overload:System.Drawing.Image.Save" /> 方法所使用的 <see cref="Overload:System.Drawing.Image.SaveAdd" /> 的数据类型。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeAscii">
      <summary>指定：值的数组是一个以 null 终止的 ASCII 字符串。 请注意，<see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象的 <see langword="NumberOfValues" /> 数据成员指示包括 NULL 结束符在内的字符串长度。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte">
      <summary>指定数组中的每个值都是 8 位无符号整数。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLong">
      <summary>指定数组中的每个值都是 32 位无符号整数。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLongRange">
      <summary>指定数组中的每一个值都是一对 32 位无符号整数。 每一对都表示一个数字区域。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRational">
      <summary>指定数组中的每一个值都是一对 32 位无符号整数。 每一对都表示一个分数，第一个整数是分子，第二个整数是分母。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRationalRange">
      <summary>指定数组中的每一个值都是一组四个 32 位无符号整数。 前两个整数表示一个分数，后两个整数表示第二个分数。 这两个分数表示一个有理数区域。 第一个分数是该区域中最小的有理数，第二个分数是该区域中最大的有理数。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeShort">
      <summary>指定数组中的每个值都是 16 位无符号整数。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeUndefined">
      <summary>指定值的数组是没有定义数据类型的字节的数组。</summary>
    </member>
    <member name="T:System.Drawing.Imaging.EncoderValue">
      <summary>用于指定在使用 <see cref="M:System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)" /> 或 <see cref="M:System.Drawing.Image.SaveAdd(System.Drawing.Imaging.EncoderParameters)" /> 方法时传递给 JPEG 或 TIFF 图像编码器的参数值。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.ColorTypeCMYK">
      <summary>在 GDI+ 1.0 版中不使用。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.ColorTypeYCCK">
      <summary>在 GDI+ 1.0 版中不使用。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.CompressionCCITT3">
      <summary>指定 CCITT3 压缩方案。 可以作为属于压缩类别的参数传递到 TIFF 编码器。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.CompressionCCITT4">
      <summary>指定 CCITT4 压缩方案。 可以作为属于压缩类别的参数传递到 TIFF 编码器。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.CompressionLZW">
      <summary>指定 LZW 压缩方案。 可以作为属于压缩类别的参数传递到 TIFF 编码器。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.CompressionNone">
      <summary>不指定压缩。 可以作为属于压缩类别的参数传递到 TIFF 编码器。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.CompressionRle">
      <summary>指定 RLE 压缩方案。 可以作为属于压缩类别的参数传递到 TIFF 编码器。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.Flush">
      <summary>指定应关闭一个多帧文件或流。 可以作为属于保存标志类别的参数传递到 TIFF 编码器。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.FrameDimensionPage">
      <summary>指定要将一帧添加到图像的页面维度。 可以作为属于保存标志类别的参数传递到 TIFF 编码器。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.FrameDimensionResolution">
      <summary>在 GDI+ 1.0 版中不使用。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.FrameDimensionTime">
      <summary>在 GDI+ 1.0 版中不使用。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.LastFrame">
      <summary>指定多帧图像中的最后一帧。 可以作为属于保存标志类别的参数传递到 TIFF 编码器。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.MultiFrame">
      <summary>指定图像有多于 1 帧（页面）。 可以作为属于保存标志类别的参数传递到 TIFF 编码器。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.RenderNonProgressive">
      <summary>在 GDI+ 1.0 版中不使用。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.RenderProgressive">
      <summary>在 GDI+ 1.0 版中不使用。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.ScanMethodInterlaced">
      <summary>在 GDI+ 1.0 版中不使用。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.ScanMethodNonInterlaced">
      <summary>在 GDI+ 1.0 版中不使用。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.TransformFlipHorizontal">
      <summary>指定图像将要水平翻转（绕垂直轴）。 可以作为属于转换类别的参数传递到 JPEG 编码器。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.TransformFlipVertical">
      <summary>指定图像将要垂直翻转（绕水平轴）。 可以作为属于转换类别的参数传递到 JPEG 编码器。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.TransformRotate180">
      <summary>指定图像将围绕其中心旋转 180 度。 可以作为属于转换类别的参数传递到 JPEG 编码器。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.TransformRotate270">
      <summary>指定图像将围绕其中心沿顺时针方向旋转 270 度。 可以作为属于转换类别的参数传递到 JPEG 编码器。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.TransformRotate90">
      <summary>指定图像将围绕其中心沿顺时针方向旋转 90 度。 可以作为属于转换类别的参数传递到 JPEG 编码器。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.VersionGif87">
      <summary>在 GDI+ 1.0 版中不使用。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.VersionGif89">
      <summary>在 GDI+ 1.0 版中不使用。</summary>
    </member>
    <member name="T:System.Drawing.Imaging.FrameDimension">
      <summary>提供获取图像的框架维度的属性。 不可继承。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.FrameDimension.#ctor(System.Guid)">
      <summary>使用指定的 <see langword="Guid" /> 结构初始化 <see cref="T:System.Drawing.Imaging.FrameDimension" /> 类的新实例。</summary>
      <param name="guid">一个 <see langword="Guid" /> 结构，其中包含此 <see cref="T:System.Drawing.Imaging.FrameDimension" /> 对象的 GUID。</param>
    </member>
    <member name="M:System.Drawing.Imaging.FrameDimension.Equals(System.Object)">
      <summary>返回一个值，该值指示指定的对象是否为等效于此 <see cref="T:System.Drawing.Imaging.FrameDimension" /> 对象的 <see cref="T:System.Drawing.Imaging.FrameDimension" />。</summary>
      <param name="o">要测试的对象。</param>
      <returns>如果 <paramref name="o" /> 与此 <see cref="T:System.Drawing.Imaging.FrameDimension" /> 对象等效的 <see cref="T:System.Drawing.Imaging.FrameDimension" />，则返回 <see langword="true" />；否则，返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.FrameDimension.GetHashCode">
      <summary>返回此 <see cref="T:System.Drawing.Imaging.FrameDimension" /> 对象的哈希代码。</summary>
      <returns>此 <see cref="T:System.Drawing.Imaging.FrameDimension" /> 对象的哈希代码。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.FrameDimension.Guid">
      <summary>获取表示此 <see cref="T:System.Drawing.Imaging.FrameDimension" /> 对象的全局唯一标识符 (GUID)。</summary>
      <returns>一个 <see langword="Guid" /> 结构，其中包含表示此 <see cref="T:System.Drawing.Imaging.FrameDimension" /> 对象的 GUID。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.FrameDimension.Page">
      <summary>获取页面维度。</summary>
      <returns>页面维度。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.FrameDimension.Resolution">
      <summary>获取分辨率维度。</summary>
      <returns>分辨率维度。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.FrameDimension.Time">
      <summary>获取时间维度。</summary>
      <returns>时间维度。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.FrameDimension.ToString">
      <summary>将此 <see cref="T:System.Drawing.Imaging.FrameDimension" /> 对象转换为可读的字符串。</summary>
      <returns>表示此 <see cref="T:System.Drawing.Imaging.FrameDimension" /> 对象的字符串。</returns>
    </member>
    <member name="T:System.Drawing.Imaging.ImageAttributes">
      <summary>包含有关在呈现时如何操作位图和图元文件颜色的信息。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.Imaging.ImageAttributes" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearBrushRemapTable">
      <summary>清除该 <see cref="T:System.Drawing.Imaging.ImageAttributes" /> 对象的画笔颜色重新映射表。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearColorKey">
      <summary>为默认类别清除颜色键（透明范围）。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearColorKey(System.Drawing.Imaging.ColorAdjustType)">
      <summary>为指定类别清除颜色键（透明范围）。</summary>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 的一个元素，指定将清除颜色键的类别。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix">
      <summary>为默认类别清除颜色调整矩阵。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix(System.Drawing.Imaging.ColorAdjustType)">
      <summary>清除指定类别的颜色调整矩阵。</summary>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 的一个元素，指定将清除颜色调整矩阵的类别。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearGamma">
      <summary>为默认类别禁用灰度校正。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearGamma(System.Drawing.Imaging.ColorAdjustType)">
      <summary>为指定类别禁用灰度校正。</summary>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 的一个元素，指定将禁用灰度校正的类别。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearNoOp">
      <summary>清除默认类别的 <see langword="NoOp" /> 设置。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearNoOp(System.Drawing.Imaging.ColorAdjustType)">
      <summary>清除指定类别的 <see langword="NoOp" /> 设置。</summary>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 的一个元素，指定将清除 <see langword="NoOp" /> 设置的类别。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel">
      <summary>为默认类别清除 CMYK（青色-洋红色-黄色-黑色）输出通道设置。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel(System.Drawing.Imaging.ColorAdjustType)">
      <summary>为指定类别清除（青色-洋红色-黄色-黑色）输出通道设置。</summary>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 的一个元素，指定将清除输出通道设置的类别。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile">
      <summary>为默认类别清除输出通道颜色配置文件设置。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile(System.Drawing.Imaging.ColorAdjustType)">
      <summary>为指定类别清除输出通道颜色配置文件设置。</summary>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 的一个元素，指定将清除输出通道配置文件设置的类别。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearRemapTable">
      <summary>为默认类别清除颜色重新映射表。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearRemapTable(System.Drawing.Imaging.ColorAdjustType)">
      <summary>为指定类别清除颜色重新映射表。</summary>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 的一个元素，指定将清除重新映射表的类别。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearThreshold">
      <summary>为默认类别清除阈值。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearThreshold(System.Drawing.Imaging.ColorAdjustType)">
      <summary>为指定类别清除阈值。</summary>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 的一个元素，指定将清除阈值的类别。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.Clone">
      <summary>创建此 <see cref="T:System.Drawing.Imaging.ImageAttributes" /> 对象的一个精确副本。</summary>
      <returns>此类创建的 <see cref="T:System.Drawing.Imaging.ImageAttributes" /> 对象，作为一个对象来转换。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.Dispose">
      <summary>释放由此 <see cref="T:System.Drawing.Imaging.ImageAttributes" /> 对象使用的所有资源。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.Finalize">
      <summary>在垃圾回收将某一对象回收前允许该对象尝试释放资源并执行其他清理操作。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette(System.Drawing.Imaging.ColorPalette,System.Drawing.Imaging.ColorAdjustType)">
      <summary>根据指定类别的调整设置，调整调色板中的颜色。</summary>
      <param name="palette">
        <see cref="T:System.Drawing.Imaging.ColorPalette" />，在输入时包含要调整的调色板，在输出时包含已调整的调色板。</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 的一个元素，指定其调整设置将应用于调色板的类别。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable(System.Drawing.Imaging.ColorMap[])">
      <summary>为画笔类别设置颜色重新映射表。</summary>
      <param name="map">一个 <see cref="T:System.Drawing.Imaging.ColorMap" /> 对象数组。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorKey(System.Drawing.Color,System.Drawing.Color)">
      <summary>为默认类别设置颜色键。</summary>
      <param name="colorLow">低颜色键值。</param>
      <param name="colorHigh">高颜色键值。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorKey(System.Drawing.Color,System.Drawing.Color,System.Drawing.Imaging.ColorAdjustType)">
      <summary>为指定类别设置颜色键（透明范围）。</summary>
      <param name="colorLow">低颜色键值。</param>
      <param name="colorHigh">高颜色键值。</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 的一个元素，指定将设置颜色键的类别。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix)">
      <summary>为默认类别设置颜色调整矩阵和灰度调整矩阵。</summary>
      <param name="newColorMatrix">颜色调整矩阵。</param>
      <param name="grayMatrix">灰度调整矩阵。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)">
      <summary>为默认类别设置颜色调整矩阵和灰度调整矩阵。</summary>
      <param name="newColorMatrix">颜色调整矩阵。</param>
      <param name="grayMatrix">灰度调整矩阵。</param>
      <param name="flags">
        <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> 的元素，它指定将受颜色调整矩阵和灰度调整矩阵影响的图像和颜色的类型。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)">
      <summary>为指定类别设置颜色调整矩阵和灰度调整矩阵。</summary>
      <param name="newColorMatrix">颜色调整矩阵。</param>
      <param name="grayMatrix">灰度调整矩阵。</param>
      <param name="mode">
        <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> 的元素，它指定将受颜色调整矩阵和灰度调整矩阵影响的图像和颜色的类型。</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 的一个元素，指定将设置颜色调整矩阵和灰度调整矩阵的类别。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix)">
      <summary>为默认类别设置颜色调整矩阵。</summary>
      <param name="newColorMatrix">颜色调整矩阵。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)">
      <summary>为默认类别设置颜色调整矩阵。</summary>
      <param name="newColorMatrix">颜色调整矩阵。</param>
      <param name="flags">
        <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> 的元素，它指定将受颜色调整矩阵影响的图像和颜色的类型。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)">
      <summary>为指定类别设置颜色调整矩阵。</summary>
      <param name="newColorMatrix">颜色调整矩阵。</param>
      <param name="mode">
        <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> 的元素，它指定将受颜色调整矩阵影响的图像和颜色的类型。</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 的一个元素，指定将设置颜色调整矩阵的类别。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetGamma(System.Single)">
      <summary>为默认类别设置伽玛值。</summary>
      <param name="gamma">灰度校正值。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetGamma(System.Single,System.Drawing.Imaging.ColorAdjustType)">
      <summary>为指定类别设置伽玛值。</summary>
      <param name="gamma">灰度校正值。</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 枚举的一个元素，指定将设置伽玛值的类别。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetNoOp">
      <summary>为默认类别关闭颜色调整。 可以调用 <see cref="Overload:System.Drawing.Imaging.ImageAttributes.ClearNoOp" /> 方法恢复在调用 <see cref="Overload:System.Drawing.Imaging.ImageAttributes.SetNoOp" /> 方法前已存在的颜色调整设置。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetNoOp(System.Drawing.Imaging.ColorAdjustType)">
      <summary>为指定类别关闭颜色调整。 可以调用 <see cref="Overload:System.Drawing.Imaging.ImageAttributes.ClearNoOp" /> 方法恢复在调用 <see cref="Overload:System.Drawing.Imaging.ImageAttributes.SetNoOp" /> 方法前已存在的颜色调整设置。</summary>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 的一个元素，指定将关闭颜色校正的类别。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag)">
      <summary>为默认类别设置 CMYK（青色-洋红色-黄色-黑色）输出通道。</summary>
      <param name="flags">
        <see cref="T:System.Drawing.Imaging.ColorChannelFlag" /> 的一个元素，指定输出通道。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag,System.Drawing.Imaging.ColorAdjustType)">
      <summary>为指定的类别设置 CMYK（青色-洋红色-黄色-黑色）输出通道。</summary>
      <param name="flags">
        <see cref="T:System.Drawing.Imaging.ColorChannelFlag" /> 的一个元素，指定输出通道。</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 的一个元素，指定将设置输出通道的类别。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(System.String)">
      <summary>为默认类别设置输出通道颜色配置文件。</summary>
      <param name="colorProfileFilename">颜色配置文件的路径名。 如果颜色配置文件位于 %SystemRoot%\System32\Spool\Drivers\Color 目录中，则该参数可以是该文件的文件名。 否则，该参数必须是完全限定的路径名。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(System.String,System.Drawing.Imaging.ColorAdjustType)">
      <summary>为指定类别设置输出通道颜色配置文件。</summary>
      <param name="colorProfileFilename">颜色配置文件的路径名。 如果颜色配置文件位于 %SystemRoot%\System32\Spool\Drivers\Color 目录中，则该参数可以是该文件的文件名。 否则，该参数必须是完全限定的路径名。</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 的一个元素，指定将设置输出通道颜色配置文件的类别。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[])">
      <summary>为默认类别设置颜色重新映射表。</summary>
      <param name="map">
        <see cref="T:System.Drawing.Imaging.ColorMap" /> 类型的颜色对数组。 每个颜色对包含现有的颜色（第一个值）和它将映射到的颜色（第二个值）。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[],System.Drawing.Imaging.ColorAdjustType)">
      <summary>为指定类别设置颜色重新映射表。</summary>
      <param name="map">
        <see cref="T:System.Drawing.Imaging.ColorMap" /> 类型的颜色对数组。 每个颜色对包含现有的颜色（第一个值）和它将映射到的颜色（第二个值）。</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 的一个元素，指定将设置颜色重新映射表的类别。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetThreshold(System.Single)">
      <summary>为默认类别设置阈值（透明范围）。</summary>
      <param name="threshold">指定阈值的实数。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetThreshold(System.Single,System.Drawing.Imaging.ColorAdjustType)">
      <summary>为指定类别设置阈值（透明范围）。</summary>
      <param name="threshold">0.0 到 1.0 之间的阈值，用作一个断点，以便对将映射为最大值或最小值的颜色进行排序。</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 的一个元素，指定将设置颜色阈值的类别。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode)">
      <summary>设置环绕模式，该模式用于决定如何将纹理平铺到一个形状上或平铺到形状的边界上。 当纹理小于它所填充的形状时，纹理在该形状上平铺以填满该形状。</summary>
      <param name="mode">
        <see cref="T:System.Drawing.Drawing2D.WrapMode" /> 的一个元素，它指定使用重复的图像副本平铺区域的方式。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color)">
      <summary>设置环绕模式和颜色，用于决定如何将纹理平铺到一个形状上，或平铺到形状的边界上。 当纹理小于它所填充的形状时，纹理在该形状上平铺以填满该形状。</summary>
      <param name="mode">
        <see cref="T:System.Drawing.Drawing2D.WrapMode" /> 的一个元素，它指定使用重复的图像副本平铺区域的方式。</param>
      <param name="color">一个 <see cref="T:System.Drawing.Imaging.ImageAttributes" /> 对象，指定所呈现图像外部的像素的颜色。 如果模式参数设置为 <see cref="F:System.Drawing.Drawing2D.WrapMode.Clamp" /> 并且传递给 <see cref="Overload:System.Drawing.Graphics.DrawImage" /> 的源矩形大于图像本身，则该颜色可见。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color,System.Boolean)">
      <summary>设置环绕模式和颜色，用于决定如何将纹理平铺到一个形状上，或平铺到形状的边界上。 当纹理小于它所填充的形状时，纹理在该形状上平铺以填满该形状。</summary>
      <param name="mode">
        <see cref="T:System.Drawing.Drawing2D.WrapMode" /> 的一个元素，它指定使用重复的图像副本平铺区域的方式。</param>
      <param name="color">一个 Color 对象，指定所呈现图像外部的像素的颜色。 如果模式参数设置为 <see cref="F:System.Drawing.Drawing2D.WrapMode.Clamp" /> 并且传递给 <see cref="Overload:System.Drawing.Graphics.DrawImage" /> 的源矩形大于图像本身，则该颜色可见。</param>
      <param name="clamp">此参数不起作用。 将其设置为 <see langword="false" />。</param>
    </member>
    <member name="T:System.Drawing.Imaging.ImageCodecFlags">
      <summary>提供图像编码器/解码器（编码解码器）的特性。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.BlockingDecode">
      <summary>解码器在解码过程中有模块化行为。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.Builtin">
      <summary>编码解码器内置于 GDI+ 中。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.Decoder">
      <summary>编码解码器支持解码（读取）。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.Encoder">
      <summary>编码解码器支持编码（保存）。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.SeekableEncode">
      <summary>编码器需要可查找的输出流。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.SupportBitmap">
      <summary>编码解码器支持光栅图像（位图）。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.SupportVector">
      <summary>编码解码器支持矢量图像（图元文件）。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.System">
      <summary>未使用。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.User">
      <summary>未使用。</summary>
    </member>
    <member name="T:System.Drawing.Imaging.ImageCodecInfo">
      <summary>
        <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> 类可提供必要的存储成员和方法，以检索与已安装的图像编码器和解码器（统称编码解码器）相关的所有信息。 不可继承。</summary>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.Clsid">
      <summary>获取或设置 <see cref="T:System.Guid" /> 结构，其中包含能识别特定编码解码器的 GUID。</summary>
      <returns>包含能识别特定编码解码器的 GUID 的 <see cref="T:System.Guid" /> 结构。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.CodecName">
      <summary>获取或设置包含编码解码器名称的字符串。</summary>
      <returns>包含编码解码器名称的字符串。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.DllName">
      <summary>获取或设置包含存放编码解码器的 DLL 的路径名字符串。 如果编码解码器不在 DLL 中，则该指针为 <see langword="null" />。</summary>
      <returns>包含存放编码解码器的 DLL 的路径名字符串。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.FilenameExtension">
      <summary>获取或设置包含编码解码器中使用的文件扩展名的字符串。 这些扩展名用分号分隔。</summary>
      <returns>包含编码解码器中使用的文件扩展名的字符串。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.Flags">
      <summary>获取或设置用于存储有关编码解码器的其他信息的 32 位值。 该属性从 <see cref="T:System.Drawing.Imaging.ImageCodecFlags" /> 枚举返回若干标志的组合。</summary>
      <returns>用于存储有关编码解码器的其他信息的 32 位值。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.FormatDescription">
      <summary>获取或设置描述编码解码器的文件格式的字符串。</summary>
      <returns>描述编码解码器的文件格式的字符串。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.FormatID">
      <summary>获取或设置 <see cref="T:System.Guid" /> 结构，其中包含用于识别编码解码器格式的 GUID。</summary>
      <returns>
        <see cref="T:System.Guid" /> 结构，其中包含用于识别编码解码器格式的 GUID。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.ImageCodecInfo.GetImageDecoders">
      <summary>返回 <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> 对象的数组，这些对象包含有关内置在 GDI+ 中的图像解码器的信息。</summary>
      <returns>一个 <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> 对象数组。 数组中的每个 <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> 对象都包含有关某一个内置图像编码解码器的信息。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.ImageCodecInfo.GetImageEncoders">
      <summary>返回 <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> 对象的数组，这些对象包含有关内置在 GDI+ 中的图像编码器的信息。</summary>
      <returns>一个 <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> 对象数组。 数组中的每个 <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> 对象都包含有关某一个内置图像编码解码器的信息。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.MimeType">
      <summary>获取或设置包含编码解码器的多用途网际邮件扩充协议 (MIME) 类型的字符串。</summary>
      <returns>包含编码解码器的多用途 Internet 邮件扩充协议 (MIME) 类型的字符串。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.SignatureMasks">
      <summary>获取或设置可用作筛选器的二维字节数组。</summary>
      <returns>可用作筛选器的二维字节数组。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.SignaturePatterns">
      <summary>获取或设置表示编码解码器签名的二维字节数组。</summary>
      <returns>表示编码解码器签名的二维字节数组。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.Version">
      <summary>获取或设置编码解码器的版本号。</summary>
      <returns>编码解码器的版本号。</returns>
    </member>
    <member name="T:System.Drawing.Imaging.ImageFlags">
      <summary>指定 <see cref="T:System.Drawing.Image" /> 对象中包含的像素数据的特性。 <see cref="P:System.Drawing.Image.Flags" /> 属性返回此枚举的成员。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.Caching">
      <summary>为了更快地进行访问，可缓存此像素数据。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.ColorSpaceCmyk">
      <summary>此像素数据使用 CMYK 颜色空间。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.ColorSpaceGray">
      <summary>此像素数据表示灰度。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.ColorSpaceRgb">
      <summary>此像素数据使用 RGB 颜色空间。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.ColorSpaceYcbcr">
      <summary>指定使用 YCBCR 颜色空间来存储图像。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.ColorSpaceYcck">
      <summary>指定使用 YCCK 颜色空间来存储图像。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.HasAlpha">
      <summary>此像素数据包含 alpha 信息。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.HasRealDpi">
      <summary>指定在图像中存储每英寸点数信息。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.HasRealPixelSize">
      <summary>指定在图像中存储像素大小。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.HasTranslucent">
      <summary>指定此像素数据有不同于 0（透明）和 255（不透明）的 alpha 值。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.None">
      <summary>无格式信息。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.PartiallyScalable">
      <summary>此像素数据部分可缩放，但有一些限制。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.ReadOnly">
      <summary>此像素数据是只读的。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.Scalable">
      <summary>此像素数据是可伸放的。</summary>
    </member>
    <member name="T:System.Drawing.Imaging.ImageFormat">
      <summary>指定图像的文件格式。 不可继承。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageFormat.#ctor(System.Guid)">
      <summary>使用指定的 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 结构初始化 <see cref="T:System.Guid" /> 类的新实例。</summary>
      <param name="guid">指定特定图像格式的 <see cref="T:System.Guid" /> 结构。</param>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Bmp">
      <summary>获取位图 (BMP) 图像格式。</summary>
      <returns>指示位图图像格式的 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Emf">
      <summary>获取增强型图元文件 (WMF) 图像格式。</summary>
      <returns>一个 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 对象，指示增强型图元文件图像格式。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.ImageFormat.Equals(System.Object)">
      <summary>返回一个值，指示指定的对象是否是等效于此 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 对象的 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 对象。</summary>
      <param name="o">要测试的对象。</param>
      <returns>如果 <paramref name="o" /> 是等效于此 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 对象的 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 对象，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Exif">
      <summary>获取可交换图像文件 (Exif) 格式。</summary>
      <returns>指示 Exif 格式的 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 对象。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.ImageFormat.GetHashCode">
      <summary>返回一个表示此对象的哈希代码值。</summary>
      <returns>表示此对象的哈希代码。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Gif">
      <summary>获取图形交换格式 (GIF) 图像格式。</summary>
      <returns>指示 GIF 图像格式的 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Guid">
      <summary>获取表示此 <see cref="T:System.Guid" /> 对象的 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 结构。</summary>
      <returns>表示此 <see cref="T:System.Guid" /> 对象的 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 结构。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Icon">
      <summary>获取 Windows 图标图像格式。</summary>
      <returns>指示 Windows 图标图像格式的 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Jpeg">
      <summary>获取联合图像专家组 (JPEG) 图像格式。</summary>
      <returns>指示 JPEG 图像格式的 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.MemoryBmp">
      <summary>获取内存中的位图的格式。</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.ImageFormat" /> 对象，它指示内存中的位图的格式。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Png">
      <summary>获取 W3C 可移植网络图形 (PNG) 图像格式。</summary>
      <returns>指示 PNG 图像格式的 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Tiff">
      <summary>获取标记图像文件格式 (TIFF) 图像格式。</summary>
      <returns>指示 TIFF 图像格式的 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 对象。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.ImageFormat.ToString">
      <summary>将此 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 对象转换为可读的字符串。</summary>
      <returns>表示此 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 对象的字符串。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Wmf">
      <summary>获取 Windows 图元文件 (WMF) 图像格式。</summary>
      <returns>指示 Windows 图元文件图像格式的 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 对象。</returns>
    </member>
    <member name="T:System.Drawing.Imaging.ImageLockMode">
      <summary>指定传递给 <see cref="Overload:System.Drawing.Bitmap.LockBits" /> 方法的标志参数的标志。 <see cref="Overload:System.Drawing.Bitmap.LockBits" /> 方法可锁定图像的某一部分，以便读取或写入像素数据。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageLockMode.ReadOnly">
      <summary>指定锁定图像的一部分以便读取。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageLockMode.ReadWrite">
      <summary>指定锁定图像的一部分以便读取或写入。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageLockMode.UserInputBuffer">
      <summary>指定由用户分配读取或写入像素数据时使用的缓冲区。 如果设置此标志，那么 <see cref="Overload:System.Drawing.Bitmap.LockBits" /> 方法的 <paramref name="flags" /> 参数将充当输入参数（也可能充当输出参数）。 如果清除此标志，那么 <paramref name="flags" /> 参数仅充当输出参数。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageLockMode.WriteOnly">
      <summary>指定锁定图像的一部分以便写入。</summary>
    </member>
    <member name="T:System.Drawing.Imaging.Metafile">
      <summary>定义图形图元文件。 图元文件包含描述一系列图形操作的记录，这些操作可被记录（构造）和回放（显示）。 此类不能继承。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Boolean)">
      <summary>从指定的图柄初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类的新实例。</summary>
      <param name="henhmetafile">增强型图元文件的图柄。</param>
      <param name="deleteEmf">删除 <see cref="T:System.Drawing.Imaging.Metafile" /> 时，为 <see langword="true" />，以删除增强型图元文件的图柄；否则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Imaging.EmfType)">
      <summary>从指定的设备上下文图柄和指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 格式的 <see cref="T:System.Drawing.Imaging.EmfType" /> 枚举初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类的新实例。</summary>
      <param name="referenceHdc">设备上下文的图柄。</param>
      <param name="emfType">一个 <see cref="T:System.Drawing.Imaging.EmfType" />，指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 的格式。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Imaging.EmfType,System.String)">
      <summary>从指定的设备上下文图柄和指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 格式的 <see cref="T:System.Drawing.Imaging.EmfType" /> 枚举初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类的新实例。 可提供一个字符串来命名该文件。</summary>
      <param name="referenceHdc">设备上下文的图柄。</param>
      <param name="emfType">一个 <see cref="T:System.Drawing.Imaging.EmfType" />，指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 的格式。</param>
      <param name="description">新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的描述性名称。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Imaging.WmfPlaceableFileHeader)">
      <summary>从指定的图柄和 <see cref="T:System.Drawing.Imaging.WmfPlaceableFileHeader" /> 初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类的新实例。</summary>
      <param name="hmetafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> 的窗口图柄。</param>
      <param name="wmfHeader">
        <see cref="T:System.Drawing.Imaging.WmfPlaceableFileHeader" />。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Imaging.WmfPlaceableFileHeader,System.Boolean)">
      <summary>从指定的图柄和 <see cref="T:System.Drawing.Imaging.WmfPlaceableFileHeader" /> 初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类的新实例。 另外，<paramref name="deleteWmf" /> 参数可用于在删除图元文件时删除图柄。</summary>
      <param name="hmetafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> 的窗口图柄。</param>
      <param name="wmfHeader">
        <see cref="T:System.Drawing.Imaging.WmfPlaceableFileHeader" />。</param>
      <param name="deleteWmf">删除 <see cref="T:System.Drawing.Imaging.Metafile" /> 时，为 <see langword="true" />，以删除新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的图柄；否则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Rectangle)">
      <summary>从指定的设备上下文初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类的新实例，该实例由指定的矩形绑定。</summary>
      <param name="referenceHdc">设备上下文的图柄。</param>
      <param name="frameRect">一个 <see cref="T:System.Drawing.Rectangle" />，表示绑定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的矩形。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit)">
      <summary>从指定的设备上下文初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类的新实例，该实例由使用提供的度量单位的指定矩形绑定。</summary>
      <param name="referenceHdc">设备上下文的图柄。</param>
      <param name="frameRect">一个 <see cref="T:System.Drawing.Rectangle" />，表示绑定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的矩形。</param>
      <param name="frameUnit">
        <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />，指定 <paramref name="frameRect" /> 的度量单位。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
      <summary>从指定的设备上下文和指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 的格式的 <see cref="T:System.Drawing.Imaging.EmfType" /> 枚举初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类的新实例，该实例由使用提供的度量单位的指定矩形绑定。</summary>
      <param name="referenceHdc">设备上下文的图柄。</param>
      <param name="frameRect">一个 <see cref="T:System.Drawing.Rectangle" />，表示绑定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的矩形。</param>
      <param name="frameUnit">
        <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />，指定 <paramref name="frameRect" /> 的度量单位。</param>
      <param name="type">一个 <see cref="T:System.Drawing.Imaging.EmfType" />，指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 的格式。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
      <summary>从指定的设备上下文和指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 的格式的 <see cref="T:System.Drawing.Imaging.EmfType" /> 枚举初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类的新实例，该实例由使用提供的度量单位的指定矩形绑定。 可提供一个字符串来命名该文件。</summary>
      <param name="referenceHdc">设备上下文的图柄。</param>
      <param name="frameRect">一个 <see cref="T:System.Drawing.Rectangle" />，表示绑定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的矩形。</param>
      <param name="frameUnit">
        <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />，指定 <paramref name="frameRect" /> 的度量单位。</param>
      <param name="type">一个 <see cref="T:System.Drawing.Imaging.EmfType" />，指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 的格式。</param>
      <param name="desc">一个 <see cref="T:System.String" />，其中包含此 <see cref="T:System.Drawing.Imaging.Metafile" /> 的描述性名称。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.RectangleF)">
      <summary>从指定的设备上下文初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类的新实例，该实例由指定的矩形绑定。</summary>
      <param name="referenceHdc">设备上下文的图柄。</param>
      <param name="frameRect">一个 <see cref="T:System.Drawing.RectangleF" />，表示绑定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的矩形。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit)">
      <summary>从指定的设备上下文初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类的新实例，该实例由使用提供的度量单位的指定矩形绑定。</summary>
      <param name="referenceHdc">设备上下文的图柄。</param>
      <param name="frameRect">一个 <see cref="T:System.Drawing.RectangleF" />，表示绑定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的矩形。</param>
      <param name="frameUnit">
        <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />，指定 <paramref name="frameRect" /> 的度量单位。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
      <summary>从指定的设备上下文和指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 的格式的 <see cref="T:System.Drawing.Imaging.EmfType" /> 枚举初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类的新实例，该实例由使用提供的度量单位的指定矩形绑定。</summary>
      <param name="referenceHdc">设备上下文的图柄。</param>
      <param name="frameRect">一个 <see cref="T:System.Drawing.RectangleF" />，表示绑定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的矩形。</param>
      <param name="frameUnit">
        <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />，指定 <paramref name="frameRect" /> 的度量单位。</param>
      <param name="type">一个 <see cref="T:System.Drawing.Imaging.EmfType" />，指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 的格式。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
      <summary>从指定的设备上下文和指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 的格式的 <see cref="T:System.Drawing.Imaging.EmfType" /> 枚举初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类的新实例，该实例由使用提供的度量单位的指定矩形绑定。 可提供一个字符串来命名该文件。</summary>
      <param name="referenceHdc">设备上下文的图柄。</param>
      <param name="frameRect">一个 <see cref="T:System.Drawing.RectangleF" />，表示绑定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的矩形。</param>
      <param name="frameUnit">
        <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />，指定 <paramref name="frameRect" /> 的度量单位。</param>
      <param name="type">一个 <see cref="T:System.Drawing.Imaging.EmfType" />，指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 的格式。</param>
      <param name="description">一个 <see cref="T:System.String" />，其中包含此 <see cref="T:System.Drawing.Imaging.Metafile" /> 的描述性名称。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream)">
      <summary>从指定的数据流初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类的新实例。</summary>
      <param name="stream">从中创建新 <see cref="T:System.IO.Stream" /> 的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr)">
      <summary>从指定的数据流初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类的新实例。</summary>
      <param name="stream">一个 <see cref="T:System.IO.Stream" />，其中包含此 <see cref="T:System.Drawing.Imaging.Metafile" /> 的数据。</param>
      <param name="referenceHdc">设备上下文的 Windows 图柄。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Imaging.EmfType)">
      <summary>从指定的数据流、设备上下文的 Windows 图柄和指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 格式的 <see cref="T:System.Drawing.Imaging.EmfType" /> 枚举初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类的新实例。</summary>
      <param name="stream">一个 <see cref="T:System.IO.Stream" />，其中包含此 <see cref="T:System.Drawing.Imaging.Metafile" /> 的数据。</param>
      <param name="referenceHdc">设备上下文的 Windows 图柄。</param>
      <param name="type">一个 <see cref="T:System.Drawing.Imaging.EmfType" />，指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 的格式。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Imaging.EmfType,System.String)">
      <summary>从指定的数据流、设备上下文的 Windows 图柄和指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 格式的 <see cref="T:System.Drawing.Imaging.EmfType" /> 枚举初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类的新实例。 另外，可添加包含新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的描述性名称的字符串。</summary>
      <param name="stream">一个 <see cref="T:System.IO.Stream" />，其中包含此 <see cref="T:System.Drawing.Imaging.Metafile" /> 的数据。</param>
      <param name="referenceHdc">设备上下文的 Windows 图柄。</param>
      <param name="type">一个 <see cref="T:System.Drawing.Imaging.EmfType" />，指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 的格式。</param>
      <param name="description">一个 <see cref="T:System.String" />，其中包含此 <see cref="T:System.Drawing.Imaging.Metafile" /> 的描述性名称。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Rectangle)">
      <summary>从指定的数据流、设备上下文的 Windows 图柄和 <see cref="T:System.Drawing.Rectangle" /> 结构（它表示绑定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的矩形）初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类的新实例。</summary>
      <param name="stream">一个 <see cref="T:System.IO.Stream" />，其中包含此 <see cref="T:System.Drawing.Imaging.Metafile" /> 的数据。</param>
      <param name="referenceHdc">设备上下文的 Windows 图柄。</param>
      <param name="frameRect">一个 <see cref="T:System.Drawing.Rectangle" />，表示绑定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的矩形。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit)">
      <summary>从指定的数据流、设备上下文的 Windows 图柄、<see cref="T:System.Drawing.Rectangle" /> 结构（它表示绑定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的矩形）和所提供的度量单位初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类的新实例。</summary>
      <param name="stream">一个 <see cref="T:System.IO.Stream" />，其中包含此 <see cref="T:System.Drawing.Imaging.Metafile" /> 的数据。</param>
      <param name="referenceHdc">设备上下文的 Windows 图柄。</param>
      <param name="frameRect">一个 <see cref="T:System.Drawing.Rectangle" />，表示绑定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的矩形。</param>
      <param name="frameUnit">
        <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />，指定 <paramref name="frameRect" /> 的度量单位。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
      <summary>从指定的数据流、设备上下文的 Windows 图柄、<see cref="T:System.Drawing.Rectangle" /> 结构（它表示绑定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的矩形）、所提供的度量单位以及指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 格式的 <see cref="T:System.Drawing.Imaging.EmfType" /> 枚举初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类的新实例。</summary>
      <param name="stream">一个 <see cref="T:System.IO.Stream" />，其中包含此 <see cref="T:System.Drawing.Imaging.Metafile" /> 的数据。</param>
      <param name="referenceHdc">设备上下文的 Windows 图柄。</param>
      <param name="frameRect">一个 <see cref="T:System.Drawing.Rectangle" />，表示绑定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的矩形。</param>
      <param name="frameUnit">
        <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />，指定 <paramref name="frameRect" /> 的度量单位。</param>
      <param name="type">一个 <see cref="T:System.Drawing.Imaging.EmfType" />，指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 的格式。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
      <summary>从指定的数据流、设备上下文的 Windows 图柄、<see cref="T:System.Drawing.Rectangle" /> 结构（它表示绑定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的矩形）、所提供的度量单位以及指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 格式的 <see cref="T:System.Drawing.Imaging.EmfType" /> 枚举初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类的新实例。 可添加包含新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的描述性名称的字符串。</summary>
      <param name="stream">一个 <see cref="T:System.IO.Stream" />，其中包含此 <see cref="T:System.Drawing.Imaging.Metafile" /> 的数据。</param>
      <param name="referenceHdc">设备上下文的 Windows 图柄。</param>
      <param name="frameRect">一个 <see cref="T:System.Drawing.Rectangle" />，表示绑定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的矩形。</param>
      <param name="frameUnit">
        <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />，指定 <paramref name="frameRect" /> 的度量单位。</param>
      <param name="type">一个 <see cref="T:System.Drawing.Imaging.EmfType" />，指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 的格式。</param>
      <param name="description">一个 <see cref="T:System.String" />，其中包含此 <see cref="T:System.Drawing.Imaging.Metafile" /> 的描述性名称。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.RectangleF)">
      <summary>从指定的数据流、设备上下文的 Windows 图柄和 <see cref="T:System.Drawing.RectangleF" /> 结构（它表示绑定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的矩形）初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类的新实例。</summary>
      <param name="stream">一个 <see cref="T:System.IO.Stream" />，其中包含此 <see cref="T:System.Drawing.Imaging.Metafile" /> 的数据。</param>
      <param name="referenceHdc">设备上下文的 Windows 图柄。</param>
      <param name="frameRect">一个 <see cref="T:System.Drawing.RectangleF" />，表示绑定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的矩形。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit)">
      <summary>从指定的数据流、设备上下文的 Windows 图柄、<see cref="T:System.Drawing.RectangleF" /> 结构（它表示绑定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的矩形）和所提供的度量单位初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类的新实例。</summary>
      <param name="stream">一个 <see cref="T:System.IO.Stream" />，其中包含此 <see cref="T:System.Drawing.Imaging.Metafile" /> 的数据。</param>
      <param name="referenceHdc">设备上下文的 Windows 图柄。</param>
      <param name="frameRect">一个 <see cref="T:System.Drawing.RectangleF" />，表示绑定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的矩形。</param>
      <param name="frameUnit">
        <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />，指定 <paramref name="frameRect" /> 的度量单位。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
      <summary>从指定的数据流、设备上下文的 Windows 图柄、<see cref="T:System.Drawing.RectangleF" /> 结构（它表示绑定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的矩形）、所提供的度量单位以及指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 格式的 <see cref="T:System.Drawing.Imaging.EmfType" /> 枚举初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类的新实例。</summary>
      <param name="stream">一个 <see cref="T:System.IO.Stream" />，其中包含此 <see cref="T:System.Drawing.Imaging.Metafile" /> 的数据。</param>
      <param name="referenceHdc">设备上下文的 Windows 图柄。</param>
      <param name="frameRect">一个 <see cref="T:System.Drawing.RectangleF" />，表示绑定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的矩形。</param>
      <param name="frameUnit">
        <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />，指定 <paramref name="frameRect" /> 的度量单位。</param>
      <param name="type">一个 <see cref="T:System.Drawing.Imaging.EmfType" />，指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 的格式。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
      <summary>从指定的数据流、设备上下文的 Windows 图柄、<see cref="T:System.Drawing.RectangleF" /> 结构（它表示绑定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的矩形）、所提供的度量单位以及指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 格式的 <see cref="T:System.Drawing.Imaging.EmfType" /> 枚举初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类的新实例。 可添加包含新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的描述性名称的字符串。</summary>
      <param name="stream">一个 <see cref="T:System.IO.Stream" />，其中包含此 <see cref="T:System.Drawing.Imaging.Metafile" /> 的数据。</param>
      <param name="referenceHdc">设备上下文的 Windows 图柄。</param>
      <param name="frameRect">一个 <see cref="T:System.Drawing.RectangleF" />，表示绑定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的矩形。</param>
      <param name="frameUnit">
        <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />，指定 <paramref name="frameRect" /> 的度量单位。</param>
      <param name="type">一个 <see cref="T:System.Drawing.Imaging.EmfType" />，指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 的格式。</param>
      <param name="description">一个 <see cref="T:System.String" />，其中包含此 <see cref="T:System.Drawing.Imaging.Metafile" /> 的描述性名称。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String)">
      <summary>从指定的文件名初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类的新实例。</summary>
      <param name="filename">表示用以创建新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的文件名的 <see cref="T:System.String" />。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr)">
      <summary>用指定的文件名初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类的新实例。</summary>
      <param name="fileName">一个 <see cref="T:System.String" />，表示新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的文件名。</param>
      <param name="referenceHdc">设备上下文的 Windows 图柄。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Imaging.EmfType)">
      <summary>用指定的文件名、设备上下文的 Windows 图柄和指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 格式的 <see cref="T:System.Drawing.Imaging.EmfType" /> 枚举初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类的新实例。</summary>
      <param name="fileName">一个 <see cref="T:System.String" />，表示新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的文件名。</param>
      <param name="referenceHdc">设备上下文的 Windows 图柄。</param>
      <param name="type">一个 <see cref="T:System.Drawing.Imaging.EmfType" />，指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 的格式。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Imaging.EmfType,System.String)">
      <summary>用指定的文件名、设备上下文的 Windows 图柄和指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 格式的 <see cref="T:System.Drawing.Imaging.EmfType" /> 枚举初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类的新实例。 还可添加描述性字符串。</summary>
      <param name="fileName">一个 <see cref="T:System.String" />，表示新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的文件名。</param>
      <param name="referenceHdc">设备上下文的 Windows 图柄。</param>
      <param name="type">一个 <see cref="T:System.Drawing.Imaging.EmfType" />，指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 的格式。</param>
      <param name="description">一个 <see cref="T:System.String" />，其中包含此 <see cref="T:System.Drawing.Imaging.Metafile" /> 的描述性名称。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Rectangle)">
      <summary>用指定的文件名、设备上下文的 Windows 图柄和 <see cref="T:System.Drawing.Rectangle" /> 结构（它表示绑定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的矩形）初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类的新实例。</summary>
      <param name="fileName">一个 <see cref="T:System.String" />，表示新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的文件名。</param>
      <param name="referenceHdc">设备上下文的 Windows 图柄。</param>
      <param name="frameRect">一个 <see cref="T:System.Drawing.Rectangle" />，表示绑定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的矩形。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit)">
      <summary>用指定的文件名、设备上下文的 Windows 图柄、<see cref="T:System.Drawing.Rectangle" /> 结构（它表示绑定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的矩形）和所提供的度量单位初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类的新实例。</summary>
      <param name="fileName">一个 <see cref="T:System.String" />，表示新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的文件名。</param>
      <param name="referenceHdc">设备上下文的 Windows 图柄。</param>
      <param name="frameRect">表示绑定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的矩形的 <see cref="T:System.Drawing.Rectangle" />。</param>
      <param name="frameUnit">
        <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />，指定 <paramref name="frameRect" /> 的度量单位。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
      <summary>用指定的文件名、设备上下文的 Windows 图柄、<see cref="T:System.Drawing.Rectangle" /> 结构（它表示绑定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的矩形）、所提供的度量单位以及指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 格式的 <see cref="T:System.Drawing.Imaging.EmfType" /> 枚举初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类的新实例。</summary>
      <param name="fileName">一个 <see cref="T:System.String" />，表示新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的文件名。</param>
      <param name="referenceHdc">设备上下文的 Windows 图柄。</param>
      <param name="frameRect">一个 <see cref="T:System.Drawing.Rectangle" />，表示绑定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的矩形。</param>
      <param name="frameUnit">
        <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />，指定 <paramref name="frameRect" /> 的度量单位。</param>
      <param name="type">一个 <see cref="T:System.Drawing.Imaging.EmfType" />，指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 的格式。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
      <summary>用指定的文件名、设备上下文的 Windows 图柄、<see cref="T:System.Drawing.Rectangle" /> 结构（它表示绑定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的矩形）、所提供的度量单位以及指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 格式的 <see cref="T:System.Drawing.Imaging.EmfType" /> 枚举初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类的新实例。 还可添加描述性字符串。</summary>
      <param name="fileName">一个 <see cref="T:System.String" />，表示新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的文件名。</param>
      <param name="referenceHdc">设备上下文的 Windows 图柄。</param>
      <param name="frameRect">一个 <see cref="T:System.Drawing.Rectangle" />，表示绑定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的矩形。</param>
      <param name="frameUnit">
        <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />，指定 <paramref name="frameRect" /> 的度量单位。</param>
      <param name="type">一个 <see cref="T:System.Drawing.Imaging.EmfType" />，指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 的格式。</param>
      <param name="description">一个 <see cref="T:System.String" />，其中包含此 <see cref="T:System.Drawing.Imaging.Metafile" /> 的描述性名称。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.String)">
      <summary>用指定的文件名、设备上下文的 Windows 图柄、<see cref="T:System.Drawing.Rectangle" /> 结构（它表示绑定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的矩形）和所提供的度量单位初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类的新实例。 还可添加描述性字符串。</summary>
      <param name="fileName">一个 <see cref="T:System.String" />，表示新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的文件名。</param>
      <param name="referenceHdc">设备上下文的 Windows 图柄。</param>
      <param name="frameRect">一个 <see cref="T:System.Drawing.Rectangle" />，表示绑定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的矩形。</param>
      <param name="frameUnit">
        <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />，指定 <paramref name="frameRect" /> 的度量单位。</param>
      <param name="description">一个 <see cref="T:System.String" />，其中包含此 <see cref="T:System.Drawing.Imaging.Metafile" /> 的描述性名称。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.RectangleF)">
      <summary>用指定的文件名、设备上下文的 Windows 图柄和 <see cref="T:System.Drawing.RectangleF" /> 结构（它表示绑定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的矩形）初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类的新实例。</summary>
      <param name="fileName">一个 <see cref="T:System.String" />，表示新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的文件名。</param>
      <param name="referenceHdc">设备上下文的 Windows 图柄。</param>
      <param name="frameRect">一个 <see cref="T:System.Drawing.RectangleF" />，表示绑定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的矩形。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit)">
      <summary>用指定的文件名、设备上下文的 Windows 图柄、<see cref="T:System.Drawing.RectangleF" /> 结构（它表示绑定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的矩形）和所提供的度量单位初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类的新实例。</summary>
      <param name="fileName">一个 <see cref="T:System.String" />，表示新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的文件名。</param>
      <param name="referenceHdc">设备上下文的 Windows 图柄。</param>
      <param name="frameRect">一个 <see cref="T:System.Drawing.RectangleF" />，表示绑定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的矩形。</param>
      <param name="frameUnit">
        <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />，指定 <paramref name="frameRect" /> 的度量单位。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
      <summary>用指定的文件名、设备上下文的 Windows 图柄、<see cref="T:System.Drawing.RectangleF" /> 结构（它表示绑定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的矩形）、所提供的度量单位以及指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 格式的 <see cref="T:System.Drawing.Imaging.EmfType" /> 枚举初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类的新实例。</summary>
      <param name="fileName">一个 <see cref="T:System.String" />，表示新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的文件名。</param>
      <param name="referenceHdc">设备上下文的 Windows 图柄。</param>
      <param name="frameRect">一个 <see cref="T:System.Drawing.RectangleF" />，表示绑定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的矩形。</param>
      <param name="frameUnit">
        <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />，指定 <paramref name="frameRect" /> 的度量单位。</param>
      <param name="type">一个 <see cref="T:System.Drawing.Imaging.EmfType" />，指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 的格式。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
      <summary>用指定的文件名、设备上下文的 Windows 图柄、<see cref="T:System.Drawing.RectangleF" /> 结构（它表示绑定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的矩形）、所提供的度量单位以及指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 格式的 <see cref="T:System.Drawing.Imaging.EmfType" /> 枚举初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类的新实例。 还可添加描述性字符串。</summary>
      <param name="fileName">一个 <see cref="T:System.String" />，表示新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的文件名。</param>
      <param name="referenceHdc">设备上下文的 Windows 图柄。</param>
      <param name="frameRect">一个 <see cref="T:System.Drawing.RectangleF" />，表示绑定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的矩形。</param>
      <param name="frameUnit">
        <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />，指定 <paramref name="frameRect" /> 的度量单位。</param>
      <param name="type">一个 <see cref="T:System.Drawing.Imaging.EmfType" />，指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 的格式。</param>
      <param name="description">一个 <see cref="T:System.String" />，其中包含此 <see cref="T:System.Drawing.Imaging.Metafile" /> 的描述性名称。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.String)">
      <summary>用指定的文件名、设备上下文的 Windows 图柄、<see cref="T:System.Drawing.RectangleF" /> 结构（它表示绑定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的矩形）和所提供的度量单位初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类的新实例。 还可添加描述性字符串。</summary>
      <param name="fileName">一个 <see cref="T:System.String" />，表示新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的文件名。</param>
      <param name="referenceHdc">设备上下文的 Windows 图柄。</param>
      <param name="frameRect">一个 <see cref="T:System.Drawing.RectangleF" />，表示绑定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的矩形。</param>
      <param name="frameUnit">
        <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />，指定 <paramref name="frameRect" /> 的度量单位。</param>
      <param name="desc">一个 <see cref="T:System.String" />，其中包含此 <see cref="T:System.Drawing.Imaging.Metafile" /> 的描述性名称。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.GetHenhmetafile">
      <summary>返回增强型 <see cref="T:System.Drawing.Imaging.Metafile" /> 的 Windows 图柄。</summary>
      <returns>此增强型 <see cref="T:System.Drawing.Imaging.Metafile" /> 的 Windows 图柄。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.GetMetafileHeader">
      <summary>返回与此 <see cref="T:System.Drawing.Imaging.MetafileHeader" /> 关联的 <see cref="T:System.Drawing.Imaging.Metafile" />。</summary>
      <returns>与此 <see cref="T:System.Drawing.Imaging.MetafileHeader" /> 关联的 <see cref="T:System.Drawing.Imaging.Metafile" />。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.GetMetafileHeader(System.IntPtr)">
      <summary>返回与指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 关联的 <see cref="T:System.Drawing.Imaging.MetafileHeader" />。</summary>
      <param name="henhmetafile">为其返回标头的增强型 <see cref="T:System.Drawing.Imaging.Metafile" /> 的图柄。</param>
      <returns>与指定 <see cref="T:System.Drawing.Imaging.MetafileHeader" /> 关联的 <see cref="T:System.Drawing.Imaging.Metafile" />。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.GetMetafileHeader(System.IntPtr,System.Drawing.Imaging.WmfPlaceableFileHeader)">
      <summary>返回与指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 关联的 <see cref="T:System.Drawing.Imaging.MetafileHeader" />。</summary>
      <param name="hmetafile">要为其返回标头的 <see cref="T:System.Drawing.Imaging.Metafile" /> 的图柄。</param>
      <param name="wmfHeader">
        <see cref="T:System.Drawing.Imaging.WmfPlaceableFileHeader" />。</param>
      <returns>与指定 <see cref="T:System.Drawing.Imaging.MetafileHeader" /> 关联的 <see cref="T:System.Drawing.Imaging.Metafile" />。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.GetMetafileHeader(System.IO.Stream)">
      <summary>返回与指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 关联的 <see cref="T:System.Drawing.Imaging.MetafileHeader" />。</summary>
      <param name="stream">包含要检索标头的 <see cref="T:System.Drawing.Imaging.Metafile" /> 的 <see cref="T:System.IO.Stream" />。</param>
      <returns>与指定 <see cref="T:System.Drawing.Imaging.MetafileHeader" /> 关联的 <see cref="T:System.Drawing.Imaging.Metafile" />。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.GetMetafileHeader(System.String)">
      <summary>返回与指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 关联的 <see cref="T:System.Drawing.Imaging.MetafileHeader" />。</summary>
      <param name="fileName">包含要检索标头的 <see cref="T:System.Drawing.Imaging.Metafile" /> 的名称的 <see cref="T:System.String" />。</param>
      <returns>与指定 <see cref="T:System.Drawing.Imaging.MetafileHeader" /> 关联的 <see cref="T:System.Drawing.Imaging.Metafile" />。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.PlayRecord(System.Drawing.Imaging.EmfPlusRecordType,System.Int32,System.Int32,System.Byte[])">
      <summary>播放单个图元文件记录。</summary>
      <param name="recordType">指定正在播放的图元文件记录类型的 <see cref="T:System.Drawing.Imaging.EmfPlusRecordType" /> 的元素。</param>
      <param name="flags">指定记录属性的标志集。</param>
      <param name="dataSize">记录数据中的字节数。</param>
      <param name="data">包含记录数据的字节数组。</param>
    </member>
    <member name="T:System.Drawing.Imaging.MetafileFrameUnit">
      <summary>指定矩形的度量单位，该矩形用于调整图元文件的大小和位置。 这是在创建 <see cref="T:System.Drawing.Imaging.Metafile" /> 对象的过程中指定的。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileFrameUnit.Document">
      <summary>度量单位为 1/300 英寸。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileFrameUnit.GdiCompatible">
      <summary>度量单位为 0.01 毫米。 提供了与 GDI 的兼容性。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileFrameUnit.Inch">
      <summary>度量单位为 1 英寸。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileFrameUnit.Millimeter">
      <summary>度量单位为 1 毫米。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileFrameUnit.Pixel">
      <summary>度量单位为 1 个像素。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileFrameUnit.Point">
      <summary>度量单位为打印机的 1 磅。</summary>
    </member>
    <member name="T:System.Drawing.Imaging.MetafileHeader">
      <summary>包含关联的 <see cref="T:System.Drawing.Imaging.Metafile" /> 的特性。 不可继承。</summary>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.Bounds">
      <summary>获取限定关联的 <see cref="T:System.Drawing.Rectangle" /> 的 <see cref="T:System.Drawing.Imaging.Metafile" />。</summary>
      <returns>限定关联的 <see cref="T:System.Drawing.Rectangle" /> 的 <see cref="T:System.Drawing.Imaging.Metafile" />。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.DpiX">
      <summary>获取关联的 <see cref="T:System.Drawing.Imaging.Metafile" /> 的水平分辨率（以每英寸点数为单位）。</summary>
      <returns>关联的 <see cref="T:System.Drawing.Imaging.Metafile" /> 的水平分辨率（以每英寸点数为单位）。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.DpiY">
      <summary>获取关联的 <see cref="T:System.Drawing.Imaging.Metafile" /> 的垂直分辨率（以每英寸点数为单位）。</summary>
      <returns>关联的 <see cref="T:System.Drawing.Imaging.Metafile" /> 的垂直分辨率（以每英寸点数为单位）。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.EmfPlusHeaderSize">
      <summary>获取增强型图元文件（加上头文件）的大小，以字节为单位。</summary>
      <returns>增强型图元文件（加上头文件）的大小，以字节为单位。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsDisplay">
      <summary>返回一个值，该值指示关联的 <see cref="T:System.Drawing.Imaging.Metafile" /> 是否与设备相关。</summary>
      <returns>如果关联的 <see cref="T:System.Drawing.Imaging.Metafile" /> 与设备相关，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsEmf">
      <summary>返回一个值，该值指示关联的 <see cref="T:System.Drawing.Imaging.Metafile" /> 是否为 Windows 增强型图元文件格式。</summary>
      <returns>如果关联的 <see cref="T:System.Drawing.Imaging.Metafile" /> 为 Windows 增强型图元文件格式，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsEmfOrEmfPlus">
      <summary>返回一个值，该值指示关联的 <see cref="T:System.Drawing.Imaging.Metafile" /> 是否为 Windows 增强型图元文件格式或 Windows 增强型图元文件 Plus 格式。</summary>
      <returns>如果关联的 <see cref="T:System.Drawing.Imaging.Metafile" /> 为 Windows 增强型图元文件格式或 Windows 增强型图元文件 Plus 格式，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsEmfPlus">
      <summary>返回一个值，该值指示关联的 <see cref="T:System.Drawing.Imaging.Metafile" /> 是否为 Windows 增强型图元文件 Plus 格式。</summary>
      <returns>如果关联的 <see cref="T:System.Drawing.Imaging.Metafile" /> 为 Windows 增强型图元文件 Plus 格式，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsEmfPlusDual">
      <summary>返回一个值，该值指示关联的 <see cref="T:System.Drawing.Imaging.Metafile" /> 是否为“双重”增强型图元文件格式。 这种格式同时支持增强型和增强型 Plus 格式。</summary>
      <returns>如果关联的 <see cref="T:System.Drawing.Imaging.Metafile" /> 为“双重”增强型图元文件格式，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsEmfPlusOnly">
      <summary>返回一个值，该值指示关联的 <see cref="T:System.Drawing.Imaging.Metafile" /> 是否只支持 Windows 增强型图元文件 Plus 格式。</summary>
      <returns>如果关联的 <see cref="T:System.Drawing.Imaging.Metafile" /> 只支持 Windows 增强型图元文件 Plus 格式，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsWmf">
      <summary>返回一个值，该值指示关联的 <see cref="T:System.Drawing.Imaging.Metafile" /> 是否为 Windows 图元文件格式。</summary>
      <returns>如果关联的 <see cref="T:System.Drawing.Imaging.Metafile" /> 为 Windows 图元文件格式，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsWmfPlaceable">
      <summary>返回一个值，该值指示关联的 <see cref="T:System.Drawing.Imaging.Metafile" /> 是否为 Windows 可放置图元文件格式。</summary>
      <returns>如果关联的 <see cref="T:System.Drawing.Imaging.Metafile" /> 为 Windows 可放置图元文件格式，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.LogicalDpiX">
      <summary>获取关联的 <see cref="T:System.Drawing.Imaging.Metafile" /> 的逻辑水平分辨率（以每英寸点数为单位）。</summary>
      <returns>关联的 <see cref="T:System.Drawing.Imaging.Metafile" /> 的逻辑水平分辨率（以每英寸点数为单位）。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.LogicalDpiY">
      <summary>获取关联的 <see cref="T:System.Drawing.Imaging.Metafile" /> 的逻辑垂直分辨率（以每英寸点数为单位）。</summary>
      <returns>关联的 <see cref="T:System.Drawing.Imaging.Metafile" /> 的逻辑垂直分辨率（以每英寸点数为单位）。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.MetafileSize">
      <summary>获取关联的 <see cref="T:System.Drawing.Imaging.Metafile" /> 的大小（以字节为单位）。</summary>
      <returns>关联的 <see cref="T:System.Drawing.Imaging.Metafile" /> 的大小（以字节为单位）。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.Type">
      <summary>获取关联的 <see cref="T:System.Drawing.Imaging.Metafile" /> 的类型。</summary>
      <returns>一个 <see cref="T:System.Drawing.Imaging.MetafileType" /> 枚举，表示关联的 <see cref="T:System.Drawing.Imaging.Metafile" /> 的类型。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.Version">
      <summary>获取关联的 <see cref="T:System.Drawing.Imaging.Metafile" /> 的版本号。</summary>
      <returns>关联的 <see cref="T:System.Drawing.Imaging.Metafile" /> 的版本号。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.WmfHeader">
      <summary>获取关联的 <see cref="T:System.Drawing.Imaging.Metafile" /> 的 Windows 图元文件 (WMF) 头文件。</summary>
      <returns>一个 <see cref="T:System.Drawing.Imaging.MetaHeader" />，包含关联的 <see cref="T:System.Drawing.Imaging.Metafile" /> 的 WMF 头文件。</returns>
    </member>
    <member name="T:System.Drawing.Imaging.MetafileType">
      <summary>指定图元文件的类型。 <see cref="P:System.Drawing.Imaging.MetafileHeader.Type" /> 属性返回此枚举的成员。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileType.Emf">
      <summary>指定增强型图元文件 (EMF) 类型的文件。 这样的文件只包含 GDI 记录。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileType.EmfPlusDual">
      <summary>指定 EMF+“双重”文件。 这样的文件包含 GDI+ 记录以及可选的 GDI 记录，可以使用 GDI 或 GDI+ 来显示。 使用 GDI 显示记录会导致一定程度的质量下降。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileType.EmfPlusOnly">
      <summary>指定 EMF+ 文件。 这样的文件只包含 GDI+ 记录，必须用 GDI+ 显示。 使用 GDI 显示会导致不可预期的结果。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileType.Invalid">
      <summary>指定 GDI+ 中不能识别的图元文件格式。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileType.Wmf">
      <summary>指定 WMF（Windows 图元文件）文件。 这样的文件只包含 GDI 记录。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileType.WmfPlaceable">
      <summary>指定前面带有可放置图元文件头的 WMF（Windows 图元文件）文件。</summary>
    </member>
    <member name="T:System.Drawing.Imaging.MetaHeader">
      <summary>包含有关 Windows 格式 (WMF) 图元文件的信息。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.MetaHeader.#ctor">
      <summary>初始化 <see langword="MetaHeader" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.HeaderSize">
      <summary>获取和设置头文件的大小，以字节为单位。</summary>
      <returns>头文件的大小，以字节为单位。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.MaxRecord">
      <summary>获取或设置关联的 <see cref="T:System.Drawing.Imaging.Metafile" /> 对象中最大记录的大小，以字节为单位。</summary>
      <returns>关联的 <see cref="T:System.Drawing.Imaging.Metafile" /> 对象中最大记录的大小，以字节为单位。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.NoObjects">
      <summary>获取或设置同时存在于 <see cref="T:System.Drawing.Imaging.Metafile" /> 对象中的对象的最大数目。</summary>
      <returns>同时存在于 <see cref="T:System.Drawing.Imaging.Metafile" /> 对象中的对象的最大数目。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.NoParameters">
      <summary>未使用。 始终返回 0。</summary>
      <returns>始终为 0。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.Size">
      <summary>获取或设置关联的 <see cref="T:System.Drawing.Imaging.Metafile" /> 对象的大小（以字节为单位）。</summary>
      <returns>关联的 <see cref="T:System.Drawing.Imaging.Metafile" /> 对象的大小（以字节为单位）。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.Type">
      <summary>获取或设置关联的 <see cref="T:System.Drawing.Imaging.Metafile" /> 对象的类型。</summary>
      <returns>关联的 <see cref="T:System.Drawing.Imaging.Metafile" /> 对象的类型。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.Version">
      <summary>获取或设置头格式的版本号。</summary>
      <returns>头格式的版本号。</returns>
    </member>
    <member name="T:System.Drawing.Imaging.PaletteFlags">
      <summary>指定系统调色板中颜色数据的类型。 该数据可以是带有 alpha、仅灰度数据或半色调数据的颜色数据。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PaletteFlags.GrayScale">
      <summary>灰度数据。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PaletteFlags.Halftone">
      <summary>半色调数据。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PaletteFlags.HasAlpha">
      <summary>Alpha 数据。</summary>
    </member>
    <member name="T:System.Drawing.Imaging.PixelFormat">
      <summary>指定图像中每个像素的颜色数据的格式。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Alpha">
      <summary>像素数据包含没有进行过自左乘的 alpha 值。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Canonical">
      <summary>默认像素格式，每像素 32 位。 此格式指定 24 位颜色深度和一个 8 位 alpha 通道。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.DontCare">
      <summary>没有指定像素格式。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Extended">
      <summary>保留。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format16bppArgb1555">
      <summary>像素格式为每像素 16 位。 该颜色信息指定 32,768 种色调，其中 5 位为红色，5 位为绿色，5 位为蓝色，1 位为 alpha。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format16bppGrayScale">
      <summary>像素格式为每像素 16 位。 该颜色信息指定 65536 种灰色调。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format16bppRgb555">
      <summary>指定格式为每像素 16 位；红色、绿色和蓝色分量各使用 5 位。 剩余的 1 位未使用。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format16bppRgb565">
      <summary>指定格式为每像素 16 位；红色分量使用 5 位，绿色分量使用 6 位，蓝色分量使用 5 位。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format1bppIndexed">
      <summary>指定像素格式为每像素 1 位，并指定它使用索引颜色。 因此颜色表中有两种颜色。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format24bppRgb">
      <summary>指定格式为每像素 24 位；红色、绿色和蓝色分量各使用 8 位。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format32bppArgb">
      <summary>指定格式为每像素 32 位；alpha、红色、绿色和蓝色分量各使用 8 位。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format32bppPArgb">
      <summary>指定格式为每像素 32 位；alpha、红色、绿色和蓝色分量各使用 8 位。 根据 alpha 分量，对红色、绿色和蓝色分量进行自左乘。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format32bppRgb">
      <summary>指定格式为每像素 32 位；红色、绿色和蓝色分量各使用 8 位。 剩余的 8 位未使用。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format48bppRgb">
      <summary>指定格式为每像素 48 位；红色、绿色和蓝色分量各使用 16 位。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format4bppIndexed">
      <summary>指定格式为每像素 4 位而且已创建索引。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format64bppArgb">
      <summary>指定格式为每像素 64 位；alpha、红色、绿色和蓝色分量各使用 16 位。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format64bppPArgb">
      <summary>指定格式为每像素 64 位；alpha、红色、绿色和蓝色分量各使用 16 位。 根据 alpha 分量，对红色、绿色和蓝色分量进行自左乘。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format8bppIndexed">
      <summary>指定格式为每像素 8 位而且已创建索引。 因此颜色表中有 256 种颜色。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Gdi">
      <summary>像素数据包含 GDI 颜色。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Indexed">
      <summary>该像素数据包含颜色索引值，这意味着这些值是系统颜色表中颜色的索引，而不是单个颜色值。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Max">
      <summary>此枚举的最大值。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.PAlpha">
      <summary>像素格式包含自左乘的 alpha 值。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Undefined">
      <summary>未定义像素格式。</summary>
    </member>
    <member name="T:System.Drawing.Imaging.PlayRecordCallback">
      <summary>未使用此委托。 有关枚举图元文件记录的示例，请参见 <see cref="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc)" />。</summary>
      <param name="recordType">未使用。</param>
      <param name="flags">未使用。</param>
      <param name="dataSize">未使用。</param>
      <param name="recordData">未使用。</param>
    </member>
    <member name="T:System.Drawing.Imaging.PropertyItem">
      <summary>封装要包括到图像文件中的元数据属性。 不可继承。</summary>
    </member>
    <member name="P:System.Drawing.Imaging.PropertyItem.Id">
      <summary>获取或设置属性的 ID。</summary>
      <returns>一个整数，表示属性的 ID。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.PropertyItem.Len">
      <summary>获取或设置 <see cref="P:System.Drawing.Imaging.PropertyItem.Value" /> 属性的长度（以字节为单位）。</summary>
      <returns>一个整数，表示 <see cref="P:System.Drawing.Imaging.PropertyItem.Value" /> 字节数组的长度（以字节为单位）。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.PropertyItem.Type">
      <summary>获取或设置整数，它定义 <see cref="P:System.Drawing.Imaging.PropertyItem.Value" /> 属性包含的数据类型。</summary>
      <returns>一个整数，定义 <see cref="P:System.Drawing.Imaging.PropertyItem.Value" /> 包含的数据类型。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.PropertyItem.Value">
      <summary>获取或设置属性项的值。</summary>
      <returns>一个字节数组，表示属性项的值。</returns>
    </member>
    <member name="T:System.Drawing.Imaging.WmfPlaceableFileHeader">
      <summary>定义可放置的图元文件。 不可继承。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.WmfPlaceableFileHeader.#ctor">
      <summary>初始化 <see langword="WmfPlaceableFileHeader" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.BboxBottom">
      <summary>获取或设置输出设备上图元文件图像的边框右下角的 y 坐标。</summary>
      <returns>输出设备上图元文件图像的边框右下角的 y 坐标。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.BboxLeft">
      <summary>获取或设置输出设备上图元文件图像的边框左上角的 x 坐标。</summary>
      <returns>输出设备上图元文件图像的边框左上角的 x 坐标。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.BboxRight">
      <summary>获取或设置输出设备上图元文件图像的边框右下角的 x 坐标。</summary>
      <returns>输出设备上图元文件图像的边框右下角的 x 坐标。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.BboxTop">
      <summary>获取或设置输出设备上图元文件图像的边框左上角的 y 坐标。</summary>
      <returns>输出设备上图元文件图像的边框左上角的 y 坐标。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.Checksum">
      <summary>获取或设置文件头中前 10 个 <see langword="WORD" /> 的校验和值。</summary>
      <returns>文件头中前 10 个 <see langword="WORD" /> 的校验和值。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.Hmf">
      <summary>获取或设置内存中图元文件的句柄。</summary>
      <returns>内存中图元文件的句柄。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.Inch">
      <summary>获取或设置每英寸的缇数。</summary>
      <returns>每英寸的缇数。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.Key">
      <summary>获取或设置一个值，以指示存在可放置的图元文件头。</summary>
      <returns>指示存在可放置的图元文件头的值。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.Reserved">
      <summary>保留。 请勿使用。</summary>
      <returns>保留。 请勿使用。</returns>
    </member>
    <member name="T:System.Drawing.Pen">
      <summary>定义用于绘制直线和曲线的对象。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Drawing.Pen.#ctor(System.Drawing.Brush)">
      <summary>使用指定的 <see cref="T:System.Drawing.Pen" /> 初始化 <see cref="T:System.Drawing.Brush" /> 类的新实例。</summary>
      <param name="brush">一个 <see cref="T:System.Drawing.Brush" />，确定该 <see cref="T:System.Drawing.Pen" /> 的填充属性。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)">
      <summary>使用指定的 <see cref="T:System.Drawing.Pen" /> 和 <see cref="T:System.Drawing.Brush" /> 初始化 <see cref="P:System.Drawing.Pen.Width" /> 类的新实例。</summary>
      <param name="brush">一个 <see cref="T:System.Drawing.Brush" />，决定此 <see cref="T:System.Drawing.Pen" /> 的特征。</param>
      <param name="width">新 <see cref="T:System.Drawing.Pen" /> 的宽度。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Pen.#ctor(System.Drawing.Color)">
      <summary>用指定颜色初始化 <see cref="T:System.Drawing.Pen" /> 类的新实例。</summary>
      <param name="color">
        <see cref="T:System.Drawing.Color" /> 结构，指示此 <see cref="T:System.Drawing.Pen" /> 的颜色。</param>
    </member>
    <member name="M:System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)">
      <summary>用指定的 <see cref="T:System.Drawing.Pen" /> 和 <see cref="T:System.Drawing.Color" /> 属性初始化 <see cref="P:System.Drawing.Pen.Width" /> 类的新实例。</summary>
      <param name="color">
        <see cref="T:System.Drawing.Color" /> 结构，指示此 <see cref="T:System.Drawing.Pen" /> 的颜色。</param>
      <param name="width">指示此 <see cref="T:System.Drawing.Pen" /> 的宽度的值。</param>
    </member>
    <member name="P:System.Drawing.Pen.Alignment">
      <summary>获取或设置此 <see cref="T:System.Drawing.Pen" /> 的对齐方式。</summary>
      <returns>表示该 <see cref="T:System.Drawing.Drawing2D.PenAlignment" /> 的对齐方式的 <see cref="T:System.Drawing.Pen" />。</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">指定值不是 <see cref="T:System.Drawing.Drawing2D.PenAlignment" /> 的成员。</exception>
      <exception cref="T:System.ArgumentException">对不可变的 <see cref="P:System.Drawing.Pen.Alignment" />（比如由 <see cref="T:System.Drawing.Pen" /> 类所返回）设置 <see cref="T:System.Drawing.Pens" /> 属性。</exception>
    </member>
    <member name="P:System.Drawing.Pen.Brush">
      <summary>获取或设置 <see cref="T:System.Drawing.Brush" />，用于确定此 <see cref="T:System.Drawing.Pen" /> 的特性。</summary>
      <returns>一个 <see cref="T:System.Drawing.Brush" />，用于确定此 <see cref="T:System.Drawing.Pen" /> 的特性。</returns>
      <exception cref="T:System.ArgumentException">对不可变的 <see cref="P:System.Drawing.Pen.Brush" />（比如由 <see cref="T:System.Drawing.Pen" /> 类所返回）设置 <see cref="T:System.Drawing.Pens" /> 属性。</exception>
    </member>
    <member name="M:System.Drawing.Pen.Clone">
      <summary>创建此 <see cref="T:System.Drawing.Pen" /> 的一个精确副本。</summary>
      <returns>一个可以强制转换为 <see cref="T:System.Drawing.Pen" /> 的 <see cref="T:System.Object" />。</returns>
    </member>
    <member name="P:System.Drawing.Pen.Color">
      <summary>获取或设置此 <see cref="T:System.Drawing.Pen" /> 的颜色。</summary>
      <returns>一个 <see cref="T:System.Drawing.Color" /> 结构，表示此 <see cref="T:System.Drawing.Pen" /> 的颜色。</returns>
      <exception cref="T:System.ArgumentException">对不可变的 <see cref="P:System.Drawing.Pen.Color" />（比如由 <see cref="T:System.Drawing.Pen" /> 类所返回）设置 <see cref="T:System.Drawing.Pens" /> 属性。</exception>
    </member>
    <member name="P:System.Drawing.Pen.CompoundArray">
      <summary>获取或设置用于指定复合钢笔的值数组。 复合钢笔绘制由平行直线和空白区域组成的复合直线。</summary>
      <returns>用于指定复合数组的实数组。 该数组中的元素必须按升序排列，不能小于 0，也不能大于 1。</returns>
      <exception cref="T:System.ArgumentException">对不可变的 <see cref="P:System.Drawing.Pen.CompoundArray" />（比如由 <see cref="T:System.Drawing.Pen" /> 类所返回）设置 <see cref="T:System.Drawing.Pens" /> 属性。</exception>
    </member>
    <member name="P:System.Drawing.Pen.CustomEndCap">
      <summary>获取或设置要在通过此 <see cref="T:System.Drawing.Pen" /> 绘制的直线终点使用的自定义线帽。</summary>
      <returns>一个 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" />，表示在通过此 <see cref="T:System.Drawing.Pen" /> 绘制的直线终点使用的线帽。</returns>
      <exception cref="T:System.ArgumentException">对不可变的 <see cref="P:System.Drawing.Pen.CustomEndCap" />（比如由 <see cref="T:System.Drawing.Pen" /> 类所返回）设置 <see cref="T:System.Drawing.Pens" /> 属性。</exception>
    </member>
    <member name="P:System.Drawing.Pen.CustomStartCap">
      <summary>获取或设置要在通过此 <see cref="T:System.Drawing.Pen" /> 绘制的直线起点使用的自定义线帽。</summary>
      <returns>一个 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" />，表示在通过此 <see cref="T:System.Drawing.Pen" /> 绘制的直线起点使用的线帽。</returns>
      <exception cref="T:System.ArgumentException">对不可变的 <see cref="P:System.Drawing.Pen.CustomStartCap" />（比如由 <see cref="T:System.Drawing.Pen" /> 类所返回）设置 <see cref="T:System.Drawing.Pens" /> 属性。</exception>
    </member>
    <member name="P:System.Drawing.Pen.DashCap">
      <summary>获取或设置用在短划线终点的线帽样式，这些短划线构成通过此 <see cref="T:System.Drawing.Pen" /> 绘制的虚线。</summary>
      <returns>
        <see cref="T:System.Drawing.Drawing2D.DashCap" /> 值之一，表示用在短划线起点和终点的线帽样式，这些短划线构成通过此 <see cref="T:System.Drawing.Pen" /> 绘制的虚线。</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">指定值不是 <see cref="T:System.Drawing.Drawing2D.DashCap" /> 的成员。</exception>
      <exception cref="T:System.ArgumentException">对不可变的 <see cref="P:System.Drawing.Pen.DashCap" />（比如由 <see cref="T:System.Drawing.Pen" /> 类所返回）设置 <see cref="T:System.Drawing.Pens" /> 属性。</exception>
    </member>
    <member name="P:System.Drawing.Pen.DashOffset">
      <summary>获取或设置直线的起点到短划线图案起始处的距离。</summary>
      <returns>直线的起点到短划线图案起始处的距离。</returns>
      <exception cref="T:System.ArgumentException">对不可变的 <see cref="P:System.Drawing.Pen.DashOffset" />（比如由 <see cref="T:System.Drawing.Pen" /> 类所返回）设置 <see cref="T:System.Drawing.Pens" /> 属性。</exception>
    </member>
    <member name="P:System.Drawing.Pen.DashPattern">
      <summary>获取或设置自定义的短划线和空白区域的数组。</summary>
      <returns>实数数组，指定虚线中交替出现的短划线和空白区域的长度。</returns>
      <exception cref="T:System.ArgumentException">对不可变的 <see cref="P:System.Drawing.Pen.DashPattern" />（比如由 <see cref="T:System.Drawing.Pen" /> 类所返回）设置 <see cref="T:System.Drawing.Pens" /> 属性。</exception>
    </member>
    <member name="P:System.Drawing.Pen.DashStyle">
      <summary>获取或设置用于通过此 <see cref="T:System.Drawing.Pen" /> 绘制的虚线的样式。</summary>
      <returns>一个 <see cref="T:System.Drawing.Drawing2D.DashStyle" />，表示用于通过此 <see cref="T:System.Drawing.Pen" /> 绘制的虚线的样式。</returns>
      <exception cref="T:System.ArgumentException">对不可变的 <see cref="P:System.Drawing.Pen.DashStyle" />（比如由 <see cref="T:System.Drawing.Pen" /> 类所返回）设置 <see cref="T:System.Drawing.Pens" /> 属性。</exception>
    </member>
    <member name="M:System.Drawing.Pen.Dispose">
      <summary>释放此 <see cref="T:System.Drawing.Pen" /> 使用的所有资源。</summary>
    </member>
    <member name="P:System.Drawing.Pen.EndCap">
      <summary>获取或设置要在通过此 <see cref="T:System.Drawing.Pen" /> 绘制的直线终点使用的线帽样式。</summary>
      <returns>
        <see cref="T:System.Drawing.Drawing2D.LineCap" /> 值之一，表示在通过此 <see cref="T:System.Drawing.Pen" /> 绘制的直线终点使用的线帽样式。</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">指定值不是 <see cref="T:System.Drawing.Drawing2D.LineCap" /> 的成员。</exception>
      <exception cref="T:System.ArgumentException">对不可变的 <see cref="P:System.Drawing.Pen.EndCap" />（比如由 <see cref="T:System.Drawing.Pen" /> 类所返回）设置 <see cref="T:System.Drawing.Pens" /> 属性。</exception>
    </member>
    <member name="M:System.Drawing.Pen.Finalize">
      <summary>在垃圾回收将某一对象回收前允许该对象尝试释放资源并执行其他清理操作。</summary>
    </member>
    <member name="P:System.Drawing.Pen.LineJoin">
      <summary>获取或设置通过此 <see cref="T:System.Drawing.Pen" /> 绘制的两条连续直线的端点的联接样式。</summary>
      <returns>一个 <see cref="T:System.Drawing.Drawing2D.LineJoin" />，表示通过此 <see cref="T:System.Drawing.Pen" /> 绘制的两条连续直线的端点的联接样式。</returns>
      <exception cref="T:System.ArgumentException">对不可变的 <see cref="P:System.Drawing.Pen.LineJoin" />（比如由 <see cref="T:System.Drawing.Pen" /> 类所返回）设置 <see cref="T:System.Drawing.Pens" /> 属性。</exception>
    </member>
    <member name="P:System.Drawing.Pen.MiterLimit">
      <summary>获取或设置斜接角上联接宽度的限制。</summary>
      <returns>斜接角上联接宽度的限制。</returns>
      <exception cref="T:System.ArgumentException">对不可变的 <see cref="P:System.Drawing.Pen.MiterLimit" />（比如由 <see cref="T:System.Drawing.Pen" /> 类所返回）设置 <see cref="T:System.Drawing.Pens" /> 属性。</exception>
    </member>
    <member name="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
      <summary>用指定的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 乘以此 <see cref="T:System.Drawing.Pen" /> 的变换矩阵。</summary>
      <param name="matrix">用来乘变换矩阵的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 对象。</param>
    </member>
    <member name="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>按照指定的顺序，用指定的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 乘以此 <see cref="T:System.Drawing.Pen" /> 的变换矩阵。</summary>
      <param name="matrix">用来乘转换矩阵的 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</param>
      <param name="order">执行乘法运算的顺序。</param>
    </member>
    <member name="P:System.Drawing.Pen.PenType">
      <summary>获取用此 <see cref="T:System.Drawing.Pen" /> 绘制的直线的样式。</summary>
      <returns>
        <see cref="T:System.Drawing.Drawing2D.PenType" /> 枚举，指定用此 <see cref="T:System.Drawing.Pen" /> 绘制的直线的样式。</returns>
    </member>
    <member name="M:System.Drawing.Pen.ResetTransform">
      <summary>将此 <see cref="T:System.Drawing.Pen" /> 的几何变换矩阵重置为单位矩阵。</summary>
    </member>
    <member name="M:System.Drawing.Pen.RotateTransform(System.Single)">
      <summary>将局部几何变换旋转指定角度。 此方法将旋转添加到转换前。</summary>
      <param name="angle">旋转角度。</param>
    </member>
    <member name="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>以指定顺序将局部几何变换旋转指定角度。</summary>
      <param name="angle">旋转角度。</param>
      <param name="order">一个 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />，它指定是在后面追加旋转矩阵还是在前面添加旋转矩阵。</param>
    </member>
    <member name="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single)">
      <summary>按指定因子缩放局部几何变换。 此方法将缩放矩阵添加到转换前。</summary>
      <param name="sx">沿 x 轴方向缩放变换的因子。</param>
      <param name="sy">沿 y 轴方向缩放变换的因子。</param>
    </member>
    <member name="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>将局部几何转换以指定顺序缩放指定因子。</summary>
      <param name="sx">沿 x 轴方向缩放变换的因子。</param>
      <param name="sy">沿 y 轴方向缩放转换的因子。</param>
      <param name="order">一个 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />，指定是在后面追加缩放矩阵还是在前面添加缩放矩阵。</param>
    </member>
    <member name="M:System.Drawing.Pen.SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)">
      <summary>设置用于确定线帽样式的值，线帽用于结束通过此 <see cref="T:System.Drawing.Pen" /> 绘制的直线。</summary>
      <param name="startCap">一个 <see cref="T:System.Drawing.Drawing2D.LineCap" />，表示要在通过此 <see cref="T:System.Drawing.Pen" /> 绘制的直线起点使用的线帽样式。</param>
      <param name="endCap">一个 <see cref="T:System.Drawing.Drawing2D.LineCap" />，表示要在通过此 <see cref="T:System.Drawing.Pen" /> 绘制的直线终点使用的线帽样式。</param>
      <param name="dashCap">一个 <see cref="T:System.Drawing.Drawing2D.LineCap" />，表示要在通过此 <see cref="T:System.Drawing.Pen" /> 绘制的虚线起点或终点使用的线帽样式。</param>
    </member>
    <member name="P:System.Drawing.Pen.StartCap">
      <summary>获取或设置在通过此 <see cref="T:System.Drawing.Pen" /> 绘制的直线起点使用的线帽样式。</summary>
      <returns>
        <see cref="T:System.Drawing.Drawing2D.LineCap" /> 值之一，表示在通过此 <see cref="T:System.Drawing.Pen" /> 绘制的直线起点使用的线帽样式。</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">指定值不是 <see cref="T:System.Drawing.Drawing2D.LineCap" /> 的成员。</exception>
      <exception cref="T:System.ArgumentException">对不可变的 <see cref="P:System.Drawing.Pen.StartCap" />（比如由 <see cref="T:System.Drawing.Pen" /> 类所返回）设置 <see cref="T:System.Drawing.Pens" /> 属性。</exception>
    </member>
    <member name="P:System.Drawing.Pen.Transform">
      <summary>获取或设置此 <see cref="T:System.Drawing.Pen" /> 的几何变换的副本。</summary>
      <returns>一个 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 副本，表示此 <see cref="T:System.Drawing.Pen" /> 的几何转换。</returns>
      <exception cref="T:System.ArgumentException">对不可变的 <see cref="P:System.Drawing.Pen.Transform" />（比如由 <see cref="T:System.Drawing.Pen" /> 类所返回）设置 <see cref="T:System.Drawing.Pens" /> 属性。</exception>
    </member>
    <member name="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single)">
      <summary>将局部几何变换平移指定尺寸。 此方法将平移添加到转换前。</summary>
      <param name="dx">X 方向的转换值。</param>
      <param name="dy">Y 方向的转换值。</param>
    </member>
    <member name="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>按指定的顺序将局部几何变换平移指定的尺寸。</summary>
      <param name="dx">X 方向的转换值。</param>
      <param name="dy">Y 方向的转换值。</param>
      <param name="order">应用转换的顺序（在前面添加或在后面追加）。</param>
    </member>
    <member name="P:System.Drawing.Pen.Width">
      <summary>获取或设置此 <see cref="T:System.Drawing.Pen" /> 的宽度，以用于绘图的 <see cref="T:System.Drawing.Graphics" /> 对象为单位。</summary>
      <returns>此 <see cref="T:System.Drawing.Pen" /> 的宽度。</returns>
      <exception cref="T:System.ArgumentException">对不可变的 <see cref="P:System.Drawing.Pen.Width" />（比如由 <see cref="T:System.Drawing.Pen" /> 类所返回）设置 <see cref="T:System.Drawing.Pens" /> 属性。</exception>
    </member>
    <member name="T:System.Drawing.Pens">
      <summary>所有标准颜色的钢笔。 此类不能被继承。</summary>
    </member>
    <member name="P:System.Drawing.Pens.AliceBlue">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.AntiqueWhite">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Aqua">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Aquamarine">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Azure">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Beige">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Bisque">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Black">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.BlanchedAlmond">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Blue">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.BlueViolet">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Brown">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.BurlyWood">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.CadetBlue">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Chartreuse">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Chocolate">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Coral">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.CornflowerBlue">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Cornsilk">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Crimson">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Cyan">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkBlue">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkCyan">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkGoldenrod">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkGray">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkGreen">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkKhaki">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkMagenta">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkOliveGreen">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkOrange">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkOrchid">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkRed">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkSalmon">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkSeaGreen">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkSlateBlue">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkSlateGray">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkTurquoise">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkViolet">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DeepPink">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DeepSkyBlue">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DimGray">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DodgerBlue">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Firebrick">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.FloralWhite">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.ForestGreen">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Fuchsia">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Gainsboro">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.GhostWhite">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Gold">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Goldenrod">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Gray">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Green">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.GreenYellow">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Honeydew">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.HotPink">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.IndianRed">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Indigo">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Ivory">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Khaki">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Lavender">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.LavenderBlush">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.LawnGreen">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.LemonChiffon">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightBlue">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightCoral">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightCyan">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightGoldenrodYellow">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightGray">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightGreen">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightPink">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightSalmon">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightSeaGreen">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightSkyBlue">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightSlateGray">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightSteelBlue">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightYellow">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Lime">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.LimeGreen">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Linen">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Magenta">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Maroon">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumAquamarine">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumBlue">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumOrchid">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumPurple">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumSeaGreen">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumSlateBlue">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumSpringGreen">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumTurquoise">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumVioletRed">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.MidnightBlue">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.MintCream">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.MistyRose">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Moccasin">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.NavajoWhite">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Navy">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.OldLace">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Olive">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.OliveDrab">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Orange">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.OrangeRed">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Orchid">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.PaleGoldenrod">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.PaleGreen">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.PaleTurquoise">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.PaleVioletRed">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.PapayaWhip">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.PeachPuff">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Peru">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Pink">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Plum">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.PowderBlue">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Purple">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Red">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.RosyBrown">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.RoyalBlue">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.SaddleBrown">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Salmon">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.SandyBrown">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.SeaGreen">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.SeaShell">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Sienna">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Silver">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.SkyBlue">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.SlateBlue">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.SlateGray">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Snow">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.SpringGreen">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.SteelBlue">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Tan">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Teal">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Thistle">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Tomato">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Transparent">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Turquoise">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Violet">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Wheat">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.White">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.WhiteSmoke">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Yellow">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.Pens.YellowGreen">
      <summary>系统定义的宽度为 1 的 <see cref="T:System.Drawing.Pen" /> 对象。</summary>
      <returns>设置为系统定义颜色的 <see cref="T:System.Drawing.Pen" /> 对象。</returns>
    </member>
    <member name="T:System.Drawing.Printing.Duplex">
      <summary>指定打印机的双面打印设置。</summary>
    </member>
    <member name="F:System.Drawing.Printing.Duplex.Default">
      <summary>打印机默认的双面打印设置。</summary>
    </member>
    <member name="F:System.Drawing.Printing.Duplex.Horizontal">
      <summary>双面水平打印。</summary>
    </member>
    <member name="F:System.Drawing.Printing.Duplex.Simplex">
      <summary>单面打印。</summary>
    </member>
    <member name="F:System.Drawing.Printing.Duplex.Vertical">
      <summary>双面垂直打印。</summary>
    </member>
    <member name="T:System.Drawing.Printing.InvalidPrinterException">
      <summary>表示当尝试用无效的打印机设置来访问打印机时所引发的异常。</summary>
    </member>
    <member name="M:System.Drawing.Printing.InvalidPrinterException.#ctor(System.Drawing.Printing.PrinterSettings)">
      <summary>初始化 <see cref="T:System.Drawing.Printing.InvalidPrinterException" /> 类的新实例。</summary>
      <param name="settings">指定打印机设置的 <see cref="T:System.Drawing.Printing.PrinterSettings" />。</param>
    </member>
    <member name="M:System.Drawing.Printing.InvalidPrinterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>用序列化数据初始化 <see cref="T:System.Drawing.Printing.InvalidPrinterException" /> 类的新实例。</summary>
      <param name="info">包含有关所引发异常的序列化对象数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">
        <see cref="T:System.Runtime.Serialization.StreamingContext" />，它包含关于源或目标的上下文信息。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">类名为 <see langword="null" /> 或 <see cref="P:System.Exception.HResult" /> 为 0。</exception>
    </member>
    <member name="M:System.Drawing.Printing.InvalidPrinterException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>重写。 使用关于异常的信息设置 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</summary>
      <param name="info">包含有关所引发异常的序列化对象数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">
        <see cref="T:System.Runtime.Serialization.StreamingContext" />，它包含关于源或目标的上下文信息。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="T:System.Drawing.Printing.Margins">
      <summary>指定打印页的边距尺寸。</summary>
    </member>
    <member name="M:System.Drawing.Printing.Margins.#ctor">
      <summary>使用 1 英寸宽的边距初始化 <see cref="T:System.Drawing.Printing.Margins" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Drawing.Printing.Margins.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>使用指定的左边距、右边距、上边距和下边距初始化 <see cref="T:System.Drawing.Printing.Margins" /> 类的新实例。</summary>
      <param name="left">左边距，以百分之一英寸为单位。</param>
      <param name="right">右边距，以百分之一英寸为单位。</param>
      <param name="top">上边距，以百分之一英寸为单位。</param>
      <param name="bottom">下边距，以百分之一英寸为单位。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="left" /> 参数值小于 0。  
或 
<paramref name="right" /> 参数值小于 0。  
或 
<paramref name="top" /> 参数值小于 0。  

或 - 
<paramref name="bottom" /> 参数值小于 0。</exception>
    </member>
    <member name="P:System.Drawing.Printing.Margins.Bottom">
      <summary>获取或设置下边距（以百分之一英寸为单位）。</summary>
      <returns>下边距，以百分之一英寸为单位。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Printing.Margins.Bottom" /> 属性被设置为一个小于 0 的值。</exception>
    </member>
    <member name="M:System.Drawing.Printing.Margins.Clone">
      <summary>逐个成员地检索此对象的重复。</summary>
      <returns>此对象的重复。</returns>
    </member>
    <member name="M:System.Drawing.Printing.Margins.Equals(System.Object)">
      <summary>将此 <see cref="T:System.Drawing.Printing.Margins" /> 与指定的 <see cref="T:System.Object" /> 进行比较，以确定它们是否具有相同的尺寸。</summary>
      <param name="obj">要与此 <see cref="T:System.Drawing.Printing.Margins" /> 进行比较的对象。</param>
      <returns>如果指定的对象为 <see cref="T:System.Drawing.Printing.Margins" /> 并且具有与此 <see cref="P:System.Drawing.Printing.Margins.Top" /> 相同的 <see cref="P:System.Drawing.Printing.Margins.Bottom" />、<see cref="P:System.Drawing.Printing.Margins.Right" />、<see cref="P:System.Drawing.Printing.Margins.Left" /> 和 <see cref="T:System.Drawing.Printing.Margins" /> 值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.Margins.GetHashCode">
      <summary>计算并检索基于左边距、右边距、上边距和下边距宽度的哈希代码。</summary>
      <returns>基于左边距、右边距、上边距和下边距的哈希代码。</returns>
    </member>
    <member name="P:System.Drawing.Printing.Margins.Left">
      <summary>获取或设置左边距宽度（以百分之一英寸为单位）。</summary>
      <returns>左边距宽度（以百分之一英寸为单位）。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Printing.Margins.Left" /> 属性被设置为一个小于 0 的值。</exception>
    </member>
    <member name="M:System.Drawing.Printing.Margins.op_Equality(System.Drawing.Printing.Margins,System.Drawing.Printing.Margins)">
      <summary>将两个 <see cref="T:System.Drawing.Printing.Margins" /> 进行比较，以确定它们是否具有相同的尺寸。</summary>
      <param name="m1">要比较是否相等的第一个 <see cref="T:System.Drawing.Printing.Margins" />。</param>
      <param name="m2">要比较是否相等的第二个 <see cref="T:System.Drawing.Printing.Margins" />。</param>
      <returns>为 <see langword="true" /> 则指示两个边距的 <see cref="P:System.Drawing.Printing.Margins.Left" />、<see cref="P:System.Drawing.Printing.Margins.Right" />、<see cref="P:System.Drawing.Printing.Margins.Top" /> 和 <see cref="P:System.Drawing.Printing.Margins.Bottom" /> 属性具有相同的值；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.Margins.op_Inequality(System.Drawing.Printing.Margins,System.Drawing.Printing.Margins)">
      <summary>将两个 <see cref="T:System.Drawing.Printing.Margins" /> 进行比较，以确定它们的宽度是否不相等。</summary>
      <param name="m1">要比较是否不相等的第一个 <see cref="T:System.Drawing.Printing.Margins" />。</param>
      <param name="m2">要比较是否不相等的第二个 <see cref="T:System.Drawing.Printing.Margins" />。</param>
      <returns>为 <see langword="true" /> 则指示两个边距的 <see cref="P:System.Drawing.Printing.Margins.Left" />、<see cref="P:System.Drawing.Printing.Margins.Right" />、<see cref="P:System.Drawing.Printing.Margins.Top" /> 或 <see cref="P:System.Drawing.Printing.Margins.Bottom" /> 属性是否不相等；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.Margins.Right">
      <summary>获取或设置右边距宽度（以百分之一英寸为单位）。</summary>
      <returns>右边距宽度（以百分之一英寸为单位）。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Printing.Margins.Right" /> 属性被设置为一个小于 0 的值。</exception>
    </member>
    <member name="P:System.Drawing.Printing.Margins.Top">
      <summary>获取或设置上边距宽度（以百分之一英寸为单位）。</summary>
      <returns>上边距宽度（以百分之一英寸为单位）。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Printing.Margins.Top" /> 属性被设置为一个小于 0 的值。</exception>
    </member>
    <member name="M:System.Drawing.Printing.Margins.ToString">
      <summary>将 <see cref="T:System.Drawing.Printing.Margins" /> 转换为字符串。</summary>
      <returns>
        <see cref="T:System.String" /> 的 <see cref="T:System.Drawing.Printing.Margins" /> 表示形式。</returns>
    </member>
    <member name="T:System.Drawing.Printing.PageSettings">
      <summary>指定应用于单页打印的设置。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PageSettings.#ctor">
      <summary>使用默认打印机初始化 <see cref="T:System.Drawing.Printing.PageSettings" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PageSettings.#ctor(System.Drawing.Printing.PrinterSettings)">
      <summary>使用指定打印机初始化 <see cref="T:System.Drawing.Printing.PageSettings" /> 类的新实例。</summary>
      <param name="printerSettings">
        <see cref="T:System.Drawing.Printing.PrinterSettings" />，它描述要使用的打印机。</param>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.Bounds">
      <summary>获取页面的大小，并且考虑由 <see cref="P:System.Drawing.Printing.PageSettings.Landscape" /> 属性指定的页面方向。</summary>
      <returns>
        <see cref="T:System.Drawing.Rectangle" />，表示页面的长度和宽度（以百分之一英寸为单位）。</returns>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 属性中命名的打印机不存在。</exception>
    </member>
    <member name="M:System.Drawing.Printing.PageSettings.Clone">
      <summary>创建此 <see cref="T:System.Drawing.Printing.PageSettings" /> 的副本。</summary>
      <returns>该对象的一个副本。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.Color">
      <summary>获取或设置一个值，该值指示是否应以彩色打印该页。</summary>
      <returns>如果该页应以彩色打印，则为 <see langword="true" />；反之，则为 <see langword="false" />。 默认值由打印机决定。</returns>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 属性中命名的打印机不存在。</exception>
    </member>
    <member name="M:System.Drawing.Printing.PageSettings.CopyToHdevmode(System.IntPtr)">
      <summary>将相关信息从 <see cref="T:System.Drawing.Printing.PageSettings" /> 复制到指定的 <see langword="DEVMODE" /> 结构。</summary>
      <param name="hdevmode">Win32 <see langword="DEVMODE" /> 结构的句柄。</param>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 属性中指定的打印机不存在或者没有已安装的默认打印机。</exception>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.HardMarginX">
      <summary>获取页面左侧硬页边距的 X 坐标（以百分之一英寸为单位）。</summary>
      <returns>左侧硬页边距的 X 坐标（以百分之一英寸为单位）。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.HardMarginY">
      <summary>获取页面上方硬页边距的 Y 坐标（以百分之一英寸为单位）。</summary>
      <returns>页面上方硬页边距的 Y 坐标（以百分之一英寸为单位）。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.Landscape">
      <summary>获取或设置一个值，该值指示是横向还是纵向打印该页。</summary>
      <returns>如果页面应横向打印，则为 <see langword="true" />；反之，则为 <see langword="false" />。 默认值由打印机决定。</returns>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 属性中命名的打印机不存在。</exception>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.Margins">
      <summary>获取或设置该页的边距。</summary>
      <returns>
        <see cref="T:System.Drawing.Printing.Margins" />，表示页边距（以百分之一英寸为单位）。 默认情况下各边的边距都为 1 英寸。</returns>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 属性中命名的打印机不存在。</exception>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.PaperSize">
      <summary>获取或设置该页的纸张大小。</summary>
      <returns>
        <see cref="T:System.Drawing.Printing.PaperSize" />，它表示纸张大小。 默认值为打印机的默认纸张大小。</returns>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 属性中指定的打印机不存在或者没有已安装的默认打印机。</exception>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.PaperSource">
      <summary>获取或设置该页的纸张来源；例如打印机的上层纸盒。</summary>
      <returns>
        <see cref="T:System.Drawing.Printing.PaperSource" />，它指定纸张的来源。 默认值为打印机的默认纸张来源。</returns>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 属性中指定的打印机不存在或者没有已安装的默认打印机。</exception>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.PrintableArea">
      <summary>获取打印机的可打印页面区域的界限。</summary>
      <returns>
        <see cref="T:System.Drawing.RectangleF" /> 表示打印机可在其中打印的区域的长度和宽度（以百分之一英寸为单位）。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.PrinterResolution">
      <summary>获取或设置该页的打印机分辨率。</summary>
      <returns>
        <see cref="T:System.Drawing.Printing.PrinterResolution" />，它指定该页的打印机分辨率。 默认值为打印机的默认分辨率。</returns>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 属性中指定的打印机不存在或者没有已安装的默认打印机。</exception>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.PrinterSettings">
      <summary>获取或设置与该页关联的打印机设置。</summary>
      <returns>
        <see cref="T:System.Drawing.Printing.PrinterSettings" />，它表示与该页关联的打印机设置。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PageSettings.SetHdevmode(System.IntPtr)">
      <summary>将相关信息从指定的 <see langword="DEVMODE" /> 结构复制到 <see cref="T:System.Drawing.Printing.PageSettings" />。</summary>
      <param name="hdevmode">Win32 <see langword="DEVMODE" /> 结构的句柄。</param>
      <exception cref="T:System.ArgumentException">打印机句柄无效。</exception>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 属性中指定的打印机不存在或者没有已安装的默认打印机。</exception>
    </member>
    <member name="M:System.Drawing.Printing.PageSettings.ToString">
      <summary>将 <see cref="T:System.Drawing.Printing.PageSettings" /> 转换为字符串形式。</summary>
      <returns>显示 <see cref="T:System.Drawing.Printing.PageSettings" /> 的各种属性设置的字符串。</returns>
    </member>
    <member name="T:System.Drawing.Printing.PaperKind">
      <summary>指定标准纸张大小。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A2">
      <summary>A2 纸（420 mm × 594 mm）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A3">
      <summary>A3 纸（297 mm × 420 mm）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A3Extra">
      <summary>A3 extra 纸（322 mm × 445 mm）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A3ExtraTransverse">
      <summary>A3 extra transverse 纸（322 mm × 445 mm）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A3Rotated">
      <summary>A3 rotated 纸（420 mm × 297 mm）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A3Transverse">
      <summary>A3 transverse 纸（297 mm × 420 mm）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A4">
      <summary>A4 纸（210 mm × 297 mm）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A4Extra">
      <summary>A4 extra 纸（236 mm × 322 mm）。 此值特定于 PostScript 驱动程序，且仅由 Linotronic 打印机使用以帮助节省纸张。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A4Plus">
      <summary>A4 plus 纸（210 mm × 330 mm）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A4Rotated">
      <summary>A4 rotated 纸（297 mm × 210 mm）。 需要 Windows 98、Windows NT 4.0 或更高版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A4Small">
      <summary>A4 small 纸（210 mm × 297 mm）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A4Transverse">
      <summary>A4 transverse 纸（210 mm × 297mm）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A5">
      <summary>A5 纸（148 mm × 210 mm）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A5Extra">
      <summary>A5 extra 纸（174 mm × 235 mm）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A5Rotated">
      <summary>A5 rotated 纸（210 mm × 148 mm）。 需要 Windows 98、Windows NT 4.0 或更高版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A5Transverse">
      <summary>A5 transverse 纸（148 mm × 210 mm）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A6">
      <summary>A6 纸（105 mm × 148 mm)。 需要 Windows 98、Windows NT 4.0 或更高版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A6Rotated">
      <summary>A6 rotated 纸（148 mm × 105 mm）。 需要 Windows 98、Windows NT 4.0 或更高版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.APlus">
      <summary>SuperA/SuperA/A4 纸（227 mm × 356 mm）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B4">
      <summary>B4 纸（250 mm × 353 mm）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B4Envelope">
      <summary>B4 信封（250 mm × 353 mm）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B4JisRotated">
      <summary>JIS B4 rotated 纸（364 mm × 257 mm）。 需要 Windows 98、Windows NT 4.0 或更高版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B5">
      <summary>B5 纸（176 mm × 250 mm）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B5Envelope">
      <summary>B5 信封（176 mm × 250 mm）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B5Extra">
      <summary>ISO B5 extra 纸（201 mm × 276 mm）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B5JisRotated">
      <summary>JIS B5 rotated 纸（257 mm × 182 mm）。 需要 Windows 98、Windows NT 4.0 或更高版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B5Transverse">
      <summary>JIS B5 transverse 纸（182 mm × 257 mm）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B6Envelope">
      <summary>B6 信封（176 mm × 125 mm）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B6Jis">
      <summary>JIS B6 纸（128 mm × 182 mm）。 需要 Windows 98、Windows NT 4.0 或更高版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B6JisRotated">
      <summary>JIS B6 纸（182 mm × 128 mm）。 需要 Windows 98、Windows NT 4.0 或更高版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.BPlus">
      <summary>SuperB/SuperB/A3 纸（305 mm × 487 mm）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.C3Envelope">
      <summary>C3 信封（324 mm × 458 mm）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.C4Envelope">
      <summary>C4 信封（229 mm × 324 mm）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.C5Envelope">
      <summary>C5 信封（162 mm × 229 mm）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.C65Envelope">
      <summary>C65 信封（114 mm × 229 mm）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.C6Envelope">
      <summary>C6 信封（114 mm × 162 mm）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.CSheet">
      <summary>C 纸（17 英寸 × 22 英寸）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Custom">
      <summary>纸张大小由用户定义。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.DLEnvelope">
      <summary>DL 信封（110 mm × 220 mm）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.DSheet">
      <summary>D 纸（22 英寸 × 34 英寸）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.ESheet">
      <summary>E 纸（34 英寸 × 44 英寸）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Executive">
      <summary>Executive 纸（7.25 英寸 × 10.5 英寸）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Folio">
      <summary>对开纸（8.5 英寸 × 13 英寸）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.GermanLegalFanfold">
      <summary>German legal fanfold（8.5 英寸 × 13 英寸）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.GermanStandardFanfold">
      <summary>German standard fanfold（8.5 英寸 × 12 英寸）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.InviteEnvelope">
      <summary>邀请信封（220 mm × 220 mm）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.IsoB4">
      <summary>ISO B4（250 mm × 353 mm）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.ItalyEnvelope">
      <summary>意大利信封（110 mm × 230 mm）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseDoublePostcard">
      <summary>Japanese double postcard（200 mm × 148 mm）。 需要 Windows 98、Windows NT 4.0 或更高版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseDoublePostcardRotated">
      <summary>Japanese rotated double postcard（148 mm × 200 mm）。 需要 Windows 98、Windows NT 4.0 或更高版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeChouNumber3">
      <summary>Japanese Chou #3 信封。 需要 Windows 98、Windows NT 4.0 或更高版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeChouNumber3Rotated">
      <summary>Japanese rotated Chou #3 信封。 需要 Windows 98、Windows NT 4.0 或更高版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeChouNumber4">
      <summary>Japanese Chou #4 信封。 需要 Windows 98、Windows NT 4.0 或更高版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeChouNumber4Rotated">
      <summary>Japanese rotated Chou #4 信封。 需要 Windows 98、Windows NT 4.0 或更高版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeKakuNumber2">
      <summary>Japanese Kaku #2 信封。 需要 Windows 98、Windows NT 4.0 或更高版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeKakuNumber2Rotated">
      <summary>Japanese rotated Kaku #2 信封。 需要 Windows 98、Windows NT 4.0 或更高版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeKakuNumber3">
      <summary>Japanese Kaku #3 信封。 需要 Windows 98、Windows NT 4.0 或更高版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeKakuNumber3Rotated">
      <summary>Japanese rotated Kaku #3 信封。 需要 Windows 98、Windows NT 4.0 或更高版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeYouNumber4">
      <summary>Japanese You #4 信封。 需要 Windows 98、Windows NT 4.0 或更高版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeYouNumber4Rotated">
      <summary>Japanese You #4 rotated 信封。 需要 Windows 98、Windows NT 4.0 或更高版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapanesePostcard">
      <summary>Japanese postcard（100 mm × 148 mm）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapanesePostcardRotated">
      <summary>Japanese rotated postcard（148 mm × 100 mm）。 需要 Windows 98、Windows NT 4.0 或更高版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Ledger">
      <summary>Ledger 纸（17 英寸 × 11 英寸）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Legal">
      <summary>Legal 纸（8.5 英寸 × 14 英寸）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LegalExtra">
      <summary>Legal extra 纸（9.275 英寸 × 15 英寸）。 此值特定于 PostScript 驱动程序，且仅由 Linotronic 打印机使用，以便节省纸张。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Letter">
      <summary>Letter 纸（8.5 英寸 × 11 英寸）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LetterExtra">
      <summary>Letter extra 纸（9.275 英寸 × 12 英寸）。 此值特定于 PostScript 驱动程序，且仅由 Linotronic 打印机使用，以便节省纸张。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LetterExtraTransverse">
      <summary>Letter extra transverse 纸（9.275 英寸 × 12 英寸）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LetterPlus">
      <summary>Letter plus 纸（8.5 英寸 × 12.69 英寸）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LetterRotated">
      <summary>Letter rotated 纸（11 英寸 × 8.5 英寸）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LetterSmall">
      <summary>Letter small 纸（8.5 英寸 × 11 英寸）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LetterTransverse">
      <summary>Letter transverse 纸（8.275 英寸 × 11 英寸）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.MonarchEnvelope">
      <summary>Monarch Envelope（3.875 英寸 × 7.5 英寸）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Note">
      <summary>Note 纸（8.5 英寸 × 11 英寸）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Number10Envelope">
      <summary>#10 信封（4.125 英寸 × 9.5 英寸）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Number11Envelope">
      <summary>#11 信封（4.5 英寸 × 10.375 英寸）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Number12Envelope">
      <summary>#12 信封（4.75 英寸 × 11 英寸）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Number14Envelope">
      <summary>#14 信封（5 英寸 × 11.5 英寸）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Number9Envelope">
      <summary>#9 信封（3.875 英寸 × 8.875 英寸）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PersonalEnvelope">
      <summary>6 3/4 信封（3.625 英寸 × 6.5 英寸）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Prc16K">
      <summary>16K 纸（146 mm × 215 mm）。 需要 Windows 98、Windows NT 4.0 或更高版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Prc16KRotated">
      <summary>16K rotated 纸（146 mm × 215 mm）。 需要 Windows 98、Windows NT 4.0 或更高版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Prc32K">
      <summary>32K 纸（97 mm × 151 mm）。 需要 Windows 98、Windows NT 4.0 或更高版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Prc32KBig">
      <summary>32K big 纸（97 mm × 151 mm）。 需要 Windows 98、Windows NT 4.0 或更高版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Prc32KBigRotated">
      <summary>32K big rotated 纸（97 mm × 151 mm）。 需要 Windows 98、Windows NT 4.0 或更高版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Prc32KRotated">
      <summary>32K rotated 纸（97 mm × 151 mm）。 需要 Windows 98、Windows NT 4.0 或更高版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber1">
      <summary>#1 信封（102 mm × 165 mm）。 需要 Windows 98、Windows NT 4.0 或更高版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber10">
      <summary>#10 信封（324 mm × 458 mm）。 需要 Windows 98、Windows NT 4.0 或更高版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber10Rotated">
      <summary>#10 rotated 信封（458 mm × 324 mm）。 需要 Windows 98、Windows NT 4.0 或更高版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber1Rotated">
      <summary>#1 rotated 信封（165 mm × 102 mm）。 需要 Windows 98、Windows NT 4.0 或更高版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber2">
      <summary>#2 信封（102 mm × 176 mm）。 需要 Windows 98、Windows NT 4.0 或更高版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber2Rotated">
      <summary>#2 rotated 信封（176 mm × 102 mm）。 需要 Windows 98、Windows NT 4.0 或更高版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber3">
      <summary>#3 信封（125 mm × 176 mm）。 需要 Windows 98、Windows NT 4.0 或更高版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber3Rotated">
      <summary>#3 rotated 信封（176 mm × 125 mm）。 需要 Windows 98、Windows NT 4.0 或更高版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber4">
      <summary>#4 信封（110 mm × 208 mm）。 需要 Windows 98、Windows NT 4.0 或更高版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber4Rotated">
      <summary>#4 rotated 信封（208 mm × 110 mm）。 需要 Windows 98、Windows NT 4.0 或更高版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber5">
      <summary>#5 信封（110 mm × 220 mm）。 需要 Windows 98、Windows NT 4.0 或更高版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber5Rotated">
      <summary>Envelope #5 rotated 信封（220 mm × 110 mm）。 需要 Windows 98、Windows NT 4.0 或更高版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber6">
      <summary>#6 信封（120 mm × 230 mm）。 需要 Windows 98、Windows NT 4.0 或更高版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber6Rotated">
      <summary>#6 rotated 信封（230 mm × 120 mm）。 需要 Windows 98、Windows NT 4.0 或更高版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber7">
      <summary>#7 信封（160 mm × 230 mm）。 需要 Windows 98、Windows NT 4.0 或更高版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber7Rotated">
      <summary>#7 rotated 信封（230 mm × 160 mm）。 需要 Windows 98、Windows NT 4.0 或更高版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber8">
      <summary>#8 信封（120 mm × 309 mm）。 需要 Windows 98、Windows NT 4.0 或更高版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber8Rotated">
      <summary>#8 rotated 信封（309 mm × 120 mm）。 需要 Windows 98、Windows NT 4.0 或更高版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber9">
      <summary>#9 信封（229 mm × 324 mm）。 需要 Windows 98、Windows NT 4.0 或更高版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber9Rotated">
      <summary>#9 rotated 信封（324 mm × 229 mm）。 需要 Windows 98、Windows NT 4.0 或更高版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Quarto">
      <summary>四开纸（215 mm × 275 mm）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Standard10x11">
      <summary>Standard 纸（10 英寸 × 11 英寸）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Standard10x14">
      <summary>Standard 纸（10 英寸 × 14 英寸）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Standard11x17">
      <summary>Standard 纸（11 英寸 × 17 英寸）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Standard12x11">
      <summary>Standard 纸（12 英寸 × 11 英寸）。 需要 Windows 98、Windows NT 4.0 或更高版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Standard15x11">
      <summary>Standard 纸（15 英寸 × 11 英寸）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Standard9x11">
      <summary>Standard 纸（9 英寸 × 11 英寸）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Statement">
      <summary>Statement 纸（5.5 英寸 × 8.5 英寸）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Tabloid">
      <summary>Tabloid 纸（11 英寸 × 17 英寸）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.TabloidExtra">
      <summary>Tabloid extra 纸（11.69 英寸 × 18 英寸）。 此值特定于 PostScript 驱动程序，且仅由 Linotronic 打印机使用，以便节省纸张。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.USStandardFanfold">
      <summary>US standard fanfold（14.875 英寸 × 11 英寸）。</summary>
    </member>
    <member name="T:System.Drawing.Printing.PaperSize">
      <summary>指定纸张大小。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PaperSize.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.Printing.PaperSize" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PaperSize.#ctor(System.String,System.Int32,System.Int32)">
      <summary>初始化 <see cref="T:System.Drawing.Printing.PaperSize" /> 类的新实例。</summary>
      <param name="name">纸张名称。</param>
      <param name="width">纸张宽度，以百分之一英寸为单位。</param>
      <param name="height">纸张高度，以百分之一英寸为单位。</param>
    </member>
    <member name="P:System.Drawing.Printing.PaperSize.Height">
      <summary>获取或设置纸张的高度（以百分之一英寸为单位）。</summary>
      <returns>纸张高度，以百分之一英寸为单位。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Printing.PaperSize.Kind" /> 属性没有设置为 <see cref="F:System.Drawing.Printing.PaperKind.Custom" />。</exception>
    </member>
    <member name="P:System.Drawing.Printing.PaperSize.Kind">
      <summary>获取纸张的类型。</summary>
      <returns>
        <see cref="T:System.Drawing.Printing.PaperKind" /> 值之一。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Printing.PaperSize.Kind" /> 属性没有设置为 <see cref="F:System.Drawing.Printing.PaperKind.Custom" />。</exception>
    </member>
    <member name="P:System.Drawing.Printing.PaperSize.PaperName">
      <summary>获取或设置纸张类型的名称。</summary>
      <returns>纸张类型的名称。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Printing.PaperSize.Kind" /> 属性没有设置为 <see cref="F:System.Drawing.Printing.PaperKind.Custom" />。</exception>
    </member>
    <member name="P:System.Drawing.Printing.PaperSize.RawKind">
      <summary>获取或设置表示 <see cref="T:System.Drawing.Printing.PaperSize" /> 值之一或自定义值的整数。</summary>
      <returns>表示 <see cref="T:System.Drawing.Printing.PaperSize" /> 值之一或自定义值的整数。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PaperSize.ToString">
      <summary>以字符串形式提供有关 <see cref="T:System.Drawing.Printing.PaperSize" /> 的信息。</summary>
      <returns>一个字符串。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PaperSize.Width">
      <summary>获取或设置纸张宽度（以百分之一英寸为单位）。</summary>
      <returns>纸张宽度，以百分之一英寸为单位。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Printing.PaperSize.Kind" /> 属性没有设置为 <see cref="F:System.Drawing.Printing.PaperKind.Custom" />。</exception>
    </member>
    <member name="T:System.Drawing.Printing.PaperSource">
      <summary>指定给打印机送纸的纸盒。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PaperSource.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.Printing.PaperSource" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Drawing.Printing.PaperSource.Kind">
      <summary>获取纸张来源。</summary>
      <returns>
        <see cref="T:System.Drawing.Printing.PaperSourceKind" /> 值之一。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PaperSource.RawKind">
      <summary>获取或设置表示 <see cref="T:System.Drawing.Printing.PaperSourceKind" /> 值之一或自定义值的整数。</summary>
      <returns>表示 <see cref="T:System.Drawing.Printing.PaperSourceKind" /> 值之一或自定义值的整数值。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PaperSource.SourceName">
      <summary>获取或设置纸张来源的名称。</summary>
      <returns>纸张来源的名称。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PaperSource.ToString">
      <summary>以字符串形式提供有关 <see cref="T:System.Drawing.Printing.PaperSource" /> 的信息。</summary>
      <returns>一个字符串。</returns>
    </member>
    <member name="T:System.Drawing.Printing.PaperSourceKind">
      <summary>标准的纸张来源。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.AutomaticFeed">
      <summary>自动送入的纸张。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Cassette">
      <summary>卡式纸盒。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Custom">
      <summary>打印机特定的纸张来源。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Envelope">
      <summary>信封。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.FormSource">
      <summary>打印机的默认送纸盒。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.LargeCapacity">
      <summary>打印机的大容量纸盒。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.LargeFormat">
      <summary>大纸。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Lower">
      <summary>打印机的下层纸盒。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Manual">
      <summary>以手动方式送入的纸张。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.ManualFeed">
      <summary>以手动方式送入的信封。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Middle">
      <summary>打印机的中层纸盒。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.SmallFormat">
      <summary>小纸。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.TractorFeed">
      <summary>牵引器送纸。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Upper">
      <summary>打印机的上层纸盒（如果打印机只有一个纸盒，则是默认纸盒）。</summary>
    </member>
    <member name="T:System.Drawing.Printing.PreviewPageInfo">
      <summary>为单页指定打印预览信息。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPageInfo.#ctor(System.Drawing.Image,System.Drawing.Size)">
      <summary>初始化 <see cref="T:System.Drawing.Printing.PreviewPageInfo" /> 类的新实例。</summary>
      <param name="image">打印页的图像。</param>
      <param name="physicalSize">打印页的大小，以百分之一英寸为单位。</param>
    </member>
    <member name="P:System.Drawing.Printing.PreviewPageInfo.Image">
      <summary>获取打印页的图像。</summary>
      <returns>表示打印页的 <see cref="T:System.Drawing.Image" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PreviewPageInfo.PhysicalSize">
      <summary>获取打印页的大小（以百分之一英寸为单位）。</summary>
      <returns>
        <see cref="T:System.Drawing.Size" />，它指定打印页的大小（以百分之一英寸为单位）。</returns>
    </member>
    <member name="T:System.Drawing.Printing.PreviewPrintController">
      <summary>指定一个打印控制器，它在屏幕上将文档显示为一系列图像。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPrintController.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.Printing.PreviewPrintController" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPrintController.GetPreviewPageInfo">
      <summary>将文档中的页捕获为一系列图像。</summary>
      <returns>
        <see cref="T:System.Drawing.Printing.PreviewPageInfo" /> 类型数组，它包含的 <see cref="T:System.Drawing.Printing.PrintDocument" /> 的各页为一系列的图像。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PreviewPrintController.IsPreview">
      <summary>获取一个值，该值指示此控制器是否用于打印预览。</summary>
      <returns>在所有情况下均为 <see langword="true" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPrintController.OnEndPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
      <summary>完成控制序列，该序列确定何时以及如何预览打印文档中的页。</summary>
      <param name="document">
        <see cref="T:System.Drawing.Printing.PrintDocument" />，它表示所预览的文档。</param>
      <param name="e">
        <see cref="T:System.Drawing.Printing.PrintPageEventArgs" />，它包含有关如何预览打印文档中某页的数据。</param>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPrintController.OnEndPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
      <summary>完成控制序列，该序列确定何时以及如何预览打印文档。</summary>
      <param name="document">
        <see cref="T:System.Drawing.Printing.PrintDocument" />，它表示所预览的文档。</param>
      <param name="e">
        <see cref="T:System.Drawing.Printing.PrintEventArgs" />，它包含有关如何对打印文档进行预览的数据。</param>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPrintController.OnStartPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
      <summary>开始控制序列，该序列确定何时以及如何预览打印文档中的页。</summary>
      <param name="document">
        <see cref="T:System.Drawing.Printing.PrintDocument" />，它表示所预览的文档。</param>
      <param name="e">
        <see cref="T:System.Drawing.Printing.PrintPageEventArgs" />，它包含有关如何预览打印文档中某页的数据。 最初，该参数的 <see cref="P:System.Drawing.Printing.PrintPageEventArgs.Graphics" /> 属性将为 <see langword="null" />。 此方法所返回的值被用于对此属性进行设置。</param>
      <returns>
        <see cref="T:System.Drawing.Graphics" />，它表示 <see cref="T:System.Drawing.Printing.PrintDocument" /> 中的一页。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPrintController.OnStartPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
      <summary>开始控制序列，该序列确定何时以及如何预览打印文档。</summary>
      <param name="document">
        <see cref="T:System.Drawing.Printing.PrintDocument" />，它表示所预览的文档。</param>
      <param name="e">
        <see cref="T:System.Drawing.Printing.PrintEventArgs" />，它包含有关如何打印文档的数据。</param>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 属性中命名的打印机不存在。</exception>
    </member>
    <member name="P:System.Drawing.Printing.PreviewPrintController.UseAntiAlias">
      <summary>获取或设置一个值，该值指示显示打印预览时是否使用抗锯齿效果。</summary>
      <returns>如果打印预览使用抗锯齿效果，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrintAction">
      <summary>指定正在进行的打印操作的类型。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintAction.PrintToFile">
      <summary>打印操作为打印到文件。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintAction.PrintToPreview">
      <summary>打印操作为打印预览。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintAction.PrintToPrinter">
      <summary>打印操作为打印到打印机。</summary>
    </member>
    <member name="T:System.Drawing.Printing.PrintController">
      <summary>控制在从 Windows 窗体应用程序打印时如何打印文档。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintController.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.Printing.PrintController" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrintController.IsPreview">
      <summary>获取一个值，该值指示 <see cref="T:System.Drawing.Printing.PrintController" /> 是否用于打印预览。</summary>
      <returns>在所有情况下均为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintController.OnEndPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
      <summary>在派生类中重写时，完成一个确定何时以及如何打印文档页的控制序列。</summary>
      <param name="document">
        <see cref="T:System.Drawing.Printing.PrintDocument" />，它表示当前正在打印的文档。</param>
      <param name="e">包含事件数据的 <see cref="T:System.Drawing.Printing.PrintPageEventArgs" />。</param>
    </member>
    <member name="M:System.Drawing.Printing.PrintController.OnEndPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
      <summary>在派生类中重写时，完成这样一个控制序列，它确定何时以及如何打印文档。</summary>
      <param name="document">
        <see cref="T:System.Drawing.Printing.PrintDocument" />，它表示当前正在打印的文档。</param>
      <param name="e">包含事件数据的 <see cref="T:System.Drawing.Printing.PrintEventArgs" />。</param>
    </member>
    <member name="M:System.Drawing.Printing.PrintController.OnStartPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
      <summary>在派生类中重写时，开始一个确定何时以及如何对文档页进行打印的控制序列。</summary>
      <param name="document">
        <see cref="T:System.Drawing.Printing.PrintDocument" />，它表示当前正在打印的文档。</param>
      <param name="e">包含事件数据的 <see cref="T:System.Drawing.Printing.PrintPageEventArgs" />。</param>
      <returns>
        <see cref="T:System.Drawing.Graphics" />，它表示 <see cref="T:System.Drawing.Printing.PrintDocument" /> 中的一页。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintController.OnStartPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
      <summary>在派生类中重写时，开始一个确定何时以及如何对文档进行打印的控制序列。</summary>
      <param name="document">
        <see cref="T:System.Drawing.Printing.PrintDocument" />，它表示当前正在打印的文档。</param>
      <param name="e">包含事件数据的 <see cref="T:System.Drawing.Printing.PrintEventArgs" />。</param>
    </member>
    <member name="T:System.Drawing.Printing.PrintDocument">
      <summary>从 Windows 窗体应用程序打印时，定义一种可重用的可发送到打印机上的对象。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.Printing.PrintDocument" /> 类的新实例。</summary>
    </member>
    <member name="E:System.Drawing.Printing.PrintDocument.BeginPrint">
      <summary>在调用 <see cref="M:System.Drawing.Printing.PrintDocument.Print" /> 方法之后、打印文档首页之前发生。</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrintDocument.DefaultPageSettings">
      <summary>获取或设置页设置，这些页设置用作要打印的所有页的默认设置。</summary>
      <returns>为文档指定默认页设置的 <see cref="T:System.Drawing.Printing.PageSettings" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintDocument.DocumentName">
      <summary>打印文档时获取或设置要显示的文档名称(例如，在打印状态对话框中或在打印机队列中)。</summary>
      <returns>打印文档时要显示的文档名。 默认情况下为“文档”。</returns>
    </member>
    <member name="E:System.Drawing.Printing.PrintDocument.EndPrint">
      <summary>打印完文档的最后一页时发生。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.OnBeginPrint(System.Drawing.Printing.PrintEventArgs)">
      <summary>引发 <see cref="E:System.Drawing.Printing.PrintDocument.BeginPrint" /> 事件。 该事件在调用 <see cref="M:System.Drawing.Printing.PrintDocument.Print" /> 方法之后并在打印文档的第一页之前被调用。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Drawing.Printing.PrintEventArgs" />。</param>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.OnEndPrint(System.Drawing.Printing.PrintEventArgs)">
      <summary>引发 <see cref="E:System.Drawing.Printing.PrintDocument.EndPrint" /> 事件。 该事件在文档的最后一页打印完后被调用。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Drawing.Printing.PrintEventArgs" />。</param>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)">
      <summary>引发 <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> 事件。 该事件在某页打印之前被调用。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Drawing.Printing.PrintPageEventArgs" />。</param>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.OnQueryPageSettings(System.Drawing.Printing.QueryPageSettingsEventArgs)">
      <summary>引发 <see cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" /> 事件。 该事件正好在每个 <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> 事件之前被调用。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Drawing.Printing.QueryPageSettingsEventArgs" />。</param>
    </member>
    <member name="P:System.Drawing.Printing.PrintDocument.OriginAtMargins">
      <summary>获取或设置一个值，该值指示与页关联的图形对象的位置是位于用户指定边距内，还是位于该页可打印区域的左上角。</summary>
      <returns>如果图形起始于页面边距，则为 <see langword="true" />；如果图形原点位于该页可打印区域的左上角，则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.Print">
      <summary>开始文档的打印进程。</summary>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 属性中命名的打印机不存在。</exception>
    </member>
    <member name="P:System.Drawing.Printing.PrintDocument.PrintController">
      <summary>获取或设置指导打印进程的打印控制器。</summary>
      <returns>指导打印进程的 <see cref="T:System.Drawing.Printing.PrintController" />。 默认情况下为 <see cref="T:System.Windows.Forms.PrintControllerWithStatusDialog" /> 类的一个新实例。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintDocument.PrinterSettings">
      <summary>获取或设置对文档进行打印的打印机。</summary>
      <returns>
        <see cref="T:System.Drawing.Printing.PrinterSettings" />，它指定在何处以及如何打印文档。 默认为 <see cref="T:System.Drawing.Printing.PrinterSettings" />，其属性均设置为默认值。</returns>
    </member>
    <member name="E:System.Drawing.Printing.PrintDocument.PrintPage">
      <summary>当需要为当前页打印的输出时发生。</summary>
    </member>
    <member name="E:System.Drawing.Printing.PrintDocument.QueryPageSettings">
      <summary>在 <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> 事件的紧面前发生。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.ToString">
      <summary>以字符串形式提供有关打印文档的信息。</summary>
      <returns>一个字符串。</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrinterResolution">
      <summary>表示打印机支持的分辨率。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterResolution.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.Printing.PrinterResolution" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterResolution.Kind">
      <summary>获取或设置打印机分辨率。</summary>
      <returns>
        <see cref="T:System.Drawing.Printing.PrinterResolutionKind" /> 值之一。</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">分配的值不是 <see cref="T:System.Drawing.Printing.PrinterResolutionKind" /> 枚举的成员。</exception>
    </member>
    <member name="M:System.Drawing.Printing.PrinterResolution.ToString">
      <summary>此成员重写 <see cref="M:System.Object.ToString" /> 方法。</summary>
      <returns>一个 <see cref="T:System.String" />，包含有关 <see cref="T:System.Drawing.Printing.PrinterResolution" /> 的信息。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterResolution.X">
      <summary>获取水平打印机分辨率，以点/英寸为单位。</summary>
      <returns>如果 <see cref="P:System.Drawing.Printing.PrinterResolution.Kind" /> 设置为 <see cref="F:System.Drawing.Printing.PrinterResolutionKind.Custom" />，值为以每英寸点数为单位的打印机水平分辨率（）；否则，为 <see langword="dmPrintQuality" /> 值。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterResolution.Y">
      <summary>获取垂直打印机分辨率，以点/英寸为单位。</summary>
      <returns>垂直打印机分辨率，以点/英寸为单位。</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrinterResolutionKind">
      <summary>指定打印机的分辨率。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterResolutionKind.Custom">
      <summary>自定义分辨率。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterResolutionKind.Draft">
      <summary>草稿品质的分辨率。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterResolutionKind.High">
      <summary>高分辨率。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterResolutionKind.Low">
      <summary>低分辨率。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterResolutionKind.Medium">
      <summary>中等分辨率。</summary>
    </member>
    <member name="T:System.Drawing.Printing.PrinterSettings">
      <summary>指定有关在从 Windows 窗体应用程序打印时如何打印文档的信息，包括打印文档的打印机。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.Printing.PrinterSettings" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.CanDuplex">
      <summary>获取指示打印机是否支持双面打印的值。</summary>
      <returns>若打印机支持双面打印，则为 <see langword="true" />，反之，则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.Clone">
      <summary>创建此 <see cref="T:System.Drawing.Printing.PrinterSettings" /> 的副本。</summary>
      <returns>该对象的一个副本。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.Collate">
      <summary>获取或设置一个值，该值指示打印文档是否逐份打印。</summary>
      <returns>若文档是逐份打印的，则为 <see langword="true" />；反之，则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.Copies">
      <summary>获取或设置要打印的文档份数。</summary>
      <returns>要打印的份数。 默认值为 1。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.Copies" /> 属性的值小于零。</exception>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics">
      <summary>返回 <see cref="T:System.Drawing.Graphics" />，它包含创建 <see cref="T:System.Drawing.Printing.PrintDocument" /> 时有用的打印机信息。</summary>
      <returns>
        <see cref="T:System.Drawing.Graphics" />，包含来自打印机的信息。</returns>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 属性中命名的打印机不存在。</exception>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Boolean)">
      <summary>返回包含打印机信息的 <see cref="T:System.Drawing.Graphics" />，选择性地指定边距处的原点。</summary>
      <param name="honorOriginAtMargins">
        <see langword="true" /> 表示边距处的原点；否则为 <see langword="false" />。</param>
      <returns>
        <see cref="T:System.Drawing.Graphics" />，包含来自 <see cref="T:System.Drawing.Printing.PageSettings" /> 的打印机信息。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Drawing.Printing.PageSettings)">
      <summary>返回 <see cref="T:System.Drawing.Graphics" />，包含与指定 <see cref="T:System.Drawing.Printing.PageSettings" /> 关联的打印机信息。</summary>
      <param name="pageSettings">要检索其图形对象的 <see cref="T:System.Drawing.Printing.PageSettings" />。</param>
      <returns>
        <see cref="T:System.Drawing.Graphics" />，包含来自 <see cref="T:System.Drawing.Printing.PageSettings" /> 的打印机信息。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Drawing.Printing.PageSettings,System.Boolean)">
      <summary>创建与指定页设置关联的 <see cref="T:System.Drawing.Graphics" /> 并选择性地指定边距处的原点。</summary>
      <param name="pageSettings">要检索其 <see cref="T:System.Drawing.Printing.PageSettings" /> 对象的 <see cref="T:System.Drawing.Graphics" />。</param>
      <param name="honorOriginAtMargins">
        <see langword="true" /> 即指定边距处的原点；否则为 <see langword="false" />。</param>
      <returns>
        <see cref="T:System.Drawing.Graphics" />，包含来自 <see cref="T:System.Drawing.Printing.PageSettings" /> 的打印机信息。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.DefaultPageSettings">
      <summary>获取此打印机的默认页设置。</summary>
      <returns>
        <see cref="T:System.Drawing.Printing.PageSettings" />，它表示此台打印机的默认页设置。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.Duplex">
      <summary>获取或设置双面打印的打印机设置。</summary>
      <returns>
        <see cref="T:System.Drawing.Printing.Duplex" /> 值之一。 默认值由打印机决定。</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.Duplex" /> 属性的值并非 <see cref="T:System.Drawing.Printing.Duplex" /> 值之一。</exception>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.FromPage">
      <summary>获取或设置要打印的第一页的页码。</summary>
      <returns>要打印的第一页的页码。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" /> 属性的值小于零。</exception>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.GetHdevmode">
      <summary>创建与打印机设置相对应的 <see langword="DEVMODE" /> 结构的句柄。</summary>
      <returns>
        <see langword="DEVMODE" /> 结构的句柄。</returns>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 属性中命名的打印机不存在。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">未能检索打印机的初始化信息。</exception>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.GetHdevmode(System.Drawing.Printing.PageSettings)">
      <summary>创建一个 <see langword="DEVMODE" /> 结构的句柄，它对应于通过 <paramref name="pageSettings" /> 参数指定的打印机和页设置。</summary>
      <param name="pageSettings">
        <see langword="DEVMODE" /> 结构的句柄所对应于的 <see cref="T:System.Drawing.Printing.PageSettings" /> 对象。</param>
      <returns>
        <see langword="DEVMODE" /> 结构的句柄。</returns>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 属性中命名的打印机不存在。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">未能检索打印机的初始化信息。</exception>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.GetHdevnames">
      <summary>创建与打印机设置相对应的 <see langword="DEVNAMES" /> 结构的句柄。</summary>
      <returns>
        <see langword="DEVNAMES" /> 结构的句柄。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.InstalledPrinters">
      <summary>获取安装在计算机上所有打印机的名称。</summary>
      <returns>
        <see cref="T:System.Drawing.Printing.PrinterSettings.StringCollection" />，它表示安装在计算机上所有打印机的名称。</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">未能枚举可用的打印机。</exception>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.IsDefaultPrinter">
      <summary>获取一个值，该值指示 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 属性是否指定默认打印机（用户显式设置 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 的情况除外）。</summary>
      <returns>若 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 指定默认打印机，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported(System.Drawing.Image)">
      <summary>获取一个值，该值指示打印机是否支持打印指定的图像文件。</summary>
      <param name="image">要打印的图像。</param>
      <returns>若打印机支持打印指定的图像，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported(System.Drawing.Imaging.ImageFormat)">
      <summary>返回一个值，该值指示打印机是否支持打印指定的图像格式。</summary>
      <param name="imageFormat">要打印的 <see cref="T:System.Drawing.Imaging.ImageFormat" />。</param>
      <returns>若打印机支持打印指定的图像格式，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.IsPlotter">
      <summary>获取指示该打印机是否是绘图仪的值。</summary>
      <returns>若打印机是绘图仪，则为 <see langword="true" />；若打印机是光栅打印机，则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.IsValid">
      <summary>获取一个值，该值指示 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 属性是否指定了有效的打印机。</summary>
      <returns>若 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 属性指定了有效的打印机，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.LandscapeAngle">
      <summary>获取旋转纵向方向以生成横向方向的角度，以度为单位。</summary>
      <returns>从纵向到横向所需旋转的角度（以度为单位）。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.MaximumCopies">
      <summary>获取打印机允许用户一次打印的最大份数。</summary>
      <returns>打印机允许用户一次打印的最大份数。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.MaximumPage">
      <summary>获取或设置可以在 <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" /> 中选定的最大的 <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> 或 <see cref="T:System.Windows.Forms.PrintDialog" />。</summary>
      <returns>可以从 <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" /> 中选定的最大的 <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> 或 <see cref="T:System.Windows.Forms.PrintDialog" />。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.MaximumPage" /> 属性的值小于零。</exception>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.MinimumPage">
      <summary>获取或设置可以在 <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" /> 中选定的最小的 <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> 或 <see cref="T:System.Windows.Forms.PrintDialog" />。</summary>
      <returns>可以在 <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" /> 中选定的最小的 <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> 或 <see cref="T:System.Windows.Forms.PrintDialog" />。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.MinimumPage" /> 属性的值小于零。</exception>
    </member>
    <member name="T:System.Drawing.Printing.PrinterSettings.PaperSizeCollection">
      <summary>包含 <see cref="T:System.Drawing.Printing.PaperSize" /> 对象的集合。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.#ctor(System.Drawing.Printing.PaperSize[])">
      <summary>初始化 <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSizeCollection" /> 类的新实例。</summary>
      <param name="array">
        <see cref="T:System.Drawing.Printing.PaperSize" /> 类型的数组。</param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.Add(System.Drawing.Printing.PaperSize)">
      <summary>向集合的末尾添加一个 <see cref="T:System.Drawing.Printing.PrinterResolution" />。</summary>
      <param name="paperSize">要添加到集合中的 <see cref="T:System.Drawing.Printing.PaperSize" />。</param>
      <returns>新添加项的从零开始的索引。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.CopyTo(System.Drawing.Printing.PaperSize[],System.Int32)">
      <summary>将当前 <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSizeCollection" /> 的内容复制到指定数组，从指定索引处开始。</summary>
      <param name="paperSizes">从零开始的数组，它接收从 <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSizeCollection" /> 复制来的项。</param>
      <param name="index">开始复制项的索引。</param>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.Count">
      <summary>获取集合中不同纸张大小的数目。</summary>
      <returns>集合中不同纸张大小的数目。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.GetEnumerator">
      <summary>返回可循环访问集合的枚举数。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> 的一个 <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSizeCollection" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.Item(System.Int32)">
      <summary>获取指定索引处的 <see cref="T:System.Drawing.Printing.PaperSize" />。</summary>
      <param name="index">要获取的 <see cref="T:System.Drawing.Printing.PaperSize" /> 的索引。</param>
      <returns>位于指定索引处的 <see cref="T:System.Drawing.Printing.PaperSize" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />。</summary>
      <param name="array">从零开始的数组，它接收从集合复制来的项。</param>
      <param name="index">开始复制项的索引。</param>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.System#Collections#ICollection#Count">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.ICollection.Count" />。</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.System#Collections#ICollection#IsSynchronized">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.ICollection.IsSynchronized" />。</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.System#Collections#ICollection#SyncRoot">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.ICollection.SyncRoot" />。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />。</summary>
      <returns>与集合关联的枚举数。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSizes">
      <summary>获取该打印机支持的纸张大小。</summary>
      <returns>
        <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSizeCollection" />，它表示此台打印机所支持的纸张大小。</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection">
      <summary>包含 <see cref="T:System.Drawing.Printing.PaperSource" /> 对象的集合。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.#ctor(System.Drawing.Printing.PaperSource[])">
      <summary>初始化 <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection" /> 类的新实例。</summary>
      <param name="array">
        <see cref="T:System.Drawing.Printing.PaperSource" /> 类型的数组。</param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.Add(System.Drawing.Printing.PaperSource)">
      <summary>将指定的 <see cref="T:System.Drawing.Printing.PaperSource" /> 添加到 <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection" /> 的末尾。</summary>
      <param name="paperSource">要添加到集合中的 <see cref="T:System.Drawing.Printing.PaperSource" />。</param>
      <returns>添加 <see cref="T:System.Drawing.Printing.PaperSource" /> 处的从零开始的索引。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.CopyTo(System.Drawing.Printing.PaperSource[],System.Int32)">
      <summary>将当前 <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection" /> 的内容复制到指定数组，从指定索引处开始。</summary>
      <param name="paperSources">从零开始的数组，它接收从 <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection" /> 复制来的项。</param>
      <param name="index">开始复制项的索引。</param>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.Count">
      <summary>获取集合中不同纸张来源的数目。</summary>
      <returns>集合中不同纸张来源的数目。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.GetEnumerator">
      <summary>返回可循环访问集合的枚举数。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> 的一个 <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.Item(System.Int32)">
      <summary>获取指定索引处的 <see cref="T:System.Drawing.Printing.PaperSource" />。</summary>
      <param name="index">要获取的 <see cref="T:System.Drawing.Printing.PaperSource" /> 的索引。</param>
      <returns>位于指定索引处的 <see cref="T:System.Drawing.Printing.PaperSource" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />。</summary>
      <param name="array">集合内容的目标数组。</param>
      <param name="index">开始复制操作的索引。</param>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.System#Collections#ICollection#Count">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.ICollection.Count" />。</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.System#Collections#ICollection#IsSynchronized">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.ICollection.IsSynchronized" />。</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.System#Collections#ICollection#SyncRoot">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.ICollection.SyncRoot" />。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />。</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSources">
      <summary>获取打印机上可用的纸张来源纸盒。</summary>
      <returns>
        <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection" />，表示此台打印机上可用的纸张来源纸盒。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterName">
      <summary>获取或设置要使用的打印机的名称。</summary>
      <returns>要使用的打印机的名称。</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection">
      <summary>包含 <see cref="T:System.Drawing.Printing.PrinterResolution" /> 对象的集合。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.#ctor(System.Drawing.Printing.PrinterResolution[])">
      <summary>初始化 <see cref="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection" /> 类的新实例。</summary>
      <param name="array">
        <see cref="T:System.Drawing.Printing.PrinterResolution" /> 类型的数组。</param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.Add(System.Drawing.Printing.PrinterResolution)">
      <summary>向集合的末尾添加一个 <see cref="T:System.Drawing.Printing.PrinterResolution" />。</summary>
      <param name="printerResolution">要添加到集合中的 <see cref="T:System.Drawing.Printing.PrinterResolution" />。</param>
      <returns>新添加项的从零开始的索引。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.CopyTo(System.Drawing.Printing.PrinterResolution[],System.Int32)">
      <summary>将当前 <see cref="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection" /> 的内容复制到指定数组，从指定索引处开始。</summary>
      <param name="printerResolutions">从零开始的数组，它接收从 <see cref="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection" /> 复制来的项。</param>
      <param name="index">开始复制项的索引。</param>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.Count">
      <summary>获取集合中可用打印机分辨率的数目。</summary>
      <returns>集合中可用打印机分辨率的数目。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.GetEnumerator">
      <summary>返回可循环访问集合的枚举数。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> 的一个 <see cref="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.Item(System.Int32)">
      <summary>获取指定索引处的 <see cref="T:System.Drawing.Printing.PrinterResolution" />。</summary>
      <param name="index">要获取的 <see cref="T:System.Drawing.Printing.PrinterResolution" /> 的索引。</param>
      <returns>位于指定索引处的 <see cref="T:System.Drawing.Printing.PrinterResolution" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />。</summary>
      <param name="array">目标数组。</param>
      <param name="index">开始复制操作的索引。</param>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.System#Collections#ICollection#Count">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.ICollection.Count" />。</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.System#Collections#ICollection#IsSynchronized">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.ICollection.IsSynchronized" />。</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.System#Collections#ICollection#SyncRoot">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.ICollection.SyncRoot" />。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />。</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterResolutions">
      <summary>获取该打印机支持的所有分辨率。</summary>
      <returns>
        <see cref="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection" />，它显示此打印机所支持的分辨率。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrintFileName">
      <summary>打印到文件时，获取或设置文件名。</summary>
      <returns>打印到文件时的文件名。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrintRange">
      <summary>获取或设置用户已指定要打印的页码。</summary>
      <returns>
        <see cref="T:System.Drawing.Printing.PrintRange" /> 值之一。</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.PrintRange" /> 属性的值并非 <see cref="T:System.Drawing.Printing.PrintRange" /> 值之一。</exception>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrintToFile">
      <summary>获取或设置一个值，该值指示打印输出是否发送到文件，而不发送到端口。</summary>
      <returns>若打印输出发送到文件，则为 <see langword="true" />；反之，则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.SetHdevmode(System.IntPtr)">
      <summary>将相关信息从给定句柄复制到 <see cref="T:System.Drawing.Printing.PrinterSettings" /> 中。</summary>
      <param name="hdevmode">Win32 <see langword="DEVMODE" /> 结构的句柄。</param>
      <exception cref="T:System.ArgumentException">打印机句柄无效。</exception>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.SetHdevnames(System.IntPtr)">
      <summary>将相关信息从给定句柄复制到 <see cref="T:System.Drawing.Printing.PrinterSettings" /> 中。</summary>
      <param name="hdevnames">Win32 <see langword="DEVNAMES" /> 结构的句柄。</param>
      <exception cref="T:System.ArgumentException">打印机句柄无效。</exception>
    </member>
    <member name="T:System.Drawing.Printing.PrinterSettings.StringCollection">
      <summary>包含 <see cref="T:System.String" /> 对象的集合。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.StringCollection.#ctor(System.String[])">
      <summary>初始化 <see cref="T:System.Drawing.Printing.PrinterSettings.StringCollection" /> 类的新实例。</summary>
      <param name="array">
        <see cref="T:System.String" /> 类型的数组。</param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.StringCollection.Add(System.String)">
      <summary>将字符串添加到集合的末尾。</summary>
      <param name="value">要添加到集合的字符串。</param>
      <returns>新添加项的从零开始的索引。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.StringCollection.CopyTo(System.String[],System.Int32)">
      <summary>从指定索引处开始，将当前 <see cref="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection" /> 的内容复制到指定数组</summary>
      <param name="strings">从零开始的数组，它接收从 <see cref="T:System.Drawing.Printing.PrinterSettings.StringCollection" /> 复制来的项。</param>
      <param name="index">开始复制项的索引。</param>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.StringCollection.Count">
      <summary>获取集合中的字符串数目。</summary>
      <returns>集合中的字符串数。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.StringCollection.GetEnumerator">
      <summary>返回可循环访问集合的枚举数。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> 的一个 <see cref="T:System.Drawing.Printing.PrinterSettings.StringCollection" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.StringCollection.Item(System.Int32)">
      <summary>获取指定索引处的 <see cref="T:System.String" />。</summary>
      <param name="index">要获取的 <see cref="T:System.String" /> 的索引。</param>
      <returns>位于指定索引处的 <see cref="T:System.String" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.StringCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />。</summary>
      <param name="array">要将项复制到的数组。</param>
      <param name="index">起始索引。</param>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.StringCollection.System#Collections#ICollection#Count">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.ICollection.Count" />。</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.StringCollection.System#Collections#ICollection#IsSynchronized">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.ICollection.IsSynchronized" />。</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.StringCollection.System#Collections#ICollection#SyncRoot">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.ICollection.SyncRoot" />。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.StringCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />。</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.SupportsColor">
      <summary>获取指示该打印机是否支持彩色打印的值。</summary>
      <returns>若该打印机支持彩色打印，则为 <see langword="true" />；反之，则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.ToPage">
      <summary>获取或设置要打印的最后一页的页码。</summary>
      <returns>要打印的最后一页的页码。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> 属性的值小于零。</exception>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.ToString">
      <summary>以字符串形式提供有关 <see cref="T:System.Drawing.Printing.PrinterSettings" /> 的信息。</summary>
      <returns>一个字符串。</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrinterUnit">
      <summary>指定几个用于打印的度量单位。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterUnit.Display">
      <summary>默认单位（0.01 英寸）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterUnit.HundredthsOfAMillimeter">
      <summary>百分之一毫米（0.01 毫米）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterUnit.TenthsOfAMillimeter">
      <summary>十分之一毫米（0.1 毫米）。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterUnit.ThousandthsOfAnInch">
      <summary>千分之一英寸（0.001 英寸）。</summary>
    </member>
    <member name="T:System.Drawing.Printing.PrinterUnitConvert">
      <summary>指定在与 Win32 打印 API 互操作时使用的一系列转换方法。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Double,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
      <summary>将一个双精度浮点数从一种 <see cref="T:System.Drawing.Printing.PrinterUnit" /> 类型转换为另一种 <see cref="T:System.Drawing.Printing.PrinterUnit" /> 类型。</summary>
      <param name="value">正在转换的 <see cref="T:System.Drawing.Point" />。</param>
      <param name="fromUnit">要从其进行转换的单元。</param>
      <param name="toUnit">要转换为其的单元。</param>
      <returns>双精度浮点数，它表示转换后的 <see cref="T:System.Drawing.Printing.PrinterUnit" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Drawing.Point,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
      <summary>将 <see cref="T:System.Drawing.Point" /> 从一个 <see cref="T:System.Drawing.Printing.PrinterUnit" /> 类型转换为另一个 <see cref="T:System.Drawing.Printing.PrinterUnit" /> 类型。</summary>
      <param name="value">正在转换的 <see cref="T:System.Drawing.Point" />。</param>
      <param name="fromUnit">要从其进行转换的单元。</param>
      <param name="toUnit">要转换为其的单元。</param>
      <returns>
        <see cref="T:System.Drawing.Point" />，它表示已转换的 <see cref="T:System.Drawing.Printing.PrinterUnit" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Drawing.Printing.Margins,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
      <summary>将 <see cref="T:System.Drawing.Printing.Margins" /> 从一个 <see cref="T:System.Drawing.Printing.PrinterUnit" /> 类型转换为另一个 <see cref="T:System.Drawing.Printing.PrinterUnit" /> 类型。</summary>
      <param name="value">正在转换的 <see cref="T:System.Drawing.Printing.Margins" />。</param>
      <param name="fromUnit">要从其进行转换的单元。</param>
      <param name="toUnit">要转换为其的单元。</param>
      <returns>
        <see cref="T:System.Drawing.Printing.Margins" />，它表示已转换的 <see cref="T:System.Drawing.Printing.PrinterUnit" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Drawing.Rectangle,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
      <summary>将 <see cref="T:System.Drawing.Rectangle" /> 从一个 <see cref="T:System.Drawing.Printing.PrinterUnit" /> 类型转换为另一个 <see cref="T:System.Drawing.Printing.PrinterUnit" /> 类型。</summary>
      <param name="value">正在转换的 <see cref="T:System.Drawing.Rectangle" />。</param>
      <param name="fromUnit">要从其进行转换的单元。</param>
      <param name="toUnit">要转换为其的单元。</param>
      <returns>
        <see cref="T:System.Drawing.Rectangle" />，它表示已转换的 <see cref="T:System.Drawing.Printing.PrinterUnit" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Drawing.Size,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
      <summary>将 <see cref="T:System.Drawing.Size" /> 从一个 <see cref="T:System.Drawing.Printing.PrinterUnit" /> 类型转换为另一个 <see cref="T:System.Drawing.Printing.PrinterUnit" /> 类型。</summary>
      <param name="value">正在转换的 <see cref="T:System.Drawing.Size" />。</param>
      <param name="fromUnit">要从其进行转换的单元。</param>
      <param name="toUnit">要转换为其的单元。</param>
      <returns>
        <see cref="T:System.Drawing.Size" />，它表示已转换的 <see cref="T:System.Drawing.Printing.PrinterUnit" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Int32,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
      <summary>将 32 位有符号整数从一个 <see cref="T:System.Drawing.Printing.PrinterUnit" /> 类型转换为另一个 <see cref="T:System.Drawing.Printing.PrinterUnit" /> 类型。</summary>
      <param name="value">正在转换的值。</param>
      <param name="fromUnit">要从其进行转换的单元。</param>
      <param name="toUnit">要转换为其的单元。</param>
      <returns>32 位有符号整数，它表示转换后的 <see cref="T:System.Drawing.Printing.PrinterUnit" />。</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrintEventArgs">
      <summary>提供有关 <see cref="E:System.Drawing.Printing.PrintDocument.BeginPrint" /> 和 <see cref="E:System.Drawing.Printing.PrintDocument.EndPrint" /> 事件的数据。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintEventArgs.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.Printing.PrintEventArgs" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrintEventArgs.PrintAction">
      <summary>在所有情况下均返回 <see cref="F:System.Drawing.Printing.PrintAction.PrintToFile" /> 。</summary>
      <returns>在所有情况下均为 <see cref="F:System.Drawing.Printing.PrintAction.PrintToFile" />。</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrintEventHandler">
      <summary>表示将对 <see cref="E:System.Drawing.Printing.PrintDocument.BeginPrint" /> 的 <see cref="E:System.Drawing.Printing.PrintDocument.EndPrint" /> 或 <see cref="T:System.Drawing.Printing.PrintDocument" /> 事件进行处理的方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">包含事件数据的 <see cref="T:System.Drawing.Printing.PrintEventArgs" />。</param>
    </member>
    <member name="T:System.Drawing.Printing.PrintPageEventArgs">
      <summary>为 <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintPageEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Printing.PageSettings)">
      <summary>初始化 <see cref="T:System.Drawing.Printing.PrintPageEventArgs" /> 类的新实例。</summary>
      <param name="graphics">用于绘制该项的 <see cref="T:System.Drawing.Graphics" />。</param>
      <param name="marginBounds">边距之间的区域。</param>
      <param name="pageBounds">纸张的全部区域。</param>
      <param name="pageSettings">页的 <see cref="T:System.Drawing.Printing.PageSettings" />。</param>
    </member>
    <member name="P:System.Drawing.Printing.PrintPageEventArgs.Cancel">
      <summary>获取或设置一个值，该值指示是否取消打印作业。</summary>
      <returns>若应取消打印作业，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintPageEventArgs.Graphics">
      <summary>获取用于绘制页的 <see cref="T:System.Drawing.Graphics" />。</summary>
      <returns>用于绘制页的 <see cref="T:System.Drawing.Graphics" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintPageEventArgs.HasMorePages">
      <summary>获取或设置一个值，该值指示是否打印附加页。</summary>
      <returns>若应打印附加页，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintPageEventArgs.MarginBounds">
      <summary>获取表示边距以内的页面部分的矩形区域。</summary>
      <returns>以百分之一英寸为单位的矩形区域，表示边距以内的页面部分。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintPageEventArgs.PageBounds">
      <summary>获取表示页面全部区域的矩形区域。</summary>
      <returns>表示页面全部区域的矩形区域。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintPageEventArgs.PageSettings">
      <summary>获取当前页的页设置。</summary>
      <returns>当前页的页设置。</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrintPageEventHandler">
      <summary>表示将用来处理 <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> 的 <see cref="T:System.Drawing.Printing.PrintDocument" /> 事件的方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">包含事件数据的 <see cref="T:System.Drawing.Printing.PrintPageEventArgs" />。</param>
    </member>
    <member name="T:System.Drawing.Printing.PrintRange">
      <summary>指定要打印的文档部分。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintRange.AllPages">
      <summary>打印所有的页。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintRange.CurrentPage">
      <summary>打印当前显示页</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintRange.Selection">
      <summary>打印选定的页。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintRange.SomePages">
      <summary>打印在 <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" /> 和 <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> 之间的页。</summary>
    </member>
    <member name="T:System.Drawing.Printing.QueryPageSettingsEventArgs">
      <summary>为 <see cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Drawing.Printing.QueryPageSettingsEventArgs.#ctor(System.Drawing.Printing.PageSettings)">
      <summary>初始化 <see cref="T:System.Drawing.Printing.QueryPageSettingsEventArgs" /> 类的新实例。</summary>
      <param name="pageSettings">要打印的页的页面设置。</param>
    </member>
    <member name="P:System.Drawing.Printing.QueryPageSettingsEventArgs.PageSettings">
      <summary>获取或设置要打印的页的页面设置。</summary>
      <returns>要打印的页的页面设置。</returns>
    </member>
    <member name="T:System.Drawing.Printing.QueryPageSettingsEventHandler">
      <summary>表示处理 <see cref="T:System.Drawing.Printing.PrintDocument" /> 的 <see cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" /> 事件的方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">包含事件数据的 <see cref="T:System.Drawing.Printing.QueryPageSettingsEventArgs" />。</param>
    </member>
    <member name="T:System.Drawing.Printing.StandardPrintController">
      <summary>指定一个打印控制器，它向打印机发送信息。</summary>
    </member>
    <member name="M:System.Drawing.Printing.StandardPrintController.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.Printing.StandardPrintController" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Drawing.Printing.StandardPrintController.OnEndPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
      <summary>完成确定何时以及如何打印文档页的控制序列。</summary>
      <param name="document">
        <see cref="T:System.Drawing.Printing.PrintDocument" />，它表示所打印的文档。</param>
      <param name="e">
        <see cref="T:System.Drawing.Printing.PrintPageEventArgs" />，它包含有关如何打印文档中某页的数据。</param>
      <exception cref="T:System.ComponentModel.Win32Exception">本地 Win32 应用程序编程接口 (API) 未能完成对页的写操作。</exception>
    </member>
    <member name="M:System.Drawing.Printing.StandardPrintController.OnEndPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
      <summary>完成确定何时以及如何对文档进行打印的控制序列。</summary>
      <param name="document">
        <see cref="T:System.Drawing.Printing.PrintDocument" />，它表示所打印的文档。</param>
      <param name="e">
        <see cref="T:System.Drawing.Printing.PrintEventArgs" />，它包含有关如何打印文档的数据。</param>
      <exception cref="T:System.ComponentModel.Win32Exception">本地的 Win32 应用程序编程接口 (API) 未能完成打印作业。  
 或  
 本机 Windows API 未能删除指定的设备上下文 (DC)。</exception>
    </member>
    <member name="M:System.Drawing.Printing.StandardPrintController.OnStartPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
      <summary>开始控制序列，确定何时以及如何打印文档页。</summary>
      <param name="document">
        <see cref="T:System.Drawing.Printing.PrintDocument" />，它表示所打印的文档。</param>
      <param name="e">
        <see cref="T:System.Drawing.Printing.PrintPageEventArgs" />，它包含有关如何打印文档中某页的数据。 最初，该参数的 <see cref="P:System.Drawing.Printing.PrintPageEventArgs.Graphics" /> 属性将为 <see langword="null" />。 由 <see cref="M:System.Drawing.Printing.StandardPrintController.OnStartPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)" /> 方法所返回的值将用于设置该属性。</param>
      <returns>
        <see cref="T:System.Drawing.Graphics" /> 对象，它表示 <see cref="T:System.Drawing.Printing.PrintDocument" /> 中的一页。</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">本地的 Win32 应用程序编程接口 (API) 未能使打印驱动程序就绪以接受数据。  
 或  
 本机 Windows API 未能使用指定信息更新指定的打印机或绘图仪的设备上下文 (DC)。</exception>
    </member>
    <member name="M:System.Drawing.Printing.StandardPrintController.OnStartPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
      <summary>开始控制序列，确定何时以及如何对文档进行打印。</summary>
      <param name="document">
        <see cref="T:System.Drawing.Printing.PrintDocument" />，它表示所打印的文档。</param>
      <param name="e">
        <see cref="T:System.Drawing.Printing.PrintEventArgs" />，它包含有关如何打印文档的数据。</param>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">打印机设置无效。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">本地的 Win32 应用程序编程接口 (API) 未能启动打印作业。</exception>
    </member>
    <member name="T:System.Drawing.Region">
      <summary>指示由矩形和由路径构成的图形形状的内部。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Drawing.Region.#ctor">
      <summary>初始化新的 <see cref="T:System.Drawing.Region" />。</summary>
    </member>
    <member name="M:System.Drawing.Region.#ctor(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>使用指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 初始化新的 <see cref="T:System.Drawing.Region" />。</summary>
      <param name="path">一个 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />，它定义新的 <see cref="T:System.Drawing.Region" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Region.#ctor(System.Drawing.Drawing2D.RegionData)">
      <summary>从指定的数据中初始化新的 <see cref="T:System.Drawing.Region" />。</summary>
      <param name="rgnData">一个 <see cref="T:System.Drawing.Drawing2D.RegionData" />，它定义新的 <see cref="T:System.Drawing.Region" /> 的内部。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rgnData" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Region.#ctor(System.Drawing.Rectangle)">
      <summary>基于指定的 <see cref="T:System.Drawing.Region" /> 结构初始化一个新的 <see cref="T:System.Drawing.Rectangle" />。</summary>
      <param name="rect">一个 <see cref="T:System.Drawing.Rectangle" /> 结构，用于定义新 <see cref="T:System.Drawing.Region" /> 的内部。</param>
    </member>
    <member name="M:System.Drawing.Region.#ctor(System.Drawing.RectangleF)">
      <summary>基于指定的 <see cref="T:System.Drawing.Region" /> 结构初始化一个新的 <see cref="T:System.Drawing.RectangleF" />。</summary>
      <param name="rect">一个 <see cref="T:System.Drawing.RectangleF" /> 结构，用于定义新 <see cref="T:System.Drawing.Region" /> 的内部。</param>
    </member>
    <member name="M:System.Drawing.Region.Clone">
      <summary>创建此 <see cref="T:System.Drawing.Region" /> 的一个精确副本。</summary>
      <returns>此方法创建的 <see cref="T:System.Drawing.Region" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.Complement(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>更新此 <see cref="T:System.Drawing.Region" /> 以包含与此 <see cref="T:System.Drawing.Region" /> 不相交的指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 的那部分。</summary>
      <param name="path">要对此 <see cref="T:System.Drawing.Region" /> 进行补充的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Region.Complement(System.Drawing.Rectangle)">
      <summary>更新此 <see cref="T:System.Drawing.Region" />，以包含指定的 <see cref="T:System.Drawing.Rectangle" /> 结构中与此 <see cref="T:System.Drawing.Region" /> 不相交的部分。</summary>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" /> 结构，它是对此 <see cref="T:System.Drawing.Region" /> 的补充。</param>
    </member>
    <member name="M:System.Drawing.Region.Complement(System.Drawing.RectangleF)">
      <summary>更新此 <see cref="T:System.Drawing.Region" />，以包含指定的 <see cref="T:System.Drawing.RectangleF" /> 结构中与此 <see cref="T:System.Drawing.Region" /> 不相交的部分。</summary>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" /> 结构，它是对此 <see cref="T:System.Drawing.Region" /> 的补充。</param>
    </member>
    <member name="M:System.Drawing.Region.Complement(System.Drawing.Region)">
      <summary>更新此 <see cref="T:System.Drawing.Region" /> 以包含与此 <see cref="T:System.Drawing.Region" /> 不相交的指定的 <see cref="T:System.Drawing.Region" /> 的那部分。</summary>
      <param name="region">要对此 <see cref="T:System.Drawing.Region" /> 对象进行补充的 <see cref="T:System.Drawing.Region" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="region" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Region.Dispose">
      <summary>释放此 <see cref="T:System.Drawing.Region" /> 使用的所有资源。</summary>
    </member>
    <member name="M:System.Drawing.Region.Equals(System.Drawing.Region,System.Drawing.Graphics)">
      <summary>测试指定的 <see cref="T:System.Drawing.Region" /> 是否与指定绘图图面上的此 <see cref="T:System.Drawing.Region" /> 完全相同。</summary>
      <param name="region">要测试的 <see cref="T:System.Drawing.Region" />。</param>
      <param name="g">一个 <see cref="T:System.Drawing.Graphics" />，表示绘图图面。</param>
      <returns>如果应用了与 <paramref name="g" /> 参数关联的转换之后，区域的内部与此区域的内部完全相同，将为 <see langword="true" />；否则为 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="g" /> 或 <paramref name="region" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Region.Exclude(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>更新此 <see cref="T:System.Drawing.Region" />，以仅包含其内部与指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 不相交的部分。</summary>
      <param name="path">要从此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 中排除的 <see cref="T:System.Drawing.Region" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Region.Exclude(System.Drawing.Rectangle)">
      <summary>更新此 <see cref="T:System.Drawing.Region" />，以仅包含其内部与指定的 <see cref="T:System.Drawing.Rectangle" /> 结构不相交的部分。</summary>
      <param name="rect">要从此 <see cref="T:System.Drawing.Rectangle" /> 中排除的 <see cref="T:System.Drawing.Region" /> 结构。</param>
    </member>
    <member name="M:System.Drawing.Region.Exclude(System.Drawing.RectangleF)">
      <summary>更新此 <see cref="T:System.Drawing.Region" />，以仅包含其内部与指定的 <see cref="T:System.Drawing.RectangleF" /> 结构不相交的部分。</summary>
      <param name="rect">要从此 <see cref="T:System.Drawing.RectangleF" /> 中排除的 <see cref="T:System.Drawing.Region" /> 结构。</param>
    </member>
    <member name="M:System.Drawing.Region.Exclude(System.Drawing.Region)">
      <summary>更新此 <see cref="T:System.Drawing.Region" />，以仅包含其内部与指定的 <see cref="T:System.Drawing.Region" /> 不相交的部分。</summary>
      <param name="region">要从此 <see cref="T:System.Drawing.Region" /> 中排除的 <see cref="T:System.Drawing.Region" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="region" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Region.Finalize">
      <summary>在垃圾回收将某一对象回收前允许该对象尝试释放资源并执行其他清理操作。</summary>
    </member>
    <member name="M:System.Drawing.Region.FromHrgn(System.IntPtr)">
      <summary>基于指定的现有 GDI 区域的句柄初始化一个新的 <see cref="T:System.Drawing.Region" />。</summary>
      <param name="hrgn">现有 <see cref="T:System.Drawing.Region" /> 的句柄。</param>
      <returns>新的 <see cref="T:System.Drawing.Region" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.GetBounds(System.Drawing.Graphics)">
      <summary>获取一个表示矩形的 <see cref="T:System.Drawing.RectangleF" /> 结构，该矩形在 <see cref="T:System.Drawing.Region" /> 对象的绘图图面上形成此 <see cref="T:System.Drawing.Graphics" /> 的边界。</summary>
      <param name="g">此 <see cref="T:System.Drawing.Graphics" /> 将绘制到的 <see cref="T:System.Drawing.Region" />。</param>
      <returns>一个<see cref="T:System.Drawing.RectangleF" /> 结构，表示指定绘图图面上此 <see cref="T:System.Drawing.Region" /> 的边框。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="g" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Region.GetHrgn(System.Drawing.Graphics)">
      <summary>返回指定图形上下文中此 <see cref="T:System.Drawing.Region" /> 的 Windows 句柄。</summary>
      <param name="g">此 <see cref="T:System.Drawing.Graphics" /> 将绘制到的 <see cref="T:System.Drawing.Region" />。</param>
      <returns>此 <see cref="T:System.Drawing.Region" /> 的 Windows 句柄。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="g" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Region.GetRegionData">
      <summary>返回 <see cref="T:System.Drawing.Drawing2D.RegionData" />，它表示描述此 <see cref="T:System.Drawing.Region" /> 的信息。</summary>
      <returns>一个 <see cref="T:System.Drawing.Drawing2D.RegionData" />，表示描述此 <see cref="T:System.Drawing.Region" /> 的信息。</returns>
    </member>
    <member name="M:System.Drawing.Region.GetRegionScans(System.Drawing.Drawing2D.Matrix)">
      <summary>返回 <see cref="T:System.Drawing.RectangleF" /> 结构的数组，这些结构在应用指定的矩阵变换后近似于 <see cref="T:System.Drawing.Region" />。</summary>
      <param name="matrix">一个 <see cref="T:System.Drawing.Drawing2D.Matrix" />，表示要应用于区域的几何变换。</param>
      <returns>
        <see cref="T:System.Drawing.RectangleF" /> 结构的数组，这些结构在应用指定的矩阵变换后近似于 <see cref="T:System.Drawing.Region" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Region.Intersect(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>通过指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />，将此 <see cref="T:System.Drawing.Region" /> 更新为其自身的交集。</summary>
      <param name="path">要与此 <see cref="T:System.Drawing.Region" /> 相交的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</param>
    </member>
    <member name="M:System.Drawing.Region.Intersect(System.Drawing.Rectangle)">
      <summary>将此 <see cref="T:System.Drawing.Region" /> 更新为其自身与指定的 <see cref="T:System.Drawing.Rectangle" /> 结构的交集。</summary>
      <param name="rect">要与此 <see cref="T:System.Drawing.Region" /> 相交的 <see cref="T:System.Drawing.Rectangle" /> 结构。</param>
    </member>
    <member name="M:System.Drawing.Region.Intersect(System.Drawing.RectangleF)">
      <summary>将此 <see cref="T:System.Drawing.Region" /> 更新为其自身与指定的 <see cref="T:System.Drawing.RectangleF" /> 结构的交集。</summary>
      <param name="rect">要与此 <see cref="T:System.Drawing.Region" /> 相交的 <see cref="T:System.Drawing.RectangleF" /> 结构。</param>
    </member>
    <member name="M:System.Drawing.Region.Intersect(System.Drawing.Region)">
      <summary>通过指定的 <see cref="T:System.Drawing.Region" />，将此 <see cref="T:System.Drawing.Region" /> 更新为其自身的交集。</summary>
      <param name="region">要与此 <see cref="T:System.Drawing.Region" /> 相交的 <see cref="T:System.Drawing.Region" />。</param>
    </member>
    <member name="M:System.Drawing.Region.IsEmpty(System.Drawing.Graphics)">
      <summary>测试此 <see cref="T:System.Drawing.Region" /> 在指定绘图图面上是否有空的内部。</summary>
      <param name="g">一个 <see cref="T:System.Drawing.Graphics" />，表示绘图图面。</param>
      <returns>如果在应用了与 <paramref name="g" /> 关联的变换后，此 <see cref="T:System.Drawing.Region" /> 的内部为空，将为 <see langword="true" />；否则为 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="g" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Region.IsInfinite(System.Drawing.Graphics)">
      <summary>测试此 <see cref="T:System.Drawing.Region" /> 在指定绘图图面上是否有无限内部。</summary>
      <param name="g">一个 <see cref="T:System.Drawing.Graphics" />，表示绘图图面。</param>
      <returns>如果在应用了与 <paramref name="g" /> 关联的变换后，此 <see cref="T:System.Drawing.Region" /> 的内部是无限的，将为 <see langword="true" />；否则为 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="g" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.Point)">
      <summary>测试指定 <see cref="T:System.Drawing.Point" /> 结构是否包含在此 <see cref="T:System.Drawing.Region" /> 中。</summary>
      <param name="point">要测试的 <see cref="T:System.Drawing.Point" /> 结构。</param>
      <returns>如果 <paramref name="point" /> 包含在此 <see cref="T:System.Drawing.Region" /> 中，将为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.Point,System.Drawing.Graphics)">
      <summary>测试指定的 <see cref="T:System.Drawing.Point" /> 结构在使用指定的 <see cref="T:System.Drawing.Region" /> 绘制后是否包含在此 <see cref="T:System.Drawing.Graphics" /> 中。</summary>
      <param name="point">要测试的 <see cref="T:System.Drawing.Point" /> 结构。</param>
      <param name="g">一个 <see cref="T:System.Drawing.Graphics" />，表示图形上下文。</param>
      <returns>如果 <paramref name="point" /> 包含在此 <see cref="T:System.Drawing.Region" /> 中，将为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.PointF)">
      <summary>测试指定 <see cref="T:System.Drawing.PointF" /> 结构是否包含在此 <see cref="T:System.Drawing.Region" /> 中。</summary>
      <param name="point">要测试的 <see cref="T:System.Drawing.PointF" /> 结构。</param>
      <returns>如果 <paramref name="point" /> 包含在此 <see cref="T:System.Drawing.Region" /> 中，将为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)">
      <summary>测试指定的 <see cref="T:System.Drawing.PointF" /> 结构在使用指定的 <see cref="T:System.Drawing.Region" /> 绘制后是否包含在此 <see cref="T:System.Drawing.Graphics" /> 中。</summary>
      <param name="point">要测试的 <see cref="T:System.Drawing.PointF" /> 结构。</param>
      <param name="g">一个 <see cref="T:System.Drawing.Graphics" />，表示图形上下文。</param>
      <returns>如果 <paramref name="point" /> 包含在此 <see cref="T:System.Drawing.Region" /> 中，将为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.Rectangle)">
      <summary>测试指定的 <see cref="T:System.Drawing.Rectangle" /> 结构是否有任何部分包含在此 <see cref="T:System.Drawing.Region" /> 中。</summary>
      <param name="rect">要测试的 <see cref="T:System.Drawing.Rectangle" /> 结构。</param>
      <returns>如果 <paramref name="rect" /> 有任何部分包含在此 <see cref="T:System.Drawing.Region" /> 中，此方法将返回 <see langword="true" />；否则将返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.Rectangle,System.Drawing.Graphics)">
      <summary>测试指定的 <see cref="T:System.Drawing.Rectangle" /> 结构在使用指定的 <see cref="T:System.Drawing.Region" /> 绘制后是否有任何部分包含在此 <see cref="T:System.Drawing.Graphics" /> 中。</summary>
      <param name="rect">要测试的 <see cref="T:System.Drawing.Rectangle" /> 结构。</param>
      <param name="g">一个 <see cref="T:System.Drawing.Graphics" />，表示图形上下文。</param>
      <returns>如果 <paramref name="rect" /> 有任何部分包含在此 <see cref="T:System.Drawing.Region" /> 中，将为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.RectangleF)">
      <summary>测试指定的 <see cref="T:System.Drawing.RectangleF" /> 结构是否有任何部分包含在此 <see cref="T:System.Drawing.Region" /> 中。</summary>
      <param name="rect">要测试的 <see cref="T:System.Drawing.RectangleF" /> 结构。</param>
      <returns>如果 <paramref name="rect" /> 有任何部分包含在此 <see cref="T:System.Drawing.Region" /> 中，将为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.RectangleF,System.Drawing.Graphics)">
      <summary>测试指定的 <see cref="T:System.Drawing.RectangleF" /> 结构在使用指定的 <see cref="T:System.Drawing.Region" /> 绘制后是否有任何部分包含在此 <see cref="T:System.Drawing.Graphics" /> 中。</summary>
      <param name="rect">要测试的 <see cref="T:System.Drawing.RectangleF" /> 结构。</param>
      <param name="g">一个 <see cref="T:System.Drawing.Graphics" />，表示图形上下文。</param>
      <returns>如果 <paramref name="rect" /> 包含在此 <see cref="T:System.Drawing.Region" /> 中，将为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
      <summary>测试指定的点在用指定的 <see cref="T:System.Drawing.Region" /> 对象绘制时是否包含在此 <see cref="T:System.Drawing.Graphics" /> 对象内。</summary>
      <param name="x">要测试的点的 X 坐标。</param>
      <param name="y">要测试的点的 Y 坐标。</param>
      <param name="g">一个 <see cref="T:System.Drawing.Graphics" />，表示图形上下文。</param>
      <returns>如果指定点包含在此 <see cref="T:System.Drawing.Region" /> 中，将为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>测试指定的矩形是否有任何部分包含在此 <see cref="T:System.Drawing.Region" /> 中。</summary>
      <param name="x">要测试的矩形的左上角的 x 坐标。</param>
      <param name="y">要测试的矩形的左上角的 y 坐标。</param>
      <param name="width">要测试的矩形的宽度。</param>
      <param name="height">要测试的矩形的高度。</param>
      <returns>如果指定的矩形有任何部分包含在此 <see cref="T:System.Drawing.Region" /> 中，将为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Graphics)">
      <summary>测试指定的矩形在使用指定的 <see cref="T:System.Drawing.Region" /> 绘制后是否有任何部分包含在此 <see cref="T:System.Drawing.Graphics" /> 中。</summary>
      <param name="x">要测试的矩形的左上角的 x 坐标。</param>
      <param name="y">要测试的矩形的左上角的 y 坐标。</param>
      <param name="width">要测试的矩形的宽度。</param>
      <param name="height">要测试的矩形的高度。</param>
      <param name="g">一个 <see cref="T:System.Drawing.Graphics" />，表示图形上下文。</param>
      <returns>如果指定的矩形有任何部分包含在此 <see cref="T:System.Drawing.Region" /> 中，将为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Single,System.Single)">
      <summary>测试指定点是否包含在此 <see cref="T:System.Drawing.Region" /> 中。</summary>
      <param name="x">要测试的点的 X 坐标。</param>
      <param name="y">要测试的点的 Y 坐标。</param>
      <returns>如果指定点包含在此 <see cref="T:System.Drawing.Region" /> 中，将为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Single,System.Single,System.Drawing.Graphics)">
      <summary>测试指定点在使用指定的 <see cref="T:System.Drawing.Region" /> 绘制后是否包含在此 <see cref="T:System.Drawing.Graphics" /> 中。</summary>
      <param name="x">要测试的点的 X 坐标。</param>
      <param name="y">要测试的点的 Y 坐标。</param>
      <param name="g">一个 <see cref="T:System.Drawing.Graphics" />，表示图形上下文。</param>
      <returns>如果指定点包含在此 <see cref="T:System.Drawing.Region" /> 中，将为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Single,System.Single,System.Single,System.Single)">
      <summary>测试指定的矩形是否有任何部分包含在此 <see cref="T:System.Drawing.Region" /> 中。</summary>
      <param name="x">要测试的矩形的左上角的 x 坐标。</param>
      <param name="y">要测试的矩形的左上角的 y 坐标。</param>
      <param name="width">要测试的矩形的宽度。</param>
      <param name="height">要测试的矩形的高度。</param>
      <returns>如果指定的矩形有任何部分包含在此 <see cref="T:System.Drawing.Region" /> 对象中，将为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Single,System.Single,System.Single,System.Single,System.Drawing.Graphics)">
      <summary>测试指定的矩形在使用指定的 <see cref="T:System.Drawing.Region" /> 绘制后是否有任何部分包含在此 <see cref="T:System.Drawing.Graphics" /> 中。</summary>
      <param name="x">要测试的矩形的左上角的 x 坐标。</param>
      <param name="y">要测试的矩形的左上角的 y 坐标。</param>
      <param name="width">要测试的矩形的宽度。</param>
      <param name="height">要测试的矩形的高度。</param>
      <param name="g">一个 <see cref="T:System.Drawing.Graphics" />，表示图形上下文。</param>
      <returns>如果指定的矩形有任何部分包含在此 <see cref="T:System.Drawing.Region" /> 中，将为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.MakeEmpty">
      <summary>将此 <see cref="T:System.Drawing.Region" /> 初始化为一个空内部。</summary>
    </member>
    <member name="M:System.Drawing.Region.MakeInfinite">
      <summary>将此 <see cref="T:System.Drawing.Region" /> 对象初始化为无限内部。</summary>
    </member>
    <member name="M:System.Drawing.Region.ReleaseHrgn(System.IntPtr)">
      <summary>释放 <see cref="T:System.Drawing.Region" /> 的句柄。</summary>
      <param name="regionHandle">
        <see cref="T:System.Drawing.Region" /> 的句柄。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="regionHandle" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Region.Transform(System.Drawing.Drawing2D.Matrix)">
      <summary>通过指定的 <see cref="T:System.Drawing.Region" /> 变换此 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</summary>
      <param name="matrix">用于对此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 进行变换的 <see cref="T:System.Drawing.Region" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Region.Translate(System.Int32,System.Int32)">
      <summary>将此 <see cref="T:System.Drawing.Region" /> 的坐标偏移指定的量。</summary>
      <param name="dx">此 <see cref="T:System.Drawing.Region" /> 的水平偏移量。</param>
      <param name="dy">此 <see cref="T:System.Drawing.Region" /> 的垂直偏移量。</param>
    </member>
    <member name="M:System.Drawing.Region.Translate(System.Single,System.Single)">
      <summary>将此 <see cref="T:System.Drawing.Region" /> 的坐标偏移指定的量。</summary>
      <param name="dx">此 <see cref="T:System.Drawing.Region" /> 的水平偏移量。</param>
      <param name="dy">此 <see cref="T:System.Drawing.Region" /> 的垂直偏移量。</param>
    </member>
    <member name="M:System.Drawing.Region.Union(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>将此 <see cref="T:System.Drawing.Region" /> 更新为其自身与指定 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 的并集。</summary>
      <param name="path">要与此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 合并的 <see cref="T:System.Drawing.Region" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Region.Union(System.Drawing.Rectangle)">
      <summary>将此 <see cref="T:System.Drawing.Region" /> 更新为其自身与指定 <see cref="T:System.Drawing.Rectangle" /> 结构的并集。</summary>
      <param name="rect">要与此 <see cref="T:System.Drawing.Rectangle" /> 合并的 <see cref="T:System.Drawing.Region" /> 结构。</param>
    </member>
    <member name="M:System.Drawing.Region.Union(System.Drawing.RectangleF)">
      <summary>将此 <see cref="T:System.Drawing.Region" /> 更新为其自身与指定 <see cref="T:System.Drawing.RectangleF" /> 结构的并集。</summary>
      <param name="rect">要与此 <see cref="T:System.Drawing.RectangleF" /> 合并的 <see cref="T:System.Drawing.Region" /> 结构。</param>
    </member>
    <member name="M:System.Drawing.Region.Union(System.Drawing.Region)">
      <summary>将此 <see cref="T:System.Drawing.Region" /> 更新为其自身与指定 <see cref="T:System.Drawing.Region" /> 的并集。</summary>
      <param name="region">要与此 <see cref="T:System.Drawing.Region" /> 合并的 <see cref="T:System.Drawing.Region" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="region" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Region.Xor(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>将此 <see cref="T:System.Drawing.Region" /> 更新为其自身与指定 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 的并集减去这两者的交集。</summary>
      <param name="path">要与此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 进行 <see cref="Overload:System.Drawing.Region.Xor" /> 的 <see cref="T:System.Drawing.Region" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Region.Xor(System.Drawing.Rectangle)">
      <summary>将此 <see cref="T:System.Drawing.Region" /> 更新为其自身与指定 <see cref="T:System.Drawing.Rectangle" /> 结构的并集减去这两者的交集。</summary>
      <param name="rect">要与此 <see cref="T:System.Drawing.Rectangle" /> 进行 <see cref="Overload:System.Drawing.Region.Xor" /> 的 <see cref="T:System.Drawing.Region" /> 结构。</param>
    </member>
    <member name="M:System.Drawing.Region.Xor(System.Drawing.RectangleF)">
      <summary>将此 <see cref="T:System.Drawing.Region" /> 更新为其自身与指定 <see cref="T:System.Drawing.RectangleF" /> 结构的并集减去这两者的交集。</summary>
      <param name="rect">要与此 <see cref="T:System.Drawing.RectangleF" /> 进行 <see cref="M:System.Drawing.Region.Xor(System.Drawing.Drawing2D.GraphicsPath)" /> 的 <see cref="T:System.Drawing.Region" /> 结构。</param>
    </member>
    <member name="M:System.Drawing.Region.Xor(System.Drawing.Region)">
      <summary>将此 <see cref="T:System.Drawing.Region" /> 更新为其自身与指定 <see cref="T:System.Drawing.Region" /> 的并集减去这两者的交集。</summary>
      <param name="region">要与此 <see cref="T:System.Drawing.Region" /> 进行 <see cref="Overload:System.Drawing.Region.Xor" /> 的 <see cref="T:System.Drawing.Region" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="region" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="T:System.Drawing.RotateFlipType">
      <summary>指定图像的旋转程度和用于翻转图像的轴。</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate180FlipNone">
      <summary>指定不进行翻转的 180 度顺时针旋转。</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate180FlipX">
      <summary>指定后接水平翻转的 180 度顺时针旋转。</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate180FlipXY">
      <summary>指定后接水平翻转和垂直翻转的 180 度顺时针旋转。</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate180FlipY">
      <summary>指定后接垂直翻转的 180 度顺时针旋转。</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate270FlipNone">
      <summary>指定不进行翻转的 270 度顺时针旋转。</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate270FlipX">
      <summary>指定后接水平翻转的 270 度顺时针旋转。</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate270FlipXY">
      <summary>指定后接水平翻转和垂直翻转的 270 度顺时针旋转。</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate270FlipY">
      <summary>指定后接垂直翻转的 270 度顺时针旋转。</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate90FlipNone">
      <summary>指定不进行翻转的 90 度顺时针旋转。</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate90FlipX">
      <summary>指定后接水平翻转的 90 度顺时针旋转。</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate90FlipXY">
      <summary>指定后接水平翻转和垂直翻转的 90 度顺时针旋转。</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate90FlipY">
      <summary>指定后接垂直翻转的 90 度顺时针旋转。</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.RotateNoneFlipNone">
      <summary>指定不进行顺时针旋转和翻转。</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.RotateNoneFlipX">
      <summary>指定没有后接水平翻转的顺时针旋转。</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.RotateNoneFlipXY">
      <summary>指定没有后接水平翻转和垂直翻转的顺时针旋转。</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.RotateNoneFlipY">
      <summary>指定没有后接垂直翻转的顺时针旋转。</summary>
    </member>
    <member name="T:System.Drawing.SolidBrush">
      <summary>定义单色画笔。 画笔用于填充图形形状，如矩形、椭圆、扇形、多边形和封闭路径。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Drawing.SolidBrush.#ctor(System.Drawing.Color)">
      <summary>初始化指定颜色的新 <see cref="T:System.Drawing.SolidBrush" /> 对象。</summary>
      <param name="color">一个 <see cref="T:System.Drawing.Color" /> 结构，它表示此画笔的颜色。</param>
    </member>
    <member name="M:System.Drawing.SolidBrush.Clone">
      <summary>创建此 <see cref="T:System.Drawing.SolidBrush" /> 对象的一个精确副本。</summary>
      <returns>此方法创建的 <see cref="T:System.Drawing.SolidBrush" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.SolidBrush.Color">
      <summary>获取或设置此 <see cref="T:System.Drawing.SolidBrush" /> 对象的颜色。</summary>
      <returns>一个 <see cref="T:System.Drawing.Color" /> 结构，它表示此画笔的颜色。</returns>
      <exception cref="T:System.ArgumentException">对不可变的 <see cref="P:System.Drawing.SolidBrush.Color" /> 设置 <see cref="T:System.Drawing.SolidBrush" /> 属性。</exception>
    </member>
    <member name="T:System.Drawing.StringAlignment">
      <summary>指定文本字符串相对于其布局矩形的对齐方式。</summary>
    </member>
    <member name="F:System.Drawing.StringAlignment.Center">
      <summary>指定文本在布局矩形中居中对齐。</summary>
    </member>
    <member name="F:System.Drawing.StringAlignment.Far">
      <summary>指定文本远离布局矩形的原点位置对齐。 在左到右布局中，远端位置是右。 在右到左布局中，远端位置是左。</summary>
    </member>
    <member name="F:System.Drawing.StringAlignment.Near">
      <summary>指定文本靠近布局对齐。 在左到右布局中，近端位置是左。 在右到左布局中，近端位置是右。</summary>
    </member>
    <member name="T:System.Drawing.StringDigitSubstitute">
      <summary>
        <see cref="T:System.Drawing.StringDigitSubstitute" /> 枚举指定如何按照用户的区域设置或语言替换字符串中的数字位。</summary>
    </member>
    <member name="F:System.Drawing.StringDigitSubstitute.National">
      <summary>指定与用户区域设置的正式国家/地区语言相对应的替换数字位。</summary>
    </member>
    <member name="F:System.Drawing.StringDigitSubstitute.None">
      <summary>指定禁用替换。</summary>
    </member>
    <member name="F:System.Drawing.StringDigitSubstitute.Traditional">
      <summary>指定与用户的本机脚本或语言（可能与用户区域设置的正式国家/地区语言不同）相对应的替换数字位。</summary>
    </member>
    <member name="F:System.Drawing.StringDigitSubstitute.User">
      <summary>指定用户定义的替换方案。</summary>
    </member>
    <member name="T:System.Drawing.StringFormat">
      <summary>封装文本布局信息（如对齐、文字方向和 Tab 停靠位），显示操作（如省略号插入和国家标准 (National) 数字替换）和 OpenType 功能。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Drawing.StringFormat.#ctor">
      <summary>初始化新的 <see cref="T:System.Drawing.StringFormat" /> 对象。</summary>
    </member>
    <member name="M:System.Drawing.StringFormat.#ctor(System.Drawing.StringFormat)">
      <summary>从指定的现有 <see cref="T:System.Drawing.StringFormat" /> 对象初始化新 <see cref="T:System.Drawing.StringFormat" /> 对象。</summary>
      <param name="format">
        <see cref="T:System.Drawing.StringFormat" /> 对象，从该对象初始化新 <see cref="T:System.Drawing.StringFormat" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.StringFormat.#ctor(System.Drawing.StringFormatFlags)">
      <summary>用指定的 <see cref="T:System.Drawing.StringFormatFlags" /> 枚举初始化新 <see cref="T:System.Drawing.StringFormat" /> 对象。</summary>
      <param name="options">新 <see cref="T:System.Drawing.StringFormatFlags" /> 对象的 <see cref="T:System.Drawing.StringFormat" /> 枚举。</param>
    </member>
    <member name="M:System.Drawing.StringFormat.#ctor(System.Drawing.StringFormatFlags,System.Int32)">
      <summary>用指定的 <see cref="T:System.Drawing.StringFormat" /> 枚举和语言初始化新的 <see cref="T:System.Drawing.StringFormatFlags" /> 对象。</summary>
      <param name="options">新 <see cref="T:System.Drawing.StringFormat" /> 对象的 <see cref="T:System.Drawing.StringFormatFlags" /> 枚举。</param>
      <param name="language">一个指示文本语言的值。</param>
    </member>
    <member name="P:System.Drawing.StringFormat.Alignment">
      <summary>获取或设置字符串的水平对齐方式。</summary>
      <returns>
        <see cref="T:System.Drawing.StringAlignment" /> 枚举，它指定字符串的水平对齐方式。</returns>
    </member>
    <member name="M:System.Drawing.StringFormat.Clone">
      <summary>创建此 <see cref="T:System.Drawing.StringFormat" /> 对象的一个精确副本。</summary>
      <returns>此方法创建的 <see cref="T:System.Drawing.StringFormat" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.StringFormat.DigitSubstitutionLanguage">
      <summary>获取用本地数字替换西方数字时使用的语言。</summary>
      <returns>一个区域语言支持 (NLS) 语言标识符，它标识在将本地数字替换为西方数字时所使用的语言。 可将 <see cref="T:System.Globalization.CultureInfo" /> 对象的 <see cref="P:System.Globalization.CultureInfo.LCID" /> 属性作为 NLS 语言标识符传递。 例如，假定通过将字符串“ar-EG”传递给 <see cref="T:System.Globalization.CultureInfo" /> 构造函数来创建 <see cref="T:System.Globalization.CultureInfo" /> 对象。 如果将该 <see cref="T:System.Globalization.CultureInfo" /> 对象的 <see cref="P:System.Globalization.CultureInfo.LCID" /> 属性连同 <see cref="F:System.Drawing.StringDigitSubstitute.Traditional" /> 一起传递给 <see cref="M:System.Drawing.StringFormat.SetDigitSubstitution(System.Int32,System.Drawing.StringDigitSubstitute)" />，则在显示时阿拉伯 - 印度文数字将会替换西方数字。</returns>
    </member>
    <member name="P:System.Drawing.StringFormat.DigitSubstitutionMethod">
      <summary>获取要用于数字替换的方法。</summary>
      <returns>
        <see cref="T:System.Drawing.StringDigitSubstitute" /> 枚举值，它指定如何替换字符串中因当前字体不支持而无法显示的字符。</returns>
    </member>
    <member name="M:System.Drawing.StringFormat.Dispose">
      <summary>释放由此 <see cref="T:System.Drawing.StringFormat" /> 对象使用的所有资源。</summary>
    </member>
    <member name="M:System.Drawing.StringFormat.Finalize">
      <summary>在垃圾回收将某一对象回收前允许该对象尝试释放资源并执行其他清理操作。</summary>
    </member>
    <member name="P:System.Drawing.StringFormat.FormatFlags">
      <summary>获取或设置包含格式化信息的 <see cref="T:System.Drawing.StringFormatFlags" /> 枚举。</summary>
      <returns>包含格式化信息的 <see cref="T:System.Drawing.StringFormatFlags" /> 枚举。</returns>
    </member>
    <member name="P:System.Drawing.StringFormat.GenericDefault">
      <summary>获取一般的默认 <see cref="T:System.Drawing.StringFormat" /> 对象。</summary>
      <returns>泛型默认 <see cref="T:System.Drawing.StringFormat" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.StringFormat.GenericTypographic">
      <summary>获取泛型版式 <see cref="T:System.Drawing.StringFormat" /> 对象。</summary>
      <returns>泛型版式 <see cref="T:System.Drawing.StringFormat" /> 对象。</returns>
    </member>
    <member name="M:System.Drawing.StringFormat.GetTabStops(System.Single@)">
      <summary>获取此 <see cref="T:System.Drawing.StringFormat" /> 对象的制表位。</summary>
      <param name="firstTabOffset">文本行的开头到第一个制表位之间的空格数。</param>
      <returns>制表位之间的距离（以空格数表示）的数组。</returns>
    </member>
    <member name="P:System.Drawing.StringFormat.HotkeyPrefix">
      <summary>获取或设置此 <see cref="T:System.Drawing.StringFormat" /> 对象的 <see cref="T:System.Drawing.Text.HotkeyPrefix" /> 对象。</summary>
      <returns>此 <see cref="T:System.Drawing.StringFormat" /> 对象的 <see cref="T:System.Drawing.Text.HotkeyPrefix" /> 对象，默认值为 <see cref="F:System.Drawing.Text.HotkeyPrefix.None" />。</returns>
    </member>
    <member name="P:System.Drawing.StringFormat.LineAlignment">
      <summary>获取或设置字符串的垂直对齐方式。</summary>
      <returns>
        <see cref="T:System.Drawing.StringAlignment" /> 枚举，它表示行的垂直对齐方式。</returns>
    </member>
    <member name="M:System.Drawing.StringFormat.SetDigitSubstitution(System.Int32,System.Drawing.StringDigitSubstitute)">
      <summary>指定将本地数字替换为西方数字时所使用的语言和方法。</summary>
      <param name="language">一个区域语言支持 (NLS) 语言标识符，它标识在将本地数字替换为西方数字时所使用的语言。 可将 <see cref="T:System.Globalization.CultureInfo" /> 对象的 <see cref="P:System.Globalization.CultureInfo.LCID" /> 属性作为 NLS 语言标识符传递。 例如，假定通过将字符串“ar-EG”传递给 <see cref="T:System.Globalization.CultureInfo" /> 构造函数来创建 <see cref="T:System.Globalization.CultureInfo" /> 对象。 如果将该 <see cref="T:System.Globalization.CultureInfo" /> 对象的 <see cref="P:System.Globalization.CultureInfo.LCID" /> 属性连同 <see cref="F:System.Drawing.StringDigitSubstitute.Traditional" /> 一起传递给 <see cref="M:System.Drawing.StringFormat.SetDigitSubstitution(System.Int32,System.Drawing.StringDigitSubstitute)" />，则在显示时阿拉伯 - 印度文数字将会替换西方数字。</param>
      <param name="substitute">
        <see cref="T:System.Drawing.StringDigitSubstitute" /> 枚举的一个元素，它指定如何显示数字位。</param>
    </member>
    <member name="M:System.Drawing.StringFormat.SetMeasurableCharacterRanges(System.Drawing.CharacterRange[])">
      <summary>指定 <see cref="T:System.Drawing.CharacterRange" /> 结构的数组，这些结构表示通过调用 <see cref="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)" /> 方法来测定的字符的范围。</summary>
      <param name="ranges">
        <see cref="T:System.Drawing.CharacterRange" /> 结构的数组，这些结构指定由调用 <see cref="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)" /> 方法来测定的字符范围。</param>
      <exception cref="T:System.OverflowException">已设置超过 32 个字符范围。</exception>
    </member>
    <member name="M:System.Drawing.StringFormat.SetTabStops(System.Single,System.Single[])">
      <summary>为此 <see cref="T:System.Drawing.StringFormat" /> 对象设置制表位。</summary>
      <param name="firstTabOffset">文本行开头和第一个制表位之间的空格数。</param>
      <param name="tabStops">制表位之间的距离的数组，这些距离的单位由 <see cref="P:System.Drawing.Graphics.PageUnit" /> 属性指定。</param>
    </member>
    <member name="M:System.Drawing.StringFormat.ToString">
      <summary>将此 <see cref="T:System.Drawing.StringFormat" /> 对象转换为可读的字符串。</summary>
      <returns>此 <see cref="T:System.Drawing.StringFormat" /> 对象的字符串表示形式。</returns>
    </member>
    <member name="P:System.Drawing.StringFormat.Trimming">
      <summary>获取或设置此 <see cref="T:System.Drawing.StringFormat" /> 对象的 <see cref="T:System.Drawing.StringTrimming" /> 枚举。</summary>
      <returns>
        <see cref="T:System.Drawing.StringTrimming" /> 枚举，它指示当用此 <see cref="T:System.Drawing.StringFormat" /> 对象绘制的文本超出布局矩形的边缘时被剪裁的方式。</returns>
    </member>
    <member name="T:System.Drawing.StringFormatFlags">
      <summary>指定文本字符串的显示和布局信息。</summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.DirectionRightToLeft">
      <summary>按从右向左的顺序显示文本。</summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.DirectionVertical">
      <summary>垂直对齐文本。</summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.DisplayFormatControl">
      <summary>控制字符（如从左到右标记）随具有代表性的字形一起显示在输出中。</summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.FitBlackBox">
      <summary>允许部分字符延伸该字符串的布局矩形。 默认情况下，将重新定位字符以避免任何延伸。</summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.LineLimit">
      <summary>在格式化的矩形中只布置整行。 默认情况下，这种布置要继续到文本的结尾为止，或者到由于剪裁而不再有可见的行为止，看哪种情况先发生。 注意，此默认设置允许不是行高整数倍的格式化矩形将最后一行的部分遮住。 若要确保看到的都是整行，请指定此值，并注意提供格式化矩形，使其高度至少为一个行高。</summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.MeasureTrailingSpaces">
      <summary>包括每一行结尾处的尾随空格。 在默认情况下，<see cref="Overload:System.Drawing.Graphics.MeasureString" /> 方法返回的边界矩形都将排除每一行结尾处的空格。 设置此标记以便在测定时将空格包括进去。</summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.NoClip">
      <summary>允许显示字形符号的伸出部分和延伸到矩形外的未换行文本。 默认情况下，延伸到矩形外侧的所有文本和字形部分都会被剪裁掉。</summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.NoFontFallback">
      <summary>对于请求的字体中不支持的字符，禁用回退到可选字体。 丢失的任何字符都用丢失字形的字体显示，通常为一个空的方块。</summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.NoWrap">
      <summary>在矩形内设置格式时，禁用自动换行功能。 当传递的是点而不是矩形时，或者指定矩形的行长度为零时，已隐含此标记。</summary>
    </member>
    <member name="T:System.Drawing.StringTrimming">
      <summary>指定如何在不完全适合布局形状的字符串中修整字符。</summary>
    </member>
    <member name="F:System.Drawing.StringTrimming.Character">
      <summary>指定将文本修整成最接近的字符。</summary>
    </member>
    <member name="F:System.Drawing.StringTrimming.EllipsisCharacter">
      <summary>指定将文本修整成最接近的字符，并在被修整的行的末尾插入一个省略号。</summary>
    </member>
    <member name="F:System.Drawing.StringTrimming.EllipsisPath">
      <summary>中心从被修整的行移除并用省略号替换。 这种算法尽可能多地保留了行中的最后一个由斜杠分隔的段。</summary>
    </member>
    <member name="F:System.Drawing.StringTrimming.EllipsisWord">
      <summary>指定将文本修整成最接近的单词，并在被修整的行的末尾插入一个省略号。</summary>
    </member>
    <member name="F:System.Drawing.StringTrimming.None">
      <summary>指定不进行任何修整。</summary>
    </member>
    <member name="F:System.Drawing.StringTrimming.Word">
      <summary>指定将文本修整成最接近的单词。</summary>
    </member>
    <member name="T:System.Drawing.StringUnit">
      <summary>指定文本字符串的度量单位。</summary>
    </member>
    <member name="F:System.Drawing.StringUnit.Display">
      <summary>将设备单位指定为度量单位。</summary>
    </member>
    <member name="F:System.Drawing.StringUnit.Document">
      <summary>将 1/300 英寸指定为度量单位。</summary>
    </member>
    <member name="F:System.Drawing.StringUnit.Em">
      <summary>将打印机的 32 号全长尺寸指定为度量单位。</summary>
    </member>
    <member name="F:System.Drawing.StringUnit.Inch">
      <summary>将英寸指定为度量单位。</summary>
    </member>
    <member name="F:System.Drawing.StringUnit.Millimeter">
      <summary>将毫米指定为度量单位。</summary>
    </member>
    <member name="F:System.Drawing.StringUnit.Pixel">
      <summary>将像素指定为度量单位。</summary>
    </member>
    <member name="F:System.Drawing.StringUnit.Point">
      <summary>将打印机点（1/72 英寸）指定为度量单位。</summary>
    </member>
    <member name="F:System.Drawing.StringUnit.World">
      <summary>将全局单位指定为度量单位。</summary>
    </member>
    <member name="T:System.Drawing.SystemBrushes">
      <summary>
        <see cref="T:System.Drawing.SystemBrushes" /> 类的每个属性都是一个 <see cref="T:System.Drawing.SolidBrush" />，它是 Windows 显示元素的颜色。</summary>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ActiveBorder">
      <summary>获取作为活动窗口边框的颜色的 <see cref="T:System.Drawing.SolidBrush" />。</summary>
      <returns>一个 <see cref="T:System.Drawing.SolidBrush" />，它是活动窗口边框的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ActiveCaption">
      <summary>获取表示活动窗口标题栏背景颜色的 <see cref="T:System.Drawing.SolidBrush" />。</summary>
      <returns>一个 <see cref="T:System.Drawing.SolidBrush" />，它是活动窗口标题栏的背景的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ActiveCaptionText">
      <summary>获取 <see cref="T:System.Drawing.SolidBrush" />，它是活动窗口标题栏中文本的颜色。</summary>
      <returns>一个 <see cref="T:System.Drawing.SolidBrush" />，它是活动窗口标题栏的背景的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.AppWorkspace">
      <summary>获取表示应用程序工作区的颜色的 <see cref="T:System.Drawing.SolidBrush" />。</summary>
      <returns>一个 <see cref="T:System.Drawing.SolidBrush" />，它是应用程序工作区的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ButtonFace">
      <summary>获取表示三维元素表面颜色的 <see cref="T:System.Drawing.SolidBrush" />。</summary>
      <returns>
        <see cref="T:System.Drawing.SolidBrush" />，它是三维元素的表面颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ButtonHighlight">
      <summary>获取表示三维元素突出显示颜色的 <see cref="T:System.Drawing.SolidBrush" />。</summary>
      <returns>
        <see cref="T:System.Drawing.SolidBrush" />，它是三维元素的高光点颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ButtonShadow">
      <summary>获取表示三维元素阴影颜色的 <see cref="T:System.Drawing.SolidBrush" />。</summary>
      <returns>
        <see cref="T:System.Drawing.SolidBrush" />，它是三维元素的阴影颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.Control">
      <summary>获取表示三维元素表面颜色的 <see cref="T:System.Drawing.SolidBrush" />。</summary>
      <returns>
        <see cref="T:System.Drawing.SolidBrush" />，它是三维元素的表面颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ControlDark">
      <summary>获取表示三维元素阴影颜色的 <see cref="T:System.Drawing.SolidBrush" />。</summary>
      <returns>
        <see cref="T:System.Drawing.SolidBrush" />，它是三维元素的阴影颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ControlDarkDark">
      <summary>获取表示三维元素暗阴影颜色的 <see cref="T:System.Drawing.SolidBrush" />。</summary>
      <returns>一个 <see cref="T:System.Drawing.SolidBrush" />，它是三维元素的暗阴影颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ControlLight">
      <summary>获取表示三维元素亮色的 <see cref="T:System.Drawing.SolidBrush" />。</summary>
      <returns>一个 <see cref="T:System.Drawing.SolidBrush" />，它是三维元素的亮色。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ControlLightLight">
      <summary>获取表示三维元素突出显示颜色的 <see cref="T:System.Drawing.SolidBrush" />。</summary>
      <returns>
        <see cref="T:System.Drawing.SolidBrush" />，它是三维元素的高光点颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ControlText">
      <summary>获取表示三维元素中文本颜色的 <see cref="T:System.Drawing.SolidBrush" />。</summary>
      <returns>一个 <see cref="T:System.Drawing.SolidBrush" />，它是三维元素中文本的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.Desktop">
      <summary>获取 <see cref="T:System.Drawing.SolidBrush" />，它是桌面的颜色。</summary>
      <returns>一个 <see cref="T:System.Drawing.SolidBrush" />，它是桌面的颜色。</returns>
    </member>
    <member name="M:System.Drawing.SystemBrushes.FromSystemColor(System.Drawing.Color)">
      <summary>从指定的 <see cref="T:System.Drawing.Brush" /> 结构创建 <see cref="T:System.Drawing.Color" />。</summary>
      <param name="c">要从其中创建 <see cref="T:System.Drawing.Color" /> 的 <see cref="T:System.Drawing.Brush" /> 结构。</param>
      <returns>此方法创建的 <see cref="T:System.Drawing.Brush" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.GradientActiveCaption">
      <summary>获取表示活动窗口标题栏的颜色渐变中最亮的颜色的 <see cref="T:System.Drawing.SolidBrush" />。</summary>
      <returns>一个 <see cref="T:System.Drawing.SolidBrush" />，它是活动窗口标题栏的颜色渐变中的最亮颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.GradientInactiveCaption">
      <summary>获取表示非活动窗口标题栏的颜色渐变中最亮的颜色的 <see cref="T:System.Drawing.SolidBrush" />。</summary>
      <returns>一个 <see cref="T:System.Drawing.SolidBrush" />，它是非活动窗口标题栏的颜色渐变中的最亮颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.GrayText">
      <summary>获取表示禁用文本的颜色的 <see cref="T:System.Drawing.SolidBrush" />。</summary>
      <returns>一个 <see cref="T:System.Drawing.SolidBrush" />，它是浅灰色文本的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.Highlight">
      <summary>获取表示选定项背景颜色的 <see cref="T:System.Drawing.SolidBrush" />。</summary>
      <returns>一个 <see cref="T:System.Drawing.SolidBrush" />，它是选定项的背景的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.HighlightText">
      <summary>获取一个 <see cref="T:System.Drawing.SolidBrush" /> 结构，它为选定项的文本颜色。</summary>
      <returns>一个 <see cref="T:System.Drawing.SolidBrush" />，它是选定项的文本的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.HotTrack">
      <summary>获取 <see cref="T:System.Drawing.SolidBrush" />，它是用于指定热跟踪项的颜色。</summary>
      <returns>一个 <see cref="T:System.Drawing.SolidBrush" />，它是用于指定热跟踪项的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.InactiveBorder">
      <summary>获取 <see cref="T:System.Drawing.SolidBrush" />，它是非活动窗口边框的颜色。</summary>
      <returns>一个 <see cref="T:System.Drawing.SolidBrush" />，它是非活动窗口边框的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.InactiveCaption">
      <summary>获取 <see cref="T:System.Drawing.SolidBrush" />，它是非活动窗口标题栏的背景的颜色。</summary>
      <returns>一个 <see cref="T:System.Drawing.SolidBrush" />，它是非活动窗口标题栏的背景的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.InactiveCaptionText">
      <summary>获取表示非活动窗口标题栏中文本颜色的 <see cref="T:System.Drawing.SolidBrush" />。</summary>
      <returns>
        <see cref="T:System.Drawing.SolidBrush" />，它是非活动窗口标题栏中文本的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.Info">
      <summary>获取表示工具提示的背景颜色的 <see cref="T:System.Drawing.SolidBrush" />。</summary>
      <returns>一个 <see cref="T:System.Drawing.SolidBrush" />，它是工具提示的背景的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.InfoText">
      <summary>获取表示工具提示的文本颜色的 <see cref="T:System.Drawing.SolidBrush" />。</summary>
      <returns>一个 <see cref="T:System.Drawing.SolidBrush" />，它是工具提示的文本的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.Menu">
      <summary>获取表示菜单背景颜色的 <see cref="T:System.Drawing.SolidBrush" />。</summary>
      <returns>一个 <see cref="T:System.Drawing.SolidBrush" />，它是菜单背景的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.MenuBar">
      <summary>获取表示菜单栏背景颜色的 <see cref="T:System.Drawing.SolidBrush" />。</summary>
      <returns>一个 <see cref="T:System.Drawing.SolidBrush" />，它是菜单栏的背景的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.MenuHighlight">
      <summary>获取表示当菜单显示为平面菜单时用于突出显示菜单项的颜色的 <see cref="T:System.Drawing.SolidBrush" />。</summary>
      <returns>一个 <see cref="T:System.Drawing.SolidBrush" />，它是当菜单显示为平面菜单时用于突出显示菜单项的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.MenuText">
      <summary>获取表示菜单文本颜色的 <see cref="T:System.Drawing.SolidBrush" />。</summary>
      <returns>一个 <see cref="T:System.Drawing.SolidBrush" />，它是菜单文本的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ScrollBar">
      <summary>获取表示滚动条背景颜色的 <see cref="T:System.Drawing.SolidBrush" />。</summary>
      <returns>一个 <see cref="T:System.Drawing.SolidBrush" />，它是滚动条背景的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.Window">
      <summary>获取表示窗口工作区中背景颜色的 <see cref="T:System.Drawing.SolidBrush" />。</summary>
      <returns>一个 <see cref="T:System.Drawing.SolidBrush" />，它是窗口工作区中背景的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.WindowFrame">
      <summary>获取表示窗口框架颜色的 <see cref="T:System.Drawing.SolidBrush" />。</summary>
      <returns>一个 <see cref="T:System.Drawing.SolidBrush" />，它是窗口框架的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.WindowText">
      <summary>获取表示窗口工作区中文本颜色的 <see cref="T:System.Drawing.SolidBrush" />。</summary>
      <returns>一个 <see cref="T:System.Drawing.SolidBrush" />，它是窗口工作区中文本的颜色。</returns>
    </member>
    <member name="T:System.Drawing.SystemColors">
      <summary>
        <see cref="T:System.Drawing.SystemColors" /> 类的每个属性都是 <see cref="T:System.Drawing.Color" /> 结构，这种结构是 Windows 显示元素的颜色。</summary>
    </member>
    <member name="P:System.Drawing.SystemColors.ActiveBorder">
      <summary>获取表示活动窗口边框的颜色的 <see cref="T:System.Drawing.Color" /> 结构。</summary>
      <returns>一个 <see cref="T:System.Drawing.Color" />，它是活动窗口边框的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.ActiveCaption">
      <summary>获取 <see cref="T:System.Drawing.Color" /> 结构，它是活动窗口标题栏的背景色。</summary>
      <returns>一个 <see cref="T:System.Drawing.Color" />，它是活动窗口标题栏的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.ActiveCaptionText">
      <summary>获取一个 <see cref="T:System.Drawing.Color" />，它是活动窗口标题栏中文本的颜色。</summary>
      <returns>一个 <see cref="T:System.Drawing.Color" />，它是活动窗口标题栏中文本的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.AppWorkspace">
      <summary>获取 <see cref="T:System.Drawing.Color" /> 结构，它是应用程序工作区的颜色。</summary>
      <returns>一个 <see cref="T:System.Drawing.Color" />，它是应用程序工作区的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.ButtonFace">
      <summary>获取 <see cref="T:System.Drawing.Color" /> 结构，它是三维元素的表面颜色。</summary>
      <returns>
        <see cref="T:System.Drawing.Color" />，它是三维元素的表面颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.ButtonHighlight">
      <summary>获取 <see cref="T:System.Drawing.Color" /> 结构，它是三维元素的突出显示颜色。</summary>
      <returns>
        <see cref="T:System.Drawing.Color" />，它是三维元素的高光点颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.ButtonShadow">
      <summary>获取 <see cref="T:System.Drawing.Color" /> 结构，它是三维元素的阴影颜色。</summary>
      <returns>
        <see cref="T:System.Drawing.Color" />，它是三维元素的阴影颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.Control">
      <summary>获取 <see cref="T:System.Drawing.Color" /> 结构，它是三维元素的表面颜色。</summary>
      <returns>
        <see cref="T:System.Drawing.Color" />，它是三维元素的表面颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.ControlDark">
      <summary>获取 <see cref="T:System.Drawing.Color" /> 结构，它是三维元素的阴影颜色。</summary>
      <returns>
        <see cref="T:System.Drawing.Color" />，它是三维元素的阴影颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.ControlDarkDark">
      <summary>获取 <see cref="T:System.Drawing.Color" /> 结构，它是三维元素的暗阴影颜色。</summary>
      <returns>一个 <see cref="T:System.Drawing.Color" />，它是三维元素的暗阴影颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.ControlLight">
      <summary>获取 <see cref="T:System.Drawing.Color" /> 结构，它是三维元素的亮色。</summary>
      <returns>一个 <see cref="T:System.Drawing.Color" />，它是三维元素的亮色。</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.ControlLightLight">
      <summary>获取 <see cref="T:System.Drawing.Color" /> 结构，它是三维元素的突出显示颜色。</summary>
      <returns>
        <see cref="T:System.Drawing.Color" />，它是三维元素的高光点颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.ControlText">
      <summary>获取 <see cref="T:System.Drawing.Color" /> 结构，它是三维元素中的文本颜色。</summary>
      <returns>一个 <see cref="T:System.Drawing.Color" />，它是三维元素中文本的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.Desktop">
      <summary>获取 <see cref="T:System.Drawing.Color" /> 结构，它是桌面的颜色。</summary>
      <returns>一个 <see cref="T:System.Drawing.Color" />，它是桌面的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.GradientActiveCaption">
      <summary>获取 <see cref="T:System.Drawing.Color" /> 结构，它是活动窗口标题栏的颜色渐变中的最亮色。</summary>
      <returns>一个 <see cref="T:System.Drawing.Color" />，它是活动窗口标题栏的颜色渐变中的最亮颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.GradientInactiveCaption">
      <summary>获取 <see cref="T:System.Drawing.Color" /> 结构，它是非活动窗口标题栏的颜色渐变中的最亮色。</summary>
      <returns>一个 <see cref="T:System.Drawing.Color" />，它是非活动窗口标题栏的颜色渐变中的最亮颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.GrayText">
      <summary>获取 <see cref="T:System.Drawing.Color" /> 结构，它是浅灰色文本的颜色。</summary>
      <returns>一个 <see cref="T:System.Drawing.Color" />，它是浅灰色文本的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.Highlight">
      <summary>获取 <see cref="T:System.Drawing.Color" /> 结构，它是选定项的背景色。</summary>
      <returns>一个 <see cref="T:System.Drawing.Color" />，它是选定项的背景的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.HighlightText">
      <summary>获取 <see cref="T:System.Drawing.Color" /> 结构，它是选定项的文本颜色。</summary>
      <returns>一个 <see cref="T:System.Drawing.Color" />，它是选定项的文本的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.HotTrack">
      <summary>获取 <see cref="T:System.Drawing.Color" /> 结构，它是用于指定热跟踪项的颜色。</summary>
      <returns>一个 <see cref="T:System.Drawing.Color" />，它是用于指定热跟踪项的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.InactiveBorder">
      <summary>获取 <see cref="T:System.Drawing.Color" /> 结构，它是非活动窗口的边框颜色。</summary>
      <returns>一个 <see cref="T:System.Drawing.Color" />，它是非活动窗口边框的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.InactiveCaption">
      <summary>获取 <see cref="T:System.Drawing.Color" /> 结构，它是非活动窗口的标题栏的背景色。</summary>
      <returns>一个 <see cref="T:System.Drawing.Color" />，它是非活动窗口标题栏的背景的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.InactiveCaptionText">
      <summary>获取 <see cref="T:System.Drawing.Color" /> 结构，它是非活动窗口的标题栏中的文本颜色。</summary>
      <returns>
        <see cref="T:System.Drawing.Color" />，它是非活动窗口标题栏中文本的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.Info">
      <summary>获取 <see cref="T:System.Drawing.Color" /> 结构，它是工具提示的背景色。</summary>
      <returns>一个 <see cref="T:System.Drawing.Color" />，它是工具提示的背景的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.InfoText">
      <summary>获取 <see cref="T:System.Drawing.Color" /> 结构，它是工具提示文本的颜色。</summary>
      <returns>一个 <see cref="T:System.Drawing.Color" />，它是工具提示的文本的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.Menu">
      <summary>获取 <see cref="T:System.Drawing.Color" /> 结构，它是菜单的背景色。</summary>
      <returns>一个 <see cref="T:System.Drawing.Color" />，它是菜单背景的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.MenuBar">
      <summary>获取 <see cref="T:System.Drawing.Color" /> 结构，它是菜单栏的背景色。</summary>
      <returns>一个 <see cref="T:System.Drawing.Color" />，它是菜单栏的背景的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.MenuHighlight">
      <summary>获取 <see cref="T:System.Drawing.Color" /> 结构，它是当菜单显示为平面菜单时用于突出显示菜单项的颜色。</summary>
      <returns>一个 <see cref="T:System.Drawing.Color" />，它是当菜单显示为平面菜单时用于突出显示菜单项的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.MenuText">
      <summary>获取 <see cref="T:System.Drawing.Color" /> 结构，它是菜单文本的颜色。</summary>
      <returns>一个 <see cref="T:System.Drawing.Color" />，它是菜单文本的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.ScrollBar">
      <summary>获取 <see cref="T:System.Drawing.Color" /> 结构，它是滚动条的背景色。</summary>
      <returns>一个 <see cref="T:System.Drawing.Color" />，它是滚动条背景的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.Window">
      <summary>获取 <see cref="T:System.Drawing.Color" /> 结构，它是窗口工作区中的背景色。</summary>
      <returns>一个 <see cref="T:System.Drawing.Color" />，它是窗口工作区中背景的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.WindowFrame">
      <summary>获取 <see cref="T:System.Drawing.Color" /> 结构，它是窗口框架的颜色。</summary>
      <returns>一个 <see cref="T:System.Drawing.Color" />，它是窗口框架的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemColors.WindowText">
      <summary>获取 <see cref="T:System.Drawing.Color" /> 结构，它是窗口工作区文本的颜色。</summary>
      <returns>一个 <see cref="T:System.Drawing.Color" />，它是窗口工作区中文本的颜色。</returns>
    </member>
    <member name="T:System.Drawing.SystemFonts">
      <summary>指定用于在 Windows 显示元素中显示文本的字体。</summary>
    </member>
    <member name="P:System.Drawing.SystemFonts.CaptionFont">
      <summary>获取一个用于在窗口标题栏中显示文本的 <see cref="T:System.Drawing.Font" />。</summary>
      <returns>用于在窗口标题栏中显示文本的 <see cref="T:System.Drawing.Font" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemFonts.DefaultFont">
      <summary>获取应用程序可用于对话框和窗体的默认字体。</summary>
      <returns>系统的默认 <see cref="T:System.Drawing.Font" />。 根据用户的操作系统以及系统的本地区域性设置的不同，返回的值也将不同。</returns>
    </member>
    <member name="P:System.Drawing.SystemFonts.DialogFont">
      <summary>获取应用程序可用于对话框和窗体的字体。</summary>
      <returns>一个 <see cref="T:System.Drawing.Font" />，可用于对话框和窗体（具体取决于操作系统以及系统的本地区域性设置）。</returns>
    </member>
    <member name="M:System.Drawing.SystemFonts.GetFontByName(System.String)">
      <summary>返回一个对应于指定系统字体名称的字体对象。</summary>
      <param name="systemFontName">需要字体对象的系统字体的名称。</param>
      <returns>如果指定的名称与 <see cref="T:System.Drawing.Font" /> 中的值匹配，为 <see cref="T:System.Drawing.SystemFonts" />；否则为 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemFonts.IconTitleFont">
      <summary>获取一个用于图标标题的 <see cref="T:System.Drawing.Font" />。</summary>
      <returns>用于图标标题的 <see cref="T:System.Drawing.Font" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemFonts.MenuFont">
      <summary>获取一个用于菜单的 <see cref="T:System.Drawing.Font" />。</summary>
      <returns>用于菜单的 <see cref="T:System.Drawing.Font" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemFonts.MessageBoxFont">
      <summary>获取一个用于消息框的 <see cref="T:System.Drawing.Font" />。</summary>
      <returns>用于消息框的 <see cref="T:System.Drawing.Font" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemFonts.SmallCaptionFont">
      <summary>获取一个用于在小型窗口（如工具窗口）标题栏中显示文本的 <see cref="T:System.Drawing.Font" />。</summary>
      <returns>用于在小型窗口（如工具窗口）标题栏中显示文本的 <see cref="T:System.Drawing.Font" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemFonts.StatusFont">
      <summary>获取一个用于在状态栏中显示文本的 <see cref="T:System.Drawing.Font" />。</summary>
      <returns>用于在状态栏中显示文本的 <see cref="T:System.Drawing.Font" />。</returns>
    </member>
    <member name="T:System.Drawing.SystemIcons">
      <summary>
        <see cref="T:System.Drawing.SystemIcons" /> 类的每个属性都是 Windows 系统级图标的 <see cref="T:System.Drawing.Icon" /> 对象。 此类不能被继承。</summary>
    </member>
    <member name="P:System.Drawing.SystemIcons.Application">
      <summary>获取 <see cref="T:System.Drawing.Icon" /> 对象，它包含默认的应用程序图标 (WIN32:IDI_APPLICATION)。</summary>
      <returns>
        <see cref="T:System.Drawing.Icon" /> 对象，它包含默认的应用程序图标。</returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.Asterisk">
      <summary>获取 <see cref="T:System.Drawing.Icon" /> 对象，它包含系统星号图标 (WIN32:IDI_ASTERISK)。</summary>
      <returns>
        <see cref="T:System.Drawing.Icon" /> 对象，它包含系统星号图标。</returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.Error">
      <summary>获取 <see cref="T:System.Drawing.Icon" /> 对象，它包含系统错误图标 (WIN32:IDI_ERROR)。</summary>
      <returns>
        <see cref="T:System.Drawing.Icon" /> 对象，它包含系统错误图标。</returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.Exclamation">
      <summary>获取 <see cref="T:System.Drawing.Icon" /> 对象，它包含系统惊叹号图标 (WIN32:IDI_EXCLAMATION)。</summary>
      <returns>
        <see cref="T:System.Drawing.Icon" /> 对象，它包含系统惊叹号图标。</returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.Hand">
      <summary>获取 <see cref="T:System.Drawing.Icon" /> 对象，它包含系统手状图标 (WIN32:IDI_HAND)。</summary>
      <returns>
        <see cref="T:System.Drawing.Icon" /> 对象，它包含系统手状图标。</returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.Information">
      <summary>获取 <see cref="T:System.Drawing.Icon" /> 对象，它包含系统信息图标 (WIN32:IDI_INFORMATION)。</summary>
      <returns>
        <see cref="T:System.Drawing.Icon" /> 对象，它包含系统信息图标。</returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.Question">
      <summary>获取 <see cref="T:System.Drawing.Icon" /> 对象，它包含系统问号图标 (WIN32:IDI_QUESTION)。</summary>
      <returns>
        <see cref="T:System.Drawing.Icon" /> 对象，它包含系统问号图标。</returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.Shield">
      <summary>获取包含盾牌图标的 <see cref="T:System.Drawing.Icon" /> 对象。</summary>
      <returns>一个包含盾牌图标的 <see cref="T:System.Drawing.Icon" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.Warning">
      <summary>获取 <see cref="T:System.Drawing.Icon" /> 对象，它包含系统警告图标 (WIN32:IDI_WARNING)。</summary>
      <returns>
        <see cref="T:System.Drawing.Icon" /> 对象，它包含系统警告图标。</returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.WinLogo">
      <summary>获取 <see cref="T:System.Drawing.Icon" /> 对象，它包含 Windows 徽标图标 (WIN32:IDI_WINLOGO)。</summary>
      <returns>
        <see cref="T:System.Drawing.Icon" /> 对象，它包含 Windows 徽标图标。</returns>
    </member>
    <member name="T:System.Drawing.SystemPens">
      <summary>
        <see cref="T:System.Drawing.SystemPens" /> 类的每个属性都是一个 <see cref="T:System.Drawing.Pen" />，它是 Windows 显示元素的颜色，宽度为 1 个像素。</summary>
    </member>
    <member name="P:System.Drawing.SystemPens.ActiveBorder">
      <summary>获取作为活动窗口边框的颜色的 <see cref="T:System.Drawing.Pen" />。</summary>
      <returns>一个 <see cref="T:System.Drawing.Pen" />，它是活动窗口边框的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ActiveCaption">
      <summary>获取表示活动窗口标题栏背景颜色的 <see cref="T:System.Drawing.Pen" />。</summary>
      <returns>一个 <see cref="T:System.Drawing.Pen" />，它是活动窗口标题栏的背景的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ActiveCaptionText">
      <summary>获取 <see cref="T:System.Drawing.Pen" />，它是活动窗口标题栏中文本的颜色。</summary>
      <returns>一个 <see cref="T:System.Drawing.Pen" />，它是活动窗口标题栏中文本的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.AppWorkspace">
      <summary>获取表示应用程序工作区的颜色的 <see cref="T:System.Drawing.Pen" />。</summary>
      <returns>一个 <see cref="T:System.Drawing.Pen" />，它是应用程序工作区的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ButtonFace">
      <summary>获取表示三维元素表面颜色的 <see cref="T:System.Drawing.Pen" />。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" />，它是三维元素的表面颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ButtonHighlight">
      <summary>获取表示三维元素突出显示颜色的 <see cref="T:System.Drawing.Pen" />。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" />，它是三维元素的高光点颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ButtonShadow">
      <summary>获取表示三维元素阴影颜色的 <see cref="T:System.Drawing.Pen" />。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" />，它是三维元素的阴影颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.Control">
      <summary>获取表示三维元素表面颜色的 <see cref="T:System.Drawing.Pen" />。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" />，它是三维元素的表面颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ControlDark">
      <summary>获取表示三维元素阴影颜色的 <see cref="T:System.Drawing.Pen" />。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" />，它是三维元素的阴影颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ControlDarkDark">
      <summary>获取表示三维元素暗阴影颜色的 <see cref="T:System.Drawing.Pen" />。</summary>
      <returns>一个 <see cref="T:System.Drawing.Pen" />，它是三维元素的暗阴影颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ControlLight">
      <summary>获取表示三维元素亮色的 <see cref="T:System.Drawing.Pen" />。</summary>
      <returns>一个 <see cref="T:System.Drawing.Pen" />，它是三维元素的亮色。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ControlLightLight">
      <summary>获取表示三维元素突出显示颜色的 <see cref="T:System.Drawing.Pen" />。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" />，它是三维元素的高光点颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ControlText">
      <summary>获取表示三维元素中文本颜色的 <see cref="T:System.Drawing.Pen" />。</summary>
      <returns>一个 <see cref="T:System.Drawing.Pen" />，它是三维元素中文本的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.Desktop">
      <summary>获取表示 Windows 桌面颜色的 <see cref="T:System.Drawing.Pen" />。</summary>
      <returns>一个 <see cref="T:System.Drawing.Pen" />，它是 Windows 桌面的颜色。</returns>
    </member>
    <member name="M:System.Drawing.SystemPens.FromSystemColor(System.Drawing.Color)">
      <summary>从指定的 <see cref="T:System.Drawing.Pen" /> 创建 <see cref="T:System.Drawing.Color" />。</summary>
      <param name="c">新 <see cref="T:System.Drawing.Pen" /> 的 <see cref="T:System.Drawing.Color" />。</param>
      <returns>此方法创建的 <see cref="T:System.Drawing.Pen" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.GradientActiveCaption">
      <summary>获取表示活动窗口标题栏的颜色渐变中最亮的颜色的 <see cref="T:System.Drawing.Pen" />。</summary>
      <returns>一个 <see cref="T:System.Drawing.Pen" />，它是活动窗口标题栏的颜色渐变中的最亮颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.GradientInactiveCaption">
      <summary>获取表示非活动窗口标题栏的颜色渐变中最亮的颜色的 <see cref="T:System.Drawing.Pen" />。</summary>
      <returns>一个 <see cref="T:System.Drawing.Pen" />，它是非活动窗口标题栏的颜色渐变中的最亮颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.GrayText">
      <summary>获取表示禁用文本的颜色的 <see cref="T:System.Drawing.Pen" />。</summary>
      <returns>一个 <see cref="T:System.Drawing.Pen" />，它是浅灰色文本的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.Highlight">
      <summary>获取表示选定项背景颜色的 <see cref="T:System.Drawing.Pen" />。</summary>
      <returns>一个 <see cref="T:System.Drawing.Pen" />，它是选定项的背景的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.HighlightText">
      <summary>获取一个 <see cref="T:System.Drawing.Pen" /> 结构，它为选定项的文本颜色。</summary>
      <returns>一个 <see cref="T:System.Drawing.Pen" />，它是选定项的文本的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.HotTrack">
      <summary>获取 <see cref="T:System.Drawing.Pen" />，它是用于指定热跟踪项的颜色。</summary>
      <returns>一个 <see cref="T:System.Drawing.Pen" />，它是用于指定热跟踪项的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.InactiveBorder">
      <summary>获取表示非活动窗口边框颜色的 <see cref="T:System.Drawing.Pen" />。</summary>
      <returns>一个 <see cref="T:System.Drawing.Pen" />，它是非活动窗口边框的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.InactiveCaption">
      <summary>获取表示非活动窗口标题栏标题颜色的 <see cref="T:System.Drawing.Pen" />。</summary>
      <returns>一个 <see cref="T:System.Drawing.Pen" />，它是非活动窗口标题栏标题的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.InactiveCaptionText">
      <summary>获取表示非活动窗口标题栏中文本颜色的 <see cref="T:System.Drawing.Pen" />。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" />，它是非活动窗口标题栏中文本的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.Info">
      <summary>获取表示工具提示的背景颜色的 <see cref="T:System.Drawing.Pen" />。</summary>
      <returns>一个 <see cref="T:System.Drawing.Pen" />，它是工具提示的背景的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.InfoText">
      <summary>获取表示工具提示的文本颜色的 <see cref="T:System.Drawing.Pen" />。</summary>
      <returns>一个 <see cref="T:System.Drawing.Pen" />，它是工具提示的文本的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.Menu">
      <summary>获取表示菜单背景颜色的 <see cref="T:System.Drawing.Pen" />。</summary>
      <returns>一个 <see cref="T:System.Drawing.Pen" />，它是菜单背景的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.MenuBar">
      <summary>获取表示菜单栏背景颜色的 <see cref="T:System.Drawing.Pen" />。</summary>
      <returns>一个 <see cref="T:System.Drawing.Pen" />，它是菜单栏的背景的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.MenuHighlight">
      <summary>获取表示当菜单显示为平面菜单时用于突出显示菜单项的颜色的 <see cref="T:System.Drawing.Pen" />。</summary>
      <returns>一个 <see cref="T:System.Drawing.Pen" />，它是当菜单显示为平面菜单时用于突出显示菜单项的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.MenuText">
      <summary>获取表示菜单文本颜色的 <see cref="T:System.Drawing.Pen" />。</summary>
      <returns>一个 <see cref="T:System.Drawing.Pen" />，它是菜单文本的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ScrollBar">
      <summary>获取表示滚动条背景颜色的 <see cref="T:System.Drawing.Pen" />。</summary>
      <returns>一个 <see cref="T:System.Drawing.Pen" />，它是滚动条背景的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.Window">
      <summary>获取表示窗口工作区中背景颜色的 <see cref="T:System.Drawing.Pen" />。</summary>
      <returns>一个 <see cref="T:System.Drawing.Pen" />，它是窗口工作区中背景的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.WindowFrame">
      <summary>获取表示窗口框架颜色的 <see cref="T:System.Drawing.Pen" />。</summary>
      <returns>一个 <see cref="T:System.Drawing.Pen" />，它是窗口框架的颜色。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.WindowText">
      <summary>获取表示窗口工作区中文本颜色的 <see cref="T:System.Drawing.Pen" />。</summary>
      <returns>一个 <see cref="T:System.Drawing.Pen" />，它是窗口工作区中文本的颜色。</returns>
    </member>
    <member name="T:System.Drawing.Text.FontCollection">
      <summary>为已安装的字体集合和私有字体集合提供基类。</summary>
    </member>
    <member name="M:System.Drawing.Text.FontCollection.Dispose">
      <summary>释放此 <see cref="T:System.Drawing.Text.FontCollection" /> 使用的所有资源。</summary>
    </member>
    <member name="M:System.Drawing.Text.FontCollection.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Drawing.Text.FontCollection" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</param>
    </member>
    <member name="P:System.Drawing.Text.FontCollection.Families">
      <summary>获取与此 <see cref="T:System.Drawing.FontFamily" /> 关联的 <see cref="T:System.Drawing.Text.FontCollection" /> 对象的数组。</summary>
      <returns>一个 <see cref="T:System.Drawing.FontFamily" /> 对象数组。</returns>
    </member>
    <member name="M:System.Drawing.Text.FontCollection.Finalize">
      <summary>在垃圾回收将某一对象回收前允许该对象尝试释放资源并执行其他清理操作。</summary>
    </member>
    <member name="T:System.Drawing.Text.GenericFontFamilies">
      <summary>指定一般的 <see cref="T:System.Drawing.FontFamily" /> 对象。</summary>
    </member>
    <member name="F:System.Drawing.Text.GenericFontFamilies.Monospace">
      <summary>一般的 Monospace <see cref="T:System.Drawing.FontFamily" /> 对象。</summary>
    </member>
    <member name="F:System.Drawing.Text.GenericFontFamilies.SansSerif">
      <summary>一般的 Sans Serif <see cref="T:System.Drawing.FontFamily" /> 对象。</summary>
    </member>
    <member name="F:System.Drawing.Text.GenericFontFamilies.Serif">
      <summary>一般的 Serif <see cref="T:System.Drawing.FontFamily" /> 对象。</summary>
    </member>
    <member name="T:System.Drawing.Text.HotkeyPrefix">
      <summary>指定与文本相关的热键前缀的显示类型。</summary>
    </member>
    <member name="F:System.Drawing.Text.HotkeyPrefix.Hide">
      <summary>不显示热键前缀。</summary>
    </member>
    <member name="F:System.Drawing.Text.HotkeyPrefix.None">
      <summary>无热键前缀。</summary>
    </member>
    <member name="F:System.Drawing.Text.HotkeyPrefix.Show">
      <summary>显示热键前缀。</summary>
    </member>
    <member name="T:System.Drawing.Text.InstalledFontCollection">
      <summary>表示安装在系统上的字体。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Drawing.Text.InstalledFontCollection.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.Text.InstalledFontCollection" /> 类的新实例。</summary>
    </member>
    <member name="T:System.Drawing.Text.PrivateFontCollection">
      <summary>提供一个字体系列集合，该集合是基于客户端应用程序提供的字体文件生成的。</summary>
    </member>
    <member name="M:System.Drawing.Text.PrivateFontCollection.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.Text.PrivateFontCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Drawing.Text.PrivateFontCollection.AddFontFile(System.String)">
      <summary>将字体从指定文件添加到该 <see cref="T:System.Drawing.Text.PrivateFontCollection" />。</summary>
      <param name="filename">一个 <see cref="T:System.String" />，包含要添加的字体的文件名。</param>
      <exception cref="T:System.IO.FileNotFoundException">不支持指定字体或无法找到字体文件。</exception>
    </member>
    <member name="M:System.Drawing.Text.PrivateFontCollection.AddMemoryFont(System.IntPtr,System.Int32)">
      <summary>将包含在系统内存中的字体添加到该 <see cref="T:System.Drawing.Text.PrivateFontCollection" />。</summary>
      <param name="memory">要添加的字体的内存地址。</param>
      <param name="length">要添加的字体的内存长度。</param>
    </member>
    <member name="T:System.Drawing.Text.TextRenderingHint">
      <summary>指定文本呈现的质量。</summary>
    </member>
    <member name="F:System.Drawing.Text.TextRenderingHint.AntiAlias">
      <summary>在无提示的情况下使用每个字符的抗锯齿效果标志符号位图来绘制字符。 由于采用了 AntiAlias，质量会得到改善。 由于关闭了提示，主干宽度差可能会比较明显。</summary>
    </member>
    <member name="F:System.Drawing.Text.TextRenderingHint.AntiAliasGridFit">
      <summary>在有提示的情况下使用每个字符的抗锯齿效果标志符号位图来绘制字符。 由于采用了 AntiAlias，质量会得到大大改善，但同时会增加性能成本。</summary>
    </member>
    <member name="F:System.Drawing.Text.TextRenderingHint.ClearTypeGridFit">
      <summary>在有提示的情况下使用每个字符的标志符号 ClearType 位图来绘制字符。 这是质量最高的设置。 用于利用 ClearType 字体功能。</summary>
    </member>
    <member name="F:System.Drawing.Text.TextRenderingHint.SingleBitPerPixel">
      <summary>使用每个字符的标志符号位图来绘制字符。 不使用提示。</summary>
    </member>
    <member name="F:System.Drawing.Text.TextRenderingHint.SingleBitPerPixelGridFit">
      <summary>使用每个字符的标志符号位图来绘制字符。 提示用于改善字符在主干和弯曲部分的外观。</summary>
    </member>
    <member name="F:System.Drawing.Text.TextRenderingHint.SystemDefault">
      <summary>在有系统默认呈现提示的情况下使用每个字符的标志符号位图来绘制字符。 将采用用户为系统选择的任何字体修匀设置来绘制文本。</summary>
    </member>
    <member name="T:System.Drawing.TextureBrush">
      <summary>
        <see cref="T:System.Drawing.TextureBrush" /> 类的每个属性都是 <see cref="T:System.Drawing.Brush" /> 对象，这种对象使用图像来填充形状的内部。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image)">
      <summary>初始化使用指定图像的新 <see cref="T:System.Drawing.TextureBrush" /> 对象。</summary>
      <param name="bitmap">
        <see cref="T:System.Drawing.Image" /> 对象，此 <see cref="T:System.Drawing.TextureBrush" /> 对象使用它来填充其内部。</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.Drawing2D.WrapMode)">
      <summary>初始化使用指定的图像和自动换行模式的新 <see cref="T:System.Drawing.TextureBrush" /> 对象。</summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> 对象，此 <see cref="T:System.Drawing.TextureBrush" /> 对象使用它来填充其内部。</param>
      <param name="wrapMode">一个 <see cref="T:System.Drawing.Drawing2D.WrapMode" /> 枚举，它指定此 <see cref="T:System.Drawing.TextureBrush" /> 对象的平铺方式。</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.Drawing2D.WrapMode,System.Drawing.Rectangle)">
      <summary>初始化使用指定图像、自动换行模式和边框的新 <see cref="T:System.Drawing.TextureBrush" /> 对象。</summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> 对象，此 <see cref="T:System.Drawing.TextureBrush" /> 对象使用它来填充其内部。</param>
      <param name="wrapMode">一个 <see cref="T:System.Drawing.Drawing2D.WrapMode" /> 枚举，它指定此 <see cref="T:System.Drawing.TextureBrush" /> 对象的平铺方式。</param>
      <param name="dstRect">一个 <see cref="T:System.Drawing.Rectangle" /> 结构，它表示此 <see cref="T:System.Drawing.TextureBrush" /> 对象的边框。</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.Drawing2D.WrapMode,System.Drawing.RectangleF)">
      <summary>初始化使用指定图像、自动换行模式和边框的新 <see cref="T:System.Drawing.TextureBrush" /> 对象。</summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> 对象，此 <see cref="T:System.Drawing.TextureBrush" /> 对象使用它来填充其内部。</param>
      <param name="wrapMode">一个 <see cref="T:System.Drawing.Drawing2D.WrapMode" /> 枚举，它指定此 <see cref="T:System.Drawing.TextureBrush" /> 对象的平铺方式。</param>
      <param name="dstRect">一个 <see cref="T:System.Drawing.RectangleF" /> 结构，它表示此 <see cref="T:System.Drawing.TextureBrush" /> 对象的边框。</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.Rectangle)">
      <summary>初始化使用指定图像和边框的新 <see cref="T:System.Drawing.TextureBrush" /> 对象。</summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> 对象，此 <see cref="T:System.Drawing.TextureBrush" /> 对象使用它来填充其内部。</param>
      <param name="dstRect">一个 <see cref="T:System.Drawing.Rectangle" /> 结构，它表示此 <see cref="T:System.Drawing.TextureBrush" /> 对象的边框。</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Imaging.ImageAttributes)">
      <summary>初始化使用指定的图像、边框和图像特性的新 <see cref="T:System.Drawing.TextureBrush" /> 对象。</summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> 对象，此 <see cref="T:System.Drawing.TextureBrush" /> 对象使用它来填充其内部。</param>
      <param name="dstRect">一个 <see cref="T:System.Drawing.Rectangle" /> 结构，它表示此 <see cref="T:System.Drawing.TextureBrush" /> 对象的边框。</param>
      <param name="imageAttr">一个 <see cref="T:System.Drawing.Imaging.ImageAttributes" /> 对象，它包含有关此 <see cref="T:System.Drawing.TextureBrush" /> 对象所使用的图像的附加信息。</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.RectangleF)">
      <summary>初始化使用指定图像和边框的新 <see cref="T:System.Drawing.TextureBrush" /> 对象。</summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> 对象，此 <see cref="T:System.Drawing.TextureBrush" /> 对象使用它来填充其内部。</param>
      <param name="dstRect">一个 <see cref="T:System.Drawing.RectangleF" /> 结构，它表示此 <see cref="T:System.Drawing.TextureBrush" /> 对象的边框。</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.Imaging.ImageAttributes)">
      <summary>初始化使用指定的图像、边框和图像特性的新 <see cref="T:System.Drawing.TextureBrush" /> 对象。</summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> 对象，此 <see cref="T:System.Drawing.TextureBrush" /> 对象使用它来填充其内部。</param>
      <param name="dstRect">一个 <see cref="T:System.Drawing.RectangleF" /> 结构，它表示此 <see cref="T:System.Drawing.TextureBrush" /> 对象的边框。</param>
      <param name="imageAttr">一个 <see cref="T:System.Drawing.Imaging.ImageAttributes" /> 对象，它包含有关此 <see cref="T:System.Drawing.TextureBrush" /> 对象所使用的图像的附加信息。</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.Clone">
      <summary>创建此 <see cref="T:System.Drawing.TextureBrush" /> 对象的一个精确副本。</summary>
      <returns>此方法创建的作为 <see cref="T:System.Drawing.TextureBrush" /> 对象转换的 <see cref="T:System.Object" /> 对象。</returns>
    </member>
    <member name="P:System.Drawing.TextureBrush.Image">
      <summary>获取与此 <see cref="T:System.Drawing.Image" /> 对象关联的 <see cref="T:System.Drawing.TextureBrush" /> 对象。</summary>
      <returns>
        <see cref="T:System.Drawing.Image" /> 对象，它表示一种图像，此 <see cref="T:System.Drawing.TextureBrush" /> 对象就用该图像填充各种形状。</returns>
    </member>
    <member name="M:System.Drawing.TextureBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
      <summary>通过预先计算指定的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 对象，将表示此 <see cref="T:System.Drawing.TextureBrush" /> 对象的局部几何转换的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 对象与指定 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 对象相乘。</summary>
      <param name="matrix">要乘以几何转换的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 对象。</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>将表示此 <see cref="T:System.Drawing.TextureBrush" /> 对象的局部几何转换的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 对象与指定的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 对象按指定顺序相乘。</summary>
      <param name="matrix">要乘以几何转换的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 对象。</param>
      <param name="order">用于指定两个矩阵相乘的顺序的 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> 枚举。</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.ResetTransform">
      <summary>将此 <see cref="T:System.Drawing.TextureBrush" /> 对象的 <see langword="Transform" /> 属性重置为标识。</summary>
    </member>
    <member name="M:System.Drawing.TextureBrush.RotateTransform(System.Single)">
      <summary>将 <see cref="T:System.Drawing.TextureBrush" /> 对象的局部几何转换旋转指定量。 此方法将旋转添加到转换前。</summary>
      <param name="angle">旋转角度。</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>以指定顺序将 <see cref="T:System.Drawing.TextureBrush" /> 对象的局部几何转换旋转指定的量。</summary>
      <param name="angle">旋转角度。</param>
      <param name="order">一个 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> 枚举，指定是在后面追加还是在前面添加旋转矩阵。</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.ScaleTransform(System.Single,System.Single)">
      <summary>将此 <see cref="T:System.Drawing.TextureBrush" /> 对象的局部几何变换缩放指定的倍数。 此方法将缩放矩阵添加到转换前。</summary>
      <param name="sx">沿 x 方向缩放转换的量。</param>
      <param name="sy">沿 y 方向缩放转换的量。</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>以指定顺序将此 <see cref="T:System.Drawing.TextureBrush" /> 对象的局部几何转换按指定量进行缩放。</summary>
      <param name="sx">沿 x 方向缩放转换的量。</param>
      <param name="sy">沿 y 方向缩放转换的量。</param>
      <param name="order">一个 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> 枚举，指定是在后面追加缩放矩阵还是在前面添加缩放矩阵。</param>
    </member>
    <member name="P:System.Drawing.TextureBrush.Transform">
      <summary>获取或设置 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 对象的副本，该对象为与此 <see cref="T:System.Drawing.TextureBrush" /> 对象关联的图像定义局部几何变换。</summary>
      <returns>用于定义几何变换的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 对象的副本，该变换仅适用于通过此 <see cref="T:System.Drawing.TextureBrush" /> 对象绘制的填充。</returns>
    </member>
    <member name="M:System.Drawing.TextureBrush.TranslateTransform(System.Single,System.Single)">
      <summary>根据指定维度，转换此 <see cref="T:System.Drawing.TextureBrush" /> 对象的局部几何变换。 此方法将平移添加到转换前。</summary>
      <param name="dx">沿 x 方向平移变换时要使用的维度。</param>
      <param name="dy">沿 y 方向平移变换时要使用的维度。</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>按指定顺序将此 <see cref="T:System.Drawing.TextureBrush" /> 对象的局部几何转换平移指定的尺寸。</summary>
      <param name="dx">沿 x 方向平移变换时要使用的维度。</param>
      <param name="dy">沿 y 方向平移变换时要使用的维度。</param>
      <param name="order">应用转换的顺序（在前面添加或在后面追加）。</param>
    </member>
    <member name="P:System.Drawing.TextureBrush.WrapMode">
      <summary>获取或设置 <see cref="T:System.Drawing.Drawing2D.WrapMode" /> 枚举，它指示此 <see cref="T:System.Drawing.TextureBrush" /> 对象的换行模式。</summary>
      <returns>
        <see cref="T:System.Drawing.Drawing2D.WrapMode" /> 枚举，它指定通过此 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 对象绘制的填充的平铺方式。</returns>
    </member>
    <member name="T:System.Drawing.ToolboxBitmapAttribute">
      <summary>这使您可以指定一个图标来表示容器的控件，例如 Microsoft Visual Studio 窗体设计器。</summary>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.String)">
      <summary>使用来自指定文件的图像初始化新的 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 对象。</summary>
      <param name="imageFile">包含一个 16 × 16 位图的文件的名称。</param>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type)">
      <summary>基于作为资源嵌入到指定程序集的一个 16 × 16 位图初始化新的 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 对象。</summary>
      <param name="t">一个 <see cref="T:System.Type" />，将在它的定义程序集中搜索位图资源。</param>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type,System.String)">
      <summary>基于作为资源嵌入到指定程序集的 16 × 16 位图，初始化新的 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 对象。</summary>
      <param name="t">一个 <see cref="T:System.Type" />，将在它的定义程序集中搜索位图资源。</param>
      <param name="name">嵌入的位图资源的名称。</param>
    </member>
    <member name="F:System.Drawing.ToolboxBitmapAttribute.Default">
      <summary>一个 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 对象，其小图像和大图像均设置为 <see langword="null" />。</summary>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.Equals(System.Object)">
      <summary>指示指定的对象是否为 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 对象以及是否与此 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 对象相同。</summary>
      <param name="value">要测试的 <see cref="T:System.Object" />。</param>
      <returns>如果 <paramref name="value" /> 同时也是 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 对象并与此 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 对象相同，则此方法返回 <see langword="true" />。</returns>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.GetHashCode">
      <summary>获取此 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 对象的哈希代码。</summary>
      <returns>此 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 对象的哈希代码。</returns>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object)">
      <summary>获取与此 <see cref="T:System.Drawing.Image" /> 对象关联的小 <see cref="T:System.Drawing.ToolboxBitmapAttribute" />。</summary>
      <param name="component">如果此 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 对象尚没有小图像，则此方法在定义组件参数指定的对象类型的程序集中搜索位图资源。 例如，如果将类型为 ControlA 的对象传递给组件参数，则此方法在定义 ControlA 的程序集中搜索。</param>
      <returns>与此 <see cref="T:System.Drawing.Image" /> 对象关联的小 <see cref="T:System.Drawing.ToolboxBitmapAttribute" />。</returns>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)">
      <summary>获取与此 <see cref="T:System.Drawing.Image" /> 对象关联的小或大 <see cref="T:System.Drawing.ToolboxBitmapAttribute" />。</summary>
      <param name="component">如果此 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 对象尚没有小图像，则此方法在定义组件参数指定的对象类型的程序集中搜索位图资源。 例如，如果将类型为 ControlA 的对象传递给组件参数，则此方法在定义 ControlA 的程序集中搜索。</param>
      <param name="large">指定此方法是返回大图像（<see langword="true" />）还是小图像（<see langword="false" />）。 小图像是 16 × 16，而大图像是 32 × 32。</param>
      <returns>与此 <see cref="T:System.Drawing.Image" /> 对象关联的 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 对象。</returns>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type)">
      <summary>获取与此 <see cref="T:System.Drawing.Image" /> 对象关联的小 <see cref="T:System.Drawing.ToolboxBitmapAttribute" />。</summary>
      <param name="type">如果此 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 对象尚无小图像，则此方法在定义由类型参数指定的类型的程序集中搜索位图资源。 例如，如果将 typeof(ControlA) 传递给类型参数，则此方法在定义 ControlA 的程序集中搜索。</param>
      <returns>与此 <see cref="T:System.Drawing.Image" /> 对象关联的小 <see cref="T:System.Drawing.ToolboxBitmapAttribute" />。</returns>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)">
      <summary>获取与此 <see cref="T:System.Drawing.Image" /> 对象关联的小或大 <see cref="T:System.Drawing.ToolboxBitmapAttribute" />。</summary>
      <param name="type">如果此 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 对象尚无小图像，则此方法在定义由组件类型指定的类型的程序集中搜索位图资源。 例如，如果将 typeof(ControlA) 传递给类型参数，则此方法在定义 ControlA 的程序集中搜索。</param>
      <param name="large">指定此方法是返回大图像（<see langword="true" />）还是小图像（<see langword="false" />）。 小图像是 16 × 16，而大图像是 32 × 32。</param>
      <returns>与此 <see cref="T:System.Drawing.Image" /> 对象关联的 <see cref="T:System.Drawing.ToolboxBitmapAttribute" />。</returns>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)">
      <summary>获取与此 <see cref="T:System.Drawing.Image" /> 对象关联的小或大 <see cref="T:System.Drawing.ToolboxBitmapAttribute" />。</summary>
      <param name="type">如果此 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 对象尚无小图像，则此方法将搜索嵌入的位图资源，搜索范围是在定义了由组件类型指定的类型的程序集中。 例如，如果将 typeof(ControlA) 传递给类型参数，则此方法在定义 ControlA 的程序集中搜索。</param>
      <param name="imgName">嵌入的位图资源的名称。</param>
      <param name="large">指定此方法是返回大图像（<see langword="true" />）还是小图像（<see langword="false" />）。 小图像是 16 × 16，而大图像是 32 × 32。</param>
      <returns>与此 <see cref="T:System.Drawing.Image" /> 对象关联的 <see cref="T:System.Drawing.ToolboxBitmapAttribute" />。</returns>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
      <summary>基于程序集中嵌入的位图资源返回 <see cref="T:System.Drawing.Image" /> 对象。</summary>
      <param name="t">此方法在定义由 t 参数指定的类型的程序集中搜索嵌入的位图资源。 例如，如果将 typeof(ControlA) 传递给 t 参数，则此方法在定义 ControlA 的程序集中搜索。</param>
      <param name="imageName">嵌入的位图资源的名称。</param>
      <param name="large">指定此方法是返回大图像 (true)，还是小图像 (false)。 小图像为 16 × 16，而大图像为 32 × 32。</param>
      <returns>基于检索到的位图的 <see cref="T:System.Drawing.Image" /> 对象。</returns>
    </member>
  </members>
</doc>