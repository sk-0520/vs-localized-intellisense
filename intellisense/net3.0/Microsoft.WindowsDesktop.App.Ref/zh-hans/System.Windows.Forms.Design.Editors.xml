<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Windows.Forms.Design.Editors</name>
  </assembly>
  <members>
    <member name="T:System.ComponentModel.Design.ArrayEditor">
      <summary>提供用于在设计时编辑数组的用户界面。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.#ctor(System.Type)">
      <summary>使用数组的指定数据类型初始化 <see cref="T:System.ComponentModel.Design.ArrayEditor" /> 的新实例。</summary>
      <param name="type">数组项的数据类型。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.CreateCollectionItemType">
      <summary>获取此集合需包含的数据类型。</summary>
      <returns>此 <see cref="T:System.Type" /> 指示集合需包含的数据类型。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.GetItems(System.Object)">
      <summary>获取数组中的项。</summary>
      <param name="editValue">要从其中检索项的数组。</param>
      <returns>此数组包括指定数组中的项。 如果在 <paramref name="editValue" /> 参数中指定的对象不是数组，则将返回新的空对象。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.SetItems(System.Object,System.Object[])">
      <summary>设置数组中的项。</summary>
      <param name="editValue">要将项设置到的数组。</param>
      <param name="value">要设置为数组项的对象的数组。</param>
      <returns>新数组的一个实例。 如果由 <paramref name="editValue" /> 参数指定的对象不是数组，则将返回由 <paramref name="editValue" /> 参数指定的对象。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.CollectionEditor">
      <summary>提供一个用户界面，该界面可以在设计时编辑大多数类型的集合。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.#ctor(System.Type)">
      <summary>使用指定的集合类型初始化 <see cref="T:System.ComponentModel.Design.CollectionEditor" /> 类的新实例。</summary>
      <param name="type">此编辑器要编辑的集合的类型。</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CancelChanges">
      <summary>取消对集合的更改。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CanRemoveInstance(System.Object)">
      <summary>指示是否可以移除集合的初始成员。</summary>
      <param name="value">要移除的值。</param>
      <returns>如果允许从集合中移除此值，则为 <see langword="true" />；否则，为 <see langword="false" />。 默认实现始终返回 <see langword="true" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CanSelectMultipleInstances">
      <summary>指示是否可一次选择多个集合项。</summary>
      <returns>如果可以同时选择多个集合成员，则为 <see langword="true" />；否则，为 <see langword="false" />。 默认情况下，它将返回 <see langword="true" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.CollectionEditor.CollectionForm">
      <summary>提供一个有模式的对话框，用以通过 <see cref="T:System.Drawing.Design.UITypeEditor" /> 编辑集合的内容。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.#ctor(System.ComponentModel.Design.CollectionEditor)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" /> 类的新实例。</summary>
      <param name="editor">用于编辑集合的 <see cref="T:System.ComponentModel.Design.CollectionEditor" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CanRemoveInstance(System.Object)">
      <summary>指示是否可以移除集合的初始成员。</summary>
      <param name="value">要移除的值。</param>
      <returns>如果允许从集合中移除此值，则为 <see langword="true" />；否则，为 <see langword="false" />。 默认情况下，此方法返回来自当前窗体 <see cref="M:System.ComponentModel.Design.CollectionEditor.CanRemoveInstance(System.Object)" /> 的 <see cref="T:System.ComponentModel.Design.CollectionEditor" /> 的值。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CanSelectMultipleInstances">
      <summary>指示是否可一次选择多个集合项。</summary>
      <returns>如果可以同时选择多个集合成员，则为 <see langword="true" />；否则，为 <see langword="false" />。 默认情况下，此方法返回来自当前窗体 <see cref="M:System.ComponentModel.Design.CollectionEditor.CanSelectMultipleInstances" /> 的 <see cref="T:System.ComponentModel.Design.CollectionEditor" /> 的值。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.CollectionItemType">
      <summary>获取集合中每项的数据类型。</summary>
      <returns>集合项的数据类型。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.CollectionType">
      <summary>获取集合对象的数据类型。</summary>
      <returns>集合对象的数据类型。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.Context">
      <summary>获取指示当前上下文的类型说明符。</summary>
      <returns>
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，指示当前正在使用的上下文；或者如果没有可用的上下文，则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CreateInstance(System.Type)">
      <summary>创建指定的集合项类型的新实例。</summary>
      <param name="itemType">要创建的项的类型。</param>
      <returns>指定对象的新实例，或者在用户选择取消创建此实例的情况下为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.DestroyInstance(System.Object)">
      <summary>销毁对象的指定实例。</summary>
      <param name="instance">要销毁的对象。</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.DisplayError(System.Exception)">
      <summary>向用户显示指定的异常。</summary>
      <param name="e">要显示的异常。</param>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.EditValue">
      <summary>获取或设置要编辑的集合对象。</summary>
      <returns>要编辑的集合对象。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.GetService(System.Type)">
      <summary>获取请求的服务（如果该服务可用的话）。</summary>
      <param name="serviceType">要检索的服务类型。</param>
      <returns>该服务的实例；或者如果找不到该服务，则为 <see langword="null" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.Items">
      <summary>获取或设置此窗体要显示的项数组。</summary>
      <returns>此窗体要显示的对象数组。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.NewItemTypes">
      <summary>获取可为此集合创建的可用项类型。</summary>
      <returns>可创建的项的类型。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.OnEditValueChanged">
      <summary>提供在集合值已更改的情况下执行处理的机会。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.ShowEditorDialog(System.Windows.Forms.Design.IWindowsFormsEditorService)">
      <summary>为使用指定 <see cref="T:System.Windows.Forms.Design.IWindowsFormsEditorService" /> 对象的集合编辑器显示对话框。</summary>
      <param name="edSvc">此 <see cref="T:System.Windows.Forms.Design.IWindowsFormsEditorService" /> 可用于显示对话框。</param>
      <returns>此 <see cref="T:System.Windows.Forms.DialogResult" /> 指示从对话框中返回的结果代码。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionItemType">
      <summary>获取集合中每项的数据类型。</summary>
      <returns>集合项的数据类型。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionType">
      <summary>获取集合对象的数据类型。</summary>
      <returns>集合对象的数据类型。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.Context">
      <summary>获取指示当前上下文的类型说明符。</summary>
      <returns>
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，指示当前正在使用的上下文；或者如果没有可用的上下文，则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateCollectionForm">
      <summary>创建新的窗体，以显示和编辑当前集合。</summary>
      <returns>作为用于编辑集合的用户界面提供的 <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateCollectionItemType">
      <summary>获取此集合包含的数据类型。</summary>
      <returns>集合中项的数据类型，如果对于该集合未找到 <see langword="Item" /> 属性，则为 <see cref="T:System.Object" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateInstance(System.Type)">
      <summary>创建指定的集合项类型的新实例。</summary>
      <param name="itemType">要创建的项的类型。</param>
      <returns>指定对象的新实例。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateNewItemTypes">
      <summary>获取此集合编辑器可包含的数据类型。</summary>
      <returns>此集合可包含的数据类型数组。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.DestroyInstance(System.Object)">
      <summary>销毁对象的指定实例。</summary>
      <param name="instance">要销毁的对象。</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>使用指定的服务提供程序和上下文编辑指定对象的值。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="provider">服务提供程序对象，通过它可获得编辑服务。</param>
      <param name="value">要编辑其值的对象。</param>
      <returns>新的对象值。 如果对象的值尚未更改，则它返回的对象应与传递给它的对象相同。</returns>
      <exception cref="T:System.ComponentModel.Design.CheckoutException">尝试签出已签入源代码管理程序的文件未成功。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetDisplayText(System.Object)">
      <summary>检索给定列表项的显示文本。</summary>
      <param name="value">要检索其显示文本的列表项。</param>
      <returns>
        <paramref name="value" /> 的显示文本。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取 <see cref="M:System.ComponentModel.Design.CollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> 方法使用的编辑样式。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <returns>指示所提供的编辑样式的 <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 枚举值。 如果在指定上下文中不支持此方法，此方法将返回 <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" /> 标识符。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetItems(System.Object)">
      <summary>获取包含指定集合的对象数组。</summary>
      <param name="editValue">要编辑的集合。</param>
      <returns>包含集合对象的数组，如果指定集合不从 <see cref="T:System.Collections.ICollection" /> 继承则为空对象数组。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetObjectsFromInstance(System.Object)">
      <summary>返回包含给定对象的列表</summary>
      <param name="instance">作为对象返回的 <see cref="T:System.Collections.ArrayList" />。</param>
      <returns>包含要创建的各个对象的 <see cref="T:System.Collections.ArrayList" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetService(System.Type)">
      <summary>获取请求的服务（如果该服务可用的话）。</summary>
      <param name="serviceType">要检索的服务类型。</param>
      <returns>该服务的实例；或者如果找不到该服务，则为 <see langword="null" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.HelpTopic">
      <summary>在用户按下编辑器对话框中的“帮助”按钮或 F1 键时，获取“帮助”关键字以显示“帮助”主题或主题列表。</summary>
      <returns>当从编辑器请求帮助时为其显示帮助主题或主题列表的帮助关键字。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.NewItemTypes">
      <summary>获取可为此集合创建的项的可用类型。</summary>
      <returns>可创建的项的类型。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.SetItems(System.Object,System.Object[])">
      <summary>将指定数组设置为集合项。</summary>
      <param name="editValue">要编辑的集合。</param>
      <param name="value">要设置为集合项的对象数组。</param>
      <returns>新创建的集合对象，否则则为 <paramref name="editValue" /> 参数指示的集合。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.ShowHelp">
      <summary>显示集合编辑器的默认帮助主题。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.MultilineStringEditor">
      <summary>显示一个用于在设计模式中编辑多行字符串的对话框。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.MultilineStringEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>使用 <see cref="M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> 提供的编辑样式编辑指定的对象值。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="provider">服务提供程序对象，通过它可获得编辑服务。</param>
      <param name="value">正在编辑的值的实例。</param>
      <returns>新的对象值。 如果对象的值尚未更改，则此方法返回的对象应与传递给它的对象相同。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取 <see cref="M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> 方法的编辑样式。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <returns>指示所支持的编辑样式的 <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 枚举值。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取一个值，该值指示该编辑器是否支持绘制对象值表示形式。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <returns>
        <see langword="false" />，指示此 <see cref="T:System.Drawing.Design.UITypeEditor" /> 不在“属性”窗口中显示可视的表示形式。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ObjectSelectorEditor">
      <summary>实现可用于设计值编辑器的基本功能。 这些编辑器反过来又可以提供一个用户界面，用于显示和编辑受支持的数据类型的对象的值。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.#ctor(System.Boolean)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" /> 类的新实例。</summary>
      <param name="subObjectSelector">指定的子对象选择器值。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.ApplyTreeViewThemeStyles(System.Windows.Forms.TreeView)">
      <param name="treeView" />
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.currValue">
      <summary>表示 <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" /> 的当前值。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>使用 <see cref="Overload:System.ComponentModel.Design.ObjectSelectorEditor.GetEditStyle" /> 指示的编辑器样式编辑指定的对象值。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="provider">一个 <see cref="T:System.IServiceProvider" /> ，此编辑器可用它来获取服务。</param>
      <param name="value">要编辑的对象。</param>
      <returns>新的对象值。 如果对象的值尚未更改，则此方法返回的对象应与传递给它的对象相同。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.EqualsToValue(System.Object)">
      <summary>确定指定的 <see cref="T:System.Object" /> 是否等同于当前的 <see cref="T:System.Object" />。</summary>
      <param name="value">要与当前的 <see cref="T:System.Object" /> 进行比较的 <see cref="T:System.Object" />。</param>
      <returns>如果指定的 <see langword="true" /> 等于当前的 <see cref="T:System.Object" />，则为 <see cref="T:System.Object" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.FillTreeWithData(System.ComponentModel.Design.ObjectSelectorEditor.Selector,System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider)">
      <summary>填充标记项的分层集合，每个标记项用一个 <see cref="T:System.Windows.Forms.TreeNode" /> 来表示。</summary>
      <param name="selector">标记项的分层集合。</param>
      <param name="context">组件的上下文信息。</param>
      <param name="provider">此接口的 <see cref="M:System.IServiceProvider.GetService(System.Type)" /> 方法，用于获取提供服务的对象。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取由 <see cref="Overload:System.ComponentModel.Design.ObjectSelectorEditor.EditValue" /> 方法使用的编辑器样式。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <returns>
        <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 值，指示 <see cref="Overload:System.ComponentModel.Design.ObjectSelectorEditor.EditValue" /> 使用的编辑器的样式。</returns>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.prevValue">
      <summary>表示 <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" /> 以前的值。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.ObjectSelectorEditor.Selector">
      <summary>显示标记项的分层集合，每个标记项用一个 <see cref="T:System.Windows.Forms.TreeNode" /> 来表示。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.#ctor(System.ComponentModel.Design.ObjectSelectorEditor)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor.Selector" /> 类的新实例。</summary>
      <param name="editor">
        <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" />
      </param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.AddNode(System.String,System.Object,System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode)">
      <summary>在集合中添加新的树节点。</summary>
      <param name="label">节点的标签。</param>
      <param name="value">
        <see cref="T:System.Object" />，表示节点的值。</param>
      <param name="parent">该节点的父级。</param>
      <returns>添加到集合中的 <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Clear">
      <summary>从集合中删除所有树节点。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.Selector.clickSeen">
      <summary>此字段仅供内部使用。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnAfterSelect(System.Object,System.Windows.Forms.TreeViewEventArgs)">
      <summary>在选定树节点后发生。</summary>
      <param name="sender">事件源。</param>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.TreeViewEventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>在控件有焦点的情况下按下键时发生。</summary>
      <param name="e">为 <see cref="E:System.Windows.Forms.Control.KeyDown" /> 事件提供数据。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary>在控件有焦点的情况下按下键时发生。</summary>
      <param name="e">为 <see cref="E:System.Windows.Forms.Control.KeyPress" /> 事件提供数据。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnNodeMouseClick(System.Windows.Forms.TreeNodeMouseClickEventArgs)">
      <summary>当鼠标指针位于控件上并单击鼠标按钮时发生。</summary>
      <param name="e">为 <see cref="E:System.Windows.Forms.Control.MouseUp" />、<see cref="E:System.Windows.Forms.Control.MouseDown" /> 和 <see cref="E:System.Windows.Forms.Control.MouseMove" /> 事件提供数据。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.SetSelection(System.Object,System.Windows.Forms.TreeNodeCollection)">
      <summary>将集合节点设置为指定值。</summary>
      <param name="value">要设置的值。</param>
      <param name="nodes">节点集合。</param>
      <returns>如果该集合节点被设置，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Start(System.Windows.Forms.Design.IWindowsFormsEditorService,System.Object)">
      <summary>初始化编辑器服务。</summary>
      <param name="edSvc">编辑器服务。</param>
      <param name="value">要设置的值。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Stop">
      <summary>移除编辑器服务。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.WndProc(System.Windows.Forms.Message@)">
      <summary>处理 Windows 消息。</summary>
      <param name="m">要处理的 Windows <see cref="T:System.Windows.Forms.Message" />。</param>
    </member>
    <member name="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode">
      <summary>表示 <see cref="T:System.Windows.Forms.TreeView" /> 的节点。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode.#ctor(System.String,System.Object)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode" /> 类的新实例。</summary>
      <param name="label">节点的标签。</param>
      <param name="value">
        <see cref="T:System.Object" />，表示节点的值。</param>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode.value">
      <summary>表示节点的值。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.SetValue(System.Object)">
      <summary>将当前 <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" /> 设置为指定的值。</summary>
      <param name="value">指定的值。</param>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.SubObjectSelector">
      <summary>控制标记项的分层集合内的节点是否可访问。</summary>
    </member>
    <member name="T:System.Drawing.Design.BitmapEditor">
      <summary>提供用户界面，用来在属性浏览器中选择位图文件。</summary>
    </member>
    <member name="M:System.Drawing.Design.BitmapEditor.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.Design.BitmapEditor" /> 类的新实例。</summary>
    </member>
    <member name="F:System.Drawing.Design.BitmapEditor.BitmapExtensions">
      <summary>提供用于筛选文件列表的默认文件扩展名列表。</summary>
    </member>
    <member name="M:System.Drawing.Design.BitmapEditor.GetExtensions">
      <summary>获取位图编辑器最初将用来筛选文件列表的文件列表筛选器的扩展名。</summary>
      <returns>用于筛选文件列表的默认的文件扩展名集合。</returns>
    </member>
    <member name="M:System.Drawing.Design.BitmapEditor.GetFileDialogDescription">
      <summary>获取该编辑器所提供的默认文件列表筛选器的说明。</summary>
      <returns>用于筛选文件列表的默认文件类型的说明。</returns>
    </member>
    <member name="M:System.Drawing.Design.BitmapEditor.LoadFromStream(System.IO.Stream)">
      <summary>从指定的流加载图像。</summary>
      <param name="stream">要从其加载图像的流。</param>
      <returns>从流加载的 <see cref="T:System.Drawing.Image" />。</returns>
    </member>
    <member name="T:System.Drawing.Design.ColorEditor">
      <summary>提供 <see cref="T:System.Drawing.Design.UITypeEditor" />，以便以可视的方式选取颜色。</summary>
    </member>
    <member name="M:System.Drawing.Design.ColorEditor.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.Design.ColorEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Drawing.Design.ColorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>使用 <see cref="M:System.Drawing.Design.ColorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> 方法所提供的编辑器样式编辑给定的对象值。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="provider">
        <see cref="T:System.IServiceProvider" />，通过它可能获得编辑服务。</param>
      <param name="value">正在编辑的值的实例。</param>
      <returns>新的对象值。 如果对象的值尚未更改，则它返回的对象应与传递给它的对象相同。</returns>
    </member>
    <member name="M:System.Drawing.Design.ColorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取 Edit 方法的编辑样式。 如果不支持该方法，则将返回 <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <returns>一个指示所提供的编辑样式的枚举值。</returns>
    </member>
    <member name="M:System.Drawing.Design.ColorEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取一个值，该值指示该编辑器是否支持绘制对象值表示形式。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <returns>如果实现了 <see cref="Overload:System.Drawing.Design.ColorEditor.PaintValue" />，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.ColorEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary>在提供的画布上绘制给定对象的表示值。</summary>
      <param name="e">绘制什么、在何处绘制。</param>
    </member>
    <member name="T:System.Drawing.Design.CursorEditor">
      <summary>提供一个 <see cref="T:System.Drawing.Design.UITypeEditor" />，可以对游标文件 (.cur) 执行默认文件搜索。</summary>
    </member>
    <member name="M:System.Drawing.Design.CursorEditor.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.Design.CursorEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Drawing.Design.CursorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>使用 <see cref="Overload:System.Drawing.Design.CursorEditor.GetEditStyle" /> 方法所提供的编辑器样式编辑给定的对象值。</summary>
      <param name="context">一个类型说明符上下文，可用于提供附加的上下文信息。</param>
      <param name="provider">可通过其获取编辑服务的服务提供程序对象。</param>
      <param name="value">正在编辑的值的实例。</param>
      <returns>新的对象值。 如果对象的值尚未更改，则它返回的对象应与传递给它的对象相同。</returns>
    </member>
    <member name="M:System.Drawing.Design.CursorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>检索 <see cref="Overload:System.Drawing.Design.CursorEditor.EditValue" /> 方法的编辑样式。</summary>
      <param name="context">一个类型说明符上下文，可用于提供附加的上下文信息。</param>
      <returns>一个指示所提供的编辑样式的枚举值。 如果不支持该方法，则将返回 <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />。</returns>
    </member>
    <member name="P:System.Drawing.Design.CursorEditor.IsDropDownResizable">
      <summary>获取一个值，指示是否应该由用户调整下拉编辑器的大小。</summary>
      <returns>如果下拉编辑器是可调整大小的，则为 <see langword="true" />；否则，为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Drawing.Design.FontEditor">
      <summary>提供用来选择和配置 <see cref="T:System.Drawing.Font" /> 对象的用户界面。</summary>
    </member>
    <member name="M:System.Drawing.Design.FontEditor.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.Design.FontEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Drawing.Design.FontEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>使用 <see cref="M:System.Drawing.Design.FontEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> 指示的编辑器样式编辑指定的对象值。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="provider">一个 <see cref="T:System.IServiceProvider" /> ，此编辑器可用它来获取服务。</param>
      <param name="value">要编辑的对象。</param>
      <returns>新的对象值。 如果对象的值尚未更改，则它返回的对象应与传递给它的对象相同。</returns>
    </member>
    <member name="M:System.Drawing.Design.FontEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取由 <see cref="M:System.Drawing.Design.FontEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> 方法使用的编辑器样式。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <returns>
        <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 值，指示 <see cref="M:System.Drawing.Design.FontEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> 使用的编辑器的样式。</returns>
    </member>
    <member name="T:System.Drawing.Design.FontNameEditor">
      <summary>提供 <see cref="T:System.Drawing.Design.UITypeEditor" />，用于绘制字体名称的标志符号。</summary>
    </member>
    <member name="M:System.Drawing.Design.FontNameEditor.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.Design.FontNameEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Drawing.Design.FontNameEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>确定此编辑器是否支持绘制对象值的表示形式。</summary>
      <param name="context">一个类型说明符上下文，可用于提供附加的上下文信息。</param>
      <returns>如果实现了 <see cref="Overload:System.Drawing.Design.FontNameEditor.PaintValue" />，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.FontNameEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary>在提供的画布上绘制给定对象的表示值。 应该在提供的矩形的边界内进行绘制。</summary>
      <param name="e">绘制什么、在何处绘制。</param>
    </member>
    <member name="T:System.Drawing.Design.ImageEditor">
      <summary>提供一个用户界面，用于为属性网格中的属性选择图像。</summary>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.Design.ImageEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.CreateExtensionsString(System.String[],System.String)">
      <summary>使用文件扩展名和指定的分隔符的指定数组创建文件扩展名字符串。</summary>
      <param name="extensions">要筛选的扩展名。</param>
      <param name="sep">要使用的分隔符。</param>
      <returns>包含指定的文件扩展名的字符串，每个文件扩展名之间以指定的分隔符分隔。</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.CreateFilterEntry(System.Drawing.Design.ImageEditor)">
      <summary>为文件对话框的文件列表创建筛选项。</summary>
      <param name="e">从中获取筛选项的 <see cref="T:System.Drawing.Design.ImageEditor" />。</param>
      <returns>新筛选项字符串。</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>使用 <see cref="M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> 方法提供的编辑样式编辑指定的对象值。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="provider">
        <see cref="T:System.IServiceProvider" />，通过它可以获得编辑服务。</param>
      <param name="value">一个正在编辑的 <see cref="T:System.Object" />。</param>
      <returns>一个表示新值的 <see cref="T:System.Object" />。 如果对象的值尚未更改，则 <see cref="M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> 返回传递给它的对象。</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取 <see cref="M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> 方法的编辑样式。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <returns>
        <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 值之一，指示所支持的编辑样式。</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.GetExtensions">
      <summary>获取此编辑器最初用来筛选文件列表的文件列表筛选器的扩展名。</summary>
      <returns>用于筛选文件列表的一组文件扩展名。</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.GetFileDialogDescription">
      <summary>获取该编辑器所提供的默认文件列表筛选器的说明。</summary>
      <returns>对默认文件列表筛选器的说明。</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.GetImageExtenders">
      <summary>获取受支持图像类型的数组。</summary>
      <returns>一个表示受支持图像类型的 <see cref="T:System.Type" /> 数组。</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取一个值，该值指示该编辑器是否支持绘制对象值表示形式。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <returns>如果实现了 <see cref="M:System.Drawing.Design.ImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)" />，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.LoadFromStream(System.IO.Stream)">
      <summary>从指定的流加载图像。</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" />，其中包含要加载的图像。</param>
      <returns>已加载的 <see cref="T:System.Drawing.Image" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary>绘制指定的 <see cref="T:System.Drawing.Design.PaintValueEventArgs" /> 所指示的值。</summary>
      <param name="e">指示绘制内容和绘制位置的 <see cref="T:System.Drawing.Design.PaintValueEventArgs" />。</param>
    </member>
    <member name="T:System.Drawing.Design.MetafileEditor">
      <summary>提供一个 <see cref="T:System.Drawing.Design.UITypeEditor" />，可对图元文件 (.emf) 文件执行默认文件搜索。</summary>
    </member>
    <member name="M:System.Drawing.Design.MetafileEditor.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.Design.MetafileEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Drawing.Design.MetafileEditor.GetExtensions">
      <summary>获取此编辑器最初用来筛选文件列表的文件列表筛选器的扩展名。</summary>
      <returns>用于筛选文件列表的一组文件扩展名。</returns>
    </member>
    <member name="M:System.Drawing.Design.MetafileEditor.GetFileDialogDescription">
      <summary>获取该编辑器所提供的默认文件列表筛选器的说明。</summary>
      <returns>对默认文件列表筛选器的说明。</returns>
    </member>
    <member name="M:System.Drawing.Design.MetafileEditor.LoadFromStream(System.IO.Stream)">
      <summary>从指定的流加载图像。</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" />，其中包含要加载的图像。</param>
      <returns>已加载的 <see cref="T:System.Drawing.Image" />。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.AnchorEditor">
      <summary>提供用于配置 <see cref="P:System.Windows.Forms.Control.Anchor" /> 属性的用户界面。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AnchorEditor.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.AnchorEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AnchorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>使用指定的服务提供程序和上下文编辑指定对象的值。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="provider">
        <see cref="T:System.IServiceProvider" />，通过它可能获得编辑服务。</param>
      <param name="value">正在编辑的值的实例。</param>
      <returns>新的对象值。 如果该对象的值尚未更改，则这应返回与传递给它的对象相同的对象。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AnchorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取由 <see cref="M:System.Windows.Forms.Design.AnchorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> 方法使用的编辑器样式。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <returns>
        <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 值之一，指示所提供的编辑样式。 如果不支持该方法，则此方法将返回 <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.BorderSidesEditor">
      <summary>提供一个用于设置 <see cref="P:System.Windows.Forms.ToolStripStatusLabel.BorderSides" /> 属性的编辑器。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.BorderSidesEditor.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.BorderSidesEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.BorderSidesEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>使用 <see cref="M:System.Windows.Forms.Design.BorderSidesEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> 提供的编辑器样式编辑给定对象值。</summary>
      <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，提供关于控件或组件的信息。</param>
      <param name="provider">一个 <see cref="T:System.IServiceProvider" />，提供对其他对象的自定义支持。</param>
      <param name="value">要编辑的对象值。</param>
      <returns>编辑后的对象。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.BorderSidesEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>检索 <see langword="EditValue" /> 方法的编辑样式。</summary>
      <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，提供关于控件或组件的信息。</param>
      <returns>
        <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 值之一。 如果不支持该方法，则此方法将返回 <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.DockEditor">
      <summary>提供用于指定 <see cref="P:System.Windows.Forms.Control.Dock" /> 属性的用户界面。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DockEditor.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.DockEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DockEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>使用 GetEditorStyle 提供的编辑器样式编辑指定的对象值。 提供服务提供程序以获取任何所需要的编辑服务。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="provider">可通过其获取编辑服务的服务提供程序对象。</param>
      <param name="value">正在编辑的值的实例。</param>
      <returns>新的对象值。 如果该对象的值尚未更改，则这应返回与传递给它的对象相同的对象。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DockEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>检索 EditValue 方法的编辑样式。 如果不支持该方法，则返回 None。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <returns>一个指示所提供的编辑样式的枚举值。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.FileNameEditor">
      <summary>提供用于选择文件名的用户界面。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FileNameEditor.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.FileNameEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FileNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>使用由 <see cref="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> 方法提供的编辑器样式编辑指定的对象。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="provider">可通过其获取编辑服务的服务提供程序对象。</param>
      <param name="value">正在编辑的值的实例。</param>
      <returns>新的对象值。 如果该对象的值尚未更改，则这应返回与传递给它的对象相同的对象。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取 <see cref="M:System.Windows.Forms.Design.FileNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> 方法所使用的编辑样式。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <returns>
        <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 值之一，指示所提供的编辑样式。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FileNameEditor.InitializeDialog(System.Windows.Forms.OpenFileDialog)">
      <summary>在创建打开文件对话框时初始化此对话框。</summary>
      <param name="openFileDialog">用来选择文件名的 <see cref="T:System.Windows.Forms.OpenFileDialog" />。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.FolderNameEditor">
      <summary>提供从文件系统选择文件夹的用户界面。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.FolderNameEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>使用 <see cref="M:System.Windows.Forms.Design.FolderNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> 提供的编辑器样式编辑指定的对象。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="provider">服务对象提供程序。</param>
      <param name="value">要设置的值。</param>
      <returns>对象的新值，或者旧值（如果对象未能更新）。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser">
      <summary>表示一个对话框，用户可以通过该对话框选择文件夹。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.Description">
      <summary>获取或设置文件夹上方显示的说明。</summary>
      <returns>文件夹上方显示的说明。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.DirectoryPath">
      <summary>获取用户选取的文件夹的目录路径。</summary>
      <returns>用户选取的文件夹的目录路径。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.ShowDialog">
      <summary>显示文件夹浏览器对话框。</summary>
      <returns>来自窗体的 <see cref="T:System.Windows.Forms.DialogResult" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.ShowDialog(System.Windows.Forms.IWin32Window)">
      <summary>显示具有指定所有者的文件夹浏览器对话框。</summary>
      <param name="owner">将拥有模态对话框的顶级窗口（例如：System.Windows.Forms.Form）。</param>
      <returns>来自窗体的 <see cref="T:System.Windows.Forms.DialogResult" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.StartLocation">
      <summary>获取或设置根节点的起始位置。</summary>
      <returns>一个 <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder" />，它指示文件夹浏览器最初的浏览位置。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.Style">
      <summary>浏览文件夹时文件夹浏览器将使用的样式。 应为 <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles" /> 枚举中的标志的组合。</summary>
      <returns>一个 <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles" /> 枚举成员，它指示 <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" /> 要使用的行为。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder">
      <summary>定义用于指示文件夹浏览器最初浏览到的根文件夹的标识符。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Desktop">
      <summary>用户的桌面。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Favorites">
      <summary>用户的收藏夹列表。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.MyComputer">
      <summary>“我的电脑”图标的内容。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.MyDocuments">
      <summary>用户的“我的文档”文件夹。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.MyPictures">
      <summary>用户存储图片的位置。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.NetAndDialUpConnections">
      <summary>网络和拨号连接。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.NetworkNeighborhood">
      <summary>网上邻居。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Printers">
      <summary>包含已安装打印机的文件夹。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Recent">
      <summary>包含指向最近打开过的文件的快捷方式的文件夹。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.SendTo">
      <summary>包含指向要将文档发送到其中的应用程序的快捷方式的文件夹。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.StartMenu">
      <summary>用户的开始菜单。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Templates">
      <summary>用户的文件模板。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles">
      <summary>定义用于指定 <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" /> 的行为的标识符。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.BrowseForComputer">
      <summary>文件夹浏览器只能返回计算机相关信息。 如果用户选择计算机之外的任何内容，“确定”按钮就会变灰。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.BrowseForEverything">
      <summary>文件夹浏览器可以返回它能够返回的任何对象。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.BrowseForPrinter">
      <summary>文件夹浏览器只能返回打印机相关信息。 如果用户选择打印机之外的任何内容，“确定”按钮就会变灰。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.RestrictToDomain">
      <summary>文件夹浏览器在对话框的树视图控件中将不会包括域级别下的网络文件夹，也不允许定位到域之外的网络位置。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.RestrictToFilesystem">
      <summary>文件夹浏览器将只返回本地文件系统目录。 如果用户选择的文件夹不属于本地文件系统，“确定”按钮就会变灰。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.RestrictToSubfolders">
      <summary>文件夹浏览器将只返回根文件夹或根文件夹的子文件夹中的本地文件系统的对象。 如果用户选择的根文件夹的子文件夹不属于本地文件系统，“确定”按钮就会变灰。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.ShowTextBox">
      <summary>文件夹浏览器在浏览对话框中包含一个 <see cref="T:System.Windows.Forms.TextBox" /> 控件，可供用户键入项名称。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取 <see cref="M:System.Windows.Forms.Design.FolderNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> 方法所使用的编辑样式。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <returns>指示所提供的编辑样式的 <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.InitializeDialog(System.Windows.Forms.Design.FolderNameEditor.FolderBrowser)">
      <summary>初始化文件夹浏览器对话框。</summary>
      <param name="folderBrowser">一个 <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" />，它用于选择文件夹。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.ImageListImageEditor">
      <summary>提供一个编辑器，它能执行位图 (.bmp) 文件的默认文件搜索。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.ImageListImageEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>使用 <see cref="M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> 方法提供的编辑样式编辑指定的对象值。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="provider">
        <see cref="T:System.IServiceProvider" />，通过它可以获得编辑服务。</param>
      <param name="value">一个正在编辑的 <see cref="T:System.Object" />。</param>
      <returns>一个表示新值的 <see cref="T:System.Object" />。 如果对象的值尚未更改，则 <see cref="M:System.Windows.Forms.Design.ImageListImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> 方法返回传递给它的对象。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.GetFileDialogDescription">
      <summary>获取该编辑器所提供的默认文件列表筛选器的说明。</summary>
      <returns>对默认文件列表筛选器的说明。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.GetImageExtenders">
      <summary>获取受支持图像类型的数组。</summary>
      <returns>一个表示受支持图像类型的 <see cref="T:System.Type" /> 数组。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取一个值，该值指示该编辑器是否支持绘制对象值表示形式。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <returns>如果实现了 <see cref="M:System.Drawing.Design.ImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)" />，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary>绘制指定的 <see cref="T:System.Drawing.Design.PaintValueEventArgs" /> 所指示的值。</summary>
      <param name="e">指示绘制内容和绘制位置的 <see cref="T:System.Drawing.Design.PaintValueEventArgs" />。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.ShortcutKeysEditor">
      <summary>提供用于选取快捷键的编辑器。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ShortcutKeysEditor.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.ShortcutKeysEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ShortcutKeysEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>使用 <see cref="M:System.Windows.Forms.Design.ShortcutKeysEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> 方法所提供的编辑器样式编辑给定的对象值。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="provider">
        <see cref="T:System.IServiceProvider" />，此编辑器可用其来获取服务。</param>
      <param name="value">要编辑的 <see cref="T:System.Object" />。</param>
      <returns>
        <see cref="T:System.Object" /> 的新值。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ShortcutKeysEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取由 <see cref="Overload:System.Windows.Forms.Design.ShortcutKeysEditor.EditValue" /> 方法使用的编辑器样式。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <returns>
        <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 值，指示 <see cref="Overload:System.Windows.Forms.Design.ShortcutKeysEditor.EditValue" /> 方法使用的编辑器样式。</returns>
    </member>
  </members>
</doc>