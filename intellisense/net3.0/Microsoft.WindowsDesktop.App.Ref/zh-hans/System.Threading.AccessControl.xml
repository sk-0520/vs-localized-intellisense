<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Threading.AccessControl</name>
  </assembly>
  <members>
    <member name="T:System.Security.AccessControl.EventWaitHandleAccessRule">
      <summary>表示一组允许或拒绝用户或组进行访问的权限。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AccessControlType)">
      <summary>初始化 <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> 类的新实例，指定此规则应用到的用户或组、访问权限以及是否允许或拒绝指定的访问权限。</summary>
      <param name="identity">此规则应用到的用户或组。 必须为 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 类型，或可以转换为 <see cref="T:System.Security.Principal.NTAccount" /> 类型的类型，如 <see cref="T:System.Security.Principal.SecurityIdentifier" />。</param>
      <param name="eventRights">
        <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> 值的按位组合，它指定允许或拒绝的权限。</param>
      <param name="type">
        <see cref="T:System.Security.AccessControl.AccessControlType" /> 值之一，用于指定是允许还是拒绝相应权限。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> 指定了一个无效值。  
或 
 <paramref name="type" /> 指定了一个无效值。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> 为 <see langword="null" />。  
或 
 <paramref name="eventRights" /> 为零。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> 既不属于类型 <see cref="T:System.Security.Principal.SecurityIdentifier" />，也不属于可以转换为 <see cref="T:System.Security.Principal.NTAccount" /> 类型的类型（如 <see cref="T:System.Security.Principal.SecurityIdentifier" />）。</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleAccessRule.#ctor(System.String,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AccessControlType)">
      <summary>初始化 <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> 类的新实例，指定应用此规则的用户或组的名称、访问权限以及是否允许或拒绝指定的访问权限。</summary>
      <param name="identity">应用此规则的用户或组的名称。</param>
      <param name="eventRights">
        <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> 值的按位组合，它指定允许或拒绝的权限。</param>
      <param name="type">
        <see cref="T:System.Security.AccessControl.AccessControlType" /> 值之一，用于指定是允许还是拒绝相应权限。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> 指定了一个无效值。  

或 - 
<paramref name="type" /> 指定了一个无效值。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="eventRights" /> 为零。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> 为 <see langword="null" />。  
或 
 <paramref name="identity" /> 是一个长度为零的字符串。  
或 
 <paramref name="identity" /> 的长度超过 512 个字符。</exception>
    </member>
    <member name="P:System.Security.AccessControl.EventWaitHandleAccessRule.EventWaitHandleRights">
      <summary>获取访问规则允许或拒绝的权限。</summary>
      <returns>
        <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> 值的按位组合，它指示访问规则允许或拒绝的权限。</returns>
    </member>
    <member name="T:System.Security.AccessControl.EventWaitHandleAuditRule">
      <summary>表示要为用户或组审核的一组访问权限。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AuditFlags)">
      <summary>初始化 <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" /> 类的新实例，指定要审核的用户或组，要审核的权限，以及是否审核成功和（或）失败。</summary>
      <param name="identity">此规则应用到的用户或组。 必须为 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 类型，或可以转换为 <see cref="T:System.Security.Principal.NTAccount" /> 类型的类型，如 <see cref="T:System.Security.Principal.SecurityIdentifier" />。</param>
      <param name="eventRights">
        <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> 值的按位组合，它指定要审核的访问类型。</param>
      <param name="flags">
        <see cref="T:System.Security.AccessControl.AuditFlags" /> 值的按位组合，它指定审核是成功、失败还是包括这两种情况。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> 指定了一个无效值。  
或 
 <paramref name="flags" /> 指定了一个无效值。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> 为 <see langword="null" />。  
或 
 <paramref name="eventRights" /> 为零。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> 既不属于类型 <see cref="T:System.Security.Principal.SecurityIdentifier" />，也不属于可以转换为 <see cref="T:System.Security.Principal.NTAccount" /> 类型的类型（如 <see cref="T:System.Security.Principal.SecurityIdentifier" />）。</exception>
    </member>
    <member name="P:System.Security.AccessControl.EventWaitHandleAuditRule.EventWaitHandleRights">
      <summary>获取受此审核规则影响的访问权限。</summary>
      <returns>
        <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> 值的按位组合，它指示受此审核规则影响的权限。</returns>
    </member>
    <member name="T:System.Security.AccessControl.EventWaitHandleRights">
      <summary>指定可应用于命名的系统事件对象的访问控制权限。</summary>
    </member>
    <member name="F:System.Security.AccessControl.EventWaitHandleRights.ChangePermissions">
      <summary>更改与命名的事件关联的安全和审核规则的权限。</summary>
    </member>
    <member name="F:System.Security.AccessControl.EventWaitHandleRights.Delete">
      <summary>删除命名的事件的权限。</summary>
    </member>
    <member name="F:System.Security.AccessControl.EventWaitHandleRights.FullControl">
      <summary>对某个命名的事件进行完全控制和修改其访问规则和审核规则的权限。</summary>
    </member>
    <member name="F:System.Security.AccessControl.EventWaitHandleRights.Modify">
      <summary>设置或重置命名的事件的信号发送状态的权限。</summary>
    </member>
    <member name="F:System.Security.AccessControl.EventWaitHandleRights.ReadPermissions">
      <summary>打开并复制某个命名的事件的访问规则和审核规则的权限。</summary>
    </member>
    <member name="F:System.Security.AccessControl.EventWaitHandleRights.Synchronize">
      <summary>在命名的事件上等待的权限。</summary>
    </member>
    <member name="F:System.Security.AccessControl.EventWaitHandleRights.TakeOwnership">
      <summary>更改命名的事件的所有者的权限。</summary>
    </member>
    <member name="T:System.Security.AccessControl.EventWaitHandleSecurity">
      <summary>表示应用于命名的系统等待句柄的 Windows 访问控制安全性。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.#ctor">
      <summary>使用默认值初始化 <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> 类的新实例。</summary>
      <exception cref="T:System.NotSupportedException">Windows 98 或 Windows Millennium Edition 不支持此类。</exception>
    </member>
    <member name="P:System.Security.AccessControl.EventWaitHandleSecurity.AccessRightType">
      <summary>获取 <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> 类用于表示访问权限的枚举类型。</summary>
      <returns>一个 <see cref="T:System.Type" /> 对象，表示 <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> 枚举。</returns>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
      <summary>使用指定的访问权限、访问控制和标志为指定用户创建新的访问控制规则。</summary>
      <param name="identityReference">一个 <see cref="T:System.Security.Principal.IdentityReference" />，用于标识此规则应用到的用户或组。</param>
      <param name="accessMask">
        <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> 值的按位组合，用于指定允许或拒绝的访问权限，该组合将被强制转换为整数。</param>
      <param name="isInherited">这对于命名的等待句柄没有意义，因为这些句柄没有层次结构。</param>
      <param name="inheritanceFlags">这对于命名的等待句柄没有意义，因为这些句柄没有层次结构。</param>
      <param name="propagationFlags">这对于命名的等待句柄没有意义，因为这些句柄没有层次结构。</param>
      <param name="type">
        <see cref="T:System.Security.AccessControl.AccessControlType" /> 值之一，用于指定是允许还是拒绝相应权限。</param>
      <returns>一个 <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> 对象，表示指定用户的指定权限。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="accessMask" />、<paramref name="inheritanceFlags" />、<paramref name="propagationFlags" /> 或 <paramref name="type" /> 指定了一个无效值。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identityReference" /> 为 <see langword="null" />。  
或 
 <paramref name="accessMask" /> 为零。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identityReference" /> 既不属于类型 <see cref="T:System.Security.Principal.SecurityIdentifier" />，也不属于可以转换为 <see cref="T:System.Security.Principal.NTAccount" /> 类型的类型（如 <see cref="T:System.Security.Principal.SecurityIdentifier" />）。</exception>
    </member>
    <member name="P:System.Security.AccessControl.EventWaitHandleSecurity.AccessRuleType">
      <summary>获取 <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> 类用于表示访问规则的类型。</summary>
      <returns>一个表示 <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> 类的 <see cref="T:System.Type" /> 对象。</returns>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)">
      <summary>搜索可以将新规则与之合并的匹配访问控制规则。 如果未找到符合条件的规则，则添加新规则。</summary>
      <param name="rule">要添加的访问控制规则。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.AddAuditRule(System.Security.AccessControl.EventWaitHandleAuditRule)">
      <summary>搜索可以将新规则与之合并的审核规则。 如果未找到符合条件的规则，则添加新规则。</summary>
      <param name="rule">要添加的审核规则。 由此规则指定的用户来确定搜索。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
      <summary>新建审核规则，指定规则应用到的用户、要审核的访问权限以及触发审核规则的结果。</summary>
      <param name="identityReference">一个 <see cref="T:System.Security.Principal.IdentityReference" />，用于标识此规则应用到的用户或组。</param>
      <param name="accessMask">
        <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> 值的按位组合，用于指定要审核的访问权限，该组合将被强制转换为整数。</param>
      <param name="isInherited">这对于命名的等待句柄没有意义，因为这些句柄没有层次结构。</param>
      <param name="inheritanceFlags">这对于命名的等待句柄没有意义，因为这些句柄没有层次结构。</param>
      <param name="propagationFlags">这对于命名的等待句柄没有意义，因为这些句柄没有层次结构。</param>
      <param name="flags">
        <see cref="T:System.Security.AccessControl.AuditFlags" /> 值的按位组合，它指定是审核成功的访问、失败的访问还是对这两种情况都进行审核。</param>
      <returns>一个 <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" /> 对象，表示指定用户的指定审核规则。 该方法的返回类型是基类 <see cref="T:System.Security.AccessControl.AuditRule" />，但可以安全地将返回值强制转换为派生类。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="accessMask" />、<paramref name="inheritanceFlags" />、<paramref name="propagationFlags" /> 或 <paramref name="flags" /> 指定了一个无效值。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identityReference" /> 为 <see langword="null" />。  
或 
 <paramref name="accessMask" /> 为零。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identityReference" /> 既不属于类型 <see cref="T:System.Security.Principal.SecurityIdentifier" />，也不属于可以转换为 <see cref="T:System.Security.Principal.NTAccount" /> 类型的类型（如 <see cref="T:System.Security.Principal.SecurityIdentifier" />）。</exception>
    </member>
    <member name="P:System.Security.AccessControl.EventWaitHandleSecurity.AuditRuleType">
      <summary>获取 <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> 类用于表示审核规则的类型。</summary>
      <returns>一个表示 <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" /> 类的 <see cref="T:System.Type" /> 对象。</returns>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)">
      <summary>搜索如下的访问控制规则：与指定的访问规则具有相同的用户和 <see cref="T:System.Security.AccessControl.AccessControlType" />（允许或拒绝），并具有兼容的继承和传播标志；如果找到，则从中移除指定访问规则中包含的权限。</summary>
      <param name="rule">指定要搜索的用户和 <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> 的 <see cref="T:System.Security.AccessControl.AccessControlType" />，以及匹配规则（如果找到）必须兼容的一组继承和传播标志。 指定要从兼容规则移除的权限（如果找到）。</param>
      <returns>如果找到一个兼容规则，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleAll(System.Security.AccessControl.EventWaitHandleAccessRule)">
      <summary>搜索与指定的规则具有相同用户和 <see cref="T:System.Security.AccessControl.AccessControlType" />（允许或拒绝）的所有访问控制规则，如果找到则将其移除。</summary>
      <param name="rule">一个 <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" />，指定要搜索的用户和 <see cref="T:System.Security.AccessControl.AccessControlType" />。 此规则指定的任何权限都被忽略。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.EventWaitHandleAccessRule)">
      <summary>搜索与指定的规则完全匹配的访问控制规则，如果找到则将其移除。</summary>
      <param name="rule">要移除的 <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRule(System.Security.AccessControl.EventWaitHandleAuditRule)">
      <summary>搜索以下的审核规则：与指定的规则具有相同的用户，并具有兼容的继承和传播标志；如果找到兼容规则，则从中移除指定的规则中包含的权限。</summary>
      <param name="rule">一个 <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" />，指定要搜索的用户以及匹配规则（如果找到）必须兼容的一组继承和传播标志。 指定要从兼容规则移除的权限（如果找到）。</param>
      <returns>如果找到一个兼容规则，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRuleAll(System.Security.AccessControl.EventWaitHandleAuditRule)">
      <summary>搜索所有使用相同用户作为指定规则的审核规则，如果找到符合条件的规则，则移除它们。</summary>
      <param name="rule">指定要搜索的用户的 <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" />。 此规则指定的任何权限都被忽略。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.EventWaitHandleAuditRule)">
      <summary>搜索与指定的规则完全匹配的审核规则；如果找到，则移除这些规则。</summary>
      <param name="rule">要移除的 <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.ResetAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)">
      <summary>不论 <see cref="T:System.Security.AccessControl.AccessControlType" /> 如何，移除与指定的规则具有相同用户的所有访问控制规则，然后添加指定的规则。</summary>
      <param name="rule">要添加的 <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" />。 由此规则指定的用户确定在添加此规则之前要移除的规则。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.SetAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)">
      <summary>移除与指定的规则具有相同用户和 <see cref="T:System.Security.AccessControl.AccessControlType" />（允许或拒绝）的所有控制规则，然后添加指定的规则。</summary>
      <param name="rule">要添加的 <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" />。 由此规则的用户和 <see cref="T:System.Security.AccessControl.AccessControlType" /> 确定在添加此规则之前要移除的规则。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.SetAuditRule(System.Security.AccessControl.EventWaitHandleAuditRule)">
      <summary>不论 <see cref="T:System.Security.AccessControl.AuditFlags" /> 的值如何，移除与指定的规则具有相同用户的所有审核规则，然后添加指定的规则。</summary>
      <param name="rule">要添加的 <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" />。 由此规则指定的用户确定在添加此规则之前要移除的规则。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="T:System.Security.AccessControl.MutexAccessRule">
      <summary>表示一组允许或拒绝用户或组进行访问的权限。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
      <summary>初始化 <see cref="T:System.Security.AccessControl.MutexAccessRule" /> 类的新实例，指定此规则应用到的用户或组、访问权限以及是否允许或拒绝指定的访问权限。</summary>
      <param name="identity">此规则应用到的用户或组。 必须为 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 类型，或可以转换为 <see cref="T:System.Security.Principal.NTAccount" /> 类型的类型，如 <see cref="T:System.Security.Principal.SecurityIdentifier" />。</param>
      <param name="eventRights">
        <see cref="T:System.Security.AccessControl.MutexRights" /> 值的按位组合，它指定允许或拒绝的权限。</param>
      <param name="type">
        <see cref="T:System.Security.AccessControl.AccessControlType" /> 值之一，用于指定是允许还是拒绝相应权限。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> 指定了一个无效值。  
或 
 <paramref name="type" /> 指定了一个无效值。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> 为 <see langword="null" />。  
或 
 <paramref name="eventRights" /> 为零。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> 既不属于类型 <see cref="T:System.Security.Principal.SecurityIdentifier" />，也不属于可以转换为 <see cref="T:System.Security.Principal.NTAccount" /> 类型的类型（如 <see cref="T:System.Security.Principal.SecurityIdentifier" />）。</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
      <summary>初始化 <see cref="T:System.Security.AccessControl.MutexAccessRule" /> 类的新实例，指定应用此规则的用户或组的名称、访问权限以及是否允许或拒绝指定的访问权限。</summary>
      <param name="identity">应用此规则的用户或组的名称。</param>
      <param name="eventRights">
        <see cref="T:System.Security.AccessControl.MutexRights" /> 值的按位组合，它指定允许或拒绝的权限。</param>
      <param name="type">
        <see cref="T:System.Security.AccessControl.AccessControlType" /> 值之一，用于指定是允许还是拒绝相应权限。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> 指定了一个无效值。  
或 
 <paramref name="type" /> 指定了一个无效值。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="eventRights" /> 为零。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> 为 <see langword="null" />。  

或 - 
<paramref name="identity" /> 是一个长度为零的字符串。  

或 
 <paramref name="identity" /> 的长度超过 512 个字符。</exception>
    </member>
    <member name="P:System.Security.AccessControl.MutexAccessRule.MutexRights">
      <summary>获取访问规则允许或拒绝的权限。</summary>
      <returns>
        <see cref="T:System.Security.AccessControl.MutexRights" /> 值的按位组合，它指示访问规则允许或拒绝的权限。</returns>
    </member>
    <member name="T:System.Security.AccessControl.MutexAuditRule">
      <summary>表示要为用户或组审核的一组访问权限。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.AccessControl.MutexAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AuditFlags)">
      <summary>初始化 <see cref="T:System.Security.AccessControl.MutexAuditRule" /> 类的新实例，指定要审核的用户或组，要审核的权限，以及是否审核成功和（或）失败。</summary>
      <param name="identity">此规则应用到的用户或组。 必须为 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 类型，或可以转换为 <see cref="T:System.Security.Principal.NTAccount" /> 类型的类型，如 <see cref="T:System.Security.Principal.SecurityIdentifier" />。</param>
      <param name="eventRights">
        <see cref="T:System.Security.AccessControl.MutexRights" /> 值的按位组合，它指定要审核的访问类型。</param>
      <param name="flags">
        <see cref="T:System.Security.AccessControl.AuditFlags" /> 值的按位组合，它指定审核是成功、失败还是包括这两种情况。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> 指定了一个无效值。  
或 
 <paramref name="flags" /> 指定了一个无效值。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> 为 <see langword="null" />。  

或 - 
<paramref name="eventRights" /> 为零。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> 既不属于类型 <see cref="T:System.Security.Principal.SecurityIdentifier" />，也不属于可以转换为 <see cref="T:System.Security.Principal.NTAccount" /> 类型的类型（如 <see cref="T:System.Security.Principal.SecurityIdentifier" />）。</exception>
    </member>
    <member name="P:System.Security.AccessControl.MutexAuditRule.MutexRights">
      <summary>获取受此审核规则影响的访问权限。</summary>
      <returns>
        <see cref="T:System.Security.AccessControl.MutexRights" /> 值的按位组合，它指示受此审核规则影响的权限。</returns>
    </member>
    <member name="T:System.Security.AccessControl.MutexRights">
      <summary>指定可应用于命名的系统 mutex 对象的访问控制权限。</summary>
    </member>
    <member name="F:System.Security.AccessControl.MutexRights.ChangePermissions">
      <summary>更改与命名的 mutex 关联的安全性和审核规则的权限。</summary>
    </member>
    <member name="F:System.Security.AccessControl.MutexRights.Delete">
      <summary>删除命名的 mutex 的权限。</summary>
    </member>
    <member name="F:System.Security.AccessControl.MutexRights.FullControl">
      <summary>对某个命名的 mutex 进行完全控制和修改其访问规则和审核规则的权限。</summary>
    </member>
    <member name="F:System.Security.AccessControl.MutexRights.Modify">
      <summary>释放命名的 mutex 的权限。</summary>
    </member>
    <member name="F:System.Security.AccessControl.MutexRights.ReadPermissions">
      <summary>打开并复制命名的 mutex 的访问规则和审核规则的权限。</summary>
    </member>
    <member name="F:System.Security.AccessControl.MutexRights.Synchronize">
      <summary>在命名的 mutex 上等待的权限。</summary>
    </member>
    <member name="F:System.Security.AccessControl.MutexRights.TakeOwnership">
      <summary>更改命名的 mutex 的所有者的权限。</summary>
    </member>
    <member name="T:System.Security.AccessControl.MutexSecurity">
      <summary>表示命名的 mutex 的 Windows 访问控制安全性。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.#ctor">
      <summary>使用默认值初始化 <see cref="T:System.Security.AccessControl.MutexSecurity" /> 类的新实例。</summary>
      <exception cref="T:System.NotSupportedException">Windows 98 或 Windows Millennium Edition 不支持此类。</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)">
      <summary>使用来自具有指定名称的系统 mutex 的访问控制安全性规则的指定部分初始化 <see cref="T:System.Security.AccessControl.MutexSecurity" /> 类的新实例。</summary>
      <param name="name">要检索其访问控制安全性规则的系统 mutex 的名称。</param>
      <param name="includeSections">指定要检索的部分的 <see cref="T:System.Security.AccessControl.AccessControlSections" /> 标志的组合。</param>
      <exception cref="T:System.IO.FileNotFoundException">没有具有指定名称的系统对象。</exception>
      <exception cref="T:System.NotSupportedException">Windows 98 或 Windows Millennium Edition 不支持此类。</exception>
    </member>
    <member name="P:System.Security.AccessControl.MutexSecurity.AccessRightType">
      <summary>获取 <see cref="T:System.Security.AccessControl.MutexSecurity" /> 类用于表示访问规则的枚举。</summary>
      <returns>一个 <see cref="T:System.Type" /> 对象，表示 <see cref="T:System.Security.AccessControl.MutexRights" /> 枚举。</returns>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
      <summary>使用指定的访问权限、访问控制和标志为指定用户创建新的访问控制规则。</summary>
      <param name="identityReference">一个 <see cref="T:System.Security.Principal.IdentityReference" />，用于标识此规则应用到的用户或组。</param>
      <param name="accessMask">
        <see cref="T:System.Security.AccessControl.MutexRights" /> 值的按位组合，用于指定允许或拒绝的访问权限，该组合将被强制转换为整数。</param>
      <param name="isInherited">这对于命名的 mutex 没有意义，因为这些 mutex 没有层次结构。</param>
      <param name="inheritanceFlags">这对于命名的 mutex 没有意义，因为这些 mutex 没有层次结构。</param>
      <param name="propagationFlags">这对于命名的 mutex 没有意义，因为这些 mutex 没有层次结构。</param>
      <param name="type">
        <see cref="T:System.Security.AccessControl.AccessControlType" /> 值之一，用于指定是允许还是拒绝相应权限。</param>
      <returns>一个 <see cref="T:System.Security.AccessControl.MutexAccessRule" /> 对象，表示指定用户的指定权限。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="accessMask" />、<paramref name="inheritanceFlags" />、<paramref name="propagationFlags" /> 或 <paramref name="type" /> 指定了一个无效值。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identityReference" /> 为 <see langword="null" />。  
或 
 <paramref name="accessMask" /> 为零。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identityReference" /> 既不属于类型 <see cref="T:System.Security.Principal.SecurityIdentifier" />，也不属于可以转换为 <see cref="T:System.Security.Principal.NTAccount" /> 类型的类型（如 <see cref="T:System.Security.Principal.SecurityIdentifier" />）。</exception>
    </member>
    <member name="P:System.Security.AccessControl.MutexSecurity.AccessRuleType">
      <summary>获取 <see cref="T:System.Security.AccessControl.MutexSecurity" /> 类用于表示访问规则的类型。</summary>
      <returns>一个表示 <see cref="T:System.Security.AccessControl.MutexAccessRule" /> 类的 <see cref="T:System.Type" /> 对象。</returns>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.AddAccessRule(System.Security.AccessControl.MutexAccessRule)">
      <summary>搜索可以将新规则与之合并的匹配访问控制规则。 如果未找到符合条件的规则，则添加新规则。</summary>
      <param name="rule">要添加的访问控制规则。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Principal.IdentityNotMappedException">
        <paramref name="rule" /> 无法映射到已知标识。</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.AddAuditRule(System.Security.AccessControl.MutexAuditRule)">
      <summary>搜索可以将新规则与之合并的审核规则。 如果未找到符合条件的规则，则添加新规则。</summary>
      <param name="rule">要添加的审核规则。 由此规则指定的用户来确定搜索。</param>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
      <summary>新建审核规则，指定规则应用到的用户、要审核的访问权限以及触发审核规则的结果。</summary>
      <param name="identityReference">一个 <see cref="T:System.Security.Principal.IdentityReference" />，用于标识此规则应用到的用户或组。</param>
      <param name="accessMask">
        <see cref="T:System.Security.AccessControl.MutexRights" /> 值的按位组合，用于指定要审核的访问权限，该组合将被强制转换为整数。</param>
      <param name="isInherited">这对于命名的等待句柄没有意义，因为这些句柄没有层次结构。</param>
      <param name="inheritanceFlags">这对于命名的等待句柄没有意义，因为这些句柄没有层次结构。</param>
      <param name="propagationFlags">这对于命名的等待句柄没有意义，因为这些句柄没有层次结构。</param>
      <param name="flags">
        <see cref="T:System.Security.AccessControl.AuditFlags" /> 值的按位组合，它指定审核成功的访问、失败的访问还是对这两种情况都进行审核。</param>
      <returns>一个 <see cref="T:System.Security.AccessControl.MutexAuditRule" /> 对象，表示指定用户的指定审核规则。 该方法的返回类型是基类 <see cref="T:System.Security.AccessControl.AuditRule" />，但可以安全地将返回值强制转换为派生类。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="accessMask" />、<paramref name="inheritanceFlags" />、<paramref name="propagationFlags" /> 或 <paramref name="flags" /> 指定了一个无效值。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identityReference" /> 为 <see langword="null" />。  
或 
 <paramref name="accessMask" /> 为零。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identityReference" /> 既不属于类型 <see cref="T:System.Security.Principal.SecurityIdentifier" />，也不属于可以转换为 <see cref="T:System.Security.Principal.NTAccount" /> 类型的类型（如 <see cref="T:System.Security.Principal.SecurityIdentifier" />）。</exception>
    </member>
    <member name="P:System.Security.AccessControl.MutexSecurity.AuditRuleType">
      <summary>获取 <see cref="T:System.Security.AccessControl.MutexSecurity" /> 类用于表示审核规则的类型。</summary>
      <returns>一个表示 <see cref="T:System.Security.AccessControl.MutexAuditRule" /> 类的 <see cref="T:System.Type" /> 对象。</returns>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
      <summary>搜索如下的访问控制规则：与指定的访问规则具有相同的用户和 <see cref="T:System.Security.AccessControl.AccessControlType" />（允许或拒绝），并具有兼容的继承和传播标志；如果找到，则从中移除指定访问规则中包含的权限。</summary>
      <param name="rule">指定要搜索的用户和 <see cref="T:System.Security.AccessControl.MutexAccessRule" /> 的 <see cref="T:System.Security.AccessControl.AccessControlType" />，以及匹配规则（如果找到）必须兼容的一组继承和传播标志。 指定要从兼容规则移除的权限（如果找到）。</param>
      <returns>如果找到一个兼容规则，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll(System.Security.AccessControl.MutexAccessRule)">
      <summary>搜索与指定的规则具有相同用户和 <see cref="T:System.Security.AccessControl.AccessControlType" />（允许或拒绝）的所有访问控制规则，如果找到则将其移除。</summary>
      <param name="rule">一个 <see cref="T:System.Security.AccessControl.MutexAccessRule" />，指定要搜索的用户和 <see cref="T:System.Security.AccessControl.AccessControlType" />。 此规则指定的任何权限都被忽略。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.MutexAccessRule)">
      <summary>搜索与指定的规则完全匹配的访问控制规则，如果找到则将其移除。</summary>
      <param name="rule">要移除的 <see cref="T:System.Security.AccessControl.MutexAccessRule" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRule(System.Security.AccessControl.MutexAuditRule)">
      <summary>搜索以下的审核控制规则：与指定的规则具有相同的用户，并具有兼容的继承和传播标志；如果找到兼容规则，则从中移除指定的规则中包含的权限。</summary>
      <param name="rule">一个 <see cref="T:System.Security.AccessControl.MutexAuditRule" />，指定要搜索的用户以及匹配规则（如果找到）必须兼容的一组继承和传播标志。 指定要从兼容规则移除的权限（如果找到）。</param>
      <returns>如果找到一个兼容规则，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleAll(System.Security.AccessControl.MutexAuditRule)">
      <summary>搜索所有使用相同用户作为指定规则的审核规则，如果找到符合条件的规则，则移除它们。</summary>
      <param name="rule">指定要搜索的用户的 <see cref="T:System.Security.AccessControl.MutexAuditRule" />。 此规则指定的任何权限都被忽略。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.MutexAuditRule)">
      <summary>搜索与指定的规则完全匹配的审核规则；如果找到，则移除这些规则。</summary>
      <param name="rule">要移除的 <see cref="T:System.Security.AccessControl.MutexAuditRule" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.ResetAccessRule(System.Security.AccessControl.MutexAccessRule)">
      <summary>不论 <see cref="T:System.Security.AccessControl.AccessControlType" /> 如何，移除与指定的规则具有相同用户的所有访问控制规则，然后添加指定的规则。</summary>
      <param name="rule">要添加的 <see cref="T:System.Security.AccessControl.MutexAccessRule" />。 由此规则指定的用户确定在添加此规则之前要移除的规则。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.SetAccessRule(System.Security.AccessControl.MutexAccessRule)">
      <summary>移除与指定的规则具有相同用户和 <see cref="T:System.Security.AccessControl.AccessControlType" />（允许或拒绝）的所有控制规则，然后添加指定的规则。</summary>
      <param name="rule">要添加的 <see cref="T:System.Security.AccessControl.MutexAccessRule" />。 由此规则的用户和 <see cref="T:System.Security.AccessControl.AccessControlType" /> 确定在添加此规则之前要移除的规则。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.SetAuditRule(System.Security.AccessControl.MutexAuditRule)">
      <summary>不论 <see cref="T:System.Security.AccessControl.AuditFlags" /> 的值如何，移除与指定的规则具有相同用户的所有审核规则，然后添加指定的规则。</summary>
      <param name="rule">要添加的 <see cref="T:System.Security.AccessControl.MutexAuditRule" />。 由此规则指定的用户确定在添加此规则之前要移除的规则。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="T:System.Security.AccessControl.SemaphoreAccessRule">
      <summary>表示一组允许或拒绝用户或组进行访问的权限。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
      <summary>初始化 <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> 类的新实例，指定此规则应用到的用户或组、访问权限以及是否允许或拒绝指定的访问权限。</summary>
      <param name="identity">此规则应用到的用户或组。 必须为 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 类型，或可以转换为 <see cref="T:System.Security.Principal.NTAccount" /> 类型的类型，如 <see cref="T:System.Security.Principal.SecurityIdentifier" />。</param>
      <param name="eventRights">
        <see cref="T:System.Security.AccessControl.SemaphoreRights" /> 值的按位组合，它指定允许或拒绝的权限。</param>
      <param name="type">
        <see cref="T:System.Security.AccessControl.AccessControlType" /> 值之一，用于指定是允许还是拒绝相应权限。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> 指定了一个无效值。  
或 
 <paramref name="type" /> 指定了一个无效值。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> 为 <see langword="null" />。  

或 - 
<paramref name="eventRights" /> 为零。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> 既不属于类型 <see cref="T:System.Security.Principal.SecurityIdentifier" />，也不属于可以转换为 <see cref="T:System.Security.Principal.NTAccount" /> 类型的类型（如 <see cref="T:System.Security.Principal.SecurityIdentifier" />）。</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
      <summary>初始化 <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> 类的新实例，指定应用此规则的用户或组的名称、访问权限以及是否允许或拒绝指定的访问权限。</summary>
      <param name="identity">应用此规则的用户或组的名称。</param>
      <param name="eventRights">
        <see cref="T:System.Security.AccessControl.SemaphoreRights" /> 值的按位组合，它指定允许或拒绝的权限。</param>
      <param name="type">
        <see cref="T:System.Security.AccessControl.AccessControlType" /> 值之一，用于指定是允许还是拒绝相应权限。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> 指定了一个无效值。  

或 - 
<paramref name="type" /> 指定了一个无效值。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="eventRights" /> 为零。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> 为 <see langword="null" />。  
或 
 <paramref name="identity" /> 是一个长度为零的字符串。  

或 - 
<paramref name="identity" /> 的长度超过 512 个字符。</exception>
    </member>
    <member name="P:System.Security.AccessControl.SemaphoreAccessRule.SemaphoreRights">
      <summary>获取访问规则允许或拒绝的权限。</summary>
      <returns>
        <see cref="T:System.Security.AccessControl.SemaphoreRights" /> 值的按位组合，它指示访问规则允许或拒绝的权限。</returns>
    </member>
    <member name="T:System.Security.AccessControl.SemaphoreAuditRule">
      <summary>表示要为用户或组审核的一组访问权限。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AuditFlags)">
      <summary>初始化 <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> 类的新实例，指定要审核的用户或组，要审核的权限，以及是否审核成功和（或）失败。</summary>
      <param name="identity">此规则应用到的用户或组。 必须为 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 类型，或可以转换为 <see cref="T:System.Security.Principal.NTAccount" /> 类型的类型，如 <see cref="T:System.Security.Principal.SecurityIdentifier" />。</param>
      <param name="eventRights">
        <see cref="T:System.Security.AccessControl.SemaphoreRights" /> 值的按位组合，它指定要审核的访问类型。</param>
      <param name="flags">
        <see cref="T:System.Security.AccessControl.AuditFlags" /> 值的按位组合，它指定审核是成功、失败还是包括这两种情况。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> 指定了一个无效值。  

或 - 
<paramref name="flags" /> 指定了一个无效值。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> 为 <see langword="null" />。  
或 
 <paramref name="eventRights" /> 为零。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> 既不属于类型 <see cref="T:System.Security.Principal.SecurityIdentifier" />，也不属于可以转换为 <see cref="T:System.Security.Principal.NTAccount" /> 类型的类型（如 <see cref="T:System.Security.Principal.SecurityIdentifier" />）。</exception>
    </member>
    <member name="P:System.Security.AccessControl.SemaphoreAuditRule.SemaphoreRights">
      <summary>获取受此审核规则影响的访问权限。</summary>
      <returns>
        <see cref="T:System.Security.AccessControl.SemaphoreRights" /> 值的按位组合，它指示受此审核规则影响的权限。</returns>
    </member>
    <member name="T:System.Security.AccessControl.SemaphoreRights">
      <summary>指定可应用于命名的系统信号量对象的访问控制权限。</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.ChangePermissions">
      <summary>更改与某个命名的信号量关联的安全性和审核规则的权限。</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.Delete">
      <summary>删除命名的信号量的权限。</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.FullControl">
      <summary>对某个命名的信号量进行完全控制以及修改其访问规则和审核规则的权限。</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.Modify">
      <summary>释放命名的信号量的权限。</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.ReadPermissions">
      <summary>打开并复制命名的信号量的访问规则和审核规则的权限。</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.Synchronize">
      <summary>在命名的信号量上进行等待的权限。</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.TakeOwnership">
      <summary>更改命名的信号量的所有者的权限。</summary>
    </member>
    <member name="T:System.Security.AccessControl.SemaphoreSecurity">
      <summary>表示命名的信号量的 Windows 访问控制安全性。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.#ctor">
      <summary>使用默认值初始化 <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> 类的新实例。</summary>
      <exception cref="T:System.NotSupportedException">Windows 98 或 Windows Millennium Edition 不支持此类。</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)">
      <summary>使用来自具有指定名称的系统信号量的访问控制安全性规则的指定部分来初始化 <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> 类的新实例。</summary>
      <param name="name">要检索其访问控制安全性规则的系统信号量的名称。</param>
      <param name="includeSections">指定要检索的部分的 <see cref="T:System.Security.AccessControl.AccessControlSections" /> 标志的组合。</param>
      <exception cref="T:System.NotSupportedException">Windows 98 或 Windows Millennium Edition 不支持此类。</exception>
    </member>
    <member name="P:System.Security.AccessControl.SemaphoreSecurity.AccessRightType">
      <summary>获取 <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> 类用于表示访问规则的枚举。</summary>
      <returns>一个 <see cref="T:System.Type" /> 对象，表示 <see cref="T:System.Security.AccessControl.SemaphoreRights" /> 枚举。</returns>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
      <summary>使用指定的访问权限、访问控制和标志为指定用户创建新的访问控制规则。</summary>
      <param name="identityReference">一个 <see cref="T:System.Security.Principal.IdentityReference" />，用于标识此规则应用到的用户或组。</param>
      <param name="accessMask">
        <see cref="T:System.Security.AccessControl.SemaphoreRights" /> 值的按位组合，用于指定允许或拒绝的访问权限，该组合将被强制转换为整数。</param>
      <param name="isInherited">这对于命名的信号量没有意义，因为这些信号量没有层次结构。</param>
      <param name="inheritanceFlags">这对于命名的信号量没有意义，因为这些信号量没有层次结构。</param>
      <param name="propagationFlags">这对于命名的信号量没有意义，因为这些信号量没有层次结构。</param>
      <param name="type">
        <see cref="T:System.Security.AccessControl.AccessControlType" /> 值之一，用于指定是允许还是拒绝相应权限。</param>
      <returns>一个 <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> 对象，表示指定用户的指定权限。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="accessMask" />、<paramref name="inheritanceFlags" />、<paramref name="propagationFlags" /> 或 <paramref name="type" /> 指定了一个无效值。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identityReference" /> 为 <see langword="null" />。  
或 
 <paramref name="accessMask" /> 为零。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identityReference" /> 既不属于类型 <see cref="T:System.Security.Principal.SecurityIdentifier" />，也不属于可以转换为 <see cref="T:System.Security.Principal.NTAccount" /> 类型的类型（如 <see cref="T:System.Security.Principal.SecurityIdentifier" />）。</exception>
    </member>
    <member name="P:System.Security.AccessControl.SemaphoreSecurity.AccessRuleType">
      <summary>获取 <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> 类用于表示访问规则的类型。</summary>
      <returns>一个表示 <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> 类的 <see cref="T:System.Type" /> 对象。</returns>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.AddAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
      <summary>搜索可以将新规则与之合并的匹配规则。 如果未找到符合条件的规则，则添加新规则。</summary>
      <param name="rule">要添加的访问控制规则。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.AddAuditRule(System.Security.AccessControl.SemaphoreAuditRule)">
      <summary>搜索可以将新规则与之合并的审核规则。 如果未找到符合条件的规则，则添加新规则。</summary>
      <param name="rule">要添加的审核规则。 由此规则指定的用户来确定搜索。</param>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
      <summary>新建审核规则，指定规则应用到的用户、要审核的访问权限以及触发审核规则的结果。</summary>
      <param name="identityReference">一个 <see cref="T:System.Security.Principal.IdentityReference" />，用于标识此规则应用到的用户或组。</param>
      <param name="accessMask">
        <see cref="T:System.Security.AccessControl.SemaphoreRights" /> 值的按位组合，用于指定要审核的访问权限，该组合将被强制转换为整数。</param>
      <param name="isInherited">这对于命名的等待句柄没有意义，因为这些句柄没有层次结构。</param>
      <param name="inheritanceFlags">这对于命名的等待句柄没有意义，因为这些句柄没有层次结构。</param>
      <param name="propagationFlags">这对于命名的等待句柄没有意义，因为这些句柄没有层次结构。</param>
      <param name="flags">
        <see cref="T:System.Security.AccessControl.AuditFlags" /> 值的按位组合，它指定审核成功的访问、失败的访问还是对这两种情况都进行审核。</param>
      <returns>一个 <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> 对象，表示指定用户的指定审核规则。 该方法的返回类型是基类 <see cref="T:System.Security.AccessControl.AuditRule" />，但可以安全地将返回值强制转换为派生类。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="accessMask" />、<paramref name="inheritanceFlags" />、<paramref name="propagationFlags" /> 或 <paramref name="flags" /> 指定了一个无效值。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identityReference" /> 为 <see langword="null" />。  
或 
 <paramref name="accessMask" /> 为零。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identityReference" /> 既不属于类型 <see cref="T:System.Security.Principal.SecurityIdentifier" />，也不属于可以转换为 <see cref="T:System.Security.Principal.NTAccount" /> 类型的类型（如 <see cref="T:System.Security.Principal.SecurityIdentifier" />）。</exception>
    </member>
    <member name="P:System.Security.AccessControl.SemaphoreSecurity.AuditRuleType">
      <summary>获取 <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> 类用于表示审核规则的类型。</summary>
      <returns>一个表示 <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> 类的 <see cref="T:System.Type" /> 对象。</returns>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
      <summary>搜索如下的访问控制规则：与指定的访问规则具有相同的用户和 <see cref="T:System.Security.AccessControl.AccessControlType" />（允许或拒绝），并具有兼容的继承和传播标志；如果找到，则从中移除指定访问规则中包含的权限。</summary>
      <param name="rule">指定要搜索的用户和 <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> 的 <see cref="T:System.Security.AccessControl.AccessControlType" />，以及匹配规则（如果找到）必须兼容的一组继承和传播标志。 指定要从兼容规则移除的权限（如果找到）。</param>
      <returns>如果找到一个兼容规则，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleAll(System.Security.AccessControl.SemaphoreAccessRule)">
      <summary>搜索与指定的规则具有相同用户和 <see cref="T:System.Security.AccessControl.AccessControlType" />（允许或拒绝）的所有访问控制规则，如果找到则将其移除。</summary>
      <param name="rule">一个 <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" />，指定要搜索的用户和 <see cref="T:System.Security.AccessControl.AccessControlType" />。 此规则指定的任何权限都被忽略。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.SemaphoreAccessRule)">
      <summary>搜索与指定的规则完全匹配的访问控制规则，如果找到则将其移除。</summary>
      <param name="rule">要移除的 <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRule(System.Security.AccessControl.SemaphoreAuditRule)">
      <summary>搜索以下的审核控制规则：与指定的规则具有相同的用户，并具有兼容的继承和传播标志；如果找到兼容规则，则从中移除指定的规则中包含的权限。</summary>
      <param name="rule">一个 <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" />，指定要搜索的用户以及匹配规则（如果找到）必须兼容的一组继承和传播标志。 指定要从兼容规则移除的权限（如果找到）。</param>
      <returns>如果找到一个兼容规则，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleAll(System.Security.AccessControl.SemaphoreAuditRule)">
      <summary>搜索所有使用相同用户作为指定规则的审核规则，如果找到符合条件的规则，则移除它们。</summary>
      <param name="rule">指定要搜索的用户的 <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" />。 此规则指定的任何权限都被忽略。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.SemaphoreAuditRule)">
      <summary>搜索与指定的规则完全匹配的审核规则；如果找到，则移除这些规则。</summary>
      <param name="rule">要移除的 <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.ResetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
      <summary>不论 <see cref="T:System.Security.AccessControl.AccessControlType" /> 如何，移除与指定的规则具有相同用户的所有访问控制规则，然后添加指定的规则。</summary>
      <param name="rule">要添加的 <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" />。 由此规则指定的用户确定在添加此规则之前要移除的规则。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.SetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
      <summary>移除与指定的规则具有相同用户和 <see cref="T:System.Security.AccessControl.AccessControlType" />（允许或拒绝）的所有控制规则，然后添加指定的规则。</summary>
      <param name="rule">要添加的 <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" />。 由此规则的用户和 <see cref="T:System.Security.AccessControl.AccessControlType" /> 确定在添加此规则之前要移除的规则。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.SetAuditRule(System.Security.AccessControl.SemaphoreAuditRule)">
      <summary>不论 <see cref="T:System.Security.AccessControl.AuditFlags" /> 的值如何，移除与指定的规则具有相同用户的所有审核规则，然后添加指定的规则。</summary>
      <param name="rule">要添加的 <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" />。 由此规则指定的用户确定在添加此规则之前要移除的规则。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="T:System.Threading.ThreadingAclExtensions" />
    <member name="M:System.Threading.ThreadingAclExtensions.GetAccessControl(System.Threading.EventWaitHandle)">
      <param name="handle" />
    </member>
    <member name="M:System.Threading.ThreadingAclExtensions.GetAccessControl(System.Threading.Mutex)">
      <param name="mutex" />
    </member>
    <member name="M:System.Threading.ThreadingAclExtensions.GetAccessControl(System.Threading.Semaphore)">
      <param name="semaphore" />
    </member>
    <member name="M:System.Threading.ThreadingAclExtensions.SetAccessControl(System.Threading.EventWaitHandle,System.Security.AccessControl.EventWaitHandleSecurity)">
      <param name="handle" />
      <param name="eventSecurity" />
    </member>
    <member name="M:System.Threading.ThreadingAclExtensions.SetAccessControl(System.Threading.Mutex,System.Security.AccessControl.MutexSecurity)">
      <param name="mutex" />
      <param name="mutexSecurity" />
    </member>
    <member name="M:System.Threading.ThreadingAclExtensions.SetAccessControl(System.Threading.Semaphore,System.Security.AccessControl.SemaphoreSecurity)">
      <param name="semaphore" />
      <param name="semaphoreSecurity" />
    </member>
  </members>
</doc>