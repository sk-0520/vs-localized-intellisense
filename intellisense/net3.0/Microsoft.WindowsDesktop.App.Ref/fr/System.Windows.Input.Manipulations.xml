<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Windows.Input.Manipulations</name>
  </assembly>
  <members>
    <member name="T:System.Windows.Input.Manipulations.InertiaExpansionBehavior2D">
      <summary>Décrit le comportement d'expansion souhaité d'un processeur d'inertie.</summary>
    </member>
    <member name="M:System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Input.Manipulations.InertiaExpansionBehavior2D" />.</summary>
    </member>
    <member name="P:System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.DesiredDeceleration">
      <summary>Obtient ou définit la décélération d'expansion souhaitée, en unités de coordonnée par milliseconde au carré.</summary>
      <returns>Décélération d'expansion souhaitée, en unités de coordonnée par milliseconde au carré.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.DesiredExpansionX">
      <summary>Obtient ou définit l'expansion souhaitée le long de l'axe X, en unités de coordonnée.</summary>
      <returns>Expansion souhaitée le long de l'axe X, en unités de coordonnée.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.DesiredExpansionY">
      <summary>Obtient ou définit l'expansion souhaitée le long de l'axe Y, en unités de coordonnée.</summary>
      <returns>Expansion souhaitée le long de l'axe Y, en unités de coordonnée.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.InitialRadius">
      <summary>Obtient ou définit le rayon moyen initial, en unités de coordonnée.</summary>
      <returns>Rayon moyen initial, en unités de coordonnée.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.InitialVelocityX">
      <summary>Obtient ou définit la rapidité d'expansion initiale le long de l'axe X, en unités de coordonnée par milliseconde.</summary>
      <returns>Rapidité d'expansion initiale le long de l'axe X, en unités de coordonnée par milliseconde.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.InitialVelocityY">
      <summary>Obtient ou définit la rapidité d'expansion initiale le long de l'axe Y, en unités de coordonnée par milliseconde.</summary>
      <returns>Rapidité d'expansion initiale le long de l'axe Y, en unités de coordonnée par milliseconde.</returns>
    </member>
    <member name="T:System.Windows.Input.Manipulations.InertiaParameters2D">
      <summary>Classe de base de laquelle toutes les classes de paramètres d'inertie sont dérivées.</summary>
    </member>
    <member name="T:System.Windows.Input.Manipulations.InertiaProcessor2D">
      <summary>Implémente l'extrapolation de la position, de l'orientation et du rayon moyen d'une manipulation.</summary>
    </member>
    <member name="M:System.Windows.Input.Manipulations.InertiaProcessor2D.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Input.Manipulations.InertiaProcessor2D" />.</summary>
    </member>
    <member name="M:System.Windows.Input.Manipulations.InertiaProcessor2D.Complete(System.Int64)">
      <summary>Achève l’extrapolation finale à l’aide du timestamp spécifié et déclenche l’événement <see cref="E:System.Windows.Input.Manipulations.InertiaProcessor2D.Completed" />.</summary>
      <param name="timestamp">Le timestamp pour achever l’extrapolation, en cycles de 100 nanosecondes.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Le paramètre de timestamp est antérieur au timestamp initial ou précédent.</exception>
    </member>
    <member name="E:System.Windows.Input.Manipulations.InertiaProcessor2D.Completed">
      <summary>Se produit lorsque l'extrapolation  est terminée.</summary>
    </member>
    <member name="E:System.Windows.Input.Manipulations.InertiaProcessor2D.Delta">
      <summary>Se produit lorsque l'origine de l'extrapolation a changé ou lorsqu'une translation, une mise à l'échelle ou une rotation s'est produite.</summary>
    </member>
    <member name="P:System.Windows.Input.Manipulations.InertiaProcessor2D.ExpansionBehavior">
      <summary>Obtient ou définit le comportement d'expansion du processeur d'inertie.</summary>
      <returns>Comportement d'expansion du processeur d'inertie.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX">
      <summary>Obtient ou définit la coordonnée X de l'origine initiale, en unités de coordonnée.</summary>
      <returns>Coordonnée X de l'origine initiale, en unités de coordonnée.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY">
      <summary>Obtient ou définit la coordonnée Y de l'origine initiale, en unités de coordonnée.</summary>
      <returns>Coordonnée Y de l'origine initiale, en unités de coordonnée.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.InertiaProcessor2D.IsRunning">
      <summary>Obtient une valeur indiquant si l'inertie est actuellement en cours.</summary>
      <returns>Valeur booléenne indiquant si l'inertie est actuellement en cours.</returns>
    </member>
    <member name="M:System.Windows.Input.Manipulations.InertiaProcessor2D.Process(System.Int64)">
      <summary>Extrapole la position, l’orientation et le rayon moyen de la manipulation au moment spécifiée.</summary>
      <param name="timestamp">Le timestamp pour effectuer l’extrapolation, en cycles de 100 nanosecondes.</param>
      <returns>La position, l’orientation et le rayon moyen de la manipulation au moment spécifiée. <see langword="true" /> si l’extrapolation est en cours ; sinon, <see langword="false" /> si l’extrapolation est terminée.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Le paramètre de timestamp est antérieur au timestamp initial ou précédent.</exception>
    </member>
    <member name="P:System.Windows.Input.Manipulations.InertiaProcessor2D.RotationBehavior">
      <summary>Obtient ou définit le comportement de rotation du processeur d'inertie.</summary>
      <returns>Comportement de rotation du processeur d'inertie.</returns>
    </member>
    <member name="M:System.Windows.Input.Manipulations.InertiaProcessor2D.SetParameters(System.Windows.Input.Manipulations.InertiaParameters2D)">
      <summary>Définit des paramètres sur le processeur d’inertie.</summary>
      <param name="parameters">Paramètres à définir.</param>
    </member>
    <member name="P:System.Windows.Input.Manipulations.InertiaProcessor2D.TranslationBehavior">
      <summary>Obtient ou définit le comportement de translation du processeur d'inertie.</summary>
      <returns>Comportement de translation du processeur d'inertie.</returns>
    </member>
    <member name="T:System.Windows.Input.Manipulations.InertiaRotationBehavior2D">
      <summary>Décrit le comportement de rotation souhaité d'un processeur d'inertie.</summary>
    </member>
    <member name="M:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Input.Manipulations.InertiaRotationBehavior2D" />.</summary>
    </member>
    <member name="P:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredDeceleration">
      <summary>Obtient ou définit la décélération angulaire souhaitée, en radians par milliseconde au carré.</summary>
      <returns>Décélération angulaire souhaitée, en radians par milliseconde au carré.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredRotation">
      <summary>Obtient ou définit la rotation souhaitée, en radians.</summary>
      <returns>Rotation souhaitée, en radians.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.InitialVelocity">
      <summary>Obtient ou définit la rapidité rotationnelle initiale, en radians par milliseconde.</summary>
      <returns>Rapidité rotationnelle initiale, en radians par milliseconde.</returns>
    </member>
    <member name="T:System.Windows.Input.Manipulations.InertiaTranslationBehavior2D">
      <summary>Décrit le comportement de translation souhaité d'un processeur d'inertie.</summary>
    </member>
    <member name="M:System.Windows.Input.Manipulations.InertiaTranslationBehavior2D.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Input.Manipulations.InertiaTranslationBehavior2D" />.</summary>
    </member>
    <member name="P:System.Windows.Input.Manipulations.InertiaTranslationBehavior2D.DesiredDeceleration">
      <summary>Obtient ou définit la décélération souhaitée, en unités de coordonnée par milliseconde au carré.</summary>
      <returns>Décélération souhaitée, en unités de coordonnée par milliseconde au carré.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.InertiaTranslationBehavior2D.DesiredDisplacement">
      <summary>Obtient ou définit la distance absolue que l'objet doit parcourir le long du vecteur de rapidité, en unités de coordonnée.</summary>
      <returns>Distance absolue que l'objet doit parcourir le long du vecteur de rapidité, en unités de coordonnée.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.InertiaTranslationBehavior2D.InitialVelocityX">
      <summary>Obtient ou définit la rapidité initiale le long de l'axe X, en unités de coordonnée par milliseconde.</summary>
      <returns>Rapidité initiale le long de l'axe X, en unités de coordonnée par milliseconde.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.InertiaTranslationBehavior2D.InitialVelocityY">
      <summary>Obtient ou définit la rapidité initiale le long de l'axe Y, en unités de coordonnée par milliseconde.</summary>
      <returns>Rapidité initiale le long de l'axe X, en unités de coordonnée par milliseconde.</returns>
    </member>
    <member name="T:System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs">
      <summary>Représente des données envoyées avec un événement ManipulationProcessor2D.Completed ou InertiaProcessor2D.Completed.</summary>
    </member>
    <member name="P:System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs.OriginX">
      <summary>Obtient la nouvelle coordonnée X de la position composite de la manipulation.</summary>
      <returns>Nouvelle coordonnée X de la position composite de la manipulation.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs.OriginY">
      <summary>Obtient la nouvelle coordonnée Y de la position composite de la manipulation.</summary>
      <returns>Nouvelle coordonnée Y de la position composite de la manipulation.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs.Total">
      <summary>Obtient la quantité totale de modifications apportées depuis le début de la manipulation.</summary>
      <returns>Quantité totale de modifications apportées depuis le début de la manipulation.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs.Velocities">
      <summary>Obtient les rapidités actuelles de la manipulation.</summary>
      <returns>Rapidités actuelles de la manipulation.</returns>
    </member>
    <member name="T:System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs">
      <summary>Représente des données envoyées avec un événement <see cref="E:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta" /> ou <see cref="E:System.Windows.Input.Manipulations.InertiaProcessor2D.Delta" />.</summary>
    </member>
    <member name="P:System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs.Cumulative">
      <summary>Obtient la quantité totale de modifications apportées depuis le début de la manipulation.</summary>
      <returns>Quantité totale de modifications apportées depuis le début de la manipulation.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs.Delta">
      <summary>Obtient la quantité de modifications depuis le dernier événement.</summary>
      <returns>Quantité de modifications depuis le dernier événement.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs.OriginX">
      <summary>Obtient la nouvelle coordonnée X de la position composite de la manipulation.</summary>
      <returns>Nouvelle coordonnée X de la position composite de la manipulation.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs.OriginY">
      <summary>Obtient la nouvelle coordonnée Y de la position composite de la manipulation.</summary>
      <returns>Nouvelle coordonnée Y de la position composite de la manipulation.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs.Velocities">
      <summary>Obtient les rapidités actuelles de la manipulation.</summary>
      <returns>Rapidités actuelles de la manipulation.</returns>
    </member>
    <member name="T:System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs">
      <summary>Représente des données envoyées avec un événement <see cref="E:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started" />.</summary>
    </member>
    <member name="P:System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs.OriginX">
      <summary>Obtient la coordonnée X de l'origine.</summary>
      <returns>Coordonnée X de l'origine.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs.OriginY">
      <summary>Obtient la coordonnée Y de l'origine.</summary>
      <returns>Coordonnée Y de l'origine.</returns>
    </member>
    <member name="T:System.Windows.Input.Manipulations.ManipulationDelta2D">
      <summary>Représente le résultat d'une manipulation 2D.</summary>
    </member>
    <member name="P:System.Windows.Input.Manipulations.ManipulationDelta2D.ExpansionX">
      <summary>Obtient l'expansion le long de l'axe X, en unités de coordonnée.</summary>
      <returns>Expansion le long de l'axe X, en unités de coordonnée.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.ManipulationDelta2D.ExpansionY">
      <summary>Obtient l'expansion le long de l'axe Y, en unités de coordonnée.</summary>
      <returns>Expansion le long de l'axe Y, en unités de coordonnée.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.ManipulationDelta2D.Rotation">
      <summary>Obtient la rotation, en radians.</summary>
      <returns>Quantité de rotation, en radians.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.ManipulationDelta2D.ScaleX">
      <summary>Obtient le facteur d'échelle le long de l'axe X.</summary>
      <returns>Facteur d’échelle sur l’axe x.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.ManipulationDelta2D.ScaleY">
      <summary>Obtient le facteur d'échelle le long de l'axe Y.</summary>
      <returns>Facteur d’échelle sur l’axe y.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.ManipulationDelta2D.TranslationX">
      <summary>Obtient la translation le long de l'axe X, en unités de coordonnée.</summary>
      <returns>Translation le long de l'axe X, en unités de coordonnée.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.ManipulationDelta2D.TranslationY">
      <summary>Obtient la translation le long de l'axe Y, en unités de coordonnée.</summary>
      <returns>Translation le long de l'axe Y, en unités de coordonnée.</returns>
    </member>
    <member name="T:System.Windows.Input.Manipulations.ManipulationParameters2D">
      <summary>Classe de base de laquelle toutes les classes de paramètres de manipulation sont dérivées.</summary>
    </member>
    <member name="T:System.Windows.Input.Manipulations.ManipulationPivot2D">
      <summary>Représente des informations de pivot utilisées par un processeur de manipulation pour les rotations de manipulateur unique.</summary>
    </member>
    <member name="M:System.Windows.Input.Manipulations.ManipulationPivot2D.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Input.Manipulations.ManipulationPivot2D" />.</summary>
    </member>
    <member name="P:System.Windows.Input.Manipulations.ManipulationPivot2D.Radius">
      <summary>Obtient ou définit la distance du point de pivot au bord de la région manipulable.</summary>
      <returns>Distance du point de pivot au bord de la région manipulable.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.ManipulationPivot2D.X">
      <summary>Obtient ou définit la position X du pivot.</summary>
      <returns>Position X du pivot.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.ManipulationPivot2D.Y">
      <summary>Obtient ou définit la position Y du pivot.</summary>
      <returns>Position Y du pivot.</returns>
    </member>
    <member name="T:System.Windows.Input.Manipulations.ManipulationProcessor2D">
      <summary>Implémente un compositeur à entrées multiples et à sortie unique pour les transformations à deux dimensions (2 D) dans un espace de coordonnées partagé.</summary>
    </member>
    <member name="M:System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor(System.Windows.Input.Manipulations.Manipulations2D)">
      <summary>Crée un objet <see cref="T:System.Windows.Input.Manipulations.ManipulationProcessor2D" />.</summary>
      <param name="supportedManipulations">Jeu initial de manipulations prises en charge.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Le paramètre <paramref name="supportedManipulations" /> n'est pas une combinaison valide des valeurs d'énumération <see cref="T:System.Windows.Input.Manipulations.Manipulations2D" />.</exception>
    </member>
    <member name="M:System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor(System.Windows.Input.Manipulations.Manipulations2D,System.Windows.Input.Manipulations.ManipulationPivot2D)">
      <summary>Crée un objet <see cref="T:System.Windows.Input.Manipulations.ManipulationProcessor2D" />.</summary>
      <param name="supportedManipulations">Jeu initial de manipulations prises en charge.</param>
      <param name="pivot">Informations de pivot pour les rotations de manipulateur unique.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Le paramètre <paramref name="supportedManipulations" /> n'est pas une combinaison valide des valeurs d'énumération <see cref="T:System.Windows.Input.Manipulations.Manipulations2D" />.</exception>
    </member>
    <member name="E:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed">
      <summary>Se produit lorsqu'une manipulation est terminée.</summary>
    </member>
    <member name="M:System.Windows.Input.Manipulations.ManipulationProcessor2D.CompleteManipulation(System.Int64)">
      <summary>Force l'achèvement de la manipulation actuelle et déclenche l'événement <see cref="E:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed" />.</summary>
      <param name="timestamp">Horodatage pour achever la manipulation, en battements de 100 nanosecondes.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">L'horodatage est antérieur à l'horodatage précédent pour la manipulation actuelle.</exception>
    </member>
    <member name="E:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta">
      <summary>Se produit lorsque l'origine de la manipulation a changé ou lorsqu'une translation, une mise à l'échelle ou une rotation s'est produite.</summary>
    </member>
    <member name="P:System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius">
      <summary>Obtient ou définit le rayon minimal, en unités de coordonnée, nécessaire pour qu'un manipulateur participe à la mise à l'échelle et à la rotation.</summary>
      <returns>Rayon minimal, en unités de coordonnée, nécessaire pour qu'un manipulateur participe à la mise à l'échelle et à la rotation.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot">
      <summary>Obtient ou définit les informations de pivot pour le processeur de manipulation.</summary>
      <returns>Informations de pivot pour le processeur de manipulation.</returns>
    </member>
    <member name="M:System.Windows.Input.Manipulations.ManipulationProcessor2D.ProcessManipulators(System.Int64,System.Collections.Generic.IEnumerable{System.Windows.Input.Manipulations.Manipulator2D})">
      <summary>Traite les manipulateurs spécifiés en tant qu'action de lot unique.</summary>
      <param name="timestamp">Horodatage pour le lot, en battements de 100 nanosecondes.</param>
      <param name="manipulators">Jeu de manipulateurs actuellement dans la portée.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">L'horodatage est antérieur à l'horodatage précédent pour la manipulation actuelle.</exception>
    </member>
    <member name="M:System.Windows.Input.Manipulations.ManipulationProcessor2D.SetParameters(System.Windows.Input.Manipulations.ManipulationParameters2D)">
      <summary>Définit des paramètres sur le processeur de manipulation.</summary>
      <param name="parameters">Paramètres à définir.</param>
    </member>
    <member name="E:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started">
      <summary>Se produit lorsqu'une nouvelle manipulation a débuté.</summary>
    </member>
    <member name="P:System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations">
      <summary>Obtient ou définit le jeu actuel de manipulations prises en charge.</summary>
      <returns>Jeu actuel de manipulations prises en charge.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">La propriété essaie de définir une valeur qui n’est pas une combinaison valide des valeurs d’énumération de <see cref="T:System.Windows.Input.Manipulations.Manipulations2D" />.</exception>
    </member>
    <member name="T:System.Windows.Input.Manipulations.Manipulations2D">
      <summary>Représente les manipulations à deux dimensions (2 D) affines possibles.</summary>
    </member>
    <member name="F:System.Windows.Input.Manipulations.Manipulations2D.All">
      <summary>Toutes les manipulations disponibles.</summary>
    </member>
    <member name="F:System.Windows.Input.Manipulations.Manipulations2D.None">
      <summary>Aucune manipulation.</summary>
    </member>
    <member name="F:System.Windows.Input.Manipulations.Manipulations2D.Rotate">
      <summary>Rotation.</summary>
    </member>
    <member name="F:System.Windows.Input.Manipulations.Manipulations2D.Scale">
      <summary>Échelle dans les deux sens.</summary>
    </member>
    <member name="F:System.Windows.Input.Manipulations.Manipulations2D.Translate">
      <summary>Translation sur les axes X et/ou Y.</summary>
    </member>
    <member name="F:System.Windows.Input.Manipulations.Manipulations2D.TranslateX">
      <summary>Translation sur l'axe X.</summary>
    </member>
    <member name="F:System.Windows.Input.Manipulations.Manipulations2D.TranslateY">
      <summary>Translation sur l'axe Y.</summary>
    </member>
    <member name="T:System.Windows.Input.Manipulations.ManipulationVelocities2D">
      <summary>Représente un jeu de rapidités calculé par les processeurs d'inertie et de manipulation.</summary>
    </member>
    <member name="P:System.Windows.Input.Manipulations.ManipulationVelocities2D.AngularVelocity">
      <summary>Obtient la rapidité angulaire, en radians par milliseconde.</summary>
      <returns>Rapidité angulaire, en radians par milliseconde.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.ManipulationVelocities2D.ExpansionVelocityX">
      <summary>Obtient la rapidité d'expansion le long de l'axe X, en unités de coordonnée par milliseconde.</summary>
      <returns>Rapidité d'expansion le long de l'axe X, en unités de coordonnée par milliseconde.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.ManipulationVelocities2D.ExpansionVelocityY">
      <summary>Obtient la rapidité d'expansion le long de l'axe Y, en unités de coordonnée par milliseconde.</summary>
      <returns>Rapidité d'expansion le long de l'axe Y, en unités de coordonnée par milliseconde.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.ManipulationVelocities2D.LinearVelocityX">
      <summary>Obtient la rapidité le long de l'axe X, en unités de coordonnée par milliseconde.</summary>
      <returns>Rapidité le long de l'axe X, en unités de coordonnée par milliseconde.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.ManipulationVelocities2D.LinearVelocityY">
      <summary>Obtient la rapidité le long de l'axe Y, en unités de coordonnée par milliseconde.</summary>
      <returns>Rapidité le long de l'axe Y, en unités de coordonnée par milliseconde.</returns>
    </member>
    <member name="F:System.Windows.Input.Manipulations.ManipulationVelocities2D.Zero">
      <summary>Obtient un <see cref="T:System.Windows.Input.Manipulations.ManipulationVelocities2D" /> avec toutes les rapidités configurées à la valeur zéro.</summary>
    </member>
    <member name="T:System.Windows.Input.Manipulations.Manipulator2D">
      <summary>Représente un manipulateur 2D à un instant donné.</summary>
    </member>
    <member name="M:System.Windows.Input.Manipulations.Manipulator2D.#ctor(System.Int32,System.Single,System.Single)">
      <summary>Crée un objet <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" /> avec les propriétés spécifiées.</summary>
      <param name="id">ID unique pour ce manipulateur.</param>
      <param name="x">Coordonnée X du manipulateur.</param>
      <param name="y">Coordonnée Y du manipulateur.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">La coordonnée <paramref name="x" /> ou <paramref name="y" /> est <see langword="float.NaN" />, <see langword="float.PositiveInfinity" /> ou <see langword="float.NegativeInfinity" />. Ces valeurs sont toutes non valides.</exception>
    </member>
    <member name="M:System.Windows.Input.Manipulations.Manipulator2D.Equals(System.Object)">
      <summary>Détermine si cet objet <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" /> a la même valeur que l’objet <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" /> spécifié.</summary>
      <param name="obj">L’objet <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" /> à comparer à cet objet.</param>
      <returns>
        <see langword="true" />
        <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" /> les deux objets sont du même type et représentent la même valeur ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Input.Manipulations.Manipulator2D.GetHashCode">
      <summary>Retourne le code de hachage de cette instance.</summary>
      <returns>Code de hachage de cette instance.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.Manipulator2D.Id">
      <summary>Obtient ou définit l'ID unique pour cet objet <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" />.</summary>
      <returns>ID unique pour cet objet <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" />.</returns>
    </member>
    <member name="M:System.Windows.Input.Manipulations.Manipulator2D.op_Equality(System.Windows.Input.Manipulations.Manipulator2D,System.Windows.Input.Manipulations.Manipulator2D)">
      <summary>Détermine si deux objets <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" /> spécifiés ont la même valeur.</summary>
      <param name="manipulator1">Premier objet <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" /> à comparer.</param>
      <param name="manipulator2">Deuxième objet <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" /> à comparer.</param>
      <returns>
        <see langword="true" /> si les deux objets <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" /> ont la même valeur ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Input.Manipulations.Manipulator2D.op_Inequality(System.Windows.Input.Manipulations.Manipulator2D,System.Windows.Input.Manipulations.Manipulator2D)">
      <summary>Détermine si deux objets <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" /> spécifiés ont des valeurs différentes.</summary>
      <param name="manipulator1">Premier objet <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" /> à comparer.</param>
      <param name="manipulator2">Deuxième objet <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" /> à comparer.</param>
      <returns>
        <see langword="true" /> si les deux objets <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" /> ont des valeurs différentes ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.Manipulator2D.X">
      <summary>Obtient ou définit la coordonnée X de cet objet <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" />.</summary>
      <returns>Coordonnée X de cet objet <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" />.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.Manipulator2D.Y">
      <summary>Obtient ou définit la coordonnée Y de cet objet <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" />.</summary>
      <returns>Coordonnée Y de cet objet <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" />.</returns>
    </member>
  </members>
</doc>