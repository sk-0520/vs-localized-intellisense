<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>WindowsBase</name>
  </assembly>
  <members>
    <member name="T:System.Collections.Specialized.CollectionChangedEventManager">
      <summary>Fournit une implémentation <see cref="T:System.Windows.WeakEventManager" /> afin que vous puissiez utiliser le modèle « écouteur d'événements faible » pour joindre des écouteurs à l'événement <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</summary>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.AddHandler(System.Collections.Specialized.INotifyCollectionChanged,System.EventHandler{System.Collections.Specialized.NotifyCollectionChangedEventArgs})">
      <summary>Ajoute le gestionnaire d'événements spécifié, qui est appelé lorsque la source spécifiée déclenche l'événement <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> .</summary>
      <param name="source">Objet source qui déclenche l'événement <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</param>
      <param name="handler">Délégué qui gère l'événement <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.AddListener(System.Collections.Specialized.INotifyCollectionChanged,System.Windows.IWeakEventListener)">
      <summary>Ajoute l'écouteur spécifié à l'événement <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> de la source spécifiée.</summary>
      <param name="source">Objet avec l'événement.</param>
      <param name="listener">Objet à ajouter comme écouteur.</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.NewListenerList">
      <summary>Retourne un nouvel objet destiné à contenir des écouteurs sur l'événement <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</summary>
      <returns>Nouvel objet destiné à contenir des écouteurs sur l'événement <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</returns>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.RemoveHandler(System.Collections.Specialized.INotifyCollectionChanged,System.EventHandler{System.Collections.Specialized.NotifyCollectionChangedEventArgs})">
      <summary>Supprime le gestionnaire d'événements spécifié de la source spécifiée.</summary>
      <param name="source">Objet source qui déclenche l'événement <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</param>
      <param name="handler">Délégué qui gère l'événement <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.RemoveListener(System.Collections.Specialized.INotifyCollectionChanged,System.Windows.IWeakEventListener)">
      <summary>Supprime l'écouteur spécifié de l'événement <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> de la source spécifiée.</summary>
      <param name="source">Objet avec l'événement.</param>
      <param name="listener">Écouteur à supprimer.</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.StartListening(System.Object)">
      <summary>Commence à écouter l'événement <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> sur la source spécifiée.</summary>
      <param name="source">Objet avec l'événement.</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.StopListening(System.Object)">
      <summary>Arrête d'écouter l'événement <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> sur la source spécifiée.</summary>
      <param name="source">Objet avec l'événement.</param>
    </member>
    <member name="T:System.ComponentModel.CurrentChangedEventManager">
      <summary>Fournit une implémentation <see cref="T:System.Windows.WeakEventManager" /> afin que vous puissiez utiliser le modèle « écouteur d'événements faible » pour joindre des écouteurs à l'événement <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />.</summary>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.AddHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.EventArgs})">
      <summary>Ajoute le gestionnaire d'événements spécifié, qui est appelé lorsque la source spécifiée déclenche l'événement <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> .</summary>
      <param name="source">Objet source qui déclenche l'événement <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />.</param>
      <param name="handler">Objet source qui déclenche l'événement <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handler" /> construit par défaut est <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.AddListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
      <summary>Ajoute l'écouteur spécifié à l'événement <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> de la source spécifiée.</summary>
      <param name="source">Objet avec l'événement.</param>
      <param name="listener">Objet à ajouter comme écouteur.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.NewListenerList">
      <summary>Retourne un nouvel objet destiné à contenir des écouteurs sur l'événement <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />.</summary>
      <returns>Nouvel objet destiné à contenir des écouteurs sur l'événement <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />.</returns>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.RemoveHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.EventArgs})">
      <summary>Supprime le gestionnaire d'événements spécifié de la source spécifiée.</summary>
      <param name="source">Objet source qui déclenche l'événement <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />.</param>
      <param name="handler">Délégué qui gère l'événement <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handler" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.RemoveListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
      <summary>Supprime l'écouteur spécifié de l'événement <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> de la source spécifiée.</summary>
      <param name="source">Objet avec l'événement.</param>
      <param name="listener">Écouteur à supprimer.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.StartListening(System.Object)">
      <summary>Commence à écouter l'événement <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> sur la source spécifiée.</summary>
      <param name="source">Objet avec l'événement.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.StopListening(System.Object)">
      <summary>Arrête d'écouter l'événement <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> sur la source spécifiée.</summary>
      <param name="source">Objet avec l'événement.</param>
    </member>
    <member name="T:System.ComponentModel.CurrentChangingEventArgs">
      <summary>Fournit des informations sur l’événement <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</summary>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventArgs.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.CurrentChangingEventArgs" />.</summary>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventArgs.#ctor(System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.CurrentChangingEventArgs" /> avec la valeur <paramref name="isCancelable" /> spécifiée.</summary>
      <param name="isCancelable">Valeur qui indique si l’événement peut être annulé.</param>
    </member>
    <member name="P:System.ComponentModel.CurrentChangingEventArgs.Cancel">
      <summary>Obtient ou définit une valeur qui indique si l’événement doit être annulé.</summary>
      <returns>
        <see langword="true" /> si l’événement doit être annulé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Si la valeur de <see cref="P:System.ComponentModel.CurrentChangingEventArgs.IsCancelable" /> est <see langword="false" />.</exception>
    </member>
    <member name="P:System.ComponentModel.CurrentChangingEventArgs.IsCancelable">
      <summary>Obtient une valeur qui indique si l’élément peut être annulé.</summary>
      <returns>
        <see langword="true" /> si l'événement peut être annulé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="T:System.ComponentModel.CurrentChangingEventHandler">
      <summary>Représente la méthode qui gère l’événement <see cref="E:System.Windows.Data.CollectionView.CurrentChanging" />.</summary>
      <param name="sender">Objet ayant déclenché l'événement.</param>
      <param name="e">Informations relatives à l'événement.</param>
    </member>
    <member name="T:System.ComponentModel.CurrentChangingEventManager">
      <summary>Fournit une implémentation <see cref="T:System.Windows.WeakEventManager" /> afin que vous puissiez utiliser le modèle « écouteur d'événements faible » pour joindre des écouteurs à l'événement <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</summary>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.AddHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.ComponentModel.CurrentChangingEventArgs})">
      <summary>Ajoute le gestionnaire d'événements spécifié, qui est appelé lorsque la source spécifiée déclenche l'événement <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> .</summary>
      <param name="source">Objet source qui déclenche l'événement <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</param>
      <param name="handler">Délégué qui gère l'événement <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handler" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.AddListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
      <summary>Ajoute l'écouteur spécifié à l'événement <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> de la source spécifiée.</summary>
      <param name="source">Objet avec l'événement.</param>
      <param name="listener">Objet à ajouter comme écouteur.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.NewListenerList">
      <summary>Retourne un nouvel objet destiné à contenir des écouteurs sur l'événement <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</summary>
      <returns>Nouvel objet destiné à contenir des écouteurs sur l'événement <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</returns>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.RemoveHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.ComponentModel.CurrentChangingEventArgs})">
      <summary>Supprime le gestionnaire d'événements spécifié de la source spécifiée.</summary>
      <param name="source">Objet source qui déclenche l'événement <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</param>
      <param name="handler">Délégué qui gère l'événement <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handler" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.RemoveListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
      <summary>Supprime l'écouteur spécifié de l'événement <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> de la source spécifiée.</summary>
      <param name="source">Objet avec l'événement.</param>
      <param name="listener">Écouteur à supprimer.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.StartListening(System.Object)">
      <summary>Commence à écouter l'événement <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> sur la source spécifiée.</summary>
      <param name="source">Objet avec l'événement.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.StopListening(System.Object)">
      <summary>Arrête d'écouter l'événement <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> sur la source spécifiée.</summary>
      <param name="source">Objet avec l'événement.</param>
    </member>
    <member name="T:System.ComponentModel.DependencyPropertyDescriptor">
      <summary>Fournit une extension de <see cref="T:System.ComponentModel.PropertyDescriptor" /> qui tient compte des caractéristiques de propriété supplémentaires d’une propriété de dépendance.</summary>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)">
      <summary>Permet à d'autres objets d'être avertis en cas de modification de cette propriété.</summary>
      <param name="component">Composant pour lequel ajouter le gestionnaire.</param>
      <param name="handler">Délégué à ajouter en tant qu'écouteur.</param>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Attributes">
      <summary>Obtient la collection des attributs de ce membre.</summary>
      <returns>Collection d'attributs <see cref="T:System.ComponentModel.AttributeCollection" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(System.Object)">
      <summary>Retourne une valeur indiquant si la réinitialisation d'un objet modifie sa valeur.</summary>
      <param name="component">Composant dont la fonction de réinitialisation doit être testée.</param>
      <returns>
        <see langword="true" /> si la réinitialisation du composant modifie sa valeur ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Category">
      <summary>Obtient le nom de la catégorie à laquelle le membre appartient, comme spécifié dans <see cref="T:System.ComponentModel.CategoryAttribute" />.</summary>
      <returns>Nom de la catégorie à laquelle le membre appartient. S'il n'existe aucun <see cref="T:System.ComponentModel.CategoryAttribute" />, le nom de la catégorie est celui de la catégorie par défaut, <see langword="Misc" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.ComponentType">
      <summary>Obtient le type du composant auquel cette propriété est liée.</summary>
      <returns>
        <see cref="T:System.Type" /> représentant le type du composant auquel cette propriété est liée. Lors de l'appel des méthodes <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)" /> ou <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" />, l'objet spécifié peut être une instance de ce type.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Converter">
      <summary>Obtient le convertisseur de type pour cette propriété.</summary>
      <returns>
        <see cref="T:System.ComponentModel.TypeConverter" /> utilisé pour convertir le <see cref="T:System.Type" /> de cette propriété.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty">
      <summary>Retourne l’identificateur de la propriété de dépendance.</summary>
      <returns>Identificateur de la propriété de dépendance.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Description">
      <summary>Obtient la description du membre, telle qu'elle est spécifiée dans <see cref="T:System.ComponentModel.DescriptionAttribute" />.</summary>
      <returns>Description du membre. S'il n'existe aucun <see cref="T:System.ComponentModel.DescriptionAttribute" />, la valeur de la propriété est la valeur par défaut, c'est-à-dire une chaîne vide ("").</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback">
      <summary>Obtient ou définit un rappel utilisé par les concepteurs pour modifier la valeur effective d'une propriété de dépendance avant que la valeur de propriété de dépendance ne soit stockée dans le moteur de propriété de dépendance.</summary>
      <returns>Rappel utilisé par les concepteurs pour modifier la valeur effective d'une propriété de dépendance avant que la valeur de propriété de dépendance ne soit stockée dans le moteur de propriété de dépendance.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly">
      <summary>Obtient une valeur indiquant si ce membre ne doit être défini qu'au moment du design, comme spécifié dans <see cref="T:System.ComponentModel.DesignOnlyAttribute" />.</summary>
      <returns>
        <see langword="true" /> si ce membre ne doit être défini qu'au moment du design ; <see langword="false" /> si le membre peut être défini pendant l'exécution. S'il n'existe aucun <see cref="T:System.ComponentModel.DesignOnlyAttribute" />, la valeur de retour est la valeur par défaut, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.DisplayName">
      <summary>Obtient le nom qui peut être affiché dans une fenêtre, telle qu'une fenêtre Propriétés.</summary>
      <returns>Nom de la propriété à afficher.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.Equals(System.Object)">
      <summary>Compare si deux instances <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> sont égales.</summary>
      <param name="obj">
        <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> à comparer à l'instance actuelle.</param>
      <returns>
        <see langword="true" /> si les valeurs sont équivalentes ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)">
      <summary>Retourne un <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> pour un nom de propriété fourni.</summary>
      <param name="name">Nom enregistré d'une propriété de dépendance ou propriété jointe.</param>
      <param name="ownerType">
        <see cref="T:System.Type" /> de l'objet possédant la définition de la propriété.</param>
      <param name="targetType">
        <see cref="T:System.Type" /> de l'objet pour lequel vous souhaitez définir la propriété.</param>
      <returns>Objet <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> demandé.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)">
      <summary>Retourne un <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> pour un nom de propriété fourni.</summary>
      <param name="name">Nom enregistré d'une propriété de dépendance ou propriété jointe.</param>
      <param name="ownerType">
        <see cref="T:System.Type" /> de l'objet possédant la définition de la propriété.</param>
      <param name="targetType">
        <see cref="T:System.Type" /> de l'objet pour lequel vous souhaitez définir la propriété.</param>
      <param name="ignorePropertyType">Demander d'ignorer le type de propriété.</param>
      <returns>Objet <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> demandé.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.ComponentModel.PropertyDescriptor)">
      <summary>Retourne <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> pour le <see cref="T:System.ComponentModel.PropertyDescriptor" /> fourni.</summary>
      <param name="property">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> à vérifier.</param>
      <returns>Si la propriété décrite par <paramref name="property" /> est une propriété de dépendance, retourne un <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> valide. Sinon, retourne <see langword="null" /><see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)">
      <summary>Retourne <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> pour un type de cible et une propriété de dépendance fournis.</summary>
      <param name="dependencyProperty">Identificateur de la propriété de dépendance.</param>
      <param name="targetType">Type de l'objet dans lequel la propriété est définie.</param>
      <returns>
        <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> pour la propriété de dépendance fournie.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
      <summary>Retourne <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />.</summary>
      <param name="instance">Composant pour lequel obtenir les propriétés.</param>
      <param name="filter">Tableau de type <see cref="T:System.Attribute" /> à utiliser comme filtre.</param>
      <returns>
        <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> avec les propriétés qui correspondent aux attributs spécifiés pour le composant indiqué.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.GetEditor(System.Type)">
      <summary>Obtient un éditeur du type spécifié.</summary>
      <param name="editorBaseType">Type de base de l'éditeur, utilisé pour différencier plusieurs éditeurs pris en charge par une propriété.</param>
      <returns>Instance du type d'éditeur demandé, ou <see langword="null" /> si l'éditeur est introuvable.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.GetHashCode">
      <summary>Retourne le code de hachage pour ce <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)">
      <summary>Retourne la valeur actuelle de la propriété d'un composant.</summary>
      <param name="component">Instance du composant.</param>
      <returns>Valeur demandée.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.IsAttached">
      <summary>Obtient une valeur indiquant si la propriété est enregistrée comme une propriété jointe et est utilisée à travers une utilisation de propriété jointe.</summary>
      <returns>
        <see langword="true" /> si la propriété est une propriété jointe ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable">
      <summary>Obtient une valeur indiquant la valeur de du <see cref="T:System.ComponentModel.BrowsableAttribute" /> de la propriété.</summary>
      <returns>
        <see langword="true" /> si le <see cref="T:System.ComponentModel.BrowsableAttribute" /> a été spécifié dans la propriété ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable">
      <summary>Obtient une valeur indiquant si cette propriété doit être localisée, comme spécifié dans <see cref="T:System.ComponentModel.LocalizableAttribute" />.</summary>
      <returns>
        <see langword="true" /> si le membre est marqué avec le constructeur <see cref="T:System.ComponentModel.LocalizableAttribute" /> de la valeur true ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly">
      <summary>Obtient une valeur indiquant si cette propriété est en lecture seule.</summary>
      <returns>
        <see langword="true" /> si la propriété est en lecture seule ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Metadata">
      <summary>Obtient les métadonnées qui sont associées à la propriété de dépendance.</summary>
      <returns>Métadonnées de propriété de dépendance.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.PropertyType">
      <summary>Obtient le <see cref="T:System.Type" /> représenté de la propriété de dépendance.</summary>
      <returns>
        <see cref="T:System.Type" /> de la propriété de dépendance.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)">
      <summary>Permet à d'autres objets d'être avertis en cas de modification de cette propriété.</summary>
      <param name="component">Composant pour lequel ajouter le gestionnaire.</param>
      <param name="handler">Délégué à ajouter en tant qu'écouteur.</param>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.ResetValue(System.Object)">
      <summary>Rétablit la valeur par défaut pour la valeur de cette propriété du composant.</summary>
      <param name="component">Composant dont la valeur par défaut de la propriété doit être rétablie.</param>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)">
      <summary>Affecte une autre valeur au composant.</summary>
      <param name="component">Composant dont la valeur de la propriété doit être définie.</param>
      <param name="value">Nouvelle valeur.</param>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(System.Object)">
      <summary>Indique si la valeur de cette propriété doit être rendue persistante par des processus de sérialisation.</summary>
      <param name="component">Composant possédant la propriété dont la persistance doit être examinée.</param>
      <returns>
        <see langword="true" /> si la propriété doit être persistante ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents">
      <summary>Indique si les notifications de modification des valeurs pour cette propriété peuvent provenir de l'extérieur du descripteur de propriété, comme par exemple du composant lui-même, ou si les notifications proviendront seulement d'appels directs à la méthode <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" />.</summary>
      <returns>
        <see langword="true" /> si les notifications pour cette propriété peuvent provenir de l'extérieur du descripteur de propriété, comme par exemple du composant lui-même. <see langword="false" /> si les notifications proviendront uniquement des appels directs à <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.ToString">
      <summary>Convertit la valeur de cette instance en sa représentation sous forme de chaîne équivalente.</summary>
      <returns>Retourne la valeur <see cref="P:System.ComponentModel.MemberDescriptor.Name" />.</returns>
    </member>
    <member name="T:System.ComponentModel.ErrorsChangedEventManager">
      <summary>Fournit une implémentation <see cref="T:System.Windows.WeakEventManager" /> afin que vous puissiez utiliser le modèle « écouteur d'événements faible » pour joindre des écouteurs à l'événement <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</summary>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.AddHandler(System.ComponentModel.INotifyDataErrorInfo,System.EventHandler{System.ComponentModel.DataErrorsChangedEventArgs})">
      <summary>Ajoute le gestionnaire d'événements spécifié, qui est appelé lorsque la source spécifiée déclenche l'événement <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" /> .</summary>
      <param name="source">Objet source qui déclenche l'événement <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</param>
      <param name="handler">Délégué qui gère l'événement <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handler" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.NewListenerList">
      <summary>Retourne un nouvel objet destiné à contenir des écouteurs sur l'événement <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</summary>
      <returns>Nouvel objet destiné à contenir des écouteurs sur l'événement <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.RemoveHandler(System.ComponentModel.INotifyDataErrorInfo,System.EventHandler{System.ComponentModel.DataErrorsChangedEventArgs})">
      <summary>Supprime le gestionnaire d'événements spécifié de la source spécifiée.</summary>
      <param name="source">Objet source qui déclenche l'événement <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</param>
      <param name="handler">Délégué qui gère l'événement <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handler" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.StartListening(System.Object)">
      <summary>Commence à écouter l'événement <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" /> sur la source spécifiée.</summary>
      <param name="source">Objet source qui déclenche l'événement <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</param>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.StopListening(System.Object)">
      <summary>Arrête d'écouter l'événement <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" /> sur la source spécifiée.</summary>
      <param name="source">Objet source qui déclenche l'événement <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</param>
    </member>
    <member name="T:System.ComponentModel.GroupDescription">
      <summary>Fournit une classe de base abstraite pour les types qui décrivent comment diviser les éléments d’une collection en groupes.</summary>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.GroupDescription" />.</summary>
    </member>
    <member name="P:System.ComponentModel.GroupDescription.CustomSort">
      <summary>Récupère ou définit un comparateur personnalisé qui trie les groupes à l’aide d’un objet qui implémente <see cref="T:System.Collections.IComparer" />.</summary>
      <returns>Comparateur personnalisé qui trie les groupes à l’aide d’un objet qui implémente <see cref="T:System.Collections.IComparer" />.</returns>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.GroupNameFromItem(System.Object,System.Int32,System.Globalization.CultureInfo)">
      <summary>Renvoie le ou les noms de groupes pour l’élément donné.</summary>
      <param name="item">Élément pour lequel retourner les noms de groupes.</param>
      <param name="level">Niveau de regroupement.</param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" /> à fournir au convertisseur.</param>
      <returns>Le ou les noms de groupes pour l’élément donné.</returns>
    </member>
    <member name="P:System.ComponentModel.GroupDescription.GroupNames">
      <summary>Obtient la collection des noms qui sont utilisés pour initialiser un groupe avec un ensemble de sous-groupes avec les noms donnés.</summary>
      <returns>Collection des noms qui sont utilisés pour initialiser un groupe avec un ensemble de sous-groupes avec les noms donnés.</returns>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.NamesMatch(System.Object,System.Object)">
      <summary>Retourne une valeur qui indique si le nom du groupe et le nom de l’élément correspondent, ce qui signifie que l’élément appartient au groupe.</summary>
      <param name="groupName">Nom du groupe à vérifier.</param>
      <param name="itemName">Nom de l’élément à vérifier.</param>
      <returns>
        <see langword="true" /> si les noms correspondent et que l’élément appartient au groupe ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Déclenche l'événement <see cref="E:System.ComponentModel.GroupDescription.PropertyChanged" />.</summary>
      <param name="e">Arguments de l’événement déclenché.</param>
    </member>
    <member name="E:System.ComponentModel.GroupDescription.PropertyChanged">
      <summary>Se produit en cas de modification d'une valeur de propriété.</summary>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.ShouldSerializeGroupNames">
      <summary>Retourne une valeur qui indique si les processus de sérialisation doivent sérialiser la valeur effective de la propriété <see cref="P:System.ComponentModel.GroupDescription.GroupNames" /> au niveau des instances de cette classe.</summary>
      <returns>
        <see langword="true" /> si la valeur de la propriété <see cref="P:System.ComponentModel.GroupDescription.GroupNames" /> doit être sérialisée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.ShouldSerializeSortDescriptions">
      <summary>Retourne une valeur qui indique si les processus de sérialisation doivent sérialiser la valeur effective de la propriété <see cref="P:System.ComponentModel.GroupDescription.SortDescriptions" /> au niveau des instances de cette classe.</summary>
      <returns>
        <see langword="true" /> si la valeur de la propriété <see cref="P:System.ComponentModel.GroupDescription.SortDescriptions" /> doit être sérialisée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.GroupDescription.SortDescriptions">
      <summary>Obtient la collection de critères de tri des groupes.</summary>
      <returns>Collection de critères de tri des groupes.</returns>
    </member>
    <member name="E:System.ComponentModel.GroupDescription.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary>Se produit en cas de modification d'une valeur de propriété.</summary>
    </member>
    <member name="T:System.ComponentModel.ICollectionView">
      <summary>Permet aux collections de bénéficier des fonctionnalités de gestion, de tri personnalisé, de filtrage et de regroupement de l’enregistrement actif.</summary>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CanFilter">
      <summary>Obtient une valeur qui indique si cette vue prend en charge le filtrage par l’intermédiaire de la propriété <see cref="P:System.ComponentModel.ICollectionView.Filter" />.</summary>
      <returns>
        <see langword="true" /> si cette vue prend en charge le filtrage ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CanGroup">
      <summary>Obtient une valeur qui indique si cette vue prend en charge le regroupement par l’intermédiaire de la propriété <see cref="P:System.ComponentModel.ICollectionView.GroupDescriptions" />.</summary>
      <returns>
        <see langword="true" /> si cette vue prend en charge le regroupement ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CanSort">
      <summary>Obtient une valeur qui indique si cette vue prend en charge le tri par l’intermédiaire de la propriété <see cref="P:System.ComponentModel.ICollectionView.SortDescriptions" />.</summary>
      <returns>
        <see langword="true" /> si cette vue prend en charge le tri ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.Contains(System.Object)">
      <summary>Retourne une valeur qui indique si un élément donné appartient à cette vue de collection.</summary>
      <param name="item">Objet à vérifier.</param>
      <returns>
        <see langword="true" /> si l’élément appartient à cette vue de collection ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.Culture">
      <summary>Obtient ou définit les informations culturelles pour les opérations de la vue dont la culture peut être différente, telles que le tri.</summary>
      <returns>Culture à utiliser pendant le tri.</returns>
    </member>
    <member name="E:System.ComponentModel.ICollectionView.CurrentChanged">
      <summary>Lors de l’implémentation de cette interface, déclenche cet événement après la modification de l’élément actif.</summary>
    </member>
    <member name="E:System.ComponentModel.ICollectionView.CurrentChanging">
      <summary>Quand vous implémentez cette interface, déclenchez cet événement avant de modifier l’élément actuel. Le gestionnaire d’événements peut annuler cet événement.</summary>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CurrentItem">
      <summary>Obtient l'élément actif de la vue.</summary>
      <returns>Élément actif de la vue, ou <see langword="null" /> s’il n’y a pas d’élément actif.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CurrentPosition">
      <summary>Obtient la position ordinale de <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> dans la vue.</summary>
      <returns>Position ordinale de <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> dans la vue.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.DeferRefresh">
      <summary>Entre dans un cycle différé que vous pouvez utiliser pour fusionner des modifications de la vue et retarder l’actualisation automatique.</summary>
      <returns>Objet <see cref="T:System.IDisposable" /> que vous pouvez utiliser pour supprimer l'objet appelant.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.Filter">
      <summary>Obtient ou définit un rappel utilisé pour déterminer si un élément peut être inclus dans la vue.</summary>
      <returns>Méthode utilisée pour déterminer si un élément peut être inclus dans la vue.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.GroupDescriptions">
      <summary>Obtient une collection d’objets <see cref="T:System.ComponentModel.GroupDescription" /> qui décrivent comment les éléments de la collection sont regroupés dans la vue.</summary>
      <returns>Collection d'objets <see cref="T:System.ComponentModel.GroupDescription" /> qui décrivent comment les éléments de la collection sont regroupés dans la vue.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.Groups">
      <summary>Obtient les groupes de niveau supérieur.</summary>
      <returns>Collection en lecture seule des groupes de niveau supérieur ou <see langword="null" /> s’il n’y a pas de groupes.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.IsCurrentAfterLast">
      <summary>Obtient une valeur qui indique si le <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> de la vue est au-delà de la fin de la collection.</summary>
      <returns>
        <see langword="true" /> si le <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> de la vue est au-delà de la fin de la collection ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.IsCurrentBeforeFirst">
      <summary>Obtient une valeur qui indique si le <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> de la vue est au-delà du début de la collection.</summary>
      <returns>
        <see langword="true" />Si le <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> de la vue est au-delà du début de la collection; <see langword="false" />sinon,.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.IsEmpty">
      <summary>Retourne une valeur qui indique si la vue résultante est vide.</summary>
      <returns>
        <see langword="true" /> si la vue résultante est vide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentTo(System.Object)">
      <summary>Définit l'élément spécifié de façon à ce qu'il soit l'<see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> de la vue.</summary>
      <param name="item">Élément à définir comme <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</param>
      <returns>
        <see langword="true" /> si le <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> résultant est dans la vue ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToFirst">
      <summary>Définit le premier élément de la vue comme le <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</summary>
      <returns>
        <see langword="true" /> si le <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> obtenu est un élément de la vue ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToLast">
      <summary>Définit le dernier élément de la vue comme le <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</summary>
      <returns>
        <see langword="true" /> si <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> résultant est un élément présent dans la vue ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToNext">
      <summary>Définit l'élément qui suit le <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> dans la vue comme le <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</summary>
      <returns>
        <see langword="true" /> si le <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> obtenu est un élément de la vue ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToPosition(System.Int32)">
      <summary>Définit l'élément situé à l'index spécifié comme devant être le <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> de la vue.</summary>
      <param name="position">Index auquel affecter la valeur <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</param>
      <returns>
        <see langword="true" /> si le <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> obtenu est un élément de la vue ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToPrevious">
      <summary>Définit l'élément qui vient avant l'<see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> dans la vue en tant qu'<see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</summary>
      <returns>
        <see langword="true" /> si le <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> obtenu est un élément de l’affichage ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.Refresh">
      <summary>Recrée la vue.</summary>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.SortDescriptions">
      <summary>Obtient une collection d’objets <see cref="T:System.ComponentModel.SortDescription" /> qui décrivent le mode de tri des éléments de la collection dans la vue.</summary>
      <returns>Collection d’objets <see cref="T:System.ComponentModel.SortDescription" /> qui décrivent le mode de tri des éléments de la collection dans la vue.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.SourceCollection">
      <summary>Retourne la collection sous-jacente.</summary>
      <returns>Objet <see cref="T:System.Collections.IEnumerable" /> qui est la collection sous-jacente.</returns>
    </member>
    <member name="T:System.ComponentModel.ICollectionViewFactory">
      <summary>Interface qui active l'implémentation de collections pour créer une vue de leurs données. Normalement, le code utilisateur n'appelle pas de méthodes sur cette interface.</summary>
    </member>
    <member name="M:System.ComponentModel.ICollectionViewFactory.CreateView">
      <summary>Crée une nouvelle vue de la collection qui implémente cette interface. En général, le code utilisateur n'appelle pas cette méthode.</summary>
      <returns>Nouvelle vue créée.</returns>
    </member>
    <member name="T:System.ComponentModel.ICollectionViewLiveShaping">
      <summary>Définit des propriétés qui permettent de trier, regrouper et filtrer sur la base d'une <see cref="T:System.Windows.Data.CollectionView" /> en temps réel.</summary>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveFiltering">
      <summary>Obtient une valeur qui indique si la vue de collection prend en charge l’activation ou la désactivation du filtrage des données en temps réel.</summary>
      <returns>
        <see langword="true" /> si la vue de collection prend en charge l’activation ou l’activation du filtrage en direct ; dans le cas contraire, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveGrouping">
      <summary>Obtient une valeur qui indique si cette vue de collection prend en charge l'activation et la désactivation du groupage des données en temps réel.</summary>
      <returns>
        <see langword="true" /> si la vue de collection prend en charge l'activation et la désactivation du regroupement actif ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveSorting">
      <summary>Obtient une valeur qui indique si cette vue de collection prend en charge l'activation et la désactivation du tri des données en temps réel.</summary>
      <returns>
        <see langword="true" /> si la vue de collection prend en charge l'activation et la désactivation du tri actif ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveFiltering">
      <summary>Obtient ou définit une valeur qui indique si le filtrage des données en temps réel est activé.</summary>
      <returns>
        <see langword="true" /> si le filtrage des données en temps réel est activé ; <see langword="false" /> si le filtrage actif n'est pas activé ; <see langword="null" /> s'il ne peut pas être déterminé et si la vue de collection implémente le filtrage actif.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveGrouping">
      <summary>Obtient ou définit une valeur qui indique si le groupage des données en temps réel est activé.</summary>
      <returns>
        <see langword="true" /> si le regroupement des données en temps réel est activé ; <see langword="false" /> si le regroupement actif n'est pas activé ; <see langword="null" /> s'il ne peut pas être déterminé et si la vue de collection implémente le regroupement actif.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveSorting">
      <summary>Obtient ou définit une valeur qui indique si le tri en temps réel est activé.</summary>
      <returns>
        <see langword="true" /> si le tri des données en temps réel est activé ; <see langword="false" /> si le tri actif n'est pas activé ; <see langword="null" /> s'il ne peut pas être déterminé et si la vue de collection implémente le tri actif.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.LiveFilteringProperties">
      <summary>Obtient une collection de chaînes qui spécifient les propriétés qui participent au filtrage des données en temps réel.</summary>
      <returns>Collection de chaînes qui spécifient les propriétés qui participent au filtrage des données en temps réel.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.LiveGroupingProperties">
      <summary>Obtient une collection de chaînes qui spécifient les propriétés qui participent au groupage des données en temps réel.</summary>
      <returns>Collection de chaînes qui spécifient les propriétés qui participent au groupage des données en temps réel.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.LiveSortingProperties">
      <summary>Obtient une collection de chaînes qui spécifient les propriétés qui participent au tri des données en temps réel.</summary>
      <returns>Une collection de chaînes qui spécifient les propriétés qui participent au tri des données en temps réel.</returns>
    </member>
    <member name="T:System.ComponentModel.IEditableCollectionView">
      <summary>Définit les méthodes et propriétés qu'un <see cref="T:System.Windows.Data.CollectionView" /> implémente pour procurer des fonctionnalités d'édition à une collection.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.AddNew">
      <summary>Ajoute un nouvel élément à la collection.</summary>
      <returns>Nouvel élément ajouté à la collection.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CanAddNew">
      <summary>Obtient une valeur qui indique si un nouvel élément peut être ajouté à la collection.</summary>
      <returns>
        <see langword="true" /> si un nouvel élément peut être ajouté à la collection ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CanCancelEdit">
      <summary>Obtient une valeur qui indique si la vue de collection peut ignorer les modifications en attente et restaurer les valeurs d'origine d'un objet modifié.</summary>
      <returns>
        <see langword="true" /> si la vue de collection peut ignorer les modifications en attente et restaurer les valeurs d’origine d’un objet modifié ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CancelEdit">
      <summary>Met fin à la transaction de modification et, si possible, restaure la valeur d’origine de l’élément.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CancelNew">
      <summary>Met fin à la transaction d'ajout et ignore le nouvel élément en attente.</summary>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CanRemove">
      <summary>Obtient une valeur qui indique si un élément peut être supprimé de la collection.</summary>
      <returns>
        <see langword="true" /> si un élément peut être supprimé de la collection ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CommitEdit">
      <summary>Met fin à la transaction de modification et enregistre les modifications en attente.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CommitNew">
      <summary>Met fin à la transaction d'ajout et enregistre le nouvel élément en attente.</summary>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CurrentAddItem">
      <summary>Obtient l'élément ajouté pendant la transaction d'ajout en cours.</summary>
      <returns>Élément qui est ajouté si <see cref="P:System.ComponentModel.IEditableCollectionView.IsAddingNew" /> a la valeur <see langword="true" /> ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CurrentEditItem">
      <summary>Obtient l'élément de la collection qui est modifié.</summary>
      <returns>Élément de la collection qui est modifié si <see cref="P:System.ComponentModel.IEditableCollectionView.IsEditingItem" /> est <see langword="true" /> ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.EditItem(System.Object)">
      <summary>Commence une transaction de modification de l'élément spécifié.</summary>
      <param name="item">Élément à modifier.</param>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.IsAddingNew">
      <summary>Obtient une valeur qui indique si une transaction d'ajout est en cours.</summary>
      <returns>
        <see langword="true" /> si une transaction d'ajout est en cours ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.IsEditingItem">
      <summary>Obtient une valeur qui indique si une transaction de modification est en cours.</summary>
      <returns>
        <see langword="true" /> si une transaction de modification est en cours ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition">
      <summary>Obtient ou définit la position du nouvel espace réservé d'élément dans la vue de collection.</summary>
      <returns>L'une des valeurs d'énumération qui spécifie la position du nouvel espace réservé d'élément dans la vue de collection.</returns>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.Remove(System.Object)">
      <summary>Supprime l’élément spécifié de la collection.</summary>
      <param name="item">Élément à supprimer.</param>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)">
      <summary>Supprime de la collection l’élément situé à la position spécifiée.</summary>
      <param name="index">Position de l'élément à supprimer.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à 0 ou supérieur au nombre d'éléments dans la vue de collection.</exception>
    </member>
    <member name="T:System.ComponentModel.IEditableCollectionViewAddNewItem">
      <summary>Définit les méthodes et les propriétés qu'un <see cref="T:System.Windows.Data.CollectionView" /> implémente pour permettre de spécifier des ajouts d'éléments d'un type spécifique.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionViewAddNewItem.AddNewItem(System.Object)">
      <summary>Ajoute l’objet spécifié à la collection.</summary>
      <param name="newItem">Objet à ajouter à la collection.</param>
      <returns>Objet  qui est ajouté à la collection.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionViewAddNewItem.CanAddNewItem">
      <summary>Obtient une valeur qui indique si un objet spécifié peut être ajouté à la collection.</summary>
      <returns>
        <see langword="true" /> si un objet spécifié peut être ajouté à la collection ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.IItemProperties">
      <summary>Définit une propriété qui fournit des informations à propos des propriétés d'un objet.</summary>
    </member>
    <member name="P:System.ComponentModel.IItemProperties.ItemProperties">
      <summary>Obtient une collection qui contient des informations à propos des propriétés disponibles sur les éléments dans une collection.</summary>
      <returns>Collection qui contient des informations à propos des propriétés disponibles sur les éléments dans une collection.</returns>
    </member>
    <member name="T:System.ComponentModel.ItemPropertyInfo">
      <summary>Contient des informations sur une propriété.</summary>
    </member>
    <member name="M:System.ComponentModel.ItemPropertyInfo.#ctor(System.String,System.Type,System.Object)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.ItemPropertyInfo" />.</summary>
      <param name="name">Nom de la propriété.</param>
      <param name="type">Type de la propriété.</param>
      <param name="descriptor">Objet qui contient des informations supplémentaires sur la propriété.</param>
    </member>
    <member name="P:System.ComponentModel.ItemPropertyInfo.Descriptor">
      <summary>Obtient un objet qui contient des informations supplémentaires sur la propriété.</summary>
      <returns>Objet qui contient des informations supplémentaires sur la propriété.</returns>
    </member>
    <member name="P:System.ComponentModel.ItemPropertyInfo.Name">
      <summary>Obtient le nom de la propriété.</summary>
      <returns>Nom de la propriété.</returns>
    </member>
    <member name="P:System.ComponentModel.ItemPropertyInfo.PropertyType">
      <summary>Obtient le type de la propriété.</summary>
      <returns>Type de la propriété.</returns>
    </member>
    <member name="T:System.ComponentModel.NewItemPlaceholderPosition">
      <summary>Spécifie l’emplacement de l’espace réservé pour un nouvel élément dans la collection.</summary>
    </member>
    <member name="F:System.ComponentModel.NewItemPlaceholderPosition.AtBeginning">
      <summary>L’espace réservé pour un nouvel élément est affiché au début de la collection.  Les nouveaux éléments figurent au début de la collection, après l’espace réservé de nouvel élément.</summary>
    </member>
    <member name="F:System.ComponentModel.NewItemPlaceholderPosition.AtEnd">
      <summary>L’espace réservé pour un nouvel élément est affiché à la fin de la collection. Les nouveaux éléments sont ajoutés à la fin de la collection, avant l’espace réservé de nouvel élément.</summary>
    </member>
    <member name="F:System.ComponentModel.NewItemPlaceholderPosition.None">
      <summary>La collection n’utilise pas d’espace réservé pour les nouveaux éléments. La position des éléments ajoutés dépend de la collection sous-jacente.  En règle générale, ils sont ajoutés à la fin de la collection.</summary>
    </member>
    <member name="T:System.ComponentModel.PropertyChangedEventManager">
      <summary>Fournit une implémentation <see cref="T:System.Windows.WeakEventManager" /> afin que vous puissiez utiliser le modèle « écouteur d'événements faible » pour joindre des écouteurs à l'événement <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</summary>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.AddHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)">
      <summary>Ajoute le gestionnaire d'événements spécifié, qui est appelé lorsque la source spécifiée déclenche l'événement de <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> pour la propriété spécifiée.</summary>
      <param name="source">Objet source qui déclenche l'événement <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</param>
      <param name="handler">Délégué qui gère l'événement <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</param>
      <param name="propertyName">Nom de la propriété qui existe sur la <paramref name="source" /> depuis laquelle écouter des modifications. Choisissez la valeur <see cref="F:System.String.Empty" /> pour lui affecter « n'importe quelle propriété ».</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handler" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Plusieurs méthodes sont associées au <paramref name="handler" />.</exception>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.AddListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)">
      <summary>Ajoute l'écouteur spécifié à la liste d'écouteurs sur la source spécifiée.</summary>
      <param name="source">Objet avec l'événement.</param>
      <param name="listener">Objet à ajouter comme écouteur.</param>
      <param name="propertyName">Nom de la propriété qui existe sur la <paramref name="source" /> depuis laquelle écouter des modifications. Choisissez la valeur <see cref="F:System.String.Empty" /> pour lui affecter « n'importe quelle propriété ».</param>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.NewListenerList">
      <summary>Retourne un nouvel objet destiné à contenir des écouteurs sur l'événement <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</summary>
      <returns>Nouvel objet destiné à contenir des écouteurs sur l'événement <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.Purge(System.Object,System.Object,System.Boolean)">
      <summary>Supprime des écouteurs qui ne sont plus actifs des données de la source fournie.</summary>
      <param name="source">Objet source duquel supprimer tous les écouteurs.</param>
      <param name="data">Données à purger. Cela est supposé être un <see cref="T:System.Collections.Specialized.HybridDictionary" />.</param>
      <param name="purgeAll">Choisissez la valeur <see langword="true" /> pour cesser d'écouter et supprimer complètement toutes les données.</param>
      <returns>
        <see langword="true" /> si certaines entrées ont été supprimées ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.RemoveHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)">
      <summary>Supprime le gestionnaire d'événements spécifié de la source spécifiée.</summary>
      <param name="source">Objet source qui déclenche l'événement <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</param>
      <param name="handler">Délégué qui gère l'événement <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</param>
      <param name="propertyName">Nom de la propriété qui existe sur la <paramref name="source" /> depuis laquelle arrêter l'écoute des modifications. Choisissez la valeur <see cref="F:System.String.Empty" /> pour lui affecter « n'importe quelle propriété ».</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handler" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Plusieurs méthodes sont associées au <paramref name="handler" />.</exception>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.RemoveListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)">
      <summary>Supprime l'écouteur spécifié de la liste d'écouteurs sur la source fournie.</summary>
      <param name="source">Objet duquel supprimer l'écouteur.</param>
      <param name="listener">Écouteur à supprimer.</param>
      <param name="propertyName">Nom de la propriété qui existe sur la <paramref name="source" /> depuis laquelle arrêter l'écoute des modifications. Choisissez la valeur <see cref="F:System.String.Empty" /> pour lui affecter « n'importe quelle propriété ».</param>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.StartListening(System.Object)">
      <summary>Commence à écouter l'événement <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> sur la source fournie.</summary>
      <param name="source">Objet sur lequel commencer l'écoute pour <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</param>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.StopListening(System.Object)">
      <summary>Arrête d'écouter l'événement <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> sur la source fournie.</summary>
      <param name="source">Objet source sur lequel arrêter l'écoute pour <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</param>
    </member>
    <member name="T:System.ComponentModel.PropertyFilterAttribute">
      <summary>Spécifie les propriétés qui doivent être signalées par les descripteurs de type, en particulier la méthode <see cref="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)" />.</summary>
    </member>
    <member name="M:System.ComponentModel.PropertyFilterAttribute.#ctor(System.ComponentModel.PropertyFilterOptions)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.PropertyFilterAttribute" />.</summary>
      <param name="filter">Options décrivant ce filtre de propriétés.</param>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterAttribute.Default">
      <summary>Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
    </member>
    <member name="M:System.ComponentModel.PropertyFilterAttribute.Equals(System.Object)">
      <summary>Retourne une valeur indiquant si le <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> attribut .NET Framework actuel est égal à un objet spécifié.</summary>
      <param name="value">Objet à comparer à ce <see cref="T:System.ComponentModel.PropertyFilterAttribute" />.</param>
      <returns>
        <see langword="true" /> si le <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> spécifié est égal au <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.PropertyFilterAttribute.Filter">
      <summary>Obtient les options de filtrage pour ce <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> attribut .NET Framework.</summary>
      <returns>Options de filtrage des propriétés.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyFilterAttribute.GetHashCode">
      <summary>Retourne le code de hachage pour le <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> attribut .NET Framework actif.</summary>
      <returns>Valeur d’entier 32 bits signé.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyFilterAttribute.Match(System.Object)">
      <summary>Retourne une valeur indiquant si les options de filtrage des propriétés du <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> attribut .NET Framework actuel correspondent aux options de filtrage des propriétés de l'objet fourni.</summary>
      <param name="value">Objet à comparer. Cet objet est normalement un <see cref="T:System.ComponentModel.PropertyFilterAttribute" />.</param>
      <returns>
        <see langword="true" /> s'il y a correspondance ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.PropertyFilterOptions">
      <summary>Spécifie les propriétés qui doivent être signalées par les descripteurs de type, en particulier la méthode <see cref="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)" />. Cette énumération est utilisée pour spécifier la valeur de la propriété <see cref="P:System.ComponentModel.PropertyFilterAttribute.Filter" />.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.All">
      <summary>Retourne toutes les propriétés</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.Invalid">
      <summary>Retourne uniquement les propriétés qui ne sont pas valides compte tenu du contexte actuel de l’objet.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.None">
      <summary>Ne retourne aucune propriété.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.SetValues">
      <summary>Retourne uniquement les propriétés auxquelles des valeurs locales sont actuellement affectées.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.UnsetValues">
      <summary>Retourne uniquement les propriétés dont les valeurs locales ne sont pas définies ou n’ayant pas de propriétés affectées dans un magasin d’expressions externe (tel qu’une ressource de liaison ou différée).</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.Valid">
      <summary>Retourne toute propriété valide sur l’objet dans la portée actuelle.</summary>
    </member>
    <member name="T:System.ComponentModel.SortDescription">
      <summary>Définit la direction et le nom de propriété à utiliser comme critères de tri d'une collection.</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescription.#ctor(System.String,System.ComponentModel.ListSortDirection)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.ComponentModel.SortDescription" />.</summary>
      <param name="propertyName">Nom de la propriété sur la base de laquelle effectuer le tri de la liste.</param>
      <param name="direction">Ordre de tri.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Le paramètre <paramref name="direction" /> ne spécifie pas une valeur valide.</exception>
    </member>
    <member name="P:System.ComponentModel.SortDescription.Direction">
      <summary>Obtient ou définit une valeur qui indique s'il faut trier en ordre croissant ou décroissant.</summary>
      <returns>Valeur <see cref="T:System.ComponentModel.ListSortDirection" /> qui indique s'il faut trier en ordre croissant ou décroissant.</returns>
    </member>
    <member name="M:System.ComponentModel.SortDescription.Equals(System.Object)">
      <summary>Compare l'instance spécifiée et l'instance actuelle de <see cref="T:System.ComponentModel.SortDescription" /> pour vérifier l'égalité des valeurs.</summary>
      <param name="obj">Instance de <see cref="T:System.ComponentModel.SortDescription" /> à comparer.</param>
      <returns>
        <see langword="true" /> si <paramref name="obj" /> et cette instance de <see cref="T:System.ComponentModel.SortDescription" /> ont la même valeur.</returns>
    </member>
    <member name="M:System.ComponentModel.SortDescription.GetHashCode">
      <summary>Retourne le code de hachage de cette instance de la <see cref="T:System.ComponentModel.SortDescription" />.</summary>
      <returns>Code de hachage de cette instance de la <see cref="T:System.ComponentModel.SortDescription" />.</returns>
    </member>
    <member name="P:System.ComponentModel.SortDescription.IsSealed">
      <summary>Obtient une valeur qui indique si cet objet est dans un état immuable.</summary>
      <returns>
        <see langword="true" /> si cet objet est en cours d'utilisation ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.SortDescription.op_Equality(System.ComponentModel.SortDescription,System.ComponentModel.SortDescription)">
      <summary>Compare deux objets <see cref="T:System.ComponentModel.SortDescription" /> pour vérifier l'égalité de leur valeur.</summary>
      <param name="sd1">Première instance à comparer.</param>
      <param name="sd2">Deuxième instance à comparer.</param>
      <returns>
        <see langword="true" /> si les deux objets sont égaux ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.SortDescription.op_Inequality(System.ComponentModel.SortDescription,System.ComponentModel.SortDescription)">
      <summary>Compare deux objets <see cref="T:System.ComponentModel.SortDescription" /> pour détecter s'ils présentent des valeurs différentes.</summary>
      <param name="sd1">Première instance à comparer.</param>
      <param name="sd2">Deuxième instance à comparer.</param>
      <returns>
        <see langword="true" /> si ces valeurs sont différentes ; <see langword="false" /> dans le cas contraire.</returns>
    </member>
    <member name="P:System.ComponentModel.SortDescription.PropertyName">
      <summary>Obtient ou définit le nom de propriété qui est utilisé comme critère de tri.</summary>
      <returns>La valeur par défaut est null.</returns>
    </member>
    <member name="T:System.ComponentModel.SortDescriptionCollection">
      <summary>Représente une collection d'objets <see cref="T:System.ComponentModel.SortDescription" />.</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.SortDescriptionCollection" />.</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.ClearItems">
      <summary>Supprime tous les éléments de la collection.</summary>
    </member>
    <member name="E:System.ComponentModel.SortDescriptionCollection.CollectionChanged">
      <summary>Se produit quand un élément est ajouté ou supprimé.</summary>
    </member>
    <member name="F:System.ComponentModel.SortDescriptionCollection.Empty">
      <summary>Obtient une instance vide et non modifiable de <see cref="T:System.ComponentModel.SortDescriptionCollection" />.</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.InsertItem(System.Int32,System.ComponentModel.SortDescription)">
      <summary>Insère un élément dans la collection au niveau de l'index spécifié.</summary>
      <param name="index">Index de base zéro où l’<paramref name="item" /> est inséré.</param>
      <param name="item">Objet à insérer.</param>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.RemoveItem(System.Int32)">
      <summary>Supprime l’élément à l’index spécifié dans la collection.</summary>
      <param name="index">Index de base zéro de l'élément à supprimer.</param>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.SetItem(System.Int32,System.ComponentModel.SortDescription)">
      <summary>Remplace l'élément au niveau de l'index spécifié.</summary>
      <param name="index">Index de base zéro de l'élément à remplacer.</param>
      <param name="item">Nouvelle valeur de l'élément à l'index spécifié.</param>
    </member>
    <member name="E:System.ComponentModel.SortDescriptionCollection.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged">
      <summary>Se produit quand un élément est ajouté ou supprimé.</summary>
    </member>
    <member name="T:System.Diagnostics.PresentationTraceLevel">
      <summary>Décrit le niveau de détail de traçage relatif à un objet particulier.</summary>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceLevel.High">
      <summary>Effectue le traçage de toutes les informations supplémentaires.</summary>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceLevel.Low">
      <summary>Effectue le traçage de certaines informations supplémentaires.</summary>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceLevel.Medium">
      <summary>Effectue le traçage d'une quantité moyenne d'informations supplémentaires.</summary>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceLevel.None">
      <summary>N'effectue le traçage d'aucune information supplémentaire disponible.</summary>
    </member>
    <member name="T:System.Diagnostics.PresentationTraceSources">
      <summary>Fournit la prise en charge du suivi du débogage spécifiquement ciblé pour les applications WPF (Windows Presentation Foundation).</summary>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.AnimationSource">
      <summary>Obtient une source de la trace de l'animation.</summary>
      <returns>Source de la trace de l'animation.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.DataBindingSource">
      <summary>Obtient une source de la trace de la liaison de données.</summary>
      <returns>Source de la trace de la liaison de données.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.DependencyPropertySource">
      <summary>Obtient la source de suivi d’une propriété de dépendance.</summary>
      <returns>Source de suivi d’une propriété de dépendance.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.DocumentsSource">
      <summary>Obtient une source de la trace du document.</summary>
      <returns>Source de la trace du document.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.FreezableSource">
      <summary>Obtient une source de la trace Freezable.</summary>
      <returns>Source de la trace Freezable.</returns>
    </member>
    <member name="M:System.Diagnostics.PresentationTraceSources.GetTraceLevel(System.Object)">
      <summary>Obtient la valeur de la propriété jointe <see cref="F:System.Diagnostics.PresentationTraceSources.TraceLevelProperty" /> pour un élément spécifié.</summary>
      <param name="element">Élément à partir duquel la valeur de la propriété est lue.</param>
      <returns>Valeur de la propriété <see cref="F:System.Diagnostics.PresentationTraceSources.TraceLevelProperty" /> pour l’élément.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.HwndHostSource">
      <summary>Obtient une source de suivi hôte hwnd.</summary>
      <returns>Source de suivi hôte hwnd.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.MarkupSource">
      <summary>Obtient une source de la trace de la balise.</summary>
      <returns>Source de la trace de la balise.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.NameScopeSource">
      <summary>Obtient une source de la trace de la portée de nom.</summary>
      <returns>Source de la trace de la portée de nom.</returns>
    </member>
    <member name="M:System.Diagnostics.PresentationTraceSources.Refresh">
      <summary>Actualise des sources de trace, en forçant la relecture du fichier app.config.</summary>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.ResourceDictionarySource">
      <summary>Obtient une source de la trace du dictionnaire de ressources.</summary>
      <returns>Source de la trace du dictionnaire de ressources.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.RoutedEventSource">
      <summary>Obtient une source de suivi d’événements routés.</summary>
      <returns>Source de suivi d’événements routés.</returns>
    </member>
    <member name="M:System.Diagnostics.PresentationTraceSources.SetTraceLevel(System.Object,System.Diagnostics.PresentationTraceLevel)">
      <summary>Définit la valeur de la propriété attachée <see cref="F:System.Diagnostics.PresentationTraceSources.TraceLevelProperty" /> sur un élément spécifié.</summary>
      <param name="element">Élément dans lequel la propriété jointe est écrite.</param>
      <param name="traceLevel">Valeur <see cref="T:System.Diagnostics.PresentationTraceLevel" /> nécessaire.</param>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.ShellSource">
      <summary>Obtient la source de la trace d'un interpréteur de commandes.</summary>
      <returns>Source de la trace d'un interpréteur de commandes.</returns>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceSources.TraceLevelProperty">
      <summary>Identifie la propriété jointe <see cref="F:System.Diagnostics.PresentationTraceSources.TraceLevelProperty" />.</summary>
    </member>
    <member name="T:System.IO.FileFormatException">
      <summary>Exception levée quand un fichier d’entrée ou un flux de données supposé se conformer à une certaine spécification de format de fichier est incorrect.</summary>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor">
      <summary>Crée une instance de la classe <see cref="T:System.IO.FileFormatException" />.</summary>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Crée une instance de la classe <see cref="T:System.IO.FileFormatException" /> et l’initialise avec des données sérialisées. Ce constructeur est appelé lors de la désérialisation pour reconstituer l’objet exception transmis sur un flux.</summary>
      <param name="info">Objet qui contient les données sérialisées de l'objet.</param>
      <param name="context">Informations contextuelles sur la source ou la destination.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.String)">
      <summary>Crée une instance de la classe <see cref="T:System.IO.FileFormatException" /> avec un message d’erreur spécifié.</summary>
      <param name="message">Valeur <see cref="T:System.String" /> qui représente le message d’erreur.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.String,System.Exception)">
      <summary>Crée une instance de la classe <see cref="T:System.IO.FileFormatException" /> avec un message d’erreur et un type d’exception spécifiés.</summary>
      <param name="message">Valeur <see cref="T:System.String" /> qui représente le message d’erreur.</param>
      <param name="innerException">Valeur de la propriété <see cref="P:System.Exception.InnerException" />, qui représente la cause de l’exception actuelle.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri)">
      <summary>Crée une instance de la classe <see cref="T:System.IO.FileFormatException" /> avec une valeur URI source.</summary>
      <param name="sourceUri">Valeur <see cref="T:System.Uri" /> du fichier qui a provoqué cette erreur.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri,System.Exception)">
      <summary>Crée une instance de la classe <see cref="T:System.IO.FileFormatException" /> avec une valeur URI source et un type d’exception.</summary>
      <param name="sourceUri">Valeur <see cref="T:System.Uri" /> du fichier qui a provoqué cette erreur.</param>
      <param name="innerException">Valeur de la propriété <see cref="P:System.Exception.InnerException" />, qui représente la cause de l’exception actuelle.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri,System.String)">
      <summary>Crée une instance de la classe <see cref="T:System.IO.FileFormatException" /> avec une valeur URI source et un message d’erreur spécifié.</summary>
      <param name="sourceUri">Valeur <see cref="T:System.Uri" /> du fichier qui a provoqué cette erreur.</param>
      <param name="message">Valeur <see cref="T:System.String" /> qui représente le message d’erreur.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri,System.String,System.Exception)">
      <summary>Crée une instance de la classe <see cref="T:System.IO.FileFormatException" />, avec une valeur URI source, un message d’erreur spécifié et un type d’exception.</summary>
      <param name="sourceUri">Valeur <see cref="T:System.Uri" /> du fichier qui a provoqué cette erreur.</param>
      <param name="message">Valeur <see cref="T:System.String" /> qui représente le message d’erreur.</param>
      <param name="innerException">Valeur de la propriété <see cref="P:System.Exception.InnerException" />, qui représente la cause de l’exception actuelle.</param>
    </member>
    <member name="M:System.IO.FileFormatException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Définit l'objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> à l'aide du nom de fichier et d'autres informations se rapportant à l'exception.</summary>
      <param name="info">Objet qui contient les données sérialisées de l'objet.</param>
      <param name="context">Informations contextuelles sur la source ou la destination.</param>
    </member>
    <member name="P:System.IO.FileFormatException.SourceUri">
      <summary>Obtient le nom d’un fichier ayant provoqué <see cref="T:System.IO.FileFormatException" />.</summary>
      <returns>
        <see cref="T:System.Uri" /> qui représente le nom du fichier ayant provoqué l'exception.</returns>
    </member>
    <member name="T:System.IO.Packaging.CertificateEmbeddingOption">
      <summary>Spécifie l’emplacement où est stocké le certificat X.509 utilisé dans la signature.</summary>
    </member>
    <member name="F:System.IO.Packaging.CertificateEmbeddingOption.InCertificatePart">
      <summary>Le certificat est incorporé dans son propre <see cref="T:System.IO.Packaging.PackagePart" />.</summary>
    </member>
    <member name="F:System.IO.Packaging.CertificateEmbeddingOption.InSignaturePart">
      <summary>Le certificat est incorporé dans le <see cref="P:System.IO.Packaging.PackageDigitalSignature.SignaturePart" /> qui est créé pour la signature ajoutée.</summary>
    </member>
    <member name="F:System.IO.Packaging.CertificateEmbeddingOption.NotEmbedded">
      <summary>Le certificat n’est pas incorporé dans le package.</summary>
    </member>
    <member name="T:System.IO.Packaging.CompressionOption">
      <summary>Spécifie le niveau de compression pour le contenu qui est stocké dans un <see cref="T:System.IO.Packaging.PackagePart" />.</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.Fast">
      <summary>La compression est optimisée pour les performances.</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.Maximum">
      <summary>La compression est optimisée pour la taille.</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.Normal">
      <summary>La compression est optimisée pour atteindre un équilibre entre la taille et les performances.</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.NotCompressed">
      <summary>La compression est désactivée.</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.SuperFast">
      <summary>La compression est optimisée pour de hautes performances.</summary>
    </member>
    <member name="T:System.IO.Packaging.EncryptedPackageEnvelope">
      <summary>Représente un fichier composé OLE qui contient un package chiffré.</summary>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Close">
      <summary>Ferme le package chiffré et le fichier composé OLE qui le contient.</summary>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
      <summary>Crée et retourne une <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> sur le flux de données spécifié.</summary>
      <param name="envelopeStream">Flux de données sur lequel créer le fichier.</param>
      <param name="publishLicense">Licence de publication incorporée dans le fichier composé.</param>
      <param name="cryptoProvider">Objet qui détermine quelles opérations l'utilisateur actuel est autorisé à exécuter sur le contenu chiffré.</param>
      <returns>Objet <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> nouvellement créé.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="envelopeStream" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="envelopeStream" /> ne fournit pas d'accès en lecture/écriture.</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
      <summary>Crée et retourne une <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> et lui donne le nom de fichier spécifié.</summary>
      <param name="envelopeFileName">Nom du fichier composé OLE.</param>
      <param name="publishLicense">Licence de publication incorporée dans le fichier composé.</param>
      <param name="cryptoProvider">Objet qui détermine quelles opérations l'utilisateur actuel est autorisé à exécuter sur le contenu chiffré.</param>
      <returns>Objet <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> nouvellement créé.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="envelopeFileName" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
      <summary>Crée et retourne une <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> (sur le flux de données spécifié) qui utilise le package non chiffré spécifié comme son contenu.</summary>
      <param name="envelopeStream">Flux de données sur lequel créer le fichier.</param>
      <param name="packageStream">Flux de données qui représente le package non chiffré existant.</param>
      <param name="publishLicense">Licence de publication incorporée dans le fichier composé.</param>
      <param name="cryptoProvider">Objet qui détermine quelles opérations l'utilisateur actuel est autorisé à exécuter sur le contenu chiffré.</param>
      <returns>Objet <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> nouvellement créé.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="envelopeStream" /> ou <paramref name="packageStream" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="envelopeStream" /> ne fournit pas d'accès en lecture/écriture.</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
      <summary>Crée et retourne une <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> qui utilise le package non chiffré spécifié comme son contenu et lui donne le nom de fichier spécifié.</summary>
      <param name="envelopeFileName">Nom du fichier composé OLE.</param>
      <param name="packageStream">Flux de données qui représente le package non chiffré existant.</param>
      <param name="publishLicense">Licence de publication incorporée dans le fichier composé.</param>
      <param name="cryptoProvider">Objet qui détermine quelles opérations l'utilisateur actuel est autorisé à exécuter sur le contenu chiffré.</param>
      <returns>Objet <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> nouvellement créé.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="envelopeFileName" /> ou <paramref name="packageStream" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose">
      <summary>Libère toutes les ressources utilisées par <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</summary>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
      <summary>Libère les ressources non managées utilisées par <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> et libère éventuellement les ressources managées.</summary>
      <param name="disposing">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour ne libérer que les ressources non managées.</param>
    </member>
    <member name="P:System.IO.Packaging.EncryptedPackageEnvelope.FileOpenAccess">
      <summary>Obtient une valeur qui spécifie si le fichier s'est ouvert avec accès en lecture, en écriture ou les deux.</summary>
      <returns>Valeur <see cref="T:System.IO.FileAccess" /> utilisée pour ouvrir le fichier.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Flush">
      <summary>Videz le flux de données pour l'<see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> et le contenu de son package à la fois.</summary>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.GetPackage">
      <summary>Obtient le package chiffré à l'intérieur de l'<see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</summary>
      <returns>
        <see cref="T:System.IO.Packaging.Package" /> dans l'enveloppe.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.IO.Stream)">
      <summary>Obtient une valeur qui spécifie si le flux de données spécifié est un fichier composé OLE avec un flux de données de package chiffré.</summary>
      <param name="stream">Flux de données testé.</param>
      <returns>
        <see langword="true" /> si le flux de données spécifié est un fichier composé OLE avec un flux de données de package chiffré ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.String)">
      <summary>Obtient une valeur qui spécifie si le fichier spécifié est un fichier composé OLE avec un flux de données de package chiffré.</summary>
      <param name="fileName">Fichier testé.</param>
      <returns>
        <see langword="true" /> si le fichier spécifié est un fichier composé OLE avec un flux de données de package chiffré ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.IO.Stream)">
      <summary>Ouvrez le package chiffré dans le flux de données spécifié.</summary>
      <param name="envelopeStream">Flux de données qui contient le package chiffré.</param>
      <returns>
        <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> ouverte.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String)">
      <summary>Ouvrez uniquement le package chiffré dans le fichier spécifié en lecture seule et sans partage.</summary>
      <param name="envelopeFileName">Fichier contenant le package chiffré.</param>
      <returns>
        <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> ouverte.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)">
      <summary>Ouvre uniquement le package chiffré dans le fichier spécifié avec l'accès spécifié et sans partage.</summary>
      <param name="envelopeFileName">Fichier contenant le package chiffré.</param>
      <param name="access">Type d'accès.</param>
      <returns>
        <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> ouverte.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)">
      <summary>Ouvre le package chiffré dans le fichier spécifié et lui donne l'accès et le niveau de partage spécifié.</summary>
      <param name="envelopeFileName">Fichier contenant le package chiffré.</param>
      <param name="access">Type d'accès.</param>
      <param name="sharing">Type de partage.</param>
      <returns>
        <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> ouverte.</returns>
    </member>
    <member name="P:System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties">
      <summary>Obtient les propriétés principales de package (telles que le titre et le sujet) du document managé par des droits.</summary>
      <returns>
        <see cref="T:System.IO.Packaging.PackageProperties" /> pour le package.</returns>
    </member>
    <member name="P:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation">
      <summary>Obtient les informations de gestion des droits stockées dans l'<see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> ; en particulier, la <see cref="T:System.Security.RightsManagement.PublishLicense" /> et la <see cref="T:System.Security.RightsManagement.UseLicense" /> stockées dans le fichier composé OLE qui personnifie le package protégé de gestion des droits.</summary>
      <returns>
        <see cref="T:System.IO.Packaging.RightsManagementInformation" /> pour le package.</returns>
    </member>
    <member name="P:System.IO.Packaging.EncryptedPackageEnvelope.StorageInfo">
      <summary>Obtient un objet qui fournit l'accès au flux de données du fichier composé à l'extérieur du package chiffré.</summary>
      <returns>
        <see cref="T:System.IO.Packaging.StorageInfo" /> représentant les flux de données dans le fichier composé OLE qui sont à l'extérieur du package chiffré.</returns>
    </member>
    <member name="T:System.IO.Packaging.EncryptionOption">
      <summary>Spécifie l'option de chiffrement pour les parties d'un <see cref="T:System.IO.Packaging.Package" />.</summary>
    </member>
    <member name="F:System.IO.Packaging.EncryptionOption.None">
      <summary>Pas de chiffrement.</summary>
    </member>
    <member name="F:System.IO.Packaging.EncryptionOption.RightsManagement">
      <summary>Chiffrement pris en charge à travers la gestion des droits.</summary>
    </member>
    <member name="T:System.IO.Packaging.InvalidSignatureEventHandler">
      <summary>Représente la méthode qui gère l'<see cref="E:System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent" /> déclenché lorsque <see cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" /> détecte une signature non valide.</summary>
      <param name="sender">Source <see cref="T:System.IO.Packaging.PackageDigitalSignature" /> de l'événement non valide.</param>
      <param name="e">Données d'événement.</param>
    </member>
    <member name="T:System.IO.Packaging.Package">
      <summary>Représente un conteneur pouvant stocker plusieurs objets de données.</summary>
    </member>
    <member name="M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IO.Packaging.Package" /> qui utilise un <see cref="T:System.IO.FileAccess" /> donné.</summary>
      <param name="openFileAccess">Autorisations E/S de fichier pour le package.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur de <paramref name="openFileAccess" /> n'est pas valide.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Close">
      <summary>Enregistre et ferme le package ainsi que tout flux sous-jacent des composants.</summary>
    </member>
    <member name="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)">
      <summary>Crée un nouveau composant non compressé avec un URI et un type de contenu donnés.</summary>
      <param name="partUri">URI (Uniform Resource Identifier) du nouveau composant.</param>
      <param name="contentType">Type de contenu du flux de données.</param>
      <returns>Nouveau composant créé.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> ou <paramref name="contentType" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> n'est pas un URI <see cref="T:System.IO.Packaging.PackagePart" /> valide.</exception>
      <exception cref="T:System.InvalidOperationException">Un composant  avec le <paramref name="partUri" /> spécifié est déjà présent dans le package.</exception>
      <exception cref="T:System.ObjectDisposedException">Le package n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).</exception>
      <exception cref="T:System.IO.IOException">Le package est en lecture seule (un nouveau composant ne peut pas être ajouté).</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
      <summary>Crée un nouveau composant avec un URI, un type de contenu et une option de compression donnés.</summary>
      <param name="partUri">URI du nouveau composant.</param>
      <param name="contentType">Type de contenu du flux de données.</param>
      <param name="compressionOption">Option de compression pour le flux de données, <see cref="F:System.IO.Packaging.CompressionOption.NotCompressed" /> ou compression <see cref="F:System.IO.Packaging.CompressionOption.Normal" />.</param>
      <returns>Nouveau composant créé.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> ou <paramref name="contentType" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> n'est pas un URI (Uniform Resource Identifier) <see cref="T:System.IO.Packaging.PackagePart" /> valide.</exception>
      <exception cref="T:System.InvalidOperationException">Un composant  avec le <paramref name="partUri" /> spécifié est déjà présent dans le package.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur <paramref name="compressionOption" /> n'est pas valide.</exception>
      <exception cref="T:System.ObjectDisposedException">Le package n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).</exception>
      <exception cref="T:System.IO.IOException">Le package est en lecture seule (un nouveau composant ne peut pas être ajouté).</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
      <summary>En cas de substitution dans une classe dérivée, crée un nouveau composant dans le package.</summary>
      <param name="partUri">URI (Uniform Resource Identifier) pour le composant en cours de création.</param>
      <param name="contentType">Type de contenu du flux de données.</param>
      <param name="compressionOption">Option de compression pour le flux de données.</param>
      <returns>Composant créé.</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
      <summary>Crée une relation au niveau du package avec un composant avec URI, mode cible et type de relation donnés.</summary>
      <param name="targetUri">URI (Uniform Resource Identifier) du composant cible.</param>
      <param name="targetMode">Indique si le composant cible est <see cref="F:System.IO.Packaging.TargetMode.Internal" /> ou <see cref="F:System.IO.Packaging.TargetMode.External" /> au package.</param>
      <param name="relationshipType">URI qui définit de façon unique le rôle de la relation.</param>
      <returns>Relation au niveau du package avec le composant spécifié.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetUri" /> ou <paramref name="relationshipType" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le composant <paramref name="targetUri" /> est un <see cref="T:System.IO.Packaging.PackageRelationship" />, ou <paramref name="targetMode" /> est <see cref="F:System.IO.Packaging.TargetMode.Internal" /> et <paramref name="targetUri" /> est un URI absolu.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur de <paramref name="targetMode" /> n'est pas valide.</exception>
      <exception cref="T:System.ObjectDisposedException">Le package n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).</exception>
      <exception cref="T:System.IO.IOException">Le package est en lecture seule.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
      <summary>Crée une relation au niveau du package avec un composant avec URI, mode cible, type de relation et identificateur (ID) donnés.</summary>
      <param name="targetUri">URI (Uniform Resource Identifier) du composant cible.</param>
      <param name="targetMode">Indique si le composant cible est <see cref="F:System.IO.Packaging.TargetMode.Internal" /> ou <see cref="F:System.IO.Packaging.TargetMode.External" /> au package.</param>
      <param name="relationshipType">URI qui définit de façon unique le rôle de la relation.</param>
      <param name="id">Identificateur XML unique.</param>
      <returns>Relation au niveau du package avec le composant spécifié.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetUri" /> ou <paramref name="relationshipType" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le composant <paramref name="targetUri" /> est un <see cref="T:System.IO.Packaging.PackageRelationship" />, ou <paramref name="targetMode" /> est <see cref="F:System.IO.Packaging.TargetMode.Internal" /> et <paramref name="targetUri" /> est un URI absolu.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur de <paramref name="targetMode" /> n'est pas valide.</exception>
      <exception cref="T:System.ObjectDisposedException">Le package n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).</exception>
      <exception cref="T:System.IO.IOException">Le package est en lecture seule.</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> n'est pas un identificateur XML valide; ou bien un composant avec l'<paramref name="id" /> spécifié est déjà présent dans le package.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.DeletePart(System.Uri)">
      <summary>Supprime du package un composant avec un URI donné.</summary>
      <param name="partUri">URI du composant à supprimer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> n'est pas un URI <see cref="T:System.IO.Packaging.PackagePart" /> valide.</exception>
      <exception cref="T:System.ObjectDisposedException">Le package n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).</exception>
      <exception cref="T:System.IO.IOException">Le package est en lecture seule.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)">
      <summary>En cas de substitution dans une classe dérivée, supprime un composant avec un URI donné.</summary>
      <param name="partUri">
        <see cref="P:System.IO.Packaging.PackagePart.Uri" /> du <see cref="T:System.IO.Packaging.PackagePart" /> à supprimer.</param>
    </member>
    <member name="M:System.IO.Packaging.Package.DeleteRelationship(System.String)">
      <summary>Supprime une relation au niveau du package.</summary>
      <param name="id">
        <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> du <see cref="T:System.IO.Packaging.PackageRelationship" /> à supprimer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Le package n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).</exception>
      <exception cref="T:System.IO.IOException">Le package est en lecture seule.</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> n'est pas un identificateur XML valide.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Dispose(System.Boolean)">
      <summary>Vide et enregistre le contenu de tous les composants et relations, ferme le package et libère toutes les ressources.</summary>
      <param name="disposing">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="P:System.IO.Packaging.Package.FileOpenAccess">
      <summary>Obtient le paramètre d'accès au fichier pour le package.</summary>
      <returns>Une des valeurs <see cref="T:System.IO.FileAccess" /> : <see cref="F:System.IO.FileAccess.Read" />, <see cref="F:System.IO.FileAccess.Write" /> ou <see cref="F:System.IO.FileAccess.ReadWrite" />.</returns>
      <exception cref="T:System.ObjectDisposedException">Le package n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Flush">
      <summary>Enregistre le contenu de tous les composants et relations contenus dans le package.</summary>
      <exception cref="T:System.ObjectDisposedException">Le package n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).</exception>
      <exception cref="T:System.IO.IOException">Le package est en lecture seule et ne peut pas être modifié.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.FlushCore">
      <summary>En cas de substitution dans une classe dérivée, enregistre le contenu de tous les composants et relations dans le magasin de classes dérivées.</summary>
    </member>
    <member name="M:System.IO.Packaging.Package.GetPart(System.Uri)">
      <summary>Retourne le composant avec un URI donné.</summary>
      <param name="partUri">URI (Uniform Resource Identifier) du composant à retourner.</param>
      <returns>Composant avec le <paramref name="partUri" /> spécifié.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> n'est pas un URI (Uniform Resource Identifier) <see cref="T:System.IO.Packaging.PackagePart" /> valide.</exception>
      <exception cref="T:System.InvalidOperationException">Un composant avec le <paramref name="partUri" /> spécifié n'est pas dans le package.</exception>
      <exception cref="T:System.ObjectDisposedException">Le package n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).</exception>
      <exception cref="T:System.IO.IOException">Le package est en écriture seule.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.GetPartCore(System.Uri)">
      <summary>En cas de substitution dans une classe dérivée, retourne le composant adressé par un URI donné.</summary>
      <param name="partUri">URI (Uniform Resource Identifier) du composant à récupérer.</param>
      <returns>Le composant demandé; ou <see langword="null" />, si un composant avec le <paramref name="partUri" /> spécifié n'est pas dans le package.</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.GetParts">
      <summary>Retourne une collection de tous les composants dans le package.</summary>
      <returns>Collection de tous les éléments <see cref="T:System.IO.Packaging.PackagePart" /> contenus dans le package.</returns>
      <exception cref="T:System.ObjectDisposedException">Le package n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).</exception>
      <exception cref="T:System.IO.IOException">Le package est en écriture seule.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.GetPartsCore">
      <summary>Lors d'une substitution dans une classe dérivée, retourne un tableau contenant tous les composants dans le package.</summary>
      <returns>Tableau de tous les composants contenus dans le package.</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.GetRelationship(System.String)">
      <summary>Retourne la relation au niveau du package avec un identificateur donné.</summary>
      <param name="id">
        <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> de la relation à retourner.</param>
      <returns>Relation au niveau du package avec l'<paramref name="id" />spécifié.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> n'est pas un identificateur XML valide.</exception>
      <exception cref="T:System.InvalidOperationException">Une relation avec l'<paramref name="id" /> spécifié n'est pas dans le package.</exception>
      <exception cref="T:System.ObjectDisposedException">Le package n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).</exception>
      <exception cref="T:System.IO.IOException">Le package est en écriture seule.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.GetRelationships">
      <summary>Retourne une collection de toutes les relations au niveau du package.</summary>
      <returns>Collection de toutes les relations au niveau du package contenues dans le package.</returns>
      <exception cref="T:System.ObjectDisposedException">Le package n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).</exception>
      <exception cref="T:System.IO.IOException">Le package est en écriture seule.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
      <summary>Retourne une collection de toutes les relations au niveau du package correspondant à un <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> donné.</summary>
      <param name="relationshipType">
        <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> à faire correspondre et à retourner dans la collection.</param>
      <returns>Collection de relations au niveau du package correspondant au <paramref name="relationshipType" />spécifié.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="relationshipType" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="relationshipType" /> est une chaîne vide.</exception>
      <exception cref="T:System.ObjectDisposedException">Le package n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).</exception>
      <exception cref="T:System.IO.IOException">Le package est en écriture seule.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.IO.Stream)">
      <summary>Ouvre un package sur un flux de données E/S donné.</summary>
      <param name="stream">Flux E/S sur lequel le package doit être ouvert.</param>
      <returns>Package ouvert.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException">Le package à ouvrir requiert une autorisation de lecture ou de lecture/écriture et le <paramref name="stream" /> spécifié est en écriture seule ; ou bien le package à ouvrir requiert une autorisation d'écriture ou de lecture/écriture et le <paramref name="stream" /> spécifié est en lecture seule.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)">
      <summary>Ouvre un package avec un flux de données E/S et un mode de fichier donnés.</summary>
      <param name="stream">Flux E/S sur lequel le package doit être ouvert.</param>
      <param name="packageMode">Mode de fichier dans lequel le package doit être ouvert.</param>
      <returns>Package ouvert.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur <paramref name="packageMode" /> n'est pas valide.</exception>
      <exception cref="T:System.IO.IOException">Le package à ouvrir requiert une autorisation de lecture ou de lecture/écriture et le <paramref name="stream" /> spécifié est en écriture seule ; ou bien le package à ouvrir requiert une autorisation d'écriture ou de lecture/écriture et le <paramref name="stream" /> spécifié est en lecture seule.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)">
      <summary>Ouvre un package avec un flux de données E/S, un mode de fichier et un paramètre d'accès au fichier donnés.</summary>
      <param name="stream">Flux E/S sur lequel le package doit être ouvert.</param>
      <param name="packageMode">Mode de fichier dans lequel le package doit être ouvert.</param>
      <param name="packageAccess">Chemin d'accès dans lequel le package doit être ouvert.</param>
      <returns>Package ouvert.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur de <paramref name="packageMode" /> ou <paramref name="packageAccess" /> n'est pas valide.</exception>
      <exception cref="T:System.IO.IOException">Le package à ouvrir requiert une autorisation de lecture ou de lecture/écriture et le <paramref name="stream" /> spécifié est en écriture seule ; ou bien, le package à ouvrir requiert une autorisation d'écriture ou de lecture/écriture et le <paramref name="stream" /> spécifié est en lecture seule.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String)">
      <summary>Ouvre un package à un chemin d'accès et nom de fichier donnés.</summary>
      <param name="path">Nom et chemin d'accès du package.</param>
      <returns>Package ouvert.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)">
      <summary>Ouvre un package à un chemin d'accès donné au moyen d'un mode de fichier donné.</summary>
      <param name="path">Nom et chemin d'accès du package.</param>
      <param name="packageMode">Mode de fichier dans lequel le package doit être ouvert.</param>
      <returns>Package ouvert.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur pour <paramref name="packageMode" /> n'est pas valide.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
      <summary>Ouvre un package à un chemin d'accès donné à l'aide d'un mode de fichier et d'un paramètre d'accès au fichier donnés.</summary>
      <param name="path">Nom et chemin d'accès du package.</param>
      <param name="packageMode">Mode de fichier dans lequel le package doit être ouvert.</param>
      <param name="packageAccess">Chemin d'accès dans lequel le package doit être ouvert.</param>
      <returns>Package ouvert.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur de <paramref name="packageMode" /> ou <paramref name="packageAccess" /> n'est pas valide.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
      <summary>Ouvre un package à un chemin d'accès donné à l'aide d'un mode de fichier, d'un chemin d'accès et d'un paramètre de partage de fichier donnés.</summary>
      <param name="path">Nom et chemin d'accès du package.</param>
      <param name="packageMode">Mode de fichier dans lequel le package doit être ouvert.</param>
      <param name="packageAccess">Chemin d'accès dans lequel le package doit être ouvert.</param>
      <param name="packageShare">Mode de partage de fichier dans lequel le package doit être ouvert.</param>
      <returns>Package ouvert.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur de <paramref name="packageMode" />, <paramref name="packageAccess" /> ou <paramref name="packageShare" /> n'est pas valide.</exception>
    </member>
    <member name="P:System.IO.Packaging.Package.PackageProperties">
      <summary>Obtient les propriétés principales du package.</summary>
      <returns>Propriétés principales du package.</returns>
      <exception cref="T:System.ObjectDisposedException">Le package n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.PartExists(System.Uri)">
      <summary>Indique si un composant avec un URI donné est dans le package.</summary>
      <param name="partUri">Objet <see cref="T:System.Uri" /> du composant à vérifier.</param>
      <returns>
        <see langword="true" /> si un composant avec le <paramref name="partUri" /> spécifié se trouve dans le package ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> n'est pas un URI (Uniform Resource Identifier) <see cref="T:System.IO.Packaging.PackagePart" /> valide.</exception>
      <exception cref="T:System.ObjectDisposedException">Le package n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).</exception>
      <exception cref="T:System.IO.IOException">Le package est en écriture seule (impossible de lire les informations).</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.RelationshipExists(System.String)">
      <summary>Indique si une relation au niveau du package avec un ID donné est contenue dans le package.</summary>
      <param name="id">
        <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> de la relation à vérifier.</param>
      <returns>
        <see langword="true" /> si une relation au niveau du package avec l'<paramref name="id" /> spécifié se trouve dans le package ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> n'est pas un identificateur XML valide.</exception>
      <exception cref="T:System.ObjectDisposedException">Le package n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).</exception>
      <exception cref="T:System.IO.IOException">Le package est en écriture seule.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.System#IDisposable#Dispose">
      <summary>Ce membre prend en charge l'infrastructure Windows Presentation Foundation (WPF) et n'est pas conçu pour l'utilisation de l'application.  Utilisez plutôt la méthode de type sécurisé <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" />.</summary>
    </member>
    <member name="T:System.IO.Packaging.PackageDigitalSignature">
      <summary>Représente une signature numérique appliquée à un ensemble de relations et de parties de package.</summary>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption">
      <summary>Obtient l’option d’incorporation du certificat X.509.</summary>
      <returns>Une des valeurs de <see cref="T:System.IO.Packaging.CertificateEmbeddingOption" /> spécifiant l’option pour la signature numérique.</returns>
      <exception cref="T:System.InvalidOperationException">La <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> numérique a été supprimée.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignature.GetPartTransformList(System.Uri)">
      <summary>Retourne une liste ordonnée des opérations <see cref="T:System.Security.Cryptography.Xml.Transform" /> appliquées à une partie donnée.</summary>
      <param name="partName">
        <see cref="T:System.Uri" /> de la <see cref="T:System.IO.Packaging.PackagePart" /> pour laquelle retourner la liste transform.</param>
      <returns>Liste ordonnée de chaînes d'URI, telles que <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl" /> ou <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl" />, représentant les transformations XML canoniques appliquées à la partie avec l'URI <paramref name="partName" /> donné.</returns>
      <exception cref="T:System.InvalidOperationException">La <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> numérique a été supprimée.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.Signature">
      <summary>Obtient ou définit la signature numérique XML.</summary>
      <returns>Signature numérique XML.</returns>
      <exception cref="T:System.InvalidOperationException">La <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> numérique a été supprimée.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignaturePart">
      <summary>Obtient la <see cref="T:System.IO.Packaging.PackagePart" /> qui contient la signature.</summary>
      <returns>Le partie du package qui contient la signature.</returns>
      <exception cref="T:System.InvalidOperationException">La <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> numérique a été supprimée.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignatureType">
      <summary>Obtient la chaîne d'URI qui identifie le type de la signature.</summary>
      <returns>Chaîne d'URI qui identifie le type de la signature. La valeur par défaut est <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl" />.</returns>
      <exception cref="T:System.InvalidOperationException">La <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> numérique a été supprimée.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignatureValue">
      <summary>Obtient la valeur de hachage chiffrée de la <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" />.</summary>
      <returns>Tableau d'octets contenant la valeur de hachage chiffrée de la <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" />.</returns>
      <exception cref="T:System.InvalidOperationException">La <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> numérique a été supprimée.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignedParts">
      <summary>Obtient une collection de tous les objets <see cref="T:System.IO.Packaging.PackagePart" /> signée avec la signature.</summary>
      <returns>Collection contenant toutes les parties de package signées avec la signature.</returns>
      <exception cref="T:System.InvalidOperationException">La <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> numérique a été supprimée.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignedRelationshipSelectors">
      <summary>Obtient la liste des parties <see cref="T:System.IO.Packaging.PackageRelationship" /> signées avec la signature.</summary>
      <returns>Liste des parties <see cref="T:System.IO.Packaging.PackageRelationship" /> signées avec la signature.</returns>
      <exception cref="T:System.InvalidOperationException">La <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> numérique a été supprimée.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.Signer">
      <summary>Obtient le certificat X.509 du signataire.</summary>
      <returns>Certificat numérique du signataire, ou <see langword="null" /> si le certificat n’est pas stocké dans <see cref="T:System.IO.Packaging.Package" />.</returns>
      <exception cref="T:System.InvalidOperationException">La <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> numérique a été supprimée.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SigningTime">
      <summary>Obtient la date et l'heure de création de la signature.</summary>
      <returns>Date et heure de création de la signature.</returns>
      <exception cref="T:System.InvalidOperationException">La <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> numérique a été supprimée.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.TimeFormat">
      <summary>Obtient le format de la date et de l'heure retournées par la propriété <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />.</summary>
      <returns>Format de la date et de l'heure retournées par la propriété <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />.</returns>
      <exception cref="T:System.InvalidOperationException">La <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> numérique a été supprimée.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignature.Verify">
      <summary>Vérifie la signature numérique par rapport à un certificat X.509.</summary>
      <returns>
        <see cref="F:System.IO.Packaging.VerifyResult.Success" /> si la vérification a abouti ; sinon, l’une des valeurs <see cref="T:System.IO.Packaging.VerifyResult" /> qui identifie un problème.</returns>
      <exception cref="T:System.InvalidOperationException">La <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> numérique a été supprimée.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignature.Verify(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>Vérifie la signature numérique par rapport à un certificat X.509 donné.</summary>
      <param name="signingCertificate">Certificat X.509 du signataire par rapport auquel la signature numérique doit être vérifiée.</param>
      <returns>
        <see cref="F:System.IO.Packaging.VerifyResult.Success" /> si la vérification a abouti ; sinon, l’une des valeurs <see cref="T:System.IO.Packaging.VerifyResult" /> qui identifie un problème.</returns>
      <exception cref="T:System.InvalidOperationException">La <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> numérique a été supprimée.</exception>
    </member>
    <member name="T:System.IO.Packaging.PackageDigitalSignatureManager">
      <summary>Fournit une classe utilitaire pour la création et la vérification de signatures numériques dans un <see cref="T:System.IO.Packaging.Package" />.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.#ctor(System.IO.Packaging.Package)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IO.Packaging.PackageDigitalSignatureManager" /> à utiliser avec le <see cref="T:System.IO.Packaging.Package" /> spécifié.</summary>
      <param name="package">Package associé à ce gestionnaire de signature.</param>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.CertificateOption">
      <summary>Obtient ou définit l’option d’incorporation du certificat X.509 utilisée par la méthode <see cref="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})" /> pour signer numériquement des parties de package.</summary>
      <returns>Une des valeurs de <see cref="T:System.IO.Packaging.CertificateEmbeddingOption" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign">
      <summary>Contresigne toutes les signatures dans le package avec un certificat X.509 sélectionné par l’utilisateur.</summary>
      <returns>Signature qui a été ajoutée comme contre-signature ; ou <see langword="null" /> si aucun certificat n’a été trouvé ou si l’utilisateur a annulé la boîte de dialogue de sélection de certificat.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>Contresigne toutes les signatures dans le package avec un certificat X.509 spécifié.</summary>
      <param name="certificate">Certificat X.509 à ajouter comme contre-signature.</param>
      <returns>Signature ajoutée comme contre-signature.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.Uri})">
      <summary>Contresigne une liste de signatures avec un certificat X.509 donné.</summary>
      <param name="certificate">Certificat X.509 utilisé pour contresigner chacun des <paramref name="signatures" /> spécifiés.</param>
      <param name="signatures">Liste des signatures à contresigner.</param>
      <returns>Signature numérique utilisée pour contresigner chacun des <paramref name="signatures" />.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="certificate" /> ou le paramètre <paramref name="signatures" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Le package ne contient pas d’objets <see cref="T:System.IO.Packaging.PackagePart" /> signés.</exception>
      <exception cref="T:System.ArgumentException">Le package ne contient pas de composants <see cref="T:System.IO.Packaging.PackageDigitalSignature" /> signés.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm">
      <summary>Obtient une chaîne URI identifiant l’algorithme de hachage utilisé par défaut pour créer et vérifier des signatures.</summary>
      <returns>Chaîne URI identifiant l'algorithme de hachage utilisé par défaut pour créer et vérifier des signatures.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.GetSignature(System.Uri)">
      <summary>Retourne la signature numérique pour un URI (Uniform Resource Identifier) de signature donné.</summary>
      <param name="signatureUri">URI de la signature numérique à retourner.</param>
      <returns>Signature numérique du <paramref name="signatureUri" /> spécifié ou <see langword="null" /> si une signature pour le <paramref name="signatureUri" /> donné ne peut pas être trouvée.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm">
      <summary>Obtient ou définit l’identificateur URI de l’instance <see cref="T:System.Security.Cryptography.HashAlgorithm" /> utilisée pour créer et vérifier des signatures.</summary>
      <returns>Identificateur de l'<see cref="T:System.Security.Cryptography.HashAlgorithm" /> instance utilisée pour créer et vérifier des signatures. <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> URI</returns>
      <exception cref="T:System.ArgumentNullException">La chaîne de l'identificateur URIà définir est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La chaîne de l'identificateur URIà définir est vide.</exception>
    </member>
    <member name="E:System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent">
      <summary>Se produit lorsque <see cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" /> rencontre une signature non valide.</summary>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.IsSigned">
      <summary>Obtient une valeur indiquant si le package contient des signatures.</summary>
      <returns>
        <see langword="true" /> si le package contient des signatures ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow">
      <summary>Obtient ou définit un handle vers la fenêtre parente pour l'affichage d'une boîte de dialogue de sélection de certificat.</summary>
      <returns>Handle de la fenêtre parente à utiliser pour afficher la boîte de dialogue de sélection du certificat.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.RemoveAllSignatures">
      <summary>Supprime toutes les signatures numériques du package.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature(System.Uri)">
      <summary>Supprime la signature numérique avec un URI (Uniform Resource Identifier) de signature donné.</summary>
      <param name="signatureUri">URI du <see cref="T:System.IO.Packaging.PackageDigitalSignature" /> à supprimer.</param>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})">
      <summary>Invite l’utilisateur à fournir un certificat X.509, qui est ensuite utilisé pour signer numériquement une liste spécifiée de parties du package.</summary>
      <param name="parts">Liste de URI (Uniform Resource Identifier) pour les éléments <see cref="T:System.IO.Packaging.PackagePart" /> à signer.</param>
      <returns>Signature numérique utilisée pour signer la liste de <paramref name="parts" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>Signe une liste de parties de package avec un certificat X.509 donné.</summary>
      <param name="parts">Liste de URI (Uniform Resource Identifier) pour les éléments <see cref="T:System.IO.Packaging.PackagePart" /> à signer.</param>
      <param name="certificate">Certificat X.509 à utiliser pour signer numériquement chacun des <paramref name="parts" /> spécifiés.</param>
      <returns>Signature numérique utilisée pour signer la liste donnée de <paramref name="parts" />, ou <see langword="null" /> si aucun certificat n’est trouvé ou si l’utilisateur a cliqué sur « Annuler » dans la boîte de dialogue de sélection du certificat.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector})">
      <summary>Signe une liste de parties et de relations de package avec un certificat X.509 donné.</summary>
      <param name="parts">Liste d’URI (Uniform Resource Identifier) pour les objets <see cref="T:System.IO.Packaging.PackagePart" /> à signer.</param>
      <param name="certificate">Certificat X.509 à utiliser pour signer numériquement chacun des composants et des relations spécifiés.</param>
      <param name="relationshipSelectors">Liste d’objets <see cref="T:System.IO.Packaging.PackageRelationship" /> à signer.</param>
      <returns>Signature numérique utilisée pour signer les éléments spécifiés dans les listes <paramref name="parts" /> et <paramref name="relationshipSelectors" />.</returns>
      <exception cref="T:System.ArgumentException">Ni <paramref name="parts" /> ni <paramref name="relationshipSelectors" /> ne spécifient d’objets à signer.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String)">
      <summary>Signe une liste de parties de package et de relations de package avec un certificat X.509 et un identificateur (ID) donnés.</summary>
      <param name="parts">Liste d’URI (Uniform Resource Identifier) pour les objets <see cref="T:System.IO.Packaging.PackagePart" /> à signer.</param>
      <param name="certificate">Certificat X.509 à utiliser pour signer numériquement chacun des composants et des relations spécifiés.</param>
      <param name="relationshipSelectors">Liste d’objets <see cref="T:System.IO.Packaging.PackageRelationship" /> à signer.</param>
      <param name="signatureId">Chaîne d’identification à associer à la signature.</param>
      <returns>Signature numérique utilisée pour signer les éléments spécifiés dans les listes <paramref name="parts" /> et <paramref name="relationshipSelectors" />.</returns>
      <exception cref="T:System.ArgumentException">Ni <paramref name="parts" /> ni <paramref name="relationshipSelectors" /> ne spécifient d’éléments à signer.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String,System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.DataObject},System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.Reference})">
      <summary>Signe une liste de parties de package, de relations de package ou d’objets personnalisés avec un certificat X.509 et un identificateur (ID) de signature spécifiés.</summary>
      <param name="parts">Liste d’URI (Uniform Resource Identifier) pour les objets <see cref="T:System.IO.Packaging.PackagePart" /> à signer.</param>
      <param name="certificate">Certificat X.509 à utiliser pour signer numériquement chacun des composants et des relations spécifiés.</param>
      <param name="relationshipSelectors">Liste d’objets <see cref="T:System.IO.Packaging.PackageRelationship" /> à signer.</param>
      <param name="signatureId">Chaîne d’identification à associer à la signature.</param>
      <param name="signatureObjects">Liste d’objets de données personnalisés à signer.</param>
      <param name="objectReferences">Liste de références aux objets personnalisés à signer.</param>
      <returns>Signature numérique utilisée pour signer les éléments spécifiés dans les listes <paramref name="parts" /> et <paramref name="relationshipSelectors" />.</returns>
      <exception cref="T:System.ArgumentException">Ni <paramref name="parts" />, ni <paramref name="relationshipSelectors" />, ni <paramref name="signatureObjects" /> ni <paramref name="objectReferences" /> ne spécifient d’éléments à signer.</exception>
      <exception cref="T:System.InvalidOperationException">Un <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> d’un composant en cours de signature fait référence à un <see cref="P:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping" /> vide, <see langword="null" /> ou non défini.</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="signatureId" /> n’a pas la valeur <see langword="null" /> et n’est pas un ID de schéma XML valide (par exemple, il commence par un chiffre).</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin">
      <summary>Obtient l'URI (Uniform Resource Identifier) de la partie d'origine de la signature.</summary>
      <returns>Identificateur URI de la partie d'origine de la signature.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.SignatureOriginRelationshipType">
      <summary>Obtient le type de la relation d'origine de la signature par défaut.</summary>
      <returns>Type de la relation d'origine de la signature par défaut.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.Signatures">
      <summary>Obtient une collection de toutes les signatures contenues dans le package.</summary>
      <returns>Collection de tous les objets <see cref="T:System.IO.Packaging.PackageDigitalSignature" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat">
      <summary>Obtient ou définit le format date/heure utilisé pour créer une signature <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />.</summary>
      <returns>Format date/heure utilisé pour créer une signature <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping">
      <summary>Obtient un dictionnaire contenant chaque <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> défini et son identificateur <see cref="T:System.Security.Cryptography.Xml.Transform" />.<see cref="P:System.Security.Cryptography.Xml.Transform.Algorithm" /> XML associé .</summary>
      <returns>Dictionnaire qui contient chaque défini <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> et son associé. XML <see cref="T:System.Security.Cryptography.Xml.Transform" /><see cref="P:System.Security.Cryptography.Xml.Transform.Algorithm" /> .</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>Vérifie un certificat X.509 donné.</summary>
      <param name="certificate">Certificat X.509 à vérifier.</param>
      <returns>
        <see cref="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.NoError" /> (valeur 0) si le certificat a été vérifié avec succès ; sinon, énumération au niveau du bit des indicateurs d’erreurs.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)">
      <summary>Vérifie les signatures sur tous les composants signés dans le package.</summary>
      <param name="exitOnFailure">
        <see langword="true" /> pour quitter lors du premier échec ; sinon, <see langword="false" /> pour continuer et vérifier toutes les signatures.</param>
      <returns>
        <see cref="F:System.IO.Packaging.VerifyResult.Success" /> (valeur 0) si toutes les signatures sont vérifiées avec succès ; sinon, une énumération qui identifie l’erreur.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackagePart">
      <summary>Fournit une classe de base pour les composants stockés dans un <see cref="T:System.IO.Packaging.Package" />.  Cette classe est abstraite.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IO.Packaging.PackagePart" /> avec un <see cref="P:System.IO.Packaging.PackagePart.Package" /> parent spécifié et un URI de composant.</summary>
      <param name="package">
        <see cref="T:System.IO.Packaging.Package" /> parent du composant.</param>
      <param name="partUri">URI du composant, relatif à la racine du <see cref="T:System.IO.Packaging.Package" /> parent.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="package" /> ou <paramref name="partUri" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IO.Packaging.PackagePart" /> avec un <see cref="P:System.IO.Packaging.PackagePart.Package" /> parent spécifié, un URI de composant et un type de contenu MIME.</summary>
      <param name="package">
        <see cref="T:System.IO.Packaging.Package" /> parent du composant.</param>
      <param name="partUri">URI du composant, relatif à la racine du <see cref="T:System.IO.Packaging.Package" /> parent.</param>
      <param name="contentType">Type de contenu MIME du flux de données du composant.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="package" /> ou <paramref name="partUri" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> n'est pas un URI <see cref="T:System.IO.Packaging.PackagePart" /> valide.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String,System.IO.Packaging.CompressionOption)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IO.Packaging.PackagePart" /> avec un <see cref="P:System.IO.Packaging.PackagePart.Package" /> parent spécifié, un URI de composant, un type de contenu MIME et une <see cref="T:System.IO.Packaging.CompressionOption" />.</summary>
      <param name="package">
        <see cref="T:System.IO.Packaging.Package" /> parent du composant.</param>
      <param name="partUri">URI du composant, relatif à la racine du <see cref="T:System.IO.Packaging.Package" /> parent.</param>
      <param name="contentType">Type de contenu MIME du flux de données du composant.</param>
      <param name="compressionOption">Option de compression du flux de données du composant.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="package" /> ou <paramref name="partUri" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> n'est pas un URI <see cref="T:System.IO.Packaging.PackagePart" /> valide.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur <paramref name="compressionOption" /> n'est pas valide.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.CompressionOption">
      <summary>Obtient l'option de compression du flux de contenu du composant.</summary>
      <returns>Option de compression du flux de contenu du composant.</returns>
      <exception cref="T:System.InvalidOperationException">Le composant a été supprimé.  

ou - 
Le <see cref="P:System.IO.Packaging.PackagePart.Package" /> n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).</exception>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.ContentType">
      <summary>Obtient le type MIME du flux de contenu.</summary>
      <returns>Type MIME du flux de données de contenu de ce composant.</returns>
      <exception cref="T:System.InvalidOperationException">Le composant a été supprimé.  

ou - 
Le <see cref="P:System.IO.Packaging.PackagePart.Package" /> n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).  

ou 
La chaîne retournée par la méthode <see cref="M:System.IO.Packaging.PackagePart.GetContentTypeCore" /> de classe dérivée est vide.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
      <summary>Crée une relation au niveau du composant entre ce <see cref="T:System.IO.Packaging.PackagePart" /> et un <see cref="T:System.IO.Packaging.PackagePart" /> cible spécifié ou une ressource externe.</summary>
      <param name="targetUri">URI du composant cible.</param>
      <param name="targetMode">Une des valeurs de l'énumération. Par exemple, <see cref="F:System.IO.Packaging.TargetMode.Internal" /> si le composant cible est à l'intérieur du <see cref="T:System.IO.Packaging.Package" /> ; ou <see cref="F:System.IO.Packaging.TargetMode.External" /> si la cible est une ressource à l'extérieur du <see cref="T:System.IO.Packaging.Package" />.</param>
      <param name="relationshipType">Rôle de la relation.</param>
      <returns>Relation au niveau du composant entre ce <see cref="T:System.IO.Packaging.PackagePart" /> et le <see cref="T:System.IO.Packaging.PackagePart" /> cible ou la ressource externe.</returns>
      <exception cref="T:System.InvalidOperationException">Le composant a été supprimé.  

ou - 
Le <see cref="P:System.IO.Packaging.PackagePart.Package" /> n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetUri" /> ou <paramref name="relationshipType" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Le paramètre <paramref name="targetMode" /> n'est pas une valeur d'énumération <see cref="T:System.IO.Packaging.TargetMode" /> valide.</exception>
      <exception cref="T:System.ArgumentException">Le composant identifié par l'<paramref name="targetUri" /> est une relation (la cible d'une relation ne peut pas être une autre relation).  

ou - 
<paramref name="targetMode" /> est spécifié comme <see cref="F:System.IO.Packaging.TargetMode.Internal" /> mais <paramref name="targetUri" /> est un URI externe absolu.</exception>
      <exception cref="T:System.IO.IOException">Le package est en lecture seule (une nouvelle relation ne peut pas être ajoutée).</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
      <summary>Crée une relation au niveau du composant entre ce <see cref="T:System.IO.Packaging.PackagePart" /> et un <see cref="T:System.IO.Packaging.PackagePart" /> cible spécifié ou une ressource externe.</summary>
      <param name="targetUri">URI du composant cible.</param>
      <param name="targetMode">Une des valeurs de l'énumération. Par exemple, <see cref="F:System.IO.Packaging.TargetMode.Internal" /> si le composant cible est à l'intérieur du <see cref="T:System.IO.Packaging.Package" /> ; ou <see cref="F:System.IO.Packaging.TargetMode.External" /> si la cible est une ressource à l'extérieur du <see cref="T:System.IO.Packaging.Package" />.</param>
      <param name="relationshipType">Rôle de la relation.</param>
      <param name="id">ID unique pour la relation.</param>
      <returns>Relation au niveau du composant entre ce <see cref="T:System.IO.Packaging.PackagePart" /> et le <see cref="T:System.IO.Packaging.PackagePart" /> cible ou la ressource externe.</returns>
      <exception cref="T:System.InvalidOperationException">Le composant a été supprimé.  

ou - 
Le <see cref="P:System.IO.Packaging.PackagePart.Package" /> n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetUri" /> ou <paramref name="relationshipType" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Le paramètre <paramref name="targetMode" /> n'est pas une valeur d'énumération <see cref="T:System.IO.Packaging.TargetMode" /> valide.</exception>
      <exception cref="T:System.ArgumentException">Le composant identifié par l'<paramref name="targetUri" /> est une relation (la cible d'une relation ne peut pas être une autre relation).  

ou - 
<paramref name="targetMode" /> est spécifié comme <see cref="F:System.IO.Packaging.TargetMode.Internal" /> mais <paramref name="targetUri" /> est un URI externe absolu.</exception>
      <exception cref="T:System.IO.IOException">Le package est en lecture seule (une nouvelle relation ne peut pas être ajoutée).</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> n'est pas un identificateur XML valide.  

ou - 
Un composant avec l'<paramref name="id" /> spécifié existe déjà.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.DeleteRelationship(System.String)">
      <summary>Supprime un <see cref="T:System.IO.Packaging.PackageRelationship" /> au niveau du composant spécifié.</summary>
      <param name="id">
        <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> de la relation à supprimer.</param>
      <exception cref="T:System.InvalidOperationException">Le composant a été supprimé.  

ou - 
Le <see cref="P:System.IO.Packaging.PackagePart.Package" /> n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> est <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException">Le package est en lecture seule (les relations ne peuvent pas être supprimées).</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> n'est pas un identificateur XML valide.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetContentTypeCore">
      <summary>En cas de substitution dans une classe dérivée, retourne le type MIME du contenu du composant.</summary>
      <returns>Type MIME du contenu du composant.</returns>
      <exception cref="T:System.NotSupportedException">La classe dérivée ne fournit pas une implémentation de substitution requise pour la méthode <see cref="M:System.IO.Packaging.PackagePart.GetContentTypeCore" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetRelationship(System.String)">
      <summary>Retourne la relation avec l'<see cref="P:System.IO.Packaging.PackageRelationship.Id" /> spécifié.</summary>
      <param name="id">
        <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> de la relation à retourner.</param>
      <returns>Relation correspondant à l'<paramref name="id" />spécifié.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> n'est pas un identificateur XML valide.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="relationshipType" /> est une chaîne vide.</exception>
      <exception cref="T:System.InvalidOperationException">Le composant a été supprimé.  

ou - 
Le <see cref="P:System.IO.Packaging.PackagePart.Package" /> n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).  

ou - 
Une relation avec l'<paramref name="id" /> spécifié n'existe pas dans le package.</exception>
      <exception cref="T:System.IO.IOException">Le package est en écriture seule (impossible de lire les informations de relation).</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetRelationships">
      <summary>Retourne une collection de toutes les relations que possède ce composant.</summary>
      <returns>Collection de toutes les relations que possède le composant.</returns>
      <exception cref="T:System.InvalidOperationException">Le composant a été supprimé.  

ou - 
Le <see cref="P:System.IO.Packaging.PackagePart.Package" /> n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).</exception>
      <exception cref="T:System.IO.IOException">Le package est en écriture seule (impossible de lire les informations de relation).</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)">
      <summary>Retourne une collection de relations qui correspondent à un <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> spécifié.</summary>
      <param name="relationshipType">
        <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> des relations à trouver et à retourner dans la collection.</param>
      <returns>Collection de relations correspondant à un <paramref name="relationshipType" /> spécifié.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="relationshipType" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="relationshipType" /> est une chaîne vide.</exception>
      <exception cref="T:System.InvalidOperationException">Le composant a été supprimé.  

ou - 
Le <see cref="P:System.IO.Packaging.PackagePart.Package" /> n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).</exception>
      <exception cref="T:System.IO.IOException">Le package est en écriture seule (impossible de lire les informations de relation).</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStream">
      <summary>Retourne le flux du contenu du composant.</summary>
      <returns>Flux de données du contenu pour le composant.</returns>
      <exception cref="T:System.InvalidOperationException">Le composant a été supprimé.  

ou - 
Le <see cref="P:System.IO.Packaging.PackagePart.Package" /> n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).</exception>
      <exception cref="T:System.IO.IOException">L'objet de flux retourné par la méthode <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> de la sous-classe dérivée est <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode)">
      <summary>Retourne le flux de contenu ouvert dans un <see cref="T:System.IO.FileMode" /> E/S spécifié.</summary>
      <param name="mode">Mode d'E/S utilisé pour ouvrir le flux de contenu.</param>
      <returns>Flux de contenu du composant.</returns>
      <exception cref="T:System.InvalidOperationException">Le composant a été supprimé.  

ou - 
Le <see cref="P:System.IO.Packaging.PackagePart.Package" /> n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Le paramètre <paramref name="mode" /> n'est pas une valeur d'énumération <see cref="T:System.IO.FileMode" /> valide.</exception>
      <exception cref="T:System.IO.IOException">Le paramètre <paramref name="mode" /> n'est pas compatible avec le package ni avec le flux de données du composant.  

ou - 
L'objet de flux retourné par la méthode <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> de la sous-classe dérivée est <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode,System.IO.FileAccess)">
      <summary>Retourne le flux de contenu du composant ouvert avec un <see cref="T:System.IO.FileMode" /> et un <see cref="T:System.IO.FileAccess" /> spécifiés.</summary>
      <param name="mode">Mode d'E/S utilisé pour ouvrir le flux de contenu.</param>
      <param name="access">Autorisations d'accès à utiliser lors de l'ouverture du flux de contenu.</param>
      <returns>Flux de contenu du composant.</returns>
      <exception cref="T:System.InvalidOperationException">Le composant a été supprimé.  
ou 
Le <see cref="P:System.IO.Packaging.PackagePart.Package" /> n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Le paramètre <paramref name="mode" /> n'est pas une valeur d'énumération <see cref="T:System.IO.FileMode" /> valide.  
ou 
Le paramètre <paramref name="access" /> n'est pas une valeur d'énumération <see cref="T:System.IO.FileAccess" /> valide.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="mode" /> ou <paramref name="access" /> n'est pas compatible avec le package ni avec le flux de données du composant.  

ou - 
Le paramètre <paramref name="access" /> est spécifié comme <see cref="F:System.IO.FileAccess.Read" /> mais le paramètre <paramref name="mode" /> requiert l'accès en écriture.  (Les valeurs <see cref="T:System.IO.FileMode" /> pour <see cref="F:System.IO.FileMode.Create" />, <see cref="F:System.IO.FileMode.CreateNew" />, <see cref="F:System.IO.FileMode.Truncate" /> et <see cref="F:System.IO.FileMode.Append" /> requièrent un accès en <see cref="F:System.IO.FileAccess.Write" /> ou en <see cref="F:System.IO.FileAccess.ReadWrite" />.) 
ou - 
L'objet de flux retourné par la méthode <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> de la sous-classe dérivée est <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)">
      <summary>En cas de substitution dans une classe dérivée, retourne le flux de contenu du composant ouvert avec un <see cref="T:System.IO.FileMode" /> et un <see cref="T:System.IO.FileAccess" /> spécifiés.</summary>
      <param name="mode">Mode d'E/S utilisé pour ouvrir le flux de contenu.</param>
      <param name="access">Autorisations d'accès à utiliser lors de l'ouverture du flux de contenu.</param>
      <returns>Flux de contenu du composant.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.Package">
      <summary>Obtient le <see cref="T:System.IO.Packaging.Package" /> parent du composant.</summary>
      <returns>Package parent du composant.</returns>
      <exception cref="T:System.InvalidOperationException">Le composant a été supprimé.  

ou - 
Le <see cref="P:System.IO.Packaging.PackagePart.Package" /> n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.RelationshipExists(System.String)">
      <summary>Retourne une valeur indiquant si ce composant possède une relation avec un <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> spécifié.</summary>
      <param name="id">
        <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> de la relation à vérifier.</param>
      <returns>
        <see langword="true" /> si ce composant possède une relation avec l'<paramref name="id" />spécifié ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> n'est pas un identificateur XML valide.</exception>
      <exception cref="T:System.InvalidOperationException">Le composant a été supprimé.  

ou - 
Le <see cref="P:System.IO.Packaging.PackagePart.Package" /> n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).</exception>
      <exception cref="T:System.IO.IOException">Le package est en écriture seule (impossible de lire les informations de relation).</exception>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.Uri">
      <summary>Obtient URI du composant.</summary>
      <returns>URI Du composant relatif à la racine du package.</returns>
      <exception cref="T:System.InvalidOperationException">Le composant a été supprimé.  
ou 
Le <see cref="P:System.IO.Packaging.PackagePart.Package" /> n'est pas ouvert (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> ou <see cref="M:System.IO.Packaging.Package.Close" /> a été appelée).</exception>
    </member>
    <member name="T:System.IO.Packaging.PackagePartCollection">
      <summary>Représente une collection d'objets <see cref="T:System.IO.Packaging.PackagePart" />.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackagePartCollection.GetEnumerator">
      <summary>Retourne un énumérateur pour l'itération au sein des parties de la collection.</summary>
      <returns>Énumérateur pour l'itération au sein des éléments <see cref="T:System.IO.Packaging.PackagePart" /> de la collection.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackagePartCollection.System#Collections#Generic#IEnumerable{System#IO#Packaging#PackagePart}#GetEnumerator">
      <summary>Retourne un énumérateur qui itère au sein de la collection.</summary>
      <returns>Objet <see cref="T:System.Collections.Generic.IEnumerator`1" /> pouvant être utilisé pour itérer au sein de la collection.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackagePartCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>Objet <see cref="T:System.Collections.IEnumerator" /> pouvant être utilisé pour itérer au sein de la collection.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageProperties">
      <summary>Représente les propriétés principales d'un <see cref="T:System.IO.Packaging.Package" />.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageProperties.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IO.Packaging.PackageProperties" />.</summary>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Category">
      <summary>En cas de substitution dans une classe dérivée, obtient ou définit la catégorie du <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Catégorie du contenu du <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.ContentStatus">
      <summary>En cas de substitution dans une classe dérivée, obtient ou définit une valeur qui représente l'état du <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>État du contenu du <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.ContentType">
      <summary>En cas de substitution dans une classe dérivée, obtient ou définit une valeur qui représente le type du contenu du <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Type de contenu du <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Created">
      <summary>En cas de substitution dans une classe dérivée, obtient ou définit la date et l'heure à laquelle le <see cref="T:System.IO.Packaging.Package" /> a été créé.</summary>
      <returns>Date et heure de création du <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Creator">
      <summary>En cas de substitution dans une classe dérivée, obtient ou définit une valeur qui identifie l'individu ou entité qui a créé le <see cref="T:System.IO.Packaging.Package" /> et son contenu.</summary>
      <returns>Individu ou entité qui a créé le <see cref="T:System.IO.Packaging.Package" /> et son contenu.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Description">
      <summary>En cas de substitution dans une classe dérivée, obtient ou définit une description du contenu du <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Description du contenu du <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageProperties.Dispose">
      <summary>Libère toutes les ressources utilisées par l'instance <see cref="T:System.IO.Packaging.PackageProperties" />.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageProperties.Dispose(System.Boolean)">
      <summary>Libère les ressources non managées utilisées par l'instance <see cref="T:System.IO.Packaging.PackageProperties" /> et éventuellement les ressources managées.</summary>
      <param name="disposing">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Identifier">
      <summary>En cas de substitution dans une classe dérivée, obtient ou définit une valeur qui identifie clairement le <see cref="T:System.IO.Packaging.Package" /> et son contenu.</summary>
      <returns>Valeur qui identifie clairement le <see cref="T:System.IO.Packaging.Package" /> et son contenu.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Keywords">
      <summary>En cas de substitution dans une classe dérivée, obtient ou définit une valeur qui définit un jeu délimité de mots clés pour prendre en charge la recherche et l'indexation du <see cref="T:System.IO.Packaging.Package" /> et son contenu.</summary>
      <returns>Jeu délimité de mots clés pour prendre en charge la recherche et l'indexation du <see cref="T:System.IO.Packaging.Package" /> et de son contenu.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Language">
      <summary>En cas de substitution dans une classe dérivée, obtient ou définit une valeur qui identifie le langage du contenu du <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Valeur qui identifie le langage du contenu du <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.LastModifiedBy">
      <summary>En cas de substitution dans une classe dérivée, obtient ou définit une valeur qui identifie l'utilisateur qui a modifié dernièrement le contenu du <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Utilisateur qui a modifié dernièrement le contenu du <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.LastPrinted">
      <summary>En cas de substitution dans une classe dérivée, obtient ou définit la date et l'heure à laquelle le contenu du <see cref="T:System.IO.Packaging.Package" /> a été imprimé pour la dernière fois.</summary>
      <returns>Date et heure à laquelle le contenu du <see cref="T:System.IO.Packaging.Package" /> a été imprimé pour la dernière fois.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Modified">
      <summary>En cas de substitution dans une classe dérivée, obtient ou définit la date et l'heure à laquelle le <see cref="T:System.IO.Packaging.Package" /> a été modifié pour la dernière fois.</summary>
      <returns>Date et heure à laquelle le <see cref="T:System.IO.Packaging.Package" /> a été modifié pour la dernière fois.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Revision">
      <summary>En cas de substitution dans une classe dérivée, obtient ou définit le numéro de révision du <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Numéro de révision de <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Subject">
      <summary>En cas de substitution dans une classe dérivée, obtient ou définit la rubrique du contenu du <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Rubrique du contenu du <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Title">
      <summary>En cas de substitution dans une classe dérivée, obtient ou définit le nom donné au <see cref="T:System.IO.Packaging.Package" /> et son contenu.</summary>
      <returns>Nom donné au <see cref="T:System.IO.Packaging.Package" /> et son contenu.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Version">
      <summary>En cas de substitution dans une classe dérivée, obtient ou définit le numéro de version du <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Numéro de version du <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationship">
      <summary>Représente une association entre un <see cref="T:System.IO.Packaging.Package" /> ou une <see cref="T:System.IO.Packaging.PackagePart" />, source et un objet cible qui peut être une <see cref="T:System.IO.Packaging.PackagePart" /> ou une ressource externe.</summary>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.Id">
      <summary>Obtient une chaîne qui identifie la relation.</summary>
      <returns>Chaîne qui identifie la relation.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.Package">
      <summary>Obtient le <see cref="T:System.IO.Packaging.Package" /> qui contient cette relation.</summary>
      <returns>Package qui contient cette relation.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.RelationshipType">
      <summary>Obtient le nom de type qualifié de la relation.</summary>
      <returns>Nom de type qualifié de la relation.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.SourceUri">
      <summary>Obtient l’URI du package ou du composant propriétaire de la relation.</summary>
      <returns>URI du <see cref="T:System.IO.Packaging.Package" /> ou du <see cref="T:System.IO.Packaging.PackagePart" /> propriétaire de la relation.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.TargetMode">
      <summary>Obtient une valeur qui indique si la cible de la relation est <see cref="F:System.IO.Packaging.TargetMode.Internal" /> ou <see cref="F:System.IO.Packaging.TargetMode.External" /> pour le <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Valeur d'énumération qui indique si <see cref="P:System.IO.Packaging.PackageRelationship.TargetUri" /> référence une ressource <see cref="F:System.IO.Packaging.TargetMode.Internal" /> ou <see cref="F:System.IO.Packaging.TargetMode.External" /> pour le <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.TargetUri">
      <summary>Obtient l'URI de la ressource cible de la relation.</summary>
      <returns>URI de la ressource cible.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationshipCollection">
      <summary>Représente une collection d'éléments <see cref="T:System.IO.Packaging.PackageRelationship" /> possédés par une <see cref="T:System.IO.Packaging.PackagePart" /> donnée ou le <see cref="T:System.IO.Packaging.Package" />.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipCollection.GetEnumerator">
      <summary>Retourne un énumérateur pour l'itération au sein des relations de la collection.</summary>
      <returns>Énumérateur pour l'itération au sein des éléments <see cref="T:System.IO.Packaging.PackageRelationship" /> de la collection.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Ce type ou ce membre prend en charge l’infrastructure Windows Presentation Foundation et n’est pas destiné à être utilisé directement à partir de votre code.</summary>
      <returns>Ne pas utiliser - utiliser plutôt <see cref="M:System.IO.Packaging.PackageRelationshipCollection.GetEnumerator" />.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationshipSelector">
      <summary>Définit les critères <see cref="T:System.IO.Packaging.PackageRelationship" /> de sélection des relations au niveau de la partie ou package.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IO.Packaging.PackageRelationshipSelector" />.</summary>
      <param name="sourceUri">URI (Uniform Resource Identifier) de <see cref="T:System.IO.Packaging.PackagePart" /> ou <see cref="T:System.IO.Packaging.Package" /> (<c>SourceUri</c>="/") qui possède la relation.</param>
      <param name="selectorType">Type de <paramref name="selectionCriteria" />, par relation <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" /> ou par relation <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Type" />.</param>
      <param name="selectionCriteria">Chaîne de qualification utilisée pour sélectionner les relations basées sur le <paramref name="selectorType" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceUri" /> ou <paramref name="selectionCriteria" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Le paramètre <paramref name="selectorType" /> n’est pas valide.</exception>
      <exception cref="T:System.Xml.XmlException">Le paramètre <paramref name="selectorType" /> est <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" /> mais <paramref name="selectionCriteria" /> n'est pas un langage de définition de schéma XML (XSD)identificateur (ID) valide.</exception>
      <exception cref="T:System.ArgumentException">Le <paramref name="selectionCriteria" /> n'est pas valide pour le <paramref name="selectorType" /> spécifié.
ou
Le <paramref name="sourceUri" /> n'est pas la racine <see cref="T:System.IO.Packaging.Package" /> ("/") et n'est pas non plus un <see cref="T:System.IO.Packaging.PackagePart" />URI valide.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipSelector.Select(System.IO.Packaging.Package)">
      <summary>Retourne une liste d'objets <see cref="T:System.IO.Packaging.PackageRelationship" /> qui correspondent au <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SourceUri" /> défini, <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SelectorType" /> et <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SelectionCriteria" />.</summary>
      <param name="package">Package à partir duquel sélectionner les relations basées sur les critères de sélection.</param>
      <returns>Liste des relations qui correspondent aux paramètres de sélection spécifiés au constructeur <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="package" /> est <see langword="null" />.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationshipSelector.SelectionCriteria">
      <summary>Obtient les critères de sélection spécifiés au constructeur <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />.</summary>
      <returns>Les critères de sélection basés sur le <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SelectorType" /> de <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" /> ou <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Type" /> spécifiés au constructeur <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationshipSelector.SelectorType">
      <summary>Obtient le <see cref="T:System.IO.Packaging.PackageRelationshipSelectorType" /> spécifié pour le constructeur <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />.</summary>
      <returns>Le type de sélecteur de <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" /> ou <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Type" /> spécifié au constructeur <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationshipSelector.SourceUri">
      <summary>Obtient l'URI du package racine ("/") ou <see cref="P:System.IO.Packaging.PackagePart.Uri" /> de la partie spécifié au constructeur <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" /> comme le propriétaire de la relation.</summary>
      <returns>URI du package racine ("/") ou <see cref="P:System.IO.Packaging.PackagePart.Uri" /> de la partie spécifié au constructeur <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" /> comme le propriétaire de la relation.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationshipSelectorType">
      <summary>Spécifie le type de critères de sélection utilisés pour faire correspondre et retourner des sélections <see cref="T:System.IO.Packaging.PackageRelationship" /> à travers un <see cref="T:System.IO.Packaging.PackageRelationshipSelector" />.</summary>
    </member>
    <member name="F:System.IO.Packaging.PackageRelationshipSelectorType.Id">
      <summary>Les sélections <see cref="T:System.IO.Packaging.PackageRelationship" /> se font par <see cref="P:System.IO.Packaging.PackageRelationship.Id" />.</summary>
    </member>
    <member name="F:System.IO.Packaging.PackageRelationshipSelectorType.Type">
      <summary>Les sélections <see cref="T:System.IO.Packaging.PackageRelationship" /> se font par <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />.</summary>
    </member>
    <member name="T:System.IO.Packaging.PackUriHelper">
      <summary>Fournit des méthodes utilitaires pour composer et analyser des objets URI à en-tête pack.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.ComparePackUri(System.Uri,System.Uri)">
      <summary>Retourne une valeur qui indique si deux URI à en-tête pack sont équivalents.</summary>
      <param name="firstPackUri">Premier URI à en-tête pack.</param>
      <param name="secondPackUri">Deuxième URI à en-tête pack.</param>
      <returns>Entier signé indiquant la relation entre <paramref name="firstPackUri" /> et <paramref name="secondPackUri" />.  
  Value 
  Signification 
  Inférieure à 0 
 <paramref name="firstPackUri" /> est inférieur à <paramref name="secondPackUri" />.  

  0 
 <paramref name="firstPackUri" /> équivaut à <paramref name="secondPackUri" />.  

  Supérieure à 0 
 <paramref name="firstPackUri" /> est supérieur à <paramref name="secondPackUri" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="firstPackUri" /> ou <paramref name="secondPackUri" /> n’est pas un URI absolu.  
ou 
<paramref name="firstPackUri" /> ou <paramref name="secondPackUri" /> ne commence pas par un schéma “pack://”.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)">
      <summary>Retourne une valeur qui indique si deux URI de parties de package sont équivalents.</summary>
      <param name="firstPartUri">URI du premier <see cref="T:System.IO.Packaging.PackagePart" />.</param>
      <param name="secondPartUri">URI du deuxième <see cref="T:System.IO.Packaging.PackagePart" />.</param>
      <returns>Valeur indiquant la relation entre <paramref name="firstPartUri" /> et <paramref name="secondPartUri" />.  
  Value 
  Signification 
  Inférieure à 0 
 <paramref name="firstPartUri" /> est inférieur à <paramref name="secondPartUri" />.  

  0 
 <paramref name="firstPartUri" /> équivaut à <paramref name="secondPartUri" />.  

  Supérieure à 0 
 <paramref name="firstPartUri" /> est supérieur à <paramref name="secondPartUri" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="firstPartUri" /> ou <paramref name="secondPartUri" /> n'est pas une syntaxe d'URI de composant valide.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.Create(System.Uri)">
      <summary>Crée un URI à en-tête pack qui pointe vers un package.</summary>
      <param name="packageUri">URI du <see cref="T:System.IO.Packaging.Package" /> référencé.</param>
      <returns>URI à en-tête pack pour le <see cref="T:System.IO.Packaging.Package" /> référencé par le <paramref name="packageUri" /> donné.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="packageUri" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="packageUri" /> n’est pas un URI absolu.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri)">
      <summary>Crée un URI à en-tête pack en fonction d’un <see cref="T:System.IO.Packaging.Package" /> URI et de l’URI d’une partie du package.</summary>
      <param name="packageUri">URI du <see cref="T:System.IO.Packaging.Package" />.</param>
      <param name="partUri">URI de <see cref="T:System.IO.Packaging.PackagePart" /> dans le package.</param>
      <returns>URI à en-tête pack du <see cref="T:System.IO.Packaging.PackagePart" /> donné.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="packageUri" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="packageUri" /> n’est pas un URI absolu.  

ou - 
<paramref name="partUri" /> n’est pas une syntaxe d’URI de partie valide.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri,System.String)">
      <summary>Crée un URI à en-tête pack en fonction d’un <see cref="T:System.IO.Packaging.Package" /> URI, de l’URI d’une partie du package et d’un fragment "#" à ajouter.</summary>
      <param name="packageUri">URI du <see cref="T:System.IO.Packaging.Package" />.</param>
      <param name="partUri">URI de <see cref="T:System.IO.Packaging.PackagePart" /> dans le package.</param>
      <param name="fragment">Référence « # » qui identifie un élément dans la partie du package.</param>
      <returns>URI à en-tête pack qui identifie le package spécifié, la partie du package et le fragment.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="packageUri" /> construit par défaut est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="packageUri" /> n’est pas un URI absolu.  

ou - 
<paramref name="partUri" /> n’est pas une syntaxe d’URI de partie valide.  

ou 
 <paramref name="fragment" /> est vide ou commence par « # ».</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)">
      <summary>Crée un URI de <see cref="T:System.IO.Packaging.PackagePart" /> mis en forme.</summary>
      <param name="partUri">URI du <see cref="T:System.IO.Packaging.PackagePart" /> dans le package.</param>
      <returns>URI de <see cref="T:System.IO.Packaging.PackagePart" /> mis en forme.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> n’est pas un <see cref="T:System.Uri" /> absolu.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)">
      <summary>Retourne la forme normalisée d'un URI de <see cref="T:System.IO.Packaging.PackagePart" /> spécifié.</summary>
      <param name="partUri">URI de <see cref="T:System.IO.Packaging.PackagePart" /> à normaliser.</param>
      <returns>Forme normalisée de l'<paramref name="partUri" /> donné.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> n’a pas une syntaxe <see cref="T:System.Uri" /> valide.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)">
      <summary>Retourne l’URI interne qui pointe vers le package entier d’un URI à en-tête pack spécifié.</summary>
      <param name="packUri">URI à en-tête pack à partir duquel retourner l’URI de <see cref="T:System.IO.Packaging.Package" />.</param>
      <returns>URI de <see cref="T:System.IO.Packaging.Package" /> à partir du <paramref name="packUri" /> spécifié.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="packUri" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="packUri" /> n’est pas un <see cref="T:System.Uri" /> absolu.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)">
      <summary>Retourne l’URI d’un <see cref="T:System.IO.Packaging.PackagePart" /> dans un URI à en-tête pack spécifié.</summary>
      <param name="packUri">URI à en-tête pack à partir duquel retourner l’URI de <see cref="T:System.IO.Packaging.PackagePart" />.</param>
      <returns>L’URI de <see cref="T:System.IO.Packaging.PackagePart" /> dans le <paramref name="packUri" /> donné, ou <see langword="null" /> si <paramref name="packUri" /> pointe vers un package plutôt que vers un <see cref="T:System.IO.Packaging.PackagePart" />.</returns>
      <exception cref="T:System.ArgumentNullException">Si la <paramref name="packUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Si <paramref name="packUri" /> n’est pas un <see cref="T:System.Uri" /> absolu.

ou -

<paramref name="packUri" /> n’a pas le schéma « pack:// ».
ou 
Le partUri extrait de <paramref name="packUri" /> n’est pas conforme à la syntaxe partUri valide.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)">
      <summary>Retourne l’URI de la partie de relation associée à un <see cref="T:System.IO.Packaging.PackagePart" /> spécifié.</summary>
      <param name="partUri">
        <see cref="P:System.IO.Packaging.PackagePart.Uri" /> du <see cref="T:System.IO.Packaging.PackagePart" /> dont l'URI du <see cref="T:System.IO.Packaging.PackageRelationship" /> associé doit être retourné.</param>
      <returns>URI du composant <see cref="T:System.IO.Packaging.PackageRelationship" /> associé au <see cref="T:System.IO.Packaging.PackagePart" /> identifié par <paramref name="partUri" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La syntaxe de <paramref name="partUri" /> n'est pas valide pour un URI de composant de package.  
ou 
 <paramref name="partUri" /> est un URI absolu.  
ou 
 <paramref name="partUri" /> fait référence à un composant de relation.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)">
      <summary>Retourne l'URI relatif entre deux URI de <see cref="T:System.IO.Packaging.PackagePart" /> spécifiés.</summary>
      <param name="sourcePartUri">URI du composant source.</param>
      <param name="targetPartUri">URI du composant cible.</param>
      <returns>URI relatif entre <paramref name="sourcePartUri" /> et <paramref name="targetPartUri" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourcePartUri" /> ou <paramref name="targetPartUri" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="sourcePartUri" /> ou <paramref name="targetPartUri" /> n’a pas une syntaxe <see cref="T:System.Uri" /> valide.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(System.Uri)">
      <summary>Retourne le <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> à partir du <see cref="T:System.IO.Packaging.PackageRelationship" /> avec un URI spécifié.</summary>
      <param name="relationshipPartUri">URI du composant de relation à partir duquel retourner le <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />.</param>
      <returns>
        <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> du <see cref="T:System.IO.Packaging.PackagePart" /> à partir de la relation avec le <paramref name="relationshipPartUri" /> spécifié.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="relationshipPartUri" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="relationshipPartUri" /> est un URIabsolu.  

ou - 
La syntaxe <paramref name="relationshipPartUri" /> n'est pas valide pour une <see cref="T:System.IO.Packaging.PackagePart" />.  

ou 
 <paramref name="relationshipPartUri" /> ne fait pas référence à un composant de relation.  

ou - 
Le <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> de la partie de relation référence une autre partie de relation (non valide).</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.IsRelationshipPartUri(System.Uri)">
      <summary>Retourne une valeur qui indique si un URI spécifié est l’URI d’un composant <see cref="T:System.IO.Packaging.PackageRelationship" />.</summary>
      <param name="partUri">URIà vérifier pour un composant <see cref="T:System.IO.Packaging.PackageRelationship" />.</param>
      <returns>
        <see langword="true" /> si <paramref name="partUri" /> identifie un composant <see cref="T:System.IO.Packaging.PackageRelationship" /> ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> est un URIabsolu.  

ou - 
<paramref name="partUri" /> n'est pas une syntaxe de <see cref="T:System.IO.Packaging.PackagePart" /> valide.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)">
      <summary>Retourne un URI de composant à partir d'un URI de composant source et d'un URI avec chemin d'accès relatif à un composant cible.</summary>
      <param name="sourcePartUri">URI du composant source, ou « / » pour désigner la racine du <see cref="T:System.IO.Packaging.Package" />.</param>
      <param name="targetUri">URI relatif vers le composant cible.</param>
      <returns>URI du composant cible résolu entre le <paramref name="SourcePartUri" /> spécifié et les paramètres <paramref name="targetUri" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourcePartUri" /> ou <paramref name="targetUri" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="sourcePartUri" /> n'est pas un URI de composant valide.  
ou 
 <paramref name="targetUri" /> n'est pas un URI relatif valide.</exception>
    </member>
    <member name="F:System.IO.Packaging.PackUriHelper.UriSchemePack">
      <summary>Définit le nom de schéma URI à en-tête pack “pack”.</summary>
    </member>
    <member name="T:System.IO.Packaging.RightsManagementInformation">
      <summary>Représente les informations de gestion des droits numériques (DRM) stockées dans un <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</summary>
    </member>
    <member name="P:System.IO.Packaging.RightsManagementInformation.CryptoProvider">
      <summary>Obtient ou définit le <see cref="T:System.Security.RightsManagement.CryptoProvider" /> pour accéder au flux de données chiffré de gestion des droits du package.</summary>
      <returns>
        <see cref="T:System.Security.RightsManagement.CryptoProvider" /> d'accès aux informations de gestion des droits.</returns>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.DeleteUseLicense(System.Security.RightsManagement.ContentUser)">
      <summary>Supprime la <see cref="T:System.Security.RightsManagement.UseLicense" /> pour un utilisateur spécifié du flux de données chiffré de gestion des droits.</summary>
      <param name="userKey">Utilisateur de la <see cref="T:System.Security.RightsManagement.UseLicense" /> à supprimer.</param>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.GetEmbeddedUseLicenses">
      <summary>Retourne une collection de dictionnaires d'utilisateurs et de paires clé/valeur <see cref="T:System.Security.RightsManagement.UseLicense" /> du flux de données chiffré de gestion des droits.</summary>
      <returns>Collection d'utilisateurs et de paires clé/valeur <see cref="T:System.Security.RightsManagement.UseLicense" /> contenus dans le package protégé managé par des droits.</returns>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.LoadPublishLicense">
      <summary>Retourne la <see cref="T:System.Security.RightsManagement.PublishLicense" /> incorporée depuis le flux de données chiffré de gestion des droits.</summary>
      <returns>
        <see cref="T:System.Security.RightsManagement.PublishLicense" /> incorporée ; ou <see langword="null" />, si le package ne contient pas de <see cref="T:System.Security.RightsManagement.PublishLicense" />.</returns>
      <exception cref="T:System.IO.FileFormatException">Les informations de gestion de droits dans ce package ne peuvent pas être lues par la version actuelle de cette classe.</exception>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.LoadUseLicense(System.Security.RightsManagement.ContentUser)">
      <summary>Retourne une <see cref="T:System.Security.RightsManagement.UseLicense" /> incorporée d'un utilisateur spécifié depuis le flux de données chiffré de gestion des droits.</summary>
      <param name="userKey">Utilisateur ou groupe d'utilisateurs pour lequel retourner la <see cref="T:System.Security.RightsManagement.UseLicense" />.</param>
      <returns>
        <see cref="T:System.Security.RightsManagement.UseLicense" /> pour l'utilisateur spécifié ; ou <see langword="null" />, si le package ne contient pas une <see cref="T:System.Security.RightsManagement.UseLicense" /> qui correspond à la <paramref name="userKey" /> donnée.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="userKey" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileFormatException">Les informations de gestion de droits dans ce package ne peuvent pas être lues par la version actuelle de cette classe.</exception>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.SavePublishLicense(System.Security.RightsManagement.PublishLicense)">
      <summary>Enregistre une <see cref="T:System.Security.RightsManagement.PublishLicense" /> donnée sur le flux de données chiffré de gestion des droits.</summary>
      <param name="publishLicense">Licence de publication à stocker et incorporer dans le package.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="publishLicense" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileFormatException">Les informations de gestion de droits dans ce package ne peuvent pas être lues par la version actuelle de cette classe.</exception>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.SaveUseLicense(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.UseLicense)">
      <summary>Enregistre une <see cref="T:System.Security.RightsManagement.UseLicense" /> donnée pour un utilisateur spécifié sur le flux de données chiffré de gestion des droits.</summary>
      <param name="userKey">Utilisateur de la <see cref="T:System.Security.RightsManagement.UseLicense" />.</param>
      <param name="useLicense">Licence d'utilisation à stocker et incorporer dans le package.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="userKey" /> ou le paramètre <paramref name="useLicense" /> est <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileFormatException">Les informations de gestion de droits dans ce package ne peuvent pas être lues par la version actuelle de cette classe.</exception>
    </member>
    <member name="T:System.IO.Packaging.SignatureVerificationEventArgs">
      <summary>Spécifie les arguments d'événement fournis au <see cref="T:System.IO.Packaging.InvalidSignatureEventHandler" />.</summary>
    </member>
    <member name="P:System.IO.Packaging.SignatureVerificationEventArgs.Signature">
      <summary>Obtient la signature numérique vérifiée.</summary>
      <returns>Signature numérique vérifiée.</returns>
    </member>
    <member name="P:System.IO.Packaging.SignatureVerificationEventArgs.VerifyResult">
      <summary>Obtient l'erreur de vérification de la signature.</summary>
      <returns>Erreur de vérification de la signature.</returns>
    </member>
    <member name="T:System.IO.Packaging.StorageInfo">
      <summary>Fournit un accès et des informations pour manipuler des magasins de données dans un <see cref="T:System.IO.Packaging.Package" />.</summary>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.CreateStream(System.String)">
      <summary>Crée un flux de données avec un nom donné.</summary>
      <param name="name">Nom du nouveau flux de données.</param>
      <returns>Nouveau flux de données avec le <paramref name="name" /> spécifié.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.CreateStream(System.String,System.IO.Packaging.CompressionOption,System.IO.Packaging.EncryptionOption)">
      <summary>Crée un flux de données avec un nom donné, <see cref="T:System.IO.Packaging.CompressionOption" /> et <see cref="T:System.IO.Packaging.EncryptionOption" />.</summary>
      <param name="name">Nom du nouveau flux de données.</param>
      <param name="compressionOption">Option de compression pour le flux de données.</param>
      <param name="encryptionOption">Option de chiffrement du flux de données.</param>
      <returns>Nouveau flux de données avec les <paramref name="name" />, <paramref name="compressionOption" /> et <paramref name="encryptionOption" /> spécifiés.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.CreateSubStorage(System.String)">
      <summary>Crée un <see cref="T:System.IO.Packaging.StorageInfo" /> enfant avec ce <see cref="T:System.IO.Packaging.StorageInfo" /> comme parent.</summary>
      <param name="name">Nom du nouveau magasin de données enfant.</param>
      <returns>Nouveau magasin de données enfant.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="name" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.DeleteStream(System.String)">
      <summary>Supprime le flux de données du nom spécifié.</summary>
      <param name="name">Nom <see cref="T:System.IO.Packaging.StreamInfo" /> du flux de données à supprimer.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="name" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.DeleteSubStorage(System.String)">
      <summary>Supprime un sous-magasin spécifié.</summary>
      <param name="name">Nom du sous-magasin à supprimer.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="name" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.GetStreamInfo(System.String)">
      <summary>Retourne l'instance <see cref="T:System.IO.Packaging.StreamInfo" /> portant le nom donné.</summary>
      <param name="name">Nom de l'instance de <see cref="T:System.IO.Packaging.StreamInfo" /> à retourner.</param>
      <returns>Flux de données avec le <paramref name="name" /> spécifié.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="name" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.GetStreams">
      <summary>Retourne un tableau des instances <see cref="T:System.IO.Packaging.StreamInfo" /> contenues actuellement dans ce magasin.</summary>
      <returns>Tableau des objets <see cref="T:System.IO.Packaging.StreamInfo" />, chacun pointant vers un flux d'E/S défini dans ce magasin.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.GetSubStorageInfo(System.String)">
      <summary>Retourne le sous-magasin enfant avec un nom donné.</summary>
      <param name="name">Nom du sous-magasin à retourner.</param>
      <returns>Sous-magasin enfant ayant le <paramref name="name" /> spécifié.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="name" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.GetSubStorages">
      <summary>Retourne un tableau des sous-magasins enfants actuellement contenus dans ce magasin.</summary>
      <returns>Un tableau d'objets <see cref="T:System.IO.Packaging.StorageInfo" />, chacun pointant vers un sous-magasin défini dans ce magasin.</returns>
    </member>
    <member name="P:System.IO.Packaging.StorageInfo.Name">
      <summary>Obtient le nom du magasin.</summary>
      <returns>Nom de ce magasin.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.StreamExists(System.String)">
      <summary>Retourne une valeur qui indique si un flux de données donné existe.</summary>
      <param name="name">Nom de <see cref="T:System.IO.Packaging.StreamInfo" /> à vérifier.</param>
      <returns>
        <see langword="true" /> si un flux de données existe avec le <paramref name="name" /> spécifié ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.SubStorageExists(System.String)">
      <summary>Retourne une valeur qui indique si un sous-magasin enfant donné existe.</summary>
      <param name="name">Nom de <see cref="T:System.IO.Packaging.StorageInfo" /> enfant à vérifier.</param>
      <returns>
        <see langword="true" /> si un sous-magasin enfant avec le <paramref name="name" /> spécifié existe ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.IO.Packaging.StreamInfo">
      <summary>Fournit un accès et des informations pour manipuler des flux de données E/S dans un <see cref="T:System.IO.Packaging.Package" />.</summary>
    </member>
    <member name="P:System.IO.Packaging.StreamInfo.CompressionOption">
      <summary>Reçoit le paramètre <see cref="T:System.IO.Packaging.CompressionOption" /> pour le flux de données.</summary>
      <returns>Paramètre de compression pour le flux de données du package.</returns>
    </member>
    <member name="P:System.IO.Packaging.StreamInfo.EncryptionOption">
      <summary>Reçoit le paramètre <see cref="T:System.IO.Packaging.EncryptionOption" /> pour le flux de données.</summary>
      <returns>Paramètre de chiffrement pour le flux de données du package.</returns>
    </member>
    <member name="M:System.IO.Packaging.StreamInfo.GetStream">
      <summary>Retourne un flux de données ouvert dans un <see cref="T:System.IO.FileMode" /> par défaut et <see cref="T:System.IO.FileAccess" />.</summary>
      <returns>Flux de données E/S ouvert dans une racine <see cref="T:System.IO.Packaging.Package" /> par défaut <see cref="T:System.IO.FileMode" /> et <see cref="T:System.IO.FileAccess" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.StreamInfo.GetStream(System.IO.FileMode)">
      <summary>Retourne un flux de données E/S ouvert dans un <see cref="T:System.IO.FileMode" /> spécifié.</summary>
      <param name="mode">Mode de fichier dans lequel ouvrir le flux de données.</param>
      <returns>Flux de données ouvert dans le <paramref name="mode" /> de fichier spécifié.</returns>
    </member>
    <member name="M:System.IO.Packaging.StreamInfo.GetStream(System.IO.FileMode,System.IO.FileAccess)">
      <summary>Retourne un flux de données E/S ouvert dans un <see cref="T:System.IO.FileMode" /> spécifié et avec un <see cref="T:System.IO.FileAccess" />donné.</summary>
      <param name="mode">Mode de fichier dans lequel ouvrir le flux de données.</param>
      <param name="access">Mode d'accès au fichier dans lequel lire ou écrire le flux de données.</param>
      <returns>Flux de données E/S ouvert dans le <see cref="T:System.IO.FileMode" /> spécifié et avec un <see cref="T:System.IO.FileAccess" /> donné.</returns>
    </member>
    <member name="P:System.IO.Packaging.StreamInfo.Name">
      <summary>Obtient le nom du flux de données.</summary>
      <returns>Nom de ce flux de données.</returns>
    </member>
    <member name="T:System.IO.Packaging.TargetMode">
      <summary>Spécifie si la cible d'un <see cref="T:System.IO.Packaging.PackageRelationship" /> se trouve à l'intérieur ou à l'extérieur de <see cref="T:System.IO.Packaging.Package" />.</summary>
    </member>
    <member name="F:System.IO.Packaging.TargetMode.External">
      <summary>La relation référence une ressource qui est externe au package.</summary>
    </member>
    <member name="F:System.IO.Packaging.TargetMode.Internal">
      <summary>La relation référence un composant qui se trouve à l'intérieur du package.</summary>
    </member>
    <member name="T:System.IO.Packaging.VerifyResult">
      <summary>Spécifie le résultat d’une vérification de certificat ou de signature.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.CertificateRequired">
      <summary>Le certificat X.509 n’est pas disponible pour vérifier la signature.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.InvalidCertificate">
      <summary>Le certificat X.509 n’est pas valide.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.InvalidSignature">
      <summary>La signature n'est pas valide.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.NotSigned">
      <summary>Le package ou composant spécifié n’a pas de signature.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.ReferenceNotFound">
      <summary>Une relation de référence à la signature est introuvable.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.Success">
      <summary>La vérification a réussi.</summary>
    </member>
    <member name="T:System.IO.Packaging.ZipPackage">
      <summary>Implémente une sous-classe dérivée de la classe de base <see cref="T:System.IO.Packaging.Package" /> abstraite. La classe <see cref="T:System.IO.Packaging.ZipPackage" /> utilise un fichier d’archives .zip comme magasin conteneur. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="T:System.IO.Packaging.ZipPackagePart">
      <summary>Représente un composant qui est stocké dans un <see cref="T:System.IO.Packaging.ZipPackage" />.</summary>
    </member>
    <member name="T:System.Security.Permissions.MediaPermission">
      <summary>
        <see cref="T:System.Security.Permissions.MediaPermission" /> décrit un jeu d’autorisations de sécurité qui contrôle la capacité des médias audio, des supports d’images et des médias vidéo à fonctionner dans une application Windows Presentation Foundation (WPF) de confiance partielle.</summary>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.MediaPermission" />.</summary>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionAudio)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.MediaPermission" /> en spécifiant le niveau d’autorisation audio.</summary>
      <param name="permissionAudio">Valeur énumérée de <see cref="T:System.Security.Permissions.MediaPermissionAudio" />.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionAudio,System.Security.Permissions.MediaPermissionVideo,System.Security.Permissions.MediaPermissionImage)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.MediaPermission" />, en spécifiant les niveaux d’autorisation audio, vidéo et d’image.</summary>
      <param name="permissionAudio">Valeur énumérée de <see cref="T:System.Security.Permissions.MediaPermissionAudio" />.</param>
      <param name="permissionVideo">Valeur énumérée de <see cref="T:System.Security.Permissions.MediaPermissionVideo" />.</param>
      <param name="permissionImage">Valeur énumérée de <see cref="T:System.Security.Permissions.MediaPermissionImage" />.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionImage)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.MediaPermission" />, en spécifiant le niveau d’autorisation d’image.</summary>
      <param name="permissionImage">Valeur énumérée de <see cref="T:System.Security.Permissions.MediaPermissionImage" />.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionVideo)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.MediaPermission" />, en spécifiant le niveau d’autorisation vidéo.</summary>
      <param name="permissionVideo">Valeur énumérée de <see cref="T:System.Security.Permissions.MediaPermissionVideo" />.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.MediaPermission" />, en spécifiant un état d’autorisation.</summary>
      <param name="state">Valeur énumérée de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="P:System.Security.Permissions.MediaPermission.Audio">
      <summary>Obtient la valeur actuelle du niveau d’autorisation audio.</summary>
      <returns>Niveau d’autorisation audio.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.Copy">
      <summary>Crée et retourne une copie identique de l’autorisation actuelle.</summary>
      <returns>Copie de l’autorisation actuelle.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruit une autorisation avec un état spécifié à partir d’un encodage XML.</summary>
      <param name="securityElement">Encodage XML à utiliser pour reconstruire l’autorisation.</param>
    </member>
    <member name="P:System.Security.Permissions.MediaPermission.Image">
      <summary>Obtient la valeur actuelle du niveau d’autorisation d’image.</summary>
      <returns>Niveau d’autorisation d’image.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.Intersect(System.Security.IPermission)">
      <summary>Crée et retourne une autorisation qui constitue l’intersection entre l’autorisation actuelle et l’autorisation spécifiée.</summary>
      <param name="target">Autorisation à croiser avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>L'intersection de deux autorisations est une autorisation qui décrit l'état qu'elles décrivent en commun. Seule une demande qui transmet les deux autorisations d’origine est valide pour l’autorisation croisée.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Détermine si l’autorisation actuelle est un sous-ensemble de l’autorisation spécifiée.</summary>
      <param name="target">Autorisation qui doit être testée pour la relation de sous-ensemble. Cette autorisation doit être du même type que l’autorisation actuelle.</param>
      <returns>
        <see langword="true" /> si l’autorisation actuelle est un sous-ensemble de l’autorisation spécifiée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.IsUnrestricted">
      <summary>Retourne une valeur qui indique si l’autorisation actuelle est illimitée.</summary>
      <returns>
        <see langword="true" /> si les autorisations audio, image et vidéo sont toutes non restreintes ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.ToXml">
      <summary>Crée un encodage XML de l’autorisation et de son état actuel.</summary>
      <returns>Codage XML de l’autorisation, y compris les informations d’état éventuelles.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.Union(System.Security.IPermission)">
      <summary>Crée une autorisation qui est l’union de l’autorisation actuelle et de l’autorisation spécifiée.</summary>
      <param name="target">Autorisation à combiner avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>Nouvelle autorisation qui représente l’union de l’autorisation actuelle et de l’autorisation spécifiée.</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermission.Video">
      <summary>Obtient la valeur actuelle du niveau d’autorisation sur les vidéos.</summary>
      <returns>Niveau d’autorisation sur le support.</returns>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionAttribute">
      <summary>Permet d’appliquer les actions de sécurité de <see cref="T:System.Security.Permissions.MediaPermission" /> au code à l’aide de la sécurité déclarative.</summary>
    </member>
    <member name="M:System.Security.Permissions.MediaPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initialise une nouvelle instance de <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />.</summary>
      <param name="action">Une des valeurs de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="P:System.Security.Permissions.MediaPermissionAttribute.Audio">
      <summary>Obtient ou définit le niveau d’autorisation audio pour l’élément <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />.</summary>
      <returns>État de l’élément <see cref="T:System.Security.Permissions.MediaPermissionAudio" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermissionAttribute.CreatePermission">
      <summary>Crée et retourne un nouveau <see cref="T:System.Security.Permissions.MediaPermission" />.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.MediaPermission" /> qui correspond à cet attribut.</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermissionAttribute.Image">
      <summary>Obtient ou définit le niveau d’autorisation d’image pour <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />.</summary>
      <returns>État de l’élément <see cref="T:System.Security.Permissions.MediaPermissionImage" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermissionAttribute.Video">
      <summary>Obtient ou définit le niveau d’autorisation pour le <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />.</summary>
      <returns>État de l’élément <see cref="T:System.Security.Permissions.MediaPermissionVideo" />.</returns>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionAudio">
      <summary>Spécifie le niveau d'autorisation audio.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.AllAudio">
      <summary>Autorisation qui permet une lecture audio non restreinte.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.NoAudio">
      <summary>Autorisation qui refuse toute lecture audio.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.SafeAudio">
      <summary>Autorisation qui permet une lecture audio sûre et limitée, ce qui implique de refuser l'accès en continu au fichier audio.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.SiteOfOriginAudio">
      <summary>Autorisation qui permet uniquement la lecture audio des fichiers localisés sur le site d'origine de l'application.</summary>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionImage">
      <summary>Spécifie le niveau d'autorisation pour les images.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.AllImage">
      <summary>Autorisation qui permet l'affichage non restreint des images.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.NoImage">
      <summary>Autorisation qui refuse l'affichage de toutes les images.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.SafeImage">
      <summary>Autorisation qui permet l'affichage d'images sûr et limité, ce qui implique de refuser l'accès en continu au fichier image.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.SiteOfOriginImage">
      <summary>Autorisation qui permet uniquement l'affichage des images localisées sur le site d'origine de l'application.</summary>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionVideo">
      <summary>Spécifie le niveau d'autorisation vidéo.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.AllVideo">
      <summary>Autorisation qui permet une lecture vidéo non restreinte.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.NoVideo">
      <summary>Autorisation qui refuse toute lecture vidéo.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.SafeVideo">
      <summary>Autorisation qui permet une lecture vidéo sûre et limitée, ce qui implique de refuser l'accès en continu au fichier vidéo.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.SiteOfOriginVideo">
      <summary>Autorisation qui permet uniquement la lecture vidéo des fichiers localisés sur le site d'origine de l'application.</summary>
    </member>
    <member name="T:System.Security.Permissions.WebBrowserPermission">
      <summary>L’objet <see cref="T:System.Security.Permissions.WebBrowserPermission" /> contrôle la capacité à créer le contrôle WebBrowser.</summary>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.WebBrowserPermission" />.</summary>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.WebBrowserPermission" />, en spécifiant un état d’autorisation.</summary>
      <param name="state">Valeur énumérée de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.WebBrowserPermissionLevel)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.WebBrowserPermission" />, en spécifiant le niveau d’autorisation du navigateur web.</summary>
      <param name="webBrowserPermissionLevel">Valeur énumérée de <see cref="T:System.Security.Permissions.WebBrowserPermissionLevel" />.</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.Copy">
      <summary>Crée et retourne une copie identique de l’autorisation actuelle.</summary>
      <returns>Copie de l’autorisation actuelle.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruit une autorisation avec un état spécifié à partir d’un encodage XML.</summary>
      <param name="securityElement">Encodage XML à utiliser pour reconstruire l’autorisation.</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.Intersect(System.Security.IPermission)">
      <summary>Crée et retourne une autorisation qui constitue l’intersection entre l’autorisation actuelle et l’autorisation spécifiée.</summary>
      <param name="target">Autorisation à croiser avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>L'intersection de deux autorisations est une autorisation qui décrit l'état qu'elles décrivent en commun. Seule une demande qui transmet les deux autorisations d’origine est valide pour l’autorisation croisée.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Détermine si l’autorisation actuelle est un sous-ensemble de l’autorisation spécifiée.</summary>
      <param name="target">Autorisation qui doit être testée pour la relation de sous-ensemble. Cette autorisation doit être du même type que l’autorisation actuelle.</param>
      <returns>
        <see langword="true" /> si l’autorisation actuelle est un sous-ensemble de l’autorisation spécifiée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.IsUnrestricted">
      <summary>Retourne une valeur qui indique si l’autorisation actuelle est illimitée.</summary>
      <returns>
        <see langword="true" /> si la propriété <see cref="P:System.Security.Permissions.WebBrowserPermission.Level" /> a la valeur <see cref="F:System.Security.Permissions.WebBrowserPermissionLevel.Unrestricted" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.WebBrowserPermission.Level">
      <summary>Obtient ou définit la valeur actuelle du niveau d’autorisation du navigateur web.</summary>
      <returns>Valeur actuelle du niveau d’autorisation du navigateur web.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.ToXml">
      <summary>Crée un encodage XML de l’autorisation et de son état actuel.</summary>
      <returns>Codage XML de l’autorisation, y compris les informations d’état éventuelles.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.Union(System.Security.IPermission)">
      <summary>Crée une autorisation qui est l’union de l’autorisation actuelle et de l’autorisation spécifiée.</summary>
      <param name="target">Autorisation à combiner avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
      <returns>Nouvelle autorisation qui représente l’union de l’autorisation actuelle et de l’autorisation spécifiée.</returns>
    </member>
    <member name="T:System.Security.Permissions.WebBrowserPermissionAttribute">
      <summary>Permet d’appliquer les actions de sécurité de <see cref="T:System.Security.Permissions.WebBrowserPermission" /> au code à l’aide de la sécurité déclarative.</summary>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.WebBrowserPermissionAttribute" /> avec le <see cref="T:System.Security.Permissions.SecurityAction" /> spécifié.</summary>
      <param name="action">Une des valeurs de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermissionAttribute.CreatePermission">
      <summary>Crée et retourne une instance de la classe <see cref="T:System.Security.Permissions.WebBrowserPermission" />.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.WebBrowserPermission" /> correspondant à la déclaration de sécurité.</returns>
    </member>
    <member name="P:System.Security.Permissions.WebBrowserPermissionAttribute.Level">
      <summary>Obtient ou définit le niveau d’autorisation du navigateur web actuel pour <see cref="T:System.Security.Permissions.WebBrowserPermissionAttribute" />.</summary>
      <returns>État du niveau d’autorisation pour le navigateur web actuel.</returns>
    </member>
    <member name="T:System.Security.Permissions.WebBrowserPermissionLevel">
      <summary>Spécifie le niveau d'autorisation pour un navigateur Web.</summary>
    </member>
    <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.None">
      <summary>Un navigateur Web qui ne peut pas naviguer au sein de cadres jusqu'à HTML.</summary>
    </member>
    <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.Safe">
      <summary>Un navigateur Web qui peut naviguer sans risque au sein de cadres jusqu'à HTML mais avec plusieurs restrictions.</summary>
    </member>
    <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.Unrestricted">
      <summary>Un navigateur Web qui peut naviguer sans restrictions.</summary>
    </member>
    <member name="T:System.Security.RightsManagement.AuthenticationType">
      <summary>Spécifie la méthode d’authentification de la gestion des droits.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.AuthenticationType.Internal">
      <summary>Authentification implicite pour tout utilisateur demandeur.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.AuthenticationType.Passport">
      <summary>Authentification Windows Live ID.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.AuthenticationType.Windows">
      <summary>Authentification Windows dans un environnement de domaine d’entreprise.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.AuthenticationType.WindowsPassport">
      <summary>Authentification Windows ou authentification Windows Live ID.</summary>
    </member>
    <member name="T:System.Security.RightsManagement.ContentGrant">
      <summary>Représente un droit accordé à un utilisateur pour accéder aux informations contenues dans un document soumis à la Gestion des droits.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.RightsManagement.ContentGrant" /> qui accorde un <see cref="T:System.Security.RightsManagement.ContentUser" />spécifié à un <see cref="T:System.Security.RightsManagement.ContentRight" /> spécifié.</summary>
      <param name="user">L'utilisateur à qui le droit d'accès est accordé.</param>
      <param name="right">Le droit d'accès qui est accordé.</param>
    </member>
    <member name="M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight,System.DateTime,System.DateTime)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.RightsManagement.ContentGrant" /> qui accorde un <see cref="T:System.Security.RightsManagement.ContentUser" /> spécifié à un <see cref="T:System.Security.RightsManagement.ContentRight" /> spécifié pour une durée <see cref="T:System.DateTime" /> spécifiée.</summary>
      <param name="user">L'utilisateur à qui le droit d'accès est accordé.</param>
      <param name="right">Le droit d'accès qui est accordé.</param>
      <param name="validFrom">La date et l'heure de début d'exercice du droit.</param>
      <param name="validUntil">La date et l'heure d'expiration du droit.</param>
    </member>
    <member name="P:System.Security.RightsManagement.ContentGrant.Right">
      <summary>Obtient le <see cref="T:System.Security.RightsManagement.ContentRight" /> qui est accordé.</summary>
      <returns>Le droit d'accès qui est accordé au <see cref="P:System.Security.RightsManagement.ContentGrant.User" />, comme spécifié au constructeur <see cref="M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)" />.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentGrant.User">
      <summary>Obtient l'utilisateur à qui est accordé le <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> d'accès.</summary>
      <returns>L'utilisateur à qui le <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> d'accès est accordé, comme spécifié au constructeur <see cref="M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)" />.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentGrant.ValidFrom">
      <summary>Obtient la date et l'heure de début d'exercice du<see cref="P:System.Security.RightsManagement.ContentGrant.Right" />.</summary>
      <returns>Date et heure de début auxquelles l’accord <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> a commencé, <see cref="T:System.DateTime" />ou.<see cref="F:System.DateTime.MinValue" /> s’il n’existe aucune limitation de démarrage.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentGrant.ValidUntil">
      <summary>Obtient la date et l'heure d'expiration du <see cref="P:System.Security.RightsManagement.ContentGrant.Right" />.</summary>
      <returns>Date et heure de fin auxquelles l’accord <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> a expiré, ou <see cref="T:System.DateTime" />.<see cref="F:System.DateTime.MaxValue" /> s’il n’existe aucune limitation de terminaison.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.ContentRight">
      <summary>Spécifie les droits qui peuvent être accordés aux utilisateurs concernant l’accès au contenu d’un document managé par des droits.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.DocumentEdit">
      <summary>L’utilisateur peut modifier le document qui contient le contenu protégé.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Edit">
      <summary>L’utilisateur peut modifier et chiffrer le contenu protégé.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Export">
      <summary>L’utilisateur peut exporter le contenu protégé.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Extract">
      <summary>L’utilisateur peut extraire (copier et coller) le contenu protégé.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Forward">
      <summary>L’utilisateur peut transférer le contenu protégé à un autre utilisateur.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.ObjectModel">
      <summary>L’utilisateur peut contrôler l’accès programmé au contenu protégé.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Owner">
      <summary>L’utilisateur est le propriétaire du contenu.  Le propriétaire peut modifier et chiffrer le contenu protégé, et déchiffrer le <see cref="T:System.Security.RightsManagement.PublishLicense" /> signé.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Print">
      <summary>L’utilisateur peut imprimer le contenu protégé.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Reply">
      <summary>L’utilisateur peut répondre à l’expéditeur du contenu protégé.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.ReplyAll">
      <summary>L’utilisateur peut « répondre à tous » les destinataires du contenu protégé.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Sign">
      <summary>L’utilisateur peut signer numériquement le contenu protégé.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.View">
      <summary>L’utilisateur peut afficher le contenu protégé.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.ViewRightsData">
      <summary>L’utilisateur peut déchiffrer et afficher les droits spécifiés dans le <see cref="T:System.Security.RightsManagement.PublishLicense" /> signé.</summary>
    </member>
    <member name="T:System.Security.RightsManagement.ContentUser">
      <summary>Représente un utilisateur ou un groupe d’utilisateurs auquel accorder l’accès au contenu géré par des droits.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.RightsManagement.ContentUser" />.</summary>
      <param name="name">Nom de l'utilisateur ou du groupe.</param>
      <param name="authenticationType">Méthode d'authentification.</param>
    </member>
    <member name="P:System.Security.RightsManagement.ContentUser.AnyoneUser">
      <summary>Obtient une instance du personnage "Tous" <see cref="T:System.Security.RightsManagement.ContentUser" /> persona.</summary>
      <returns>Instance du personnage "Tous" <see cref="T:System.Security.RightsManagement.ContentUser" />.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentUser.AuthenticationType">
      <summary>Obtient le <see cref="T:System.Security.RightsManagement.AuthenticationType" /> spécifié pour le constructeur <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" />.</summary>
      <returns>
        <see cref="T:System.Security.RightsManagement.AuthenticationType" /> spécifié pour le constructeur <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.ContentUser.Equals(System.Object)">
      <summary>Retourne une valeur qui indique si ce <see cref="T:System.Security.RightsManagement.ContentUser" /> est équivalent à une autre instance donnée.</summary>
      <param name="obj">Instance d'utilisateur dont l'égalité doit être testée.</param>
      <returns>
        <see langword="true" /> si <see cref="P:System.Security.RightsManagement.ContentUser.Name" /> et <see cref="P:System.Security.RightsManagement.ContentUser.AuthenticationType" /> sont les mêmes pour cet utilisateur et pour l'utilisateur donné ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.ContentUser.GetHashCode">
      <summary>Retourne un code de hachage calculé basé sur l'utilisateur <see cref="P:System.Security.RightsManagement.ContentUser.Name" /> et le <see cref="P:System.Security.RightsManagement.ContentUser.AuthenticationType" />.</summary>
      <returns>Code de hachage calculé à partir de l'utilisateur <see cref="P:System.Security.RightsManagement.ContentUser.Name" /> et du <see cref="P:System.Security.RightsManagement.ContentUser.AuthenticationType" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.ContentUser.IsAuthenticated">
      <summary>Retourne une valeur qui indique si l'utilisateur est actuellement authentifié.</summary>
      <returns>
        <see langword="true" /> si l'utilisateur est actuellement authentifié ; sinon, <see langword="false" />.  La valeur par défaut est <see langword="false" /> jusqu'à l'authentification.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentUser.Name">
      <summary>Obtient l'utilisateur ou le nom de groupe spécifié pour le constructeur <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" />.</summary>
      <returns>Utilisateur ou nom de groupe spécifié pour le constructeur <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" />.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentUser.OwnerUser">
      <summary>Obtient une instance du personnage <see cref="T:System.Security.RightsManagement.ContentUser" /> "Propriétaire".</summary>
      <returns>Instance du personnage <see cref="T:System.Security.RightsManagement.ContentUser" /> "Propriétaire".</returns>
    </member>
    <member name="T:System.Security.RightsManagement.CryptoProvider">
      <summary>Fournit des services de gestion des droits numériques pour chiffrer et déchiffrer du contenu protégé.</summary>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.BlockSize">
      <summary>Obtient la taille des blocs de chiffrement, en octets.</summary>
      <returns>La taille des blocs de chiffrement, en octets.  La taille de bloc par défaut pour Advanced Encryption Standard (AES) est 8.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.BoundGrants">
      <summary>Obtient une collection qui répertorie les droits qui ont été vérifiés et accordés à l'utilisateur.</summary>
      <returns>Une collection énumérant les droits qui ont été vérifiés et accordés à l'utilisateur.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.CanDecrypt">
      <summary>Obtient une valeur qui indique si l'utilisateur possède les droits de déchiffrement.</summary>
      <returns>
        <see langword="true" />Si le <see cref="T:System.Security.RightsManagement.UseLicense" /> autorise l’utilisateur à déchiffrer; sinon <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.CanEncrypt">
      <summary>Obtient une valeur qui indique si l'utilisateur possède les droits de chiffrement.</summary>
      <returns>
        <see langword="true" />Si le <see cref="T:System.Security.RightsManagement.UseLicense" /> autorise l’utilisateur à chiffrer; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks">
      <summary>Obtient une valeur qui indique si <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> et <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" /> peuvent accepter des mémoires tampon ayant des tailles de bloc différentes.</summary>
      <returns>
        <see langword="true" />Si la mémoire tampon <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> transmise à peut être une longueur différente de celle de la mémoire tampon passée à <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" />; sinon, <see langword="false" /> si <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> les <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" /> mémoires tampon transmises à et doivent avoir la même longueur.  Pour AES, la valeur <see langword="true" />par défaut est.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])">
      <summary>Déchiffre le texte chiffré en texte clair.</summary>
      <param name="cryptoText">Le texte chiffré à déchiffrer.</param>
      <returns>Le texte clair déchiffré de <paramref name="cryptoText" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cipherText" /> a la valeur null.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException">Droit de déchiffrement non accordé.</exception>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Dispose">
      <summary>Libère toutes les ressources utilisées par <see cref="T:System.Security.RightsManagement.CryptoProvider" />.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Dispose(System.Boolean)">
      <summary>Libère les ressources non managées utilisées par <see cref="T:System.Security.RightsManagement.CryptoProvider" /> et libère éventuellement les ressources managées.</summary>
      <param name="disposing">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour ne libérer que les ressources non managées.</param>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])">
      <summary>Chiffre un texte clair en texte de chiffrement.</summary>
      <param name="clearText">Contenu de texte clair à chiffrer.</param>
      <returns>Texte de chiffrement chiffré du <paramref name="clearText" /> donné.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="clearText" /> a la valeur null.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException">Le chiffrement n’est pas autorisé.</exception>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Finalize">
      <summary>Libère des ressources et effectue un nettoyage interne avant que l’instance ne soit récupérée par le garbage collection.</summary>
    </member>
    <member name="T:System.Security.RightsManagement.LocalizedNameDescriptionPair">
      <summary>Représente une paire (en lecture seule) immuable de chaînes “Name” et “Description”.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.LocalizedNameDescriptionPair.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.RightsManagement.LocalizedNameDescriptionPair" />.</summary>
      <param name="name">Valeur de la propriété <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> des paramètres régionaux.</param>
      <param name="description">Valeur de la propriété <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" /> des paramètres régionaux.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="name" /> ou le paramètre <paramref name="description" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description">
      <summary>Obtient la description des paramètres régionaux.</summary>
      <returns>Description des paramètres régionaux.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.LocalizedNameDescriptionPair.Equals(System.Object)">
      <summary>Indique si les propriétés <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> et <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" /> d'un objet donné correspondent à celles de cette <see cref="T:System.Security.RightsManagement.LocalizedNameDescriptionPair" />.</summary>
      <param name="obj">Objet dont les propriétés <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> et <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" /> doivent être comparées.</param>
      <returns>
        <see langword="true" /> si les propriétés <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> et <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" /> d'un objet donné correspondent à celles de cette instance ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.LocalizedNameDescriptionPair.GetHashCode">
      <summary>Obtient un code de hachage calculé basé sur les propriétés <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> et <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" />.</summary>
      <returns>Code de hachage calculé basé sur les propriétés <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> et <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" /> de ce <see cref="T:System.Security.RightsManagement.LocalizedNameDescriptionPair" />.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name">
      <summary>Obtient le nom des paramètres régionaux.</summary>
      <returns>Nom des paramètres régionaux.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.PublishLicense">
      <summary>Représente une licence de publication signée gérée par des droits.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.RightsManagement.PublishLicense" /> à partir d'une <see cref="T:System.Security.RightsManagement.PublishLicense" />sérialisée et signée spécifiée.</summary>
      <param name="signedPublishLicense">Licence de publication signée et sérialisée.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="signedPublishLicense" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException">Le chemin d'accès n'est pas valide.</exception>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.AcquireUseLicense(System.Security.RightsManagement.SecureEnvironment)">
      <summary>Tente d'acquérir une <see cref="T:System.Security.RightsManagement.UseLicense" /> pour un utilisateur ou groupe d'utilisateurs dans un <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> spécifié.</summary>
      <param name="secureEnvironment">Environnement sécurisé pour la liaison et l'activation de la licence.</param>
      <returns>
        <see cref="T:System.Security.RightsManagement.UseLicense" /> pour un utilisateur ou groupe d'utilisateurs dans le <paramref name="secureEnvironment" /> spécifié.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="secureEnvironment" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException">L'authentification a échoué.</exception>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI(System.Security.RightsManagement.SecureEnvironment)">
      <summary>Tente d'acquérir une <see cref="T:System.Security.RightsManagement.UseLicense" /> pour un utilisateur ou groupe d'utilisateurs dans un <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> spécifié.</summary>
      <param name="secureEnvironment">Environnement sécurisé pour la liaison et l'activation de la licence.</param>
      <returns>
        <see cref="T:System.Security.RightsManagement.UseLicense" /> pour un utilisateur ou groupe d'utilisateurs dans le <paramref name="secureEnvironment" /> spécifié.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="secureEnvironment" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException">L'authentification a échoué.</exception>
    </member>
    <member name="P:System.Security.RightsManagement.PublishLicense.ContentId">
      <summary>Obtient l'identificateur de contenu créé par éditeur.</summary>
      <returns>L'identificateur de contenu créé par éditeur.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.DecryptUnsignedPublishLicense(System.Security.RightsManagement.CryptoProvider)">
      <summary>Retourne une version <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" /> déchiffrée de cette <see cref="T:System.Security.RightsManagement.PublishLicense" /> signée.</summary>
      <param name="cryptoProvider">Service de gestion des droits à utiliser pour déchiffrer la licence.</param>
      <returns>Une version de cette licence déchiffrée et non signée.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cryptoProvider" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.RightsManagement.PublishLicense.ReferralInfoName">
      <summary>Obtient le nom de contact pour l'auteur ou l'éditeur du contenu.</summary>
      <returns>Nom de contact pour l'auteur ou l'éditeur du contenu.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.PublishLicense.ReferralInfoUri">
      <summary>Obtient l'URI de contact  pour l'auteur ou l'éditeur du contenu.</summary>
      <returns>L'URI (Uniform Resource Identifier) de contact pour l'auteur ou l'éditeur du contenu.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.ToString">
      <summary>Retourne la chaîne XrML sérialisée qui a été utilisée pour créer cette licence.</summary>
      <returns>Chaîne XrML (Extensible Rights Markup Language) sérialisée qui a été utilisée pour créer cette licence.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl">
      <summary>Obtient l'URI à utiliser pour acquérir une <see cref="T:System.Security.RightsManagement.UseLicense" />.</summary>
      <returns>L'URI à utiliser pour acquérir une <see cref="T:System.Security.RightsManagement.UseLicense" />.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.RightsManagementException">
      <summary>Représente une condition d'erreur lorsqu'une opération de gestion des droits ne peut se terminer correctement.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.RightsManagement.RightsManagementException" />.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.RightsManagement.RightsManagementException" /> et définit le magasin <see cref="T:System.Runtime.Serialization.SerializationInfo" /> avec les informations à propos de l'exception.</summary>
      <param name="info">Objet qui contient les données sérialisées.</param>
      <param name="context">Informations contextuelles sur la source ou la destination.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementFailureCode)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.RightsManagement.RightsManagementException" /> avec un <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" /> donné.</summary>
      <param name="failureCode">Le code d'erreur pour l'exception.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementFailureCode,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.RightsManagement.RightsManagementException" /> avec des propriétés <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" /> et <see cref="P:System.Exception.InnerException" /> données.</summary>
      <param name="failureCode">Le code d'erreur pour l'exception.</param>
      <param name="innerException">L'instance d'exception qui a provoqué l'erreur.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementFailureCode,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.RightsManagement.RightsManagementException" /> avec des propriétés <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" /> et <see cref="P:System.Exception.Message" /> données.</summary>
      <param name="failureCode">Le code d'erreur pour l'exception.</param>
      <param name="message">Message qui décrit l'erreur.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementFailureCode,System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.RightsManagement.RightsManagementException" /> avec les <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" />, <see cref="P:System.Exception.Message" /> et <see cref="P:System.Exception.InnerException" /> donnés.</summary>
      <param name="failureCode">Le code d'erreur pour l'exception.</param>
      <param name="message">Message qui décrit l'erreur.</param>
      <param name="innerException">L'instance d'exception qui a provoqué l'erreur.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.RightsManagement.RightsManagementException" /> avec un message donné.</summary>
      <param name="message">Message qui décrit l'erreur.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.RightsManagement.RightsManagementException" /> avec des propriétés <see cref="P:System.Exception.Message" /> et <see cref="P:System.Exception.InnerException" /> données.</summary>
      <param name="message">Message qui décrit l'erreur.</param>
      <param name="innerException">L'instance d'exception qui a entraîné la levée de cette exception.</param>
    </member>
    <member name="P:System.Security.RightsManagement.RightsManagementException.FailureCode">
      <summary>Obtient le <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" /> pour l'erreur.</summary>
      <returns>Le code d'erreur pour l'exception.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Définit le magasin <see cref="T:System.Runtime.Serialization.SerializationInfo" /> à l'aide du nom du paramètre et des informations se rapportant à l'exception.</summary>
      <param name="info">Objet qui contient les données sérialisées.</param>
      <param name="context">Informations contextuelles sur la source ou la destination.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="info" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="T:System.Security.RightsManagement.RightsManagementFailureCode">
      <summary>Spécifie les conditions d’erreur qui peuvent se produire lors d’une opération de gestion des droits.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.Aborted">
      <summary>Opération asynchrone annulée ou une erreur non récupérable s’est produite.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ActivationFailed">
      <summary>L’activation de la licence a échoué. Les services de gestion des droits ne sont pas configurés correctement.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.AdEntryNotFound">
      <summary>L’utilisateur actuel est introuvable dans Active Directory (AD) pour la certification sous authentification Windows.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.AlreadyInProgress">
      <summary>L’opération demandée est déjà en cours.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.AuthenticationFailed">
      <summary>Erreur d’authentification possible (erreur HTTP 401) retournée par une demande Internet. Ou, l’utilisateur actuel n’a pas d’informations d’identification de domaine valides pour une tentative d’activation utilisateur en mode silencieux. Ou, le serveur de certification avec activation utilisateur en mode silencieux n’est pas dans l’intranet local ou la zone des sites de confiance.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BadGetInfoQuery">
      <summary>Une constante non valide a été transmise.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindAccessPrincipalNotEnabling">
      <summary>La condition d’accès n’est pas mise en correspondance avec l’activation du principal qui est transmis dans la liaison.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindAccessUnsatisfied">
      <summary>L’utilisateur actuel ne satisfait pas aux conditions définies dans la licence d’utilisateur final (LUF).</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindContentNotInEndUseLicense">
      <summary>La ressource spécifiée n’est contenue dans aucun nœud de TRAVAIL de la licence.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindIndicatedPrincipalMissing">
      <summary>L’activation du principal ne correspond pas au principal émis de la licence d’utilisateur final (LUF).</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindIntervalTimeViolated">
      <summary>La période définie pour le contenu protégé a expiré ; l’accès n’est plus autorisé.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindMachineNotFoundInGroupIdentity">
      <summary>L’ordinateur actuel n’est pas défini dans l’identité du groupe géré par les droits.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindNoApplicableRevocationList">
      <summary>L’utilisateur actuel ne dispose pas de droits d’accès au contenu protégé.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindNoSatisfiedRightsGroup">
      <summary>Le groupe de droits spécifié n’est pas contenu dans la licence d’utilisateur final (LUF).</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindPolicyViolation">
      <summary>L’utilisateur actuel ne dispose pas de droits d’accès au contenu protégé.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevocationListStale">
      <summary>La licence requiert qu’une nouvelle liste de révocation soit acquise.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedIssuer">
      <summary>L’utilisateur actuel ne dispose pas de droits d’accès au contenu protégé.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedLicense">
      <summary>L’utilisateur actuel ne dispose pas de droits d’accès au contenu protégé.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedModule">
      <summary>Les services de gestion des droits ne sont pas configurés correctement.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedPrincipal">
      <summary>L’utilisateur actuel ne dispose pas de droits d’accès au contenu protégé.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedResource">
      <summary>L’utilisateur actuel ne dispose pas de droits d’accès au contenu protégé.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindSpecifiedWorkMissing">
      <summary>La licence d’utilisateur final (LUF) ne contient aucun nœud TRAVAIL.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindValidityTimeViolated">
      <summary>La période définie pour le contenu protégé a expiré ; l’accès n’est plus autorisé.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BrokenCertChain">
      <summary>La chaîne de certificats de gestion des droits est rompue.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ClockRollbackDetected">
      <summary>La restauration d’horloge a été détectée. Impossible d’accéder au contenu protégé.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.CryptoOperationUnsupported">
      <summary>Une opération de chiffrement demandée n’est pas prise en charge. Par exemple, la transmission d’un objet de chiffrement RMS à des fins de déchiffrement.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.DebuggerDetected">
      <summary>Impossible d’ouvrir ou de publier du contenu avec des autorisations restreintes parce qu’un programme de débogage a été détecté.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EmailNotVerified">
      <summary>L’adresse électronique de l’utilisateur ne peut pas être vérifiée.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EnablingPrincipalFailure">
      <summary>Le principal spécifié ne peut pas être activé</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EncryptionNotPermitted">
      <summary>Le chiffrement n’est pas autorisé.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EnvironmentCannotLoad">
      <summary>Impossible de charger <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EnvironmentNotLoaded">
      <summary>Impossible de charger <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ExpiredOfficialIssuanceLicenseTemplate">
      <summary>La période autorisée définie dans le modèle de licence d’émission a expiré ; l’accès n’est plus autorisé.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.GlobalOptionAlreadySet">
      <summary>L’option spécifiée a déjà été définie.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.GroupIdentityNotSet">
      <summary>Aucun nom d’utilisateur n’a été spécifié pour la session du client</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.HidCorrupted">
      <summary>Le format de l’ID matériel (HID) utilisé lors d’une tentative d’activation d’ordinateur est incorrect. Les services de gestion des droits ne sont pas configurés correctement.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.HidInvalid">
      <summary>L’ID matériel (HID) utilisé lors d’une tentative d’activation d’ordinateur n’est pas valide. Les services de gestion des droits ne sont pas configurés correctement.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.IdMismatch">
      <summary>L’ID de contenu de la licence ne correspond pas à l’ID de contenu de la session de stockage de licence</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.IncompatibleObjects">
      <summary>Un type d’objet transmis est incompatible avec cette opération.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InfoNotInLicense">
      <summary>Lors de la création d’une licence limitée, une licence d’émission et pas une licence utilisateur final, a été spécifiée.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InfoNotPresent">
      <summary>Certaines informations sont manquantes.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InstallationFailed">
      <summary>Une opération d’installation a échoué.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidAlgorithmType">
      <summary>Le type d’algorithme spécifié n’est pas valide.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidClientLicensorCertificate">
      <summary>Les services de gestion des droits ne sont pas configurés correctement.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidEmail">
      <summary>Échec de la vérification de l’adresse électronique du serveur RMS.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidEncodingType">
      <summary>Le type d’encodage spécifié n’est pas valide.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidHandle">
      <summary>L’environnement ou le handle d’activation du principal n’est pas valide.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidIssuanceLicenseTemplate">
      <summary>Le modèle Services de gestion des droits contient une ou plusieurs erreurs.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidKeyLength">
      <summary>La longueur de clé spécifiée dans une paire clé/valeur n’est pas valide.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidLicense">
      <summary>La structure de licence dans l’un des certificats n’est pas valide.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidLicenseSignature">
      <summary>Impossible de valider le certificat numérique signé de gestion des droits. (Le certificat signé a peut-être été altéré.)</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidLockboxPath">
      <summary>Les services de gestion des droits ne sont pas configurés correctement.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidLockboxType">
      <summary>Les services de gestion des droits ne sont pas configurés correctement.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidNumericalValue">
      <summary>La valeur numérique spécifiée n’est pas valide.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidRegistryPath">
      <summary>Le chemin d’accès de registre spécifié n’est pas valide.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidServerResponse">
      <summary>Les services de gestion des droits ne sont pas configurés correctement.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidTimeInfo">
      <summary>Les informations d’heure spécifiées ne sont pas valides.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidVersion">
      <summary>La version de gestion des droits est incorrecte.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.KeyTypeUnsupported">
      <summary>Le type de clé spécifié dans une paire clé/valeur n’est pas pris en charge.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.LibraryFail">
      <summary>Une opération de la bibliothèque a échoué.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.LibraryUnsupportedPlugIn">
      <summary>Le plug-in de bibliothèque spécifié n’est pas pris en charge.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.LicenseAcquisitionFailed">
      <summary>Impossible d’acquérir une licence d’utilisateur final (LUF) à partir du serveur de gestion des droits.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.LicenseBindingToWindowsIdentityFailed">
      <summary>Les informations d’identification de l’utilisateur actuel ne sont pas valides pour acquérir une licence.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ManifestPolicyViolation">
      <summary>Une opération ne respecte pas la stratégie du manifeste de gestion des drois.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.MetadataNotSet">
      <summary>Impossible de définir les métadonnées.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NeedsGroupIdentityActivation">
      <summary>L’utilisateur n’est pas activé ou aucun certificat de compte de droits (RAC) n’a été envoyé et aucun n’a été trouvé dans le magasin de licences pour correspondre à la licence associée à cette session.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NeedsMachineActivation">
      <summary>L’ordinateur doit être activé avant l’activation de l’utilisateur.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoAesCryptoProvider">
      <summary>Les services de gestion des droits ne sont pas configurés correctement.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoConnect">
      <summary>La gestion des droits ne peut pas se connecter à l’URI spécifié pour le serveur de licences.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoDistributionPointUrlFound">
      <summary>Le contenu protégé est endommagé.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoLicense">
      <summary>Une licence requise n’est pas disponible.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoMoreData">
      <summary>Aucune licence ou certificat n’existe à l’index spécifié.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NotAChain">
      <summary>Le contenu géré par les droits est endommagé.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NotSet">
      <summary>L’élément demandé pour suppression n’existe pas.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.OutdatedModule">
      <summary>Les services de gestion des droits ne sont pas configurés correctement.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.OutOfQuota">
      <summary>Le quota maximal de licences d’utilisateur final (LUF) du serveur de licences a été atteint.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.OwnerLicenseNotFound">
      <summary>Le document ne contient pas de licence de propriétaire.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.QueryReportsNoResults">
      <summary>Aucune instance de l’attribut demandé n’existe.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RecordNotFound">
      <summary>La licence spécifiée est introuvable.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RequestDenied">
      <summary>Le serveur de gestion des droits n’autorise pas la certification temporaire de l’utilisateur actuel.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RevocationInfoNotSet">
      <summary>Les informations de révocation de certificat ou de licence n’ont pas été définies.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RightNotGranted">
      <summary>L’utilisateur actuel ne dispose pas de droits d’accès au contenu protégé.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RightNotSet">
      <summary>Le droit demandé n’a été spécifié quand le contenu a été publié avec la gestion des droits.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServerError">
      <summary>Les services de gestion des droits ne sont pas configurés correctement.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServerNotFound">
      <summary>Les services de gestion des droits ne sont pas configurés correctement.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServiceGone">
      <summary>Les services de gestion des droits ne sont pas configurés correctement.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServiceMoved">
      <summary>Les services de gestion des droits ne sont pas configurés correctement.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServiceNotFound">
      <summary>Les services de gestion des droits ne sont pas configurés correctement.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.Success">
      <summary>Opération terminée avec succès.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.TooManyCertificates">
      <summary>Le nombre de certificats a dépassé le nombre maximal autorisé.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.TooManyLoadedEnvironments">
      <summary>Trop d’instances <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> ont été créées.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.UnexpectedException">
      <summary>Une erreur non spécifiée s'est produite.  Également levé lorsqu’une application s’exécute en mode débogage.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.UseDefault">
      <summary>Si une demande d’activation d’ordinateur ou d’un certificat de compte de droits est faite, la réception de <see cref="F:System.Security.RightsManagement.RightsManagementFailureCode.UseDefault" /> indique que l’application doit transmettre <see langword="null" /> dans le paramètre ActServInfo</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ValidityTimeViolation">
      <summary>La période définie pour le contenu protégé a expiré ; l’accès n’est plus autorisé.</summary>
    </member>
    <member name="T:System.Security.RightsManagement.SecureEnvironment">
      <summary>Représente une session cliente sécurisée pour l’activation utilisateur, la liaison de licence et d’autres opérations de gestion des droits.</summary>
    </member>
    <member name="P:System.Security.RightsManagement.SecureEnvironment.ApplicationManifest">
      <summary>Obtient le <see cref="P:System.Security.RightsManagement.SecureEnvironment.ApplicationManifest" /> spécifié lors de la création de <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</summary>
      <returns>Le manifeste d'application spécifié pour la méthode <see cref="Overload:System.Security.RightsManagement.SecureEnvironment.Create" /> lors de la création de <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.AuthenticationType,System.Security.RightsManagement.UserActivationMode)">
      <summary>Crée une session cliente sécurisée en fonction des éléments suivants : manifeste des droits de l’application, <see cref="T:System.Security.RightsManagement.AuthenticationType" /> et <see cref="T:System.Security.RightsManagement.UserActivationMode" />.</summary>
      <param name="applicationManifest">Manifeste des droits de l’application.</param>
      <param name="authentication">Méthode d’authentification.</param>
      <param name="userActivationMode">Type du certificat de compte de droits de l’utilisateur.</param>
      <returns>Session cliente sécurisée pour l’activation, la liaison de licence et d’autres opérations de gestion des droits.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)">
      <summary>Crée une session cliente sécurisée pour un utilisateur spécifié avec un manifeste de droits donné.</summary>
      <param name="applicationManifest">Manifeste des droits de l’application.</param>
      <param name="user">Utilisateur ou groupe d’utilisateurs auquel accorder l’accès au contenu géré par des droits.</param>
      <returns>Session cliente sécurisée pour l’activation, la liaison de licence et d’autres opérations de gestion des droits.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.Dispose">
      <summary>Libère toutes les ressources utilisées par <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.Dispose(System.Boolean)">
      <summary>Libère les ressources non managées utilisées par <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> et libère éventuellement les ressources managées.</summary>
      <param name="disposing">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers">
      <summary>Retourne une liste des utilisateurs activés.</summary>
      <returns>La liste des utilisateurs actuellement activés.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.IsUserActivated(System.Security.RightsManagement.ContentUser)">
      <summary>Indique si un utilisateur donné a été activé pour accéder au contenu géré par des droits.</summary>
      <param name="user">Utilisateur ou groupe d’utilisateurs auquel accorder l’accès au contenu géré par des droits.</param>
      <returns>
        <see langword="true" /> si le <paramref name="user" /> donné a été activé pour accéder au contenu géré par des droits ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.RemoveActivatedUser(System.Security.RightsManagement.ContentUser)">
      <summary>Supprime l’activation de la licence pour un utilisateur spécifié.</summary>
      <param name="user">Utilisateur pour lequel supprimer l’activation de la licence.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="user" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Le <paramref name="user" /> donné n'est pas authentifié avec l’authentification Windows ou l’authentification Passport.</exception>
    </member>
    <member name="P:System.Security.RightsManagement.SecureEnvironment.User">
      <summary>Obtient l'utilisateur ou le groupe d'utilisateurs spécifié lors de la création de <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</summary>
      <returns>L'utilisateur ou le groupe d'utilisateurs spécifié pour la méthode <see cref="M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)" /> lors de la création de <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.UnsignedPublishLicense">
      <summary>Représente un <see cref="T:System.Security.RightsManagement.PublishLicense" /> géré de droits non signés ou un modèle <see cref="T:System.Security.RightsManagement.PublishLicense" /> non signé.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.UnsignedPublishLicense.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" />.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.UnsignedPublishLicense.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" /> à partir d’un modèle de publication de licence XrML spécifié.</summary>
      <param name="publishLicenseTemplate">Modèle de publication de licence XrML (Extensible Rights Markup Language) à utiliser pour créer cette licence.</param>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.ContentId">
      <summary>Obtient ou définit l’identificateur du contenu créé par un serveur de publication.</summary>
      <returns>Identificateur du contenu géré par des droits créé par un serveur de publication.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.Grants">
      <summary>Obtient une collection de droits d'utilisateur assignés.</summary>
      <returns>Collection des droits d'utilisateur assignés fournis par cette licence.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.LocalizedNameDescriptionDictionary">
      <summary>Obtient une collection de paires de noms et descriptions.</summary>
      <returns>Collection de paires de noms et descriptions.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.Owner">
      <summary>Obtient ou définit le propriétaire du contenu.</summary>
      <returns>L'utilisateur qui possède le contenu publié.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoName">
      <summary>Obtient ou définit le nom de contact pour l'auteur ou l'éditeur du contenu.</summary>
      <returns>Nom de contact pour l'auteur ou l'éditeur du contenu.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoUri">
      <summary>Obtient ou définit l'URI de contact pour l'auteur ou l'éditeur du contenu.</summary>
      <returns>L'URI (Uniform Resource Identifier) de contact pour l'auteur ou l'éditeur du contenu.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UnsignedPublishLicense.Sign(System.Security.RightsManagement.SecureEnvironment,System.Security.RightsManagement.UseLicense@)">
      <summary>Crée une <see cref="T:System.Security.RightsManagement.PublishLicense" /> signée et retourne une <see cref="T:System.Security.RightsManagement.UseLicense" /> pour l'auteur du document.</summary>
      <param name="secureEnvironment">Environnement sécurisé pour la liaison et l'activation de la licence.</param>
      <param name="authorUseLicense">
        <see cref="T:System.Security.RightsManagement.UseLicense" /> retournée pour l'auteur du document.</param>
      <returns>
        <see cref="T:System.Security.RightsManagement.PublishLicense" /> signée qui est créée en signant cette <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UnsignedPublishLicense.ToString">
      <summary>Retourne un modèle sérialisé créé à partir du XrML de <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" />.</summary>
      <returns>Modèle sérialisé créé à partir du XrML de <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" />.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.UseLicense">
      <summary>Représente une licence qui active l’accès au contenu protégé géré par des droits.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.RightsManagement.UseLicense" />.</summary>
      <param name="useLicense">Une licence d'utilisation dans un formulaire XrML (Extensible Rights Markup Language) sérialisé.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="useLicense" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException">
        <paramref name="useLicense" /> n'est pas valide.</exception>
    </member>
    <member name="P:System.Security.RightsManagement.UseLicense.ApplicationData">
      <summary>Obtient le dictionnaire de données d'application qui contient des paires clé/valeur transmises de l'application d'édition à l'application consommateur.</summary>
      <returns>Le dictionnaire de données d'application qui contient des paires clé/valeur transmises de l'application d'édition à l'application consommateur.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)">
      <summary>Lie la licence à un <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> donné.</summary>
      <param name="secureEnvironment">L’environnement auquel lier la licence.</param>
      <returns>Une instance de <see cref="T:System.Security.RightsManagement.CryptoProvider" /> si la liaison de la licence a réussi ; sinon, <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="secureEnvironment" /> est <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.RightsManagement.UseLicense.ContentId">
      <summary>Obtient l'identificateur de contenu créé par l'éditeur.</summary>
      <returns>L'identificateur de contenu créé par l'éditeur.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.Equals(System.Object)">
      <summary>Indique si cette licence est équivalente à une autre licence donnée.</summary>
      <param name="x">La licence à comparer.</param>
      <returns>
        <see langword="true" /> si les deux licences sont équivalentes ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.GetHashCode">
      <summary>Retourne le code de hachage associé à cette licence.</summary>
      <returns>Code de hachage de cette licence.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UseLicense.Owner">
      <summary>Obtient le propriétaire de la licence.</summary>
      <returns>Le propriétaire de la licence.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.ToString">
      <summary>Retourne la chaîne XrML sérialisée utilisée pour créer cette licence.</summary>
      <returns>La chaîne XrML (Extensible Rights Markup Language) sérialisée est transmise à l'origine au constructeur <see cref="M:System.Security.RightsManagement.UseLicense.#ctor(System.String)" />.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.UserActivationMode">
      <summary>Spécifie le type de certificat de compte de droits d'utilisateur à demander pour l'activation de la gestion des droits.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.UserActivationMode.Permanent">
      <summary>Un certificat de compte de droits permanents.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.UserActivationMode.Temporary">
      <summary>Un certificat de compte de droits temporaires.</summary>
    </member>
    <member name="T:System.Windows.AttachedPropertyBrowsableAttribute">
      <summary>Fournit une classe de base pour les attributs .NET Framework qui signale la portée d’utilisation de propriétés jointes.</summary>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.AttachedPropertyBrowsableAttribute" />.</summary>
    </member>
    <member name="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute">
      <summary>Indique qu’une propriété jointe ne peut être explorée que pour les éléments qui dérivent d’un type spécifié.</summary>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableForTypeAttribute.#ctor(System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> à l'aide du <paramref name="targetType" /> fourni.</summary>
      <param name="targetType">Le type prévu qui définit la portée de l’utilisation de la propriété jointe où cet attribut .NET Framework s’applique.</param>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableForTypeAttribute.Equals(System.Object)">
      <summary>Détermine si le attribut .NET Framework <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> en cours est identique à un objet spécifié.</summary>
      <param name="obj">
        <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> à comparer à l'objet <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> actuel.</param>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> spécifié est égal au <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableForTypeAttribute.GetHashCode">
      <summary>Retourne le code de hachage pour ce <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> attribut .NET Framework.</summary>
      <returns>Valeur d'entier 32 bits non signé.</returns>
    </member>
    <member name="P:System.Windows.AttachedPropertyBrowsableForTypeAttribute.TargetType">
      <summary>Obtient le type de base qui définit la portée de l’utilisation de la propriété jointe où cet attribut .NET Framework s’applique.</summary>
      <returns>Objet <see cref="T:System.Type" /> demandé.</returns>
    </member>
    <member name="P:System.Windows.AttachedPropertyBrowsableForTypeAttribute.TypeId">
      <summary>Reçoit un identificateur de type unique pour ce attribut .NET Framework <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" />.</summary>
      <returns>Objet qui est un identificateur unique pour le <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" />.</returns>
    </member>
    <member name="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute">
      <summary>Spécifie qu’une propriété jointe ne peut être explorée que sur un élément qui a également un autre attribut .NET Framework spécifique appliqué à sa définition de classe.</summary>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute.#ctor(System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" />.</summary>
      <param name="attributeType">
        <see cref="T:System.Type" /> de l’attribut .NET Framework qui doit également être appliqué à une classe pour que la propriété jointe soit consultable dans la classe où <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> est appliqué.</param>
    </member>
    <member name="P:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute.AttributeType">
      <summary>Obtient le type du attribut .NET Framework qui doit également être appliqué à une classe.</summary>
      <returns>attribut .NET Framework Type.</returns>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute.Equals(System.Object)">
      <summary>Détermine si le attribut .NET Framework <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> en cours est identique à un objet spécifié.</summary>
      <param name="obj">
        <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> à comparer à l'objet <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> actuel.</param>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> spécifié est égal au <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute.GetHashCode">
      <summary>Retourne le code de hachage pour ce <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> attribut .NET Framework.</summary>
      <returns>Valeur d'entier 32 bits non signé.</returns>
    </member>
    <member name="T:System.Windows.BaseCompatibilityPreferences">
      <summary>Contient des propriétés qui spécifient comment une application doit se comporter par rapport aux nouvelles fonctionnalités WPF qui se trouvent dans l'assembly WindowsBase.</summary>
    </member>
    <member name="P:System.Windows.BaseCompatibilityPreferences.FlowDispatcherSynchronizationContextPriority">
      <summary>Obtient ou définit une valeur indiquant si les informations sur <see cref="P:System.Windows.Threading.DispatcherOperation.Priority" /> sont enregistrées dans <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />.</summary>
      <returns>
        <see langword="true" /> si des informations sur <see cref="P:System.Windows.Threading.DispatcherOperation.Priority" /> sont enregistrées dans <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailure">
      <summary>Définit comment le répartiteur réagit aux échecs rencontrés lors des demandes de traitement.</summary>
      <returns>Valeur qui définit comment le répartiteur réagit aux échecs.</returns>
    </member>
    <member name="T:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailureOptions">
      <summary>Fournit un ensemble de valeurs qui décrivent comment le répartiteur répond aux échecs rencontrées lors de la demande de traitement.</summary>
    </member>
    <member name="F:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailureOptions.Continue">
      <summary>Continuer après l’échec.  
 Valeur par défaut. Définit le comportement du répartiteur Windows Presentation Foundation avant le .NET Framework 4.7.1. Quand cette option est sélectionnée, le répartiteur peut cesser de répondre.</summary>
    </member>
    <member name="F:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailureOptions.Reset">
      <summary>Réinitialiser l’état du répartiteur pour essayer une autre requête la prochaine fois.  
 Même si cette option peut parfois éliminer le problème de blocage, elle ne peut pas honorer le minutage habituel du traitement, ce qui peut être essentiel. Cette option peut entraîner un comportement inattendu.</summary>
    </member>
    <member name="F:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailureOptions.Throw">
      <summary>Levée d'une exception.  
 Cette option porte immédiatement le problème à l’attention du développeur de l’application.</summary>
    </member>
    <member name="P:System.Windows.BaseCompatibilityPreferences.InlineDispatcherSynchronizationContextSend">
      <summary>Obtient ou définit une valeur qui indique si la méthode de <see cref="M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)" /> place les délégués dans la file d'attente de répartiteur ou si le délégué est appelé directement.</summary>
      <returns>
        <see langword="true" /> si la méthode <see cref="M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)" /> place les délégués dans la file d'attente de répartiteur ou si le délégué est appelé directement ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.BaseCompatibilityPreferences.ReuseDispatcherSynchronizationContextInstance">
      <summary>Obtient ou définit une valeur qui indique si un <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> unique est utilisé pour plusieurs opérations de répartiteur.</summary>
      <returns>true si un <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> unique est utilisé pour plusieurs opérations de répartiteur ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.CoerceValueCallback">
      <summary>Fournit un modèle pour une méthode appelée toutes les fois qu'une valeur de propriété de dépendance est réévaluée, ou que la contrainte est demandée spécifiquement.</summary>
      <param name="d">L'objet sur lequel existe la propriété. Lorsque le rappel est appelé, le système de propriétés passe cette valeur.</param>
      <param name="baseValue">La nouvelle valeur de la propriété, avant toute tentative de contrainte.</param>
      <returns>La valeur forcée (avec type approprié).</returns>
    </member>
    <member name="T:System.Windows.Converters.Int32RectValueSerializer">
      <summary>Convertit des instances de <see cref="T:System.String" /> vers et à partir d'instances de <see cref="T:System.Windows.Int32Rect" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Converters.Int32RectValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Détermine si la <see cref="T:System.String" /> spécifiée peut être convertie en une instance de <see cref="T:System.Windows.Int32Rect" />.</summary>
      <param name="value">Chaîne à évaluer pour la conversion.</param>
      <param name="context">Informations de contexte utilisées pour la conversion.</param>
      <returns>Retourne toujours <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Détermine si le <see cref="T:System.Windows.Int32Rect" /> spécifié peut être converti en <see cref="T:System.String" />.</summary>
      <param name="value">Objet à évaluer pour la conversion.</param>
      <param name="context">Informations de contexte utilisées pour la conversion.</param>
      <returns>
        <see langword="true" /> si <paramref name="value" /> peut être converti en <see cref="T:System.String" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Convertit un <see cref="T:System.String" /> en <see cref="T:System.Windows.Int32Rect" />.</summary>
      <param name="value">Chaîne à convertir.</param>
      <param name="context">Informations de contexte utilisées pour la conversion.</param>
      <returns>Nouvelle instance de <see cref="T:System.Windows.Int32Rect" /> basée sur le <paramref name="value" /> fourni.</returns>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Convertit une instance de <see cref="T:System.Windows.Int32Rect" /> en <see cref="T:System.String" />.</summary>
      <param name="value">Objet à convertir en chaîne.</param>
      <param name="context">Informations de contexte utilisées pour la conversion.</param>
      <returns>Représentation sous forme de chaîne du <see cref="T:System.Windows.Int32Rect" /> spécifié.</returns>
    </member>
    <member name="T:System.Windows.Converters.PointValueSerializer">
      <summary>Convertit des instances de <see cref="T:System.String" /> vers et à partir d'instances de <see cref="T:System.Windows.Point" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Converters.PointValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Détermine si la <see cref="T:System.String" /> spécifiée peut être convertie en une instance de <see cref="T:System.Windows.Point" />.</summary>
      <param name="value">Chaîne à évaluer pour la conversion.</param>
      <param name="context">Informations de contexte utilisées pour la conversion.</param>
      <returns>Retourne toujours <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Détermine si le <see cref="T:System.Windows.Point" /> spécifié peut être converti en <see cref="T:System.String" />.</summary>
      <param name="value">Objet à évaluer pour la conversion.</param>
      <param name="context">Informations de contexte utilisées pour la conversion.</param>
      <returns>
        <see langword="true" /> si <paramref name="value" /> peut être converti en <see cref="T:System.String" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Convertit un <see cref="T:System.String" /> en <see cref="T:System.Windows.Point" />.</summary>
      <param name="value">Chaîne à convertir.</param>
      <param name="context">Informations de contexte utilisées pour la conversion.</param>
      <returns>Nouvelle instance de <see cref="T:System.Windows.Point" /> basée sur le <paramref name="value" /> fourni.</returns>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Convertit une instance de <see cref="T:System.Windows.Point" /> en <see cref="T:System.String" />.</summary>
      <param name="value">Objet à convertir en chaîne.</param>
      <param name="context">Informations de contexte utilisées pour la conversion.</param>
      <returns>Représentation sous forme de chaîne du <see cref="T:System.Windows.Point" /> spécifié.</returns>
    </member>
    <member name="T:System.Windows.Converters.RectValueSerializer">
      <summary>Convertit des instances de <see cref="T:System.String" /> vers et à partir d'instances de <see cref="T:System.Windows.Rect" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Converters.RectValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Détermine si la <see cref="T:System.String" /> spécifiée peut être convertie en une instance de <see cref="T:System.Windows.Rect" />.</summary>
      <param name="value">Chaîne à évaluer pour la conversion.</param>
      <param name="context">Informations de contexte utilisées pour la conversion.</param>
      <returns>Retourne toujours <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Détermine si le <see cref="T:System.Windows.Rect" /> spécifié peut être converti en <see cref="T:System.String" />.</summary>
      <param name="value">Objet à évaluer pour la conversion.</param>
      <param name="context">Informations de contexte utilisées pour la conversion.</param>
      <returns>
        <see langword="true" /> si <paramref name="value" /> peut être converti en <see cref="T:System.String" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Convertit un <see cref="T:System.String" /> en <see cref="T:System.Windows.Rect" />.</summary>
      <param name="value">Chaîne à convertir.</param>
      <param name="context">Informations de contexte utilisées pour la conversion.</param>
      <returns>Nouvelle instance de <see cref="T:System.Windows.Rect" /> basée sur le <paramref name="value" /> fourni.</returns>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Convertit une instance de <see cref="T:System.Windows.Rect" /> en <see cref="T:System.String" />.</summary>
      <param name="value">Objet à convertir en chaîne.</param>
      <param name="context">Informations de contexte utilisées pour la conversion.</param>
      <returns>Représentation sous forme de chaîne du <see cref="T:System.Windows.Rect" /> spécifié.</returns>
    </member>
    <member name="T:System.Windows.Converters.SizeValueSerializer">
      <summary>Convertit des instances de <see cref="T:System.String" /> vers et à partir d'instances de <see cref="T:System.Windows.Size" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Converters.SizeValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Détermine si la <see cref="T:System.String" /> spécifiée peut être convertie en une instance de <see cref="T:System.Windows.Size" />.</summary>
      <param name="value">Chaîne à évaluer pour la conversion.</param>
      <param name="context">Informations de contexte utilisées pour la conversion.</param>
      <returns>Retourne toujours <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Détermine si le <see cref="T:System.Windows.Size" /> spécifié peut être converti en <see cref="T:System.String" />.</summary>
      <param name="value">Objet à évaluer pour la conversion.</param>
      <param name="context">Informations de contexte utilisées pour la conversion.</param>
      <returns>
        <see langword="true" /> si <paramref name="value" /> peut être converti en <see cref="T:System.String" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Convertit un <see cref="T:System.String" /> en <see cref="T:System.Windows.Size" />.</summary>
      <param name="value">Chaîne à convertir.</param>
      <param name="context">Informations de contexte utilisées pour la conversion.</param>
      <returns>Nouvelle instance de <see cref="T:System.Windows.Size" /> basée sur le <paramref name="value" /> fourni.</returns>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Convertit une instance de <see cref="T:System.Windows.Size" /> en <see cref="T:System.String" />.</summary>
      <param name="value">Objet à convertir en chaîne.</param>
      <param name="context">Informations de contexte utilisées pour la conversion.</param>
      <returns>Représentation sous forme de chaîne du <see cref="T:System.Windows.Size" /> spécifié.</returns>
    </member>
    <member name="T:System.Windows.Converters.VectorValueSerializer">
      <summary>Convertit des instances de <see cref="T:System.String" /> vers et à partir d'instances de <see cref="T:System.Windows.Vector" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Converters.VectorValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Détermine si la <see cref="T:System.String" /> spécifiée peut être convertie en une instance de <see cref="T:System.Windows.Vector" />.</summary>
      <param name="value">Chaîne à évaluer pour la conversion.</param>
      <param name="context">Informations de contexte utilisées pour la conversion.</param>
      <returns>Retourne toujours <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Détermine si le <see cref="T:System.Windows.Vector" /> spécifié peut être converti en <see cref="T:System.String" />.</summary>
      <param name="value">Objet à évaluer pour la conversion.</param>
      <param name="context">Informations de contexte utilisées pour la conversion.</param>
      <returns>
        <see langword="true" /> si <paramref name="value" /> peut être converti en <see cref="T:System.String" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Convertit un <see cref="T:System.String" /> en <see cref="T:System.Windows.Vector" />.</summary>
      <param name="value">Chaîne à convertir.</param>
      <param name="context">Informations de contexte utilisées pour la conversion.</param>
      <returns>Nouvelle instance de <see cref="T:System.Windows.Vector" /> basée sur le <paramref name="value" /> fourni.</returns>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Convertit une instance de <see cref="T:System.Windows.Vector" /> en <see cref="T:System.String" />.</summary>
      <param name="value">Objet à convertir en chaîne.</param>
      <param name="context">Informations de contexte utilisées pour la conversion.</param>
      <returns>Représentation sous forme de chaîne du <see cref="T:System.Windows.Vector" /> spécifié.</returns>
    </member>
    <member name="T:System.Windows.Data.DataSourceProvider">
      <summary>Classe de base et contrat communs pour des objets <see cref="T:System.Windows.Data.DataSourceProvider" />, qui sont des fabriques exécutant des requêtes pour produire un seul objet ou une liste d’objets que vous pouvez utiliser comme objets de source de liaison.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Data.DataSourceProvider" />. Il s'agit d'un constructeur protégé.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.BeginInit">
      <summary>Indique que l'initialisation de cet objet va commencer ; aucun <see cref="M:System.Windows.Data.DataSourceProvider.Refresh" /> implicite ne se produit jusqu'à ce que la méthode <see cref="M:System.Windows.Data.DataSourceProvider.EndInit" /> correspondante soit appelée.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.BeginQuery">
      <summary>En cas de substitution dans une classe dérivée, cette classe de base appelle cette méthode lorsque <see cref="M:System.Windows.Data.DataSourceProvider.InitialLoad" /> ou <see cref="M:System.Windows.Data.DataSourceProvider.Refresh" /> a été appelé. La classe de base diffère l'appel si l'actualisation est différée ou si la charge initiale est désactivée.</summary>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.Data">
      <summary>Obtient l’objet de données sous-jacent.</summary>
      <returns>Valeur de type <see cref="T:System.Object" /> qui est l’objet de données sous-jacent.</returns>
    </member>
    <member name="E:System.Windows.Data.DataSourceProvider.DataChanged">
      <summary>Se produit lorsque la propriété <see cref="P:System.Windows.Data.DataSourceProvider.Data" /> a une nouvelle valeur.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.DeferRefresh">
      <summary>Entre un cycle différé que vous pouvez utiliser pour modifier les propriétés du fournisseur et retarder l'actualisation automatique.</summary>
      <returns>Objet <see cref="T:System.IDisposable" /> que vous pouvez utiliser pour supprimer l’objet appelant.</returns>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.Dispatcher">
      <summary>Obtient ou définit l'objet <see cref="T:System.Windows.Threading.Dispatcher" /> actif pour le thread Interface utilisateur à utiliser.</summary>
      <returns>Objet actuel <see cref="T:System.Windows.Threading.Dispatcher" /> à utiliser par Interface utilisateur le thread. Par défaut, il s'agit de l'objet <see cref="T:System.Windows.Threading.Dispatcher" /> qui est associé au thread sur lequel cette instance a été créée.</returns>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.EndInit">
      <summary>Indique que l'initialisation de cet objet est terminée, ce qui provoque un <see cref="M:System.Windows.Data.DataSourceProvider.Refresh" /> si aucun autre <see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" /> n'est en attente.</summary>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.Error">
      <summary>Obtient l'erreur de la dernière opération de requête.</summary>
      <returns>Valeur de type <see cref="T:System.Exception" /> qui est l'erreur de la dernière opération de requête ou <see langword="null" /> s'il n'y avait aucune erreur.</returns>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.InitialLoad">
      <summary>Démarre la requête initiale destinée au modèle de données sous-jacent. Le résultat est retourné sur la propriété <see cref="P:System.Windows.Data.DataSourceProvider.Data" />.</summary>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled">
      <summary>Obtient ou définit une valeur qui indique s'il faut empêcher ou différer le chargement automatique des données.</summary>
      <returns>
        <see langword="false" /> pour empêcher ou différer le chargement automatique des données ; sinon, <see langword="true" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.IsRefreshDeferred">
      <summary>Obtient une valeur qui indique s'il y a un <see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" /> en cours d'utilisation.</summary>
      <returns>
        <see langword="true" /> s'il y a un <see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" /> en cours d'utilisation ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Déclenche l’événement <see cref="E:System.Windows.Data.DataSourceProvider.PropertyChanged" /> avec les arguments fournis.</summary>
      <param name="e">Arguments de l’événement déclenché.</param>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object)">
      <summary>Les classes dérivées appellent cette méthode pour indiquer qu'une requête est terminée.</summary>
      <param name="newData">Données qui sont le résultat de la requête.</param>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object,System.Exception,System.Windows.Threading.DispatcherOperationCallback,System.Object)">
      <summary>Les classes dérivées appellent cette méthode pour indiquer qu'une requête est terminée.</summary>
      <param name="newData">Données qui sont le résultat de la requête.</param>
      <param name="error">Erreur qui s'est produite lors de l'exécution de la requête. Cette valeur est <see langword="null" /> s'il n'y a aucune erreur.</param>
      <param name="completionWork">Délégué optionnel qui est utilisé pour exécuter le travail d'achèvement sur le thread d'Interface utilisateur, par exemple pour définir des propriétés supplémentaires.</param>
      <param name="callbackArguments">Arguments optionnels à envoyer en tant que paramètres avec le délégué <paramref name="completionWork" />.</param>
    </member>
    <member name="E:System.Windows.Data.DataSourceProvider.PropertyChanged">
      <summary>Se produit en cas de modification d'une valeur de propriété.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.Refresh">
      <summary>Initialise une opération d'actualisation sur le modèle de données sous-jacent. Le résultat est retourné sur la propriété <see cref="P:System.Windows.Data.DataSourceProvider.Data" />.</summary>
    </member>
    <member name="E:System.Windows.Data.DataSourceProvider.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary>Se produit en cas de modification d'une valeur de propriété.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.System#ComponentModel#ISupportInitialize#BeginInit">
      <summary>Ce membre prend en charge l’infrastructure Windows Presentation Foundation (WPF) et n’est pas destiné à être directement utilisé à partir de votre code.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.System#ComponentModel#ISupportInitialize#EndInit">
      <summary>Ce membre prend en charge l’infrastructure Windows Presentation Foundation (WPF) et n’est pas destiné à être directement utilisé à partir de votre code.</summary>
    </member>
    <member name="T:System.Windows.DependencyObject">
      <summary>Représente un objet qui participe au système de propriétés de dépendance.</summary>
    </member>
    <member name="M:System.Windows.DependencyObject.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.DependencyObject" />.</summary>
    </member>
    <member name="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)">
      <summary>Efface la valeur locale d’une propriété. La propriété à effacer est spécifiée par un identificateur <see cref="T:System.Windows.DependencyProperty" />.</summary>
      <param name="dp">Propriété de dépendance à effacer, identifiée par une référence d’objet <see cref="T:System.Windows.DependencyProperty" />.</param>
      <exception cref="T:System.InvalidOperationException">Tentative d’appel à <see cref="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" /> sur un <see cref="T:System.Windows.DependencyObject" /> sealed.</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)">
      <summary>Efface la valeur locale d’une propriété en lecture seule. La propriété à effacer est spécifiée par <see cref="T:System.Windows.DependencyPropertyKey" />.</summary>
      <param name="key">Clé de la propriété de dépendance à effacer.</param>
      <exception cref="T:System.InvalidOperationException">Tentative d’appel à <see cref="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" /> sur un <see cref="T:System.Windows.DependencyObject" /> sealed.</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)">
      <summary>Convertit la valeur de la propriété de dépendance spécifiée. Pour cela, on appelle toute fonction <see cref="T:System.Windows.CoerceValueCallback" /> spécifiée dans les métadonnées de propriété pour la propriété de dépendance telle qu’elle existe sur le <see cref="T:System.Windows.DependencyObject" /> appelant.</summary>
      <param name="dp">Identificateur de la propriété de dépendance à forcer.</param>
      <exception cref="T:System.InvalidOperationException">Le <paramref name="dp" /> spécifié ou sa valeur n’est pas valide ou n’existe pas.</exception>
    </member>
    <member name="P:System.Windows.DependencyObject.DependencyObjectType">
      <summary>Obtient le <see cref="T:System.Windows.DependencyObjectType" /> qui encapsule le type CLR de cette instance.</summary>
      <returns>Un <see cref="T:System.Windows.DependencyObjectType" /> qui encapsule le type CLR de cette instance.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.Equals(System.Object)">
      <summary>Détermine si un <see cref="T:System.Windows.DependencyObject" /> fourni est équivalent au <see cref="T:System.Windows.DependencyObject" /> réel.</summary>
      <param name="obj">
        <see cref="T:System.Windows.DependencyObject" /> à comparer à l'instance en cours.</param>
      <returns>
        <see langword="true" /> si les deux instances sont identiques ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.GetHashCode">
      <summary>Obtient un code de hachage pour ce <see cref="T:System.Windows.DependencyObject" />.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.GetLocalValueEnumerator">
      <summary>Crée un énumérateur spécialisé pour déterminer quelles propriétés de dépendance ont des valeurs définies localement sur ce <see cref="T:System.Windows.DependencyObject" />.</summary>
      <returns>Un énumérateur de valeur de proximité spécialisé.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)">
      <summary>Retourne la valeur effective actuelle d’une propriété de dépendance sur cette instance d’un <see cref="T:System.Windows.DependencyObject" />.</summary>
      <param name="dp">L'identificateur <see cref="T:System.Windows.DependencyProperty" /> de la propriété pour lequel récupérer la valeur.</param>
      <returns>Retourne la valeur effective actuelle.</returns>
      <exception cref="T:System.InvalidOperationException">Le <paramref name="dp" /> spécifié ou sa valeur n'était pas valide, ou le <paramref name="dp" /> spécifié n'existe pas.</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)">
      <summary>Réévalue la valeur effective pour la propriété de dépendance spécifiée</summary>
      <param name="dp">L'identificateur <see cref="T:System.Windows.DependencyProperty" /> de la propriété à invalider.</param>
    </member>
    <member name="P:System.Windows.DependencyObject.IsSealed">
      <summary>Récupère une valeur qui indique si cette instance est actuellement sealed (en lecture seule).</summary>
      <returns>
        <see langword="true" /> si cette instance est sealed ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Méthode appelée chaque fois que la valeur effective d’une propriété de dépendance sur ce <see cref="T:System.Windows.DependencyObject" /> a été mise à jour. La propriété de dépendance spécifique qui a été modifiée est signalée dans les données d'événement.</summary>
      <param name="e">Données d'événement qui contiendront l'identificateur de propriété de dépendance, les métadonnées de propriété pour le type, ainsi que les anciennes et nouvelles valeurs.</param>
    </member>
    <member name="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)">
      <summary>Retourne la valeur locale d’une propriété de dépendance, si elle existe.</summary>
      <param name="dp">L'identificateur <see cref="T:System.Windows.DependencyProperty" /> de la propriété pour lequel récupérer la valeur.</param>
      <returns>Retourne la valeur de proximité, ou retourne la valeur de sentinelle <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> si aucune valeur de proximité n'est définie.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)">
      <summary>Définit la valeur d’une propriété de dépendance sans modifier sa valeur source.</summary>
      <param name="dp">Identificateur de la propriété de dépendance à définir.</param>
      <param name="value">La nouvelle valeur de proximité.</param>
      <exception cref="T:System.InvalidOperationException">Tentative de modification d'une propriété de dépendance en lecture seule, ou d'une propriété sur un <see cref="T:System.Windows.DependencyObject" /> sealed.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> n'était pas le type correct enregistré pour la propriété <paramref name="dp" />.</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)">
      <summary>Définit la valeur locale d’une propriété de dépendance, spécifiée par son identificateur de propriété de dépendance.</summary>
      <param name="dp">Identificateur de la propriété de dépendance à définir.</param>
      <param name="value">La nouvelle valeur de proximité.</param>
      <exception cref="T:System.InvalidOperationException">Tentative de modification d'une propriété de dépendance en lecture seule, ou d'une propriété sur un <see cref="T:System.Windows.DependencyObject" /> sealed.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> n'était pas le type correct enregistré pour la propriété <paramref name="dp" />.</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)">
      <summary>Définit la valeur locale d’une propriété de dépendance en lecture seule, spécifiée par l’identificateur <see cref="T:System.Windows.DependencyPropertyKey" /> de la propriété de dépendance.</summary>
      <param name="key">L'identificateur <see cref="T:System.Windows.DependencyPropertyKey" /> de la propriété à définir.</param>
      <param name="value">La nouvelle valeur de proximité.</param>
    </member>
    <member name="M:System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)">
      <summary>Retourne une valeur qui indique si les processus de sérialisation doivent sérialiser la valeur de la propriété de dépendance fournie.</summary>
      <param name="dp">L'identificateur pour la propriété de dépendance qui doit être sérialisée.</param>
      <returns>
        <see langword="true" /> si la propriété de dépendance fournie doit être sérialisée par valeur ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.DependencyObjectType">
      <summary>Implémente un cache de type sous-jacent pour tous les types dérivés <see cref="T:System.Windows.DependencyObject" />.</summary>
    </member>
    <member name="P:System.Windows.DependencyObjectType.BaseType">
      <summary>Obtient le <see cref="T:System.Windows.DependencyObjectType" /> de la classe de base immédiate du <see cref="T:System.Windows.DependencyObjectType" /> actuel.</summary>
      <returns>Type de la classe de base.</returns>
    </member>
    <member name="M:System.Windows.DependencyObjectType.FromSystemType(System.Type)">
      <summary>Retourne un <see cref="T:System.Windows.DependencyObjectType" /> qui représente un type (CLR) de système donné.</summary>
      <param name="systemType">Type CLR de système à convertir.</param>
      <returns>
        <see cref="T:System.Windows.DependencyObjectType" /> qui représente le type (CLR) de système.</returns>
    </member>
    <member name="M:System.Windows.DependencyObjectType.GetHashCode">
      <summary>Retourne le code de hachage pour ce <see cref="T:System.Windows.DependencyObjectType" />.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="P:System.Windows.DependencyObjectType.Id">
      <summary>Obtient un identificateur unique de base zéro pour les opérations de recherche dans des tableaux en temps constant.</summary>
      <returns>Identificateur interne.</returns>
    </member>
    <member name="M:System.Windows.DependencyObjectType.IsInstanceOfType(System.Windows.DependencyObject)">
      <summary>Détermine si l'objet spécifié est une instance du <see cref="T:System.Windows.DependencyObjectType" /> actuel.</summary>
      <param name="dependencyObject">Objet à comparer au <see cref="T:System.Windows.DependencyObjectType" /> actif.</param>
      <returns>
        <see langword="true" /> si la classe représentée par le <see cref="T:System.Windows.DependencyObjectType" /> actuel est dans la hiérarchie d'héritage du <see cref="T:System.Windows.DependencyObject" /> passé comme <paramref name="d" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyObjectType.IsSubclassOf(System.Windows.DependencyObjectType)">
      <summary>Détermine si le <see cref="T:System.Windows.DependencyObjectType" /> actuel dérive du <see cref="T:System.Windows.DependencyObjectType" /> spécifié.</summary>
      <param name="dependencyObjectType">
        <see cref="T:System.Windows.DependencyObjectType" /> à comparer.</param>
      <returns>
        <see langword="true" /> si le paramètre <paramref name="dependencyObjectType" /> et le <see cref="T:System.Windows.DependencyObjectType" /> actuel représentent des types de classes et si la classe représentée par le <see cref="T:System.Windows.DependencyObjectType" /> actuel dérive de la classe représentée par <paramref name="dependencyObjectType" />. Sinon, <see langword="false" />. Cette méthode retourne également <see langword="false" /> si <paramref name="dependencyObjectType" /> et le <see cref="T:System.Windows.DependencyObjectType" /> actuel représentent la même classe.</returns>
    </member>
    <member name="P:System.Windows.DependencyObjectType.Name">
      <summary>Obtient le nom du type de système Common Language Runtime (CLR) représenté.</summary>
      <returns>Nom du type de système CLR représenté.</returns>
    </member>
    <member name="P:System.Windows.DependencyObjectType.SystemType">
      <summary>Obtient le type de système Common Language Runtime (CLR) représenté par <see cref="T:System.Windows.DependencyObjectType" />.</summary>
      <returns>Type de système CLR représenté par <see cref="T:System.Windows.DependencyObjectType" />.</returns>
    </member>
    <member name="T:System.Windows.DependencyProperty">
      <summary>Représente une propriété qui peut être définie par le biais de méthodes, par exemple style, liaison de données, animation et héritage.</summary>
    </member>
    <member name="M:System.Windows.DependencyProperty.AddOwner(System.Type)">
      <summary>Ajoute un autre type en tant que propriétaire d’une propriété de dépendance qui a déjà été inscrite.</summary>
      <param name="ownerType">Type à ajouter en tant que propriétaire de cette propriété de dépendance.</param>
      <returns>Référence à l’identificateur <see cref="T:System.Windows.DependencyProperty" /> d’origine qui identifie la propriété de dépendance. Cet identificateur doit être exposé par la classe d’ajout en tant que champ <see langword="public static readonly" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.AddOwner(System.Type,System.Windows.PropertyMetadata)">
      <summary>Ajoute un autre type en tant que propriétaire d’une propriété de dépendance déjà inscrite, et fournit des métadonnées de propriété de dépendance à la propriété de dépendance telle qu’elle existe sur le type de propriétaire fourni.</summary>
      <param name="ownerType">Type à ajouter en tant que propriétaire de cette propriété de dépendance.</param>
      <param name="typeMetadata">Métadonnées qui qualifient la propriété de dépendance telle qu’elle existe sur le type fourni.</param>
      <returns>Référence à l’identificateur <see cref="T:System.Windows.DependencyProperty" /> d’origine qui identifie la propriété de dépendance. Cet identificateur doit être exposé par la classe d’ajout en tant que champ <see langword="public static readonly" />.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.DefaultMetadata">
      <summary>Obtient les métadonnées par défaut de la propriété de dépendance.</summary>
      <returns>Métadonnées par défaut de la propriété de dépendance.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.GetHashCode">
      <summary>Retourne un code de hachage pour ce <see cref="T:System.Windows.DependencyProperty" />.</summary>
      <returns>Code de hachage pour cette <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.GetMetadata(System.Type)">
      <summary>Retourne les métadonnées pour cette propriété de dépendance telle qu’elles existent sur un type existant spécifié.</summary>
      <param name="forType">Type spécifique à partir duquel récupérer les métadonnées de propriété de dépendance.</param>
      <returns>Objet de métadonnées de propriété.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.GetMetadata(System.Windows.DependencyObject)">
      <summary>Retourne les métadonnées pour cette propriété de dépendance telle qu’elles existent sur l’instance d’objet spécifiée.</summary>
      <param name="dependencyObject">Objet de dépendance dont le type est vérifié pour déterminer de quelle version spécifique au type de la propriété de dépendance les métadonnées doivent provenir.</param>
      <returns>Objet de métadonnées de propriété.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.GetMetadata(System.Windows.DependencyObjectType)">
      <summary>Retourne les métadonnées pour cette propriété de dépendance telle qu’elles existent sur un type spécifié.</summary>
      <param name="dependencyObjectType">Objet spécifique qui enregistre le type d’objet de dépendance à partir duquel les métadonnées de propriété de dépendance sont souhaitées.</param>
      <returns>Objet de métadonnées de propriété.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.GlobalIndex">
      <summary>Obtient une valeur générée en interne qui identifie uniquement la propriété de dépendance.</summary>
      <returns>Identificateur numérique unique.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.IsValidType(System.Object)">
      <summary>Détermine si une valeur spécifiée est acceptable pour le type de cette propriété de dépendance, comme vérifié par rapport au type de propriété fourni dans l'inscription de propriété de dépendance d'origine.</summary>
      <param name="value">Valeur à contrôler.</param>
      <returns>
        <see langword="true" /> si la valeur spécifiée est le type de propriété inscrit ou un type dérivé acceptable ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.IsValidValue(System.Object)">
      <summary>Détermine si la valeur fournie est acceptée pour le type de propriété à travers la vérification de type de base, et également si elle se trouve dans la plage de valeurs autorisée pour ce type.</summary>
      <param name="value">Valeur à contrôler.</param>
      <returns>
        <see langword="true" /> si la valeur est acceptable et est du type correct ou un type dérivé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.Name">
      <summary>Obtient le nom de la propriété de dépendance.</summary>
      <returns>Nom de la propriété.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.OverrideMetadata(System.Type,System.Windows.PropertyMetadata)">
      <summary>Spécifie les métadonnées de remplacement pour cette propriété de dépendance quand elle est présente sur des instances d’un type spécifié, substituant les métadonnées qui existaient pour la propriété de dépendance quand elle a été héritée de types de base.</summary>
      <param name="forType">Type où cette propriété de dépendance est héritée et emplacement où les métadonnées de remplacement fournies sont appliquées.</param>
      <param name="typeMetadata">Métadonnées à appliquer à la propriété de dépendance sur le type de substitution.</param>
      <exception cref="T:System.InvalidOperationException">Vous avez essayé de substituer des métadonnées sur une propriété de dépendance en lecture seule (vous ne pouvez pas effectuer cette opération à l’aide de cette signature).</exception>
      <exception cref="T:System.ArgumentException">Des métadonnées ont déjà été établies pour la propriété de dépendance telle qu’elle existe sur le type fourni.</exception>
    </member>
    <member name="M:System.Windows.DependencyProperty.OverrideMetadata(System.Type,System.Windows.PropertyMetadata,System.Windows.DependencyPropertyKey)">
      <summary>Fournit des métadonnées de remplacement pour une propriété de dépendance en lecture seule quand elle est présente sur des instances d’un type spécifié, substituant les métadonnées fournies dans l’inscription de la propriété de dépendance initiale. Vous devez passer <see cref="T:System.Windows.DependencyPropertyKey" /> pour la propriété de dépendance en lecture seule pour éviter de lever une exception.</summary>
      <param name="forType">Type où cette propriété de dépendance est héritée et emplacement où les métadonnées de remplacement fournies sont appliquées.</param>
      <param name="typeMetadata">Métadonnées à appliquer à la propriété de dépendance sur le type de substitution.</param>
      <param name="key">Clé d’accès pour une propriété de dépendance en lecture seule.</param>
    </member>
    <member name="P:System.Windows.DependencyProperty.OwnerType">
      <summary>Obtient le type de l’objet qui a inscrit la propriété de dépendance avec le système de propriétés ou qui s’est ajouté comme propriétaire de la propriété.</summary>
      <returns>Type de l’objet qui a inscrit la propriété ou qui s’est ajouté comme propriétaire de la propriété.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.PropertyType">
      <summary>Obtient le type que la propriété de dépendance utilise pour sa valeur.</summary>
      <returns>
        <see cref="T:System.Type" /> de la valeur de la propriété.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.ReadOnly">
      <summary>Obtient une valeur qui indique si la propriété de dépendance identifié par cette instance <see cref="T:System.Windows.DependencyProperty" /> est une propriété de dépendance en lecture seule.</summary>
      <returns>
        <see langword="true" /> si la propriété de dépendance est en lecture seule ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.Register(System.String,System.Type,System.Type)">
      <summary>Inscrit une propriété de dépendance avec le nom de propriété, le type de propriété et le type de propriétaire spécifiés.</summary>
      <param name="name">Nom de la propriété de dépendance à inscrire. Le nom doit être unique dans l’espace de noms d’inscription du type de propriétaire.</param>
      <param name="propertyType">Type de la propriété.</param>
      <param name="ownerType">Type du propriétaire qui inscrit la propriété de dépendance.</param>
      <returns>Identificateur de propriété de dépendance qui doit être utilisé pour définir la valeur d’un champ <see langword="public static readonly" /> dans votre classe. Cet identificateur est ensuite utilisé pour faire référence ultérieurement à la propriété de dépendance, pour des opérations comme la définition de sa valeur par programmation ou l’obtention de métadonnées.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.Register(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <summary>Inscrit une propriété de dépendance avec le nom de propriété, le type de propriété, le type de propriétaire et les métadonnées de propriété spécifiés.</summary>
      <param name="name">Nom de la propriété de dépendance à inscrire.</param>
      <param name="propertyType">Type de la propriété.</param>
      <param name="ownerType">Type du propriétaire qui inscrit la propriété de dépendance.</param>
      <param name="typeMetadata">Métadonnées de propriété de la propriété de dépendance.</param>
      <returns>Identificateur de propriété de dépendance qui doit être utilisé pour définir la valeur d’un champ <see langword="public static readonly" /> dans votre classe. Cet identificateur est ensuite utilisé pour faire référence ultérieurement à la propriété de dépendance, pour des opérations comme la définition de sa valeur par programmation ou l’obtention de métadonnées.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.Register(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
      <summary>Inscrit une propriété de dépendance avec le nom de propriété, le type de propriétaire et les métadonnées de propriété spécifiés, ainsi qu’un rappel de validation de valeur pour la propriété.</summary>
      <param name="name">Nom de la propriété de dépendance à inscrire.</param>
      <param name="propertyType">Type de la propriété.</param>
      <param name="ownerType">Type du propriétaire qui inscrit la propriété de dépendance.</param>
      <param name="typeMetadata">Métadonnées de propriété de la propriété de dépendance.</param>
      <param name="validateValueCallback">Référence à un rappel qui doit exécuter toute validation personnalisée de la valeur de propriété de dépendance au-delà de la validation de type standard.</param>
      <returns>Identificateur de propriété de dépendance qui doit être utilisé pour définir la valeur d’un champ <see langword="public static readonly" /> dans votre classe. Cet identificateur est ensuite utilisé pour faire référence ultérieurement à la propriété de dépendance, pour des opérations comme la définition de sa valeur par programmation ou l’obtention de métadonnées.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type)">
      <summary>Inscrit une propriété jointe avec le nom de propriété, le type de propriété et le type de propriétaire spécifiés.</summary>
      <param name="name">Nom de la propriété de dépendance à inscrire.</param>
      <param name="propertyType">Type de la propriété.</param>
      <param name="ownerType">Type du propriétaire qui inscrit la propriété de dépendance.</param>
      <returns>Identificateur de propriété de dépendance qui doit être utilisé pour définir la valeur d’un champ <see langword="public static readonly" /> dans votre classe. Cet identificateur est ensuite utilisé pour faire référence ultérieurement à la propriété de dépendance, pour des opérations comme la définition de sa valeur par programmation ou l’obtention de métadonnées.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <summary>Inscrit une propriété jointe avec le nom de propriété, le type de propriété, le type de propriétaire et les métadonnées de propriété spécifiés.</summary>
      <param name="name">Nom de la propriété de dépendance à inscrire.</param>
      <param name="propertyType">Type de la propriété.</param>
      <param name="ownerType">Type du propriétaire qui inscrit la propriété de dépendance.</param>
      <param name="defaultMetadata">Métadonnées de propriété de la propriété de dépendance. Cela peut inclure la valeur par défaut, ainsi que d’autres caractéristiques.</param>
      <returns>Identificateur de propriété de dépendance qui doit être utilisé pour définir la valeur d’un champ <see langword="public static readonly" /> dans votre classe. Cet identificateur est ensuite utilisé pour faire référence ultérieurement à la propriété de dépendance, pour des opérations comme la définition de sa valeur par programmation ou l’obtention de métadonnées.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
      <summary>Inscrit une propriété jointe avec le type de propriété, le type de propriétaire, les métadonnées de propriété et le rappel de validation de valeur spécifiés pour la propriété.</summary>
      <param name="name">Nom de la propriété de dépendance à inscrire.</param>
      <param name="propertyType">Type de la propriété.</param>
      <param name="ownerType">Type du propriétaire qui inscrit la propriété de dépendance.</param>
      <param name="defaultMetadata">Métadonnées de propriété de la propriété de dépendance. Cela peut inclure la valeur par défaut, ainsi que d’autres caractéristiques.</param>
      <param name="validateValueCallback">Référence à un rappel qui doit exécuter toute validation personnalisée de la valeur de propriété de dépendance au-delà de la validation de type standard.</param>
      <returns>Identificateur de propriété de dépendance qui doit être utilisé pour définir la valeur d’un champ <see langword="public static readonly" /> dans votre classe. Cet identificateur est ensuite utilisé pour faire référence ultérieurement à la propriété de dépendance, pour des opérations comme la définition de sa valeur par programmation ou l’obtention de métadonnées.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttachedReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <summary>Inscrit une propriété jointe en lecture seule, avec le type de propriété, le type de propriétaire et les métadonnées de propriété spécifiés.</summary>
      <param name="name">Nom de la propriété de dépendance à inscrire.</param>
      <param name="propertyType">Type de la propriété.</param>
      <param name="ownerType">Type du propriétaire qui inscrit la propriété de dépendance.</param>
      <param name="defaultMetadata">Métadonnées de propriété de la propriété de dépendance.</param>
      <returns>Clé de propriété de dépendance qui doit être utilisée pour définir la valeur d’un champ statique en lecture seule dans votre classe, qui est ensuite utilisée pour faire référence à la propriété de dépendance.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttachedReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
      <summary>Inscrit une propriété jointe en lecture seule, avec le type de propriété, le type de propriétaire et les métadonnées de propriété spécifiés, ainsi qu’un rappel de validation.</summary>
      <param name="name">Nom de la propriété de dépendance à inscrire.</param>
      <param name="propertyType">Type de la propriété.</param>
      <param name="ownerType">Type du propriétaire qui inscrit la propriété de dépendance.</param>
      <param name="defaultMetadata">Métadonnées de propriété de la propriété de dépendance.</param>
      <param name="validateValueCallback">Référence à un rappel créé par l’utilisateur qui doit exécuter les validations personnalisées de la valeur de la propriété de dépendance au-delà de la validation de type standard.</param>
      <returns>Clé de propriété de dépendance qui doit être utilisée pour définir la valeur d’un champ statique en lecture seule dans votre classe, qui est ensuite utilisée pour faire référence à la propriété de dépendance.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <summary>Inscrit une propriété de dépendance en lecture seule, avec le type de propriété, le type de propriétaire et les métadonnées de propriété spécifiés.</summary>
      <param name="name">Nom de la propriété de dépendance à inscrire.</param>
      <param name="propertyType">Type de la propriété.</param>
      <param name="ownerType">Type du propriétaire qui inscrit la propriété de dépendance.</param>
      <param name="typeMetadata">Métadonnées de propriété de la propriété de dépendance.</param>
      <returns>Clé de propriété de dépendance qui doit être utilisée pour définir la valeur d’un champ statique en lecture seule dans votre classe, qui est ensuite utilisée pour faire référence à la propriété de dépendance.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
      <summary>Inscrit une propriété de dépendance en lecture seule, avec le type de propriété, le type de propriétaire et les métadonnées de propriété spécifiés, ainsi qu’un rappel de validation.</summary>
      <param name="name">Nom de la propriété de dépendance à inscrire.</param>
      <param name="propertyType">Type de la propriété.</param>
      <param name="ownerType">Type du propriétaire qui inscrit la propriété de dépendance.</param>
      <param name="typeMetadata">Métadonnées de propriété de la propriété de dépendance.</param>
      <param name="validateValueCallback">Référence à un rappel créé par l’utilisateur qui doit exécuter les validations personnalisées de la valeur de la propriété de dépendance au-delà de la validation de type standard.</param>
      <returns>Clé de propriété de dépendance qui doit être utilisée pour définir la valeur d’un champ statique en lecture seule dans votre classe, qui est ensuite utilisée pour faire référence à la propriété de dépendance.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.ToString">
      <summary>Retourne la représentation sous forme de chaîne de la propriété de dépendance.</summary>
      <returns>Représentation sous forme de chaîne de la propriété de dépendance.</returns>
    </member>
    <member name="F:System.Windows.DependencyProperty.UnsetValue">
      <summary>Spécifie une valeur statique qui est utilisée par le système de propriétés WPF plutôt que <see langword="null" /> pour indiquer que la propriété existe, mais sa valeur n'est pas définie par le système de propriétés.</summary>
    </member>
    <member name="P:System.Windows.DependencyProperty.ValidateValueCallback">
      <summary>Obtient le rappel de validation de valeur pour la propriété de dépendance.</summary>
      <returns>Rappel de validation de valeur pour cette propriété de dépendance, comme fourni pour le paramètre <paramref name="validateValueCallback" /> dans l'inscription de propriété de dépendance d'origine.</returns>
    </member>
    <member name="T:System.Windows.DependencyPropertyChangedEventArgs">
      <summary>Fournit des données pour différents événements de modification de propriété. En général, ces événements font état des modifications effectives de valeurs dans la valeur d’une propriété de dépendance en lecture seule. Il est aussi possible de l’utiliser dans le cadre d’une implémentation de <see cref="T:System.Windows.PropertyChangedCallback" />.</summary>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.#ctor(System.Windows.DependencyProperty,System.Object,System.Object)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</summary>
      <param name="property">Identificateur de la propriété de dépendance modifiée.</param>
      <param name="oldValue">Valeur de la propriété avant la modification signalée par l'événement ou la modification d'état concerné(e).</param>
      <param name="newValue">Valeur de la propriété après la modification signalée par l'événement ou la modification d'état concerné(e).</param>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Object)">
      <summary>Détermine si l'objet fourni est équivalent au <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> actuel.</summary>
      <param name="obj">Objet à comparer au <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> en cours.</param>
      <returns>
        <see langword="true" /> si l'objet fourni est équivalent au <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Détermine si le <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> spécifié est équivalent au <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> actuel.</summary>
      <param name="args">
        <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> à comparer au <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> actuel.</param>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> fourni est équivalent au <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.GetHashCode">
      <summary>Obtient un code de hachage pour ce <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="P:System.Windows.DependencyPropertyChangedEventArgs.NewValue">
      <summary>Obtient ou définit la propriété après modification.</summary>
      <returns>Valeur de propriété après modification.</returns>
    </member>
    <member name="P:System.Windows.DependencyPropertyChangedEventArgs.OldValue">
      <summary>Obtient la valeur de la propriété avant modification.</summary>
      <returns>Valeur de propriété avant modification.</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.op_Equality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Détermine si deux objets <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> spécifiés ont la même valeur.</summary>
      <param name="left">Premier <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> à comparer.</param>
      <param name="right">Deuxième <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> à comparer.</param>
      <returns>
        <see langword="true" /> si les deux instances <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> sont équivalentes ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.op_Inequality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Détermine si deux objets <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> spécifiés sont différents.</summary>
      <param name="left">Premier <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> à comparer.</param>
      <param name="right">Deuxième <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> à comparer.</param>
      <returns>
        <see langword="true" /> si les deux instances de <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> sont différentes ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.DependencyPropertyChangedEventArgs.Property">
      <summary>Obtient l'identificateur pour la propriété de dépendance où la valeur a été modifiée.</summary>
      <returns>Champ d'identificateur de la propriété de dépendance où la valeur a été modifiée.</returns>
    </member>
    <member name="T:System.Windows.DependencyPropertyChangedEventHandler">
      <summary>Représente la méthode qui gère les événements déclenchés en cas de modification de <see cref="T:System.Windows.DependencyProperty" /> sur une implémentation de <see cref="T:System.Windows.DependencyObject" /> donnée.</summary>
      <param name="sender">Source de l'événement.</param>
      <param name="e">Données d'événement.</param>
    </member>
    <member name="T:System.Windows.DependencyPropertyKey">
      <summary>Fournit un identificateur de propriété de dépendance pour un accès en écriture limité à une propriété de dépendance en lecture seule.</summary>
    </member>
    <member name="P:System.Windows.DependencyPropertyKey.DependencyProperty">
      <summary>Obtient l'identificateur de propriété de dépendance associé à cet identificateur de propriété de dépendance en lecture seule spécialisé.</summary>
      <returns>Identificateur de propriété de dépendance pertinent.</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyKey.OverrideMetadata(System.Type,System.Windows.PropertyMetadata)">
      <summary>Substitue les métadonnées d'une propriété de dépendance en lecture seule représentée par cet identificateur de propriété de dépendance.</summary>
      <param name="forType">Type sur lequel cette propriété de dépendance est basée et dont les métadonnées doivent être substituées.</param>
      <param name="typeMetadata">Métadonnées fournies pour ce type.</param>
      <exception cref="T:System.InvalidOperationException">A tenté de substituer des métadonnées sur une propriété de dépendance en lecture-écriture (cette opération ne peut pas être exécutée à l'aide de cette signature).</exception>
      <exception cref="T:System.ArgumentException">Les métadonnées ont déjà été établies pour la propriété telle que définie par le type fourni.</exception>
    </member>
    <member name="T:System.Windows.Expression">
      <summary>Ce type prend en charge l’infrastructure Windows Presentation Foundation (WPF) et n’est pas destinée à être utilisée directement à partir de votre code.</summary>
    </member>
    <member name="T:System.Windows.ExpressionConverter">
      <summary>Convertit des instances de <see cref="T:System.Windows.Expression" /> vers et à partir d'autres types.</summary>
    </member>
    <member name="M:System.Windows.ExpressionConverter.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.ExpressionConverter" />.</summary>
    </member>
    <member name="M:System.Windows.ExpressionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Retourne une valeur indiquant si ce convertisseur peut effectuer la conversion d'un objet source vers un objet <see cref="T:System.Windows.Expression" />.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</param>
      <param name="sourceType">
        <see cref="T:System.Type" /> qui représente le type à partir duquel vous voulez effectuer la conversion.</param>
      <returns>Toujours <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.ExpressionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Retourne une valeur indiquant si ce convertisseur peut effectuer la conversion d'un objet <see cref="T:System.Windows.Expression" /> vers un type de destination spécifique.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</param>
      <param name="destinationType">
        <see cref="T:System.Type" /> qui représente le type vers lequel vous souhaitez effectuer la conversion.</param>
      <returns>Toujours <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.ExpressionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Convertit la valeur fournie en type <see cref="T:System.Windows.Expression" />.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" /> à utiliser comme culture actuelle.</param>
      <param name="value">Objet à convertir.</param>
      <returns>Lève toujours une exception et retourne <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.ExpressionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Convertit l'objet <see cref="T:System.Windows.Expression" /> fourni dans le type spécifié.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" /> à utiliser comme culture actuelle.</param>
      <param name="value">Objet à convertir.</param>
      <param name="destinationType">
        <see cref="T:System.Type" /> qui représente le type vers lequel vous souhaitez effectuer la conversion.</param>
      <returns>Lève toujours une exception et retourne <see langword="null" />.</returns>
    </member>
    <member name="T:System.Windows.Freezable">
      <summary>Définit un objet qui a un état modifiable et un état en lecture seule (figé). Les classes qui dérivent de <see cref="T:System.Windows.Freezable" /> fournissent une notification de modifications détaillée, peuvent être rendues immuables et peuvent être clonées.</summary>
    </member>
    <member name="M:System.Windows.Freezable.#ctor">
      <summary>Initialise une nouvelle instance d'une classe dérivée de <see cref="T:System.Windows.Freezable" />.</summary>
    </member>
    <member name="P:System.Windows.Freezable.CanFreeze">
      <summary>Obtient une valeur qui indique si l’objet peut être rendu non modifiable.</summary>
      <returns>
        <see langword="true" /> si l’objet actif peut être rendu non modifiable ou s’il l’est déjà ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="E:System.Windows.Freezable.Changed">
      <summary>Se produit lorsque <see cref="T:System.Windows.Freezable" /> ou un objet qu'il contient est modifié.</summary>
    </member>
    <member name="M:System.Windows.Freezable.Clone">
      <summary>Crée un clone modifiable de <see cref="T:System.Windows.Freezable" />, en créant des copies complètes des valeurs de l’objet. Lors de la copie des propriétés de dépendance de l’objet, cette méthode copie les expressions (qui peuvent ne plus se résoudre), mais pas les animations ni leurs valeurs actuelles.</summary>
      <returns>Clone modifiable de l'objet actif. La valeur de la propriété <see cref="P:System.Windows.Freezable.IsFrozen" /> de l’objet cloné est <see langword="false" />, même si la valeur de la propriété <see cref="P:System.Windows.Freezable.IsFrozen" /> de la source est <see langword="true." />.</returns>
    </member>
    <member name="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)">
      <summary>Fait de l’instance un clone (copie complète) du <see cref="T:System.Windows.Freezable" /> spécifié utilisant des valeurs de propriété (non animée) de base.</summary>
      <param name="sourceFreezable">Objet à cloner.</param>
    </member>
    <member name="M:System.Windows.Freezable.CloneCurrentValue">
      <summary>Crée un clone modifiable (copie complète) de <see cref="T:System.Windows.Freezable" /> en utilisant ses valeurs actuelles.</summary>
      <returns>Clone modifiable de l'objet actif. La valeur de la propriété <see cref="P:System.Windows.Freezable.IsFrozen" /> de l’objet cloné est <see langword="false" />, même si la valeur de la propriété <see cref="P:System.Windows.Freezable.IsFrozen" /> de la source est <see langword="true." />.</returns>
    </member>
    <member name="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Fait de l’instance un clone (copie complète) modifiable du <see cref="T:System.Windows.Freezable" /> spécifié à l’aide des valeurs de propriété actuelles.</summary>
      <param name="sourceFreezable">
        <see cref="T:System.Windows.Freezable" /> à cloner.</param>
    </member>
    <member name="M:System.Windows.Freezable.CreateInstance">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Freezable" />.</summary>
      <returns>Nouvelle instance.</returns>
    </member>
    <member name="M:System.Windows.Freezable.CreateInstanceCore">
      <summary>Une fois implémentée dans une classe dérivée, initialise une nouvelle instance de la classe dérivée <see cref="T:System.Windows.Freezable" />.</summary>
      <returns>Nouvelle instance.</returns>
    </member>
    <member name="M:System.Windows.Freezable.Freeze">
      <summary>Rend l’objet actif non modifiable et attribue à sa propriété <see cref="P:System.Windows.Freezable.IsFrozen" /> la valeur <see langword="true" />.</summary>
      <exception cref="T:System.InvalidOperationException">Le <see cref="T:System.Windows.Freezable" /> ne peut pas être rendu non modifiable.</exception>
    </member>
    <member name="M:System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)">
      <summary>Si le paramètre <paramref name="isChecking" /> est <see langword="true" />, cette méthode indique si le <see cref="T:System.Windows.Freezable" /> spécifié peut être rendu non modifiable ou pas. Si le paramètre <paramref name="isChecking" /> est <see langword="false" />, cette méthode essaie de rendre le <see cref="T:System.Windows.Freezable" /> spécifié non modifiable et indique si l'opération a réussi.</summary>
      <param name="freezable">Objet à vérifier ou à rendre non modifiable. Si <paramref name="isChecking" /> est <see langword="true" />, l'objet est vérifié pour déterminer s'il peut être rendu non modifiable ou pas. Si <paramref name="isChecking" /> est <see langword="false" />, l'objet est rendu non modifiable, si possible.</param>
      <param name="isChecking">
        <see langword="true" /> pour retourner une indication de la possibilité ou non de figer l'objet (sans le figer réellement) ; <see langword="false" /> pour figer réellement l'objet.</param>
      <returns>Si <paramref name="isChecking" /> est <see langword="true" />, cette méthode retourne <see langword="true" /> si le <see cref="T:System.Windows.Freezable" /> spécifié peut être rendu non modifiable, ou <see langword="false" /> si cette opération est impossible. Si <paramref name="isChecking" /> est <see langword="false" />, cette méthode retourne <see langword="true" /> si le <see cref="T:System.Windows.Freezable" /> spécifié est désormais non modifiable, ou <see langword="false" /> si cette opération est impossible.</returns>
      <exception cref="T:System.InvalidOperationException">Lorsque <paramref name="isChecking" /> est <see langword="false" />, la tentative de rendre <paramref name="freezable" /> non modifiable a échoué ; l'objet est maintenant dans un état inconnu (il peut être partiellement figé).</exception>
    </member>
    <member name="M:System.Windows.Freezable.FreezeCore(System.Boolean)">
      <summary>Rend l'objet <see cref="T:System.Windows.Freezable" /> non modifiable ou vérifie si celui-ci peut être rendu non modifiable ou pas.</summary>
      <param name="isChecking">
        <see langword="true" /> pour retourner une indication de la possibilité ou non de figer l'objet (sans le figer réellement) ; <see langword="false" /> pour figer réellement l'objet.</param>
      <returns>Si <paramref name="isChecking" /> est <see langword="true" />, cette méthode retourne <see langword="true" /> si le <see cref="T:System.Windows.Freezable" /> peut être rendu non modifiable, ou <see langword="false" /> si cette opération est impossible. Si <paramref name="isChecking" /> est <see langword="false" />, cette méthode retourne <see langword="true" /> si le <see cref="T:System.Windows.Freezable" /> spécifié est désormais non modifiable, ou <see langword="false" /> si cette opération est impossible.</returns>
    </member>
    <member name="M:System.Windows.Freezable.GetAsFrozen">
      <summary>Crée une copie figée de <see cref="T:System.Windows.Freezable" />, à l'aide des valeurs de propriété (non-animées) de base. Étant donné que la copie est figée, tous les sous-objets figés sont copiés par référence.</summary>
      <returns>Copie figée de <see cref="T:System.Windows.Freezable" />. La propriété <see cref="P:System.Windows.Freezable.IsFrozen" /> de la copie a la valeur <see langword="true" />.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Freezable" /> ne peut pas être figé parce qu'il contient des expressions ou des propriétés animées.</exception>
    </member>
    <member name="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Convertit l'instance en clone figé du <see cref="T:System.Windows.Freezable" /> spécifié à l'aide des valeurs de propriétés (non-animées) de base.</summary>
      <param name="sourceFreezable">Instance à copier.</param>
    </member>
    <member name="M:System.Windows.Freezable.GetCurrentValueAsFrozen">
      <summary>Crée une copie figée de <see cref="T:System.Windows.Freezable" /> à l'aide des valeurs de propriété actuelles. Étant donné que la copie est figée, tous les sous-objets figés sont copiés par référence.</summary>
      <returns>Copie figée de <see cref="T:System.Windows.Freezable" />. La propriété <see cref="P:System.Windows.Freezable.IsFrozen" /> de la copie a la valeur <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Convertit l'instance actuelle en un clone figé du <see cref="T:System.Windows.Freezable" /> spécifié. Si l'objet comporte des propriétés de dépendance animées, leurs valeurs animées actuelles sont copiées.</summary>
      <param name="sourceFreezable">
        <see cref="T:System.Windows.Freezable" /> à copier et figer.</param>
    </member>
    <member name="P:System.Windows.Freezable.IsFrozen">
      <summary>Obtient une valeur qui indique si l’objet est actuellement modifiable.</summary>
      <returns>
        <see langword="true" /> si l’objet est figé et ne peut pas être modifié ; <see langword="false" /> si l’objet peut être modifié.</returns>
    </member>
    <member name="M:System.Windows.Freezable.OnChanged">
      <summary>Appelé quand l’objet <see cref="T:System.Windows.Freezable" /> actuel est modifié.</summary>
    </member>
    <member name="M:System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)">
      <summary>Garantit que les pointeurs de contexte appropriés sont établis pour un membre de données de type <see cref="T:System.Windows.DependencyObjectType" /> qui vient juste d'être défini.</summary>
      <param name="oldValue">Valeur précédente du membre de données.</param>
      <param name="newValue">Valeur actuelle du membre de données.</param>
    </member>
    <member name="M:System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>Ce membre prend en charge l’infrastructure Windows Presentation Foundation (WPF) et n’est pas destiné à être directement utilisé à partir de votre code.</summary>
      <param name="oldValue">Valeur précédente du membre de données.</param>
      <param name="newValue">Valeur actuelle du membre de données.</param>
      <param name="property">Propriété ayant changé.</param>
    </member>
    <member name="M:System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Substitue l’implémentation <see cref="T:System.Windows.DependencyObject" /> de <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" /> pour appeler également tous les gestionnaires <see cref="E:System.Windows.Freezable.Changed" /> en réponse à une propriété de dépendance variable de type <see cref="T:System.Windows.Freezable" />.</summary>
      <param name="e">Données d’événement qui contiennent des informations sur les propriétés modifiées, les anciennes valeurs et les nouvelles.</param>
    </member>
    <member name="M:System.Windows.Freezable.ReadPreamble">
      <summary>Garantit que <see cref="T:System.Windows.Freezable" /> est accessible à partir d'un thread valide. Les héritiers de <see cref="T:System.Windows.Freezable" /> doivent appeler cette méthode au début de toute API lisant les membres de données qui ne sont pas des propriétés de dépendance.</summary>
    </member>
    <member name="M:System.Windows.Freezable.WritePostscript">
      <summary>Déclenche l’événement <see cref="E:System.Windows.Freezable.Changed" /> pour le <see cref="T:System.Windows.Freezable" /> et appelle sa méthode <see cref="M:System.Windows.Freezable.OnChanged" />. Les classes qui dérivent de <see cref="T:System.Windows.Freezable" /> doivent appeler cette méthode à la fin de toute API qui modifie des membres de classe qui ne sont pas stockés en tant que propriétés de dépendance.</summary>
    </member>
    <member name="M:System.Windows.Freezable.WritePreamble">
      <summary>Vérifie que le <see cref="T:System.Windows.Freezable" /> n'est pas figé et que son accès s'effectue à partir d'un contexte de thread valide. Les héritiers de <see cref="T:System.Windows.Freezable" /> doivent appeler cette méthode au début de toute API écrivant les membres de données qui ne sont pas des propriétés de dépendance.</summary>
      <exception cref="T:System.InvalidOperationException">L'instance de <see cref="T:System.Windows.Freezable" /> est figée et ses membres ne sont pas accessibles en écriture.</exception>
    </member>
    <member name="T:System.Windows.Input.FocusNavigationDirection">
      <summary>Spécifie la direction dans une interface utilisateur où une demande de modification du focus souhaitée est tentée. La direction est soit basée sur l'ordre de tabulation, soit par direction relative dans la disposition.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Down">
      <summary>Déplacer le focus sur un autre élément pouvant être actif et situé plus bas par rapport à l'élément ayant actuellement le focus.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.First">
      <summary>Déplacer le focus sur le premier élément pouvant être actif dans l'ordre de tabulation. Non pris en charge pour <see cref="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Last">
      <summary>Déplacer le focus sur le dernier élément pouvant être actif dans l'ordre de tabulation. Non pris en charge pour <see cref="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Left">
      <summary>Déplacer le focus sur un autre élément pouvant être actif et situé à gauche de l'élément ayant actuellement le focus.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Next">
      <summary>Déplacer le focus sur l'élément pouvant être actif suivant dans l'ordre de tabulation. Non pris en charge pour <see cref="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Previous">
      <summary>Déplacer le focus sur l'élément pouvant être actif précédent dans l'ordre de tabulation. Non pris en charge pour <see cref="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Right">
      <summary>Déplacer le focus sur un autre élément pouvant être actif et situé à droite de l'élément ayant actuellement le focus.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Up">
      <summary>Déplacer le focus sur un autre élément pouvant être actif et situé plus haut par rapport à l'élément ayant actuellement le focus.</summary>
    </member>
    <member name="T:System.Windows.Input.Key">
      <summary>Spécifie les valeurs de clés possibles sur un clavier.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.A">
      <summary>Touche A.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.AbntC1">
      <summary>Touche ABNT_C1 (Brésil).</summary>
    </member>
    <member name="F:System.Windows.Input.Key.AbntC2">
      <summary>Touche ABNT_C2 (Brésil).</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Add">
      <summary>Touche Ajouter.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Apps">
      <summary>Touche Application (clavier Microsoft Natural Keyboard). Également appelée touche de menu car elle affiche un menu contextuel spécifique à l'application.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Attn">
      <summary>Touche ATTN.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.B">
      <summary>Touche B.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Back">
      <summary>Touche Retour arrière.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserBack">
      <summary>Touche de page précédente du navigateur.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserFavorites">
      <summary>Touche des Favoris du navigateur.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserForward">
      <summary>Touche de page suivante du navigateur.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserHome">
      <summary>Touche de début du navigateur.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserRefresh">
      <summary>Touche d’actualisation du navigateur.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserSearch">
      <summary>Touche de recherche du navigateur.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserStop">
      <summary>Touche d’arrêt du navigateur.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.C">
      <summary>Touche C.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Cancel">
      <summary>Touche d’annulation.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Capital">
      <summary>Touche Verr. maj.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.CapsLock">
      <summary>Touche Verr. maj.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Clear">
      <summary>Touche Effacer.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.CrSel">
      <summary>Touche CRSEL.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D">
      <summary>Touche D.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D0">
      <summary>Touche 0 (zéro).</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D1">
      <summary>Touche 1 (un).</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D2">
      <summary>Touche 2.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D3">
      <summary>Touche 3.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D4">
      <summary>Touche 4.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D5">
      <summary>Touche 5.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D6">
      <summary>Touche 6.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D7">
      <summary>Touche 7.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D8">
      <summary>Touche 8.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D9">
      <summary>Touche 9.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeAlphanumeric">
      <summary>Touche DBE_ALPHANUMERIC.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeCodeInput">
      <summary>Touche DBE_CODEINPUT.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeDbcsChar">
      <summary>Touche DBE_DBCSCHAR.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeDetermineString">
      <summary>Touche DBE_DETERMINESTRING.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeEnterDialogConversionMode">
      <summary>Touche DBE_ENTERDLGCONVERSIONMODE.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeEnterImeConfigureMode">
      <summary>Touche DBE_ENTERIMECONFIGMODE.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeEnterWordRegisterMode">
      <summary>Touche DBE_ENTERWORDREGISTERMODE.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeFlushString">
      <summary>Touche DBE_FLUSHSTRING.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeHiragana">
      <summary>Touche DBE_HIRAGANA.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeKatakana">
      <summary>Touche DBE_KATAKANA.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeNoCodeInput">
      <summary>Touche DBE_NOCODEINPUT.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeNoRoman">
      <summary>Touche DBE_NOROMAN.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeRoman">
      <summary>Touche DBE_ROMAN.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeSbcsChar">
      <summary>Touche DBE_SBCSCHAR.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DeadCharProcessed">
      <summary>La touche est utilisée avec une autre touche pour créer un caractère combiné unique.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Decimal">
      <summary>Touche de décimale.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Delete">
      <summary>Touche Suppression.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Divide">
      <summary>Touche de division.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Down">
      <summary>Touche Bas.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.E">
      <summary>Touche E.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.End">
      <summary>Touche Fin.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Enter">
      <summary>Touche Entrée.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.EraseEof">
      <summary>Touche ERASE EOF.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Escape">
      <summary>Touche Échap.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Execute">
      <summary>Touche Exécuter.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ExSel">
      <summary>Touche EXSEL.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F">
      <summary>Touche F.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F1">
      <summary>Touche F1.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F10">
      <summary>Touche F10.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F11">
      <summary>Touche F11.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F12">
      <summary>Touche F12.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F13">
      <summary>Touche F13.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F14">
      <summary>Touche F14.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F15">
      <summary>Touche F15.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F16">
      <summary>Touche F16.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F17">
      <summary>Touche F17.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F18">
      <summary>Touche F18.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F19">
      <summary>Touche F19.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F2">
      <summary>Touche F2.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F20">
      <summary>Touche F20.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F21">
      <summary>Touche F21.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F22">
      <summary>Touche F22.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F23">
      <summary>Touche F23.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F24">
      <summary>Touche F24.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F3">
      <summary>Touche F3.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F4">
      <summary>Touche F4.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F5">
      <summary>Touche F5.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F6">
      <summary>Touche F6.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F7">
      <summary>Touche F7.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F8">
      <summary>Touche F8.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F9">
      <summary>Touche F9.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.FinalMode">
      <summary>Touche mode final IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.G">
      <summary>Touche G.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.H">
      <summary>Touche H.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.HangulMode">
      <summary>Touche mode Hangul IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.HanjaMode">
      <summary>Touche mode Hanja IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Help">
      <summary>Touche Aide.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Home">
      <summary>Touche Début.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.I">
      <summary>Touche I.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeAccept">
      <summary>Touche Accepter IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeConvert">
      <summary>Touche de conversion IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeModeChange">
      <summary>Touche de demande de changement de mode IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeNonConvert">
      <summary>Touche NonConvert IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeProcessed">
      <summary>Touche spéciale qui masque la touche réelle traitée par un IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Insert">
      <summary>Touche Insertion.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.J">
      <summary>Touche J.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.JunjaMode">
      <summary>Touche mode Junja IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.K">
      <summary>Touche K.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.KanaMode">
      <summary>Touche mode Kana IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.KanjiMode">
      <summary>Touche mode Kanji IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.L">
      <summary>Touche L.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LaunchApplication1">
      <summary>Touche de lancement de l’application1.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LaunchApplication2">
      <summary>Touche de lancement de l’application2.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LaunchMail">
      <summary>Touche de démarrage de la messagerie.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Left">
      <summary>Touche Gauche.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LeftAlt">
      <summary>Touche ALT de gauche.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LeftCtrl">
      <summary>Touche CTRL de gauche.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LeftShift">
      <summary>Touche Maj de gauche.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LineFeed">
      <summary>Touche Saut de ligne.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LWin">
      <summary>Touche du logo Windows de gauche (clavier Microsoft Natural Keyboard).</summary>
    </member>
    <member name="F:System.Windows.Input.Key.M">
      <summary>Touche M.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.MediaNextTrack">
      <summary>Touche de piste suivante du média.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.MediaPlayPause">
      <summary>Touche de lecture/pause du média.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.MediaPreviousTrack">
      <summary>Touche de piste précédente du média.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.MediaStop">
      <summary>Touche d’arrêt du média.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Multiply">
      <summary>Touche de multiplication.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.N">
      <summary>Touche N.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Next">
      <summary>Touche Page suivante.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NoName">
      <summary>Constante réservée à un usage ultérieur.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.None">
      <summary>Aucune touche enfoncée.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumLock">
      <summary>Touche Verr. num.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad0">
      <summary>Touche 0 du pavé numérique.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad1">
      <summary>Touche 1 du pavé numérique.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad2">
      <summary>Touche 2 du pavé numérique.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad3">
      <summary>Touche 3 du pavé numérique.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad4">
      <summary>Touche 4 du pavé numérique.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad5">
      <summary>Touche 5 du pavé numérique.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad6">
      <summary>Touche 6 du pavé numérique.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad7">
      <summary>Touche 7 du pavé numérique.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad8">
      <summary>Touche 8 du pavé numérique.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad9">
      <summary>Touche 9 du pavé numérique.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.O">
      <summary>Touche O.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem1">
      <summary>Touche OEM 1.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem102">
      <summary>Touche OEM 102.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem2">
      <summary>Touche OEM 2.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem3">
      <summary>Touche OEM 3.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem4">
      <summary>Touche OEM 4.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem5">
      <summary>Touche OEM 5.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem6">
      <summary>Touche OEM 6.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem7">
      <summary>Touche OEM 7.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem8">
      <summary>Touche OEM 8.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemAttn">
      <summary>Touche OEM ATTN.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemAuto">
      <summary>Touche OEM AUTO.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemBackslash">
      <summary>Touche OEM de barre oblique inverse.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemBackTab">
      <summary>Touche OEM BACKTAB.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemClear">
      <summary>Touche OEM d’effacement.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemCloseBrackets">
      <summary>Touche OEM de crochets fermants.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemComma">
      <summary>Touche OEM de virgule.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemCopy">
      <summary>Touche OEM de copie.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemEnlw">
      <summary>Touche OEM ENLW.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemFinish">
      <summary>Touche OEM de fin.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemMinus">
      <summary>Touche OEM de soustraction.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemOpenBrackets">
      <summary>Touche OEM de crochets ouvrants.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemPeriod">
      <summary>Touche OEM de point.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemPipe">
      <summary>Touche OEM de barre verticale.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemPlus">
      <summary>Touche OEM d’addition.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemQuestion">
      <summary>Touche OEM de question.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemQuotes">
      <summary>Touche OEM de guillemets.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemSemicolon">
      <summary>Touche OEM de point-virgule.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemTilde">
      <summary>Touche OEM de tilde.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.P">
      <summary>Touche P.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Pa1">
      <summary>Touche PA1.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.PageDown">
      <summary>Touche Page suivante.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.PageUp">
      <summary>Touche Page précédente.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Pause">
      <summary>Touche Pause.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Play">
      <summary>Touche de lecture.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Print">
      <summary>Touche Imprimer.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.PrintScreen">
      <summary>Touche Impression écran.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Prior">
      <summary>Touche Page précédente.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Q">
      <summary>Touche Q.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.R">
      <summary>Touche R.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Return">
      <summary>Touche Retour.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Right">
      <summary>Touche Droite.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.RightAlt">
      <summary>Touche ALT de droite.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.RightCtrl">
      <summary>Touche CTRL de droite.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.RightShift">
      <summary>Touche Maj de droite.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.RWin">
      <summary>Touche du logo Windows de droite (clavier Microsoft Natural Keyboard).</summary>
    </member>
    <member name="F:System.Windows.Input.Key.S">
      <summary>Touche S.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Scroll">
      <summary>Touche Arrêt défil.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Select">
      <summary>Touche de sélection.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.SelectMedia">
      <summary>Touche de sélection du média.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Separator">
      <summary>Touche du séparateur.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Sleep">
      <summary>Touche de mise en veille de l’ordinateur.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Snapshot">
      <summary>Touche Impression écran.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Space">
      <summary>Touche Espace.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Subtract">
      <summary>Touche de soustraction.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.System">
      <summary>Touche spéciale qui masque la touche réelle traitée par une touche système.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.T">
      <summary>Touche T.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Tab">
      <summary>Touche Tabulation.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.U">
      <summary>Touche U.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Up">
      <summary>Touche Haut.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.V">
      <summary>Touche V.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.VolumeDown">
      <summary>Touche de réduction du volume.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.VolumeMute">
      <summary>Touche de désactivation du volume.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.VolumeUp">
      <summary>Touche d’augmentation du volume.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.W">
      <summary>Touche W.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.X">
      <summary>Touche X.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Y">
      <summary>Touche Y.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Z">
      <summary>Touche Z.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Zoom">
      <summary>Touche ZOOM.</summary>
    </member>
    <member name="T:System.Windows.Input.KeyConverter">
      <summary>Convertit un objet <see cref="T:System.Windows.Input.Key" /> en et depuis d'autres types.</summary>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Input.Key" />.</summary>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Détermine si un objet du type spécifié peut être converti en une instance de <see cref="T:System.Windows.Input.Key" /> à l'aide du contexte indiqué.</summary>
      <param name="context">Contexte de format qui fournit des informations sur l'environnement à partir duquel ce convertisseur est appelé.</param>
      <param name="sourceType">Type évalué pour la conversion.</param>
      <returns>
        <see langword="true" /> si <paramref name="sourceType" /> est de type <see cref="T:System.String" />, sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Détermine si une instance de <see cref="T:System.Windows.Input.Key" /> peut être convertie vers le type spécifié, à l'aide du contexte indiqué.</summary>
      <param name="context">Contexte de format qui fournit des informations sur l'environnement à partir duquel ce convertisseur est appelé.</param>
      <param name="destinationType">Type évalué pour la conversion.</param>
      <returns>
        <see langword="true" /> si <paramref name="destinationType" /> est de type <see cref="T:System.String" />, sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Tente de convertir l'objet spécifié en <see cref="T:System.Windows.Input.Key" />, à l'aide du contexte indiqué.</summary>
      <param name="context">Contexte de format qui fournit des informations sur l'environnement à partir duquel ce convertisseur est appelé.</param>
      <param name="culture">Informations propres à la culture.</param>
      <param name="source">Objet à convertir.</param>
      <returns>Objet converti.</returns>
      <exception cref="T:System.NotSupportedException">
        <paramref name="source" /> ne peut pas être converti.</exception>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Tente de convertir <see cref="T:System.Windows.Input.Key" /> vers le type spécifié, à l'aide du contexte indiqué.</summary>
      <param name="context">Contexte de format qui fournit des informations sur l'environnement à partir duquel ce convertisseur est appelé.</param>
      <param name="culture">Informations propres à la culture.</param>
      <param name="value">Objet à convertir.</param>
      <param name="destinationType">Type dans lequel convertir l'objet.</param>
      <returns>Objet converti.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> est <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> ne peut pas être converti en <paramref name="destinationType" />.</exception>
    </member>
    <member name="T:System.Windows.Input.KeyInterop">
      <summary>Fournit des méthodes statiques pour effectuer des conversions entre les touches virtuelles Win32 et l’énumération <see cref="T:System.Windows.Input.Key" />.</summary>
    </member>
    <member name="M:System.Windows.Input.KeyInterop.KeyFromVirtualKey(System.Int32)">
      <summary>Convertit une touche virtuelle Win32 en <see cref="T:System.Windows.Input.Key" /> WPF.</summary>
      <param name="virtualKey">La touche virtuelle à convertir.</param>
      <returns>La touche WPF.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyInterop.VirtualKeyFromKey(System.Windows.Input.Key)">
      <summary>Convertit WPF <see cref="T:System.Windows.Input.Key" /> en touche virtuelle Win32.</summary>
      <param name="key">WPF à convertir.</param>
      <returns>La touche virtuelle Win32.</returns>
    </member>
    <member name="T:System.Windows.Input.KeyValueSerializer">
      <summary>Convertit des instances de <see cref="T:System.String" /> vers et à partir d'instances de <see cref="T:System.Windows.Input.Key" />.</summary>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Input.KeyValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Détermine si le <see cref="T:System.String" /> spécifié peut être converti en instance de <see cref="T:System.Windows.Input.Key" />.</summary>
      <param name="value">Chaîne à évaluer pour la conversion.</param>
      <param name="context">Informations de contexte utilisées pour la conversion.</param>
      <returns>Retourne toujours <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Détermine si le <see cref="T:System.Windows.Input.Key" /> spécifié peut être converti en  <see cref="T:System.String" />.</summary>
      <param name="value">La clé à évaluer pour la conversion.</param>
      <param name="context">Informations de contexte utilisées pour la conversion.</param>
      <returns>
        <see langword="true" /> si <paramref name="value" /> peut être converti en <see cref="T:System.String" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Convertit un <see cref="T:System.String" /> en <see cref="T:System.Windows.Input.Key" />.</summary>
      <param name="value">Chaîne à convertir en <see cref="T:System.Windows.Input.Key" />.</param>
      <param name="context">Informations de contexte utilisées pour la conversion.</param>
      <returns>Nouvelle instance de <see cref="T:System.Windows.Input.Key" /> basée sur le <paramref name="value" /> fourni.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Convertit une instance de <see cref="T:System.Windows.Input.Key" /> en <see cref="T:System.String" />.</summary>
      <param name="value">La clé à convertir en une chaîne.</param>
      <param name="context">Informations de contexte utilisées pour la conversion.</param>
      <returns>Représentation sous forme de chaîne indifférente du <see cref="T:System.Windows.Input.Key" /> spécifié.</returns>
    </member>
    <member name="T:System.Windows.Input.ModifierKeys">
      <summary>Spécifie le jeu de touches de modification.</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Alt">
      <summary>Touche ALT.</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Control">
      <summary>Touche CTRL.</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.None">
      <summary>Aucun modificateur n'est enfoncé.</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Shift">
      <summary>Touche MAJ (MAJUSCULE).</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Windows">
      <summary>La touche du logo Windows.</summary>
    </member>
    <member name="T:System.Windows.Input.ModifierKeysConverter">
      <summary>Convertit un objet <see cref="T:System.Windows.Input.ModifierKeys" /> en et depuis d'autres types.</summary>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Input.ModifierKeysConverter" />.</summary>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Détermine si un objet du type spécifié peut être converti en une instance de <see cref="T:System.Windows.Input.ModifierKeys" /> à l'aide du contexte indiqué.</summary>
      <param name="context">Contexte de format qui fournit des informations sur l'environnement à partir duquel ce convertisseur est appelé.</param>
      <param name="sourceType">Type évalué pour la conversion.</param>
      <returns>
        <see langword="true" /> si <paramref name="sourceType" /> est de type <see cref="T:System.String" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Détermine si une instance de <see cref="T:System.Windows.Input.ModifierKeys" /> peut être convertie vers le type spécifié, à l'aide du contexte indiqué.</summary>
      <param name="context">Contexte de format qui fournit des informations sur l'environnement à partir duquel ce convertisseur est appelé.</param>
      <param name="destinationType">Type évalué pour la conversion.</param>
      <returns>
        <see langword="true" /> si <paramref name="destinationType" /> est de type <see cref="T:System.String" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Tente de convertir l'objet spécifié en <see cref="T:System.Windows.Input.ModifierKeys" />, à l'aide du contexte indiqué.</summary>
      <param name="context">Contexte de format qui fournit des informations sur l'environnement à partir duquel ce convertisseur est appelé.</param>
      <param name="culture">Informations propres à la culture.</param>
      <param name="source">Objet à convertir.</param>
      <returns>Objet converti.</returns>
      <exception cref="T:System.NotSupportedException">
        <paramref name="source" /> ne peut pas être converti.</exception>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Tente de convertir <see cref="T:System.Windows.Input.ModifierKeys" /> vers le type spécifié, à l'aide du contexte indiqué.</summary>
      <param name="context">Contexte de format qui fournit des informations sur l'environnement à partir duquel ce convertisseur est appelé.</param>
      <param name="culture">Informations propres à la culture.</param>
      <param name="value">Objet à convertir.</param>
      <param name="destinationType">Type dans lequel convertir l'objet.</param>
      <returns>Objet converti.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="value" /> n'est pas mappé sur un objet <see cref="T:System.Windows.Input.ModifierKeys" /> valide.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> ne peut pas être converti.</exception>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.IsDefinedModifierKeys(System.Windows.Input.ModifierKeys)">
      <summary>Détermine si la valeur spécifiée est une valeur <see cref="T:System.Windows.Input.ModifierKeys" /> valide.</summary>
      <param name="modifierKeys">Valeur dont la validité doit être vérifiée.</param>
      <returns>
        <see langword="true" /> si l'entrée est une valeur <see cref="T:System.Windows.Input.ModifierKeys" /> valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Input.ModifierKeysValueSerializer">
      <summary>Convertit des instances de <see cref="T:System.String" /> vers et à partir d'instances de <see cref="T:System.Windows.Input.ModifierKeys" />.</summary>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Input.ModifierKeysValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Détermine si le <see cref="T:System.String" /> spécifié peut être converti en instance de <see cref="T:System.Windows.Input.ModifierKeys" />.</summary>
      <param name="value">Chaîne à évaluer pour la conversion.</param>
      <param name="context">Informations de contexte utilisées pour la conversion.</param>
      <returns>Retourne toujours <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Détermine si le <see cref="T:System.Windows.Input.ModifierKeys" /> spécifié peut être converti en  <see cref="T:System.String" />.</summary>
      <param name="value">Les touches de modification à évaluer pour la conversion.</param>
      <param name="context">Informations de contexte utilisées pour la conversion.</param>
      <returns>
        <see langword="true" /> si <paramref name="value" /> peut être converti en <see cref="T:System.String" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Convertit <see cref="T:System.String" /> en une valeur <see cref="T:System.Windows.Input.ModifierKeys" />.</summary>
      <param name="value">Chaîne à convertir en <see cref="T:System.Windows.Input.ModifierKeys" />.</param>
      <param name="context">Informations de contexte utilisées pour la conversion.</param>
      <returns>Nouvelle instance de <see cref="T:System.Windows.Input.ModifierKeys" /> basée sur le <paramref name="value" /> fourni.</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Convertit une instance de <see cref="T:System.Windows.Input.ModifierKeys" /> en <see cref="T:System.String" />.</summary>
      <param name="value">La clé à convertir en une chaîne.</param>
      <param name="context">Informations de contexte utilisées pour la conversion.</param>
      <returns>Représentation sous forme de chaîne indifférente de la valeur <see cref="T:System.Windows.Input.ModifierKeys" /> spécifiée.</returns>
    </member>
    <member name="T:System.Windows.Input.TraversalRequest">
      <summary>Représente une demande de déplacement du focus vers un autre contrôle.</summary>
    </member>
    <member name="M:System.Windows.Input.TraversalRequest.#ctor(System.Windows.Input.FocusNavigationDirection)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Input.TraversalRequest" />.</summary>
      <param name="focusNavigationDirection">Direction prévue du parcours du focus, en tant que valeur de l'énumération.</param>
    </member>
    <member name="P:System.Windows.Input.TraversalRequest.FocusNavigationDirection">
      <summary>Obtient la direction du parcours.</summary>
      <returns>Une des valeurs de l'énumération de la direction du parcours.</returns>
    </member>
    <member name="P:System.Windows.Input.TraversalRequest.Wrapped">
      <summary>Obtient ou définit une valeur qui indique si le parcours du focus a atteint la fin des éléments enfants qui peuvent avoir le focus.</summary>
      <returns>
        <see langword="true" /> si ce parcours a atteint la fin des éléments enfants qui peuvent avoir le focus ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Int32Rect">
      <summary>Décrit la largeur, la hauteur et l’emplacement d’un rectangle entier.</summary>
    </member>
    <member name="M:System.Windows.Int32Rect.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initialise une nouvelle instance d'un <see cref="T:System.Windows.Int32Rect" /> avec les coordonnées <see cref="P:System.Windows.Int32Rect.X" /> et <see cref="P:System.Windows.Int32Rect.Y" /> et les <see cref="P:System.Windows.Int32Rect.Width" /> et <see cref="P:System.Windows.Int32Rect.Height" /> spécifiées.</summary>
      <param name="x">Le <see cref="P:System.Windows.Int32Rect.X" /> de la nouvelle instance <see cref="T:System.Windows.Int32Rect" /> qui spécifie la coordonnée x de l'angle supérieur gauche du rectangle.</param>
      <param name="y">Le <see cref="P:System.Windows.Int32Rect.Y" /> de la nouvelle instance <see cref="T:System.Windows.Int32Rect" /> qui spécifie la coordonnée y de l'angle supérieur gauche du rectangle.</param>
      <param name="width">La <see cref="P:System.Windows.Int32Rect.Width" /> de la nouvelle instance <see cref="T:System.Windows.Int32Rect" /> qui spécifie la largeur du rectangle.</param>
      <param name="height">La <see cref="P:System.Windows.Int32Rect.Height" /> de la nouvelle instance <see cref="T:System.Windows.Int32Rect" /> qui spécifie la hauteur du rectangle.</param>
    </member>
    <member name="P:System.Windows.Int32Rect.Empty">
      <summary>Obtient un rectangle vide, valeur spéciale qui représente un rectangle sans position ni zone.</summary>
      <returns>Un rectangle vide sans position ni zone.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.Equals(System.Object)">
      <summary>Détermine si le rectangle spécifié est égal à ce rectangle.</summary>
      <param name="o">Objet à comparer avec le rectangle actuel.</param>
      <returns>
        <see langword="true" /> si <paramref name="o" /> est un <see cref="T:System.Windows.Int32Rect" /> et a les mêmes <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> et <see cref="P:System.Windows.Int32Rect.Height" /> que ce rectangle ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.Equals(System.Windows.Int32Rect)">
      <summary>Détermine si le rectangle spécifié est égal à ce rectangle.</summary>
      <param name="value">Le rectangle à comparer avec le rectangle actuel.</param>
      <returns>
        <see langword="true" /> si <paramref name="value" /> a le même <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> et <see cref="P:System.Windows.Int32Rect.Height" /> que ce rectangle ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.Equals(System.Windows.Int32Rect,System.Windows.Int32Rect)">
      <summary>Détermine si les rectangles spécifiés sont égaux.</summary>
      <param name="int32Rect1">Premier rectangle à comparer.</param>
      <param name="int32Rect2">Deuxième rectangle à comparer.</param>
      <returns>
        <see langword="true" /> si <paramref name="int32Rect1" /> et <paramref name="int32Rect2" /> ont les mêmes <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" />, et <see cref="P:System.Windows.Int32Rect.Height" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.GetHashCode">
      <summary>Crée un code de hachage à partir des <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> et valeurs <see cref="P:System.Windows.Int32Rect.Height" /> de ce rectangle.</summary>
      <returns>Code de hachage de ce rectangle.</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.HasArea">
      <summary>Obtient une valeur qui indique si les propriétés <see cref="P:System.Windows.Int32Rect.Width" /> et <see cref="P:System.Windows.Int32Rect.Height" /> de <see cref="T:System.Windows.Int32Rect" /> sont supérieures à 0.</summary>
      <returns>
        <see langword="true" />Si les <see cref="P:System.Windows.Int32Rect.Width" /> propriétés <see cref="P:System.Windows.Int32Rect.Height" /> et de <see cref="T:System.Windows.Int32Rect" /> sont supérieures à 0; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.Height">
      <summary>Obtient ou définit la hauteur du rectangle.</summary>
      <returns>Hauteur du rectangle. La valeur par défaut est <c>0</c>.</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.IsEmpty">
      <summary>Obtient une valeur qui indique si le rectangle est vide.</summary>
      <returns>
        <see langword="true" />Si le rectangle est vide; Sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.op_Equality(System.Windows.Int32Rect,System.Windows.Int32Rect)">
      <summary>Compare l'égalité exacte de deux rectangles.</summary>
      <param name="int32Rect1">Premier rectangle à comparer.</param>
      <param name="int32Rect2">Deuxième rectangle à comparer.</param>
      <returns>
        <see langword="true" /> si <paramref name="int32Rect1" /> et <paramref name="int32Rect2" /> ont les mêmes <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" />, et <see cref="P:System.Windows.Int32Rect.Height" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.op_Inequality(System.Windows.Int32Rect,System.Windows.Int32Rect)">
      <summary>Compare si deux rectangles sont inégaux.</summary>
      <param name="int32Rect1">Premier rectangle à comparer.</param>
      <param name="int32Rect2">Deuxième rectangle à comparer.</param>
      <returns>
        <see langword="false" /> si <paramref name="int32Rect1" /> et <paramref name="int32Rect2" /> ont les mêmes <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" />, et <see cref="P:System.Windows.Int32Rect.Height" /> ; sinon, si toutes ces valeurs sont identiques, alors <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.Parse(System.String)">
      <summary>Crée une structure <see cref="T:System.Windows.Int32Rect" /> à partir de la représentation <see cref="T:System.String" /> spécifiée.</summary>
      <param name="source">Représentation sous forme de chaîne d'un <see cref="T:System.Windows.Int32Rect" />.</param>
      <returns>Structure <see cref="T:System.Windows.Int32Rect" /> équivalente.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>Met en forme la valeur de l'instance actuelle à l'aide du format spécifié.</summary>
      <param name="format">Format à utiliser.</param>
      <param name="provider">Fournisseur à utiliser pour mettre en forme la valeur</param>
      <returns>Valeur de l'instance actuelle au format spécifié.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.ToString">
      <summary>Crée une représentation sous forme de chaîne de ce <see cref="T:System.Windows.Int32Rect" />.</summary>
      <returns>Chaîne contenant les mêmes valeurs <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> et <see cref="P:System.Windows.Int32Rect.Height" /> que cette structure <see cref="T:System.Windows.Int32Rect" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.ToString(System.IFormatProvider)">
      <summary>Crée une représentation sous forme de chaîne de ce <see cref="T:System.Windows.Int32Rect" /> basée sur le <see cref="T:System.IFormatProvider" /> fourni.</summary>
      <param name="provider">Fournisseur de format à utiliser. Si le fournisseur a la valeur <see langword="null" />, la culture actuelle est alors utilisée.</param>
      <returns>Représentation sous forme de chaîne de cette instance de <see cref="T:System.Windows.Int32Rect" />.</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.Width">
      <summary>Obtient ou définit la largeur du rectangle.</summary>
      <returns>Largeur du rectangle. La valeur par défaut est <c>0</c>.</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.X">
      <summary>Obtient ou définit la coordonnée X du coin supérieur gauche du rectangle.</summary>
      <returns>Coordonnée X du coin supérieur gauche du rectangle. La valeur par défaut est <c>0</c>.</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.Y">
      <summary>Obtient ou définit la coordonnée y du coin supérieur gauche du rectangle.</summary>
      <returns>Coordonnée y du coin supérieur gauche du rectangle. La valeur par défaut est <c>0</c>.</returns>
    </member>
    <member name="T:System.Windows.Int32RectConverter">
      <summary>Convertit les instances d'autres types vers et à partir de <see cref="T:System.Windows.Int32Rect" />.</summary>
    </member>
    <member name="M:System.Windows.Int32RectConverter.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Int32RectConverter" />.</summary>
    </member>
    <member name="M:System.Windows.Int32RectConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Détermine si un objet peut être converti à partir d'un type donné en une instance de <see cref="T:System.Windows.Int32Rect" />.</summary>
      <param name="context">Décrit les informations de contexte d’un type.</param>
      <param name="sourceType">Type de la source qui est en cours d'évaluation pour conversion.</param>
      <returns>
        <see langword="true" /> si le type peut être converti en <see cref="T:System.Windows.Int32Rect" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Int32RectConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Détermine si une instance de <see cref="T:System.Windows.Int32Rect" /> peut être convertie en un type différent.</summary>
      <param name="context">Décrit les informations de contexte d’un type.</param>
      <param name="destinationType">Type souhaité pour lequel <see cref="T:System.Windows.Int32Rect" /> est évalué à des fins de conversion.</param>
      <returns>
        <see langword="true" /> si <see cref="T:System.Windows.Int32Rect" /> peut être converti en <paramref name="destinationType" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Int32RectConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Tente de convertir le type spécifié en <see cref="T:System.Windows.Int32Rect" />.</summary>
      <param name="context">Fournit les informations contextuelles requises pour la conversion.</param>
      <param name="culture">Informations culturelles à respecter pendant la conversion.</param>
      <param name="value">Objet en cours de conversion.</param>
      <returns>
        <see cref="T:System.Windows.Int32Rect" /> créé à partir de la conversion de <paramref name="value" />.</returns>
      <exception cref="T:System.NotSupportedException">Levée si l'objet spécifié est NULL ou s'il s'agit d'un type qui ne peut pas être converti en <see cref="T:System.Windows.Int32Rect" />.</exception>
    </member>
    <member name="M:System.Windows.Int32RectConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Tente de convertir <see cref="T:System.Windows.Int32Rect" /> en un type spécifié.</summary>
      <param name="context">Fournit les informations contextuelles requises pour la conversion.</param>
      <param name="culture">Informations culturelles à respecter pendant la conversion.</param>
      <param name="value">
        <see cref="T:System.Windows.Int32Rect" /> à convertir.</param>
      <param name="destinationType">Type vers lequel convertir <see cref="T:System.Windows.Int32Rect" />.</param>
      <returns>Objet créé à partir de la conversion de cette <see cref="T:System.Windows.Int32Rect" />.</returns>
      <exception cref="T:System.NotSupportedException">Levée si <paramref name="value" /> est <see langword="null" /> ou n'est pas <see cref="T:System.Windows.Int32Rect" /> ou si <paramref name="destinationType" /> ne fait pas partie des types valides pour conversion.</exception>
    </member>
    <member name="T:System.Windows.Interop.ComponentDispatcher">
      <summary>Active le contrôle partagé de la pompe de messages entre Win32 et WPF dans les scénarios d'interopérabilité.</summary>
    </member>
    <member name="P:System.Windows.Interop.ComponentDispatcher.CurrentKeyboardMessage">
      <summary>Obtient le dernier message déclenché.</summary>
      <returns>Dernier message.</returns>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.EnterThreadModal">
      <summary>Se produit lorsqu'un thread devient modal.</summary>
    </member>
    <member name="P:System.Windows.Interop.ComponentDispatcher.IsThreadModal">
      <summary>Obtient une valeur qui indique si le thread est modal.</summary>
      <returns>
        <see langword="true" /> si le thread est modal ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.LeaveThreadModal">
      <summary>Se produit lorsqu'un thread modal devient non modal.</summary>
    </member>
    <member name="M:System.Windows.Interop.ComponentDispatcher.PopModal">
      <summary>Appelé pour indiquer qu'un thread modal n'est plus modal.</summary>
    </member>
    <member name="M:System.Windows.Interop.ComponentDispatcher.PushModal">
      <summary>Appelé pour indiquer que le thread est modal.</summary>
    </member>
    <member name="M:System.Windows.Interop.ComponentDispatcher.RaiseIdle">
      <summary>Appelé pour indiquer qu'un thread est inactif.</summary>
    </member>
    <member name="M:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage(System.Windows.Interop.MSG@)">
      <summary>Indique qu'un nouveau message est disponible pour une gestion éventuelle.</summary>
      <param name="msg">Message et ses données associées.</param>
      <returns>
        <see langword="true" />, si l'un des modules qui écoutent la boucle de message a traité le message. Le propriétaire de la boucle de messages doit ignorer le message. <see langword="false" />, si le message n'a pas été traité. Dans ce cas, le propriétaire de la pompe de messages doit appeler la fonction Win32 TranslateMessage suivie de DispatchMessage.</returns>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage">
      <summary>Se produit lorsque la pompe de messages reçoit un message du clavier.</summary>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.ThreadIdle">
      <summary>Se produit lorsque le thread est inactif.</summary>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage">
      <summary>Se produit lorsque la pompe de messages reçoit un message du clavier.</summary>
    </member>
    <member name="T:System.Windows.Interop.IKeyboardInputSink">
      <summary>Fournit un récepteur de clavier pour les composants qui gèrent les opérations de tabulation, les accélérateurs et les mnémoniques au-delà des limites d'interopérabilité et entre les HWND. Cette interface implémente la gestion des messages de clavier dans les scénarios d'interopérabilité WPF-Win32.</summary>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin">
      <summary>Obtient une valeur qui indique si le récepteur ou un de ses composants contenus a le focus.</summary>
      <returns>
        <see langword="true" /> si le récepteur ou un de ses composants contenus a le focus ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite">
      <summary>Obtient ou définit une référence à l'interface <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> du conteneur du composant.</summary>
      <returns>Référence à l'interface <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> du conteneur.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary>Appelé lorsque l'un des mnémoniques (touches d'accès rapide) pour ce récepteur est appelé.</summary>
      <param name="msg">Message pour le mnémonique et les données associées. Ne modifiez pas cette structure de message. Elle est passée par référence pour des raisons de performances uniquement.</param>
      <param name="modifiers">Touches de modification.</param>
      <returns>
        <see langword="true" /> si le message a été géré ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
      <summary>Enregistre l'interface <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> d'un composant contenu.</summary>
      <param name="sink">Récepteur <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> du composant contenu.</param>
      <returns>Site <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> du composant contenu.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)">
      <summary>Définit le focus sur le premier ou le dernier taquet de tabulation du récepteur.</summary>
      <param name="request">Spécifie si le focus doit avoir pour valeur le premier ou le dernier taquet de tabulation.</param>
      <returns>
        <see langword="true" />, si le focus a été défini comme demandé ; <see langword="false" />, s'il n'y a pas de taquets de tabulation.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary>Traite l'entrée au clavier au niveau du message keydown.</summary>
      <param name="msg">Message et données associées. Ne modifiez pas cette structure. Elle est passée par référence pour des raisons de performances uniquement.</param>
      <param name="modifiers">Touches de modification.</param>
      <returns>
        <see langword="true" /> si le message a été géré par l'implémentation de la méthode ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary>Traite les messages d'entrée WM_CHAR, WM_SYSCHAR, WM_DEADCHAR et WM_SYSDEADCHAR avant que <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> ne soit appelé.</summary>
      <param name="msg">Message et données associées. Ne modifiez pas cette structure. Elle est passée par référence pour des raisons de performances uniquement.</param>
      <param name="modifiers">Touches de modification.</param>
      <returns>
        <see langword="true" /> si le message a été traité et <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> ne doit pas être appelé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Interop.IKeyboardInputSite">
      <summary>Gère le focus clavier dans le conteneur.  Cette interface implémente la gestion des messages de clavier dans les scénarios d'interopérabilité WPF-Win32.</summary>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops(System.Windows.Input.TraversalRequest)">
      <summary>Appelé par un composant contenu lorsqu'il a atteint son dernier taquet de tabulation et ne peut plus passer à aucun autre élément.</summary>
      <param name="request">Spécifie si le focus doit avoir pour valeur le premier ou le dernier taquet de tabulation.</param>
      <returns>Si cette méthode retourne <see langword="true" />, le site a déplacé le focus vers un autre composant. Si cette méthode retourne <see langword="false" />, le focus est toujours dans le composant appelant. Le composant doit « décrire une boucle » et définir le focus sur son premier taquet de tabulation contenu.</returns>
    </member>
    <member name="P:System.Windows.Interop.IKeyboardInputSite.Sink">
      <summary>Obtient le récepteur de clavier associé à ce site.</summary>
      <returns>Interface <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> du site actuel.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSite.Unregister">
      <summary>Annule l'enregistrement d'un récepteur d'entrée au clavier enfant de ce site.</summary>
    </member>
    <member name="T:System.Windows.Interop.MSG">
      <summary>Contient des informations sur les messages de la file d'attente de messages d'un thread.</summary>
    </member>
    <member name="P:System.Windows.Interop.MSG.hwnd">
      <summary>Obtient ou définit le handle de fenêtre (HWND) sur la fenêtre dont la procédure de fenêtre reçoit le message.</summary>
      <returns>Handle de fenêtre (HWND).</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.lParam">
      <summary>Obtient ou définit la valeur <paramref name="lParam" /> qui spécifie des informations supplémentaires sur le message. La signification exacte dépend de la valeur du membre <see cref="P:System.Windows.Interop.MSG.message" />.</summary>
      <returns>Valeur <paramref name="lParam" /> du message.</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.message">
      <summary>Obtient ou définit l'identificateur de message.</summary>
      <returns>Identificateur de message.</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.pt_x">
      <summary>Obtient ou définit la coordonnée x de la position du curseur sur l'écran, lorsque le message a été publié.</summary>
      <returns>Coordonnée x de la position du curseur.</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.pt_y">
      <summary>Obtient ou définit la coordonnée y de la position du curseur sur l'écran, lorsque le message a été publié.</summary>
      <returns>Coordonnée y de la position du curseur.</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.time">
      <summary>Obtient ou définit l'heure de publication du message.</summary>
      <returns>Heure de publication du message.</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.wParam">
      <summary>Obtient ou définit la valeur <paramref name="wParam" /> du message qui spécifie des informations supplémentaires sur le message. La signification exacte dépend de la valeur du message.</summary>
      <returns>Valeur <paramref name="wParam" /> du message.</returns>
    </member>
    <member name="T:System.Windows.Interop.ThreadMessageEventHandler">
      <summary>Représente la méthode qui gère les événements <see cref="E:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage" /> et <see cref="E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage" />.</summary>
      <param name="msg">Structure comprenant les données du message.</param>
      <param name="handled">
        <see langword="true" /> si le message a été géré ; sinon, <see langword="false" />.</param>
    </member>
    <member name="T:System.Windows.IWeakEventListener">
      <summary>Prend en charge l'écoute d'événements pour les classes qui doivent recevoir des événements à travers le modèle WeakEvent et <see cref="T:System.Windows.WeakEventManager" />.</summary>
    </member>
    <member name="M:System.Windows.IWeakEventListener.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>Reçoit des événements du gestionnaire d'événements centralisé.</summary>
      <param name="managerType">Le type du <see cref="T:System.Windows.WeakEventManager" /> qui appelle cette méthode.</param>
      <param name="sender">Objet à l'origine de l'événement.</param>
      <param name="e">Donnée d’événement.</param>
      <returns>
        <see langword="true" /> si l'écouteur a géré l'événement. L’enregistrement d’un écouteur pour un événement que l’écouteur ne gère pas est considéré comme une erreur par la gestion de <see cref="T:System.Windows.WeakEventManager" /> dans WPF. La méthode doit néanmoins toujours retourner la valeur <see langword="false" /> si elle reçoit un événement qu'elle ne reconnaît ou ne gère pas.</returns>
    </member>
    <member name="T:System.Windows.LocalValueEntry">
      <summary>Représente un identificateur de propriété et la valeur de propriété d’une propriété de dépendance définie localement.</summary>
    </member>
    <member name="M:System.Windows.LocalValueEntry.Equals(System.Object)">
      <summary>Détermine si deux instances <see cref="T:System.Windows.LocalValueEntry" /> sont égales.</summary>
      <param name="obj">
        <see cref="T:System.Windows.LocalValueEntry" /> à comparer avec l'objet <see cref="T:System.Windows.LocalValueEntry" /> actuel.</param>
      <returns>Cette implémentation <see cref="M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)" /> compare les valeurs de <see cref="P:System.Windows.LocalValueEntry.Property" /> et éventuellement de <see cref="P:System.Windows.LocalValueEntry.Value" />. Le composant <see cref="P:System.Windows.LocalValueEntry.Property" /> de <see cref="T:System.Windows.LocalValueEntry" /> est un type valeur. Il s'agit donc toujours d'une comparaison de bits. Pour le composant <see cref="P:System.Windows.LocalValueEntry.Value" />, cette implémentation emploie une comparaison de bits s'il s'agit d'un type valeur. Pour les propriétés localement définies qui ont des types référence, le comportement est différé aux mécanismes de détermination de l'égalité de ce type, car l'opérateur == est utilisé en interne sur les deux valeurs. Par défaut, il s'agirait d'une égalité de référence des valeurs. Par conséquent, l'égalité de la totalité de <see cref="T:System.Windows.LocalValueEntry" /> deviendrait une égalité de référence.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEntry.GetHashCode">
      <summary>Retourne le code de hachage pour ce <see cref="T:System.Windows.LocalValueEntry" />.</summary>
      <returns>Valeur d’entier 32 bits signé.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
      <summary>Compare les instances <see cref="T:System.Windows.LocalValueEntry" /> spécifiées pour déterminer si elles sont identiques.</summary>
      <param name="obj1">Première instance à comparer.</param>
      <param name="obj2">Deuxième instance à comparer.</param>
      <returns>
        <see langword="true" /> si <see cref="T:System.Windows.LocalValueEntry" /><paramref name="obj1" /> est égal à <see cref="T:System.Windows.LocalValueEntry" /><paramref name="obj2" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEntry.op_Inequality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
      <summary>Compare les instances <see cref="T:System.Windows.LocalValueEnumerator" /> spécifiées pour déterminer si elles sont différentes.</summary>
      <param name="obj1">Première instance à comparer.</param>
      <param name="obj2">Deuxième instance à comparer.</param>
      <returns>Cette implémentation compare les valeurs de <see cref="P:System.Windows.LocalValueEntry.Property" /> et les composants <see cref="P:System.Windows.LocalValueEntry.Value" /> de <see cref="T:System.Windows.LocalValueEntry" />. Le composant <see cref="P:System.Windows.LocalValueEntry.Property" /> de <see cref="T:System.Windows.LocalValueEntry" /> est toujours un type valeur. Cette comparaison est donc toujours une comparaison de bits. Pour le composant <see cref="P:System.Windows.LocalValueEntry.Value" />, cette implémentation emploie une comparaison de bits s'il s'agit d'un type valeur.  
Pour les propriétés localement définies qui ont des types référence, le comportement est différé aux mécanismes de détermination de l'égalité de ce type, car l'opérateur <see langword="==" /> est utilisé en interne sur les deux valeurs. Par défaut, il s'agit d'une égalité de référence des valeurs.</returns>
    </member>
    <member name="P:System.Windows.LocalValueEntry.Property">
      <summary>Obtient l’identificateur de la propriété de dépendance définie localement qui est représentée par cette entrée.</summary>
      <returns>Identificateur de la propriété de dépendance définie localement.</returns>
    </member>
    <member name="P:System.Windows.LocalValueEntry.Value">
      <summary>Obtient la valeur de la propriété de dépendance définie localement.</summary>
      <returns>Valeur de la propriété de dépendance définie localement en tant qu’objet.</returns>
    </member>
    <member name="T:System.Windows.LocalValueEnumerator">
      <summary>Fournit la prise en charge de l’énumération pour les valeurs locales de toutes les propriétés de dépendance qui existent sur un <see cref="T:System.Windows.DependencyObject" />.</summary>
    </member>
    <member name="P:System.Windows.LocalValueEnumerator.Count">
      <summary>Obtient le nombre des éléments représentés dans la collection.</summary>
      <returns>Nombre d’éléments dans la collection</returns>
    </member>
    <member name="P:System.Windows.LocalValueEnumerator.Current">
      <summary>Obtient l’élément actuel dans la collection.</summary>
      <returns>
        <see cref="T:System.Windows.LocalValueEntry" /> en cours dans la collection.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.Equals(System.Object)">
      <summary>Détermine si l'attribut <see cref="T:System.Windows.LocalValueEnumerator" /> fourni équivaut à cet attribut <see cref="T:System.Windows.LocalValueEnumerator" />.</summary>
      <param name="obj">
        <see cref="T:System.Windows.LocalValueEnumerator" /> à comparer avec l'objet <see cref="T:System.Windows.LocalValueEnumerator" /> actuel.</param>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Windows.LocalValueEnumerator" /> spécifié est égal au <see cref="T:System.Windows.LocalValueEnumerator" /> actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.GetHashCode">
      <summary>Retourne un code de hachage pour le <see cref="T:System.Windows.LocalValueEnumerator" /> actuel.</summary>
      <returns>Code de hachage entier 32 bits.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.MoveNext">
      <summary>Avance l’énumérateur à l’élément suivant de la collection.</summary>
      <returns>
        <see langword="true" /> si l'énumérateur a pu avancer jusqu'à l'élément suivant ; <see langword="false" /> si l'énumérateur a dépassé la fin de la collection.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.op_Equality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)">
      <summary>Compare si deux objets <see cref="T:System.Windows.LocalValueEnumerator" /> spécifiés sont les mêmes.</summary>
      <param name="obj1">Premier objet à comparer.</param>
      <param name="obj2">Deuxième objet à comparer.</param>
      <returns>
        <see langword="true" /> si <see cref="T:System.Windows.LocalValueEnumerator" /><paramref name="obj1" /> est égal à <see cref="T:System.Windows.LocalValueEnumerator" /><paramref name="obj2" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.op_Inequality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)">
      <summary>Compare deux objets <see cref="T:System.Windows.LocalValueEnumerator" /> spécifiés pour déterminer s'ils ne sont pas les mêmes.</summary>
      <param name="obj1">Premier objet à comparer.</param>
      <param name="obj2">Deuxième objet à comparer.</param>
      <returns>
        <see langword="true" /> si les instances ne sont pas égales ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.Reset">
      <summary>Rétablit l'énumérateur à sa position initiale, qui précède le premier élément de la collection.</summary>
    </member>
    <member name="P:System.Windows.LocalValueEnumerator.System#Collections#IEnumerator#Current">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.Collections.IEnumerator.Current" />.</summary>
      <returns>Élément actuel dans la collection.</returns>
    </member>
    <member name="T:System.Windows.Markup.DesignerSerializationOptions">
      <summary>Spécifie la méthode de sérialisation d'une propriété.</summary>
    </member>
    <member name="F:System.Windows.Markup.DesignerSerializationOptions.SerializeAsAttribute">
      <summary>La propriété doit être sérialisée comme un attribut.</summary>
    </member>
    <member name="T:System.Windows.Markup.DesignerSerializationOptionsAttribute">
      <summary>Spécifie les indicateurs de sérialisation d'une propriété.</summary>
    </member>
    <member name="M:System.Windows.Markup.DesignerSerializationOptionsAttribute.#ctor(System.Windows.Markup.DesignerSerializationOptions)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.DesignerSerializationOptionsAttribute" />.</summary>
      <param name="designerSerializationOptions">Spécifie la méthode de sérialisation de la propriété.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="designerSerializationOptions" /> n'est pas une valeur <see cref="T:System.Windows.Markup.DesignerSerializationOptions" /> valide.</exception>
    </member>
    <member name="P:System.Windows.Markup.DesignerSerializationOptionsAttribute.DesignerSerializationOptions">
      <summary>Obtient <see cref="T:System.Windows.Markup.DesignerSerializationOptions" /> défini sur l'attribut.</summary>
      <returns>Option de sérialisation, sous forme de valeur de l'énumération.</returns>
    </member>
    <member name="T:System.Windows.Markup.InternalTypeHelper">
      <summary>Classe abstraite utilisée en interne par le compilateur XAML WPF pour prendre en charge l'utilisation de types internes.</summary>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.InternalTypeHelper" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
      <summary>En cas de substitution dans une classe dérivée (générée), joint un délégué de gestionnaires d'événements à un événement interne.</summary>
      <param name="eventInfo">Informations sur l'événement (informations de réflexion CLR).</param>
      <param name="target">Cible à laquelle le gestionnaire est attaché.</param>
      <param name="handler">Gestionnaire d'événements.</param>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
      <summary>En cas de substitution dans une classe dérivée (générée), crée un délégué d'événement qui référence une méthode de gestionnaire non publique.</summary>
      <param name="delegateType">
        <see cref="T:System.Type" /> du délégué.</param>
      <param name="target">Cible à laquelle le gestionnaire est attaché.</param>
      <param name="handler">Nom de l'implémentation de gestionnaire.</param>
      <returns>Référence de délégué.</returns>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
      <summary>En cas de substitution dans une classe dérivée (générée=, crée une instance d'un type interne.</summary>
      <param name="type">
        <see cref="T:System.Type" /> à créer.</param>
      <param name="culture">Informations propres à la culture.</param>
      <returns>Instance créée.</returns>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
      <summary>En cas de substitution dans une classe dérivée (générée), obtient la valeur d'une propriété interne sur l'objet cible.</summary>
      <param name="propertyInfo">Informations sur la propriété à obtenir.</param>
      <param name="target">Objet qui contient la valeur de propriété souhaitée.</param>
      <param name="culture">Informations propres à la culture.</param>
      <returns>Valeur de la propriété.</returns>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
      <summary>En cas de substitution dans une classe dérivée (générée), définit la valeur d'une propriété interne sur l'objet cible.</summary>
      <param name="propertyInfo">Informations sur la propriété à définir.</param>
      <param name="target">Objet qui contient la valeur de propriété souhaitée.</param>
      <param name="value">Valeur à définir.</param>
      <param name="culture">Informations propres à la culture.</param>
    </member>
    <member name="T:System.Windows.Markup.IReceiveMarkupExtension">
      <summary>Fournit un mécanisme permettant aux types de déclarer qu'ils peuvent recevoir une expression (ou une autre classe) d'une extension de balisage, où la sortie est un type de propriété différent de la propriété cible. Ne pas utiliser pour les implémentations du .NET Framework 4.</summary>
    </member>
    <member name="M:System.Windows.Markup.IReceiveMarkupExtension.ReceiveMarkupExtension(System.String,System.Windows.Markup.MarkupExtension,System.IServiceProvider)">
      <summary>Fournit la gestion pour les extensions de balisage qui fournissent des valeurs de propriété. Ne pas utiliser pour les implémentations du .NET Framework 4 ; consultez <see cref="T:System.Windows.Markup.IReceiveMarkupExtension" />.</summary>
      <param name="property">Nom de la propriété cible.</param>
      <param name="markupExtension">Instance d'extension de balisage des données entrantes.</param>
      <param name="serviceProvider">Peut fournir des services supplémentaires qui doivent être exécutés lors du traitement des données d'extension de balisage pour une valeur de propriété.</param>
    </member>
    <member name="T:System.Windows.Markup.Primitives.MarkupObject">
      <summary>Classe abstraite qui représente un objet permettant de parcourir une arborescence d'objets.</summary>
    </member>
    <member name="M:System.Windows.Markup.Primitives.MarkupObject.AssignRootContext(System.Windows.Markup.IValueSerializerContext)">
      <summary>En cas de substitution dans une classe dérivée, assigne un contexte racine pour les classes <see cref="T:System.Windows.Markup.ValueSerializer" />.</summary>
      <param name="context">
        <see cref="T:System.Windows.Markup.IValueSerializerContext" /> pour lequel assigner un contexte racine.</param>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupObject.Attributes">
      <summary>En cas de substitution dans une classe dérivée, obtient les attributs associés à ce <see cref="T:System.Windows.Markup.Primitives.MarkupObject" />.</summary>
      <returns>Collection d’attributs.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupObject.Instance">
      <summary>En cas de substitution dans une classe dérivée, obtient l'instance de l'objet représentée par ce <see cref="T:System.Windows.Markup.Primitives.MarkupObject" />.</summary>
      <returns>Instance de l'objet.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupObject.ObjectType">
      <summary>En cas de substitution dans une classe dérivée, obtient le type de l'instance <see cref="T:System.Windows.Markup.Primitives.MarkupObject" />.</summary>
      <returns>Type de l'objet.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupObject.Properties">
      <summary>En cas de substitution dans une classe dérivée, obtient les propriétés de cette instance <see cref="T:System.Windows.Markup.Primitives.MarkupObject" /> qui doit être écrite en XAML.</summary>
      <returns>Propriétés.</returns>
    </member>
    <member name="T:System.Windows.Markup.Primitives.MarkupProperty">
      <summary>Classe abstraite qui fournit une description de propriété à utiliser lors de l'écriture dans le balisage pour encapsuler l'accès aux propriétés et à leurs valeurs.</summary>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.Attributes">
      <summary>En cas de substitution dans une classe dérivée, obtient les attributs associés à ce <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />.</summary>
      <returns>Collection d’attributs.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty">
      <summary>En cas de substitution dans une classe dérivée, obtient l'identificateur <see cref="T:System.Windows.DependencyProperty" /> pour la propriété du balisage si la propriété est implémentée en tant que propriété de dépendance.</summary>
      <returns>Identificateur de la propriété de dépendance.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsAttached">
      <summary>En cas de substitution dans une classe dérivée, détermine si cette <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> est une <see cref="T:System.Windows.DependencyProperty" /> attachée.</summary>
      <returns>
        <see langword="true" /> si la propriété est une <see cref="T:System.Windows.DependencyProperty" /> attachée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsComposite">
      <summary>En cas de substitution dans une classe dérivée, détermine si cette <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> est une propriété composite.</summary>
      <returns>
        <see langword="true" /> s'il s'agit d'une propriété composite ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsConstructorArgument">
      <summary>En cas de substitution dans une classe dérivée, détermine si cette <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> représente un argument de constructeur.</summary>
      <returns>
        <see langword="true" /> si cette propriété représente un argument de constructeur ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsContent">
      <summary>En cas de substitution dans une classe dérivée, détermine si cette <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> représente le contenu direct d'une collection.</summary>
      <returns>
        <see langword="true" /> si la propriété représente le contenu direct ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsKey">
      <summary>En cas de substitution dans une classe dérivée, détermine si cette <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> représente la clé utilisée par l'<see cref="T:System.Windows.Markup.Primitives.MarkupObject" /> pour stocker l'élément dans un dictionnaire.</summary>
      <returns>
        <see langword="true" /> si cette propriété représente une clé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsValueAsString">
      <summary>En cas de substitution dans une classe dérivée, détermine si cette <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> représente le texte passé à un convertisseur de type pour créer une instance de la propriété ou si un constructeur doit être utilisé.</summary>
      <returns>
        <see langword="true" />, si cette <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> représente une chaîne ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.Items">
      <summary>En cas de substitution dans une classe dérivée, obtient les éléments qui constituent la valeur de cette propriété.</summary>
      <returns>Éléments qui constituent la valeur de cette propriété.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.Name">
      <summary>En cas de substitution dans une classe dérivée, obtient un nom utilisé pour le diagnostic et le signalement d'erreurs.</summary>
      <returns>Nom de la propriété d'identificateur.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor">
      <summary>En cas de substitution dans une classe dérivée, obtient le <see cref="T:System.ComponentModel.PropertyDescriptor" /> pour la propriété de balisage.</summary>
      <returns>Descripteur de propriété.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.PropertyType">
      <summary>En cas de substitution dans une classe dérivée, obtient le type CLR de la propriété.</summary>
      <returns>Type CLR.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.StringValue">
      <summary>En cas de substitution dans une classe dérivée, obtient la valeur de chaîne de cette <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />.</summary>
      <returns>Valeur de chaîne.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.TypeReferences">
      <summary>En cas de substitution dans une classe dérivée, obtient le jeu des types que cette <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> référencera lors de la sérialisation de sa valeur sous forme de chaîne.</summary>
      <returns>Jeu de types.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.Value">
      <summary>En cas de substitution dans une classe dérivée, obtient la valeur actuelle de <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />.</summary>
      <returns>Valeur en cours.</returns>
    </member>
    <member name="T:System.Windows.Markup.ServiceProviders">
      <summary>Fournit une implémentation pour l'interface <see cref="T:System.IServiceProvider" /> avec des méthodes permettant d'ajouter des services.</summary>
    </member>
    <member name="M:System.Windows.Markup.ServiceProviders.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.ServiceProviders" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.ServiceProviders.AddService(System.Type,System.Object)">
      <summary>Ajoute un service à la liste.</summary>
      <param name="serviceType">Type de service du nouveau service.</param>
      <param name="service">Classe d'implémentation du service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> ou <paramref name="service" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Tentative d'ajout d'un service qui existe déjà dans le dictionnaire.</exception>
    </member>
    <member name="M:System.Windows.Markup.ServiceProviders.GetService(System.Type)">
      <summary>Obtient l'objet service du type spécifié.</summary>
      <param name="serviceType">Type de l’objet de service à obtenir.</param>
      <returns>Implémentation de service pour le type <paramref name="serviceType" />. Peut être <see langword="null" /> s'il n'y a aucun service stocké pour le type <paramref name="serviceType" />.</returns>
    </member>
    <member name="T:System.Windows.Media.Converters.MatrixValueSerializer">
      <summary>Convertit des instances de <see cref="T:System.String" /> vers et à partir d'instances de <see cref="T:System.Windows.Media.Matrix" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Media.Converters.MatrixValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Détermine si la conversion d'une <see cref="T:System.String" /> donnée en une instance de <see cref="T:System.Windows.Media.Matrix" /> est possible.</summary>
      <param name="value">Chaîne à évaluer pour la conversion.</param>
      <param name="context">Informations contextuelles utilisées pour la conversion.</param>
      <returns>
        <see langword="true" /> si la valeur peut être convertie ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Détermine si une instance de <see cref="T:System.Windows.Media.Matrix" /> peut être convertie en <see cref="T:System.String" />.</summary>
      <param name="value">Instance de <see cref="T:System.Windows.Media.Matrix" /> à évaluer pour la conversion.</param>
      <param name="context">Informations contextuelles utilisées pour la conversion.</param>
      <returns>
        <see langword="true" /> si <paramref name="value" /> peut être converti en <see cref="T:System.String" /> ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Se produit lorsque <paramref name="value" /> n'est pas <see cref="T:System.Windows.Media.Int32Collection" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Convertit un <see cref="T:System.String" /> en <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="value">Valeur <see cref="T:System.String" /> à convertir en <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="context">Informations contextuelles utilisées pour la conversion.</param>
      <returns>Nouvelle instance de <see cref="T:System.Windows.Media.Matrix" /> basée sur le <paramref name="value" /> fourni.</returns>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Convertit une instance de <see cref="T:System.Windows.Media.Matrix" /> en <see cref="T:System.String" />.</summary>
      <param name="value">Instance de <see cref="T:System.Windows.Media.Matrix" /> à évaluer pour la conversion.</param>
      <param name="context">Informations contextuelles utilisées pour la conversion.</param>
      <returns>Une représentation <see cref="T:System.String" /> de l'objet <see cref="T:System.Windows.Media.Matrix" /> fourni.</returns>
    </member>
    <member name="T:System.Windows.Media.DisableDpiAwarenessAttribute">
      <summary>Permet aux applications WPF de désactiver la prise en compte des points par pouce (ppp) pour tous les éléments de l'interface utilisateur.</summary>
    </member>
    <member name="M:System.Windows.Media.DisableDpiAwarenessAttribute.#ctor">
      <summary>Initialise une nouvelle instance de <see cref="T:System.Windows.Media.DisableDpiAwarenessAttribute" />.</summary>
    </member>
    <member name="T:System.Windows.Media.Matrix">
      <summary>Représente une matrice de transformation affine 3x3 utilisée pour les transformations dans un espace 2D.</summary>
    </member>
    <member name="M:System.Windows.Media.Matrix.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="m11">Coefficient <see cref="P:System.Windows.Media.Matrix.M11" /> de la nouvelle structure <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="m12">Coefficient <see cref="P:System.Windows.Media.Matrix.M12" /> de la nouvelle structure <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="m21">Coefficient <see cref="P:System.Windows.Media.Matrix.M21" /> de la nouvelle structure <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="m22">Coefficient <see cref="P:System.Windows.Media.Matrix.M22" /> de la nouvelle structure <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="offsetX">Coefficient <see cref="P:System.Windows.Media.Matrix.OffsetX" /> de la nouvelle structure <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="offsetY">Coefficient <see cref="P:System.Windows.Media.Matrix.OffsetY" /> de la nouvelle structure <see cref="T:System.Windows.Media.Matrix" />.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Append(System.Windows.Media.Matrix)">
      <summary>Ajoute la structure <see cref="T:System.Windows.Media.Matrix" /> spécifiée à cette <see cref="T:System.Windows.Media.Matrix" /> structure.</summary>
      <param name="matrix">La structure <see cref="T:System.Windows.Media.Matrix" /> à ajouter à cette structure <see cref="T:System.Windows.Media.Matrix" />.</param>
    </member>
    <member name="P:System.Windows.Media.Matrix.Determinant">
      <summary>Obtient le déterminant de cette structure <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns>Le déterminant de cette <see cref="T:System.Windows.Media.Matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Equals(System.Object)">
      <summary>Détermine si le <see cref="T:System.Object" /> spécifié est une structure <see cref="T:System.Windows.Media.Matrix" /> identique à cette <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="o">
        <see cref="T:System.Object" /> à comparer.</param>
      <returns>
        <see langword="true" /> si <paramref name="o" /> est une structure <see cref="T:System.Windows.Media.Matrix" /> identique à cette structure <see cref="T:System.Windows.Media.Matrix" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix)">
      <summary>Détermine si la structure <see cref="T:System.Windows.Media.Matrix" /> spécifiée est identique à cette instance.</summary>
      <param name="value">Instance de <see cref="T:System.Windows.Media.Matrix" /> à comparer à cette instance.</param>
      <returns>
        <see langword="true" /> si les instances sont égales ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary>Détermine si les deux structures <see cref="T:System.Windows.Media.Matrix" /> spécifiées sont identiques.</summary>
      <param name="matrix1">Première structure <see cref="T:System.Windows.Media.Matrix" /> à comparer.</param>
      <param name="matrix2">Deuxième structure <see cref="T:System.Windows.Media.Matrix" /> à comparer.</param>
      <returns>
        <see langword="true" /> si <paramref name="matrix1" /> et <paramref name="matrix2" /> sont identiques ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.GetHashCode">
      <summary>Retourne le code de hachage pour cette structure <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns>Code de hachage de cette instance.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.HasInverse">
      <summary>Obtient une valeur qui indique si cette structure <see cref="T:System.Windows.Media.Matrix" /> est réversible.</summary>
      <returns>
        <see langword="true" /> si la <see cref="T:System.Windows.Media.Matrix" /> a un inverse ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.Identity">
      <summary>Obtient une identité <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns>Matrice d'identité.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Invert">
      <summary>Inverse cette structure <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <exception cref="T:System.InvalidOperationException">La structure <see cref="T:System.Windows.Media.Matrix" /> n'est pas réversible.</exception>
    </member>
    <member name="P:System.Windows.Media.Matrix.IsIdentity">
      <summary>Obtient une valeur qui indique si cette structure <see cref="T:System.Windows.Media.Matrix" /> est une matrice d'identité.</summary>
      <returns>
        <see langword="true" /> si la structure <see cref="T:System.Windows.Media.Matrix" /> est une matrice d'identité ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M11">
      <summary>Obtient ou définit la valeur de la première ligne et de la première colonne de cette structure <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns>Valeur de la première ligne et de la première colonne de cette <see cref="T:System.Windows.Media.Matrix" />. La valeur par défaut est 1.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M12">
      <summary>Obtient ou définit la valeur de la première ligne et de la deuxième colonne de cette structure <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns>Valeur de la première ligne et de la deuxième colonne de cette <see cref="T:System.Windows.Media.Matrix" />. La valeur par défaut est 0.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M21">
      <summary>Obtient ou définit la valeur de la deuxième ligne et de la première colonne pour cette structure <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns>Valeur de la deuxième ligne et de la première colonne de cette <see cref="T:System.Windows.Media.Matrix" />. La valeur par défaut est 0.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M22">
      <summary>Obtient ou définit la valeur de la deuxième ligne et de la deuxième colonne de cette structure <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns>Valeur de la deuxième ligne et de la deuxième colonne de cette structure <see cref="T:System.Windows.Media.Matrix" />. La valeur par défaut est 1.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary>Multiplie une structure <see cref="T:System.Windows.Media.Matrix" /> par une autre structure <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="trans1">La première structure <see cref="T:System.Windows.Media.Matrix" /> à multiplier.</param>
      <param name="trans2">La deuxième structure <see cref="T:System.Windows.Media.Matrix" /> à multiplier.</param>
      <returns>Résultat de la multiplication de <paramref name="trans1" /> par <paramref name="trans2" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.OffsetX">
      <summary>Obtient ou définit la valeur de la troisième ligne et de la première colonne de cette structure <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns>Valeur de la troisième ligne et de la première colonne de cette structure <see cref="T:System.Windows.Media.Matrix" />. La valeur par défaut est 0.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.OffsetY">
      <summary>Obtient ou définit la valeur de la troisième ligne et de la deuxième colonne de cette structure <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns>Valeur de la troisième ligne et de la deuxième colonne de cette structure <see cref="T:System.Windows.Media.Matrix" />. La valeur par défaut est 0.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.op_Equality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary>Détermine si les deux structures <see cref="T:System.Windows.Media.Matrix" /> spécifiées sont identiques.</summary>
      <param name="matrix1">Première structure <see cref="T:System.Windows.Media.Matrix" /> à comparer.</param>
      <param name="matrix2">Deuxième structure <see cref="T:System.Windows.Media.Matrix" /> à comparer.</param>
      <returns>
        <see langword="true" /> si <paramref name="matrix1" /> et <paramref name="matrix2" /> sont identiques ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.op_Inequality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary>Détermine si les deux structures <see cref="T:System.Windows.Media.Matrix" /> spécifiées ne sont pas identiques.</summary>
      <param name="matrix1">Première structure <see cref="T:System.Windows.Media.Matrix" /> à comparer.</param>
      <param name="matrix2">Deuxième structure <see cref="T:System.Windows.Media.Matrix" /> à comparer.</param>
      <returns>
        <see langword="true" /> si <paramref name="matrix1" /> et <paramref name="matrix2" /> ne sont pas identiques ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.op_Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary>Multiplie une structure <see cref="T:System.Windows.Media.Matrix" /> par une autre structure <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="trans1">La première structure <see cref="T:System.Windows.Media.Matrix" /> à multiplier.</param>
      <param name="trans2">La deuxième structure <see cref="T:System.Windows.Media.Matrix" /> à multiplier.</param>
      <returns>Résultat de la multiplication de <paramref name="trans1" /> par <paramref name="trans2" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Parse(System.String)">
      <summary>Convertit une représentation de matrice <see cref="T:System.String" /> en la structure <see cref="T:System.Windows.Media.Matrix" /> équivalente.</summary>
      <param name="source">La représentation <see cref="T:System.String" /> de la matrice.</param>
      <returns>Structure <see cref="T:System.Windows.Media.Matrix" /> équivalente.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Prepend(System.Windows.Media.Matrix)">
      <summary>Ajoute la structure <see cref="T:System.Windows.Media.Matrix" /> spécifiée au début de cette structure<see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="matrix">La structure <see cref="T:System.Windows.Media.Matrix" /> à ajouter au début de cette structure <see cref="T:System.Windows.Media.Matrix" />.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Rotate(System.Double)">
      <summary>Applique une rotation d'un angle spécifié par rapport à l'origine de cette structure <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="angle">Angle de rotation.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.RotateAt(System.Double,System.Double,System.Double)">
      <summary>Fait pivoter cette matrice par rapport au point spécifié.</summary>
      <param name="angle">L'angle, en degrés, selon lequel faire pivoter cette matrice.</param>
      <param name="centerX">La coordonnée x du point par rapport auquel faire pivoter cette matrice.</param>
      <param name="centerY">La coordonnée y du point par rapport auquel faire pivoter cette matrice.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.RotateAtPrepend(System.Double,System.Double,System.Double)">
      <summary>Ajoute une rotation d'angle spécifié à un point spécifié au début de cette structure <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="angle">L'angle de rotation, en degrés.</param>
      <param name="centerX">La coordonnée x du centre de rotation.</param>
      <param name="centerY">La coordonnée y du centre de rotation.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.RotatePrepend(System.Double)">
      <summary>Ajoute une rotation d'un angle spécifié au début de cette structure <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="angle">L'angle de rotation à ajouter au début.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Scale(System.Double,System.Double)">
      <summary>Ajoute le vecteur d'échelle spécifié à cette structure <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="scaleX">La valeur à laquelle mettre à l'échelle cette <see cref="T:System.Windows.Media.Matrix" /> le long de l'axe x.</param>
      <param name="scaleY">La valeur à laquelle mettre à l'échelle cette <see cref="T:System.Windows.Media.Matrix" /> le long de l'axe y.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.ScaleAt(System.Double,System.Double,System.Double,System.Double)">
      <summary>Met à l'échelle cette <see cref="T:System.Windows.Media.Matrix" /> au taux spécifié par rapport du point spécifié.</summary>
      <param name="scaleX">L'échelle à appliquer à cette <see cref="T:System.Windows.Media.Matrix" /> le long de l'axe x.</param>
      <param name="scaleY">L'échelle à appliquer à cette <see cref="T:System.Windows.Media.Matrix" /> le long de l'axe y.</param>
      <param name="centerX">La coordonnée x du point central de la mise à l'échelle.</param>
      <param name="centerY">La coordonnée y du point central de la mise à l'échelle.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.ScaleAtPrepend(System.Double,System.Double,System.Double,System.Double)">
      <summary>Ajoute l'échelle spécifiée par rapport au point spécifié au début de cette <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="scaleX">Facteur d'échelle de l'axe-x.</param>
      <param name="scaleY">Facteur d'échelle de l'axe-y</param>
      <param name="centerX">La coordonnée x du point par rapport auquel la mise à l'échelle est exécutée.</param>
      <param name="centerY">La coordonnée y du point par rapport auquel la mise à l'échelle est exécutée.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.ScalePrepend(System.Double,System.Double)">
      <summary>Ajoute le vecteur d'échelle spécifié au début de cette structure <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="scaleX">La valeur à laquelle mettre à l'échelle cette structure <see cref="T:System.Windows.Media.Matrix" /> le long de l'axe x.</param>
      <param name="scaleY">La valeur à laquelle mettre à l'échelle cette structure <see cref="T:System.Windows.Media.Matrix" /> le long de l'axe y.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.SetIdentity">
      <summary>Change cette structure <see cref="T:System.Windows.Media.Matrix" /> en une matrice d'identité.</summary>
    </member>
    <member name="M:System.Windows.Media.Matrix.Skew(System.Double,System.Double)">
      <summary>Ajoute une inclinaison des degrés spécifiés dans les dimensions x et y à cette structure <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="skewX">L'angle dans la dimension x selon lequel incliner cette <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="skewY">L'angle dans la dimension y selon lequel incliner cette <see cref="T:System.Windows.Media.Matrix" />.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.SkewPrepend(System.Double,System.Double)">
      <summary>Ajoute une inclinaison des degrés spécifiés dans les dimensions x et y au début de cette structure <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="skewX">L'angle dans la dimension x selon lequel incliner cette <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="skewY">L'angle dans la dimension y selon lequel incliner cette <see cref="T:System.Windows.Media.Matrix" />.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>Met en forme la valeur de l'instance actuelle à l'aide du format spécifié.</summary>
      <param name="format">Format à utiliser.  
ou 
Référence null (<see langword="Nothing" /> en Visual Basic) pour utiliser le format par défaut défini pour le type de l'implémentation <see cref="T:System.IFormattable" />.</param>
      <param name="provider">Fournisseur à utiliser pour mettre en forme la valeur.  

ou - 
Référence null (<see langword="Nothing" /> en Visual Basic) pour obtenir les informations de mise en forme des nombres à partir des paramètres régionaux définis dans le système d'exploitation.</param>
      <returns>Valeur de l'instance actuelle au format spécifié.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.ToString">
      <summary>Crée une représentation <see cref="T:System.String" /> de cette structure <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns>
        <see cref="T:System.String" /> contenant les valeurs <see cref="P:System.Windows.Media.Matrix.M11" />, <see cref="P:System.Windows.Media.Matrix.M12" />, <see cref="P:System.Windows.Media.Matrix.M21" />, <see cref="P:System.Windows.Media.Matrix.M22" />, <see cref="P:System.Windows.Media.Matrix.OffsetX" />, et <see cref="P:System.Windows.Media.Matrix.OffsetY" /> de cette <see cref="T:System.Windows.Media.Matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.ToString(System.IFormatProvider)">
      <summary>Crée une représentation <see cref="T:System.String" /> de cette structure <see cref="T:System.Windows.Media.Matrix" /> avec des informations de mise en forme propres à la culture.</summary>
      <param name="provider">Informations de mise en forme propres à la culture.</param>
      <returns>
        <see cref="T:System.String" /> contenant les valeurs <see cref="P:System.Windows.Media.Matrix.M11" />, <see cref="P:System.Windows.Media.Matrix.M12" />, <see cref="P:System.Windows.Media.Matrix.M21" />, <see cref="P:System.Windows.Media.Matrix.M22" />, <see cref="P:System.Windows.Media.Matrix.OffsetX" />, et <see cref="P:System.Windows.Media.Matrix.OffsetY" /> de cette <see cref="T:System.Windows.Media.Matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Transform(System.Windows.Point)">
      <summary>Transforme le point spécifié par la <see cref="T:System.Windows.Media.Matrix" /> et renvoie le résultat.</summary>
      <param name="point">Point à transformer.</param>
      <returns>Résultat de la transformation de <paramref name="point" /> par cette structure <see cref="T:System.Windows.Media.Matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Transform(System.Windows.Point[])">
      <summary>Transforme les points spécifiés par cette <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="points">Points à transformer. Les points d'origine du tableau sont remplacés par leurs valeurs transformées.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Transform(System.Windows.Vector)">
      <summary>Transforme le vecteur spécifié par cette <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="vector">Vecteur à transformer.</param>
      <returns>Résultat de la transformation de <paramref name="vector" /> par cette structure <see cref="T:System.Windows.Media.Matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Transform(System.Windows.Vector[])">
      <summary>Transforme les vecteurs spécifiés par cette <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="vectors">Vecteurs à transformer. Les vecteurs d'origine du tableau sont remplacés par leurs valeurs transformées.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Translate(System.Double,System.Double)">
      <summary>Ajoute une traduction des offsets spécifiés à cette structure <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="offsetX">La valeur de l'offset de cette <see cref="T:System.Windows.Media.Matrix" /> le long de l'axe x.</param>
      <param name="offsetY">La valeur de l'offset de cette <see cref="T:System.Windows.Media.Matrix" /> le long de l'axe y.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.TranslatePrepend(System.Double,System.Double)">
      <summary>Ajoute une traduction des offsets spécifiés au début de cette structure <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="offsetX">La valeur de l'offset de cette <see cref="T:System.Windows.Media.Matrix" /> le long de l'axe x.</param>
      <param name="offsetY">La valeur de l'offset de cette <see cref="T:System.Windows.Media.Matrix" /> le long de l'axe y.</param>
    </member>
    <member name="T:System.Windows.Media.MatrixConverter">
      <summary>Convertit des instances d'autres types vers et à partir de <see cref="T:System.Windows.Media.Matrix" />.</summary>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.#ctor">
      <summary>Initialise une nouvelle instance de <see cref="T:System.Windows.Media.MatrixConverter" />.</summary>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Détermine si un objet peut être converti à partir d'un type spécifique en une instance de <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="context">Informations de contexte d'un type.</param>
      <param name="sourceType">Type de la source qui est en cours d'évaluation pour conversion.</param>
      <returns>
        <see langword="true" /> si le type peut être converti en <see cref="T:System.Windows.Media.Matrix" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Détermine si une instance de <see cref="T:System.Windows.Media.Matrix" /> peut être convertie en un type différent.</summary>
      <param name="context">Informations de contexte d'un type.</param>
      <param name="destinationType">Type souhaité pour lequel <see cref="T:System.Windows.Media.Matrix" /> est évalué à des fins de conversion.</param>
      <returns>
        <see langword="true" /> si <see cref="T:System.Windows.Media.Matrix" /> peut être converti en <paramref name="destinationType" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Tente de convertir l'objet spécifié en <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="context">Informations de contexte d'un type.</param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" /> du type converti.</param>
      <param name="value">Objet en cours de conversion.</param>
      <returns>
        <see cref="T:System.Windows.Media.Matrix" /> créé à partir de la conversion de <paramref name="value" />.</returns>
      <exception cref="T:System.NotSupportedException">L'objet spécifié est nul ou est un type qui ne peut pas être converti en <see cref="T:System.Windows.Media.Matrix" />.</exception>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Tente de convertir <see cref="T:System.Windows.Media.Matrix" /> en un type spécifié.</summary>
      <param name="context">Informations de contexte d'un type.</param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" /> du type converti.</param>
      <param name="value">
        <see cref="T:System.Windows.Media.Matrix" /> à convertir.</param>
      <param name="destinationType">Type vers lequel convertir <see cref="T:System.Windows.Media.Matrix" />.</param>
      <returns>Objet créé à partir de la conversion de cette <see cref="T:System.Windows.Media.Matrix" />.</returns>
      <exception cref="T:System.NotSupportedException">La <paramref name="value" /> est nulle ou n'est pas un <see cref="T:System.Windows.Media.Matrix" />, ou le <paramref name="destinationType" /> n'est pas un type de conversion valide.</exception>
    </member>
    <member name="T:System.Windows.Media.TextFormattingMode">
      <summary>Définit les méthodes de mise en forme prises en charge par la classe <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" />.</summary>
    </member>
    <member name="F:System.Windows.Media.TextFormattingMode.Display">
      <summary>Indique que <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> expose le texte à l'aide de mesures de polices compatibles GDI.</summary>
    </member>
    <member name="F:System.Windows.Media.TextFormattingMode.Ideal">
      <summary>Indique que <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> expose le texte à l'aide de mesures de polices idéales.</summary>
    </member>
    <member name="T:System.Windows.NameScope">
      <summary>Implémente la prise en charge de WPF de base pour les méthodes <see cref="T:System.Windows.Markup.INameScope" /> qui stockent ou récupèrent des mappages nom-objet dans une portée de nom XAML particulière. Ajoute la prise en charge de propriété jointe pour simplifier la récupération ou la définition des noms de portées de nom XAML de manière dynamique au niveau de l’élément.</summary>
    </member>
    <member name="M:System.Windows.NameScope.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.NameScope" />.</summary>
    </member>
    <member name="M:System.Windows.NameScope.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Ajoute un élément à la collection.</summary>
      <param name="item">
        <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (la clé est <see cref="T:System.String" />, la valeur est <see cref="T:System.Object" />) qui représente le mappage de nom à ajouter à la portée de nom XAML.</param>
      <exception cref="T:System.ArgumentException">L'un des deux composants de <paramref name="item" /> ou les deux sont <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.NameScope.Add(System.String,System.Object)">
      <summary>Ajoute un élément à la collection.</summary>
      <param name="key">Clé de chaîne, qui est le nom du mappage de la portée de nom XAML à ajouter.</param>
      <param name="value">Valeur d'objet, qui est la référence d'objet du mappage de la portée de nom XAML à ajouter.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ou <paramref name="value" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.NameScope.Clear">
      <summary>Supprime tous les éléments de la collection.</summary>
    </member>
    <member name="M:System.Windows.NameScope.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Détermine si la collection contient l'élément spécifié.</summary>
      <param name="item">Élément à rechercher dans la collection, spécifié comme un <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (la clé est <see cref="T:System.String" />, la valeur est <see cref="T:System.Object" />).</param>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Collections.Generic.KeyValuePair`2" /> spécifié identifie un mappage existant dans ce <see cref="T:System.Windows.NameScope" />. <see langword="false" /> si <see cref="T:System.Collections.Generic.KeyValuePair`2" /> spécifié n'existe pas dans le <see cref="T:System.Windows.NameScope" /> actuel.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.NameScope.ContainsKey(System.String)">
      <summary>Retourne une valeur qui indique si un nom fourni existe déjà dans ce <see cref="T:System.Windows.NameScope" />.</summary>
      <param name="key">Clé de chaîne à rechercher.</param>
      <returns>
        <see langword="true" /> si le <paramref name="key" /> spécifié identifie un nom pour un mappage existant dans ce <see cref="T:System.Windows.NameScope" />. <see langword="false" /> si <paramref name="key" /> spécifié n'existe pas dans le <see cref="T:System.Windows.NameScope" /> actuel.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.NameScope.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>Copie les éléments de la collection dans un tableau, en commençant au niveau d’un index de tableau particulier.</summary>
      <param name="array">Tableau unidimensionnel qui représente la destination des éléments copiés à partir de la collection. Le tableau doit avoir une indexation de base zéro.</param>
      <param name="arrayIndex">Index de base zéro dans l'<paramref name="array" /> à partir duquel la copie commence.</param>
    </member>
    <member name="P:System.Windows.NameScope.Count">
      <summary>Retourne le nombre d'éléments dans la collection de noms mappés dans ce <see cref="T:System.Windows.NameScope" />.</summary>
      <returns>Nombre d’éléments dans la collection</returns>
    </member>
    <member name="M:System.Windows.NameScope.FindName(System.String)">
      <summary>Retourne l’objet correspondant dans la portée de nom XAML gérée par ce <see cref="T:System.Windows.NameScope" />, en fonction d’une chaîne de nom fournie.</summary>
      <param name="name">Partie nom d’un mappage existant pour lequel récupérer la partie objet.</param>
      <returns>Objet demandé qui est mappé avec <paramref name="name" />. Peut retourner <see langword="null" /> si <paramref name="name" /> a été fourni sous la forme d’une valeur <see langword="null" /> ou d’une chaîne vide, ou si aucun objet correspondant n’a été trouvé.</returns>
    </member>
    <member name="M:System.Windows.NameScope.GetNameScope(System.Windows.DependencyObject)">
      <summary>Fournit l’accesseur get de propriété jointe pour la propriété jointe <see cref="P:System.Windows.NameScope.NameScope" />.</summary>
      <param name="dependencyObject">Objet duquel obtenir la portée de nom XAML.</param>
      <returns>Portée de nom XAML, comme une instance de <see cref="T:System.Windows.Markup.INameScope" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.NameScope.IsReadOnly">
      <summary>Obtient une valeur indiquant si la collection est en lecture seule.</summary>
      <returns>Retourne toujours <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.NameScope.Item(System.String)">
      <summary>Obtient ou définit l'élément avec la clé spécifiée.</summary>
      <param name="key">Nom de chaîne pour le mappage de nom XAML à obtenir ou définir.</param>
      <returns>Valeur de l'objet mappé par le nom XAML fourni comme <paramref name="key" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> est fourni comme <see langword="null" />.  

ou - 
<paramref name="value" /> est fourni comme <see langword="null" /> pour une opération Set.</exception>
    </member>
    <member name="P:System.Windows.NameScope.Keys">
      <summary>Obtient une collection des clés dans le dictionnaire <see cref="T:System.Windows.NameScope" />.</summary>
      <returns>Collection des clés dans le dictionnaire <see cref="T:System.Windows.NameScope" />.</returns>
    </member>
    <member name="P:System.Windows.NameScope.NameScope">
      <summary>Obtient ou définit des instances <see cref="T:System.Windows.NameScope" /> attachées dynamiquement.</summary>
    </member>
    <member name="F:System.Windows.NameScope.NameScopeProperty">
      <summary>Identifie la propriété jointe <see cref="P:System.Windows.NameScope.NameScope" />.</summary>
    </member>
    <member name="M:System.Windows.NameScope.RegisterName(System.String,System.Object)">
      <summary>Inscrit une nouvelle paire nom-objet dans la portée de nom XAML actuelle.</summary>
      <param name="name">Nom à utiliser pour le mappage de l’objet donné.</param>
      <param name="scopedElement">Objet à mapper au nom fourni.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> ou <paramref name="scopedElement" /> a été fourni comme <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> a été fourni en tant que chaîne vide. 

ou - 
Le <paramref name="name" /> fourni a été rejeté par l’analyseur, car il contenait des caractères non valides pour un nom XAML. 
ou 
Le <paramref name="name" /> fourni entraînerait une inscription de nom en double.</exception>
    </member>
    <member name="M:System.Windows.NameScope.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Supprime l'objet spécifique de la collection.</summary>
      <param name="item">Objet à supprimer de la collection, spécifié comme un <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (la clé est <see cref="T:System.String" />, la valeur est <see cref="T:System.Object" />).</param>
      <returns>
        <see langword="true" /> si l'élément a été supprimé avec succès de la collection ; sinon, <see langword="false" />. Retourne également <see langword="false" /> si l'élément est introuvable dans la collection.</returns>
    </member>
    <member name="M:System.Windows.NameScope.Remove(System.String)">
      <summary>Supprime de la collection un mappage pour un nom spécifié.</summary>
      <param name="key">Clé de chaîne, qui est le nom du mappage de la portée de nom XAML à supprimer.</param>
      <returns>
        <see langword="true" /> si l'élément a été supprimé avec succès de la collection ; sinon, <see langword="false" />. Retourne également <see langword="false" /> si l'élément est introuvable dans la collection.</returns>
    </member>
    <member name="M:System.Windows.NameScope.SetNameScope(System.Windows.DependencyObject,System.Windows.Markup.INameScope)">
      <summary>Fournit l’accesseur set de propriété jointe pour la propriété jointe <see cref="P:System.Windows.NameScope.NameScope" />.</summary>
      <param name="dependencyObject">Objet pour lequel modifier la portée de nom XAML.</param>
      <param name="value">Nouvelle portée de nom XAML, utilisant un transtypage d’interface.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.NameScope.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#GetEnumerator">
      <summary>Retourne un énumérateur qui itère au sein d’une collection.</summary>
      <returns>Énumérateur qui itère au sein d’une collection.</returns>
    </member>
    <member name="M:System.Windows.NameScope.System#Collections#IEnumerable#GetEnumerator">
      <summary>Retourne un énumérateur qui itère au sein d’une collection.</summary>
      <returns>Énumérateur qui itère au sein d’une collection.</returns>
    </member>
    <member name="M:System.Windows.NameScope.TryGetValue(System.String,System.Object@)">
      <summary>Obtient la valeur associée à la clé spécifiée.</summary>
      <param name="key">Clé de la valeur à obtenir.</param>
      <param name="value">Cette méthode retourne la valeur associée à la clé spécifiée, si la clé est trouvée ; sinon, un objet null. Ce paramètre est passé sans être initialisé.</param>
      <returns>true si le <see cref="T:System.Windows.NameScope" /> contient un mappage pour le nom fourni comme <paramref name="key" />. Sinon, false.</returns>
    </member>
    <member name="M:System.Windows.NameScope.UnregisterName(System.String)">
      <summary>Supprime un mappage nom-objet de la portée de nom XAML.</summary>
      <param name="name">Nom du mappage à supprimer.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> a été fourni en tant que chaîne vide.  

ou - 
Le <paramref name="name" /> fourni n’a pas été inscrit.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.NameScope.Values">
      <summary>Obtient une collection des valeurs dans le dictionnaire <see cref="T:System.Windows.NameScope" />.</summary>
      <returns>Collection des valeurs dans le dictionnaire <see cref="T:System.Windows.NameScope" />.</returns>
    </member>
    <member name="T:System.Windows.Point">
      <summary>Représente une paire de coordonnées x et y dans l'espace à deux dimensions.</summary>
    </member>
    <member name="M:System.Windows.Point.#ctor(System.Double,System.Double)">
      <summary>Crée une structure <see cref="T:System.Windows.Point" /> qui contient les coordonnées spécifiées.</summary>
      <param name="x">Coordonnée x de la nouvelle structure <see cref="T:System.Windows.Point" />.</param>
      <param name="y">Coordonnée y de la nouvelle structure <see cref="T:System.Windows.Point" />.</param>
    </member>
    <member name="M:System.Windows.Point.Add(System.Windows.Point,System.Windows.Vector)">
      <summary>Ajoute <see cref="T:System.Windows.Vector" /> à un <see cref="T:System.Windows.Point" /> et retourne le résultat sous forme de structure <see cref="T:System.Windows.Point" />.</summary>
      <param name="point">Structure <see cref="T:System.Windows.Point" /> à ajouter.</param>
      <param name="vector">Structure <see cref="T:System.Windows.Vector" /> à ajouter.</param>
      <returns>Retourne la somme de <paramref name="point" /> et <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Point.Equals(System.Object)">
      <summary>Détermine si l'<see cref="T:System.Object" /> spécifié est un <see cref="T:System.Windows.Point" /> et s'il contient les mêmes coordonnées que ce <see cref="T:System.Windows.Point" />.</summary>
      <param name="o">
        <see cref="T:System.Object" /> à comparer.</param>
      <returns>
        <see langword="true" /> si <paramref name="o" /> est un <see cref="T:System.Windows.Point" /> et qu'il reprend les mêmes valeurs <see cref="P:System.Windows.Point.X" /> et <see cref="P:System.Windows.Point.Y" /> que <see cref="T:System.Windows.Point" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Point.Equals(System.Windows.Point)">
      <summary>Compare l'égalité de deux structures <see cref="T:System.Windows.Point" />.</summary>
      <param name="value">Point à comparer à cette instance.</param>
      <returns>
        <see langword="true" /> si les deux structures <see cref="T:System.Windows.Point" /> contiennent les mêmes valeurs de <see cref="P:System.Windows.Point.X" /> et <see cref="P:System.Windows.Point.Y" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Point.Equals(System.Windows.Point,System.Windows.Point)">
      <summary>Compare l'égalité de deux structures <see cref="T:System.Windows.Point" />.</summary>
      <param name="point1">Premier point à comparer.</param>
      <param name="point2">Deuxième point à comparer.</param>
      <returns>
        <see langword="true" /> si <paramref name="point1" /> et <paramref name="point2" /> contiennent les mêmes valeurs respectives <see cref="P:System.Windows.Point.X" /> et <see cref="P:System.Windows.Point.Y" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Point.GetHashCode">
      <summary>Retourne le code de hachage pour ce <see cref="T:System.Windows.Point" />.</summary>
      <returns>Code de hachage pour cette structure <see cref="T:System.Windows.Point" />.</returns>
    </member>
    <member name="M:System.Windows.Point.Multiply(System.Windows.Point,System.Windows.Media.Matrix)">
      <summary>Transforme la structure <see cref="T:System.Windows.Point" /> spécifiée par la structure <see cref="T:System.Windows.Media.Matrix" /> indiquée.</summary>
      <param name="point">Point à transformer.</param>
      <param name="matrix">Matrice de transformation.</param>
      <returns>Point transformé.</returns>
    </member>
    <member name="M:System.Windows.Point.Offset(System.Double,System.Double)">
      <summary>Décale les coordonnées <see cref="P:System.Windows.Point.X" /> et <see cref="P:System.Windows.Point.Y" /> d'un point des valeurs spécifiées.</summary>
      <param name="offsetX">Décalage de la coordonnée <see cref="P:System.Windows.Point.X" /> du point.</param>
      <param name="offsetY">Décalage de la coordonnée <see cref="P:System.Windows.Point.Y" /> du point.</param>
    </member>
    <member name="M:System.Windows.Point.op_Addition(System.Windows.Point,System.Windows.Vector)">
      <summary>Translate le <see cref="T:System.Windows.Point" /> spécifié de <see cref="T:System.Windows.Vector" /> et renvoie le résultat.</summary>
      <param name="point">Point à translater.</param>
      <param name="vector">Valeur de translation de <paramref name="point" />.</param>
      <returns>Résultat de la translation du point spécifié du vecteur indiqué.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)">
      <summary>Compare l'égalité de deux structures <see cref="T:System.Windows.Point" />.</summary>
      <param name="point1">Première structure <see cref="T:System.Windows.Point" /> à comparer.</param>
      <param name="point2">Deuxième structure <see cref="T:System.Windows.Point" /> à comparer.</param>
      <returns>
        <see langword="true" /> si les coordonnées <see cref="P:System.Windows.Point.X" /> et <see cref="P:System.Windows.Point.Y" /> de <paramref name="point1" /> et de <paramref name="point2" /> sont respectivement égales ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Explicit(System.Windows.Point)~System.Windows.Size">
      <summary>Crée une structure <see cref="T:System.Windows.Size" /> avec <see cref="P:System.Windows.Size.Width" /> égal à la valeur <see cref="P:System.Windows.Point.X" /> de ce point et <see cref="P:System.Windows.Size.Height" /> égal à sa valeur <see cref="P:System.Windows.Point.Y" />.</summary>
      <param name="point">Point à convertir.</param>
      <returns>Une structure <see cref="T:System.Windows.Size" /> avec <see cref="P:System.Windows.Size.Width" /> égal à la valeur <see cref="P:System.Windows.Point.X" /> de ce point et <see cref="P:System.Windows.Size.Height" /> égal à sa valeur <see cref="P:System.Windows.Point.Y" />.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Explicit(System.Windows.Point)~System.Windows.Vector">
      <summary>Crée une structure <see cref="T:System.Windows.Vector" /> avec une valeur <see cref="P:System.Windows.Vector.X" /> égale à la valeur <see cref="P:System.Windows.Point.X" /> du point et <see cref="P:System.Windows.Vector.Y" /> égal à <see cref="P:System.Windows.Point.Y" /> du point.</summary>
      <param name="point">Point à convertir.</param>
      <returns>Vecteur avec une valeur <see cref="P:System.Windows.Vector.X" /> égale à la valeur <see cref="P:System.Windows.Point.X" /> du point et <see cref="P:System.Windows.Vector.Y" /> égal à <see cref="P:System.Windows.Point.Y" /> du point.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Inequality(System.Windows.Point,System.Windows.Point)">
      <summary>Compare l'inégalité de deux structures <see cref="T:System.Windows.Point" />.</summary>
      <param name="point1">Premier point à comparer.</param>
      <param name="point2">Deuxième point à comparer.</param>
      <returns>
        <see langword="true" /> si <paramref name="point1" /> et <paramref name="point2" /> présentent des coordonnées <see cref="P:System.Windows.Point.X" /> ou <see cref="P:System.Windows.Point.Y" /> différentes ; <see langword="false" /> si <paramref name="point1" /> et <paramref name="point2" /> ont les mêmes coordonnées <see cref="P:System.Windows.Point.X" /> et <see cref="P:System.Windows.Point.Y" />.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Multiply(System.Windows.Point,System.Windows.Media.Matrix)">
      <summary>Transforme le <see cref="T:System.Windows.Point" /> spécifié par un objet <see cref="T:System.Windows.Media.Matrix" /> donné.</summary>
      <param name="point">Point à transformer.</param>
      <param name="matrix">Matrice de transformation.</param>
      <returns>Résultat de la transformation du point spécifié par la matrice indiquée.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Point)">
      <summary>Soustrait le <see cref="T:System.Windows.Point" /> spécifié d'un autre <see cref="T:System.Windows.Point" /> indiqué et retourne la différence sous forme de <see cref="T:System.Windows.Vector" />.</summary>
      <param name="point1">Point duquel <paramref name="point2" /> est soustrait.</param>
      <param name="point2">Point à soustraire de <paramref name="point1" />.</param>
      <returns>Différence entre <paramref name="point1" /> et <paramref name="point2" />.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Vector)">
      <summary>Soustrait l'objet <see cref="T:System.Windows.Vector" /> spécifié du <see cref="T:System.Windows.Point" /> indiqué et retourne le <see cref="T:System.Windows.Point" /> résultant.</summary>
      <param name="point">Point duquel <paramref name="vector" /> est soustrait.</param>
      <param name="vector">Vecteur à soustraire de <paramref name="point1" />.</param>
      <returns>Différence entre <paramref name="point" /> et <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Point.Parse(System.String)">
      <summary>Construit un <see cref="T:System.Windows.Point" /> à partir du <see cref="T:System.String" /> spécifié.</summary>
      <param name="source">Représentation sous forme de chaîne d'un point.</param>
      <returns>Structure <see cref="T:System.Windows.Point" /> équivalente.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="source" /> ne se compose pas de deux valeurs doubles délimitées par une virgule ou un espace.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> ne contient pas deux nombres.  

ou - 
<paramref name="source" /> contient trop de séparateurs.</exception>
    </member>
    <member name="M:System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Point)">
      <summary>Soustrait le <see cref="T:System.Windows.Point" /> spécifié d'un autre <see cref="T:System.Windows.Point" /> indiqué et retourne la différence sous forme de <see cref="T:System.Windows.Vector" />.</summary>
      <param name="point1">Point duquel <paramref name="point2" /> est soustrait.</param>
      <param name="point2">Point à soustraire de <paramref name="point1" />.</param>
      <returns>Différence entre <paramref name="point1" /> et <paramref name="point2" />.</returns>
    </member>
    <member name="M:System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Vector)">
      <summary>Soustrait l'objet <see cref="T:System.Windows.Vector" /> spécifié du <see cref="T:System.Windows.Point" /> indiqué et retourne le <see cref="T:System.Windows.Point" /> résultant.</summary>
      <param name="point">Point duquel <paramref name="vector" /> est soustrait.</param>
      <param name="vector">
        <paramref name="vector" /> à soustraire du <paramref name="point" />.</param>
      <returns>Différence entre <paramref name="point" /> et <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Point.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>Ce membre prend en charge l’infrastructure Windows Presentation Foundation (WPF) et n’est pas destiné à être directement utilisé à partir de votre code. Pour obtenir une description de ce membre, consultez <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</summary>
      <param name="format">Chaîne spécifiant le format à utiliser.  

ou - 
<see langword="null" /> pour utiliser le format par défaut défini pour le type de l'implémentation <see cref="T:System.IFormattable" />.</param>
      <param name="provider">
        <see langword="IFormatProvider" /> à utiliser pour mettre en forme la valeur.  
ou 
<see langword="null" /> pour obtenir les informations de mise en forme des nombres à partir des paramètres régionaux définis dans le système d'exploitation.</param>
      <returns>Chaîne contenant la valeur de l'instance actuelle au format spécifié.</returns>
    </member>
    <member name="M:System.Windows.Point.ToString">
      <summary>Crée une représentation <see cref="T:System.String" /> de <see cref="T:System.Windows.Point" />.</summary>
      <returns>
        <see cref="T:System.String" /> contenant les valeurs <see cref="P:System.Windows.Point.X" /> et <see cref="P:System.Windows.Point.Y" /> de cette structure de <see cref="T:System.Windows.Point" />.</returns>
    </member>
    <member name="M:System.Windows.Point.ToString(System.IFormatProvider)">
      <summary>Crée une représentation <see cref="T:System.String" /> de <see cref="T:System.Windows.Point" />.</summary>
      <param name="provider">Informations de mise en forme spécifiques à la culture.</param>
      <returns>
        <see cref="T:System.String" /> contenant les valeurs <see cref="P:System.Windows.Point.X" /> et <see cref="P:System.Windows.Point.Y" /> de cette structure de <see cref="T:System.Windows.Point" />.</returns>
    </member>
    <member name="P:System.Windows.Point.X">
      <summary>Obtient ou définit la coordonnée <see cref="P:System.Windows.Point.X" />-de cette structure <see cref="T:System.Windows.Point" />.</summary>
      <returns>Valeur de la coordonnée <see cref="P:System.Windows.Point.X" />-de cette structure <see cref="T:System.Windows.Point" />.  La valeur par défaut est <c>0</c>.</returns>
    </member>
    <member name="P:System.Windows.Point.Y">
      <summary>Obtient ou définit la valeur de coordonnée <see cref="P:System.Windows.Point.Y" /> de ce <see cref="T:System.Windows.Point" />.</summary>
      <returns>Valeur de la coordonnée <see cref="P:System.Windows.Point.Y" />-de cette structure <see cref="T:System.Windows.Point" />.  La valeur par défaut est <c>0</c>.</returns>
    </member>
    <member name="T:System.Windows.PointConverter">
      <summary>Convertit des instances d'autres types vers et à partir de <see cref="T:System.Windows.Point" />.</summary>
    </member>
    <member name="M:System.Windows.PointConverter.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.PointConverter" />.</summary>
    </member>
    <member name="M:System.Windows.PointConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Détermine si un objet peut être converti à partir d'un type donné en une instance de <see cref="T:System.Windows.Point" />.</summary>
      <param name="context">Décrit les informations de contexte d’un type.</param>
      <param name="sourceType">Type de la source qui est en cours d'évaluation pour conversion.</param>
      <returns>
        <see langword="true" /> si le type peut être converti en <see cref="T:System.Windows.Point" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.PointConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Détermine si une instance de <see cref="T:System.Windows.Point" /> peut être convertie en un type différent.</summary>
      <param name="context">Décrit les informations de contexte d’un type.</param>
      <param name="destinationType">Type souhaité pour lequel <see cref="T:System.Windows.Point" /> est évalué à des fins de conversion.</param>
      <returns>
        <see langword="true" /> si <see cref="T:System.Windows.Point" /> peut être converti en <paramref name="destinationType" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.PointConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Tente de convertir l'objet spécifié en <see cref="T:System.Windows.Point" />.</summary>
      <param name="context">Fournit les informations contextuelles requises pour la conversion.</param>
      <param name="culture">Informations culturelles à respecter pendant la conversion.</param>
      <param name="value">Objet en cours de conversion.</param>
      <returns>
        <see cref="T:System.Windows.Point" /> créé à partir de la conversion de <paramref name="value" />.</returns>
      <exception cref="T:System.NotSupportedException">Levée si l'objet spécifié est NULL ou s'il s'agit d'un type qui ne peut pas être converti en <see cref="T:System.Windows.Point" />.</exception>
    </member>
    <member name="M:System.Windows.PointConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Tente de convertir <see cref="T:System.Windows.Point" /> en un type spécifié.</summary>
      <param name="context">Fournit les informations contextuelles requises pour la conversion.</param>
      <param name="culture">Informations culturelles à respecter pendant la conversion.</param>
      <param name="value">
        <see cref="T:System.Windows.Point" /> à convertir.</param>
      <param name="destinationType">Type vers lequel convertir <see cref="T:System.Windows.Point" />.</param>
      <returns>Objet créé à partir de la conversion de cette <see cref="T:System.Windows.Point" />.</returns>
      <exception cref="T:System.NotSupportedException">Levée si <paramref name="value" /> est <see langword="null" /> ou n'est pas un <see cref="T:System.Windows.Point" /> ou si le <paramref name="destinationType" /> ne fait pas partie des types valides pour conversion.</exception>
    </member>
    <member name="T:System.Windows.PropertyChangedCallback">
      <summary>Représente le rappel qui est appelé quand la valeur de propriété effective d’une propriété de dépendance change.</summary>
      <param name="d">
        <see cref="T:System.Windows.DependencyObject" /> dans lequel la propriété a modifié une valeur.</param>
      <param name="e">Données d’événement qui sont émises par un événement qui effectue le suivi des modifications apportées à la valeur effective de cette propriété.</param>
    </member>
    <member name="T:System.Windows.PropertyMetadata">
      <summary>Définit certains aspects du comportement d’une propriété de dépendance quand elle est appliquée à un type spécifique, notamment les conditions dans lesquelles elle a été inscrite.</summary>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.PropertyMetadata" />.</summary>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Object)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.PropertyMetadata" /> avec une valeur par défaut spécifiée pour la propriété de dépendance à laquelle ces métadonnées seront appliquées.</summary>
      <param name="defaultValue">Valeur par défaut à spécifier pour une propriété de dépendance, habituellement fournie comme valeur d'un type spécifique.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="defaultValue" /> ne peut pas avoir la valeur <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</exception>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.PropertyMetadata" /> avec la valeur par défaut et la référence d'implémentation <see cref="T:System.Windows.PropertyChangedCallback" /> spécifiées.</summary>
      <param name="defaultValue">Valeur par défaut de la propriété de dépendance, habituellement fournie comme valeur d'un type spécifique.</param>
      <param name="propertyChangedCallback">Référence à l'implémentation d'un gestionnaire que le système de propriétés doit appeler à chaque fois que la valeur effective de la propriété change.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="defaultValue" /> ne peut pas avoir la valeur <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</exception>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.PropertyMetadata" /> avec la valeur par défaut et les rappels spécifiés.</summary>
      <param name="defaultValue">Valeur par défaut de la propriété de dépendance, habituellement fournie comme valeur d'un type spécifique.</param>
      <param name="propertyChangedCallback">Référence à l'implémentation d'un gestionnaire que le système de propriétés doit appeler à chaque fois que la valeur effective de la propriété change.</param>
      <param name="coerceValueCallback">Référence à l'implémentation d'un gestionnaire qui doit être appelée à chaque fois que le système de propriétés appelle <see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /> à l'aide de cette propriété.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="defaultValue" /> ne peut pas avoir la valeur <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</exception>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Windows.PropertyChangedCallback)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.PropertyMetadata" /> avec la référence d'implémentation <see cref="T:System.Windows.PropertyChangedCallback" /> spécifiée.</summary>
      <param name="propertyChangedCallback">Référence à l'implémentation d'un gestionnaire que le système de propriétés doit appeler à chaque fois que la valeur effective de la propriété change.</param>
    </member>
    <member name="P:System.Windows.PropertyMetadata.CoerceValueCallback">
      <summary>Obtient ou définit une référence à une implémentation <see cref="T:System.Windows.CoerceValueCallback" /> spécifiée dans ces métadonnées.</summary>
      <returns>Référence d'implémentation <see cref="T:System.Windows.CoerceValueCallback" />.</returns>
      <exception cref="T:System.InvalidOperationException">Impossible de définir une propriété de métadonnées une fois qu’elle est appliquée à une opération de propriété de dépendance.</exception>
    </member>
    <member name="P:System.Windows.PropertyMetadata.DefaultValue">
      <summary>Obtient ou définit la valeur par défaut de la propriété de dépendance.</summary>
      <returns>Valeur par défaut de la propriété. La valeur par défaut sur <see cref="T:System.Windows.PropertyMetadata" /> une instance créée avec le constructeur sans paramètre <see cref="F:System.Windows.DependencyProperty.UnsetValue" />sera.</returns>
      <exception cref="T:System.ArgumentException">Impossible de définir la valeur <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> une fois créée.</exception>
      <exception cref="T:System.InvalidOperationException">Impossible de définir une propriété de métadonnées une fois qu’elle est appliquée à une opération de propriété de dépendance.</exception>
    </member>
    <member name="P:System.Windows.PropertyMetadata.IsSealed">
      <summary>Obtient une valeur qui détermine si les métadonnées ont été appliquées à une propriété, entraînant l'état immuable de cette instance de métadonnées.</summary>
      <returns>
        <see langword="true" /> si l'instance de métadonnées est immuable ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.PropertyMetadata.Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)">
      <summary>Fusionne ces métadonnées avec les métadonnées de base.</summary>
      <param name="baseMetadata">Métadonnées de base à fusionner avec les valeurs de cette instance.</param>
      <param name="dp">Propriété de dépendance à laquelle ces métadonnées sont appliquées.</param>
    </member>
    <member name="M:System.Windows.PropertyMetadata.OnApply(System.Windows.DependencyProperty,System.Type)">
      <summary>Appelé lorsque ces métadonnées ont été appliquées à une propriété qui indique que les métadonnées sont sealed.</summary>
      <param name="dp">Propriété de dépendance à laquelle les métadonnées ont été appliquées.</param>
      <param name="targetType">Type associé à ces métadonnées s'il s'agit de métadonnées spécifiques au type. S'il s'agit de métadonnées par défaut, cette valeur est une référence nulle.</param>
    </member>
    <member name="P:System.Windows.PropertyMetadata.PropertyChangedCallback">
      <summary>Obtient ou définit une référence à une implémentation <see cref="T:System.Windows.PropertyChangedCallback" /> spécifiée dans ces métadonnées.</summary>
      <returns>Référence d'implémentation <see cref="T:System.Windows.PropertyChangedCallback" />.</returns>
      <exception cref="T:System.InvalidOperationException">Impossible de définir une propriété de métadonnées une fois qu’elle est appliquée à une opération de propriété de dépendance.</exception>
    </member>
    <member name="T:System.Windows.Rect">
      <summary>Décrit la largeur, la hauteur et l’emplacement d’un rectangle.</summary>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.Windows.Rect" /> qui a les coordonnées x et y, et la largeur et la hauteur spécifiées.</summary>
      <param name="x">Coordonnée X du coin supérieur gauche du rectangle.</param>
      <param name="y">Coordonnée y du coin supérieur gauche du rectangle.</param>
      <param name="width">Largeur du rectangle.</param>
      <param name="height">Hauteur du rectangle.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="width" /> est une valeur négative.  

ou - 
<paramref name="height" /> est une valeur négative.</exception>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Point)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.Windows.Rect" /> qui est exactement assez  grande pour contenir les deux points spécifiés.</summary>
      <param name="point1">Le premier point que doit contenir le nouveau rectangle.</param>
      <param name="point2">Le deuxième point que doit contenir le nouveau rectangle.</param>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Size)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.Windows.Rect" /> qui a l'emplacement de coin supérieur gauche, et la largeur et la hauteur spécifiés.</summary>
      <param name="location">Un point qui spécifie l'emplacement du coin supérieur gauche du rectangle.</param>
      <param name="size">Une structure <see cref="T:System.Windows.Size" /> qui spécifie la hauteur et la largeur du rectangle.</param>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Vector)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.Windows.Rect" /> qui est exactement assez grande pour contenir le point spécifié et la somme du point et du vecteur spécifiés.</summary>
      <param name="point">Le premier point que doit contenir le rectangle.</param>
      <param name="vector">Le taux d'offset du point spécifié. Le rectangle résultant sera exactement assez grand pour contenir les deux points.</param>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Size)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.Windows.Rect" /> qui fait la taille spécifiée et est localisée à (0,0).</summary>
      <param name="size">Une structure <see cref="T:System.Windows.Size" /> qui spécifie la hauteur et la largeur du rectangle.</param>
    </member>
    <member name="P:System.Windows.Rect.Bottom">
      <summary>Obtient la valeur d'axe y du bas du rectangle.</summary>
      <returns>La valeur d'axe y du bas du rectangle. Si le rectangle est vide, la valeur est <see cref="F:System.Double.NegativeInfinity" />.</returns>
    </member>
    <member name="P:System.Windows.Rect.BottomLeft">
      <summary>Obtient la position du coin inférieur gauche du rectangle</summary>
      <returns>La position du coin inférieur gauche du rectangle.</returns>
    </member>
    <member name="P:System.Windows.Rect.BottomRight">
      <summary>Obtient la position du coin inférieur droit du rectangle</summary>
      <returns>La position du coin inférieur droit du rectangle.</returns>
    </member>
    <member name="M:System.Windows.Rect.Contains(System.Double,System.Double)">
      <summary>Indique si le rectangle contient les coordonnées x et y spécifiées.</summary>
      <param name="x">Coordonnée x du point à vérifier.</param>
      <param name="y">Coordonnée y du point à vérifier.</param>
      <returns>
        <see langword="true" /> si (<paramref name="x" />, <paramref name="y" />) est contenu par le rectangle ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.Contains(System.Windows.Point)">
      <summary>Indique si le rectangle contient le point spécifié.</summary>
      <param name="point">Point à vérifier.</param>
      <returns>
        <see langword="true" /> si le rectangle contient le point spécifié ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.Contains(System.Windows.Rect)">
      <summary>Indique si le rectangle contient le rectangle spécifié.</summary>
      <param name="rect">Le rectangle à vérifier.</param>
      <returns>
        <see langword="true" /> si <paramref name="rect" /> est entièrement contenu par le rectangle ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Rect.Empty">
      <summary>Obtient une valeur spéciale qui représente un rectangle sans position ou zone.</summary>
      <returns>Le rectangle vide qui a <see cref="P:System.Windows.Rect.X" /> et des valeurs de propriété <see cref="P:System.Windows.Rect.Y" /> de <see cref="F:System.Double.PositiveInfinity" />et a <see cref="P:System.Windows.Rect.Width" /> et des valeurs de propriété <see cref="P:System.Windows.Rect.Height" /> de <see cref="F:System.Double.NegativeInfinity" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.Equals(System.Object)">
      <summary>Détermine si l'objet spécifié est égal au rectangle actuel.</summary>
      <param name="o">Objet à comparer avec le rectangle actuel.</param>
      <returns>
        <see langword="true" /> si <paramref name="o" /> est un <see cref="T:System.Windows.Rect" /> et qu'il possède les mêmes propriétés <see cref="P:System.Windows.Rect.Location" /> et <see cref="P:System.Windows.Rect.Size" /> que le rectangle actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.Equals(System.Windows.Rect)">
      <summary>Indique si le rectangle spécifié est égal au rectangle actuel.</summary>
      <param name="value">Le rectangle à comparer avec le rectangle actuel.</param>
      <returns>
        <see langword="true" /> si le rectangle spécifié a les mêmes valeurs <see cref="P:System.Windows.Rect.Location" /> et <see cref="P:System.Windows.Rect.Size" /> que le rectangle actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.Equals(System.Windows.Rect,System.Windows.Rect)">
      <summary>Indique si les rectangles spécifiés sont égaux.</summary>
      <param name="rect1">Premier rectangle à comparer.</param>
      <param name="rect2">Deuxième rectangle à comparer.</param>
      <returns>
        <see langword="true" /> si les rectangles ont les mêmes <see cref="P:System.Windows.Rect.Location" /> et valeurs <see cref="P:System.Windows.Rect.Size" />; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.GetHashCode">
      <summary>Crée un code de hachage pour le rectangle.</summary>
      <returns>Code de hachage pour la structure <see cref="T:System.Windows.Rect" /> actuelle.</returns>
    </member>
    <member name="P:System.Windows.Rect.Height">
      <summary>Obtient ou définit la hauteur du rectangle.</summary>
      <returns>Un nombre positif qui représente la hauteur du rectangle. La valeur par défaut est 0.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Rect.Height" /> a une valeur négative.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Rect.Height" /> est définie sur un rectangle <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Inflate(System.Double,System.Double)">
      <summary>Développe ou réduit le rectangle en utilisant les taux de largeur et de hauteur spécifiés, dans toutes les directions.</summary>
      <param name="width">Le taux de développement ou de réduction des côtés gauche et droit d'un rectangle.</param>
      <param name="height">Le taux de développement ou de réduction du haut et du bas d'un rectangle.</param>
      <exception cref="T:System.InvalidOperationException">Cette méthode est appelée sur le rectangle <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Double,System.Double)">
      <summary>Crée un rectangle qui résulte du développement ou de la réduction du rectangle spécifié par les taux de largeur ou de hauteur spécifiés, dans toutes les directions.</summary>
      <param name="rect">La structure <see cref="T:System.Windows.Rect" /> à modifier.</param>
      <param name="width">Le taux de développement ou de réduction des côtés gauche et droit d'un rectangle.</param>
      <param name="height">Le taux de développement ou de réduction du haut et du bas d'un rectangle.</param>
      <returns>Le rectangle résultant.</returns>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="rect" /> est un rectangle <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Windows.Size)">
      <summary>Renvoie le rectangle qui résulte du développement du rectangle spécifié par la <see cref="T:System.Windows.Size" />spécifiée, dans toutes les directions.</summary>
      <param name="rect">La structure <see cref="T:System.Windows.Rect" /> à modifier.</param>
      <param name="size">Spécifie le taux de développement du rectangle. La propriété <see cref="T:System.Windows.Size" /> de la structure <see cref="P:System.Windows.Size.Width" /> spécifie la valeur à laquelle augmenter les propriétés <see cref="P:System.Windows.Rect.Left" /> et <see cref="P:System.Windows.Rect.Right" /> du rectangle. La propriété <see cref="T:System.Windows.Size" /> de la structure <see cref="P:System.Windows.Size.Height" /> spécifie la valeur à laquelle augmenter les propriétés <see cref="P:System.Windows.Rect.Top" /> et <see cref="P:System.Windows.Rect.Bottom" /> du rectangle.</param>
      <returns>Le rectangle résultant.</returns>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="rect" /> est un rectangle <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Inflate(System.Windows.Size)">
      <summary>Développe le rectangle en utilisant la <see cref="T:System.Windows.Size" />spécifiée, dans toutes les directions.</summary>
      <param name="size">Spécifie le taux de développement du rectangle. La propriété <see cref="T:System.Windows.Size" /> de la structure <see cref="P:System.Windows.Size.Width" /> spécifie la valeur à laquelle augmenter les propriétés <see cref="P:System.Windows.Rect.Left" /> et <see cref="P:System.Windows.Rect.Right" /> du rectangle. La propriété <see cref="T:System.Windows.Size" /> de la structure <see cref="P:System.Windows.Size.Height" /> spécifie la valeur à laquelle augmenter les propriétés <see cref="P:System.Windows.Rect.Top" /> et <see cref="P:System.Windows.Rect.Bottom" /> du rectangle.</param>
      <exception cref="T:System.InvalidOperationException">Cette méthode est appelée sur le rectangle <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Intersect(System.Windows.Rect)">
      <summary>Trouve l'intersection du rectangle actuel et du rectangle spécifié, et stocke le résultat comme le rectangle actuel.</summary>
      <param name="rect">Le rectangle devant trouver l'intersection avec le rectangle actuel.</param>
    </member>
    <member name="M:System.Windows.Rect.Intersect(System.Windows.Rect,System.Windows.Rect)">
      <summary>Renvoie l'intersection des rectangles spécifiés.</summary>
      <param name="rect1">Premier rectangle à comparer.</param>
      <param name="rect2">Deuxième rectangle à comparer.</param>
      <returns>L'intersection des deux rectangles, ou <see cref="P:System.Windows.Rect.Empty" /> si aucune intersection n'existe.</returns>
    </member>
    <member name="M:System.Windows.Rect.IntersectsWith(System.Windows.Rect)">
      <summary>Indique si le rectangle spécifié se croise avec le rectangle actuel.</summary>
      <param name="rect">Le rectangle à vérifier.</param>
      <returns>
        <see langword="true" /> si le rectangle spécifié se croise avec le rectangle actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Rect.IsEmpty">
      <summary>Obtient une valeur qui indique si le rectangle est le rectangle <see cref="P:System.Windows.Rect.Empty" />.</summary>
      <returns>
        <see langword="true" /> si le rectangle est le rectangle<see cref="P:System.Windows.Rect.Empty" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Rect.Left">
      <summary>Obtient la valeur d'axe x du côté gauche du rectangle.</summary>
      <returns>La  valeur d'axe x du côté gauche du rectangle.</returns>
    </member>
    <member name="P:System.Windows.Rect.Location">
      <summary>Obtient ou définit la position de l'angle supérieur gauche du rectangle.</summary>
      <returns>La position du coin supérieur gauche du rectangle. La valeur par défaut est (0, 0).</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Rect.Location" /> est définie sur un rectangle <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Offset(System.Double,System.Double)">
      <summary>Déplace le rectangle par les taux horizontal et vertical spécifiés.</summary>
      <param name="offsetX">Le taux auquel déplacer le rectangle horizontalement.</param>
      <param name="offsetY">Le taux auquel déplacer le rectangle verticalement.</param>
      <exception cref="T:System.InvalidOperationException">Cette méthode est appelée sur le rectangle <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Double,System.Double)">
      <summary>Renvoie un rectangle qui est décalé du rectangle spécifié en utilisant les taux horizontal et vertical spécifiés.</summary>
      <param name="rect">Le rectangle à déplacer.</param>
      <param name="offsetX">Le décalage horizontal pour le nouveau rectangle.</param>
      <param name="offsetY">Le décalage vertical pour le nouveau rectangle.</param>
      <returns>Le rectangle résultant.</returns>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="rect" /> a la valeur <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Windows.Vector)">
      <summary>Renvoie un rectangle qui est décalé du rectangle spécifié en utilisant le vecteur spécifié.</summary>
      <param name="rect">Le rectangle d'origine.</param>
      <param name="offsetVector">Un vecteur qui spécifie les décalages horizontal et vertical pour le nouveau rectangle.</param>
      <returns>Le rectangle résultant.</returns>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="rect" /> a la valeur <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Offset(System.Windows.Vector)">
      <summary>Déplace le rectangle par le vecteur spécifié.</summary>
      <param name="offsetVector">Un vecteur qui spécifie les taux horizontal et vertical auxquels déplacer le rectangle.</param>
      <exception cref="T:System.InvalidOperationException">Cette méthode est appelée sur le rectangle <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)">
      <summary>Compare l'égalité exacte de deux rectangles.</summary>
      <param name="rect1">Premier rectangle à comparer.</param>
      <param name="rect2">Deuxième rectangle à comparer.</param>
      <returns>
        <see langword="true" /> si les rectangles ont les mêmes <see cref="P:System.Windows.Rect.Location" /> et valeurs <see cref="P:System.Windows.Rect.Size" />; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)">
      <summary>Compare si deux rectangles sont inégaux.</summary>
      <param name="rect1">Premier rectangle à comparer.</param>
      <param name="rect2">Deuxième rectangle à comparer.</param>
      <returns>
        <see langword="true" /> si les rectangles n'ont pas les mêmes valeurs  <see cref="P:System.Windows.Rect.Location" /> et <see cref="P:System.Windows.Rect.Size" />; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.Parse(System.String)">
      <summary>Crée un nouveau rectangle à partir de la représentation sous forme de chaîne spécifiée.</summary>
      <param name="source">La représentation sous forme de chaîne du rectangle, sous la forme « x, y, largeur, hauteur ».</param>
      <returns>Le rectangle résultant.</returns>
    </member>
    <member name="P:System.Windows.Rect.Right">
      <summary>Obtient la valeur d'axe x du côté droit du rectangle.</summary>
      <returns>La valeur d'axe x du côté droit du rectangle.</returns>
    </member>
    <member name="M:System.Windows.Rect.Scale(System.Double,System.Double)">
      <summary>Multiplie la taille du rectangle actuel par les valeurs x et y spécifiées.</summary>
      <param name="scaleX">Le facteur d'échelle sur l'axe x.</param>
      <param name="scaleY">Le facteur d'échelle sur l'axe y.</param>
    </member>
    <member name="P:System.Windows.Rect.Size">
      <summary>Obtient ou définit la largeur et la hauteur du rectangle.</summary>
      <returns>Une structure <see cref="T:System.Windows.Size" /> qui spécifie la hauteur et la largeur du rectangle.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Rect.Size" /> est définie sur un rectangle <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>Met en forme la valeur de l'instance actuelle à l'aide du format spécifié.</summary>
      <param name="format">Format à utiliser.  

ou - 
Référence null (<see langword="Nothing" /> en Visual Basic) pour utiliser le format par défaut défini pour le type de l'implémentation <see cref="T:System.IFormattable" />.</param>
      <param name="provider">Fournisseur à utiliser pour mettre en forme la valeur.  
ou 
Référence null (<see langword="Nothing" /> en Visual Basic) pour obtenir les informations de mise en forme des nombres à partir des paramètres régionaux définis dans le système d'exploitation.</param>
      <returns>Représentation sous forme de chaîne du rectangle.</returns>
    </member>
    <member name="P:System.Windows.Rect.Top">
      <summary>Obtient la position de l'axe y du haut du rectangle.</summary>
      <returns>La  position de l'axe y du haut du rectangle.</returns>
    </member>
    <member name="P:System.Windows.Rect.TopLeft">
      <summary>Obtient la position du coin supérieur gauche du rectangle.</summary>
      <returns>La position du coin supérieur gauche du rectangle.</returns>
    </member>
    <member name="P:System.Windows.Rect.TopRight">
      <summary>Obtient la position du coin supérieur droit du rectangle.</summary>
      <returns>La position du coin supérieur droit du rectangle.</returns>
    </member>
    <member name="M:System.Windows.Rect.ToString">
      <summary>Renvoie une représentation sous forme de chaîne du rectangle.</summary>
      <returns>Une représentation sous forme de chaîne du rectangle actuel. La chaîne a la forme suivante : « <see cref="P:System.Windows.Rect.X" />,<see cref="P:System.Windows.Rect.Y" />,<see cref="P:System.Windows.Rect.Width" />,<see cref="P:System.Windows.Rect.Height" /> ».</returns>
    </member>
    <member name="M:System.Windows.Rect.ToString(System.IFormatProvider)">
      <summary>Renvoie une représentation sous forme de chaîne du rectangle en utilisant le fournisseur de format spécifié.</summary>
      <param name="provider">Informations de mise en forme spécifiques à la culture.</param>
      <returns>Une représentation sous forme de chaîne du rectangle actuel qui est déterminée par le fournisseur de format spécifié.</returns>
    </member>
    <member name="M:System.Windows.Rect.Transform(System.Windows.Media.Matrix)">
      <summary>Transforme le rectangle en appliquant la matrice spécifiée.</summary>
      <param name="matrix">Une matrice qui spécifie la transformation à appliquer.</param>
    </member>
    <member name="M:System.Windows.Rect.Transform(System.Windows.Rect,System.Windows.Media.Matrix)">
      <summary>Renvoie le rectangle qui résulte de l'application de la matrice spécifiée au rectangle spécifié.</summary>
      <param name="rect">Un rectangle qui est la base pour la transformation.</param>
      <param name="matrix">Une matrice qui spécifie la transformation à appliquer.</param>
      <returns>Le rectangle qui résulte de l'opération.</returns>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Point)">
      <summary>Développe le rectangle actuel exactement assez pour contenir le point spécifié.</summary>
      <param name="point">Le point à inclure.</param>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Rect)">
      <summary>Développe le rectangle actuel exactement assez pour contenir le rectangle spécifié.</summary>
      <param name="rect">Le rectangle à inclure.</param>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Point)">
      <summary>Crée un rectangle qui est exactement assez grand pour inclure le rectangle et le point spécifiés.</summary>
      <param name="rect">Le rectangle à inclure.</param>
      <param name="point">Le point à inclure.</param>
      <returns>Un rectangle qui est exactement assez grand pour contenir le rectangle et le point spécifiés.</returns>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Rect)">
      <summary>Crée un rectangle qui est exactement assez grand pour contenir les deux rectangles spécifiés.</summary>
      <param name="rect1">Le premier rectangle à inclure.</param>
      <param name="rect2">Le deuxième rectangle à inclure.</param>
      <returns>Le rectangle résultant.</returns>
    </member>
    <member name="P:System.Windows.Rect.Width">
      <summary>Obtient ou définit la largeur du rectangle.</summary>
      <returns>Un nombre positif qui représente la largeur du rectangle. La valeur par défaut est 0.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Rect.Width" /> a une valeur négative.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Rect.Width" /> est définie sur un rectangle <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="P:System.Windows.Rect.X">
      <summary>Obtient ou définit la valeur d'axe x du côté gauche du rectangle.</summary>
      <returns>La  valeur d'axe x du côté gauche du rectangle.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Rect.X" /> est définie sur un rectangle <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="P:System.Windows.Rect.Y">
      <summary>Obtient ou définit la valeur d'axe y du côté supérieur du rectangle.</summary>
      <returns>La valeur d'axe y du côté supérieur du rectangle.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Rect.Y" /> est définie sur un rectangle <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="T:System.Windows.RectConverter">
      <summary>Convertit les instances d'autres types vers et à partir des instances de <see cref="T:System.Windows.Rect" />.</summary>
    </member>
    <member name="M:System.Windows.RectConverter.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.RectConverter" />.</summary>
    </member>
    <member name="M:System.Windows.RectConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Détermine si un objet peut être converti à partir d'un type spécifique en une instance de <see cref="T:System.Windows.Rect" />.</summary>
      <param name="context">Fournit les informations contextuelles requises pour la conversion.</param>
      <param name="sourceType">Type de la source qui est en cours d'évaluation pour conversion.</param>
      <returns>
        <see langword="true" /> si le type peut être converti en <see cref="T:System.Windows.Rect" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.RectConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Détermine si <see cref="T:System.Windows.Rect" /> peut être converti dans le type spécifié.</summary>
      <param name="context">Fournit les informations contextuelles requises pour la conversion.</param>
      <param name="destinationType">Type souhaité pour lequel <see cref="T:System.Windows.Rect" /> est évalué à des fins de conversion.</param>
      <returns>
        <see langword="true" /> si <see cref="T:System.Windows.Rect" /> peut être converti en <paramref name="destinationType" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.RectConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Tente de convertir l'objet spécifié en <see cref="T:System.Windows.Rect" />.</summary>
      <param name="context">Fournit les informations contextuelles requises pour la conversion.</param>
      <param name="culture">Informations culturelles respectées lors de la conversion.</param>
      <param name="value">Objet en cours de conversion.</param>
      <returns>
        <see cref="T:System.Windows.Rect" /> créé à partir de la conversion de <paramref name="value" />.</returns>
      <exception cref="T:System.NotSupportedException">Levée si l'objet spécifié est NULL ou s'il s'agit d'un type qui ne peut pas être converti en <see cref="T:System.Windows.Rect" />.</exception>
    </member>
    <member name="M:System.Windows.RectConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Tente de convertir <see cref="T:System.Windows.Rect" /> dans le type spécifié.</summary>
      <param name="context">Fournit les informations contextuelles requises pour la conversion.</param>
      <param name="culture">Informations culturelles respectées pendant la conversion.</param>
      <param name="value">
        <see cref="T:System.Windows.Rect" /> à convertir.</param>
      <param name="destinationType">Type vers lequel convertir <see cref="T:System.Windows.Rect" />.</param>
      <returns>Objet créé à partir de la conversion de cette <see cref="T:System.Windows.Rect" />.</returns>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> est <see langword="null" />.  
ou 
 <paramref name="value" /> n'est pas un <see cref="T:System.Windows.Rect" />.  
ou 
Le <paramref name="destinationType" /> ne fait pas partie des types valides pour conversion.</exception>
    </member>
    <member name="T:System.Windows.Size">
      <summary>Implémente une structure utilisée pour décrire le <see cref="T:System.Windows.Size" /> d’un objet.</summary>
    </member>
    <member name="M:System.Windows.Size.#ctor(System.Double,System.Double)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.Windows.Size" /> et lui attribue une <paramref name="width" /> et une <paramref name="height" /> initiales.</summary>
      <param name="width">La largeur initiale de l'instance de <see cref="T:System.Windows.Size" />.</param>
      <param name="height">La hauteur initiale de l'instance de <see cref="T:System.Windows.Size" />.</param>
    </member>
    <member name="P:System.Windows.Size.Empty">
      <summary>Obtient une valeur qui représente un <see cref="T:System.Windows.Size" /> vide statique.</summary>
      <returns>Une instance vide de <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="M:System.Windows.Size.Equals(System.Object)">
      <summary>Compare si un objet et une instance de <see cref="T:System.Windows.Size" /> sont égaux.</summary>
      <param name="o">
        <see cref="T:System.Object" /> à comparer.</param>
      <returns>
        <see langword="true" /> si les tailles sont égales ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Size.Equals(System.Windows.Size)">
      <summary>Compare une valeur à une instance de <see cref="T:System.Windows.Size" /> pour l'égalité.</summary>
      <param name="value">La taille à comparer avec l'instance actuelle de <see cref="T:System.Windows.Size" />.</param>
      <returns>
        <see langword="true" /> si les instances de <see cref="T:System.Windows.Size" /> sont égales ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Size.Equals(System.Windows.Size,System.Windows.Size)">
      <summary>Compare l'égalité de deux instances de <see cref="T:System.Windows.Size" />.</summary>
      <param name="size1">Première instance du <see cref="T:System.Windows.Size" /> à comparer.</param>
      <param name="size2">Deuxième instance de <see cref="T:System.Windows.Size" /> à comparer.</param>
      <returns>
        <see langword="true" /> si les instances de <see cref="T:System.Windows.Size" /> sont égales ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Size.GetHashCode">
      <summary>Récupère le code de hachage pour cette instance de <see cref="T:System.Windows.Size" />.</summary>
      <returns>Code de hachage de cette instance de la <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="P:System.Windows.Size.Height">
      <summary>Obtient ou définit la <see cref="P:System.Windows.Size.Height" /> de cette instance de <see cref="T:System.Windows.Size" />.</summary>
      <returns>
        <see cref="P:System.Windows.Size.Height" /> de cette instance de <see cref="T:System.Windows.Size" />. La valeur par défaut est 0. La valeur ne peut pas être négative.</returns>
    </member>
    <member name="P:System.Windows.Size.IsEmpty">
      <summary>Obtient une valeur qui indique si cette instance de <see cref="T:System.Windows.Size" /> est <see cref="P:System.Windows.Size.Empty" />.</summary>
      <returns>
        <see langword="true" /> si cette instance de taille est <see cref="P:System.Windows.Size.Empty" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Size.op_Equality(System.Windows.Size,System.Windows.Size)">
      <summary>Compare l'égalité de deux instances de <see cref="T:System.Windows.Size" />.</summary>
      <param name="size1">Première instance du <see cref="T:System.Windows.Size" /> à comparer.</param>
      <param name="size2">Deuxième instance de <see cref="T:System.Windows.Size" /> à comparer.</param>
      <returns>True si les deux instances de <see cref="T:System.Windows.Size" /> sont égales ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Size.op_Explicit(System.Windows.Size)~System.Windows.Point">
      <summary>Convertit une instance de <see cref="T:System.Windows.Size" /> en une instance de <see cref="T:System.Windows.Point" /> de manière explicite.</summary>
      <param name="size">Valeur <see cref="T:System.Windows.Size" /> à convertir.</param>
      <returns>
        <see cref="T:System.Windows.Point" /> dont la valeur est égale à cette instance de <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="M:System.Windows.Size.op_Explicit(System.Windows.Size)~System.Windows.Vector">
      <summary>Convertit une instance de <see cref="T:System.Windows.Size" /> en une instance de <see cref="T:System.Windows.Vector" /> de manière explicite.</summary>
      <param name="size">Valeur <see cref="T:System.Windows.Size" /> à convertir.</param>
      <returns>
        <see cref="T:System.Windows.Vector" /> dont la valeur est égale à cette instance de <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="M:System.Windows.Size.op_Inequality(System.Windows.Size,System.Windows.Size)">
      <summary>Compare l'inégalité de deux instances de <see cref="T:System.Windows.Size" />.</summary>
      <param name="size1">Première instance du <see cref="T:System.Windows.Size" /> à comparer.</param>
      <param name="size2">Deuxième instance de <see cref="T:System.Windows.Size" /> à comparer.</param>
      <returns>
        <see langword="true" /> si les instances de <see cref="T:System.Windows.Size" /> ne sont pas égales ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Size.Parse(System.String)">
      <summary>Retourne une instance de <see cref="T:System.Windows.Size" /> d'un <see cref="T:System.String" /> converti.</summary>
      <param name="source">Une valeur <see cref="T:System.String" /> à analyser sur une valeur <see cref="T:System.Windows.Size" />.</param>
      <returns>Instance de <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="M:System.Windows.Size.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>Ce type ou membre prend en charge l’infrastructure Windows Presentation Foundation (WPF) et n’est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="format">Format à utiliser.</param>
      <param name="provider">Fournisseur à utiliser pour mettre en forme la valeur.</param>
      <returns>Valeur de l'instance actuelle au format spécifié.</returns>
    </member>
    <member name="M:System.Windows.Size.ToString">
      <summary>Retourne un <see cref="T:System.String" /> qui représente cet objet <see cref="T:System.Windows.Size" />.</summary>
      <returns>
        <see cref="T:System.String" /> qui spécifie la largeur suivie de la hauteur.</returns>
    </member>
    <member name="M:System.Windows.Size.ToString(System.IFormatProvider)">
      <summary>Retourne un <see cref="T:System.String" /> qui représente cette instance de <see cref="T:System.Windows.Size" />.</summary>
      <param name="provider">Un objet qui offre un moyen de contrôler la mise en forme.</param>
      <returns>
        <see cref="T:System.String" /> qui représente un objet <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="P:System.Windows.Size.Width">
      <summary>Obtient ou définit la <see cref="P:System.Windows.Size.Width" /> de cette instance de <see cref="T:System.Windows.Size" />.</summary>
      <returns>
        <see cref="P:System.Windows.Size.Width" /> de cette instance de <see cref="T:System.Windows.Size" />. La valeur par défaut est <c>0</c>. La valeur ne peut pas être négative.</returns>
    </member>
    <member name="T:System.Windows.SizeConverter">
      <summary>Convertit les instances d'autres types vers et à partir des instances de la classe <see cref="T:System.Windows.Size" />.</summary>
    </member>
    <member name="M:System.Windows.SizeConverter.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.SizeConverter" />.</summary>
    </member>
    <member name="M:System.Windows.SizeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Détermine si une classe peut être convertie à partir d'un type donné en une instance de <see cref="T:System.Windows.Size" />.</summary>
      <param name="context">Fournit des informations contextuelles sur un composant.</param>
      <param name="sourceType">Identifie le type de données à évaluer pour la conversion.</param>
      <returns>
        <see langword="true" /> si les <paramref name="sourceType" /> peuvent être convertis en une instance de <see cref="T:System.Windows.Size" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.SizeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Détermine si une instance de <see cref="T:System.Windows.Size" /> peut être convertie en un type différent.</summary>
      <param name="context">Fournit des informations contextuelles sur un composant.</param>
      <param name="destinationType">Identifie le type de données à évaluer pour la conversion.</param>
      <returns>
        <see langword="true" /> si cette instance de <see cref="T:System.Windows.Size" /> peut être convertie en <paramref name="destinationType" /> ;sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.SizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Tente de convertir un objet spécifié en une instance de <see cref="T:System.Windows.Size" />.</summary>
      <param name="context">Fournit des informations contextuelles sur un composant.</param>
      <param name="culture">Informations spécifiques à la culture qui doivent être respectées pendant la conversion.</param>
      <param name="value">Objet source converti.</param>
      <returns>Instance de <see cref="T:System.Windows.Size" /> qui est créée à partir du <paramref name="source" /> converti.</returns>
    </member>
    <member name="M:System.Windows.SizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Tente de convertir une instance de <see cref="T:System.Windows.Size" /> en un type spécifié.</summary>
      <param name="context">Fournit des informations contextuelles sur un composant.</param>
      <param name="culture">Informations spécifiques à la culture qui doivent être respectées pendant la conversion.</param>
      <param name="value">Instance de <see cref="T:System.Windows.Size" /> à convertir.</param>
      <param name="destinationType">Type vers lequel cette instance de <see cref="T:System.Windows.Size" /> est convertie.</param>
      <returns>Objet qui est créé à partir de l'instance de <see cref="T:System.Windows.Size" /> convertie.</returns>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> est <see langword="null" /> ou n'est pas une instance de <see cref="T:System.Windows.Size" />, ou si le <paramref name="destinationType" /> n'est pas un des types de destination valides.</exception>
    </member>
    <member name="T:System.Windows.SplashScreen">
      <summary>Fournit un écran de démarrage pour une application WPF (Windows Presentation Foundation).</summary>
    </member>
    <member name="M:System.Windows.SplashScreen.#ctor(System.Reflection.Assembly,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.SplashScreen" /> avec l'assembly de ressource spécifié.</summary>
      <param name="resourceAssembly">Assembly qui contient la ressource incorporée.</param>
      <param name="resourceName">Nom de la ressource incorporée.</param>
    </member>
    <member name="M:System.Windows.SplashScreen.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.SplashScreen" /> avec la ressource spécifiée.</summary>
      <param name="resourceName">Nom de la ressource incorporée.</param>
    </member>
    <member name="M:System.Windows.SplashScreen.Close(System.TimeSpan)">
      <summary>Ferme l'écran de démarrage.</summary>
      <param name="fadeoutDuration">
        <see cref="T:System.TimeSpan" /> qui spécifie la durée de disparition en fondu de l'écran de démarrage une fois que l'opération de fermeture a été initiée.</param>
    </member>
    <member name="M:System.Windows.SplashScreen.Show(System.Boolean)">
      <summary>Affiche l'écran de démarrage.</summary>
      <param name="autoClose">
        <see langword="true" /> pour fermer l'écran de démarrage automatiquement ; <see langword="false" /> pour fermer l'écran de démarrage manuellement.</param>
      <exception cref="T:System.IO.IOException">La ressource spécifiée dans le constructeur est introuvable.</exception>
    </member>
    <member name="M:System.Windows.SplashScreen.Show(System.Boolean,System.Boolean)">
      <summary>Affiche l'écran de démarrage.</summary>
      <param name="autoClose">
        <see langword="true" /> pour fermer l'écran de démarrage automatiquement ; <see langword="false" /> pour fermer l'écran de démarrage manuellement.</param>
      <param name="topMost">
        <see langword="true" /> si la fenêtre de l'écran de démarrage doit utiliser le style WS_EX_TOPMOST ; sinon <see langword="false" />.</param>
    </member>
    <member name="T:System.Windows.Threading.Dispatcher">
      <summary>Fournit des services pour la gestion de la file d'attente des éléments de travail d'un thread.</summary>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate,System.Object[])">
      <summary>Exécute de façon asynchrone le délégué spécifié avec les arguments spécifiés sur le thread sur lequel le <see cref="T:System.Windows.Threading.Dispatcher" /> spécifié a été créé.</summary>
      <param name="method">Délégué d'une méthode qui prend les paramètres spécifiés dans <paramref name="args" />, qui fait l'objet d'un push dans la file d'attente des événements de <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="args">Tableau d’objets à passer comme arguments à la méthode donnée. Peut être <see langword="null" />.</param>
      <returns>Objet qui est retourné immédiatement après l'appel de <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> et qui peut être utilisé pour interagir avec le délégué en attente d'exécution dans la file d'attente des événements.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate,System.Windows.Threading.DispatcherPriority,System.Object[])">
      <summary>Exécute le délégué spécifié de façon asynchrone selon la priorité indiquée et avec les arguments définis, sur le  thread sur lequel <see cref="T:System.Windows.Threading.Dispatcher" /> a été créé.</summary>
      <param name="method">Délégué d'une méthode qui prend les paramètres spécifiés dans <paramref name="args" />, qui fait l'objet d'un push dans la file d'attente des événements de <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="priority">Priorité, par rapport aux autres opérations en attente dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />, à laquelle la méthode spécifiée est appelée.</param>
      <param name="args">Tableau d’objets à passer comme arguments à la méthode donnée. Peut être <see langword="null" />.</param>
      <returns>Objet qui est retourné immédiatement après l'appel de <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> et qui peut être utilisé pour interagir avec le délégué en attente d'exécution dans la file d'attente des événements.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate)">
      <summary>Exécute le délégué spécifié de façon asynchrone selon la priorité spécifiée au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</summary>
      <param name="priority">Priorité, par rapport aux autres opérations en attente dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />, à laquelle la méthode spécifiée est appelée.</param>
      <param name="method">Délégué vers une méthode qui ne prend pas d'arguments, qui fait l'objet d'un push dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <returns>Objet qui est retourné immédiatement après l'appel de <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> et qui peut être utilisé pour interagir avec le délégué en attente d'exécution dans la file d'attente des événements.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="method" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="priority" /> n’est pas un <see cref="T:System.Windows.Threading.DispatcherPriority" /> valide.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object)">
      <summary>Exécute le délégué spécifié de façon asynchrone selon la priorité indiquée et avec l'argument défini au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</summary>
      <param name="priority">Priorité, par rapport aux autres opérations en attente dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />, à laquelle la méthode spécifiée est appelée.</param>
      <param name="method">Délégué vers une méthode qui prend un argument, qui fait l'objet d'un push dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="arg">Objet à passer comme argument à la méthode spécifiée.</param>
      <returns>Objet qui est retourné immédiatement après l'appel de <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> et qui peut être utilisé pour interagir avec le délégué en attente d'exécution dans la file d'attente des événements.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="method" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="priority" /> n’est pas un <see cref="T:System.Windows.Threading.DispatcherPriority" /> valide.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object,System.Object[])">
      <summary>Exécute le délégué spécifié de façon asynchrone selon la priorité indiquée et avec le tableau d'arguments défini au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</summary>
      <param name="priority">Priorité, par rapport aux autres opérations en attente dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />, à laquelle la méthode spécifiée est appelée.</param>
      <param name="method">Délégué vers une méthode qui prend plusieurs arguments, qui fait l'objet d'un push dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="arg">Objet à passer comme argument à la méthode spécifiée.</param>
      <param name="args">Tableau d'objets à passer comme arguments à la méthode spécifiée.</param>
      <returns>Objet qui est retourné immédiatement après l'appel de <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> et qui peut être utilisé pour interagir avec le délégué en attente d'exécution dans la file d'attente du <see cref="T:System.Windows.Threading.Dispatcher" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="method" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <see cref="T:System.Windows.Threading.DispatcherPriority" /> n'est pas une priorité valide.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvokeShutdown(System.Windows.Threading.DispatcherPriority)">
      <summary>Initialise de façon asynchrone l'arrêt du <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="priority">Priorité à laquelle l'arrêt du répartiteur doit commencer.</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.CheckAccess">
      <summary>Détermine si le thread appelant est le thread associé à ce <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <returns>
        <see langword="true" /> si le thread appelant est le thread associé à ce <see cref="T:System.Windows.Threading.Dispatcher" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.CurrentDispatcher">
      <summary>Obtient le <see cref="T:System.Windows.Threading.Dispatcher" /> pour le thread en cours d'exécution et crée un nouveau <see cref="T:System.Windows.Threading.Dispatcher" /> si aucun n'est déjà associé au thread.</summary>
      <returns>Répartiteur associé au thread actuel.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.DisableProcessing">
      <summary>Désactive le traitement de la file d'attente du <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <returns>Structure utilisée pour réactiver le traitement du répartiteur.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.ExitAllFrames">
      <summary>Demande la fermeture de tous les frames, y compris les frames imbriqués.</summary>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.FromThread(System.Threading.Thread)">
      <summary>Obtient le <see cref="T:System.Windows.Threading.Dispatcher" /> pour le thread spécifié.</summary>
      <param name="thread">Thread à partir duquel obtenir le <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <returns>Répartiteur de <paramref name="thread" />.</returns>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.HasShutdownFinished">
      <summary>Détermine si l'arrêt du <see cref="T:System.Windows.Threading.Dispatcher" /> a abouti.</summary>
      <returns>
        <see langword="true" /> si l'arrêt du répartiteur a abouti ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.HasShutdownStarted">
      <summary>Détermine si le processus d'arrêt du <see cref="T:System.Windows.Threading.Dispatcher" /> est en cours.</summary>
      <returns>
        <see langword="true" /> si le processus d'arrêt du <see cref="T:System.Windows.Threading.Dispatcher" /> a commencé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.Hooks">
      <summary>Obtient la collection de raccordements qui fournissent des informations d'événement supplémentaires sur le <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <returns>Raccordements associés à ce <see cref="T:System.Windows.Threading.Dispatcher" />.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Action)">
      <summary>Exécute l'objet <see cref="T:System.Action" /> spécifié de façon synchrone au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</summary>
      <param name="callback">Délégué permettant d'appeler via le répartiteur.</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority)">
      <summary>Exécute l'objet <see cref="T:System.Action" /> spécifié de façon synchrone selon la priorité spécifiée au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</summary>
      <param name="callback">Délégué permettant d'appeler via le répartiteur.</param>
      <param name="priority">La priorité qui détermine l'ordre d'exécution du rappel spécifié, est appelée par rapport aux autres opérations en attente dans <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)">
      <summary>Exécute l'objet <see cref="T:System.Action" /> spécifié de façon synchrone selon la priorité spécifiée au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</summary>
      <param name="callback">Délégué permettant d'appeler via le répartiteur.</param>
      <param name="priority">La priorité qui détermine l'ordre d'exécution du rappel spécifié, est appelée par rapport aux autres opérations en attente dans <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="cancellationToken">Objet qui indique s'il est nécessaire d'annuler l'action.</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken,System.TimeSpan)">
      <summary>Exécute l'objet <see cref="T:System.Action" /> spécifié de façon synchrone selon la priorité spécifiée au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</summary>
      <param name="callback">Délégué permettant d'appeler via le répartiteur.</param>
      <param name="priority">La priorité qui détermine l'ordre d'exécution du rappel spécifié, est appelée par rapport aux autres opérations en attente dans <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="cancellationToken">Objet qui indique s'il est nécessaire d'annuler l'action.</param>
      <param name="timeout">Durée minimale d'attente de démarrage de l'opération.</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.Object[])">
      <summary>Exécute le délégué spécifié de façon synchrone avec les arguments spécifiés, sur le thread auquel <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</summary>
      <param name="method">Délégué d'une méthode qui prend les paramètres spécifiés dans <paramref name="args" />, qui fait l'objet d'un push dans la file d'attente des événements de <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="args">Tableau d’objets à passer comme arguments à la méthode donnée. Peut être <see langword="null" />.</param>
      <returns>Valeur de retour du délégué appelé ou <see langword="null" /> si le délégué n'a pas de valeur de retour.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.TimeSpan,System.Object[])">
      <summary>Exécute le délégué spécifié de façon synchrone, dans l'intervalle de temps spécifié, selon la priorité indiquée et avec les arguments définis sur le thread auquel <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</summary>
      <param name="method">Délégué d'une méthode qui prend les paramètres spécifiés dans <paramref name="args" />, qui fait l'objet d'un push dans la file d'attente des événements de <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="timeout">Durée maximale d'attente d'achèvement de l'opération.</param>
      <param name="args">Tableau d’objets à passer comme arguments à la méthode donnée. Peut être <see langword="null" />.</param>
      <returns>Valeur de retour du délégué appelé ou <see langword="null" /> si le délégué n'a pas de valeur de retour.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.Object[])">
      <summary>Exécute le délégué spécifié de façon synchrone, dans l'intervalle de temps spécifié, selon la priorité indiquée et avec les arguments définis sur le thread auquel <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</summary>
      <param name="method">Délégué d'une méthode qui prend les paramètres spécifiés dans <paramref name="args" />, qui fait l'objet d'un push dans la file d'attente des événements de <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="timeout">Durée maximale d'attente d'achèvement de l'opération.</param>
      <param name="priority">Priorité, par rapport aux autres opérations en attente dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />, à laquelle la méthode spécifiée est appelée.</param>
      <param name="args">Tableau d’objets à passer comme arguments à la méthode donnée. Peut être <see langword="null" />.</param>
      <returns>Valeur de retour du délégué appelé ou <see langword="null" /> si le délégué n'a pas de valeur de retour.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.Windows.Threading.DispatcherPriority,System.Object[])">
      <summary>Exécute le délégué spécifié de façon synchrone selon la priorité indiquée et avec les arguments définis au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</summary>
      <param name="method">Délégué d'une méthode qui prend les paramètres spécifiés dans <paramref name="args" />, qui fait l'objet d'un push dans la file d'attente des événements de <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="priority">Priorité, par rapport aux autres opérations en attente dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />, à laquelle la méthode spécifiée est appelée.</param>
      <param name="args">Tableau d’objets à passer comme arguments à la méthode donnée. Peut être <see langword="null" />.</param>
      <returns>Valeur de retour du délégué appelé ou <see langword="null" /> si le délégué n'a pas de valeur de retour.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate)">
      <summary>Exécute le délégué spécifié de façon synchrone selon la priorité spécifiée au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</summary>
      <param name="priority">Priorité, par rapport aux autres opérations en attente dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />, à laquelle la méthode spécifiée est appelée.</param>
      <param name="method">Délégué vers une méthode qui ne prend pas d'arguments, qui fait l'objet d'un push dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <returns>Valeur de retour du délégué appelé ou <see langword="null" /> si le délégué n'a pas de valeur de retour.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="priority" /> est égal à <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="priority" /> n'est pas une priorité valide.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="method" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object)">
      <summary>Exécute le délégué spécifié de façon synchrone selon la priorité indiquée et avec l'argument défini au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</summary>
      <param name="priority">Priorité, par rapport aux autres opérations en attente dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />, à laquelle la méthode spécifiée est appelée.</param>
      <param name="method">Délégué vers une méthode qui prend un argument, qui fait l'objet d'un push dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="arg">Objet à passer comme argument à la méthode donnée.</param>
      <returns>Valeur de retour du délégué appelé ou <see langword="null" /> si le délégué n'a pas de valeur de retour.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="priority" /> est égal à <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="priority" /> n'est pas une priorité valide.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="method" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object,System.Object[])">
      <summary>Exécute le délégué spécifié de façon synchrone selon la priorité indiquée et avec les arguments définis au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</summary>
      <param name="priority">Priorité, par rapport aux autres opérations en attente dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />, à laquelle la méthode spécifiée est appelée.</param>
      <param name="method">Délégué vers une méthode qui prend plusieurs arguments, qui fait l'objet d'un push dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="arg">Objet à passer comme argument à la méthode donnée.</param>
      <param name="args">Tableau d’objets à passer comme arguments à la méthode donnée.</param>
      <returns>Valeur de retour du délégué appelé ou <see langword="null" /> si le délégué n'a pas de valeur de retour.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="priority" /> est égal à <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="priority" /> n'est pas une priorité valide.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="method" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate)">
      <summary>Exécute le délégué spécifié de façon synchrone selon la priorité indiquée et avec la valeur de délai d'attente définie au niveau du thread sur lequel le <see cref="T:System.Windows.Threading.Dispatcher" /> a été créé.</summary>
      <param name="priority">Priorité, par rapport aux autres opérations en attente dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />, à laquelle la méthode spécifiée est appelée.</param>
      <param name="timeout">Temps d'attente maximal pour l'aboutissement de l'opération.</param>
      <param name="method">Délégué vers une méthode qui ne prend pas d'arguments, qui fait l'objet d'un push dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <returns>Valeur de retour du délégué appelé ou <see langword="null" /> si le délégué n'a pas de valeur de retour.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate,System.Object)">
      <summary>Exécute le délégué spécifié de façon synchrone selon la priorité indiquée et avec l'argument défini au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</summary>
      <param name="priority">Priorité, par rapport aux autres opérations en attente dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />, à laquelle la méthode spécifiée est appelée.</param>
      <param name="timeout">Temps d'attente maximal pour l'aboutissement de l'opération.</param>
      <param name="method">Délégué vers une méthode qui prend plusieurs arguments, qui fait l'objet d'un push dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="arg">Objet à passer comme argument à la méthode donnée. Peut être <see langword="null" /> si aucun argument n’est nécessaire.</param>
      <returns>Valeur de retour du délégué appelé ou <see langword="null" /> si le délégué n'a pas de valeur de retour.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="priority" /> est égal à <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="priority" /> n'est pas une priorité valide.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="method" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate,System.Object,System.Object[])">
      <summary>Exécute le délégué spécifié de façon synchrone selon la priorité indiquée et avec les arguments définis au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</summary>
      <param name="priority">Priorité, par rapport aux autres opérations en attente dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />, à laquelle la méthode spécifiée est appelée.</param>
      <param name="timeout">Temps d'attente maximal pour l'aboutissement de l'opération.</param>
      <param name="method">Délégué vers une méthode qui prend plusieurs arguments, qui fait l'objet d'un push dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="arg">Objet à passer comme argument à la méthode spécifiée.</param>
      <param name="args">Tableau d'objets à passer comme arguments à la méthode spécifiée.</param>
      <returns>Valeur de retour du délégué appelé ou <see langword="null" /> si le délégué n'a pas de valeur de retour.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="priority" /> est égal à <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="priority" /> n’est pas un <see cref="T:System.Windows.Threading.DispatcherPriority" /> valide.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="method" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0})">
      <summary>Exécute l'objet <see cref="T:System.Func`1" /> spécifié de façon synchrone au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</summary>
      <param name="callback">Délégué permettant d'appeler via le répartiteur.</param>
      <typeparam name="TResult">Type de valeur de retour du délégué spécifié.</typeparam>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)">
      <summary>Exécute l'objet <see cref="T:System.Func`1" /> spécifié de façon synchrone selon la priorité spécifiée au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</summary>
      <param name="callback">Délégué permettant d'appeler via le répartiteur.</param>
      <param name="priority">La priorité qui détermine l'ordre d'exécution du rappel spécifié, est appelée par rapport aux autres opérations en attente dans <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <typeparam name="TResult">Type de valeur de retour du délégué spécifié.</typeparam>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)">
      <summary>Exécute l'objet <see cref="T:System.Func`1" /> spécifié de façon synchrone selon la priorité spécifiée au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</summary>
      <param name="callback">Délégué permettant d'appeler via le répartiteur.</param>
      <param name="priority">La priorité qui détermine l'ordre d'exécution du rappel spécifié, est appelée par rapport aux autres opérations en attente dans <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="cancellationToken">Objet qui indique s'il est nécessaire d'annuler l'opération.</param>
      <typeparam name="TResult">Type de valeur de retour du délégué spécifié.</typeparam>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken,System.TimeSpan)">
      <summary>Exécute l'objet <see cref="T:System.Func`1" /> spécifié de façon synchrone selon la priorité spécifiée au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</summary>
      <param name="callback">Délégué permettant d'appeler via le répartiteur.</param>
      <param name="priority">La priorité qui détermine l'ordre d'exécution du rappel spécifié, est appelée par rapport aux autres opérations en attente dans <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="cancellationToken">Objet qui indique s'il est nécessaire d'annuler l'opération.</param>
      <param name="timeout">Durée minimale d'attente de démarrage de l'opération.</param>
      <typeparam name="TResult">Type de valeur de retour du délégué spécifié.</typeparam>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action)">
      <summary>Exécute l'objet <see cref="T:System.Action" /> spécifié de façon asynchrone au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</summary>
      <param name="callback">Délégué permettant d'appeler via le répartiteur.</param>
      <returns>Objet qui est retourné immédiatement après l'appel de <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action)" /> et qui peut être utilisé pour interagir avec le délégué en attente d'exécution dans la file d'attente des événements.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)">
      <summary>Exécute l'objet <see cref="T:System.Action" /> spécifié de façon asynchrone selon la priorité spécifiée au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</summary>
      <param name="callback">Délégué permettant d'appeler via le répartiteur.</param>
      <param name="priority">La priorité qui détermine l'ordre d'exécution du rappel spécifié, est appelée par rapport aux autres opérations en attente dans <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <returns>Objet qui est retourné immédiatement après l'appel de <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)" /> et qui peut être utilisé pour interagir avec le délégué en attente d'exécution dans la file d'attente des événements.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)">
      <summary>Exécute l'objet <see cref="T:System.Action" /> spécifié de façon asynchrone selon la priorité spécifiée au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</summary>
      <param name="callback">Délégué permettant d'appeler via le répartiteur.</param>
      <param name="priority">La priorité qui détermine l'ordre d'exécution du rappel spécifié, est appelée par rapport aux autres opérations en attente dans <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="cancellationToken">Objet qui indique s'il est nécessaire d'annuler l'action.</param>
      <returns>Objet qui est retourné immédiatement après l'appel de <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" /> et qui peut être utilisé pour interagir avec le délégué en attente d'exécution dans la file d'attente des événements.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0})">
      <summary>Exécute l'objet <see cref="T:System.Func`1" /> spécifié de façon asynchrone au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</summary>
      <param name="callback">Délégué permettant d'appeler via le répartiteur.</param>
      <typeparam name="TResult">Type de valeur de retour du délégué spécifié.</typeparam>
      <returns>Objet qui est retourné immédiatement après l'appel de <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0})" /> et qui peut être utilisé pour interagir avec le délégué en attente d'exécution dans la file d'attente des événements.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)">
      <summary>Exécute l'objet <see cref="T:System.Func`1" /> spécifié de façon asynchrone selon la priorité spécifiée au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</summary>
      <param name="callback">Délégué permettant d'appeler via le répartiteur.</param>
      <param name="priority">La priorité qui détermine l'ordre d'exécution du rappel spécifié, est appelée par rapport aux autres opérations en attente dans <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <typeparam name="TResult">Type de valeur de retour du délégué spécifié.</typeparam>
      <returns>Objet qui est retourné immédiatement après l'appel de <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)" /> et qui peut être utilisé pour interagir avec le délégué en attente d'exécution dans la file d'attente des événements.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)">
      <summary>Exécute l'objet <see cref="T:System.Func`1" /> spécifié de façon asynchrone selon la priorité spécifiée au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</summary>
      <param name="callback">Délégué permettant d'appeler via le répartiteur.</param>
      <param name="priority">La priorité qui détermine l'ordre d'exécution du rappel spécifié, est appelée par rapport aux autres opérations en attente dans <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="cancellationToken">Objet qui indique s'il est nécessaire d'annuler l'opération.</param>
      <typeparam name="TResult">Type de valeur de retour du délégué spécifié.</typeparam>
      <returns>Objet qui est retourné immédiatement après l'appel de <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" /> et qui peut être utilisé pour interagir avec le délégué en attente d'exécution dans la file d'attente des événements.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeShutdown">
      <summary>Initialise de façon synchrone le processus d'arrêt du <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.PushFrame(System.Windows.Threading.DispatcherFrame)">
      <summary>Entame une boucle d'exécution.</summary>
      <param name="frame">Frame que le répartiteur doit traiter.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="frame" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Threading.Dispatcher.HasShutdownFinished" /> a la valeur <see langword="true" />.  

ou - 
<paramref name="frame" /> s'exécute sur un <see cref="T:System.Windows.Threading.Dispatcher" /> différent.  

ou 
Le traitement du répartiteur a été désactivé.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Run">
      <summary>Exécute un push du frame d'exécution principal au niveau de la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="E:System.Windows.Threading.Dispatcher.ShutdownFinished">
      <summary>Se produit une fois l'arrêt du <see cref="T:System.Windows.Threading.Dispatcher" /> accompli.</summary>
    </member>
    <member name="E:System.Windows.Threading.Dispatcher.ShutdownStarted">
      <summary>Se produit au début du processus d'arrêt du <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.Thread">
      <summary>Obtient le thread auquel ce <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</summary>
      <returns>Thread.</returns>
    </member>
    <member name="E:System.Windows.Threading.Dispatcher.UnhandledException">
      <summary>Se produit lorsqu'une exception de thread est levée et non interceptée pendant l'exécution d'un délégué au moyen de <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> ou de <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />.</summary>
    </member>
    <member name="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter">
      <summary>Se produit lorsqu'une exception de thread est levée et non interceptée pendant l'exécution d'un délégué au moyen de <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> ou de <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> lors de l'étape de filtrage.</summary>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.ValidatePriority(System.Windows.Threading.DispatcherPriority,System.String)">
      <summary>Détermine si la priorité <see cref="T:System.Windows.Threading.DispatcherPriority" /> spécifiée est une priorité valide.</summary>
      <param name="priority">Priorité à vérifier.</param>
      <param name="parameterName">Chaîne qui sera retournée par l'exception qui se produira si la priorité n'est pas valide.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="priority" /> n’est pas un <see cref="T:System.Windows.Threading.DispatcherPriority" /> valide.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.VerifyAccess">
      <summary>Détermine si le thread appelant a accès à ce <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <exception cref="T:System.InvalidOperationException">Le thread appelant n'a pas accès à ce <see cref="T:System.Windows.Threading.Dispatcher" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Yield">
      <summary>Crée un objet awaitable qui renvoie de façon asynchrone le contrôle au répartiteur actuel et offre la possibilité au répartiteur de gérer d'autres événements.</summary>
      <returns>Objet awaitable qui renvoie de façon asynchrone le contrôle au répartiteur actuel et offre la possibilité au répartiteur de gérer d'autres événements.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Yield(System.Windows.Threading.DispatcherPriority)">
      <summary>Crée un objet awaitable qui renvoie de façon asynchrone le contrôle au répartiteur actuel et offre la possibilité au répartiteur de gérer d'autres événements.  Travail qui se produit lorsqu'un contrôle retourne au code qui attend le résultat de cette méthode est planifiés avec la priorité spécifiée.</summary>
      <param name="priority">Priorité avec laquelle planifier la suite.</param>
      <returns>Objet awaitable qui renvoie de façon asynchrone le contrôle au répartiteur actuel et offre la possibilité au répartiteur de gérer d'autres événements.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherEventArgs">
      <summary>Fournit des données d'événement pour les événements associés à <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherEventArgs.Dispatcher">
      <summary>
        <see cref="T:System.Windows.Threading.Dispatcher" /> associé à cet événement.</summary>
      <returns>Répartiteur.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherFrame">
      <summary>Représente une boucle d'exécution dans <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherFrame.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Threading.DispatcherFrame" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherFrame.#ctor(System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Threading.DispatcherFrame" />, à l'aide de l'indicateur de demande de sortie spécifié.</summary>
      <param name="exitWhenRequested">Indique si ce frame se ferme lorsqu'il est demandé à tous les frames de se fermer.</param>
    </member>
    <member name="P:System.Windows.Threading.DispatcherFrame.Continue">
      <summary>Obtient ou définit une valeur qui indique si <see cref="T:System.Windows.Threading.DispatcherFrame" /> doit continuer.</summary>
      <returns>
        <see langword="true" /> si le frame doit continuer ; sinon, <see langword="false" />.  La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherHookEventArgs">
      <summary>Fournit des données d'événements pour les événements <see cref="T:System.Windows.Threading.DispatcherHooks" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherHookEventArgs.#ctor(System.Windows.Threading.DispatcherOperation)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Threading.DispatcherHookEventArgs" />.</summary>
      <param name="operation">Opération associée à l'événement.</param>
    </member>
    <member name="P:System.Windows.Threading.DispatcherHookEventArgs.Dispatcher">
      <summary>Obtient le <see cref="T:System.Windows.Threading.Dispatcher" /> associé à cet événement.</summary>
      <returns>
        <see cref="T:System.Windows.Threading.Dispatcher" /> associé à cet événement.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherHookEventArgs.Operation">
      <summary>Obtient le <see cref="T:System.Windows.Threading.DispatcherOperation" /> associé à cet événement.</summary>
      <returns>L'opération.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherHookEventHandler">
      <summary>Représente la méthode qui gérera des événements associés <see cref="T:System.Windows.Threading.DispatcherHooks" />.</summary>
      <param name="sender">Source de l'événement.</param>
      <param name="e">Données d'événement.</param>
    </member>
    <member name="T:System.Windows.Threading.DispatcherHooks">
      <summary>Fournit des informations supplémentaires sur l'événement en rapport avec le traitement de <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.DispatcherInactive">
      <summary>Se produit lorsque le répartiteur n'a plus d'opérations à traiter.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationAborted">
      <summary>Se produit lorsqu'une opération est abandonnée.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationCompleted">
      <summary>Se produit lorsqu'une opération se termine.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationPosted">
      <summary>Se produit lorsqu'une opération est publiée sur le répartiteur.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationPriorityChanged">
      <summary>Se produit lorsque la priorité d'une opération est modifiée.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationStarted">
      <summary>Se produit lorsqu'une opération est appelée.</summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherObject">
      <summary>Représente un objet associé à un <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherObject.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Threading.DispatcherObject" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherObject.CheckAccess">
      <summary>Détermine si le thread appelant a accès à ce <see cref="T:System.Windows.Threading.DispatcherObject" />.</summary>
      <returns>
        <see langword="true" /> si le thread appelant a accès à cet objet ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherObject.Dispatcher">
      <summary>Obtient le <see cref="T:System.Windows.Threading.Dispatcher" /> associé à <see cref="T:System.Windows.Threading.DispatcherObject" />.</summary>
      <returns>Répartiteur.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherObject.VerifyAccess">
      <summary>Garantit que le thread appelant a accès à <see cref="T:System.Windows.Threading.DispatcherObject" />.</summary>
      <exception cref="T:System.InvalidOperationException">le thread appelant n'a pas accès à <see cref="T:System.Windows.Threading.DispatcherObject" />.</exception>
    </member>
    <member name="T:System.Windows.Threading.DispatcherOperation">
      <summary>Représente un objet utilisé pour interagir avec une opération qui a été publiée dans la file d'attente <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.Abort">
      <summary>Abandonne l'opération.</summary>
      <returns>
        <see langword="true" /> si l'opération a été abandonnée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="E:System.Windows.Threading.DispatcherOperation.Aborted">
      <summary>Se produit lorsque l'opération est abandonnée.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherOperation.Completed">
      <summary>Se produit lorsque l'opération est terminée.</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Dispatcher">
      <summary>Obtient le <see cref="T:System.Windows.Threading.Dispatcher" /> sur lequel l'opération a été publiée.</summary>
      <returns>Répartiteur.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.GetAwaiter">
      <summary>Retourne un objet qui est notifié lorsque l'opération asynchrone est terminée.</summary>
      <returns>Objet notifié lorsque l'opération asynchrone est terminée.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.InvokeDelegateCore">
      <summary>Commence l'opération associée à cette <see cref="T:System.Windows.Threading.DispatcherOperation" />.</summary>
      <returns>
        <see langword="null" /> dans tous les cas.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Priority">
      <summary>Obtient ou définit la priorité de l'opération dans la file d'attente <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <returns>Priorité du délégué dans la file d'attente.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Result">
      <summary>Obtient le résultat de l'opération après son exécution.</summary>
      <returns>Résultat de l'opération ou <see langword="null" /> si l'opération n'a pas abouti.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Status">
      <summary>Obtient l’état actuel de l’opération.</summary>
      <returns>État de l'opération.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Task">
      <summary>Obtient un <see cref="T:System.Threading.Tasks.Task`1" /> qui représente l'opération active.</summary>
      <returns>Objet représentant l'opération en cours.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.Wait">
      <summary>Attend la fin de l'opération.</summary>
      <returns>État de l'opération.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Threading.DispatcherOperation.Status" /> est égal à <see cref="F:System.Windows.Threading.DispatcherOperationStatus.Executing" />.  Cela peut se produire en attendant une opération qui est déjà en cours d'exécution sur le même thread.</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.Wait(System.TimeSpan)">
      <summary>Attend que l'opération se termine pendant la durée spécifiée.</summary>
      <param name="timeout">Durée maximale à attendre.</param>
      <returns>État de l'opération.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Threading.DispatcherOperation.Status" /> est égal à <see cref="F:System.Windows.Threading.DispatcherOperationStatus.Executing" />.  Cela peut se produire en attendant une opération qui est déjà en cours d'exécution sur le même thread.</exception>
    </member>
    <member name="T:System.Windows.Threading.DispatcherOperation`1">
      <summary>Représente un objet utilisé pour interagir avec une opération qui a été publiée dans la file d'attente <see cref="T:System.Windows.Threading.Dispatcher" /> et contient une <see cref="T:System.Threading.Tasks.Task`1" />.</summary>
      <typeparam name="TResult">Type retourné par la <see cref="T:System.Threading.Tasks.Task`1" />.</typeparam>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation`1.GetAwaiter">
      <summary>Retourne un objet qui attend une opération asynchrone qui retourne un résultat.</summary>
      <returns>Objet qui attend qu'une opération asynchrone qui retourne un résultat.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation`1.InvokeDelegateCore">
      <summary>Commence l'opération associée à cette <see cref="T:System.Windows.Threading.DispatcherOperation" />.</summary>
      <returns>Résultat de l'opération.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation`1.Result">
      <summary>Obtient le résultat de l'opération après son exécution.</summary>
      <returns>Résultat de l'opération.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation`1.Task">
      <summary>Obtient un <see cref="T:System.Threading.Tasks.Task`1" /> qui représente l'opération active.</summary>
      <returns>Objet représentant l'opération en cours.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherOperationCallback">
      <summary>Représente un délégué à utiliser pour les opérations de répartiteur.</summary>
      <param name="arg">Argument passé au rappel.</param>
      <returns>Objet retourné par le rappel.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherOperationStatus">
      <summary>Décrit les valeurs possibles de l'état de <see cref="T:System.Windows.Threading.DispatcherOperation" />.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherOperationStatus.Aborted">
      <summary>L'opération a été abandonnée.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherOperationStatus.Completed">
      <summary>L'opération est terminée.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherOperationStatus.Executing">
      <summary>L'exécution de l'opération a commencé, mais ne s'est pas terminée.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherOperationStatus.Pending">
      <summary>L'opération est en attente et toujours dans la file d'attente <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherPriority">
      <summary>Décrit les priorités selon lesquelles les opérations peuvent être appelées par le biais de <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.ApplicationIdle">
      <summary>La valeur d’énumération est 2.  Les opérations sont traitées lorsque l'application est inactive.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Background">
      <summary>La valeur d’énumération est 4.  Les opérations sont traitées après l'aboutissement de toutes les autres opérations actives.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.ContextIdle">
      <summary>La valeur d’énumération est 3.  Les opérations sont traitées après l'aboutissement des opérations d'arrière-plan.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.DataBind">
      <summary>La valeur d’énumération est 8.  Les opérations sont traitées selon la même priorité que la liaison de données.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Inactive">
      <summary>La valeur d’énumération est 0.  Les opérations ne sont pas traitées.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Input">
      <summary>La valeur d’énumération est 5.  Les opérations sont traitées selon la même priorité qu'une entrée.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Invalid">
      <summary>La valeur d'énumération est -1.  C'est une priorité non valide.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Loaded">
      <summary>La valeur d’énumération est 6.  Les opérations sont traitées lorsque la mise en page et le rendu sont finaux, mais juste avant que les éléments ayant une priorité d'entrée ne soient gérés. Cette valeur est utilisée tout particulièrement lors du déclenchement de l'événement Loaded.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Normal">
      <summary>La valeur d’énumération est 9.  Les opérations sont traitées à une priorité normale.  C'est la priorité typique d'une application.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Render">
      <summary>La valeur d’énumération est 7.  Les opérations sont traitées selon la même priorité qu'un rendu.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Send">
      <summary>La valeur d’énumération est 10.  Les opérations sont traitées avant les autres opérations asynchrones.  C'est la priorité la plus élevée.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.SystemIdle">
      <summary>La valeur d’énumération est 1.  Les opérations sont traitées lorsque le système est inactif.</summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherPriorityAwaitable">
      <summary>Représente un objet awaitable qui renvoie de façon asynchrone le contrôle au répartiteur actuel et offre la possibilité au répartiteur de gérer d'autres événements</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherPriorityAwaitable.GetAwaiter">
      <summary>Retourne un objet qui attend la fin d'une tâche asynchrone.</summary>
      <returns>Objet qui attend la fin d'une tâche asynchrone.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherPriorityAwaiter">
      <summary>Représente un objet qui attend la fin d'une tâche asynchrone.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherPriorityAwaiter.GetResult">
      <summary>Met fin à l’attente de la fin de la tâche asynchrone.</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherPriorityAwaiter.IsCompleted">
      <summary>Obtient une valeur qui indique si la tâche asynchrone est terminée.</summary>
      <returns>
        <see langword="false" /> dans tous les cas.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherPriorityAwaiter.OnCompleted(System.Action)">
      <summary>Définit l’action à effectuer quand l’objet <see cref="T:System.Windows.Threading.DispatcherPriorityAwaiter" /> cesse d’attendre que la tâche asynchrone se termine.</summary>
      <param name="continuation">Action à effectuer quand l’opération d’attente se termine.</param>
    </member>
    <member name="T:System.Windows.Threading.DispatcherProcessingDisabled">
      <summary>Représente le répartiteur lorsqu'il est désactivé et permet de réactiver le traitement du répartiteur.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.Dispose">
      <summary>Réactive le traitement du répartiteur.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.Equals(System.Object)">
      <summary>Détermine si l'objet <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> spécifié est égal à cet objet <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" />.</summary>
      <param name="obj">Objet dont l'égalité doit être évaluée.</param>
      <returns>
        <see langword="true" /> si l'objet spécifié est égal à cet objet <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.GetHashCode">
      <summary>Obtient un code de hachage pour cette instance.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.op_Equality(System.Windows.Threading.DispatcherProcessingDisabled,System.Windows.Threading.DispatcherProcessingDisabled)">
      <summary>Détermine si deux objets <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> sont identiques.</summary>
      <param name="left">Premier objet à comparer.</param>
      <param name="right">Deuxième objet à comparer.</param>
      <returns>
        <see langword="true" /> si les objets <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> sont égaux ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.op_Inequality(System.Windows.Threading.DispatcherProcessingDisabled,System.Windows.Threading.DispatcherProcessingDisabled)">
      <summary>Détermine si deux objets <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> sont inégaux.</summary>
      <param name="left">Premier objet à comparer.</param>
      <param name="right">Deuxième objet à comparer.</param>
      <returns>
        <see langword="true" /> si les objets <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> ne sont pas égaux ; sinon <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherSynchronizationContext">
      <summary>Fournit un contexte de synchronisation pour Windows Presentation Foundation (WPF).</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> à l'aide du <see cref="T:System.Windows.Threading.Dispatcher" /> actuel.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.#ctor(System.Windows.Threading.Dispatcher)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> à l'aide du <see cref="T:System.Windows.Threading.Dispatcher" /> spécifié.</summary>
      <param name="dispatcher">
        <see cref="T:System.Windows.Threading.Dispatcher" /> à associer à cet objet <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dispatcher" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.#ctor(System.Windows.Threading.Dispatcher,System.Windows.Threading.DispatcherPriority)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> à l'aide du <see cref="T:System.Windows.Threading.Dispatcher" /> spécifié.</summary>
      <param name="dispatcher">
        <see cref="T:System.Windows.Threading.Dispatcher" /> à associer à cet objet <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />.</param>
      <param name="priority">Priorité utilisée pour envoyer et publier des méthodes de rappel.</param>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.CreateCopy">
      <summary>Crée une copie de ce <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />.</summary>
      <returns>Copie de ce contexte de synchronisation.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)">
      <summary>Appelle de façon asynchrone le rappel dans le contexte de synchronisation.</summary>
      <param name="d">Délégué à appeler.</param>
      <param name="state">Objet passé au délégué.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)">
      <summary>Appelle de façon synchrone le rappel dans le contexte de synchronisation.</summary>
      <param name="d">Délégué à appeler.</param>
      <param name="state">Objet passé au délégué.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.Wait(System.IntPtr[],System.Boolean,System.Int32)">
      <summary>Attend que tout ou une partie des éléments du tableau spécifié reçoivent un signal.</summary>
      <param name="waitHandles">Tableau contenant les handles de système d'exploitation natifs.</param>
      <param name="waitAll">
        <see langword="true" /> pour attendre tous les handles ; <see langword="false" /> pour attendre un handle quelconque.</param>
      <param name="millisecondsTimeout">Nombre de millisecondes à attendre, ou <see cref="F:System.Threading.Timeout.Infinite" /> (-1) pour un délai d'attente infini.</param>
      <returns>Index du tableau de l'objet ayant respecté l'attente.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherTimer">
      <summary>Minuterie intégrée dans la file d'attente de <see cref="T:System.Windows.Threading.Dispatcher" /> qui est traitée à un intervalle de temps et selon une priorité spécifiés.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Threading.DispatcherTimer" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.#ctor(System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.EventHandler,System.Windows.Threading.Dispatcher)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Threading.DispatcherTimer" /> qui utilise l'intervalle de temps, la priorité, le gestionnaire d'événements et le <see cref="T:System.Windows.Threading.Dispatcher" /> spécifiés.</summary>
      <param name="interval">Durée séparant les graduations.</param>
      <param name="priority">Priorité à laquelle appeler la minuterie.</param>
      <param name="callback">Gestionnaire d'événements à appeler lorsque l'événement <see cref="E:System.Windows.Threading.DispatcherTimer.Tick" /> se produit.</param>
      <param name="dispatcher">Répartiteur auquel la minuterie est associée.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callback" /> a la valeur <see langword="null" />.

ou -
    &lt;code data-dev-comment-type="paramref"&gt;dispatcher&lt;/code&gt; a la valeur &lt;code data-dev-comment-type="langword"&gt;null&lt;/code&gt;.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="interval" /> est inférieur à 0 ou supérieur à <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Threading.DispatcherTimer" /> qui traite des événements de minuterie à la priorité spécifiée.</summary>
      <param name="priority">Priorité à laquelle appeler la minuterie.</param>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority,System.Windows.Threading.Dispatcher)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Threading.DispatcherTimer" /> qui s'exécute sur le <see cref="T:System.Windows.Threading.Dispatcher" /> spécifié à la priorité spécifiée.</summary>
      <param name="priority">Priorité à laquelle appeler la minuterie.</param>
      <param name="dispatcher">Répartiteur auquel la minuterie est associée.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dispatcher" /> est <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.Dispatcher">
      <summary>Obtient le <see cref="T:System.Windows.Threading.Dispatcher" /> associé à ce <see cref="T:System.Windows.Threading.DispatcherTimer" />.</summary>
      <returns>Répartiteur.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.Interval">
      <summary>Obtient ou définit la durée séparant les graduations de la minuterie.</summary>
      <returns>Durée séparant les graduations. La valeur par défaut est 00:00:00.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="interval" /> est inférieur à 0 ou supérieur à <see cref="F:System.Int32.MaxValue" /> millisecondes.</exception>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.IsEnabled">
      <summary>Obtient ou définit une valeur qui indique si la minuterie est active.</summary>
      <returns>
        <see langword="true" /> si la minuterie est activée ; sinon, <see langword="false" />.  La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.Start">
      <summary>Démarre <see cref="T:System.Windows.Threading.DispatcherTimer" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.Stop">
      <summary>Arrête <see cref="T:System.Windows.Threading.DispatcherTimer" />.</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.Tag">
      <summary>Obtient ou définit un objet de données défini par l'utilisateur.</summary>
      <returns>Données définies par l'utilisateur.  La valeur par défaut est <see langword="null" />.</returns>
    </member>
    <member name="E:System.Windows.Threading.DispatcherTimer.Tick">
      <summary>Se produit lorsque l'intervalle de la minuterie s'est écoulé.</summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs">
      <summary>Fournit des données pour l’événement <see cref="T:System.Windows.Threading.Dispatcher" /><see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" />.</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Exception">
      <summary>Obtient l'exception déclenchée lors de l'exécution du code par le répartiteur.</summary>
      <returns>Exception.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Handled">
      <summary>Obtient ou définit si l'événement d'exception a été géré.</summary>
      <returns>
        <see langword="true" /> si l'exception a été gérée ; sinon <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherUnhandledExceptionEventHandler">
      <summary>Représente la méthode qui gérera l'événement <see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" />.</summary>
      <param name="sender">Source de l'événement.</param>
      <param name="e">Données d'événement.</param>
    </member>
    <member name="T:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs">
      <summary>Fournit des données pour l’événement <see cref="T:System.Windows.Threading.Dispatcher" /><see cref="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter" />.</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.Exception">
      <summary>Obtient l'exception déclenchée lors de l'exécution du code par le répartiteur.</summary>
      <returns>Exception.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch">
      <summary>Obtient ou définit si l'exception doit être interceptée et les gestionnaires d'événements appelés.</summary>
      <returns>
        <see langword="true" /> si l'exception <see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" /> doit être déclenchée ; sinon, <see langword="false" />.  La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler">
      <summary>Représente la méthode qui gérera l'événement <see cref="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter" />.</summary>
      <param name="sender">Source de l'événement.</param>
      <param name="e">Données d'événement.</param>
    </member>
    <member name="T:System.Windows.ValidateValueCallback">
      <summary>Représente une méthode utilisée comme un rappel qui valide la valeur effective d’une propriété de dépendance.</summary>
      <param name="value">Valeur à valider.</param>
      <returns>
        <see langword="true" /> si la valeur a été validée ; <see langword="false" /> si la valeur soumise n'était pas valide.</returns>
    </member>
    <member name="T:System.Windows.Vector">
      <summary>Représente un déplacement dans l’espace 2D.</summary>
    </member>
    <member name="M:System.Windows.Vector.#ctor(System.Double,System.Double)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.Windows.Vector" />.</summary>
      <param name="x">Offset <see cref="P:System.Windows.Vector.X" /> du nouveau <see cref="T:System.Windows.Vector" />.</param>
      <param name="y">Offset <see cref="P:System.Windows.Vector.Y" /> du nouveau <see cref="T:System.Windows.Vector" />.</param>
    </member>
    <member name="M:System.Windows.Vector.Add(System.Windows.Vector,System.Windows.Point)">
      <summary>Convertit le point spécifié par le vecteur spécifié et retourne le point résultant.</summary>
      <param name="vector">Valeur de conversion du point spécifié.</param>
      <param name="point">Point à translater.</param>
      <returns>Résultat de la conversion de <paramref name="point" /> par <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Add(System.Windows.Vector,System.Windows.Vector)">
      <summary>Ajoute deux vecteurs et retourne le résultat sous forme de structure <see cref="T:System.Windows.Vector" />.</summary>
      <param name="vector1">Premier vecteur à additionner.</param>
      <param name="vector2">Deuxième vecteur à additionner.</param>
      <returns>Somme de <paramref name="vector1" /> et <paramref name="vector2" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.AngleBetween(System.Windows.Vector,System.Windows.Vector)">
      <summary>Récupère l'angle, exprimé en degrés, entre les deux vecteurs spécifiés.</summary>
      <param name="vector1">Premier vecteur à évaluer.</param>
      <param name="vector2">Deuxième vecteur à évaluer.</param>
      <returns>Angle, en degrés, entre <paramref name="vector1" /> et <paramref name="vector2" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.CrossProduct(System.Windows.Vector,System.Windows.Vector)">
      <summary>Calcule le produit croisé de deux vecteurs.</summary>
      <param name="vector1">Premier vecteur à évaluer.</param>
      <param name="vector2">Deuxième vecteur à évaluer.</param>
      <returns>Produit croisé de <paramref name="vector1" /> et <paramref name="vector2" />. La formule suivante est utilisée pour calculer le produit croisé : 
 <c>(Vector1.X * Vector2.Y) - (Vector1.Y * Vector2.X)</c></returns>
    </member>
    <member name="M:System.Windows.Vector.Determinant(System.Windows.Vector,System.Windows.Vector)">
      <summary>Calcule le déterminant de deux vecteurs.</summary>
      <param name="vector1">Premier vecteur à évaluer.</param>
      <param name="vector2">Deuxième vecteur à évaluer.</param>
      <returns>Déterminant de <paramref name="vector1" /> et <paramref name="vector2" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Divide(System.Windows.Vector,System.Double)">
      <summary>Divise le vecteur spécifié par la scalaire indiquée et retourne le résultat sous forme de <see cref="T:System.Windows.Vector" />.</summary>
      <param name="vector">Structure vectorielle à diviser.</param>
      <param name="scalar">Valeur par laquelle <paramref name="vector" /> est divisé.</param>
      <returns>Résultat de la division de <paramref name="vector" /> par <paramref name="scalar" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Equals(System.Object)">
      <summary>Détermine si le <see cref="T:System.Object" /> spécifié est une structure <see cref="T:System.Windows.Vector" /> et, si c'est le cas, s'il a les mêmes valeurs <see cref="P:System.Windows.Vector.X" /> et <see cref="P:System.Windows.Vector.Y" /> que ce vecteur.</summary>
      <param name="o">Vecteur à comparer.</param>
      <returns>
        <see langword="true" /> si <paramref name="o" /> est un <see cref="T:System.Windows.Vector" /> et a les mêmes valeurs <see cref="P:System.Windows.Vector.X" /> et <see cref="P:System.Windows.Vector.Y" /> que ce vecteur ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Equals(System.Windows.Vector)">
      <summary>Compare l'égalité de deux vecteurs.</summary>
      <param name="value">Vecteur à comparer à ce vecteur.</param>
      <returns>
        <see langword="true" /> si <paramref name="value" /> a les mêmes valeurs <see cref="P:System.Windows.Vector.X" /> et <see cref="P:System.Windows.Vector.Y" /> que ce vecteur ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Equals(System.Windows.Vector,System.Windows.Vector)">
      <summary>Compare l'égalité de deux vecteurs spécifiés.</summary>
      <param name="vector1">Premier vecteur à comparer.</param>
      <param name="vector2">Deuxième vecteur à comparer.</param>
      <returns>
        <see langword="true" /> si les composants <see cref="P:System.Windows.Vector.X" /> et <see cref="P:System.Windows.Vector.Y" /> de <paramref name="vector1" /> et <paramref name="vector2" /> sont égaux ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.GetHashCode">
      <summary>Retourne le code de hachage pour ce vecteur.</summary>
      <returns>Code de hachage de cette instance.</returns>
    </member>
    <member name="P:System.Windows.Vector.Length">
      <summary>Obtient la longueur de ce vecteur.</summary>
      <returns>Longueur de ce vecteur.</returns>
    </member>
    <member name="P:System.Windows.Vector.LengthSquared">
      <summary>Obtient le carré de la longueur de ce vecteur.</summary>
      <returns>Carré du <see cref="P:System.Windows.Vector.Length" /> de ce vecteur.</returns>
    </member>
    <member name="M:System.Windows.Vector.Multiply(System.Double,System.Windows.Vector)">
      <summary>Multiplie la scalaire spécifiée par le vecteur indiqué et retourne le <see cref="T:System.Windows.Vector" /> résultant.</summary>
      <param name="scalar">Scalaire à multiplier.</param>
      <param name="vector">Vecteur à multiplier.</param>
      <returns>Résultat de la multiplication de <paramref name="scalar" /> par <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Double)">
      <summary>Multiplie le vecteur spécifié par la scalaire indiquée et retourne le <see cref="T:System.Windows.Vector" /> résultant.</summary>
      <param name="vector">Vecteur à multiplier.</param>
      <param name="scalar">Scalaire à multiplier.</param>
      <returns>Résultat de la multiplication de <paramref name="vector" /> par <paramref name="scalar" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Windows.Media.Matrix)">
      <summary>Transforme l'espace de coordonnées du vecteur spécifié à l'aide du <see cref="T:System.Windows.Media.Matrix" /> spécifié.</summary>
      <param name="vector">Structure vectorielle à transformer.</param>
      <param name="matrix">Transformation à appliquer au <paramref name="vector" />.</param>
      <returns>Résultat de la transformation de <paramref name="vector" /> par <paramref name="matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Windows.Vector)">
      <summary>Calcule le produit scalaire des deux vecteurs spécifiés et retourne le résultat sous forme de <see cref="T:System.Double" />.</summary>
      <param name="vector1">Premier vecteur à multiplier.</param>
      <param name="vector2">Deuxième structure vectorielle à multiplier.</param>
      <returns>
        <see cref="T:System.Double" /> qui contient le produit scalaire de <paramref name="vector1" /> et de <paramref name="vector2" />, qui est calculé à l'aide de la formule suivante : 
 <c>(vector1.X * vector2.X) + (vector1.Y * vector2.Y)</c></returns>
    </member>
    <member name="M:System.Windows.Vector.Negate">
      <summary>Nie ce vecteur. Le vecteur conserve la même grandeur, mais avec une direction opposée.</summary>
    </member>
    <member name="M:System.Windows.Vector.Normalize">
      <summary>Normalise ce vecteur.</summary>
    </member>
    <member name="M:System.Windows.Vector.op_Addition(System.Windows.Vector,System.Windows.Point)">
      <summary>Convertit un point par le vecteur spécifié et retourne le point résultant.</summary>
      <param name="vector">Vecteur utilisé pour convertir <paramref name="point" />.</param>
      <param name="point">Point à translater.</param>
      <returns>Résultat de la conversion de <paramref name="point" /> par <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Addition(System.Windows.Vector,System.Windows.Vector)">
      <summary>Ajoute deux vecteurs et retourne le résultat sous forme de vecteur.</summary>
      <param name="vector1">Premier vecteur à additionner.</param>
      <param name="vector2">Deuxième vecteur à additionner.</param>
      <returns>Somme de <paramref name="vector1" /> et <paramref name="vector2" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Division(System.Windows.Vector,System.Double)">
      <summary>Divise le vecteur spécifié par la scalaire indiquée et retourne le vecteur résultant.</summary>
      <param name="vector">Vecteur à diviser.</param>
      <param name="scalar">Scalaire par laquelle <paramref name="vector" /> sera divisé.</param>
      <returns>Résultat de la division de <paramref name="vector" /> par <paramref name="scalar" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Equality(System.Windows.Vector,System.Windows.Vector)">
      <summary>Compare l'égalité de deux vecteurs.</summary>
      <param name="vector1">Premier vecteur à comparer.</param>
      <param name="vector2">Deuxième vecteur à comparer.</param>
      <returns>
        <see langword="true" /> si les composants <see cref="P:System.Windows.Vector.X" /> et <see cref="P:System.Windows.Vector.Y" /> de <paramref name="vector1" /> et <paramref name="vector2" /> sont égaux ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Explicit(System.Windows.Vector)~System.Windows.Point">
      <summary>Crée un <see cref="T:System.Windows.Point" /> avec les valeurs <see cref="P:System.Windows.Vector.X" /> et <see cref="P:System.Windows.Vector.Y" /> de ce vecteur.</summary>
      <param name="vector">Vecteur à convertir.</param>
      <returns>Point avec des valeurs de coordonnées <see cref="P:System.Windows.Point.X" /> et <see cref="P:System.Windows.Point.Y" /> égales aux valeurs offset <see cref="P:System.Windows.Vector.X" /> et <see cref="P:System.Windows.Vector.Y" /> de <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Explicit(System.Windows.Vector)~System.Windows.Size">
      <summary>Crée un <see cref="T:System.Windows.Size" /> à partir des offsets de ce vecteur.</summary>
      <param name="vector">Vecteur à convertir.</param>
      <returns>Un <see cref="T:System.Windows.Size" /> avec un <see cref="P:System.Windows.Size.Width" /> égal à la valeur absolue de la propriété <see cref="P:System.Windows.Vector.X" /> de ce vecteur et un <see cref="P:System.Windows.Size.Height" /> égal à la valeur absolue de la propriété <see cref="P:System.Windows.Vector.Y" /> de ce vecteur.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Inequality(System.Windows.Vector,System.Windows.Vector)">
      <summary>Compare l'inégalité de deux vecteurs.</summary>
      <param name="vector1">Premier vecteur à comparer.</param>
      <param name="vector2">Deuxième vecteur à comparer.</param>
      <returns>
        <see langword="true" /> si les composants <see cref="P:System.Windows.Vector.X" /> et <see cref="P:System.Windows.Vector.Y" /> de <paramref name="vector1" /> et <paramref name="vector2" /> sont différents ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Multiply(System.Double,System.Windows.Vector)">
      <summary>Multiplie la scalaire spécifiée par le vecteur indiqué et retourne le vecteur résultant.</summary>
      <param name="scalar">Scalaire à multiplier.</param>
      <param name="vector">Vecteur à multiplier.</param>
      <returns>Résultat de la multiplication de <paramref name="scalar" /> par <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Double)">
      <summary>Multiplie le vecteur spécifié par la scalaire indiquée et retourne le vecteur résultant.</summary>
      <param name="vector">Vecteur à multiplier.</param>
      <param name="scalar">Scalaire à multiplier.</param>
      <returns>Résultat de la multiplication de <paramref name="vector" /> par <paramref name="scalar" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Windows.Media.Matrix)">
      <summary>Transforme l'espace de coordonnées du vecteur spécifié à l'aide du <see cref="T:System.Windows.Media.Matrix" /> spécifié.</summary>
      <param name="vector">Vecteur à transformer.</param>
      <param name="matrix">Transformation à appliquer au <paramref name="vector" />.</param>
      <returns>Résultat de la transformation de <paramref name="vector" /> par <paramref name="matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Windows.Vector)">
      <summary>Calcule le produit scalaire des deux structures vectorielles spécifiées et retourne le résultat sous forme de <see cref="T:System.Double" />.</summary>
      <param name="vector1">Premier vecteur à multiplier.</param>
      <param name="vector2">Deuxième vecteur à multiplier.</param>
      <returns>Retourne un <see cref="T:System.Double" /> qui contient le produit scalaire de <paramref name="vector1" /> et <paramref name="vector2" /> qui est calculé à l'aide de la formule suivante : 
 <c>vector1.X * vector2.X + vector1.Y * vector2.Y</c></returns>
    </member>
    <member name="M:System.Windows.Vector.op_Subtraction(System.Windows.Vector,System.Windows.Vector)">
      <summary>Soustrait un vecteur spécifié d'un autre.</summary>
      <param name="vector1">Vecteur duquel <paramref name="vector2" /> est soustrait.</param>
      <param name="vector2">Vecteur à soustraire de <paramref name="vector1" />.</param>
      <returns>Différence entre <paramref name="vector1" /> et <paramref name="vector2" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_UnaryNegation(System.Windows.Vector)">
      <summary>Inverse le signe du vecteur spécifié.</summary>
      <param name="vector">Vecteur dont le signe doit être inversé.</param>
      <returns>Vecteur avec des valeurs <see cref="P:System.Windows.Vector.X" /> et <see cref="P:System.Windows.Vector.Y" />, opposées aux valeurs <see cref="P:System.Windows.Vector.X" /> et <see cref="P:System.Windows.Vector.Y" /> de <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Parse(System.String)">
      <summary>Convertit une représentation sous forme de chaîne d'un vecteur en la structure <see cref="T:System.Windows.Vector" /> équivalente.</summary>
      <param name="source">Représentation sous forme de chaîne du vecteur.</param>
      <returns>Structure <see cref="T:System.Windows.Vector" /> équivalente.</returns>
    </member>
    <member name="M:System.Windows.Vector.Subtract(System.Windows.Vector,System.Windows.Vector)">
      <summary>Soustrait le vecteur spécifié d'un autre vecteur spécifié.</summary>
      <param name="vector1">Vecteur duquel <paramref name="vector2" /> est soustrait.</param>
      <param name="vector2">Vecteur à soustraire de <paramref name="vector1" />.</param>
      <returns>Différence entre <paramref name="vector1" /> et <paramref name="vector2" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>Ce membre prend en charge l’infrastructure Windows Presentation Foundation (WPF) et n’est pas destiné à être directement utilisé à partir de votre code. Pour obtenir une description de ce membre, consultez <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</summary>
      <param name="format">Chaîne spécifiant le format à utiliser.  
ou 
 <see langword="null" /> pour utiliser le format par défaut défini pour le type de l'implémentation <see cref="T:System.IFormattable" />.</param>
      <param name="provider">
        <see langword="IFormatProvider" /> à utiliser pour mettre en forme la valeur.  
ou 
<see langword="null" /> pour obtenir les informations de mise en forme des nombres à partir des paramètres régionaux définis dans le système d'exploitation.</param>
      <returns>Chaîne contenant la valeur de l'instance actuelle au format spécifié.</returns>
    </member>
    <member name="M:System.Windows.Vector.ToString">
      <summary>Retourne la représentation sous forme de chaîne de cette structure <see cref="T:System.Windows.Vector" />.</summary>
      <returns>Chaîne qui représente les valeurs <see cref="P:System.Windows.Vector.X" /> et <see cref="P:System.Windows.Vector.Y" /> de ce <see cref="T:System.Windows.Vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.ToString(System.IFormatProvider)">
      <summary>Retourne la représentation sous forme de chaîne de cette structure <see cref="T:System.Windows.Vector" /> avec les informations de mise en forme spécifiées.</summary>
      <param name="provider">Informations de mise en forme propres à la culture.</param>
      <returns>Chaîne qui représente les valeurs <see cref="P:System.Windows.Vector.X" /> et <see cref="P:System.Windows.Vector.Y" /> de ce <see cref="T:System.Windows.Vector" />.</returns>
    </member>
    <member name="P:System.Windows.Vector.X">
      <summary>Obtient ou définit le composant <see cref="P:System.Windows.Vector.X" /> de ce vecteur.</summary>
      <returns>Composant <see cref="P:System.Windows.Vector.X" /> de ce vecteur. La valeur par défaut est 0.</returns>
    </member>
    <member name="P:System.Windows.Vector.Y">
      <summary>Obtient ou définit le composant <see cref="P:System.Windows.Vector.Y" /> de ce vecteur.</summary>
      <returns>Composant <see cref="P:System.Windows.Vector.Y" /> de ce vecteur. La valeur par défaut est 0.</returns>
    </member>
    <member name="T:System.Windows.VectorConverter">
      <summary>Convertit des instances d'autres types vers et à partir de <see cref="T:System.Windows.Vector" />.</summary>
    </member>
    <member name="M:System.Windows.VectorConverter.#ctor">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.Windows.Vector" />.</summary>
    </member>
    <member name="M:System.Windows.VectorConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Indique si un objet peut être converti à partir d'un type spécifique en une instance de <see cref="T:System.Windows.Vector" />.</summary>
      <param name="context">Décrit les informations de contexte d’un type.</param>
      <param name="sourceType">
        <see cref="T:System.Type" /> source interrogé pour la prise en charge de la conversion.</param>
      <returns>
        <see langword="true" /> si les objets du type spécifié peuvent être convertis en un <see cref="T:System.Windows.Vector" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.VectorConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Détermine si les instances de <see cref="T:System.Windows.Vector" /> peuvent être converties dans le type spécifié.</summary>
      <param name="context">Décrit les informations de contexte d’un type.</param>
      <param name="destinationType">Type souhaité pour lequel <see cref="T:System.Windows.Vector" /> est évalué à des fins de conversion.</param>
      <returns>
        <see langword="true" /> si des instances de <see cref="T:System.Windows.Vector" /> peuvent être converties en <paramref name="destinationType" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.VectorConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Convertit l'objet spécifié en <see cref="T:System.Windows.Vector" />.</summary>
      <param name="context">Décrit les informations de contexte d’un type.</param>
      <param name="culture">Décrit le <see cref="T:System.Globalization.CultureInfo" /> du type en cours de conversion.</param>
      <param name="value">Objet en cours de conversion.</param>
      <returns>
        <see cref="T:System.Windows.Vector" /> créé à partir de la conversion de <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Windows.VectorConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Convertit le <see cref="T:System.Windows.Vector" /> spécifié dans le type spécifié.</summary>
      <param name="context">Décrit les informations de contexte d’un type.</param>
      <param name="culture">Décrit le <see cref="T:System.Globalization.CultureInfo" /> du type en cours de conversion.</param>
      <param name="value">
        <see cref="T:System.Windows.Vector" /> à convertir.</param>
      <param name="destinationType">Type vers lequel convertir <see cref="T:System.Windows.Vector" />.</param>
      <returns>Objet créé à partir de la conversion de cette <see cref="T:System.Windows.Vector" />.</returns>
    </member>
    <member name="T:System.Windows.WeakEventManager">
      <summary>Fournit une classe de base pour le gestionnaire d’événements utilisé dans le modèle d’événement faible. Le gestionnaire ajoute et supprime des écouteurs pour les événements (ou rappels) qui utilisent également le modèle.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.#ctor">
      <summary>Initialise des valeurs de classe de base en cas d'utilisation comme initialiseur par le constructeur d'une classe dérivée.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)">
      <summary>Remet l'événement qui est géré à chaque écouteur.</summary>
      <param name="sender">L'objet sur lequel l'événement est géré.</param>
      <param name="args">
        <see cref="T:System.EventArgs" /> qui contient les données d'événement à remettre.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)">
      <summary>Remet l'événement qui est géré à chaque écouteur dans la liste fournie.</summary>
      <param name="sender">L'objet sur lequel l'événement est géré.</param>
      <param name="args">
        <see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
      <param name="list">Le <see cref="T:System.Windows.WeakEventManager.ListenerList" /> fourni.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.GetCurrentManager(System.Type)">
      <summary>Retourne l'implémentation <see cref="T:System.Windows.WeakEventManager" /> utilisée pour le type fourni.</summary>
      <param name="managerType">Le type pour qui obtenir le <see cref="T:System.Windows.WeakEventManager" />.</param>
      <returns>L'implémentation <see cref="T:System.Windows.WeakEventManager" /> correspondante.</returns>
    </member>
    <member name="P:System.Windows.WeakEventManager.Item(System.Object)">
      <summary>Obtient ou définit les données qui sont stockées pour la source spécifiée.</summary>
      <param name="source">Index de base zéro de la source demandée.</param>
      <returns>Données qui sont stockées par le gestionnaire pour cette source.</returns>
    </member>
    <member name="T:System.Windows.WeakEventManager.ListenerList">
      <summary>Fournit une liste des collections intégrées permettant de stocker des écouteurs pour <see cref="T:System.Windows.WeakEventManager" />.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.#ctor(System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.WeakEventManager.ListenerList" /> avec la capacité initiale par défaut.</summary>
      <param name="capacity">Nombre d'éléments qui doivent être alloués dans la liste initiale.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.Add(System.Windows.IWeakEventListener)">
      <summary>Ajoute un objet <see cref="T:System.Windows.IWeakEventListener" /> à <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <param name="listener">Élément d'écouteur à ajouter à <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.AddHandler(System.Delegate)">
      <summary>Ajoute un gestionnaire d'événements au <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <param name="handler">Gestionnaire d'événements à ajouter à la <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.BeginUse">
      <summary>Déclare la liste pour laquelle lancer l'utilisation. Cela empêche des modifications directes à la liste pendant les itérations des éléments de la liste.</summary>
      <returns>
        <see langword="true" /> si la liste a déjà été déclarée en vue de lancer son utilisation ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.Clone">
      <summary>Crée un clone modifiable de cette <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <returns>Clone modifiable de l'objet actif.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.CopyTo(System.Windows.WeakEventManager.ListenerList)">
      <summary>Copie la <see cref="T:System.Windows.WeakEventManager.ListenerList" /> actuelle dans la <see cref="T:System.Windows.WeakEventManager.ListenerList" /> spécifiée</summary>
      <param name="newList">Objet avec lequel effectuer la copie.</param>
    </member>
    <member name="P:System.Windows.WeakEventManager.ListenerList.Count">
      <summary>Obtient le nombre d'éléments contenus dans <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <returns>Nombre d'éléments contenus dans <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.DeliverEvent(System.Object,System.EventArgs,System.Type)">
      <summary>Remet l'événement qui est géré à chaque écouteur dans la <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <param name="sender">Objet ayant déclenché l'événement.</param>
      <param name="args">Objet qui contient les données d'événement.</param>
      <param name="managerType">Le type de <see cref="T:System.Windows.WeakEventManager" /> qui appelle cette méthode.</param>
      <returns>
        <see langword="true" /> si les écouteurs de l'ordinateur dans <see cref="T:System.Windows.WeakEventManager.ListenerList" /> font référence à un objet qui a été récupéré par le garbage collector ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.WeakEventManager.ListenerList.Empty">
      <summary>Obtient une valeur qui représente une liste vide dans un but de comparaison.</summary>
      <returns>Représentation de liste vide.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.EndUse">
      <summary>Déverrouille l'état initialisé par <see cref="M:System.Windows.WeakEventManager.ListenerList.BeginUse" />.</summary>
    </member>
    <member name="P:System.Windows.WeakEventManager.ListenerList.IsEmpty">
      <summary>Obtient une valeur qui déclare si cette occurrence de <see cref="T:System.Windows.WeakEventManager.ListenerList" /> est vide.</summary>
      <returns>
        <see langword="true" /> si la liste est vide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.WeakEventManager.ListenerList.Item(System.Int32)">
      <summary>Obtient ou définit un élément d'écouteur spécifique dans <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <param name="index">Index de base zéro de l'écouteur dans la liste.</param>
      <returns>Élément au niveau de cet index, ou référence nulle si aucun élément ne se trouve à cet index.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.PrepareForWriting(System.Windows.WeakEventManager.ListenerList@)">
      <summary>Vérifie que la liste fournie est en cours d'utilisation et, le cas échéant, affecte au paramètre de référence de la liste une copie de cette liste plutôt que son original.</summary>
      <param name="list">Liste dont l'état d'utilisation est à vérifier et la copie éventuellement.</param>
      <returns>
        <see langword="true" /> si la liste fournie est utilisée au moment de l'appel et donc que la référence au paramètre de <paramref name="list" /> a été réinitialisée de façon à devenir une copie. <see langword="false" /> si la liste fournie n'est pas en cours d'utilisation, auquel cas que la référence au paramètre <paramref name="list" /> reste inchangée.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.Purge">
      <summary>Supprime toutes les entrées dans la liste où la cible de référence sous-jacente correspond à une référence nulle.</summary>
      <returns>Retourne la valeur <see langword="true" /> si des entrées ont été vidées ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.Remove(System.Windows.IWeakEventListener)">
      <summary>Supprime la première occurrence d'un élément d'écouteur de <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <param name="listener">Élément à supprimer.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.RemoveHandler(System.Delegate)">
      <summary>Supprime un gestionnaire d'événements de la <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <param name="handler">Gestionnaire d'événements à supprimer de <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</param>
    </member>
    <member name="T:System.Windows.WeakEventManager.ListenerList`1">
      <summary>Fournit une liste des collections de type sécurisé pour stocker des écouteurs pour <see cref="T:System.Windows.WeakEventManager" />. Cette classe définit un paramètre de type pour les données d'événement utilisées.</summary>
      <typeparam name="TEventArgs">Type qui contient les données d'événement.</typeparam>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList`1.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.WeakEventManager.ListenerList`1" />.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList`1.#ctor(System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.WeakEventManager.ListenerList`1" /> avec la capacité initiale par défaut.</summary>
      <param name="capacity">Nombre d'éléments qui doivent être alloués dans la liste initiale.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList`1.Clone">
      <summary>Crée un clone modifiable de <see cref="T:System.Windows.WeakEventManager.ListenerList" />, en créant des copies complètes des valeurs.</summary>
      <returns>Clone modifiable de l'objet actif. La valeur de la propriété <see cref="P:System.Windows.Freezable.IsFrozen" /> de l'objet cloné est <see langword="false" />, même si la valeur de la propriété <see cref="P:System.Windows.Freezable.IsFrozen" /> de la source était <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList`1.DeliverEvent(System.Object,System.EventArgs,System.Type)">
      <summary>Remet l'événement qui est géré à chaque écouteur dans la <see cref="T:System.Windows.WeakEventManager.ListenerList`1" />.</summary>
      <param name="sender">Objet ayant déclenché l'événement.</param>
      <param name="e">Objet qui contient les données d'événement.</param>
      <param name="managerType">Le type de <see cref="T:System.Windows.WeakEventManager" /> qui appelle cette méthode.</param>
      <returns>
        <see langword="true" /> si les écouteurs de l'ordinateur dans <see cref="T:System.Windows.WeakEventManager.ListenerList`1" /> font référence à un objet qui a été récupéré par le garbage collector ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.NewListenerList">
      <summary>Retourne un nouvel objet destiné à contenir des écouteurs sur un événement.</summary>
      <returns>Nouvel objet destiné à contenir des écouteurs sur un événement.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ProtectedAddHandler(System.Object,System.Delegate)">
      <summary>Ajoute le délégué spécifié en tant que gestionnaire d'événements de la source spécifiée.</summary>
      <param name="source">Objet source auquel le délégué de gestionnaire est abonné.</param>
      <param name="handler">Délégué qui gère l'événement déclenché par <paramref name="source" />.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ProtectedAddListener(System.Object,System.Windows.IWeakEventListener)">
      <summary>Ajoute l'écouteur fourni à la source fournie pour l'événement qui est géré.</summary>
      <param name="source">La source à laquelle joindre des écouteurs.</param>
      <param name="listener">La classe d'écoute (qui doit implémenter <see cref="T:System.Windows.IWeakEventListener" />).</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ProtectedRemoveHandler(System.Object,System.Delegate)">
      <summary>Supprime de la source spécifiée le gestionnaire ajouté précédemment.</summary>
      <param name="source">Source à supprimer du gestionnaire.</param>
      <param name="handler">Délégué à supprimer à partir de <paramref name="source" />.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ProtectedRemoveListener(System.Object,System.Windows.IWeakEventListener)">
      <summary>Supprime un écouteur ajouté précédemment depuis la source fournie.</summary>
      <param name="source">La source à partir de laquelle supprimer des écouteurs.</param>
      <param name="listener">La classe d'écoute (qui doit implémenter <see cref="T:System.Windows.IWeakEventListener" />).</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.Purge(System.Object,System.Object,System.Boolean)">
      <summary>Supprime des entrées d'écouteur inactives dans la liste de données pour la source fournie. Retourne la valeur <see langword="true" /> si certaines entrées ont été supprimées réellement de la liste.</summary>
      <param name="source">Source des événements qui sont écoutés.</param>
      <param name="data">Les données à vérifier. Cet objet est supposé être une implémentation <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</param>
      <param name="purgeAll">
        <see langword="true" /> pour cesser d'écouter la <paramref name="source" /> et supprimer entièrement toutes les entrées de <paramref name="data" />.</param>
      <returns>
        <see langword="true" /> si certaines entrées ont été réellement supprimées ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.WeakEventManager.ReadLock">
      <summary>Établit un verrou de lecture sur la table de données sous-jacente et retourne un <see cref="T:System.IDisposable" />.</summary>
      <returns>Objet qui peut être utilisé pour établir un verrou sur les membres de la table de données, puis être supprimé de manière appropriée avec une construction <see langword="using" />.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.Remove(System.Object)">
      <summary>Supprime tous les écouteurs pour la source spécifiée.</summary>
      <param name="source">La source pour laquelle supprimer des informations d'écouteur.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ScheduleCleanup">
      <summary>Demande qu'un vidage d'entrées inutilisées dans la liste d'écouteur sous-jacente soit effectué sur un thread de basse priorité.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.SetCurrentManager(System.Type,System.Windows.WeakEventManager)">
      <summary>Définit le gestionnaire actuel pour le type de gestionnaire spécifié.</summary>
      <param name="managerType">Type utilisé pour définir le nouveau gestionnaire d'événements.</param>
      <param name="manager">Le nouveau gestionnaire d'événement.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.StartListening(System.Object)">
      <summary>En cas de substitution dans une classe dérivée, commence à écouter pour l'événement qui est géré. Après avoir d'abord appelé la méthode <see cref="M:System.Windows.WeakEventManager.StartListening(System.Object)" />, le gestionnaire doit être dans l'état d'appeler <see cref="M:System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)" /> ou <see cref="M:System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)" /> à chaque fois que l'événement pertinent de la source fournie est géré.</summary>
      <param name="source">La source sur laquelle commencer à écouter.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.StopListening(System.Object)">
      <summary>En cas de substitution dans une classe dérivée, cesse d'écouter sur la source fournie pour l'événement qui est géré.</summary>
      <param name="source">La source sur laquelle arrêter d'écouter.</param>
    </member>
    <member name="P:System.Windows.WeakEventManager.WriteLock">
      <summary>Établit un verrou d’écriture sur la table de données sous-jacente et retourne un <see cref="T:System.IDisposable" />.</summary>
      <returns>Objet qui peut être utilisé pour établir un verrou sur les membres de la table de données, puis être supprimé de manière appropriée avec une construction <see langword="using" />.</returns>
    </member>
    <member name="T:System.Windows.WeakEventManager`2">
      <summary>Fournit un <see cref="T:System.Windows.WeakEventManager" /> de type sécurisé qui permet de spécifier le gestionnaire d'événements à utiliser pour le modèle d'écouteur d'événements faible. Cette classe définit un paramètre de type pour la source de l'événement et un paramètre de type pour les données d'événement utilisées.</summary>
      <typeparam name="TEventSource">Type qui déclenche l'événement.</typeparam>
      <typeparam name="TEventArgs">Type qui contient les données d'événement.</typeparam>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.AddHandler(`0,System.String,System.EventHandler{`1})">
      <summary>Ajoute le gestionnaire d'événements spécifié à l'événement spécifié.</summary>
      <param name="source">Objet source qui déclenche l'événement spécifié.</param>
      <param name="eventName">Nom de l'événement auquel s'abonner.</param>
      <param name="handler">Délégué qui gère l'événement.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.NewListenerList">
      <summary>Retourne un nouvel objet destiné à contenir des écouteurs sur un événement.</summary>
      <returns>Nouvel objet destiné à contenir des écouteurs sur un événement.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.RemoveHandler(`0,System.String,System.EventHandler{`1})">
      <summary>Supprime le gestionnaire d'événements spécifié de l'événement spécifié.</summary>
      <param name="source">Objet source qui déclenche l'événement spécifié.</param>
      <param name="eventName">Nom de l'événement duquel supprimer le gestionnaire.</param>
      <param name="handler">Délégué à supprimer</param>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.StartListening(System.Object)">
      <summary>Démarre l'écoute de l'événement sur l'objet spécifié.</summary>
      <param name="source">Objet déclenchant l'événement.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.StopListening(System.Object)">
      <summary>Arrête l'écoute de l'événement sur l'objet spécifié.</summary>
      <param name="source">Objet déclenchant l'événement.</param>
    </member>
  </members>
</doc>