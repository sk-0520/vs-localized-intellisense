<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Windows.Extensions</name>
  </assembly>
  <members>
    <member name="T:System.Drawing.FontConverter">
      <summary>Konvertiert <see cref="T:System.Drawing.Font" />-Objekte aus einem Datentyp in einen anderen.</summary>
    </member>
    <member name="M:System.Drawing.FontConverter.#ctor">
      <summary>Initialisiert ein neues <see cref="T:System.Drawing.FontConverter" />-Objekt.</summary>
    </member>
    <member name="M:System.Drawing.FontConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Bestimmt, ob dieser Konverter ein Objekt des angegebenen Quelltyps in den systemeigenen Typ des Konverters konvertieren kann.</summary>
      <param name="context">Ein Formatierungskontext. Dieses Objekt kann zum Abrufen zusätzlicher Informationen über die Umgebung verwendet werden, aus der dieser Konverter aufgerufen wird. Der Wert hierfür kann <see langword="null" /> sein. Eine Überprüfung ist daher ratsam. Außerdem kann für die Eigenschaften des Kontextobjekts ebenfalls <see langword="null" /> zurückgegeben werden.</param>
      <param name="sourceType">Der Typ, aus dem Sie konvertieren möchten.</param>
      <returns>Diese Methode gibt <see langword="true" /> zurück, wenn dieses Objekt die Konvertierung ausführen kann.</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ruft einen Wert ab, der angibt, ob dieser Konverter ein Objekt unter Verwendung des Kontexts in den angegebenen Zieltyp konvertieren kann.</summary>
      <param name="context">Ein <see langword="ITypeDescriptorContext" />-Objekt, das einen Formatierungskontext bereitstellt.</param>
      <param name="destinationType">Ein <see cref="T:System.Type" />-Objekt, das den Zieltyp der Konvertierung darstellt.</param>
      <returns>Diese Methode gibt <see langword="true" /> zurück, wenn dieser Konverter die Konvertierung ausführen kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Konvertiert das angegebene Objekt in den systemeigenen Typ des Konverters.</summary>
      <param name="context">Ein Formatierungskontext. Dieses Objekt kann zum Abrufen zusätzlicher Informationen über die Umgebung verwendet werden, aus der dieser Konverter aufgerufen wird. Der Wert hierfür kann <see langword="null" /> sein. Eine Überprüfung ist daher ratsam. Außerdem kann für die Eigenschaften des Kontextobjekts ebenfalls <see langword="null" /> zurückgegeben werden.</param>
      <param name="culture">Ein <see langword="CultureInfo" />-Objekt, das die Kultur angibt, mit der die Schriftart dargestellt wird.</param>
      <param name="value">Das zu konvertierende Objekt.</param>
      <returns>Das konvertierte Objekt.</returns>
      <exception cref="T:System.NotSupportedException">Die Konvertierung konnte nicht durchgeführt werden.</exception>
    </member>
    <member name="M:System.Drawing.FontConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Konvertiert das angegebene Objekt in einen anderen Typ.</summary>
      <param name="context">Ein Formatierungskontext. Dieses Objekt kann zum Abrufen zusätzlicher Informationen über die Umgebung verwendet werden, aus der dieser Konverter aufgerufen wird. Der Wert hierfür kann <see langword="null" /> sein. Eine Überprüfung ist daher ratsam. Außerdem kann für die Eigenschaften des Kontextobjekts ebenfalls <see langword="null" /> zurückgegeben werden.</param>
      <param name="culture">Ein <see cref="T:System.Globalization.CultureInfo" />-Objekt, das die Kultur angibt, mit der das Objekt dargestellt wird.</param>
      <param name="value">Das zu konvertierende Objekt.</param>
      <param name="destinationType">Der Datentyp, in den das Objekt konvertiert werden soll.</param>
      <returns>Das konvertierte Objekt.</returns>
      <exception cref="T:System.NotSupportedException">Die Konvertierung war nicht erfolgreich.</exception>
    </member>
    <member name="M:System.Drawing.FontConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>Erstellt ein Objekt dieses Typs mithilfe eines angegebenen Satzes von Eigenschaftswerten für das Objekt.</summary>
      <param name="context">Ein Typdeskriptor, mit dem zusätzlicher Kontext bereitgestellt werden kann.</param>
      <param name="propertyValues">Ein Wörterbuch mit neuen Eigenschaftswerten. Das Wörterbuch enthält für jede von der <see cref="Overload:System.Drawing.FontConverter.GetProperties" />-Methode zurückgegebene Eigenschaft ein Name-Wert-Paar.</param>
      <returns>Das neu erstellte Objekt oder <see langword="null" />, wenn das Objekt nicht erstellt werden konnte. Die Standardimplementierung gibt <see langword="null" /> zurück.  
 <see cref="M:System.Drawing.FontConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> bietet sich für das Erstellen unveränderlicher Objekte an, die über veränderliche Eigenschaften verfügen.</returns>
    </member>
    <member name="T:System.Drawing.FontConverter.FontNameConverter">
      <summary>
        <see cref="T:System.Drawing.FontConverter.FontNameConverter" /> ist ein Typkonverter, der verwendet wird, um einen Schriftartnamen in und aus verschiedenen anderen Darstellungen zu konvertieren.</summary>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Drawing.FontConverter.FontNameConverter" />-Klasse.</summary>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Bestimmt, ob dieser Konverter ein Objekt des angegebenen Quelltyps in den systemeigenen Typ des Konverters konvertieren kann.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, mit dem zusätzliche Informationen über die Umgebung gewonnen werden können, aus der der Konverter aufgerufen wird. Der Wert hierfür kann <see langword="null" /> sein. Eine Überprüfung ist daher ratsam. Außerdem geben die Eigenschaften des Kontextobjekts möglicherweise <see langword="null" /> zurück.</param>
      <param name="sourceType">Der Typ, aus dem konvertiert werden soll.</param>
      <returns>
        <see langword="true" />, wenn der Konverter die Konvertierung durchführen kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Konvertiert das angegebene Objekt in den systemeigenen Typ des Konverters.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, mit dem zusätzliche Informationen über die Umgebung gewonnen werden können, aus der der Konverter aufgerufen wird. Der Wert hierfür kann <see langword="null" /> sein. Eine Überprüfung ist daher ratsam. Außerdem geben die Eigenschaften des Kontextobjekts möglicherweise <see langword="null" /> zurück.</param>
      <param name="culture">Eine <see cref="T:System.Globalization.CultureInfo" />, die zum Durchführen der Konvertierung verwendet wird.</param>
      <param name="value">Das zu konvertierende Objekt.</param>
      <returns>Das konvertierte Objekt.</returns>
      <exception cref="T:System.NotSupportedException">Die Konvertierung kann nicht vollständig durchgeführt werden.</exception>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Ruft eine Auflistung mit einem Satz von Standardwerten für den Datentyp ab, für den dieser Konverter vorgesehen ist.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, mit dem zusätzliche Informationen über die Umgebung gewonnen werden können, aus der der Konverter aufgerufen wird. Der Wert hierfür kann <see langword="null" /> sein. Eine Überprüfung ist daher ratsam. Außerdem geben die Eigenschaften des Kontextobjekts möglicherweise <see langword="null" /> zurück.</param>
      <returns>Eine Auflistung, die einen Standardsatz zulässiger Werte oder <see langword="null" /> enthält. Die Standardeinstellung ist <see langword="null" />.</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Bestimmt, ob die von der <see cref="Overload:System.Drawing.FontConverter.FontNameConverter.GetStandardValues" />-Methode zurückgegebene Liste von Standardwerten eine exklusive Liste ist.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, mit dem zusätzliche Informationen über die Umgebung gewonnen werden können, aus der der Konverter aufgerufen wird. Der Wert hierfür kann <see langword="null" /> sein. Eine Überprüfung ist daher ratsam. Außerdem geben die Eigenschaften des Kontextobjekts möglicherweise <see langword="null" /> zurück.</param>
      <returns>
        <see langword="true" />, wenn die von der <see cref="Overload:System.Drawing.FontConverter.FontNameConverter.GetStandardValues" />-Methode zurückgegebene Auflistung eine exklusive Liste der möglichen Werte darstellt, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Bestimmt, ob dieses Objekt einen Standardsatz von Werten unterstützt, die aus einer Liste ausgewählt werden können.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, mit dem zusätzliche Informationen über die Umgebung gewonnen werden können, aus der der Konverter aufgerufen wird. Der Wert hierfür kann <see langword="null" /> sein. Eine Überprüfung ist daher ratsam. Außerdem geben die Eigenschaften des Kontextobjekts möglicherweise <see langword="null" /> zurück.</param>
      <returns>
        <see langword="true" />, wenn die <see cref="Overload:System.Drawing.FontConverter.FontNameConverter.GetStandardValues" />-Methode aufgerufen werden muss, um eine vom Objekt unterstützte Standardmenge von Werten zu ermitteln, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.System#IDisposable#Dispose">
      <summary>Führt anwendungsspezifische Aufgaben aus, die mit dem Freigeben, Zurückgeben oder Zurücksetzen von nicht verwalteten Ressourcen zusammenhängen.</summary>
    </member>
    <member name="T:System.Drawing.FontConverter.FontUnitConverter">
      <summary>Konvertiert Schriftarteinheiten in und aus anderen Einheitstypen.</summary>
    </member>
    <member name="M:System.Drawing.FontConverter.FontUnitConverter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Drawing.FontConverter.FontUnitConverter" />-Klasse.</summary>
    </member>
    <member name="M:System.Drawing.FontConverter.FontUnitConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gibt eine Auflistung von Standardwerten zurück, die für den <see cref="T:System.Drawing.Font" />-Typ gültig sind.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
    </member>
    <member name="M:System.Drawing.FontConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Bestimmt, ob für das Ändern eines Werts dieses Objekts ein Aufruf der <see cref="Overload:System.Drawing.FontConverter.CreateInstance" />-Methode zum Erstellen eines neuen Werts erforderlich sein soll.</summary>
      <param name="context">Ein Typdeskriptor, mit dem zusätzlicher Kontext bereitgestellt werden kann.</param>
      <returns>Diese Methode gibt <see langword="true" /> zurück, wenn das <see langword="CreateInstance" />-Objekt beim Ändern einer oder mehrerer Eigenschaften dieses Objekts aufgerufen werden soll, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>Ruft die Gruppe der Eigenschaften für diesen Typ ab. In der Standardeinstellung gibt ein Typ keine Eigenschaften zurück.</summary>
      <param name="context">Ein Typdeskriptor, mit dem zusätzlicher Kontext bereitgestellt werden kann.</param>
      <param name="value">Der Wert des Objekts, für das die Eigenschaften abgerufen werden sollen.</param>
      <param name="attributes">Ein Array von <see cref="T:System.Attribute" />-Objekten, die die Eigenschaften beschreiben.</param>
      <returns>Die Gruppe von Eigenschaften, die für diesen Datentyp verfügbar gemacht werden sollen. Wenn keine Eigenschaften verfügbar gemacht werden dürfen, wird eventuell <see langword="null" /> zurückgegeben. Die Standardimplementierung gibt immer <see langword="null" /> zurück.  
Eine einfache Implementierung dieser Methode kann die <see cref="Overload:System.ComponentModel.TypeConverter.GetProperties" />-Methode für den richtigen Datentyp aufrufen.</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Bestimmt, ob dieses Objekt Eigenschaften unterstützt. Die Standardeinstellung ist <see langword="false" />.</summary>
      <param name="context">Ein Typdeskriptor, mit dem zusätzlicher Kontext bereitgestellt werden kann.</param>
      <returns>Diese Methode gibt <see langword="true" /> zurück, wenn die <see cref="M:System.Drawing.FontConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />-Methode aufgerufen werden muss, um die Eigenschaften dieses Objekts zu ermitteln, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Drawing.IconConverter">
      <summary>Konvertiert ein <see cref="T:System.Drawing.Icon" />-Objekt aus einem Datentyp in einen anderen. Greifen Sie auf diese Klasse über das <see cref="T:System.ComponentModel.TypeDescriptor" />-Objekt zu.</summary>
    </member>
    <member name="M:System.Drawing.IconConverter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Drawing.IconConverter" />-Klasse.</summary>
    </member>
    <member name="M:System.Drawing.IconConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Bestimmt, ob dieser <see cref="T:System.Drawing.IconConverter" /> eine Instanz eines angegebenen Typs in ein <see cref="T:System.Drawing.Icon" /> unter Verwendung des angegebenen Kontexts konvertieren kann.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="sourceType">Ein <see cref="T:System.Type" />, der den Ausgangstyp der Konvertierung angibt.</param>
      <returns>Diese Methode gibt <see langword="true" /> zurück, wenn dieser <see cref="T:System.Drawing.IconConverter" /> die Konvertierung ausführen kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.IconConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Bestimmt, ob dieser <see cref="T:System.Drawing.IconConverter" /> ein <see cref="T:System.Drawing.Icon" /> in eine Instanz eines angegebenen Typs unter Verwendung des angegebenen Kontexts konvertieren kann.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="destinationType">Ein <see cref="T:System.Type" />, der den Zieltyp der Konvertierung angibt.</param>
      <returns>Diese Methode gibt <see langword="true" /> zurück, wenn dieser <see cref="T:System.Drawing.IconConverter" /> die Konvertierung ausführen kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.IconConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Konvertiert ein angegebenes Objekt in ein <see cref="T:System.Drawing.Icon" />.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="culture">Eine <see cref="T:System.Globalization.CultureInfo" /> mit Informationen über eine bestimmte Kultur.</param>
      <param name="value">Der zu konvertierende <see cref="T:System.Object" />.</param>
      <returns>Wenn diese Methode erfolgreich abgeschlossen wird, gibt sie das <see cref="T:System.Drawing.Icon" /> zurück, das durch die Konvertierung des angegebenen Objekts erstellt wurde. Andernfalls wird eine Ausnahme ausgelöst.</returns>
      <exception cref="T:System.NotSupportedException">Die Konvertierung konnte nicht durchgeführt werden.</exception>
    </member>
    <member name="M:System.Drawing.IconConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Konvertiert ein <see cref="T:System.Drawing.Icon" /> (oder ein Objekt, das in ein <see cref="T:System.Drawing.Icon" /> umgewandelt werden kann) in einen angegebenen Typ.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="culture">Ein <see cref="T:System.Globalization.CultureInfo" />-Objekt, das die von einer bestimmten Kultur verwendeten Formatierungskonventionen angibt.</param>
      <param name="value">Das zu konvertierende Objekt. Dieses Objekt muss entweder vom Typ Icon oder einem Typ sein, der in den Typ <see cref="T:System.Drawing.Icon" /> umgewandelt werden kann.</param>
      <param name="destinationType">Der Typ, in den das Symbol konvertiert werden soll.</param>
      <returns>Diese Methode gibt das konvertierte Objekt zurück.</returns>
      <exception cref="T:System.NotSupportedException">Die Konvertierung konnte nicht durchgeführt werden.</exception>
    </member>
    <member name="T:System.Drawing.ImageConverter">
      <summary>
        <see cref="T:System.Drawing.ImageConverter" /> ist eine Klasse, mit der <see cref="T:System.Drawing.Image" />-Objekte in andere Datentypen konvertiert werden können. Greifen Sie auf diese Klasse über das <see cref="T:System.ComponentModel.TypeDescriptor" />-Objekt zu.</summary>
    </member>
    <member name="M:System.Drawing.ImageConverter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Drawing.ImageConverter" />-Klasse.</summary>
    </member>
    <member name="M:System.Drawing.ImageConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Bestimmt, ob dieser <see cref="T:System.Drawing.ImageConverter" /> eine Instanz eines angegebenen Typs in ein <see cref="T:System.Drawing.Image" /> unter Verwendung des angegebenen Kontexts konvertieren kann.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="sourceType">Ein <see cref="T:System.Type" />, der den Ausgangstyp der Konvertierung angibt.</param>
      <returns>Diese Methode gibt <see langword="true" /> zurück, wenn dieser <see cref="T:System.Drawing.ImageConverter" /> die Konvertierung ausführen kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.ImageConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Bestimmt, ob dieser <see cref="T:System.Drawing.ImageConverter" /> ein <see cref="T:System.Drawing.Image" /> in eine Instanz eines angegebenen Typs unter Verwendung des angegebenen Kontexts konvertieren kann.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="destinationType">Ein <see cref="T:System.Type" />, der den Zieltyp der Konvertierung angibt.</param>
      <returns>Diese Methode gibt <see langword="true" /> zurück, wenn dieser <see cref="T:System.Drawing.ImageConverter" /> die Konvertierung ausführen kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.ImageConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Konvertiert ein angegebenes Objekt in ein <see cref="T:System.Drawing.Image" />.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="culture">Eine <see cref="T:System.Globalization.CultureInfo" /> mit Informationen über eine bestimmte Kultur.</param>
      <param name="value">Der zu konvertierende <see cref="T:System.Object" />.</param>
      <returns>Wenn diese Methode erfolgreich abgeschlossen wird, gibt sie das <see cref="T:System.Drawing.Image" /> zurück, das durch die Konvertierung des angegebenen Objekts erstellt wurde. Andernfalls wird eine Ausnahme ausgelöst.</returns>
      <exception cref="T:System.NotSupportedException">Die Konvertierung kann nicht vollständig durchgeführt werden.</exception>
    </member>
    <member name="M:System.Drawing.ImageConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Konvertiert ein <see cref="T:System.Drawing.Image" /> (oder ein Objekt, das in ein <see cref="T:System.Drawing.Image" /> umgewandelt werden kann) in den angegebenen Typ.</summary>
      <param name="context">Ein Formatierungskontext. Dieses Objekt kann zum Abrufen weiterer Informationen über die Umgebung verwendet werden, aus der dieser Konverter aufgerufen wird. Der Wert hierfür kann <see langword="null" /> sein. Eine Überprüfung ist daher ratsam. Außerdem kann für die Eigenschaften des Kontextobjekts ebenfalls <see langword="null" /> zurückgegeben werden.</param>
      <param name="culture">Ein <see cref="T:System.Globalization.CultureInfo" />-Objekt, das die von einer bestimmten Kultur verwendeten Formatierungskonventionen angibt.</param>
      <param name="value">Die zu konvertierende <see cref="T:System.Drawing.Image" />.</param>
      <param name="destinationType">Der <see cref="T:System.Type" />, in den <see cref="T:System.Drawing.Image" /> konvertiert werden soll.</param>
      <returns>Diese Methode gibt das konvertierte Objekt zurück.</returns>
      <exception cref="T:System.NotSupportedException">Die Konvertierung kann nicht vollständig durchgeführt werden.</exception>
    </member>
    <member name="M:System.Drawing.ImageConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>Ruft die Gruppe von Eigenschaften für diesen Typ ab.</summary>
      <param name="context">Ein Typdeskriptor, mit dem zusätzlicher Kontext bereitgestellt werden kann.</param>
      <param name="value">Der Wert des Objekts, für das die Eigenschaften abgerufen werden sollen.</param>
      <param name="attributes">Ein Array von <see cref="T:System.Attribute" />-Objekten, die die Eigenschaften beschreiben.</param>
      <returns>Die Gruppe von Eigenschaften, die für diesen Datentyp verfügbar gemacht werden sollen. Wenn keine Eigenschaften verfügbar gemacht werden sollen, wird <see langword="null" /> zurückgegeben. Die Standardimplementierung gibt immer <see langword="null" /> zurück.</returns>
    </member>
    <member name="M:System.Drawing.ImageConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gibt an, ob dieses Objekt Eigenschaften unterstützt. Die Standardeinstellung ist <see langword="false" />.</summary>
      <param name="context">Ein Typdeskriptor, mit dem zusätzlicher Kontext bereitgestellt werden kann.</param>
      <returns>Diese Methode gibt <see langword="true" /> zurück, wenn die <see cref="Overload:System.Drawing.ImageConverter.GetProperties" />-Methode aufgerufen werden muss, um die Eigenschaften dieses Objekts zu ermitteln.</returns>
    </member>
    <member name="T:System.Drawing.ImageFormatConverter">
      <summary>
        <see cref="T:System.Drawing.ImageFormatConverter" /> ist eine Klasse, mit der <see cref="T:System.Drawing.Imaging.ImageFormat" />-Objekte in andere Datentypen konvertiert werden können. Greifen Sie auf diese Klasse über das <see cref="T:System.ComponentModel.TypeDescriptor" />-Objekt zu.</summary>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Drawing.ImageFormatConverter" />-Klasse.</summary>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gibt an, ob dieser Konverter ein Objekt des angegebenen Quelltyps in den systemeigenen Typ des Konverters konvertieren kann.</summary>
      <param name="context">Ein Formatierungskontext. Dieses Objekt kann zum Abrufen weiterer Informationen über die Umgebung verwendet werden, aus der dieser Konverter aufgerufen wird. Der Wert hierfür kann <see langword="null" /> sein. Eine Überprüfung ist daher ratsam. Außerdem kann für die Eigenschaften des Kontextobjekts ebenfalls <see langword="null" /> zurückgegeben werden.</param>
      <param name="sourceType">Der Typ, aus dem Sie konvertieren möchten.</param>
      <returns>Diese Methode gibt <see langword="true" /> zurück, wenn dieses Objekt die Konvertierung ausführen kann.</returns>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ruft einen Wert ab, der angibt, ob dieser Konverter ein Objekt unter Verwendung des Kontexts in den angegebenen Zieltyp konvertieren kann.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der den Kontext für diese Typkonvertierung angibt.</param>
      <param name="destinationType">Der <see cref="T:System.Type" />, der den Zieltyp für die Konvertierung dieses <see cref="T:System.Drawing.Imaging.ImageFormat" />-Objekts darstellt.</param>
      <returns>Diese Methode gibt <see langword="true" /> zurück, wenn dieses Objekt die Konvertierung ausführen kann.</returns>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Konvertiert das angegebene Objekt in ein <see cref="T:System.Drawing.Imaging.ImageFormat" />-Objekt.</summary>
      <param name="context">Ein Formatierungskontext. Dieses Objekt kann zum Abrufen weiterer Informationen über die Umgebung verwendet werden, aus der dieser Konverter aufgerufen wird. Der Wert hierfür kann <see langword="null" /> sein. Eine Überprüfung ist daher ratsam. Außerdem kann für die Eigenschaften des Kontextobjekts ebenfalls <see langword="null" /> zurückgegeben werden.</param>
      <param name="culture">Ein <see cref="T:System.Globalization.CultureInfo" />-Objekt, das die Formatierungskonventionen für eine bestimmte Kultur angibt.</param>
      <param name="value">Das zu konvertierende Objekt.</param>
      <returns>Das konvertierte Objekt.</returns>
      <exception cref="T:System.NotSupportedException">Die Konvertierung kann nicht vollständig durchgeführt werden.</exception>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Konvertiert das angegebene Objekt in den angegebenen Typ.</summary>
      <param name="context">Ein Formatierungskontext. Dieses Objekt kann zum Abrufen weiterer Informationen über die Umgebung verwendet werden, aus der dieser Konverter aufgerufen wird. Der Wert hierfür kann <see langword="null" /> sein. Eine Überprüfung ist daher ratsam. Außerdem kann für die Eigenschaften des Kontextobjekts ebenfalls <see langword="null" /> zurückgegeben werden.</param>
      <param name="culture">Ein <see cref="T:System.Globalization.CultureInfo" />-Objekt, das die Formatierungskonventionen für eine bestimmte Kultur angibt.</param>
      <param name="value">Das zu konvertierende Objekt.</param>
      <param name="destinationType">Der Typ, in den das Objekt konvertiert werden soll.</param>
      <returns>Das konvertierte Objekt.</returns>
      <exception cref="T:System.NotSupportedException">Die Konvertierung kann nicht vollständig durchgeführt werden.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> ist gleich <see langword="null." />.</exception>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Ruft eine Auflistung einer Gruppe von Standardwerten für den Datentyp ab, für den dieses Validierungssteuerelement entworfen wurde. Gibt <see langword="null" /> zurück, wenn der Datentyp keine Standardmenge von Werten unterstützt.</summary>
      <param name="context">Ein Formatierungskontext. Dieses Objekt kann zum Abrufen weiterer Informationen über die Umgebung verwendet werden, aus der dieser Konverter aufgerufen wird. Der Wert hierfür kann <see langword="null" /> sein. Eine Überprüfung ist daher ratsam. Außerdem kann für die Eigenschaften des Kontextobjekts ebenfalls <see langword="null" /> zurückgegeben werden.</param>
      <returns>Eine Auflistung, die eine Standardmenge zulässiger Werten oder <see langword="null" /> enthält. Die Standardimplementierung gibt immer <see langword="null" /> zurück.</returns>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gibt an, ob dieses Objekt einen Standardmenge von Werten unterstützt, die aus einer Liste ausgewählt werden können.</summary>
      <param name="context">Ein Typdeskriptor, mit dem zusätzlicher Kontext bereitgestellt werden kann.</param>
      <returns>Diese Methode gibt <see langword="true" /> zurück, wenn die <see cref="Overload:System.Drawing.ImageFormatConverter.GetStandardValues" />-Methode aufgerufen werden muss, um eine allgemeine, vom Objekt unterstützte Menge von Werten zu ermitteln.</returns>
    </member>
    <member name="T:System.Drawing.Printing.MarginsConverter">
      <summary>Stellt einen <see cref="T:System.Drawing.Printing.MarginsConverter" /> für <see cref="T:System.Drawing.Printing.Margins" /> bereit.</summary>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Drawing.Printing.MarginsConverter" />-Klasse.</summary>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gibt zurück, ob dieser Konverter ein Objekt des angegebenen Quelltyps unter Verwendung des angegebenen Kontexts in den systemeigenen Typ des Konverters konvertieren kann.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="sourceType">Eine <see cref="T:System.Type" />-Klasse, die den Ausgangstyp der Konvertierung darstellt.</param>
      <returns>
        <see langword="true" />, wenn ein Objekt die Konvertierung durchführen kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gibt zurück, ob dieser Konverter ein Objekt unter Verwendung des Kontexts in den angegebenen Zieltyp konvertieren kann.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="destinationType">Ein <see cref="T:System.Type" />, der den Zieltyp der Konvertierung darstellt.</param>
      <returns>
        <see langword="true" />, wenn dieser Konverter die Konvertierung durchführen kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Konvertiert das angegebene Objekt in den systemeigenen Typ des Konverters.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="culture">Ein <see cref="T:System.Globalization.CultureInfo" />, das die Sprache bereitstellt, in die konvertiert werden soll.</param>
      <param name="value">Die zu konvertierende <see cref="T:System.Object" />.</param>
      <returns>Ein <see cref="T:System.Object" />, das den konvertierten Wert darstellt.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> enthält keine Werte für alle vier Ränder. 100,100,100,100" beispielsweise gibt für den linken, rechten, oberen und unteren Rand jeweils 1 Zoll an.</exception>
      <exception cref="T:System.NotSupportedException">Die Konvertierung kann nicht durchgeführt werden.</exception>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Konvertiert das angegebene Wertobjekt mithilfe des angegebenen Kontexts und der angegebenen Argumente in den angegebenen Zieltyp.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="culture">Ein <see cref="T:System.Globalization.CultureInfo" />, das die Sprache bereitstellt, in die konvertiert werden soll.</param>
      <param name="value">Die zu konvertierende <see cref="T:System.Object" />.</param>
      <param name="destinationType">Der <see cref="T:System.Type" />, in den der Wert konvertiert werden soll.</param>
      <returns>Ein <see cref="T:System.Object" />, das den konvertierten Wert darstellt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Die Konvertierung kann nicht durchgeführt werden.</exception>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>Erstellt ein <see cref="T:System.Object" /> mit einer angegebenen Gruppe von Eigenschaftswerten für das Objekt.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="propertyValues">Ein <see cref="T:System.Collections.IDictionary" /> mit neuen Eigenschaftswerten.</param>
      <returns>Ein <see cref="T:System.Object" />, das das angegebene <see cref="T:System.Collections.IDictionary" /> darstellt, oder <see langword="null" />, wenn das Objekt nicht erstellt werden kann.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="propertyValues" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gibt zurück, ob zum Ändern eines Werts für dieses Objekt ein Aufruf der <see cref="M:System.Drawing.Printing.MarginsConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />-Methode erforderlich ist, um unter Verwendung des angegebenen Kontexts einen neuen Wert zu erstellen.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <returns>
        <see langword="true" />, wenn zum Ändern einer Eigenschaft für dieses Objekt die <see cref="M:System.Drawing.Printing.MarginsConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />-Methode aufgerufen werden muss, um einen neuen Wert zu erstellen, andernfalls <see langword="false" />. Diese Methode gibt immer <see langword="true" /> zurück.</returns>
    </member>
    <member name="T:System.Media.SoundPlayer">
      <summary>Steuert die Wiedergabe eines Sounds aus einer WAV-Datei.</summary>
    </member>
    <member name="M:System.Media.SoundPlayer.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Media.SoundPlayer" />-Klasse.</summary>
    </member>
    <member name="M:System.Media.SoundPlayer.#ctor(System.IO.Stream)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Media.SoundPlayer" />-Klasse und fügt die WAV-Datei im angegebenen <see cref="T:System.IO.Stream" /> an.</summary>
      <param name="stream">Ein <see cref="T:System.IO.Stream" /> zu einer WAV-Datei.</param>
    </member>
    <member name="M:System.Media.SoundPlayer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Media.SoundPlayer" />-Klasse.</summary>
      <param name="serializationInfo">Die für die Deserialisierung zu verwendende <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Klasse.</param>
      <param name="context">Das für die Deserialisierung zu verwendende Ziel.</param>
      <exception cref="T:System.UriFormatException">Die in der <paramref name="serializationInfo" /> angegebene <see cref="P:System.Media.SoundPlayer.SoundLocation" /> kann nicht aufgelöst werden.</exception>
    </member>
    <member name="M:System.Media.SoundPlayer.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Media.SoundPlayer" />-Klasse und fügt die angegebene WAV-Datei an.</summary>
      <param name="soundLocation">Der Speicherort einer zu ladenden WAV-Datei.</param>
      <exception cref="T:System.UriFormatException">Der von der <paramref name="soundLocation" /> angegebene URL-Wert kann nicht aufgelöst werden.</exception>
    </member>
    <member name="P:System.Media.SoundPlayer.IsLoadCompleted">
      <summary>Ruft einen Wert ab, der angibt, ob das Laden einer WAV-Datei ordnungsgemäß abgeschlossen wurde.</summary>
      <returns>
        <see langword="true" />, wenn die WAV-Datei geladen wurde; <see langword="false" />, wenn die WAV-Datei noch nicht geladen wurde.</returns>
    </member>
    <member name="M:System.Media.SoundPlayer.Load">
      <summary>Lädt einen Sound synchron.</summary>
      <exception cref="T:System.ServiceProcess.TimeoutException">Die beim Ladevorgang verstrichene Zeit übersteigt die vom <see cref="P:System.Media.SoundPlayer.LoadTimeout" /> angegebene Zeitspanne (in Millisekunden).</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die anhand der <see cref="P:System.Media.SoundPlayer.SoundLocation" /> angegebene Datei kann nicht gefunden werden.</exception>
    </member>
    <member name="M:System.Media.SoundPlayer.LoadAsync">
      <summary>Lädt eine WAV-Datei aus einem Stream oder von einer Webressource mithilfe eines neuen Threads.</summary>
      <exception cref="T:System.ServiceProcess.TimeoutException">Die beim Ladevorgang verstrichene Zeit übersteigt die vom <see cref="P:System.Media.SoundPlayer.LoadTimeout" /> angegebene Zeitspanne (in Millisekunden).</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die anhand der <see cref="P:System.Media.SoundPlayer.SoundLocation" /> angegebene Datei kann nicht gefunden werden.</exception>
    </member>
    <member name="E:System.Media.SoundPlayer.LoadCompleted">
      <summary>Tritt nach dem ordnungsgemäßen oder fehlgeschlagenen Laden einer WAV-Datei ein.</summary>
    </member>
    <member name="P:System.Media.SoundPlayer.LoadTimeout">
      <summary>Ruft die Zeitspanne (in Millisekunden) ab, in der die WAV-Datei geladen werden muss, oder legt diese fest.</summary>
      <returns>Die Anzahl der Millisekunden, die gewartet werden soll. Der Standardwert ist 10000 (100 Sekunden).</returns>
    </member>
    <member name="M:System.Media.SoundPlayer.OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)">
      <summary>Löst das <see cref="E:System.Media.SoundPlayer.LoadCompleted" />-Ereignis aus.</summary>
      <param name="e">Ein <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Media.SoundPlayer.OnSoundLocationChanged(System.EventArgs)">
      <summary>Löst das <see cref="E:System.Media.SoundPlayer.SoundLocationChanged" />-Ereignis aus.</summary>
      <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Media.SoundPlayer.OnStreamChanged(System.EventArgs)">
      <summary>Löst das <see cref="E:System.Media.SoundPlayer.StreamChanged" />-Ereignis aus.</summary>
      <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Media.SoundPlayer.Play">
      <summary>Lädt zunächst die WAV-Datei, sofern sie nicht bereits geladen ist, und gibt sie mithilfe eines neuen Threads wieder.</summary>
      <exception cref="T:System.ServiceProcess.TimeoutException">Die beim Ladevorgang verstrichene Zeit übersteigt die vom <see cref="P:System.Media.SoundPlayer.LoadTimeout" /> angegebene Zeitspanne (in Millisekunden).</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die anhand der <see cref="P:System.Media.SoundPlayer.SoundLocation" /> angegebene Datei kann nicht gefunden werden.</exception>
      <exception cref="T:System.InvalidOperationException">Der WAV-Header ist fehlerhaft; die durch die <see cref="P:System.Media.SoundPlayer.SoundLocation" /> angegebene Datei ist keine PCM-WAV-Datei.</exception>
    </member>
    <member name="M:System.Media.SoundPlayer.PlayLooping">
      <summary>Lädt zunächst die WAV-Datei, sofern sie nicht bereits geladen ist, und gibt sie mithilfe eines neuen Threads in einer Endlosschleife wieder.</summary>
      <exception cref="T:System.ServiceProcess.TimeoutException">Die beim Ladevorgang verstrichene Zeit übersteigt die vom <see cref="P:System.Media.SoundPlayer.LoadTimeout" /> angegebene Zeitspanne (in Millisekunden).</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die anhand der <see cref="P:System.Media.SoundPlayer.SoundLocation" /> angegebene Datei kann nicht gefunden werden.</exception>
      <exception cref="T:System.InvalidOperationException">Der WAV-Header ist fehlerhaft; die durch die <see cref="P:System.Media.SoundPlayer.SoundLocation" /> angegebene Datei ist keine PCM-WAV-Datei.</exception>
    </member>
    <member name="M:System.Media.SoundPlayer.PlaySync">
      <summary>Lädt zunächst die WAV-Datei, sofern sie nicht bereits geladen ist, und gibt sie wieder.</summary>
      <exception cref="T:System.ServiceProcess.TimeoutException">Die beim Ladevorgang verstrichene Zeit übersteigt die vom <see cref="P:System.Media.SoundPlayer.LoadTimeout" /> angegebene Zeitspanne (in Millisekunden).</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die anhand der <see cref="P:System.Media.SoundPlayer.SoundLocation" /> angegebene Datei kann nicht gefunden werden.</exception>
      <exception cref="T:System.InvalidOperationException">Der WAV-Header ist fehlerhaft; die durch die <see cref="P:System.Media.SoundPlayer.SoundLocation" /> angegebene Datei ist keine PCM-WAV-Datei.</exception>
    </member>
    <member name="P:System.Media.SoundPlayer.SoundLocation">
      <summary>Ruft den Dateipfad oder die URL der zu ladenden WAV-Datei ab oder legt diesen bzw. diese fest.</summary>
      <returns>Der Dateipfad oder die URL, aus dem bzw. der eine WAV-Datei geladen werden soll, oder <see cref="F:System.String.Empty" />, wenn kein Dateipfad vorhanden ist. Die Standardeinstellung ist <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="E:System.Media.SoundPlayer.SoundLocationChanged">
      <summary>Tritt ein, wenn ein neuer Audioquellpfad für diesen <see cref="T:System.Media.SoundPlayer" /> festgelegt wurde.</summary>
    </member>
    <member name="M:System.Media.SoundPlayer.Stop">
      <summary>Beendet die laufende Wiedergabe des Sounds.</summary>
    </member>
    <member name="P:System.Media.SoundPlayer.Stream">
      <summary>Ruft den <see cref="T:System.IO.Stream" /> ab, aus dem die WAV-Datei geladen werden soll, oder legt diesen fest.</summary>
      <returns>Ein <see cref="T:System.IO.Stream" />, aus dem die WAV-Datei geladen werden soll, oder <see langword="null" />, wenn kein Stream verfügbar ist. Die Standardeinstellung ist <see langword="null" />.</returns>
    </member>
    <member name="E:System.Media.SoundPlayer.StreamChanged">
      <summary>Tritt ein, wenn eine neue <see cref="T:System.IO.Stream" />-Audioquelle für diesen <see cref="T:System.Media.SoundPlayer" /> festgelegt wurde.</summary>
    </member>
    <member name="M:System.Media.SoundPlayer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Eine Beschreibung dieses Members finden Sie unter der <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />-Methode.</summary>
      <param name="info">Die mit Daten zu füllende <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context">Das Ziel (siehe <see cref="T:System.Runtime.Serialization.StreamingContext" />) dieser Serialisierung.</param>
    </member>
    <member name="P:System.Media.SoundPlayer.Tag">
      <summary>Ruft das <see cref="T:System.Object" /> ab, das Daten über den <see cref="T:System.Media.SoundPlayer" /> enthält, oder legt dieses fest.</summary>
      <returns>Ein <see cref="T:System.Object" />, das Daten über den <see cref="T:System.Media.SoundPlayer" /> enthält.</returns>
    </member>
    <member name="T:System.Media.SystemSound">
      <summary>Stellt einen Systemsoundtyp dar.</summary>
    </member>
    <member name="M:System.Media.SystemSound.Play">
      <summary>Gibt den Systemsoundtyp wieder.</summary>
    </member>
    <member name="T:System.Media.SystemSounds">
      <summary>Ruft Sounds ab, die einer Gruppe von Soundereignistypen des Betriebssystems Windows zugeordnet sind. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="P:System.Media.SystemSounds.Asterisk">
      <summary>Ruft den Sound ab, der im aktuellen Soundschema von Windows dem <see langword="Asterisk" />-Programmereignis zugeordnet ist.</summary>
      <returns>Ein <see langword="Asterisk" />, der im aktuellen Soundschema von Windows dem <see cref="T:System.Media.SystemSound" />-Programmereignis zugeordnet ist.</returns>
    </member>
    <member name="P:System.Media.SystemSounds.Beep">
      <summary>Ruft den Sound ab, der im aktuellen Soundschema von Windows dem <see langword="Beep" />-Programmereignis zugeordnet ist.</summary>
      <returns>Ein <see langword="Beep" />, der im aktuellen Soundschema von Windows dem <see cref="T:System.Media.SystemSound" />-Programmereignis zugeordnet ist.</returns>
    </member>
    <member name="P:System.Media.SystemSounds.Exclamation">
      <summary>Ruft den Sound ab, der im aktuellen Soundschema von Windows dem <see langword="Exclamation" />-Programmereignis zugeordnet ist.</summary>
      <returns>Ein <see langword="Exclamation" />, der im aktuellen Soundschema von Windows dem <see cref="T:System.Media.SystemSound" />-Programmereignis zugeordnet ist.</returns>
    </member>
    <member name="P:System.Media.SystemSounds.Hand">
      <summary>Ruft den Sound ab, der im aktuellen Soundschema von Windows dem <see langword="Hand" />-Programmereignis zugeordnet ist.</summary>
      <returns>Ein <see langword="Hand" />, der im aktuellen Soundschema von Windows dem <see cref="T:System.Media.SystemSound" />-Programmereignis zugeordnet ist.</returns>
    </member>
    <member name="P:System.Media.SystemSounds.Question">
      <summary>Ruft den Sound ab, der im aktuellen Soundschema von Windows dem <see langword="Question" />-Programmereignis zugeordnet ist.</summary>
      <returns>Ein <see langword="Question" />, der im aktuellen Soundschema von Windows dem <see cref="T:System.Media.SystemSound" />-Programmereignis zugeordnet ist.</returns>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509Certificate2UI">
      <summary>Zeigt Benutzeroberflächendialogfelder an, in denen X.509-Zertifikate ausgewählt und angezeigt werden können. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2UI.#ctor">
      <summary>Initialisiert eine Instanz der <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2UI" />-Klasse.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2UI.DisplayCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Zeigt ein Dialogfeld an, das die Eigenschaften eines X.509-Zertifikats und seiner zugeordneten Zertifikatskette enthält.</summary>
      <param name="certificate">Das anzuzeigende X.509-Zertifikat.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="certificate" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Der <paramref name="certificate" />-Parameter ist ungültig.</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2UI.DisplayCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2,System.IntPtr)">
      <summary>Zeigt mithilfe eines Handles auf ein übergeordnetes Fenster ein Dialogfeld an, das die Eigenschaften eines X.509-Zertifikats und seiner zugeordneten Zertifikatskette enthält.</summary>
      <param name="certificate">Das anzuzeigende X.509-Zertifikat.</param>
      <param name="hwndParent">Ein Handle für das übergeordnete Fenster, das für das Anzeigedialogfeld verwendet werden soll.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="certificate" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Der <paramref name="certificate" />-Parameter ist ungültig.</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2UI.SelectFromCollection(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.String,System.String,System.Security.Cryptography.X509Certificates.X509SelectionFlag)">
      <summary>Zeigt ein Dialogfeld zum Auswählen eines X.509-Zertifikats aus einer Zertifikatsauflistung an.</summary>
      <param name="certificates">Eine Auflistung von X.509-Zertifikaten, aus der ausgewählt werden soll.</param>
      <param name="title">Der Titel des Dialogfelds.</param>
      <param name="message">Eine beschreibende Meldung an den Benutzer.  Die Meldung wird im Dialogfeld angezeigt.</param>
      <param name="selectionFlag">Einer der <see cref="T:System.Security.Cryptography.X509Certificates.X509SelectionFlag" />-Werte, der angibt, ob nur ein oder mehrere Elemente ausgewählt werden können.</param>
      <returns>Ein <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" />-Objekt, das das ausgewählte Zertifikat oder die Zertifikate enthält.</returns>
      <exception cref="T:System.ArgumentException">Der <paramref name="selectionFlag" />-Parameter ist kein gültiges Flag.</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="certificates" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Der <paramref name="certificates" />-Parameter ist ungültig.</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2UI.SelectFromCollection(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.String,System.String,System.Security.Cryptography.X509Certificates.X509SelectionFlag,System.IntPtr)">
      <summary>Zeigt unter Verwendung eines Handles auf ein übergeordnetes Fenster ein Dialogfeld zum Auswählen eines X.509-Zertifikats aus einer Zertifikatsauflistung an.</summary>
      <param name="certificates">Eine Auflistung von X.509-Zertifikaten, aus der ausgewählt werden soll.</param>
      <param name="title">Der Titel des Dialogfelds.</param>
      <param name="message">Eine beschreibende Meldung an den Benutzer.  Die Meldung wird im Dialogfeld angezeigt.</param>
      <param name="selectionFlag">Einer der <see cref="T:System.Security.Cryptography.X509Certificates.X509SelectionFlag" />-Werte, der angibt, ob nur ein oder mehrere Elemente ausgewählt werden können.</param>
      <param name="hwndParent">Ein Handle für das übergeordnete Fenster, das für das Anzeigedialogfeld verwendet werden soll.</param>
      <returns>Ein <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" />-Objekt, das das ausgewählte Zertifikat oder die Zertifikate enthält.</returns>
      <exception cref="T:System.ArgumentException">Der <paramref name="selectionFlag" />-Parameter ist kein gültiges Flag.</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="certificates" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Der <paramref name="certificates" />-Parameter ist ungültig.</exception>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509SelectionFlag">
      <summary>Gibt mithilfe der <see cref="Overload:System.Security.Cryptography.X509Certificates.X509Certificate2UI.SelectFromCollection" />-Methode den Typ der angeforderten Auswahl an.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509SelectionFlag.MultiSelection">
      <summary>Eine Mehrfachauswahl. Mit der UMSCHALTTASTE oder STRG können mehrere X.509-Zertifikate ausgewählt werden.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509SelectionFlag.SingleSelection">
      <summary>Eine Einfachauswahl. Benutzer können über die Benutzeroberfläche ein X.509-Zertifikat auswählen.</summary>
    </member>
    <member name="T:System.Xaml.Permissions.XamlAccessLevel">
      <summary>Definiert Zugriffssteuerung für Assemblys und Typen für XAML-Ladevorgänge.</summary>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo(System.Reflection.Assembly)">
      <summary>Gibt auf Grundlage einer von <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> angeforderten Assembly eine <see cref="T:System.Reflection.Assembly" />-Instanz zurück.</summary>
      <param name="assembly">Der Assembly für die Anforderung.</param>
      <returns>Eine <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />-Instanz, in der der <paramref name="assembly" />-Wert als Quellinformation für <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" /> verwendet wird.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assembly" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo(System.Reflection.AssemblyName)">
      <summary>Gibt auf Grundlage einer von <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> angeforderten Assembly eine <see cref="T:System.Reflection.AssemblyName" />-Instanz zurück.</summary>
      <param name="assemblyName">Der Assemblyname für die Anforderung.</param>
      <returns>Eine <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />-Instanz, in der der <paramref name="assemblyName" />-Wert als Quellinformation für <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" /> verwendet wird.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="assemblyName" /> ist kein gültiger, vollqualifizierter Assemblyname.</exception>
    </member>
    <member name="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName">
      <summary>Ruft die <see cref="T:System.Reflection.AssemblyName" />-Klasse der Assembly ab, für die durch diese <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />-Klasse Berechtigungen bestimmt werden.</summary>
      <returns>Die <see cref="T:System.Reflection.AssemblyName" />-Klasse der Assembly, für die durch diese <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />-Klasse Berechtigungen bestimmt werden.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(System.String)">
      <summary>Gibt auf Grundlage eines bestimmten, durch seinem qualifizierten Namen angegebenen Typs eine <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />-Instanz zurück.</summary>
      <param name="assemblyQualifiedTypeName">Eine Zeichenfolge, die als durch die Assembly qualifizierter Typname analysiert wird.</param>
      <returns>Eine <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />-Instanz, bei der <paramref name="assemblyQualifiedTypeName" />-Wert als Quellinformation für <see cref="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName" /> verwendet wird und <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" /> durch die Reflektion des Typs bestimmt wird.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyQualifiedTypeName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="assemblyQualifiedTypeName" /> ist kein gültiger Assembly-qualifizierter Typname.  

oder - 
Der Assemblyname innerhalb von <paramref name="assemblyQualifiedTypeName" /> ist kein gültiger Assemblyname.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(System.Type)">
      <summary>Gibt auf Grundlage eines bestimmten Typs, der durch <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> angegeben wird, eine <see cref="T:System.Type" />-Instanz zurück.</summary>
      <param name="type">Die <see cref="T:System.Type" />-Klasse, für die Zugriff angefordert werden soll.</param>
      <returns>Eine <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />-Instanz, bei der <paramref name="type" />-Wert als Quellinformation für <see cref="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName" /> verwendet wird und <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" /> durch die Reflektion des Typs bestimmt wird.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName">
      <summary>Ruft den nicht qualifizierten Zeichenfolgennamen des Typs ab, für den durch diese <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />-Klasse Berechtigungen bestimmt werden.</summary>
      <returns>Der nicht qualifizierte Zeichenfolgenname des Typs, für den durch diese <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />-Klasse Berechtigungen bestimmt werden.</returns>
    </member>
  </members>
</doc>