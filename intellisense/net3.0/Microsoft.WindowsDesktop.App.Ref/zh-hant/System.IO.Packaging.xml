<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.IO.Packaging</name>
  </assembly>
  <members>
    <member name="T:System.IO.FileFormatException">
      <summary>當應符合某種檔案格式規格的輸入檔案或資料流，格式不正確時，所擲回的例外狀況。</summary>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor">
      <summary>建立 <see cref="T:System.IO.FileFormatException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>建立 <see cref="T:System.IO.FileFormatException" /> 類別的新執行個體，並使用序列化資料將它初始化。 進行還原序列化 (Deserialization) 期間會呼叫這個建構函式，以便重新構成經由資料流傳送的例外狀況物件。</summary>
      <param name="info">存放序列物件資料的物件。</param>
      <param name="context">關於來源或目的端的內容資訊。</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.String)">
      <summary>使用指定的錯誤訊息，建立 <see cref="T:System.IO.FileFormatException" /> 類別的新執行個體。</summary>
      <param name="message">表示錯誤訊息的 <see cref="T:System.String" /> 值。</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.String,System.Exception)">
      <summary>使用指定的錯誤訊息和例外狀況型別，建立 <see cref="T:System.IO.FileFormatException" /> 類別的新執行個體。</summary>
      <param name="message">表示錯誤訊息的 <see cref="T:System.String" /> 值。</param>
      <param name="innerException">
        <see cref="P:System.Exception.InnerException" /> 屬性的值，代表目前例外狀況的原因。</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri)">
      <summary>使用來源 URI 值，建立 <see cref="T:System.IO.FileFormatException" /> 類別的新執行個體。</summary>
      <param name="sourceUri">造成這個錯誤之檔案的 <see cref="T:System.Uri" /> 值。</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri,System.Exception)">
      <summary>使用來源 URI 值和例外狀況型別，建立 <see cref="T:System.IO.FileFormatException" /> 類別的新執行個體。</summary>
      <param name="sourceUri">造成這個錯誤之檔案的 <see cref="T:System.Uri" /> 值。</param>
      <param name="innerException">
        <see cref="P:System.Exception.InnerException" /> 屬性的值，代表目前例外狀況的原因。</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri,System.String)">
      <summary>使用來源 URI 值和指定的錯誤訊息，建立 <see cref="T:System.IO.FileFormatException" /> 類別的新執行個體。</summary>
      <param name="sourceUri">造成這個錯誤之檔案的 <see cref="T:System.Uri" /> 值。</param>
      <param name="message">表示錯誤訊息的 <see cref="T:System.String" /> 值。</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri,System.String,System.Exception)">
      <summary>使用來源 URI 值、指定的錯誤訊息和例外狀況型別，建立 <see cref="T:System.IO.FileFormatException" /> 類別的新執行個體。</summary>
      <param name="sourceUri">造成這個錯誤之檔案的 <see cref="T:System.Uri" /> 值。</param>
      <param name="message">表示錯誤訊息的 <see cref="T:System.String" /> 值。</param>
      <param name="innerException">
        <see cref="P:System.Exception.InnerException" /> 屬性的值，代表目前例外狀況的原因。</param>
    </member>
    <member name="M:System.IO.FileFormatException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>以檔案名稱和其他例外狀況資訊設定 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 物件。</summary>
      <param name="info">存放序列物件資料的物件。</param>
      <param name="context">關於來源或目的端的內容資訊。</param>
    </member>
    <member name="P:System.IO.FileFormatException.SourceUri">
      <summary>取得造成 <see cref="T:System.IO.FileFormatException" /> 的檔案名稱。</summary>
      <returns>
        <see cref="T:System.Uri" />，表示造成例外狀況的檔案名稱。</returns>
    </member>
    <member name="T:System.IO.Packaging.CompressionOption">
      <summary>指定儲存於 <see cref="T:System.IO.Packaging.PackagePart" /> 中之內容的壓縮層級。</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.Fast">
      <summary>壓縮已針對效能進行最佳化。</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.Maximum">
      <summary>壓縮已針對大小進行最佳化。</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.Normal">
      <summary>壓縮已針對大小和效能的平衡進行最佳化。</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.NotCompressed">
      <summary>壓縮已關閉。</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.SuperFast">
      <summary>壓縮已針對高效能進行最佳化。</summary>
    </member>
    <member name="T:System.IO.Packaging.EncryptionOption">
      <summary>指定 <see cref="T:System.IO.Packaging.Package" /> 中組件的加密選項。</summary>
    </member>
    <member name="F:System.IO.Packaging.EncryptionOption.None">
      <summary>不使用加密。</summary>
    </member>
    <member name="F:System.IO.Packaging.EncryptionOption.RightsManagement">
      <summary>透過版權管理支援加密。</summary>
    </member>
    <member name="T:System.IO.Packaging.Package">
      <summary>表示可以存放多個資料物件的容器。</summary>
    </member>
    <member name="M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess)">
      <summary>將使用特定 <see cref="T:System.IO.Packaging.Package" /> 之 <see cref="T:System.IO.FileAccess" /> 類別的新執行個體初始化。</summary>
      <param name="openFileAccess">套件的檔案 IO 權限。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="openFileAccess" /> 的值無效。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Close">
      <summary>儲存並關閉套件，以及所有基礎組件資料流。</summary>
    </member>
    <member name="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)">
      <summary>以特定 URI 及內容類型建立新的未壓縮組件。</summary>
      <param name="partUri">新組件的 統一資源識別項 (URI)。</param>
      <param name="contentType">資料流的內容類型。</param>
      <returns>新建立的組件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> 或 <paramref name="contentType" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> 不是有效的 <see cref="T:System.IO.Packaging.PackagePart" /> URI。</exception>
      <exception cref="T:System.InvalidOperationException">套件中已經存在具有指定之 <paramref name="partUri" /> 的組件。</exception>
      <exception cref="T:System.ObjectDisposedException">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</exception>
      <exception cref="T:System.IO.IOException">套件是唯讀的 (無法新增組件)。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
      <summary>以特定 URI、內容類型及壓縮選項建立新組件。</summary>
      <param name="partUri">新組件的 URI。</param>
      <param name="contentType">資料流的內容類型。</param>
      <param name="compressionOption">資料流、<see cref="F:System.IO.Packaging.CompressionOption.NotCompressed" /> 或 <see cref="F:System.IO.Packaging.CompressionOption.Normal" /> 壓縮的壓縮選項。</param>
      <returns>新建立的組件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> 或 <paramref name="contentType" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> 不是有效的 <see cref="T:System.IO.Packaging.PackagePart" /> 統一資源識別項 (URI)。</exception>
      <exception cref="T:System.InvalidOperationException">套件中已經存在具有指定之 <paramref name="partUri" /> 的組件。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="compressionOption" /> 值不是有效的。</exception>
      <exception cref="T:System.ObjectDisposedException">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</exception>
      <exception cref="T:System.IO.IOException">套件是唯讀的 (無法新增組件)。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
      <summary>在衍生類別中覆寫時，請在套件中建立新的組件。</summary>
      <param name="partUri">所建立之組件的統一資源識別項 (URI)。</param>
      <param name="contentType">資料流的內容類型。</param>
      <param name="compressionOption">資料流的壓縮選項。</param>
      <returns>建立的組件。</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
      <summary>以特定 URI、目標模式及關聯性類型建立套件層級關係。</summary>
      <param name="targetUri">目標組件的 統一資源識別項 (URI)。</param>
      <param name="targetMode">指出目標組件是套件的 <see cref="F:System.IO.Packaging.TargetMode.Internal" /> 或 <see cref="F:System.IO.Packaging.TargetMode.External" />。</param>
      <param name="relationshipType">唯一定義關聯性角色的 URI。</param>
      <returns>指定之組件的套件層級關係。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetUri" /> 或 <paramref name="relationshipType" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="targetUri" /> 組件是 <see cref="T:System.IO.Packaging.PackageRelationship" />，或 <paramref name="targetMode" /> 是 <see cref="F:System.IO.Packaging.TargetMode.Internal" /> 且 <paramref name="targetUri" /> 是絕對 URI。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="targetMode" /> 的值無效。</exception>
      <exception cref="T:System.ObjectDisposedException">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</exception>
      <exception cref="T:System.IO.IOException">封裝是唯讀的。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
      <summary>以特定 URI、目標模式、關聯性類型及識別項 (ID) 建立套件層級關係。</summary>
      <param name="targetUri">目標組件的 統一資源識別項 (URI)。</param>
      <param name="targetMode">指出目標組件是套件的 <see cref="F:System.IO.Packaging.TargetMode.Internal" /> 或 <see cref="F:System.IO.Packaging.TargetMode.External" />。</param>
      <param name="relationshipType">唯一定義關聯性角色的 URI。</param>
      <param name="id">唯一的 XML 識別項。</param>
      <returns>指定之組件的套件層級關係。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetUri" /> 或 <paramref name="relationshipType" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="targetUri" /> 組件是 <see cref="T:System.IO.Packaging.PackageRelationship" />，或 <paramref name="targetMode" /> 是 <see cref="F:System.IO.Packaging.TargetMode.Internal" /> 且 <paramref name="targetUri" /> 是絕對 URI。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="targetMode" /> 的值無效。</exception>
      <exception cref="T:System.ObjectDisposedException">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</exception>
      <exception cref="T:System.IO.IOException">封裝是唯讀的。</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> 不是有效的 XML 識別項，或是套件中已存在具有指定之 <paramref name="id" /> 的組件。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.DeletePart(System.Uri)">
      <summary>刪除套件中具有特定 URI 的組件。</summary>
      <param name="partUri">要刪除之組件的 URI。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> 不是有效的 <see cref="T:System.IO.Packaging.PackagePart" /> URI。</exception>
      <exception cref="T:System.ObjectDisposedException">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</exception>
      <exception cref="T:System.IO.IOException">封裝是唯讀的。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)">
      <summary>在衍生類別中覆寫時，刪除具有特定 URI 的組件。</summary>
      <param name="partUri">要刪除之 <see cref="P:System.IO.Packaging.PackagePart.Uri" /> 的 <see cref="T:System.IO.Packaging.PackagePart" />。</param>
    </member>
    <member name="M:System.IO.Packaging.Package.DeleteRelationship(System.String)">
      <summary>刪除套件層級關係。</summary>
      <param name="id">要刪除之 <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> 的 <see cref="T:System.IO.Packaging.PackageRelationship" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ObjectDisposedException">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</exception>
      <exception cref="T:System.IO.IOException">封裝是唯讀的。</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> 不是有效的 XML 識別項。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Dispose(System.Boolean)">
      <summary>清除並儲存所有組件與關聯性的內容、關閉套件，然後釋放所有的資源。</summary>
      <param name="disposing">
        <see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
    </member>
    <member name="P:System.IO.Packaging.Package.FileOpenAccess">
      <summary>取得套件的檔案存取設定。</summary>
      <returns>其中一個 <see cref="T:System.IO.FileAccess" /> 值：<see cref="F:System.IO.FileAccess.Read" />、<see cref="F:System.IO.FileAccess.Write" /> 或 <see cref="F:System.IO.FileAccess.ReadWrite" />。</returns>
      <exception cref="T:System.ObjectDisposedException">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Flush">
      <summary>儲存套件包含的所有組件及關聯性的內容。</summary>
      <exception cref="T:System.ObjectDisposedException">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</exception>
      <exception cref="T:System.IO.IOException">套件是唯讀的，無法修改。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.FlushCore">
      <summary>在衍生類別中覆寫時，將所有組件與關聯性的內容儲存到衍生類別存放區。</summary>
    </member>
    <member name="M:System.IO.Packaging.Package.GetPart(System.Uri)">
      <summary>傳回具有特定 URI 的組件。</summary>
      <param name="partUri">要傳回之組件的統一資源識別項 (URI)。</param>
      <returns>具有指定之 <paramref name="partUri" /> 的組件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> 不是有效的 <see cref="T:System.IO.Packaging.PackagePart" /> 統一資源識別項 (URI)。</exception>
      <exception cref="T:System.InvalidOperationException">具有指定之 <paramref name="partUri" /> 的組件不在套件內。</exception>
      <exception cref="T:System.ObjectDisposedException">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</exception>
      <exception cref="T:System.IO.IOException">封裝是唯寫的。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.GetPartCore(System.Uri)">
      <summary>在衍生類別中覆寫時，傳回由特定 URI 定址的組件。</summary>
      <param name="partUri">要擷取之組件的統一資源識別項 (URI)。</param>
      <returns>要求的組件；或者，如果具有指定之 <paramref name="partUri" /> 的組件不存在套件中，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.GetParts">
      <summary>傳回套件中所有組件的集合。</summary>
      <returns>包含在套件中的所有 <see cref="T:System.IO.Packaging.PackagePart" /> 項目的集合。</returns>
      <exception cref="T:System.ObjectDisposedException">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</exception>
      <exception cref="T:System.IO.IOException">封裝是唯寫的。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.GetPartsCore">
      <summary>在衍生類別中覆寫時，傳回套件中所有組件的陣列。</summary>
      <returns>包含在套件中的所有組件的陣列。</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.GetRelationship(System.String)">
      <summary>傳回具有特定識別項的套件層級關係。</summary>
      <param name="id">要傳回之關聯性的 <see cref="P:System.IO.Packaging.PackageRelationship.Id" />。</param>
      <returns>具有指定之 <paramref name="id" /> 的套件層級關係。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> 不是有效的 XML 識別項。</exception>
      <exception cref="T:System.InvalidOperationException">具有指定之 <paramref name="id" /> 的關聯性不在套件內。</exception>
      <exception cref="T:System.ObjectDisposedException">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</exception>
      <exception cref="T:System.IO.IOException">封裝是唯寫的。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.GetRelationships">
      <summary>傳回所有套件層級關係的集合。</summary>
      <returns>包含在套件中的所有套件層級關係的集合。</returns>
      <exception cref="T:System.ObjectDisposedException">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</exception>
      <exception cref="T:System.IO.IOException">封裝是唯寫的。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
      <summary>傳回符合特定 <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> 的所有套件層級關係的集合。</summary>
      <param name="relationshipType">要進行比對並傳回集合的 <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />。</param>
      <returns>符合指定之 <paramref name="relationshipType" /> 的套件層級關係的集合。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="relationshipType" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="relationshipType" /> 為空字串。</exception>
      <exception cref="T:System.ObjectDisposedException">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</exception>
      <exception cref="T:System.IO.IOException">封裝是唯寫的。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.IO.Stream)">
      <summary>開啟位於特定 IO 資料流上的套件。</summary>
      <param name="stream">開啟封裝所在的 IO 資料流。</param>
      <returns>已開啟的套件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.IO.IOException">要開啟的套件需要讀取或讀寫權限，而指定的 <paramref name="stream" /> 是唯寫，或是要開啟的套件需要寫入或讀寫權限，而指定的 <paramref name="stream" /> 是唯讀。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)">
      <summary>使用特定 IO 資料流及檔案模式開啟套件。</summary>
      <param name="stream">開啟封裝所在的 IO 資料流。</param>
      <param name="packageMode">開啟套件的檔案模式。</param>
      <returns>已開啟的套件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="packageMode" /> 值無效。</exception>
      <exception cref="T:System.IO.IOException">要開啟的套件需要讀取或讀寫權限，而指定的 <paramref name="stream" /> 是唯寫，或是要開啟的套件需要寫入或讀寫權限，而指定的 <paramref name="stream" /> 是唯讀。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)">
      <summary>使用特定 IO 資料流、檔案模式及檔案存取設定開啟套件。</summary>
      <param name="stream">開啟封裝所在的 IO 資料流。</param>
      <param name="packageMode">開啟套件的檔案模式。</param>
      <param name="packageAccess">開啟套件的檔案存取。</param>
      <returns>已開啟的套件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="packageMode" /> 或 <paramref name="packageAccess" /> 的值無效。</exception>
      <exception cref="T:System.IO.IOException">要開啟的套件需要讀取或讀寫權限，而指定的 <paramref name="stream" /> 是唯寫，或是要開啟的套件需要寫入或讀寫權限，而指定的 <paramref name="stream" /> 是唯讀。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String)">
      <summary>開啟特定路徑與檔名的封裝。</summary>
      <param name="path">封裝的路徑和檔名。</param>
      <returns>已開啟的套件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)">
      <summary>使用特定檔案模式開啟位於特定路徑的套件。</summary>
      <param name="path">封裝的路徑和檔名。</param>
      <param name="packageMode">開啟套件的檔案模式。</param>
      <returns>已開啟的套件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="packageMode" /> 的值無效。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
      <summary>使用特定檔案模式及檔案存取設定，開啟位於特定路徑的套件。</summary>
      <param name="path">封裝的路徑和檔名。</param>
      <param name="packageMode">開啟套件的檔案模式。</param>
      <param name="packageAccess">開啟套件的檔案存取。</param>
      <returns>已開啟的套件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="packageMode" /> 或 <paramref name="packageAccess" /> 的值無效。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
      <summary>使用特定檔案模式、檔案存取及檔案共用設定，開啟位於特定路徑的套件。</summary>
      <param name="path">封裝的路徑和檔名。</param>
      <param name="packageMode">開啟套件的檔案模式。</param>
      <param name="packageAccess">開啟套件的檔案存取。</param>
      <param name="packageShare">用來開啟套件的檔案共用模式。</param>
      <returns>已開啟的套件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="packageMode" />、<paramref name="packageAccess" /> 或 <paramref name="packageShare" /> 的值無效。</exception>
    </member>
    <member name="P:System.IO.Packaging.Package.PackageProperties">
      <summary>取得套件的核心屬性。</summary>
      <returns>套件的核心屬性。</returns>
      <exception cref="T:System.ObjectDisposedException">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.PartExists(System.Uri)">
      <summary>指出套件中是否存在具有特定 URI 的組件。</summary>
      <param name="partUri">要檢查之組件的 <see cref="T:System.Uri" />。</param>
      <returns>如果套件內已經存在具有指定之 <paramref name="partUri" /> 的組件，就是 <see langword="true" />，否則就是 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> 不是有效的 <see cref="T:System.IO.Packaging.PackagePart" /> 統一資源識別項 (URI)。</exception>
      <exception cref="T:System.ObjectDisposedException">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</exception>
      <exception cref="T:System.IO.IOException">套件是唯寫的 (無法讀取資訊)。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.RelationshipExists(System.String)">
      <summary>指出套件中是否包含具有特定 ID 的套件層級關係。</summary>
      <param name="id">要檢查之關聯性的 <see cref="P:System.IO.Packaging.PackageRelationship.Id" />。</param>
      <returns>如果套件裝包含具有指定之 <paramref name="id" /> 的套件層級關係，就是 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> 不是有效的 XML 識別項。</exception>
      <exception cref="T:System.ObjectDisposedException">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</exception>
      <exception cref="T:System.IO.IOException">封裝是唯寫的。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.System#IDisposable#Dispose">
      <summary>這個成員支援 Windows Presentation Foundation (WPF) 基礎結構，但不建議用於應用程式。  請改用類型安全的 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 方法。</summary>
    </member>
    <member name="T:System.IO.Packaging.PackagePart">
      <summary>提供基底類別給儲存於 <see cref="T:System.IO.Packaging.Package" /> 中的組件。  這個類別是抽象的。</summary>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri)">
      <summary>使用指定的父 <see cref="T:System.IO.Packaging.PackagePart" /> 及組件 URI，初始化 <see cref="P:System.IO.Packaging.PackagePart.Package" /> 類別的新執行個體。</summary>
      <param name="package">組件的父 <see cref="T:System.IO.Packaging.Package" />。</param>
      <param name="partUri">組件的 URI，相對於父 <see cref="T:System.IO.Packaging.Package" /> 根目錄。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="package" /> 或 <paramref name="partUri" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String)">
      <summary>使用指定的父 <see cref="T:System.IO.Packaging.PackagePart" />、組件 URI 及 MIME 內容類型，初始化 <see cref="P:System.IO.Packaging.PackagePart.Package" /> 類別的新執行個體。</summary>
      <param name="package">組件的父 <see cref="T:System.IO.Packaging.Package" />。</param>
      <param name="partUri">組件的 URI，相對於父 <see cref="T:System.IO.Packaging.Package" /> 根目錄。</param>
      <param name="contentType">組件資料流的 MIME 內容類型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="package" /> 或 <paramref name="partUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> 不是有效的 <see cref="T:System.IO.Packaging.PackagePart" /> URI。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String,System.IO.Packaging.CompressionOption)">
      <summary>使用指定的父 <see cref="T:System.IO.Packaging.PackagePart" />、組件 URI、MIME 內容類型及 <see cref="P:System.IO.Packaging.PackagePart.Package" />，初始化 <see cref="T:System.IO.Packaging.CompressionOption" /> 類別的新執行個體。</summary>
      <param name="package">組件的父 <see cref="T:System.IO.Packaging.Package" />。</param>
      <param name="partUri">組件的 URI，相對於父 <see cref="T:System.IO.Packaging.Package" /> 根目錄。</param>
      <param name="contentType">組件資料流的 MIME 內容類型。</param>
      <param name="compressionOption">組件資料流的壓縮選項。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="package" /> 或 <paramref name="partUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> 不是有效的 <see cref="T:System.IO.Packaging.PackagePart" /> URI。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="compressionOption" /> 值不是有效的。</exception>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.CompressionOption">
      <summary>取得組件內容資料流的壓縮選項。</summary>
      <returns>組件內容資料流的壓縮選項。</returns>
      <exception cref="T:System.InvalidOperationException">組件已經刪除。  
-或- 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> 沒有開啟 (已經呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</exception>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.ContentType">
      <summary>取得內容資料流的 MIME 類型。</summary>
      <returns>組件內容資料流的 MIME 類型。</returns>
      <exception cref="T:System.InvalidOperationException">組件已經刪除。  
-或- 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> 沒有開啟 (已經呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。  
-或- 
衍生類別 <see cref="M:System.IO.Packaging.PackagePart.GetContentTypeCore" /> 方法傳回的字串是空的。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
      <summary>建立這個 <see cref="T:System.IO.Packaging.PackagePart" /> 和指定目標 <see cref="T:System.IO.Packaging.PackagePart" /> 或外部資源之間的組件層級關係。</summary>
      <param name="targetUri">目標組件的 URI。</param>
      <param name="targetMode">其中一個列舉值。 例如，如果目標組件位於 <see cref="F:System.IO.Packaging.TargetMode.Internal" /> 內部，就是 <see cref="T:System.IO.Packaging.Package" />，如果目標組件是 <see cref="F:System.IO.Packaging.TargetMode.External" /> 外部的資源，就是 <see cref="T:System.IO.Packaging.Package" />。</param>
      <param name="relationshipType">關聯性的角色。</param>
      <returns>這個 <see cref="T:System.IO.Packaging.PackagePart" /> 與目標 <see cref="T:System.IO.Packaging.PackagePart" /> 或外部資源之間的組件層級關係。</returns>
      <exception cref="T:System.InvalidOperationException">組件已經刪除。  
-或- 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> 沒有開啟 (已經呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetUri" /> 或 <paramref name="relationshipType" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="targetMode" /> 參數不是有效的 <see cref="T:System.IO.Packaging.TargetMode" /> 列舉值。</exception>
      <exception cref="T:System.ArgumentException">由 <paramref name="targetUri" /> 識別的組件是一種關聯性 (關聯性的目標不能是另一種關聯性)。  
-或- 
 <paramref name="targetMode" /> 是指定為 <see cref="F:System.IO.Packaging.TargetMode.Internal" />，但 <paramref name="targetUri" /> 是一種絕對的外部 URI。</exception>
      <exception cref="T:System.IO.IOException">套件是唯讀的 (無法新增關聯性)。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
      <summary>建立這個 <see cref="T:System.IO.Packaging.PackagePart" /> 和指定目標 <see cref="T:System.IO.Packaging.PackagePart" /> 或外部資源之間的組件層級關係。</summary>
      <param name="targetUri">目標組件的 URI。</param>
      <param name="targetMode">其中一個列舉值。 例如，如果目標組件位於 <see cref="F:System.IO.Packaging.TargetMode.Internal" /> 內部，就是 <see cref="T:System.IO.Packaging.Package" />，如果目標組件是 <see cref="F:System.IO.Packaging.TargetMode.External" /> 外部的資源，就是 <see cref="T:System.IO.Packaging.Package" />。</param>
      <param name="relationshipType">關聯性的角色。</param>
      <param name="id">關聯性的唯一 ID。</param>
      <returns>這個 <see cref="T:System.IO.Packaging.PackagePart" /> 與目標 <see cref="T:System.IO.Packaging.PackagePart" /> 或外部資源之間的組件層級關係。</returns>
      <exception cref="T:System.InvalidOperationException">組件已經刪除。  
-或- 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> 沒有開啟 (已經呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetUri" /> 或 <paramref name="relationshipType" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="targetMode" /> 參數不是有效的 <see cref="T:System.IO.Packaging.TargetMode" /> 列舉值。</exception>
      <exception cref="T:System.ArgumentException">由 <paramref name="targetUri" /> 識別的組件是一種關聯性 (關聯性的目標不能是另一種關聯性)。  
-或- 
 <paramref name="targetMode" /> 是指定為 <see cref="F:System.IO.Packaging.TargetMode.Internal" />，但 <paramref name="targetUri" /> 是一種絕對的外部 URI。</exception>
      <exception cref="T:System.IO.IOException">套件是唯讀的 (無法新增關聯性)。</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> 不是有效的 XML 識別項。  
-或- 
具有指定之 <paramref name="id" /> 的組件已經存在。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.DeleteRelationship(System.String)">
      <summary>刪除指定的組件層級 <see cref="T:System.IO.Packaging.PackageRelationship" />。</summary>
      <param name="id">要刪除之關聯性的 <see cref="P:System.IO.Packaging.PackageRelationship.Id" />。</param>
      <exception cref="T:System.InvalidOperationException">組件已經刪除。  
-或- 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> 沒有開啟 (已經呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.IO.IOException">套件是唯讀的 (無法刪除關聯性)。</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> 不是有效的 XML 識別項。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetContentTypeCore">
      <summary>在衍生類別中覆寫時，傳回組件內容的 MIME 型別。</summary>
      <returns>組件內容的 MIME 型別。</returns>
      <exception cref="T:System.NotSupportedException">衍生的類別不會提供 <see cref="M:System.IO.Packaging.PackagePart.GetContentTypeCore" /> 方法所需的覆寫實作。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetRelationship(System.String)">
      <summary>傳回具有指定之 <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> 的關聯性。</summary>
      <param name="id">要傳回之關聯性的 <see cref="P:System.IO.Packaging.PackageRelationship.Id" />。</param>
      <returns>符合指定之 <paramref name="id" /> 的關聯性。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> 不是有效的 XML 識別項。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="relationshipType" /> 為空字串。</exception>
      <exception cref="T:System.InvalidOperationException">組件已經刪除。  
-或- 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> 沒有開啟 (已經呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。  
-或- 
套件中不存在具有指定之 <paramref name="id" /> 的關聯性。</exception>
      <exception cref="T:System.IO.IOException">封裝是唯寫的 (無法讀取關聯性資訊)。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetRelationships">
      <summary>傳回這個組件所擁有之全部關聯性的集合。</summary>
      <returns>這個組件所擁有之全部關聯性的集合。</returns>
      <exception cref="T:System.InvalidOperationException">組件已經刪除。  
-或- 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> 沒有開啟 (已經呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</exception>
      <exception cref="T:System.IO.IOException">封裝是唯寫的 (無法讀取關聯性資訊)。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)">
      <summary>傳回符合指定之 <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> 的關聯性集合。</summary>
      <param name="relationshipType">關聯性的 <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />，可在集合中找到並傳回。</param>
      <returns>符合指定之 <paramref name="relationshipType" /> 的關聯性集合。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="relationshipType" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="relationshipType" /> 為空字串。</exception>
      <exception cref="T:System.InvalidOperationException">組件已經刪除。  
-或- 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> 沒有開啟 (已經呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</exception>
      <exception cref="T:System.IO.IOException">封裝是唯寫的 (無法讀取關聯性資訊)。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStream">
      <summary>傳回部分內容資料流。</summary>
      <returns>部分的內容資料流。</returns>
      <exception cref="T:System.InvalidOperationException">組件已經刪除。  
-或- 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> 沒有開啟 (已經呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</exception>
      <exception cref="T:System.IO.IOException">衍生子類別的 <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> 方法傳回的資料流物件是 <see langword="null" />。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode)">
      <summary>傳回在指定之 I/O <see cref="T:System.IO.FileMode" /> 中開啟的內容資料流。</summary>
      <param name="mode">開啟內容資料流的 I/O 模式。</param>
      <returns>組件的內容資料流。</returns>
      <exception cref="T:System.InvalidOperationException">組件已經刪除。  
-或- 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> 沒有開啟 (已經呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="mode" /> 參數不是有效的 <see cref="T:System.IO.FileMode" /> 列舉值。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="mode" /> 參數與套件及組件資料流不相容。  
-或- 
衍生子類別的 <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> 方法傳回的資料流物件是 <see langword="null" />。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode,System.IO.FileAccess)">
      <summary>傳回以指定之 <see cref="T:System.IO.FileMode" /> 及 <see cref="T:System.IO.FileAccess" /> 開啟的組件內容資料流。</summary>
      <param name="mode">開啟內容資料流的 I/O 模式。</param>
      <param name="access">開啟內容資料流時使用的存取權限。</param>
      <returns>組件的內容資料流。</returns>
      <exception cref="T:System.InvalidOperationException">組件已經刪除。  
-或- 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> 沒有開啟 (已經呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="mode" /> 參數不是有效的 <see cref="T:System.IO.FileMode" /> 列舉值。  
-或- 
<paramref name="access" /> 參數不是有效的 <see cref="T:System.IO.FileAccess" /> 列舉值。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="mode" /> 或 <paramref name="access" /> 與套件及組件資料流不相容。  
-或- 
<paramref name="access" /> 參數是指定為 <see cref="F:System.IO.FileAccess.Read" />，但 <paramref name="mode" /> 參數需要寫入存取。  (<see cref="T:System.IO.FileMode" />、<see cref="F:System.IO.FileMode.Create" />、<see cref="F:System.IO.FileMode.CreateNew" /> 及 <see cref="F:System.IO.FileMode.Truncate" /> 的 <see cref="F:System.IO.FileMode.Append" /> 值需要 <see cref="F:System.IO.FileAccess.Write" /> 或 <see cref="F:System.IO.FileAccess.ReadWrite" /> 存取)。 
-或- 
衍生子類別的 <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> 方法傳回的資料流物件是 <see langword="null" />。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)">
      <summary>在衍生類別中覆寫時，會傳回以指定之 <see cref="T:System.IO.FileMode" /> 及 <see cref="T:System.IO.FileAccess" /> 開啟的組件內容資料流。</summary>
      <param name="mode">開啟內容資料流的 I/O 模式。</param>
      <param name="access">開啟內容資料流時使用的存取權限。</param>
      <returns>組件的內容資料流。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.Package">
      <summary>取得組件的父 <see cref="T:System.IO.Packaging.Package" />。</summary>
      <returns>組件的父套件。</returns>
      <exception cref="T:System.InvalidOperationException">組件已經刪除。  
-或- 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> 沒有開啟 (已經呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.RelationshipExists(System.String)">
      <summary>傳回值，表示這個組件是否擁有包含指定之 <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> 的關聯性。</summary>
      <param name="id">要檢查之關聯性的 <see cref="P:System.IO.Packaging.PackageRelationship.Id" />。</param>
      <returns>如果這個組件擁有包含指定之 <paramref name="id" /> 的關聯性，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> 不是有效的 XML 識別項。</exception>
      <exception cref="T:System.InvalidOperationException">組件已經刪除。  
-或- 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> 沒有開啟 (已經呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</exception>
      <exception cref="T:System.IO.IOException">封裝是唯寫的 (無法讀取關聯性資訊)。</exception>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.Uri">
      <summary>取得組件的 URI。</summary>
      <returns>相對於封裝根目錄之元件的。URI</returns>
      <exception cref="T:System.InvalidOperationException">組件已經刪除。  
-或- 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> 沒有開啟 (已經呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</exception>
    </member>
    <member name="T:System.IO.Packaging.PackagePartCollection">
      <summary>表示 <see cref="T:System.IO.Packaging.PackagePart" /> 物件的集合。</summary>
    </member>
    <member name="M:System.IO.Packaging.PackagePartCollection.GetEnumerator">
      <summary>傳回可逐一查看集合中各組件的列舉程式。</summary>
      <returns>可逐一查看集合中 <see cref="T:System.IO.Packaging.PackagePart" /> 元素的列舉值。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackagePartCollection.System#Collections#Generic#IEnumerable{System#IO#Packaging#PackagePart}#GetEnumerator">
      <summary>傳回逐一查看集合的列舉值。</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerator`1" /> 物件，可用於逐一查看集合。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackagePartCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>如需這個成員的說明，請參閱 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> 物件，可用於逐一查看集合。</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageProperties">
      <summary>表示 <see cref="T:System.IO.Packaging.Package" /> 的核心屬性。</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageProperties.#ctor">
      <summary>初始化 <see cref="T:System.IO.Packaging.PackageProperties" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Category">
      <summary>在衍生類別 (Derived Class) 中覆寫時，取得或設定 <see cref="T:System.IO.Packaging.Package" /> 的分類。</summary>
      <returns>
        <see cref="T:System.IO.Packaging.Package" /> 中包含之內容的分類。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.ContentStatus">
      <summary>在衍生類別中覆寫時，取得或設定值，表示 <see cref="T:System.IO.Packaging.Package" /> 的狀態。</summary>
      <returns>
        <see cref="T:System.IO.Packaging.Package" /> 內容的狀態。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.ContentType">
      <summary>在衍生類別中覆寫時，取得或設定值，表示 <see cref="T:System.IO.Packaging.Package" /> 中包含之內容的型別。</summary>
      <returns>
        <see cref="T:System.IO.Packaging.Package" /> 中包含之內容的型別。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Created">
      <summary>在衍生類別中覆寫時，取得或設定建立 <see cref="T:System.IO.Packaging.Package" /> 的日期和時間。</summary>
      <returns>最初建立 <see cref="T:System.IO.Packaging.Package" /> 的日期和時間。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Creator">
      <summary>在衍生類別中覆寫時，取得或設定值，識別建立 <see cref="T:System.IO.Packaging.Package" /> 及其內容的個人或實體 (Entity)。</summary>
      <returns>建立 <see cref="T:System.IO.Packaging.Package" /> 及其內容的個人或實體。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Description">
      <summary>在衍生類別中覆寫時，取得或設定 <see cref="T:System.IO.Packaging.Package" /> 中所包含內容的描述。</summary>
      <returns>
        <see cref="T:System.IO.Packaging.Package" /> 中所包含內容的描述。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageProperties.Dispose">
      <summary>釋放 <see cref="T:System.IO.Packaging.PackageProperties" /> 執行個體使用的所有資源。</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageProperties.Dispose(System.Boolean)">
      <summary>釋放 <see cref="T:System.IO.Packaging.PackageProperties" /> 執行個體所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</summary>
      <param name="disposing">
        <see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Identifier">
      <summary>在衍生類別中覆寫時，取得或設定明確識別 <see cref="T:System.IO.Packaging.Package" /> 及其內容的值。</summary>
      <returns>明確識別 <see cref="T:System.IO.Packaging.Package" /> 及其內容的值。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Keywords">
      <summary>在衍生類別中覆寫時，取得或設定值，定義支援搜尋與檢索 <see cref="T:System.IO.Packaging.Package" /> 及其內容的關鍵字分隔集合。</summary>
      <returns>支援搜尋與檢索 <see cref="T:System.IO.Packaging.Package" /> 及內容的關鍵字分隔集合。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Language">
      <summary>在衍生類別中覆寫時，取得或設定識別 <see cref="T:System.IO.Packaging.Package" /> 內容語言的值。</summary>
      <returns>識別 <see cref="T:System.IO.Packaging.Package" /> 內容語言的值。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.LastModifiedBy">
      <summary>在衍生類別中覆寫時，取得或設定值，識別上次修改 <see cref="T:System.IO.Packaging.Package" /> 內容的使用者。</summary>
      <returns>上次修改 <see cref="T:System.IO.Packaging.Package" /> 內容的使用者。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.LastPrinted">
      <summary>在衍生類別中覆寫時，取得或設定上次列印 <see cref="T:System.IO.Packaging.Package" /> 內容的日期和時間。</summary>
      <returns>上次列印 <see cref="T:System.IO.Packaging.Package" /> 內容的日期和時間。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Modified">
      <summary>在衍生類別中覆寫時，取得或設定上次變更 <see cref="T:System.IO.Packaging.Package" /> 的日期和時間。</summary>
      <returns>上次變更 <see cref="T:System.IO.Packaging.Package" /> 的日期和時間。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Revision">
      <summary>在衍生類別中覆寫時，取得或設定 <see cref="T:System.IO.Packaging.Package" /> 的修訂編號。</summary>
      <returns>
        <see cref="T:System.IO.Packaging.Package" /> 的修訂編號。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Subject">
      <summary>在衍生類別中覆寫時，取得或設定 <see cref="T:System.IO.Packaging.Package" /> 內容的主題。</summary>
      <returns>
        <see cref="T:System.IO.Packaging.Package" /> 內容的主題。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Title">
      <summary>在衍生類別中覆寫時，取得或設定指定給 <see cref="T:System.IO.Packaging.Package" /> 及其內容的名稱。</summary>
      <returns>指定給 <see cref="T:System.IO.Packaging.Package" /> 及其內容的名稱。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Version">
      <summary>在衍生類別中覆寫時，取得或設定 <see cref="T:System.IO.Packaging.Package" /> 的版本號碼。</summary>
      <returns>
        <see cref="T:System.IO.Packaging.Package" /> 的版本號碼。</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationship">
      <summary>代表來源 <see cref="T:System.IO.Packaging.Package" /> 或 <see cref="T:System.IO.Packaging.PackagePart" /> 以及目標物件 (可能是 <see cref="T:System.IO.Packaging.PackagePart" /> 或外部資源) 之間的關聯。</summary>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.Id">
      <summary>取得識別關聯性的字串。</summary>
      <returns>識別關聯性的字串。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.Package">
      <summary>取得包含此關聯性的 <see cref="T:System.IO.Packaging.Package" />。</summary>
      <returns>包含此關聯性的封裝。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.RelationshipType">
      <summary>取得關聯性的限定型別名稱。</summary>
      <returns>關聯性的限定型別名稱。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.SourceUri">
      <summary>取得擁有關聯性之套件或組件的 URI。</summary>
      <returns>擁有關聯性之 <see cref="T:System.IO.Packaging.Package" /> 或 <see cref="T:System.IO.Packaging.PackagePart" /> 的 URI。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.TargetMode">
      <summary>取得值，指出關聯性的目標對 <see cref="F:System.IO.Packaging.TargetMode.Internal" /> 是 <see cref="F:System.IO.Packaging.TargetMode.External" /> 或 <see cref="T:System.IO.Packaging.Package" />。</summary>
      <returns>列舉值，指出 <see cref="P:System.IO.Packaging.PackageRelationship.TargetUri" /> 參考的資源對 <see cref="F:System.IO.Packaging.TargetMode.Internal" /> 是 <see cref="F:System.IO.Packaging.TargetMode.External" /> 或 <see cref="T:System.IO.Packaging.Package" />。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.TargetUri">
      <summary>取得關聯性之目標資源的 URI。</summary>
      <returns>目標資源的 URI。</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationshipCollection">
      <summary>表示指定之 <see cref="T:System.IO.Packaging.PackageRelationship" /> 或 <see cref="T:System.IO.Packaging.PackagePart" /> 所擁有的 <see cref="T:System.IO.Packaging.Package" /> 項目集合。</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipCollection.GetEnumerator">
      <summary>傳回列舉值，以便逐一查看集合中的關聯性 (Relationship)。</summary>
      <returns>可逐一查看集合中 <see cref="T:System.IO.Packaging.PackageRelationship" /> 元素的列舉值。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>這個類型或成員支援 Windows Presentation Foundation 基礎結構，而且不能從程式碼直接使用。</summary>
      <returns>請勿使用 (使用 <see cref="M:System.IO.Packaging.PackageRelationshipCollection.GetEnumerator" />)。</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationshipSelector">
      <summary>定義選取組件層級或封裝層級之關聯性 (Relationship) 的 <see cref="T:System.IO.Packaging.PackageRelationship" /> 準則。</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)">
      <summary>初始化 <see cref="T:System.IO.Packaging.PackageRelationshipSelector" /> 類別的新執行個體。</summary>
      <param name="sourceUri">擁有關聯性之 <see cref="T:System.IO.Packaging.PackagePart" /> 或 <see cref="T:System.IO.Packaging.Package" /> (<c>SourceUri</c>="/") 的 統一資源識別項 (URI)。</param>
      <param name="selectorType">依關聯性 <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" /> 或關聯性 <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Type" /> 之 <paramref name="selectionCriteria" /> 的型別。</param>
      <param name="selectionCriteria">用於依據 <paramref name="selectorType" /> 選取關聯性的限定性條件字串 (Qualification String)。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceUri" /> 或 <paramref name="selectionCriteria" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="selectorType" /> 參數無效。</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="selectorType" /> 參數是 <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" />，但是 <paramref name="selectionCriteria" /> 不是有效的 XML 結構描述定義 (XSD) 識別項 (ID)。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="selectionCriteria" /> 對指定的 <paramref name="selectorType" /> 無效。
-或-
<paramref name="sourceUri" /> 不是 <see cref="T:System.IO.Packaging.Package" /> 根 ("/")，也不是有效的 <see cref="T:System.IO.Packaging.PackagePart" /> URI。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipSelector.Select(System.IO.Packaging.Package)">
      <summary>傳回符合定義之 <see cref="T:System.IO.Packaging.PackageRelationship" />、<see cref="P:System.IO.Packaging.PackageRelationshipSelector.SourceUri" /> 和 <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SelectorType" /> 的 <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SelectionCriteria" /> 物件清單。</summary>
      <param name="package">要依選取準則從中選取關聯性的封裝。</param>
      <returns>符合指定給 <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" /> 建構函式之選取參數的關聯性清單。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="package" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationshipSelector.SelectionCriteria">
      <summary>取得指定給 <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" /> 建構函式 (Constructor) 的選取準則。</summary>
      <returns>選取準則，其依據指定給 <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SelectorType" /> 建構函式之 <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" /> 或 <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Type" /> 的 <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationshipSelector.SelectorType">
      <summary>取得指定給 <see cref="T:System.IO.Packaging.PackageRelationshipSelectorType" /> 建構函式的 <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />。</summary>
      <returns>指定給<see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" /> 建構函式之 <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Type" /> 或 <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" /> 的選取器型別。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationshipSelector.SourceUri">
      <summary>取得根目錄封裝 URI ("/") 或組件 <see cref="P:System.IO.Packaging.PackagePart.Uri" />，其已指定給 <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" /> 建構函式做為關聯性的擁有者。</summary>
      <returns>根目錄封裝 URI ("/") 或組件 <see cref="P:System.IO.Packaging.PackagePart.Uri" />，其已指定給 <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" /> 建構函式做為關聯性的擁有者。</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationshipSelectorType">
      <summary>指定透過 <see cref="T:System.IO.Packaging.PackageRelationship" /> 比對及重新執行 <see cref="T:System.IO.Packaging.PackageRelationshipSelector" /> 選取項目時所使用之選取準則的型別。</summary>
    </member>
    <member name="F:System.IO.Packaging.PackageRelationshipSelectorType.Id">
      <summary>
        <see cref="T:System.IO.Packaging.PackageRelationship" /> 的選取依據是 <see cref="P:System.IO.Packaging.PackageRelationship.Id" />。</summary>
    </member>
    <member name="F:System.IO.Packaging.PackageRelationshipSelectorType.Type">
      <summary>
        <see cref="T:System.IO.Packaging.PackageRelationship" /> 的選取依據是 <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />。</summary>
    </member>
    <member name="T:System.IO.Packaging.PackUriHelper">
      <summary>提供公用程式方法來撰寫和剖析 Pack URI 物件。</summary>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.ComparePackUri(System.Uri,System.Uri)">
      <summary>傳回值，這個值表示兩個 Pack URI 是否相等。</summary>
      <param name="firstPackUri">第一個 Pack URI。</param>
      <param name="secondPackUri">第二個 Pack URI。</param>
      <returns>帶正負號的整數，表示 <paramref name="firstPackUri" /> 與 <paramref name="secondPackUri" /> 之間的關聯性。  
  值 
  意義 
  小於 0 
 <paramref name="firstPackUri" /> 小於 <paramref name="secondPackUri" />。  

  0 
 <paramref name="firstPackUri" /> 相當於 <paramref name="secondPackUri" />。  

  大於 0 
 <paramref name="firstPackUri" /> 大於 <paramref name="secondPackUri" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="firstPackUri" /> 或 <paramref name="secondPackUri" /> 不是絕對 URI。  
-或- 
<paramref name="firstPackUri" /> 或 <paramref name="secondPackUri" /> 的開頭不是 "pack://" scheme。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)">
      <summary>傳回值，指出兩個套件組件 URI 是否相等。</summary>
      <param name="firstPartUri">第一個 <see cref="T:System.IO.Packaging.PackagePart" /> 的 URI。</param>
      <param name="secondPartUri">第二個 <see cref="T:System.IO.Packaging.PackagePart" /> 的 URI。</param>
      <returns>一個值，表示 <paramref name="firstPartUri" /> 與 <paramref name="secondPartUri" /> 之間的關聯性。  
  值 
  意義 
  小於 0 
 <paramref name="firstPartUri" /> 小於 <paramref name="secondPartUri" />。  

  0 
 <paramref name="firstPartUri" /> 相當於 <paramref name="secondPartUri" />。  

  大於 0 
 <paramref name="firstPartUri" /> 大於 <paramref name="secondPartUri" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="firstPartUri" /> 或 <paramref name="secondPartUri" /> 不是有效的組件 URI 語法。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.Create(System.Uri)">
      <summary>建立指向封裝的新 Pack URI。</summary>
      <param name="packageUri">所參考之 <see cref="T:System.IO.Packaging.Package" /> 的 URI。</param>
      <returns>特定 <paramref name="packageUri" /> 所參考之 <see cref="T:System.IO.Packaging.Package" /> 的 Pack URI。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="packageUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="packageUri" /> 不是絕對 URI。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri)">
      <summary>使用 <see cref="T:System.IO.Packaging.Package" /> URI 和套件組件的 URI，來建立 Pack URI。</summary>
      <param name="packageUri">URI 的 <see cref="T:System.IO.Packaging.Package" />。</param>
      <param name="partUri">套件中 <see cref="T:System.IO.Packaging.PackagePart" /> 的 URI。</param>
      <returns>特定 <see cref="T:System.IO.Packaging.PackagePart" /> 的 Pack URI。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="packageUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="packageUri" /> 不是絕對 URI。  
-或- 
 <paramref name="partUri" /> 不是有效的組件 URI 語法。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri,System.String)">
      <summary>使用 <see cref="T:System.IO.Packaging.Package" /> URI、套件組件的 URI，以及要附加的 "#" 片段，來建立 Pack URI。</summary>
      <param name="packageUri">URI 的 <see cref="T:System.IO.Packaging.Package" />。</param>
      <param name="partUri">套件中 <see cref="T:System.IO.Packaging.PackagePart" /> 的 URI。</param>
      <param name="fragment">識別此封裝組件中項目的 "#" 參考。</param>
      <returns>識別指定的封裝、封裝組件以及片段的封裝 URI。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="packageUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="packageUri" /> 不是絕對 URI。  
-或- 
 <paramref name="partUri" /> 不是有效的組件 URI 語法。  
-或- 
 <paramref name="fragment" /> 是空的或開頭並非 "#"。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)">
      <summary>建立格式化的 <see cref="T:System.IO.Packaging.PackagePart" /> URI。</summary>
      <param name="partUri">封裝內部 <see cref="T:System.IO.Packaging.PackagePart" /> 的 URI。</param>
      <returns>格式化的 <see cref="T:System.IO.Packaging.PackagePart" /> URI。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> 不是絕對 <see cref="T:System.Uri" />。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)">
      <summary>傳回指定之 <see cref="T:System.IO.Packaging.PackagePart" /> URI 的正規化形式。</summary>
      <param name="partUri">要正規化的 <see cref="T:System.IO.Packaging.PackagePart" /> URI。</param>
      <returns>特定 <paramref name="partUri" /> 的正規化格式。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> 沒有有效的 <see cref="T:System.Uri" /> 語法。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)">
      <summary>傳回指向所指定 Pack URI 之整個封裝的內部 URI。</summary>
      <param name="packUri">傳回 <see cref="T:System.IO.Packaging.Package" /> 之 URI 的 Pack URI。</param>
      <returns>所指定 <paramref name="packUri" /> 之 <see cref="T:System.IO.Packaging.Package" /> 的 URI。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="packUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="packUri" /> 不是絕對 <see cref="T:System.Uri" />。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)">
      <summary>傳回指定 Pack URI 中的 <see cref="T:System.IO.Packaging.PackagePart" /> URI。</summary>
      <param name="packUri">要從中傳回 <see cref="T:System.IO.Packaging.PackagePart" /> URI 的 pack URI。</param>
      <returns>指定之 <paramref name="packUri" /> 中 <see cref="T:System.IO.Packaging.PackagePart" /> 的 URI；或若 <paramref name="packUri" /> 指向封裝而非 <see cref="T:System.IO.Packaging.PackagePart" />，則為 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException">如果 <paramref name="packUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">如果 <paramref name="packUri" /> 不是絕對 <see cref="T:System.Uri" />。
-或-
<paramref name="packUri" /> 不具有 "pack://" 配置。
-或- 
從 <paramref name="packUri" /> 擷取的 partUri 不符合有效 partUri 語法。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)">
      <summary>傳回與指定 <see cref="T:System.IO.Packaging.PackagePart" /> 建立關聯之關聯性組件的 URI。</summary>
      <param name="partUri">
        <see cref="P:System.IO.Packaging.PackagePart.Uri" /> 的 <see cref="T:System.IO.Packaging.PackagePart" />，要傳回關聯之 <see cref="T:System.IO.Packaging.PackageRelationship" /> 的 URI。</param>
      <returns>
        <see cref="T:System.IO.Packaging.PackageRelationship" /> 組件的 URI，此組件與由 <paramref name="partUri" /> 識別的 <see cref="T:System.IO.Packaging.PackagePart" /> 關聯。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> 語法對於封裝組件 URI 無效。  
-或- 
 <paramref name="partUri" /> 是絕對 URI。  
-或- 
 <paramref name="partUri" /> 參考關聯性組件。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)">
      <summary>傳回兩個指定 <see cref="T:System.IO.Packaging.PackagePart" /> URI 之間的相對 URI。</summary>
      <param name="sourcePartUri">來源組件的 URI。</param>
      <param name="targetPartUri">目標組件的 URI。</param>
      <returns>從 <paramref name="sourcePartUri" /> 到 <paramref name="targetPartUri" /> 的相對 URI。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourcePartUri" /> 或 <paramref name="targetPartUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="sourcePartUri" /> 或 <paramref name="targetPartUri" /> 沒有有效的 <see cref="T:System.Uri" /> 語法。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(System.Uri)">
      <summary>從具有指定之 URI 的 <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> 傳回 <see cref="T:System.IO.Packaging.PackageRelationship" />。</summary>
      <param name="relationshipPartUri">關聯性組件的 URI，要傳回 <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />。</param>
      <returns>
        <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> 的 <see cref="T:System.IO.Packaging.PackagePart" />，來自具有指定之 <paramref name="relationshipPartUri" /> 的關聯性。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="relationshipPartUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="relationshipPartUri" /> 是絕對 URI。  
-或- 
 <paramref name="relationshipPartUri" /> 語法對於 <see cref="T:System.IO.Packaging.PackagePart" /> 無效。  
-或- 
 <paramref name="relationshipPartUri" /> 不會參考關聯性組件。  
-或- 
關聯性組件的 <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> 參考其他 (無效) 關聯性組件。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.IsRelationshipPartUri(System.Uri)">
      <summary>傳回值，指出所指定 URI 是否為 <see cref="T:System.IO.Packaging.PackageRelationship" /> 組件的 URI。</summary>
      <param name="partUri">要檢查是否有 <see cref="T:System.IO.Packaging.PackageRelationship" /> 組件的 URI。</param>
      <returns>如果 <paramref name="partUri" /> 識別出 <see cref="T:System.IO.Packaging.PackageRelationship" /> 組件，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> 是絕對 URI。  
-或- 
 <paramref name="partUri" /> 是無效的 <see cref="T:System.IO.Packaging.PackagePart" /> 語法。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)">
      <summary>傳回組件 URI，提供來源組件 URI 以及含有目標組件相對路徑的 URI。</summary>
      <param name="sourcePartUri">來源組件的 URI，或是 "/" 以指定 <see cref="T:System.IO.Packaging.Package" /> 根目錄。</param>
      <param name="targetUri">相對於目標組件的 URI。</param>
      <returns>在指定的 <paramref name="SourcePartUri" /> 與 <paramref name="targetUri" /> 參數之間解析的目標組件之 URI。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourcePartUri" /> 或 <paramref name="targetUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="sourcePartUri" /> 不是有效的組件 URI。  
-或- 
 <paramref name="targetUri" /> 不是有效的相對 URI。</exception>
    </member>
    <member name="F:System.IO.Packaging.PackUriHelper.UriSchemePack">
      <summary>定義封裝 URI 配置名稱 "pack"。</summary>
    </member>
    <member name="T:System.IO.Packaging.TargetMode">
      <summary>指定 <see cref="T:System.IO.Packaging.PackageRelationship" /> 的目標在 <see cref="T:System.IO.Packaging.Package" /> 內部或外部。</summary>
    </member>
    <member name="F:System.IO.Packaging.TargetMode.External">
      <summary>關聯性會參考套件外部的資源。</summary>
    </member>
    <member name="F:System.IO.Packaging.TargetMode.Internal">
      <summary>關聯性所參考的部分位在套件內部。</summary>
    </member>
    <member name="T:System.IO.Packaging.ZipPackage">
      <summary>實作抽象 <see cref="T:System.IO.Packaging.Package" /> 基底類別的衍生子類別，<see cref="T:System.IO.Packaging.ZipPackage" /> 類別使用 ZIP 封存檔作為容器存放區。 這個類別無法被繼承。</summary>
    </member>
    <member name="T:System.IO.Packaging.ZipPackagePart">
      <summary>表示儲存於 <see cref="T:System.IO.Packaging.ZipPackage" /> 中的一部分。</summary>
    </member>
  </members>
</doc>