<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.IO.Packaging</name>
  </assembly>
  <members>
    <member name="T:System.IO.FileFormatException">
      <summary>特定のファイル形式仕様に従う必要がある入力ファイルまたはデータ ストリームが正しくない場合にスローされる例外。</summary>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor">
      <summary>
        <see cref="T:System.IO.FileFormatException" /> クラスの新しいインスタンスを作成します。</summary>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="T:System.IO.FileFormatException" /> クラスの新しいインスタンスを作成し、シリアル化されたデータを使用して初期化します。 このコンストラクターは、逆シリアル化中に、ストリームで送信された例外オブジェクトを再構築するために呼び出されます。</summary>
      <param name="info">シリアル化されたオブジェクト データを保持するオブジェクト。</param>
      <param name="context">転送元または転送先に関するコンテキスト情報。</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.String)">
      <summary>指定したエラー メッセージを使用して、<see cref="T:System.IO.FileFormatException" /> クラスの新しいインスタンスを作成します。</summary>
      <param name="message">エラー メッセージを表す <see cref="T:System.String" /> 値。</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.String,System.Exception)">
      <summary>指定したエラー メッセージおよび例外の種類を使用して、<see cref="T:System.IO.FileFormatException" /> クラスの新しいインスタンスを作成します。</summary>
      <param name="message">エラー メッセージを表す <see cref="T:System.String" /> 値。</param>
      <param name="innerException">現在の例外の原因を表す <see cref="P:System.Exception.InnerException" /> プロパティの値。</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri)">
      <summary>ソースの URI 値を使用して、<see cref="T:System.IO.FileFormatException" /> クラスの新しいインスタンスを作成します。</summary>
      <param name="sourceUri">このエラーの原因になったファイルの <see cref="T:System.Uri" /> 値。</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri,System.Exception)">
      <summary>ソースの URI 値と例外の種類を使用して、<see cref="T:System.IO.FileFormatException" /> クラスの新しいインスタンスを作成します。</summary>
      <param name="sourceUri">このエラーの原因になったファイルの <see cref="T:System.Uri" /> 値。</param>
      <param name="innerException">現在の例外の原因を表す <see cref="P:System.Exception.InnerException" /> プロパティの値。</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri,System.String)">
      <summary>ソースの URI 値と指定したエラー メッセージを使用して、<see cref="T:System.IO.FileFormatException" /> クラスの新しいインスタンスを作成します。</summary>
      <param name="sourceUri">このエラーの原因になったファイルの <see cref="T:System.Uri" /> 値。</param>
      <param name="message">エラー メッセージを表す <see cref="T:System.String" /> 値。</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri,System.String,System.Exception)">
      <summary>ソースの URI 値、指定したエラー メッセージ、および例外の種類を使用して、<see cref="T:System.IO.FileFormatException" /> クラスの新しいインスタンスを作成します。</summary>
      <param name="sourceUri">このエラーの原因になったファイルの <see cref="T:System.Uri" /> 値。</param>
      <param name="message">エラー メッセージを表す <see cref="T:System.String" /> 値。</param>
      <param name="innerException">現在の例外の原因を表す <see cref="P:System.Exception.InnerException" /> プロパティの値。</param>
    </member>
    <member name="M:System.IO.FileFormatException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>ファイル名と追加の例外情報を使用して <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクトを設定します。</summary>
      <param name="info">シリアル化されたオブジェクト データを保持するオブジェクト。</param>
      <param name="context">転送元または転送先に関するコンテキスト情報。</param>
    </member>
    <member name="P:System.IO.FileFormatException.SourceUri">
      <summary>
        <see cref="T:System.IO.FileFormatException" /> の原因になったファイルの名前を取得します。</summary>
      <returns>この例外の原因になったファイルの名前を表す <see cref="T:System.Uri" />。</returns>
    </member>
    <member name="T:System.IO.Packaging.CompressionOption">
      <summary>
        <see cref="T:System.IO.Packaging.PackagePart" /> に格納されているコンテンツの圧縮レベルを指定します。</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.Fast">
      <summary>圧縮はパフォーマンスについて最適化されます。</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.Maximum">
      <summary>圧縮はサイズについて最適化されます。</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.Normal">
      <summary>圧縮はサイズとパフォーマンスのバランスについて最適化されます。</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.NotCompressed">
      <summary>圧縮はオフになります。</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.SuperFast">
      <summary>圧縮は高いパフォーマンスについて最適化されます。</summary>
    </member>
    <member name="T:System.IO.Packaging.EncryptionOption">
      <summary>
        <see cref="T:System.IO.Packaging.Package" /> 内のパーツの暗号化オプションを指定します。</summary>
    </member>
    <member name="F:System.IO.Packaging.EncryptionOption.None">
      <summary>暗号化なし。</summary>
    </member>
    <member name="F:System.IO.Packaging.EncryptionOption.RightsManagement">
      <summary>権限管理を介してサポートされる暗号化。</summary>
    </member>
    <member name="T:System.IO.Packaging.Package">
      <summary>複数のデータ オブジェクトを格納できるコンテナーを表します。</summary>
    </member>
    <member name="M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess)">
      <summary>指定した <see cref="T:System.IO.Packaging.Package" /> を使用する <see cref="T:System.IO.FileAccess" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="openFileAccess">パッケージのファイル IO アクセス許可。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="openFileAccess" /> の値が有効ではありません。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Close">
      <summary>パッケージと、基になるすべてのパーツ ストリームを保存して閉じます。</summary>
    </member>
    <member name="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)">
      <summary>指定した URI とコンテンツ タイプを使用して、新しい非圧縮のパーツを作成します。</summary>
      <param name="partUri">新しいパーツの Uniform Resource Identifier (URI)。</param>
      <param name="contentType">データ ストリームのコンテンツ タイプ。</param>
      <returns>新規作成されたパーツ。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> または <paramref name="contentType" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> は有効な <see cref="T:System.IO.Packaging.PackagePart" /> URI ではありません。</exception>
      <exception cref="T:System.InvalidOperationException">指定した <paramref name="partUri" /> を持つパーツが、既にパッケージに存在します。</exception>
      <exception cref="T:System.ObjectDisposedException">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</exception>
      <exception cref="T:System.IO.IOException">パッケージは読み取り専用です (新しいパーツを追加できません)。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
      <summary>指定した URI、コンテンツ タイプ、および圧縮オプションを使用して、新しいパーツを作成します。</summary>
      <param name="partUri">新しいパーツの URI。</param>
      <param name="contentType">データ ストリームのコンテンツ タイプ。</param>
      <param name="compressionOption">データ ストリームの圧縮オプション。<see cref="F:System.IO.Packaging.CompressionOption.NotCompressed" /> または <see cref="F:System.IO.Packaging.CompressionOption.Normal" /> 圧縮。</param>
      <returns>新規作成されたパーツ。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> または <paramref name="contentType" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> は有効な <see cref="T:System.IO.Packaging.PackagePart" /> Uniform Resource Identifier (URI) ではありません。</exception>
      <exception cref="T:System.InvalidOperationException">指定した <paramref name="partUri" /> を持つパーツが、既にパッケージに存在します。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="compressionOption" /> 値が有効ではありません。</exception>
      <exception cref="T:System.ObjectDisposedException">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</exception>
      <exception cref="T:System.IO.IOException">パッケージは読み取り専用です (新しいパーツを追加できません)。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
      <summary>派生クラスでオーバーライドされると、新しいパーツをパッケージ内に作成します。</summary>
      <param name="partUri">作成されるパーツのUniform Resource Identifier (URI)。</param>
      <param name="contentType">データ ストリームのコンテンツ タイプ。</param>
      <param name="compressionOption">データ ストリームの圧縮オプション。</param>
      <returns>作成されたパーツ。</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
      <summary>指定した URI、ターゲット モード、およびリレーションシップ型を使用して、パーツへのパッケージ レベル リレーションシップを作成します。</summary>
      <param name="targetUri">ターゲット パーツの Uniform Resource Identifier (URI)。</param>
      <param name="targetMode">ターゲット パーツが、パッケージに対して <see cref="F:System.IO.Packaging.TargetMode.Internal" />、<see cref="F:System.IO.Packaging.TargetMode.External" /> のいずれであるかを示します。</param>
      <param name="relationshipType">リレーションシップのロールを一意に定義する URI。</param>
      <returns>指定したパーツへのパッケージ レベル リレーションシップ。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetUri" /> または <paramref name="relationshipType" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="targetUri" /> パーツが <see cref="T:System.IO.Packaging.PackageRelationship" /> です。または <paramref name="targetMode" /> が <see cref="F:System.IO.Packaging.TargetMode.Internal" /> で、<paramref name="targetUri" /> が絶対 URI です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="targetMode" /> の値が有効ではありません。</exception>
      <exception cref="T:System.ObjectDisposedException">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</exception>
      <exception cref="T:System.IO.IOException">パッケージは読み取り専用です。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
      <summary>指定した URI、ターゲット モード、リレーションシップ型、および 識別子 (ID) を使用して、パーツへのパッケージ レベル リレーションシップを作成します。</summary>
      <param name="targetUri">ターゲット パーツの Uniform Resource Identifier (URI)。</param>
      <param name="targetMode">ターゲット パーツが、パッケージに対して <see cref="F:System.IO.Packaging.TargetMode.Internal" />、<see cref="F:System.IO.Packaging.TargetMode.External" /> のいずれであるかを示します。</param>
      <param name="relationshipType">リレーションシップのロールを一意に定義する URI。</param>
      <param name="id">一意の XML 識別子。</param>
      <returns>指定したパーツへのパッケージ レベル リレーションシップ。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetUri" /> または <paramref name="relationshipType" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="targetUri" /> パーツが <see cref="T:System.IO.Packaging.PackageRelationship" /> です。または <paramref name="targetMode" /> が <see cref="F:System.IO.Packaging.TargetMode.Internal" /> で、<paramref name="targetUri" /> が絶対 URI です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="targetMode" /> の値が有効ではありません。</exception>
      <exception cref="T:System.ObjectDisposedException">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</exception>
      <exception cref="T:System.IO.IOException">パッケージは読み取り専用です。</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> が有効な XML 識別子ではないか、指定した <paramref name="id" /> を持つパーツが既にパッケージ内に存在します。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.DeletePart(System.Uri)">
      <summary>指定した URI を持つパーツをパッケージから削除します。</summary>
      <param name="partUri">削除するパーツの URI。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> は有効な <see cref="T:System.IO.Packaging.PackagePart" /> URI ではありません。</exception>
      <exception cref="T:System.ObjectDisposedException">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</exception>
      <exception cref="T:System.IO.IOException">パッケージは読み取り専用です。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)">
      <summary>派生クラスでオーバーライドされると、指定した URI を持つパーツを削除します。</summary>
      <param name="partUri">削除する <see cref="P:System.IO.Packaging.PackagePart.Uri" /> の <see cref="T:System.IO.Packaging.PackagePart" />。</param>
    </member>
    <member name="M:System.IO.Packaging.Package.DeleteRelationship(System.String)">
      <summary>パッケージ レベル リレーションシップを削除します。</summary>
      <param name="id">削除する <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> の <see cref="T:System.IO.Packaging.PackageRelationship" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ObjectDisposedException">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</exception>
      <exception cref="T:System.IO.IOException">パッケージは読み取り専用です。</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> が有効な XML 識別子でありません。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Dispose(System.Boolean)">
      <summary>すべてのパーツおよびリレーションシップの内容をフラッシュして保存し、パッケージを閉じ、すべてのリソースを解放します。</summary>
      <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="P:System.IO.Packaging.Package.FileOpenAccess">
      <summary>パッケージのファイル アクセス設定を取得します。</summary>
      <returns>
        <see cref="T:System.IO.FileAccess" /> 値、つまり <see cref="F:System.IO.FileAccess.Read" />、<see cref="F:System.IO.FileAccess.Write" />、または <see cref="F:System.IO.FileAccess.ReadWrite" /> の 1 つ。</returns>
      <exception cref="T:System.ObjectDisposedException">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Flush">
      <summary>パッケージに含まれているすべてのパーツおよびリレーションシップの内容を保存します。</summary>
      <exception cref="T:System.ObjectDisposedException">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</exception>
      <exception cref="T:System.IO.IOException">パッケージは読み取り専用であり、変更することはできません。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.FlushCore">
      <summary>派生クラスでオーバーライドされると、すべてのパーツとリレーションシップの内容を派生クラス ストアに保存します。</summary>
    </member>
    <member name="M:System.IO.Packaging.Package.GetPart(System.Uri)">
      <summary>指定した URI を持つパーツを返します。</summary>
      <param name="partUri">返すパーツのUniform Resource Identifier (URI)。</param>
      <returns>指定した <paramref name="partUri" /> を持つパーツ。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> は有効な <see cref="T:System.IO.Packaging.PackagePart" /> Uniform Resource Identifier (URI) ではありません。</exception>
      <exception cref="T:System.InvalidOperationException">指定した <paramref name="partUri" /> を持つパーツが、パッケージ内に存在しません。</exception>
      <exception cref="T:System.ObjectDisposedException">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</exception>
      <exception cref="T:System.IO.IOException">パッケージは書き込み専用です。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.GetPartCore(System.Uri)">
      <summary>派生クラスでオーバーライドされると、指定した URI によってアドレス指定されるパーツを返します。</summary>
      <param name="partUri">取得するパーツのUniform Resource Identifier (URI)。</param>
      <returns>要求されたパーツ。指定した <paramref name="partUri" /> を持つパーツがパッケージ内に存在しない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.GetParts">
      <summary>パッケージに含まれているすべてのパーツのコレクションを返します。</summary>
      <returns>パッケージに含まれているすべての <see cref="T:System.IO.Packaging.PackagePart" /> 要素のコレクション。</returns>
      <exception cref="T:System.ObjectDisposedException">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</exception>
      <exception cref="T:System.IO.IOException">パッケージは書き込み専用です。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.GetPartsCore">
      <summary>派生クラスでオーバーライドされると、パッケージ内のすべてのパーツの配列を返します。</summary>
      <returns>パッケージに含まれるすべてのパーツの配列。</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.GetRelationship(System.String)">
      <summary>指定した ID を持つパッケージ レベル リレーションシップを返します。</summary>
      <param name="id">返されるリレーションシップの <see cref="P:System.IO.Packaging.PackageRelationship.Id" />。</param>
      <returns>指定した <paramref name="id" /> を持つパッケージ レベル リレーションシップ。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> が有効な XML 識別子でありません。</exception>
      <exception cref="T:System.InvalidOperationException">指定した <paramref name="id" /> を持つリレーションシップがパッケージ内に存在しません。</exception>
      <exception cref="T:System.ObjectDisposedException">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</exception>
      <exception cref="T:System.IO.IOException">パッケージは書き込み専用です。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.GetRelationships">
      <summary>すべてのパッケージ レベル リレーションシップのコレクションを返します。</summary>
      <returns>パッケージに含まれているすべてのパッケージ レベル リレーションシップのコレクション。</returns>
      <exception cref="T:System.ObjectDisposedException">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</exception>
      <exception cref="T:System.IO.IOException">パッケージは書き込み専用です。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
      <summary>指定した <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> に一致するすべてのパッケージ レベル リレーションシップのコレクションを返します。</summary>
      <param name="relationshipType">コレクションで照合を行い、結果を返す <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />。</param>
      <returns>指定した <paramref name="relationshipType" /> に一致するパッケージ レベル リレーションシップのコレクション。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="relationshipType" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="relationshipType" /> が空の文字列です。</exception>
      <exception cref="T:System.ObjectDisposedException">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</exception>
      <exception cref="T:System.IO.IOException">パッケージは書き込み専用です。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.IO.Stream)">
      <summary>指定した IO ストリームでパッケージを開きます。</summary>
      <param name="stream">パッケージを開く IO ストリーム。</param>
      <returns>開かれたパッケージ。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.IO.IOException">開くパッケージには、読み取りまたは読み取り/書き込みアクセス許可が必要であり、指定した <paramref name="stream" /> は書き込み専用です。または開くパッケージには、書き込みまたは読み取り/書き込みアクセス許可が必要であり、指定した <paramref name="stream" /> は読み取り専用です。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)">
      <summary>指定した IO ストリームとファイル モードでパッケージを開きます。</summary>
      <param name="stream">パッケージを開く IO ストリーム。</param>
      <param name="packageMode">パッケージを開くときのファイル モード。</param>
      <returns>開かれたパッケージ。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="packageMode" /> の値が無効です。</exception>
      <exception cref="T:System.IO.IOException">開くパッケージには、読み取りまたは読み取り/書き込みアクセス許可が必要であり、指定した <paramref name="stream" /> は書き込み専用です。または開くパッケージには、書き込みまたは読み取り/書き込みアクセス許可が必要であり、指定した <paramref name="stream" /> は読み取り専用です。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)">
      <summary>指定した IO ストリーム、ファイル モード、およびファイル アクセス設定でパッケージを開きます。</summary>
      <param name="stream">パッケージを開く IO ストリーム。</param>
      <param name="packageMode">パッケージを開くときのファイル モード。</param>
      <param name="packageAccess">パッケージを開くときのファイル アクセス。</param>
      <returns>開かれたパッケージ。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="packageMode" /> または <paramref name="packageAccess" /> の値が有効ではありません。</exception>
      <exception cref="T:System.IO.IOException">開くパッケージには、読み取りまたは読み取り/書き込みアクセス許可が必要であり、指定した <paramref name="stream" /> は書き込み専用です。または開くパッケージには、書き込みまたは読み取り/書き込みアクセス許可が必要であり、指定した <paramref name="stream" /> は読み取り専用です。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String)">
      <summary>指定したパスとファイル名でパッケージを開きます。</summary>
      <param name="path">パッケージのパスおよびファイル名。</param>
      <returns>開かれたパッケージ。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)">
      <summary>指定したファイル モードを使用して、指定したパスにあるパッケージを開きます。</summary>
      <param name="path">パッケージのパスおよびファイル名。</param>
      <param name="packageMode">パッケージを開くときのファイル モード。</param>
      <returns>開かれたパッケージ。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="packageMode" /> の値が有効ではありません。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
      <summary>指定したファイル モードとファイル アクセス設定を使用して、指定したパスにあるパッケージを開きます。</summary>
      <param name="path">パッケージのパスおよびファイル名。</param>
      <param name="packageMode">パッケージを開くときのファイル モード。</param>
      <param name="packageAccess">パッケージを開くときのファイル アクセス。</param>
      <returns>開かれたパッケージ。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="packageMode" /> または <paramref name="packageAccess" /> の値が有効ではありません。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
      <summary>指定したファイル モード、ファイル アクセス、およびファイル共有設定を使用して、指定したパスにあるパッケージを開きます。</summary>
      <param name="path">パッケージのパスおよびファイル名。</param>
      <param name="packageMode">パッケージを開くときのファイル モード。</param>
      <param name="packageAccess">パッケージを開くときのファイル アクセス。</param>
      <param name="packageShare">パッケージを開くときのファイル共有モード。</param>
      <returns>開かれたパッケージ。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="packageMode" />、<paramref name="packageAccess" />、または <paramref name="packageShare" /> の値が有効ではありません。</exception>
    </member>
    <member name="P:System.IO.Packaging.Package.PackageProperties">
      <summary>パッケージのコア プロパティを取得します。</summary>
      <returns>パッケージのコア プロパティ。</returns>
      <exception cref="T:System.ObjectDisposedException">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.PartExists(System.Uri)">
      <summary>指定した URI を持つパーツがパッケージ内に存在するかどうかを示します。</summary>
      <param name="partUri">チェックするパーツの <see cref="T:System.Uri" />。</param>
      <returns>指定した <paramref name="partUri" /> を持つパーツがパッケージ内に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> は有効な <see cref="T:System.IO.Packaging.PackagePart" /> Uniform Resource Identifier (URI) ではありません。</exception>
      <exception cref="T:System.ObjectDisposedException">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</exception>
      <exception cref="T:System.IO.IOException">パッケージは書き込み専用です (情報を読み取ることはできません)。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.RelationshipExists(System.String)">
      <summary>指定した ID を持つパッケージ レベル リレーションシップがパッケージに含まれているかどうかを示します。</summary>
      <param name="id">確認対象のリレーションシップの <see cref="P:System.IO.Packaging.PackageRelationship.Id" />。</param>
      <returns>指定した <paramref name="id" /> を持つパッケージ レベル リレーションシップがパッケージ内に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> が有効な XML 識別子でありません。</exception>
      <exception cref="T:System.ObjectDisposedException">パッケージが開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</exception>
      <exception cref="T:System.IO.IOException">パッケージは書き込み専用です。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.System#IDisposable#Dispose">
      <summary>このメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。アプリケーションで使用するためのものではありません。  代わりに、タイプ セーフ <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> メソッドを使用します。</summary>
    </member>
    <member name="T:System.IO.Packaging.PackagePart">
      <summary>
        <see cref="T:System.IO.Packaging.Package" /> に格納されるパーツの基本クラスを提供します。  このクラスは抽象クラスです。</summary>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri)">
      <summary>親 <see cref="T:System.IO.Packaging.PackagePart" /> とパーツ URI を指定して、<see cref="P:System.IO.Packaging.PackagePart.Package" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="package">パーツの親 <see cref="T:System.IO.Packaging.Package" />。</param>
      <param name="partUri">親 <see cref="T:System.IO.Packaging.Package" /> ルートを基準にした、パーツの URI。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="package" /> または <paramref name="partUri" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String)">
      <summary>親 <see cref="T:System.IO.Packaging.PackagePart" />、パーツ URI、および MIME コンテンツ タイプを指定して、<see cref="P:System.IO.Packaging.PackagePart.Package" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="package">パーツの親 <see cref="T:System.IO.Packaging.Package" />。</param>
      <param name="partUri">親 <see cref="T:System.IO.Packaging.Package" /> ルートを基準にした、パーツの URI。</param>
      <param name="contentType">パーツ データ ストリームの MIME コンテンツ タイプ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="package" /> または <paramref name="partUri" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> は有効な <see cref="T:System.IO.Packaging.PackagePart" /> URI ではありません。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String,System.IO.Packaging.CompressionOption)">
      <summary>親 <see cref="T:System.IO.Packaging.PackagePart" />、パーツ URI、MIME コンテンツ タイプ、および <see cref="P:System.IO.Packaging.PackagePart.Package" /> を指定して、<see cref="T:System.IO.Packaging.CompressionOption" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="package">パーツの親 <see cref="T:System.IO.Packaging.Package" />。</param>
      <param name="partUri">親 <see cref="T:System.IO.Packaging.Package" /> ルートを基準にした、パーツの URI。</param>
      <param name="contentType">パーツのデータ ストリームの MIME コンテンツ タイプ。</param>
      <param name="compressionOption">パーツ データ ストリームの圧縮オプション。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="package" /> または <paramref name="partUri" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> は有効な <see cref="T:System.IO.Packaging.PackagePart" /> URI ではありません。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="compressionOption" /> 値が有効ではありません。</exception>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.CompressionOption">
      <summary>パーツ コンテンツ ストリームの圧縮オプションを取得します。</summary>
      <returns>パーツ コンテンツ ストリームの圧縮オプション。</returns>
      <exception cref="T:System.InvalidOperationException">パーツが削除されました。  

または - 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> が開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</exception>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.ContentType">
      <summary>コンテンツ ストリームの MIME タイプを取得します。</summary>
      <returns>パーツのコンテンツ データ ストリームの MIME タイプ。</returns>
      <exception cref="T:System.InvalidOperationException">パーツが削除されました。  

または - 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> が開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。  

または - 
派生クラス <see cref="M:System.IO.Packaging.PackagePart.GetContentTypeCore" /> メソッドから返される文字列が空です。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
      <summary>この <see cref="T:System.IO.Packaging.PackagePart" /> と、指定のターゲット <see cref="T:System.IO.Packaging.PackagePart" /> または外部リソース間のパーツ レベル リレーションシップを作成します。</summary>
      <param name="targetUri">ターゲット パーツの URI。</param>
      <param name="targetMode">列挙値の 1 つ。 たとえば、ターゲット パーツが <see cref="F:System.IO.Packaging.TargetMode.Internal" /> の内部の場合は <see cref="T:System.IO.Packaging.Package" />、ターゲットが <see cref="F:System.IO.Packaging.TargetMode.External" /> 外部のリソースの場合は <see cref="T:System.IO.Packaging.Package" /> です。</param>
      <param name="relationshipType">リレーションシップのロール。</param>
      <returns>この <see cref="T:System.IO.Packaging.PackagePart" /> およびターゲット <see cref="T:System.IO.Packaging.PackagePart" />、外部リソース間のパーツ レベル リレーションシップ。</returns>
      <exception cref="T:System.InvalidOperationException">パーツが削除されました。  
または 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> が開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetUri" /> または <paramref name="relationshipType" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="targetMode" /> パラメーターが、有効な <see cref="T:System.IO.Packaging.TargetMode" /> 列挙値でありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="targetUri" /> で識別されるパーツはリレーションシップです (リレーションシップのターゲットは別のリレーションシップになることができません)。  

または - 
<paramref name="targetMode" /> は、<see cref="F:System.IO.Packaging.TargetMode.Internal" /> として指定されますが、<paramref name="targetUri" /> は外部の絶対 URI です。</exception>
      <exception cref="T:System.IO.IOException">パッケージは読み取り専用です (新しいリレーションシップを追加できません)。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
      <summary>この <see cref="T:System.IO.Packaging.PackagePart" /> と、指定のターゲット <see cref="T:System.IO.Packaging.PackagePart" /> または外部リソース間のパーツ レベル リレーションシップを作成します。</summary>
      <param name="targetUri">ターゲット パーツの URI。</param>
      <param name="targetMode">列挙値の 1 つ。 たとえば、ターゲット パーツが <see cref="F:System.IO.Packaging.TargetMode.Internal" /> の内部の場合は <see cref="T:System.IO.Packaging.Package" />、ターゲットが <see cref="F:System.IO.Packaging.TargetMode.External" /> 外部のリソースの場合は <see cref="T:System.IO.Packaging.Package" /> です。</param>
      <param name="relationshipType">リレーションシップのロール。</param>
      <param name="id">リレーションシップの一意の ID。</param>
      <returns>この <see cref="T:System.IO.Packaging.PackagePart" /> およびターゲット <see cref="T:System.IO.Packaging.PackagePart" />、外部リソース間のパーツ レベル リレーションシップ。</returns>
      <exception cref="T:System.InvalidOperationException">パーツが削除されました。  

または - 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> が開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetUri" /> または <paramref name="relationshipType" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="targetMode" /> パラメーターが、有効な <see cref="T:System.IO.Packaging.TargetMode" /> 列挙値でありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="targetUri" /> で識別されるパーツはリレーションシップです (リレーションシップのターゲットは別のリレーションシップになることができません)。  
または 
 <paramref name="targetMode" /> は、<see cref="F:System.IO.Packaging.TargetMode.Internal" /> として指定されますが、<paramref name="targetUri" /> は外部の絶対 URI です。</exception>
      <exception cref="T:System.IO.IOException">パッケージは読み取り専用です (新しいリレーションシップを追加できません)。</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> が有効な XML 識別子でありません。  
または 
指定した <paramref name="id" /> を持つパーツが既に存在します。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.DeleteRelationship(System.String)">
      <summary>指定したパーツ レベル <see cref="T:System.IO.Packaging.PackageRelationship" /> を削除します。</summary>
      <param name="id">削除するリレーションシップの <see cref="P:System.IO.Packaging.PackageRelationship.Id" />。</param>
      <exception cref="T:System.InvalidOperationException">パーツが削除されました。  

または - 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> が開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.IO.IOException">パッケージは読み取り専用です (リレーションシップを削除できません)。</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> が有効な XML 識別子でありません。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetContentTypeCore">
      <summary>派生クラスでオーバーライドされた場合、パーツ コンテンツの MIME タイプを返します。</summary>
      <returns>パーツ コンテンツの MIME タイプ。</returns>
      <exception cref="T:System.NotSupportedException">該当する派生クラスには、<see cref="M:System.IO.Packaging.PackagePart.GetContentTypeCore" /> メソッドに必要なオーバーライド実装が用意されていません。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetRelationship(System.String)">
      <summary>指定した <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> を持つリレーションシップを返します。</summary>
      <param name="id">返されるリレーションシップの <see cref="P:System.IO.Packaging.PackageRelationship.Id" />。</param>
      <returns>指定した <paramref name="id" /> に一致するリレーションシップ。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> が有効な XML 識別子でありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="relationshipType" /> が空の文字列です。</exception>
      <exception cref="T:System.InvalidOperationException">パーツが削除されました。  

または - 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> が開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。  

または 
指定した <paramref name="id" /> を持つリレーションシップがパッケージ内に存在しません。</exception>
      <exception cref="T:System.IO.IOException">パッケージは書き込み専用です (リレーションシップ情報を読み取ることができません)。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetRelationships">
      <summary>このパーツによって所有されているすべてのリレーションシップのコレクションを返します。</summary>
      <returns>パーツによって所有されているすべてのリレーションシップのコレクション。</returns>
      <exception cref="T:System.InvalidOperationException">パーツが削除されました。  
または 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> が開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</exception>
      <exception cref="T:System.IO.IOException">パッケージは書き込み専用です (リレーションシップ情報を読み取ることができません)。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)">
      <summary>指定した <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> に一致するリレーションシップのコレクションを返します。</summary>
      <param name="relationshipType">リレーションシップの <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />。検索を行った場合、その結果をコレクションで返します。</param>
      <returns>指定した <paramref name="relationshipType" /> に一致するリレーションシップのコレクション。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="relationshipType" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="relationshipType" /> が空の文字列です。</exception>
      <exception cref="T:System.InvalidOperationException">パーツが削除されました。  
または 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> が開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</exception>
      <exception cref="T:System.IO.IOException">パッケージは書き込み専用です (リレーションシップ情報を読み取ることができません)。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStream">
      <summary>パーツのコンテンツ データ ストリームを返します。</summary>
      <returns>パーツのコンテンツ データ ストリーム。</returns>
      <exception cref="T:System.InvalidOperationException">パーツが削除されました。  

または - 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> が開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</exception>
      <exception cref="T:System.IO.IOException">派生サブクラスの <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> メソッドから返されるストリーム オブジェクトは <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode)">
      <summary>指定した I/O <see cref="T:System.IO.FileMode" /> で開かれているコンテンツ ストリームを返します。</summary>
      <param name="mode">コンテンツ ストリームを開くときの I/O モード。</param>
      <returns>パーツのコンテンツ ストリーム。</returns>
      <exception cref="T:System.InvalidOperationException">パーツが削除されました。  
または 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> が開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="mode" /> パラメーターが、有効な <see cref="T:System.IO.FileMode" /> 列挙値でありません。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="mode" /> パラメーターに、パッケージおよびパーツ ストリームとの互換性がありません。  
または 
派生サブクラスの <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> メソッドから返されるストリーム オブジェクトは <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode,System.IO.FileAccess)">
      <summary>指定した <see cref="T:System.IO.FileMode" /> と <see cref="T:System.IO.FileAccess" /> で開かれているパーツ コンテンツ ストリームを返します。</summary>
      <param name="mode">コンテンツ ストリームを開くときの I/O モード。</param>
      <param name="access">コンテンツ ストリームを開くときに使用するアクセス許可。</param>
      <returns>パーツのコンテンツ ストリーム。</returns>
      <exception cref="T:System.InvalidOperationException">パーツが削除されました。  
または 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> が開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="mode" /> パラメーターが、有効な <see cref="T:System.IO.FileMode" /> 列挙値でありません。  

または - 
<paramref name="access" /> パラメーターが、有効な <see cref="T:System.IO.FileAccess" /> 列挙値でありません。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="mode" /> または <paramref name="access" /> パラメーターに、パッケージおよびパーツ ストリームとの互換性がありません。  

または - 
<paramref name="access" /> パラメーターの指定が <see cref="F:System.IO.FileAccess.Read" /> になっていますが、該当する <paramref name="mode" /> パラメーターには書き込みアクセス権が必要です  (<see cref="T:System.IO.FileMode" /> の値が <see cref="F:System.IO.FileMode.Create" />、<see cref="F:System.IO.FileMode.CreateNew" />、<see cref="F:System.IO.FileMode.Truncate" />、または <see cref="F:System.IO.FileMode.Append" /> の場合は、<see cref="F:System.IO.FileAccess.Write" /> または <see cref="F:System.IO.FileAccess.ReadWrite" /> のアクセス権が必要です)。 
または 
派生サブクラスの <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> メソッドから返されるストリーム オブジェクトは <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)">
      <summary>派生クラスでオーバーライドされると、指定の <see cref="T:System.IO.FileMode" /> と <see cref="T:System.IO.FileAccess" /> で開かれているパーツ コンテンツ ストリームを返します。</summary>
      <param name="mode">コンテンツ ストリームを開くときの I/O モード。</param>
      <param name="access">コンテンツ ストリームを開くときに使用するアクセス許可。</param>
      <returns>パーツのコンテンツ データ ストリーム。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.Package">
      <summary>パーツの親 <see cref="T:System.IO.Packaging.Package" /> を取得します。</summary>
      <returns>パーツの親パッケージ。</returns>
      <exception cref="T:System.InvalidOperationException">パーツが削除されました。  

または - 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> が開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.RelationshipExists(System.String)">
      <summary>指定した <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> を持つリレーションシップがこのパーツによって所有されているどうかを示す値を返します。</summary>
      <param name="id">確認対象のリレーションシップの <see cref="P:System.IO.Packaging.PackageRelationship.Id" />。</param>
      <returns>指定した <paramref name="id" /> を持つリレーションシップがこのパーツによって所有されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> が有効な XML 識別子でありません。</exception>
      <exception cref="T:System.InvalidOperationException">パーツが削除されました。  

または - 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> が開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</exception>
      <exception cref="T:System.IO.IOException">パッケージは書き込み専用です (リレーションシップ情報を読み取ることができません)。</exception>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.Uri">
      <summary>パーツの URI を取得します。</summary>
      <returns>パッケージURIルートを基準とした、パートの。</returns>
      <exception cref="T:System.InvalidOperationException">パーツが削除されました。  
または 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> が開いていません (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> または <see cref="M:System.IO.Packaging.Package.Close" /> が呼び出されました)。</exception>
    </member>
    <member name="T:System.IO.Packaging.PackagePartCollection">
      <summary>
        <see cref="T:System.IO.Packaging.PackagePart" /> オブジェクトのコレクションを表します。</summary>
    </member>
    <member name="M:System.IO.Packaging.PackagePartCollection.GetEnumerator">
      <summary>コレクション内のパーツを反復処理する列挙子を返します。</summary>
      <returns>コレクション内の <see cref="T:System.IO.Packaging.PackagePart" /> 要素を反復処理する列挙子。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackagePartCollection.System#Collections#Generic#IEnumerable{System#IO#Packaging#PackagePart}#GetEnumerator">
      <summary>コレクションを反復処理する列挙子を返します。</summary>
      <returns>コレクションを反復処理するために使用できる <see cref="T:System.Collections.Generic.IEnumerator`1" /> オブジェクト。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackagePartCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>このメンバーの説明については、<see cref="M:System.Collections.IEnumerable.GetEnumerator" /> のトピックを参照してください。</summary>
      <returns>コレクションを反復処理するために使用できる <see cref="T:System.Collections.IEnumerator" /> オブジェクト。</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageProperties">
      <summary>
        <see cref="T:System.IO.Packaging.Package" /> のコア プロパティを表します。</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageProperties.#ctor">
      <summary>
        <see cref="T:System.IO.Packaging.PackageProperties" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Category">
      <summary>派生クラスでオーバーライドされた場合、<see cref="T:System.IO.Packaging.Package" /> のカテゴリを取得または設定します。</summary>
      <returns>
        <see cref="T:System.IO.Packaging.Package" /> に格納されているコンテンツのカテゴリ。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.ContentStatus">
      <summary>派生クラスでオーバーライドされた場合、<see cref="T:System.IO.Packaging.Package" /> のステータスを表す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.IO.Packaging.Package" /> のコンテンツのステータス。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.ContentType">
      <summary>派生クラスでオーバーライドされた場合、<see cref="T:System.IO.Packaging.Package" /> に格納されているコンテンツのタイプを表す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.IO.Packaging.Package" /> に格納されているコンテンツのタイプ。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Created">
      <summary>派生クラスでオーバーライドされた場合、<see cref="T:System.IO.Packaging.Package" /> が作成された日時を取得または設定します。</summary>
      <returns>
        <see cref="T:System.IO.Packaging.Package" /> が最初に作成された日時。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Creator">
      <summary>派生クラスでオーバーライドされた場合、<see cref="T:System.IO.Packaging.Package" /> とそのコンテンツを作成した個人またはエンティティを識別する値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.IO.Packaging.Package" /> とそのコンテンツを作成した個人またはエンティティ。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Description">
      <summary>派生クラスでオーバーライドされた場合、<see cref="T:System.IO.Packaging.Package" /> に格納されているコンテンツの説明を取得または設定します。</summary>
      <returns>
        <see cref="T:System.IO.Packaging.Package" /> に格納されているコンテンツの説明。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageProperties.Dispose">
      <summary>
        <see cref="T:System.IO.Packaging.PackageProperties" /> インスタンスで使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageProperties.Dispose(System.Boolean)">
      <summary>
        <see cref="T:System.IO.Packaging.PackageProperties" /> インスタンスによって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Identifier">
      <summary>派生クラスでオーバーライドされた場合、<see cref="T:System.IO.Packaging.Package" /> およびそのコンテンツを明確に識別する値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.IO.Packaging.Package" /> とそのコンテンツを明確に識別する値。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Keywords">
      <summary>派生クラスでオーバーライドされた場合、対象範囲が規定されたキーワードのセットを定義する値を取得または設定します。このキーワードのセットは、<see cref="T:System.IO.Packaging.Package" /> およびそのコンテンツの検索とインデックス設定をサポートします。</summary>
      <returns>
        <see cref="T:System.IO.Packaging.Package" /> およびそのコンテンツの検索とインデックス設定をサポートする、対象範囲が規定されたキーワードのセット。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Language">
      <summary>派生クラスでオーバーライドされた場合、<see cref="T:System.IO.Packaging.Package" /> のコンテンツの言語を識別する値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.IO.Packaging.Package" /> コンテンツの言語を識別する値。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.LastModifiedBy">
      <summary>派生クラスでオーバーライドされた場合、<see cref="T:System.IO.Packaging.Package" /> のコンテンツを最後に変更したユーザーを識別する値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.IO.Packaging.Package" /> を最後に変更したユーザー。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.LastPrinted">
      <summary>派生クラスでオーバーライドされた場合、<see cref="T:System.IO.Packaging.Package" /> コンテンツが最後に印刷された日時を取得または設定します。</summary>
      <returns>
        <see cref="T:System.IO.Packaging.Package" /> コンテンツが最後に印刷された日時。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Modified">
      <summary>派生クラスでオーバーライドされた場合、<see cref="T:System.IO.Packaging.Package" /> が最後に変更された日時を取得または設定します。</summary>
      <returns>
        <see cref="T:System.IO.Packaging.Package" /> が最後に変更された日時。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Revision">
      <summary>派生クラスでオーバーライドされた場合、<see cref="T:System.IO.Packaging.Package" /> のリビジョン番号を取得または設定します。</summary>
      <returns>
        <see cref="T:System.IO.Packaging.Package" /> のリビジョン番号。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Subject">
      <summary>派生クラスでオーバーライドされた場合、<see cref="T:System.IO.Packaging.Package" /> のコンテンツのトピックを取得または設定します。</summary>
      <returns>
        <see cref="T:System.IO.Packaging.Package" /> のコンテンツのトピック。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Title">
      <summary>派生クラスでオーバーライドされた場合、<see cref="T:System.IO.Packaging.Package" /> およびそのコンテンツに設定された名前を取得または設定します。</summary>
      <returns>
        <see cref="T:System.IO.Packaging.Package" /> およびそのコンテンツに設置された名前。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Version">
      <summary>派生クラスでオーバーライドされた場合、<see cref="T:System.IO.Packaging.Package" /> のバージョン番号を取得または設定します。</summary>
      <returns>
        <see cref="T:System.IO.Packaging.Package" /> のバージョン番号。</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationship">
      <summary>ソースの <see cref="T:System.IO.Packaging.Package" /> または <see cref="T:System.IO.Packaging.PackagePart" /> と、ターゲット オブジェクトとなる <see cref="T:System.IO.Packaging.PackagePart" /> または外部リソースとの間の関連付けを表します。</summary>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.Id">
      <summary>リレーションシップを識別する文字列を取得します。</summary>
      <returns>リレーションシップを識別する文字列。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.Package">
      <summary>このリレーションシップを含む <see cref="T:System.IO.Packaging.Package" /> を取得します。</summary>
      <returns>このリレーションシップを含むパッケージ。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.RelationshipType">
      <summary>リレーションシップの修飾型名を取得します。</summary>
      <returns>リレーションシップの修飾型名。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.SourceUri">
      <summary>リレーションシップを所有するパッケージまたはパーツの URI を取得します。</summary>
      <returns>リレーションシップを所有する <see cref="T:System.IO.Packaging.Package" /> または <see cref="T:System.IO.Packaging.PackagePart" /> の URI。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.TargetMode">
      <summary>リレーションシップのターゲットが <see cref="F:System.IO.Packaging.TargetMode.Internal" /> に対して <see cref="F:System.IO.Packaging.TargetMode.External" /> であるか <see cref="T:System.IO.Packaging.Package" /> であるかを示す値を取得します。</summary>
      <returns>
        <see cref="P:System.IO.Packaging.PackageRelationship.TargetUri" /> が参照するリソースが <see cref="F:System.IO.Packaging.TargetMode.Internal" /> に対して <see cref="F:System.IO.Packaging.TargetMode.External" /> であるか <see cref="T:System.IO.Packaging.Package" /> であるかを示す列挙値。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.TargetUri">
      <summary>リレーションシップのターゲット リソースの URI を取得します。</summary>
      <returns>ターゲット リソースの URI。</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationshipCollection">
      <summary>指定した <see cref="T:System.IO.Packaging.PackageRelationship" /> または <see cref="T:System.IO.Packaging.PackagePart" /> によって所有されている <see cref="T:System.IO.Packaging.Package" /> 要素のコレクションを表します。</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipCollection.GetEnumerator">
      <summary>コレクション内のリレーションシップを反復処理する列挙子を返します。</summary>
      <returns>コレクション内の <see cref="T:System.IO.Packaging.PackageRelationship" /> 要素を反復処理する列挙子。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>この型またはメンバーは、Windows Presentation Foundation インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
      <returns>使用しないでください。<see cref="M:System.IO.Packaging.PackageRelationshipCollection.GetEnumerator" /> を使用してください。</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationshipSelector">
      <summary>パーツ レベルまたはパッケージ レベルのリレーションシップを選択するために、<see cref="T:System.IO.Packaging.PackageRelationship" /> 基準を定義します。</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)">
      <summary>
        <see cref="T:System.IO.Packaging.PackageRelationshipSelector" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="sourceUri">リレーションシップを所有している <see cref="T:System.IO.Packaging.PackagePart" /> または <see cref="T:System.IO.Packaging.Package" /> (<c>SourceUri</c>="/") の Uniform Resource Identifier (URI)。</param>
      <param name="selectorType">
        <paramref name="selectionCriteria" /> のタイプ。リレーションシップ <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" /> またはリレーションシップ <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Type" /> のいずれか。</param>
      <param name="selectionCriteria">
        <paramref name="selectorType" /> に基づいてリレーションシップを選択する際に使用する条件文字列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceUri" /> または <paramref name="selectionCriteria" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="selectorType" /> パラメーターが正しくありません。</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="selectorType" /> パラメーターは <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" /> ですが、<paramref name="selectionCriteria" /> が有効な XML スキーマ定義 (XSD) 識別子 (ID) ではありません。</exception>
      <exception cref="T:System.ArgumentException">指定した <paramref name="selectionCriteria" /> の <paramref name="selectorType" /> が有効ではありません。
または
<paramref name="sourceUri" /> が <see cref="T:System.IO.Packaging.Package" /> ルート ("/") ではなく、有効な <see cref="T:System.IO.Packaging.PackagePart" /> URI でもありません。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipSelector.Select(System.IO.Packaging.Package)">
      <summary>定義済みの <see cref="T:System.IO.Packaging.PackageRelationship" />、<see cref="P:System.IO.Packaging.PackageRelationshipSelector.SourceUri" />、および <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SelectorType" /> に一致する <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SelectionCriteria" /> オブジェクトのリストを返します。</summary>
      <param name="package">選択基準を基にリレーションシップが選択されるパッケージ。</param>
      <returns>
        <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" /> コンストラクターに対して指定された選択パラメーターに一致するリレーションシップのリスト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="package" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationshipSelector.SelectionCriteria">
      <summary>
        <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" /> コンストラクターに対して指定された選択基準を取得します。</summary>
      <returns>
        <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SelectorType" /> コンストラクターに対して指定された <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" /> または <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Type" /> の <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" /> に基づく選択基準。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationshipSelector.SelectorType">
      <summary>
        <see cref="T:System.IO.Packaging.PackageRelationshipSelectorType" /> コンストラクターに対して指定された <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" /> を取得します。</summary>
      <returns>
        <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" /> コンストラクターに対して指定された <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Type" /> または <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" /> のセレクター タイプ。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationshipSelector.SourceUri">
      <summary>リレーションシップの所有者として <see cref="P:System.IO.Packaging.PackagePart.Uri" /> コンストラクターに対して指定された、ルート パッケージ URI ("/") またはパーツ <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" /> を取得します。</summary>
      <returns>リレーションシップの所有者として <see cref="P:System.IO.Packaging.PackagePart.Uri" /> コンストラクターに対して指定された、ルート パッケージ URI ("/") またはパーツ <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />。</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationshipSelectorType">
      <summary>
        <see cref="T:System.IO.Packaging.PackageRelationship" /> を通して <see cref="T:System.IO.Packaging.PackageRelationshipSelector" /> の選択内容を照合し、結果を返すために使用する選択基準の種類を指定します。</summary>
    </member>
    <member name="F:System.IO.Packaging.PackageRelationshipSelectorType.Id">
      <summary>
        <see cref="T:System.IO.Packaging.PackageRelationship" /> の選択は <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> 別に行われます。</summary>
    </member>
    <member name="F:System.IO.Packaging.PackageRelationshipSelectorType.Type">
      <summary>
        <see cref="T:System.IO.Packaging.PackageRelationship" /> の選択は <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> 別に行われます。</summary>
    </member>
    <member name="T:System.IO.Packaging.PackUriHelper">
      <summary>パック URI オブジェクトを作成および解析するユーティリティ メソッドを提供します。</summary>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.ComparePackUri(System.Uri,System.Uri)">
      <summary>2 つのパック URI が同等であるかどうかを示す値を返します。</summary>
      <param name="firstPackUri">最初のパック URI。</param>
      <param name="secondPackUri">2 番目のパック URI。</param>
      <returns>
        <paramref name="firstPackUri" /> と <paramref name="secondPackUri" /> との間のリレーションシップを示す符号付き整数。  
  [値] 
  説明 
  0 より小さい。 
 <paramref name="firstPackUri" /> は <paramref name="secondPackUri" /> より小さい値です。  

  0 
 <paramref name="firstPackUri" /> は <paramref name="secondPackUri" /> と同じです。  

  0 より大きい。 
 <paramref name="firstPackUri" /> が <paramref name="secondPackUri" /> より大きくなっています。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="firstPackUri" /> または <paramref name="secondPackUri" /> が絶対 URI ではありません。  

または - 
<paramref name="firstPackUri" /> または <paramref name="secondPackUri" /> が "pack://" スキームで始まっていません。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)">
      <summary>2 つのパッケージ パーツの URI が同等であるかどうかを示す値を返します。</summary>
      <param name="firstPartUri">最初の <see cref="T:System.IO.Packaging.PackagePart" /> の URI。</param>
      <param name="secondPartUri">2 番目の <see cref="T:System.IO.Packaging.PackagePart" /> の URI。</param>
      <returns>
        <paramref name="firstPartUri" /> と <paramref name="secondPartUri" /> の間のリレーションシップを示す値。  
  [値] 
  説明 
  0 より小さい。 
 <paramref name="firstPartUri" /> は <paramref name="secondPartUri" /> より小さい値です。  

  0 
 <paramref name="firstPartUri" /> は <paramref name="secondPartUri" /> と同じです。  

  0 より大きい。 
 <paramref name="firstPartUri" /> が <paramref name="secondPartUri" /> より大きくなっています。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="firstPartUri" /> または <paramref name="secondPartUri" /> が有効なパーツ URI 構文ではありません。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.Create(System.Uri)">
      <summary>パッケージを指す新しいパック URI を作成します。</summary>
      <param name="packageUri">参照先の <see cref="T:System.IO.Packaging.Package" /> の URI。</param>
      <returns>指定された <paramref name="packageUri" /> によって参照されている <see cref="T:System.IO.Packaging.Package" /> のパック URI。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="packageUri" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="packageUri" /> は絶対 URI ではありません。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri)">
      <summary>
        <see cref="T:System.IO.Packaging.Package" /> URI およびパッケージ内にあるパーツの URI が指定されている場合に、パック URI を作成します。</summary>
      <param name="packageUri">
        <see cref="T:System.IO.Packaging.Package" /> の URI。</param>
      <param name="partUri">パッケージ内の <see cref="T:System.IO.Packaging.PackagePart" /> の URI。</param>
      <returns>指定された <see cref="T:System.IO.Packaging.PackagePart" /> のパック URI。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="packageUri" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="packageUri" /> は絶対パスではありません。  

または - 
<paramref name="partUri" /> は有効なパーツ URI 構文ではありません。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri,System.String)">
      <summary>
        <see cref="T:System.IO.Packaging.Package" /> URI、パッケージ内にあるパーツの URI、および追加する "#" フラグメントが指定されている場合に、パック URI を作成します。</summary>
      <param name="packageUri">
        <see cref="T:System.IO.Packaging.Package" /> の URI。</param>
      <param name="partUri">パッケージ内の <see cref="T:System.IO.Packaging.PackagePart" /> の URI。</param>
      <param name="fragment">パッケージ パーツ内の要素を識別する「#」参照。</param>
      <returns>指定したパッケージ、パッケージ パーツ、およびフラグメントを識別するパック URI。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="packageUri" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="packageUri" /> は絶対パスではありません。  

または - 
<paramref name="partUri" /> は有効なパーツ URI 構文ではありません。  

または - 
<paramref name="fragment" /> は空であるか、または「#」で始まっています。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)">
      <summary>書式設定された <see cref="T:System.IO.Packaging.PackagePart" /> URI を作成します。</summary>
      <param name="partUri">パッケージ内の <see cref="T:System.IO.Packaging.PackagePart" /> の URI。</param>
      <returns>書式設定された <see cref="T:System.IO.Packaging.PackagePart" /> URI。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> は絶対 <see cref="T:System.Uri" /> ではありません。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)">
      <summary>指定した <see cref="T:System.IO.Packaging.PackagePart" /> URI の正規化形式を返します。</summary>
      <param name="partUri">正規化する <see cref="T:System.IO.Packaging.PackagePart" /> URI。</param>
      <returns>指定した <paramref name="partUri" /> の正規化形式。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> には有効な <see cref="T:System.Uri" /> 構文がありません。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)">
      <summary>指定したパッケージの URI のパッケージ全体を指す内部 URI を返します。</summary>
      <param name="packUri">
        <see cref="T:System.IO.Packaging.Package" /> のURI を返すパック URI。</param>
      <returns>指定した <paramref name="packUri" /> の <see cref="T:System.IO.Packaging.Package" /> の URI。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="packUri" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="packUri" /> は絶対 <see cref="T:System.Uri" /> ではありません。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)">
      <summary>指定されたパック URI 内の <see cref="T:System.IO.Packaging.PackagePart" /> の URI を返します。</summary>
      <param name="packUri">
        <see cref="T:System.IO.Packaging.PackagePart" /> URI を返す元のパック URI。</param>
      <returns>指定された <paramref name="packUri" /> の <see cref="T:System.IO.Packaging.PackagePart" /> の URI、または <paramref name="packUri" /> が <see cref="T:System.IO.Packaging.PackagePart" /> の代わりのパッケージをポイントする場合は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="packUri" /> が <see langword="null" /> の場合。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="packUri" /> が絶対 <see cref="T:System.Uri" /> ではない場合。

または -

<paramref name="packUri" /> に "pack://" スキームがありません。

または - 
<paramref name="packUri" /> から抽出された partUri が、有効な partUri 構文に準拠していません。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)">
      <summary>指定した <see cref="T:System.IO.Packaging.PackagePart" /> に関連付けられているリレーションシップ パーツの URI を返します。</summary>
      <param name="partUri">関連する <see cref="P:System.IO.Packaging.PackagePart.Uri" /> の URI を返す <see cref="T:System.IO.Packaging.PackagePart" /> の <see cref="T:System.IO.Packaging.PackageRelationship" />。</param>
      <returns>
        <paramref name="partUri" /> によって識別される <see cref="T:System.IO.Packaging.PackageRelationship" /> に関連付けられている <see cref="T:System.IO.Packaging.PackagePart" /> パーツの URI。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> 構文がパッケージ パーツ URI に対して有効ではありません。  
または 
 <paramref name="partUri" /> が絶対 URI です。  

または - 
<paramref name="partUri" /> がリレーションシップ パーツを参照しています。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)">
      <summary>指定した 2 つの <see cref="T:System.IO.Packaging.PackagePart" /> URI の間における相対 URI を返します。</summary>
      <param name="sourcePartUri">ソース パーツの URI。</param>
      <param name="targetPartUri">ターゲット パーツの URI。</param>
      <returns>
        <paramref name="sourcePartUri" /> から <paramref name="targetPartUri" /> への相対 URI。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourcePartUri" /> または <paramref name="targetPartUri" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="sourcePartUri" /> または <paramref name="targetPartUri" /> には有効な <see cref="T:System.Uri" /> 構文がありません。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(System.Uri)">
      <summary>指定した URI を持つ <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> から <see cref="T:System.IO.Packaging.PackageRelationship" /> を返します。</summary>
      <param name="relationshipPartUri">
        <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> を返すリレーションシップ パーツの URI。</param>
      <returns>指定した <paramref name="relationshipPartUri" /> を持つリレーションシップの <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> の <see cref="T:System.IO.Packaging.PackagePart" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="relationshipPartUri" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="relationshipPartUri" /> が絶対 URI です。  

または - 
<paramref name="relationshipPartUri" /> 構文が <see cref="T:System.IO.Packaging.PackagePart" /> に対して有効ではありません。  

または - 
<paramref name="relationshipPartUri" /> がリレーションシップ パーツを参照していません。  


または 
リレーションシップ パーツの <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> が別のリレーションシップ パーツを参照しています (無効)。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.IsRelationshipPartUri(System.Uri)">
      <summary>指定した URI が <see cref="T:System.IO.Packaging.PackageRelationship" /> パーツの URI であるかどうかを示す値を返します。</summary>
      <param name="partUri">
        <see cref="T:System.IO.Packaging.PackageRelationship" /> パーツをチェックする URI。</param>
      <returns>
        <paramref name="partUri" /> が <see cref="T:System.IO.Packaging.PackageRelationship" /> パーツを識別する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> が絶対 URI です。  

または - 
<paramref name="partUri" /> が無効な <see cref="T:System.IO.Packaging.PackagePart" /> 構文です。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)">
      <summary>ソース パーツ URI と、ターゲット パーツへの相対パスを含む URI が指定されている場合に、パーツ URI を返します。</summary>
      <param name="sourcePartUri">ソース パーツの URI、または <see cref="T:System.IO.Packaging.Package" /> ルートを指定する "/"。</param>
      <param name="targetUri">ターゲット パーツへの相対 URI。</param>
      <returns>指定した <paramref name="SourcePartUri" /> パラメーターと <paramref name="targetUri" /> パラメーターの間で解決されたターゲット パーツの URI。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourcePartUri" /> または <paramref name="targetUri" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="sourcePartUri" /> が有効なパーツ URI ではありません。  

または - 
<paramref name="targetUri" /> が有効な相対 URI ではありません。</exception>
    </member>
    <member name="F:System.IO.Packaging.PackUriHelper.UriSchemePack">
      <summary>パック URI スキーム名 "pack" を定義します。</summary>
    </member>
    <member name="T:System.IO.Packaging.TargetMode">
      <summary>
        <see cref="T:System.IO.Packaging.PackageRelationship" /> のターゲットが <see cref="T:System.IO.Packaging.Package" /> の内外どちらにあるかを指定します。</summary>
    </member>
    <member name="F:System.IO.Packaging.TargetMode.External">
      <summary>リレーションシップは、パッケージ外部のリソースを参照します。</summary>
    </member>
    <member name="F:System.IO.Packaging.TargetMode.Internal">
      <summary>リレーションシップは、パッケージ内部のパーツを参照します。</summary>
    </member>
    <member name="T:System.IO.Packaging.ZipPackage">
      <summary>抽象 <see cref="T:System.IO.Packaging.Package" /> 基底クラスの派生サブクラスを実装します。<see cref="T:System.IO.Packaging.ZipPackage" /> クラスでは、コンテナー ストアとして ZIP アーカイブが使用されます。 このクラスは継承できません。</summary>
    </member>
    <member name="T:System.IO.Packaging.ZipPackagePart">
      <summary>
        <see cref="T:System.IO.Packaging.ZipPackage" /> に格納されているパーツを表します。</summary>
    </member>
  </members>
</doc>