<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>UIAutomationClient</name>
  </assembly>
  <members>
    <member name="T:System.Windows.Automation.AndCondition">
      <summary>1 つの照合に対して両方が true である必要がある、複数の <see cref="T:System.Windows.Automation.PropertyCondition" /> オブジェクトの組み合わせを表します。</summary>
    </member>
    <member name="M:System.Windows.Automation.AndCondition.#ctor(System.Windows.Automation.Condition[])">
      <summary>すべてのサブ条件が true である場合に true である <see cref="T:System.Windows.Automation.PropertyCondition" /> を作成します。</summary>
      <param name="conditions">複数のサブ条件。</param>
    </member>
    <member name="M:System.Windows.Automation.AndCondition.GetConditions">
      <summary>この条件のサブ条件の配列を取得します。</summary>
      <returns>この条件のサブ条件の配列。</returns>
    </member>
    <member name="T:System.Windows.Automation.Automation">
      <summary>UI オートメーション クライアント アプリケーションのメソッドとフィールドを格納します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Automation.AddAutomationEventHandler(System.Windows.Automation.AutomationEvent,System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.AutomationEventHandler)">
      <summary>UI オートメーション イベントを処理するメソッドを登録します。</summary>
      <param name="eventId">メソッドが処理するイベントの識別子。</param>
      <param name="element">イベント ハンドラーに関連付ける UI オートメーション要素。</param>
      <param name="scope">処理対象のイベントのスコープ (つまり、イベントが要素自体に関するものであるか、先祖および子孫に関するものであるか)。</param>
      <param name="eventHandler">指定したイベントが発生したときに呼び出すメソッド。</param>
    </member>
    <member name="M:System.Windows.Automation.Automation.AddAutomationFocusChangedEventHandler(System.Windows.Automation.AutomationFocusChangedEventHandler)">
      <summary>フォーカス変更イベントを処理するメソッドを登録します。</summary>
      <param name="eventHandler">イベントが発生したときに呼び出すメソッド。</param>
    </member>
    <member name="M:System.Windows.Automation.Automation.AddAutomationPropertyChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.AutomationPropertyChangedEventHandler,System.Windows.Automation.AutomationProperty[])">
      <summary>プロパティ変更イベントを処理するメソッドを登録します。</summary>
      <param name="element">イベント ハンドラーを関連付ける UI オートメーション要素。</param>
      <param name="scope">処理対象のイベントのスコープ (つまり、イベントが要素自体に関するものであるか、先祖および子に関するものであるか)。</param>
      <param name="eventHandler">イベントが発生したときに呼び出すメソッド。</param>
      <param name="properties">対象の UI オートメーション プロパティ。</param>
    </member>
    <member name="M:System.Windows.Automation.Automation.AddStructureChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.StructureChangedEventHandler)">
      <summary>構造変更イベントを処理するメソッドを登録します。</summary>
      <param name="element">イベント ハンドラーを関連付ける UI オートメーション要素。</param>
      <param name="scope">処理対象のイベントのスコープ (つまり、イベントが要素自体に関するものであるか、先祖および子孫に関するものであるか)。</param>
      <param name="eventHandler">構造変更イベントが発生したときに呼び出すメソッド。</param>
    </member>
    <member name="M:System.Windows.Automation.Automation.Compare(System.Int32[],System.Int32[])">
      <summary>ランタイム 識別子 (ID) を格納している 2 つの整数配列を比較し、両者の内容が同一かどうかを確認します。</summary>
      <param name="runtimeId1">最初に比較するランタイム ID。</param>
      <param name="runtimeId2">2 番目に比較するランタイム ID。</param>
      <returns>比較対象のランタイム ID が同じユーザー インターフェイス (UI) 要素を参照している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Automation.Compare(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)">
      <summary>2 つの UI オートメーション要素を比較し、両者が同じ UI 要素を参照している場合は <see langword="true" /> を返します。</summary>
      <param name="el1">最初に比較する UI オートメーション要素。</param>
      <param name="el2">2 番目に比較する UI オートメーション要素。</param>
      <returns>UI 要素のランタイム識別子が同一である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="F:System.Windows.Automation.Automation.ContentViewCondition">
      <summary>コンテンツを格納可能な UI オートメーション要素のみを含む UI オートメーション ツリーの定義済みビューを表します。</summary>
    </member>
    <member name="F:System.Windows.Automation.Automation.ControlViewCondition">
      <summary>コントロールである UI オートメーション要素のみを含む UI オートメーション ツリーの定義済みビューを表します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Automation.PatternName(System.Windows.Automation.AutomationPattern)">
      <summary>指定したコントロール パターンの名前を取得します。</summary>
      <param name="pattern">コントロール パターンの識別子。</param>
      <returns>コントロール パターンのフレンドリ名、または指定したパターンが見つからない場合は null 参照 (Visual Basic では <see langword="Nothing" />)。</returns>
    </member>
    <member name="M:System.Windows.Automation.Automation.PropertyName(System.Windows.Automation.AutomationProperty)">
      <summary>指定した UI オートメーション プロパティの名前を取得します。</summary>
      <param name="property">指定したプロパティの UI オートメーション プロパティ識別子。</param>
      <returns>UI オートメーション プロパティのフレンドリ名。または、指定した UI オートメーション プロパティが見つからない場合は null 参照 (Visual Basic では <see langword="Nothing" />)。</returns>
    </member>
    <member name="F:System.Windows.Automation.Automation.RawViewCondition">
      <summary>すべての UI オートメーション要素を含むUI オートメーション ツリーの定義済みビューを表します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Automation.RemoveAllEventHandlers">
      <summary>登録された UI オートメーション イベント ハンドラーをすべて削除します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Automation.RemoveAutomationEventHandler(System.Windows.Automation.AutomationEvent,System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationEventHandler)">
      <summary>指定した UI オートメーション イベント ハンドラーを削除します。</summary>
      <param name="eventId">イベント識別子。</param>
      <param name="element">イベント ハンドラーを削除する UI オートメーション要素。</param>
      <param name="eventHandler">指定したイベント識別子および UI オートメーション要素の <see cref="M:System.Windows.Automation.Automation.AddAutomationEventHandler(System.Windows.Automation.AutomationEvent,System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.AutomationEventHandler)" /> に渡されたハンドラー メソッド。</param>
    </member>
    <member name="M:System.Windows.Automation.Automation.RemoveAutomationFocusChangedEventHandler(System.Windows.Automation.AutomationFocusChangedEventHandler)">
      <summary>指定したフォーカス変更イベント ハンドラーを削除します。</summary>
      <param name="eventHandler">
        <see cref="M:System.Windows.Automation.Automation.AddAutomationFocusChangedEventHandler(System.Windows.Automation.AutomationFocusChangedEventHandler)" /> に渡されたハンドラー メソッド。</param>
    </member>
    <member name="M:System.Windows.Automation.Automation.RemoveAutomationPropertyChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationPropertyChangedEventHandler)">
      <summary>指定したプロパティ変更イベント ハンドラーを削除します。</summary>
      <param name="element">イベント ハンドラーの削除元の UI オートメーション要素。</param>
      <param name="eventHandler">指定した UI オートメーション要素の <see cref="M:System.Windows.Automation.Automation.AddAutomationPropertyChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.AutomationPropertyChangedEventHandler,System.Windows.Automation.AutomationProperty[])" /> に渡されたハンドラー メソッド。</param>
    </member>
    <member name="M:System.Windows.Automation.Automation.RemoveStructureChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.StructureChangedEventHandler)">
      <summary>指定した構造変更イベント ハンドラーを削除します。</summary>
      <param name="element">イベント ハンドラーの削除元の UI オートメーション要素。</param>
      <param name="eventHandler">指定した UI オートメーション要素の <see cref="M:System.Windows.Automation.Automation.AddStructureChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.StructureChangedEventHandler)" /> に渡されたハンドラー メソッド。</param>
    </member>
    <member name="T:System.Windows.Automation.AutomationElement">
      <summary>Automation ツリー内の UI Automation 要素を表します。UI Automation クライアント アプリケーションによって識別子として使用される値を格納します。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty">
      <summary>
        <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AcceleratorKey" /> プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.AccessKeyProperty">
      <summary>
        <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AccessKey" /> プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.AsyncContentLoadedEvent">
      <summary>非同期でコンテンツを読み込んでいる間に発生するイベントを識別します。</summary>
    </member>
    <member name="T:System.Windows.Automation.AutomationElement.AutomationElementInformation">
      <summary>
        <see cref="P:System.Windows.Automation.AutomationElement.Cached" /> プロパティまたは <see cref="P:System.Windows.Automation.AutomationElement.Current" /> プロパティによって使用されるプロパティ アクセサーを格納します。</summary>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AcceleratorKey">
      <summary>要素のアクセラレータ キーの組み合わせを格納する文字列を取得します。</summary>
      <returns>要素に関連付けられているアクションを呼び出すキーの組み合わせのシーケンス。</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AccessKey">
      <summary>要素のアクセス キー文字を格納する文字列を取得します。</summary>
      <returns>要素に関連付けられる文字。その要素をアクティブ化するために使用されます。</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId">
      <summary>要素の UI オートメーション 識別子 (ID) を格納する文字列を取得します。</summary>
      <returns>コンテナー内の兄弟間で一意である要素の ID。</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.BoundingRectangle">
      <summary>要素を完全に囲む四角形の座標を取得します。</summary>
      <returns>囲んでいる四角形のポイント座標。</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ClassName">
      <summary>コントロールの開発者によって割り当てられた、要素のクラス名を格納する文字列を取得します。</summary>
      <returns>コントロールの開発者によって割り当てられたクラス名。</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ControlType">
      <summary>要素の <see cref="T:System.Windows.Automation.ControlType" /> を取得します。</summary>
      <returns>この要素の相互作用モデル。 既定値は <see cref="F:System.Windows.Automation.ControlType.Custom" /> です。</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.FrameworkId">
      <summary>基になる UI フレームワークの名前を取得します。</summary>
      <returns>"Win32"、"WinForm"、"DirectUI" などの UI フレームワーク名。 既定値は空の文字列です。</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.HasKeyboardFocus">
      <summary>要素にキーボード フォーカスがあるかどうかを示す値を取得します。</summary>
      <returns>要素にキーボード フォーカスがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.HelpText">
      <summary>要素に関連付けられたヘルプ テキストを取得します。</summary>
      <returns>要素のツールヒント ヘルプ テキスト。</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsContentElement">
      <summary>要素がコンテンツ要素かどうかを指定する値を取得します。</summary>
      <returns>要素がコンテンツ要素である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsControlElement">
      <summary>要素がコントロールとして表示されるかどうかを示す値を取得します。</summary>
      <returns>要素がコントロールとして表示される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled">
      <summary>ユーザー インターフェイス (UI)要素によって参照されるUI オートメーション 項目が有効かどうかを示す値を取得します。</summary>
      <returns>コントロールが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsKeyboardFocusable">
      <summary>UI オートメーション要素がキーボード フォーカスを受け入れることができるかどうかを示す値を取得します。</summary>
      <returns>コントロールがキーボード フォーカスを受け取ることができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsOffscreen">
      <summary>UI オートメーション要素を画面に表示するかどうかを示す値を取得します。</summary>
      <returns>コントロールを表示しない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsPassword">
      <summary>保護されたコンテンツが UI オートメーション要素に格納されているかどうか示す値を取得します。</summary>
      <returns>保護されたコンテンツが要素に格納されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsRequiredForForm">
      <summary>UI オートメーション要素がフォームの必須要素かどうかを示す値を取得します。</summary>
      <returns>要素が必須要素である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemStatus">
      <summary>要素内の項目のステータスの説明を取得します。</summary>
      <returns>ステータスの説明。</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemType">
      <summary>項目の種類の説明を取得します。</summary>
      <returns>項目を説明する、ローカライズされた文字列。</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.LabeledBy">
      <summary>この要素のテキスト ラベルを格納する要素を取得します。</summary>
      <returns>この要素のラベルとなっている要素。</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.LocalizedControlType">
      <summary>コントロール型の説明を取得します。</summary>
      <returns>"ボタン" など、コントロール型のローカライズされた説明。</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name">
      <summary>要素の名前を取得します。</summary>
      <returns>ユーザー インターフェイス (UI) 要素の名前。</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.NativeWindowHandle">
      <summary>要素のウィンドウ ハンドルを取得します。</summary>
      <returns>ウィンドウのハンドルが存在する場合はウィンドウのハンドル。存在しない場合は 0。</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.Orientation">
      <summary>コントロールの向きを取得します。</summary>
      <returns>方向。</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ProcessId">
      <summary>この要素のプロセス 識別子 (ID) を取得します。</summary>
      <returns>要素をホストするプロセスの ID。 このプロパティの既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.AutomationFocusChangedEvent">
      <summary>フォーカスが変更されたときに発生するイベントを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.AutomationIdProperty">
      <summary>要素を識別するために使用される <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId" /> プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.AutomationPropertyChangedEvent">
      <summary>プロパティ変更イベントを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.BoundingRectangleProperty">
      <summary>
        <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.BoundingRectangle" /> プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.Cached">
      <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> オブジェクトのキャッシュされた UI オートメーション プロパティ値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.AutomationElement" /> のキャッシュされたプロパティ値を格納する構造体。</returns>
      <exception cref="T:System.InvalidOperationException">キャッシュされたプロパティがありません。</exception>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">
        <see cref="T:System.Windows.Automation.AutomationElement" /> の UI はなくなりました。</exception>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.CachedChildren">
      <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> のキャッシュされた子要素を取得します。</summary>
      <returns>子要素のコレクション。 要素に子がない場合、このコレクションは空になります。</returns>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">
        <see cref="T:System.Windows.Automation.AutomationElement" /> の UI はなくなりました。</exception>
      <exception cref="T:System.InvalidOperationException">この要素の子をキャッシュする要求は行われていません。</exception>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.CachedParent">
      <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> のキャッシュされた親を取得します。</summary>
      <returns>親要素。 指定された要素<see langword="null" />に親がない場合 (たとえば、この要素がルートノードの場合)、戻り値はになります。</returns>
      <exception cref="T:System.InvalidOperationException">親要素はキャッシュされていません。</exception>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">
        <see cref="T:System.Windows.Automation.AutomationElement" /> の UI はなくなりました。</exception>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.ClassNameProperty">
      <summary>
        <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ClassName" /> プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.ClickablePointProperty">
      <summary>クリック可能なポイントのプロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.ControlTypeProperty">
      <summary>
        <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ControlType" /> プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.CultureProperty">
      <summary>カルチャ プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.Current">
      <summary>
        <see cref="T:System.Windows.Automation.AutomationElement" /> の現在のプロパティ値を取得します。</summary>
      <returns>現在のプロパティ値を格納する構造体。</returns>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">
        <see cref="T:System.Windows.Automation.AutomationElement" /> の UI はなくなりました。</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.Equals(System.Object)">
      <summary>指定した <see cref="T:System.Windows.Automation.AutomationElement" /> の値が、この <see cref="T:System.Windows.Automation.AutomationElement" /> の値と同一かどうかを判断します。</summary>
      <param name="obj">比較対象の <see cref="T:System.Windows.Automation.AutomationElement" />。</param>
      <returns>指定した <see cref="T:System.Windows.Automation.AutomationElement" /> が、この <see cref="T:System.Windows.Automation.AutomationElement" /> と等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.Finalize">
      <summary>オブジェクトが、ガベージ コレクションによって収集される前に、リソースの解放とその他のクリーンアップ操作の実行を試みることができるようにします。</summary>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.FindAll(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)">
      <summary>指定した条件を満たすすべての <see cref="T:System.Windows.Automation.AutomationElement" /> オブジェクトを返します。</summary>
      <param name="scope">検索のスコープを指定する、値のビットごとの組み合わせ。</param>
      <param name="condition">照合する検索条件を格納するオブジェクト。</param>
      <returns>指定した条件を満たすオブジェクトのコレクション。 一致がない場合は、空のコレクションが返されます。</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.FindFirst(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)">
      <summary>指定した条件と一致する最初の子要素または子孫要素を返します。</summary>
      <param name="scope">検索のスコープを指定する、値のビットごとの組み合わせ。</param>
      <param name="condition">照合する検索条件を格納するオブジェクト。</param>
      <returns>条件を満たす最初の要素。一致が見つからなかった場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.FocusedElement">
      <summary>現在フォーカスがある <see cref="T:System.Windows.Automation.AutomationElement" /> を取得します。</summary>
      <returns>フォーカスがある UI 要素。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.FrameworkIdProperty">
      <summary>
        <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.FrameworkId" /> プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.FromHandle(System.IntPtr)">
      <summary>指定したウィンドウ ハンドルによって参照される ユーザー インターフェイス (UI) 項目の新しい <see cref="T:System.Windows.Automation.AutomationElement" /> オブジェクトを取得します。</summary>
      <param name="hwnd">UI 要素のハンドル。</param>
      <returns>
        <paramref name="hwnd" /> によって識別される UI 項目の <see cref="T:System.Windows.Automation.AutomationElement" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.FromLocalProvider(System.Windows.Automation.Provider.IRawElementProviderSimple)">
      <summary>ローカル <see cref="T:System.Windows.Automation.Provider.IRawElementProviderSimple" /> 実装から新しい <see cref="T:System.Windows.Automation.AutomationElement" /> オブジェクトを取得します。</summary>
      <param name="localImpl">プロバイダー オブジェクト。</param>
      <returns>プロバイダー オブジェクトによって提供される要素を表す <see cref="T:System.Windows.Automation.AutomationElement" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.FromPoint(System.Windows.Point)">
      <summary>デスクトップ上の指定したポイントにある <see cref="T:System.Windows.Automation.AutomationElement" /> 項目の新しい ユーザー インターフェイス (UI) オブジェクトを取得します。</summary>
      <param name="pt">UI 要素があるデスクトップ上の物理的な画面座標。</param>
      <returns>指定したポイントにある UI 項目。</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.GetCachedPattern(System.Windows.Automation.AutomationPattern)">
      <summary>指定したパターンをこの <see cref="T:System.Windows.Automation.AutomationElement" /> のキャッシュから取得します。</summary>
      <param name="pattern">取得するパターンの識別子。</param>
      <returns>指定したパターンを表すオブジェクト。 一致するパターンがない場合は、<see langword="null" /> が返されます。</returns>
      <exception cref="T:System.InvalidOperationException">要求したパターンはキャッシュ内に存在しないか、この要素ではサポートされていません。</exception>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">
        <see cref="T:System.Windows.Automation.AutomationElement" /> の UI はなくなりました。</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.GetCachedPropertyValue(System.Windows.Automation.AutomationProperty)">
      <summary>指定したプロパティの値をこの <see cref="T:System.Windows.Automation.AutomationElement" /> のキャッシュから取得します。 ターゲットユーザー インターフェイス (UI) 要素で明示的にサポートされていないプロパティに対しては、そのプロパティ型の適切な既定値が返されます。</summary>
      <param name="property">取得するプロパティの識別子。</param>
      <returns>指定したプロパティの値が格納されているオブジェクト。</returns>
      <exception cref="T:System.InvalidOperationException">要求されたプロパティがキャッシュ内にありません。</exception>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">
        <see cref="T:System.Windows.Automation.AutomationElement" /> 用の ユーザー インターフェイス (UI) は存在しません。</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.GetCachedPropertyValue(System.Windows.Automation.AutomationProperty,System.Boolean)">
      <summary>指定したプロパティの値をこの <see cref="T:System.Windows.Automation.AutomationElement" /> のキャッシュから取得します。既定のプロパティを無視するように指定することもできます。</summary>
      <param name="property">取得するプロパティの識別子。</param>
      <param name="ignoreDefaultValue">指定したプロパティがサポートされていない場合に、既定値を無視するかどうかを指定する値。</param>
      <returns>指定したプロパティの値を格納するオブジェクト。または、要素が値を提供せず、<paramref name="ignoreDefaultValue" /> が <see langword="true" /> である場合は <see cref="F:System.Windows.Automation.AutomationElement.NotSupported" />。</returns>
      <exception cref="T:System.InvalidOperationException">要求されたプロパティがキャッシュ内にありません。</exception>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">
        <see cref="T:System.Windows.Automation.AutomationElement" /> の UI はなくなりました。</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.GetClickablePoint">
      <summary>
        <see cref="T:System.Windows.Automation.AutomationElement" /> のクリック可能なポイントを取得します。</summary>
      <returns>クライアントがこの要素をクリックするために使用できるポイントの物理的な画面座標。</returns>
      <exception cref="T:System.Windows.Automation.NoClickablePointException">クリック可能なポイントはありません。</exception>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">
        <see cref="T:System.Windows.Automation.AutomationElement" /> の UI はなくなりました。</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.GetCurrentPattern(System.Windows.Automation.AutomationPattern)">
      <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> の指定したパターン オブジェクトを取得します。</summary>
      <param name="pattern">取得するパターンの識別子。</param>
      <returns>パターン オブジェクト (指定したパターンが現在 <see cref="T:System.Windows.Automation.AutomationElement" /> でサポートされている場合)。</returns>
      <exception cref="T:System.InvalidOperationException">パターンは要素でサポートされていません。</exception>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">
        <see cref="T:System.Windows.Automation.AutomationElement" /> の UI はなくなりました。</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(System.Windows.Automation.AutomationProperty)">
      <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> の指定したプロパティの値を取得します。 ターゲットユーザー インターフェイス (UI) 要素で明示的にサポートされていないプロパティに対しては、そのプロパティ型の適切な既定値が返されます。</summary>
      <param name="property">取得するプロパティを指定する UI オートメーション プロパティ識別子。</param>
      <returns>指定したプロパティの値が格納されているオブジェクト。</returns>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">
        <see cref="T:System.Windows.Automation.AutomationElement" /> の UI はなくなりました。</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(System.Windows.Automation.AutomationProperty,System.Boolean)">
      <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> の指定したプロパティの値を取得します。既定のプロパティを無視するように指定することもできます。</summary>
      <param name="property">取得するプロパティを指定する UI オートメーション プロパティ識別子。</param>
      <param name="ignoreDefaultValue">指定したプロパティがサポートされている場合に、既定値を無視するかどうかを指定する値。</param>
      <returns>指定したプロパティの値を格納するオブジェクト。または、要素が値を提供せず、<paramref name="ignoreDefaultValue" /> が <see langword="true" /> である場合は <see cref="F:System.Windows.Automation.AutomationElement.NotSupported" />。</returns>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">
        <see cref="T:System.Windows.Automation.AutomationElement" /> の UI はなくなりました。</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.GetHashCode">
      <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> のハッシュ コードを取得します。</summary>
      <returns>32 ビット符号付き整数ハッシュ コード。</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.GetRuntimeId">
      <summary>ユーザー インターフェイス (UI) 項目に割り当てられた一意の識別子を取得します。</summary>
      <returns>ランタイム識別子を表す整数の配列。</returns>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">
        <see cref="T:System.Windows.Automation.AutomationElement" /> の UI はなくなりました。</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.GetSupportedPatterns">
      <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> がサポートするコントロール パターンを取得します。</summary>
      <returns>サポートされているコントロール パターンを表す <see cref="T:System.Windows.Automation.AutomationPattern" /> オブジェクトの配列。</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.GetSupportedProperties">
      <summary>要素でサポートされているプロパティの識別子を取得します。</summary>
      <returns>サポートされているプロパティの識別子の配列。</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.GetUpdatedCache(System.Windows.Automation.CacheRequest)">
      <summary>更新されたキャッシュを持つ新しい <see cref="T:System.Windows.Automation.AutomationElement" /> を取得します。</summary>
      <param name="request">更新されたキャッシュに含めるパターンとプロパティ。</param>
      <returns>更新されたキャッシュを持つ新しい <see cref="T:System.Windows.Automation.AutomationElement" />。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.HasKeyboardFocusProperty">
      <summary>
        <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.HasKeyboardFocus" /> プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.HelpTextProperty">
      <summary>
        <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.HelpText" /> プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsContentElementProperty">
      <summary>
        <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsContentElement" /> プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsControlElementProperty">
      <summary>
        <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsControlElement" /> プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsDockPatternAvailableProperty">
      <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> で <see cref="T:System.Windows.Automation.DockPattern" /> コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsEnabledProperty">
      <summary>
        <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled" /> が参照するユーザー インターフェイス (UI) 項目が有効かどうかを指定する <see cref="T:System.Windows.Automation.AutomationElement" /> プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsExpandCollapsePatternAvailableProperty">
      <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> で <see cref="T:System.Windows.Automation.ExpandCollapsePattern" /> コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsGridItemPatternAvailableProperty">
      <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> で <see cref="T:System.Windows.Automation.GridItemPattern" /> コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsGridPatternAvailableProperty">
      <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> で <see cref="T:System.Windows.Automation.GridPattern" /> コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsInvokePatternAvailableProperty">
      <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> で <see cref="T:System.Windows.Automation.InvokePattern" /> コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsItemContainerPatternAvailableProperty">
      <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> で <see cref="T:System.Windows.Automation.ItemContainerPattern" /> コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsKeyboardFocusableProperty">
      <summary>
        <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsKeyboardFocusable" /> プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsMultipleViewPatternAvailableProperty">
      <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> で <see cref="T:System.Windows.Automation.MultipleViewPattern" /> コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsOffscreenProperty">
      <summary>
        <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsOffscreen" /> 項目が画面に表示されているかどうかを示す ユーザー インターフェイス (UI) プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsPasswordProperty">
      <summary>
        <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsPassword" /> プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsRangeValuePatternAvailableProperty">
      <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> で <see cref="T:System.Windows.Automation.RangeValuePattern" /> コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsRequiredForFormProperty">
      <summary>
        <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsRequiredForForm" /> プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsScrollItemPatternAvailableProperty">
      <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> に対して <see cref="T:System.Windows.Automation.ScrollItemPattern" /> コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsScrollPatternAvailableProperty">
      <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> で <see cref="T:System.Windows.Automation.ScrollPattern" /> コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsSelectionItemPatternAvailableProperty">
      <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> で <see cref="T:System.Windows.Automation.SelectionItemPattern" /> コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsSelectionPatternAvailableProperty">
      <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> で <see cref="T:System.Windows.Automation.SelectionPattern" /> コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsSynchronizedInputPatternAvailableProperty">
      <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> で <see cref="T:System.Windows.Automation.SynchronizedInputPattern" /> コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsTableItemPatternAvailableProperty">
      <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> で <see cref="T:System.Windows.Automation.TableItemPattern" /> コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsTablePatternAvailableProperty">
      <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> で <see cref="T:System.Windows.Automation.TablePattern" /> コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsTextPatternAvailableProperty">
      <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> で <see cref="T:System.Windows.Automation.TextPattern" /> コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsTogglePatternAvailableProperty">
      <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> で <see cref="T:System.Windows.Automation.TogglePattern" /> コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsTransformPatternAvailableProperty">
      <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> で <see cref="T:System.Windows.Automation.TransformPattern" /> コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsValuePatternAvailableProperty">
      <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> で <see cref="T:System.Windows.Automation.ValuePattern" /> コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsVirtualizedItemPatternAvailableProperty">
      <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> で <see cref="T:System.Windows.Automation.VirtualizedItemPattern" /> コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsWindowPatternAvailableProperty">
      <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> で <see cref="T:System.Windows.Automation.WindowPattern" /> コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.ItemStatusProperty">
      <summary>複雑な項目の視覚的表現のステータスを指定する <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemStatus" /> プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.ItemTypeProperty">
      <summary>
        <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemType" /> プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.LabeledByProperty">
      <summary>コントロールに関連付けられたラベルを識別する <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.LabeledBy" /> プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.LayoutInvalidatedEvent">
      <summary>レイアウトが無効になったときに発生するイベントを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.LocalizedControlTypeProperty">
      <summary>ローカル言語で <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.LocalizedControlType" /> プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.MenuClosedEvent">
      <summary>メニューを閉じたときに発生するイベントを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.MenuOpenedEvent">
      <summary>メニューを開いたときに発生するイベントを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.NameProperty">
      <summary>
        <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name" /> プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.NativeWindowHandleProperty">
      <summary>
        <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.NativeWindowHandle" /> プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.NotSupported">
      <summary>プロパティがサポートされないことを示します。</summary>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.op_Equality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)">
      <summary>指定した <see cref="T:System.Windows.Automation.AutomationElement" /> オブジェクトが同じユーザー インターフェイス (UI) 要素を参照しているかどうかを示す値を返します。</summary>
      <param name="left">比較対象となる最初の <see cref="T:System.Windows.Automation.AutomationElement" />。</param>
      <param name="right">比較対象となる 2 番目の <see cref="T:System.Windows.Automation.AutomationElement" />。</param>
      <returns>2 つの <see cref="T:System.Windows.Automation.AutomationElement" /> オブジェクトが同じ UI 要素を参照している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.op_Inequality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)">
      <summary>指定した <see cref="T:System.Windows.Automation.AutomationElement" /> オブジェクトが別のユーザー インターフェイス (UI) 要素を参照しているかどうかを示す値を返します。</summary>
      <param name="left">比較対象となる最初の <see cref="T:System.Windows.Automation.AutomationElement" />。</param>
      <param name="right">比較対象となる 2 番目の <see cref="T:System.Windows.Automation.AutomationElement" />。</param>
      <returns>2 つのオブジェクトが別の UI 要素を参照している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.OrientationProperty">
      <summary>
        <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.Orientation" /> プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.PositionInSetProperty">
      <summary>兄弟と見なされる要素セット内のオートメーション要素の序数位置を記述します。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.ProcessIdProperty">
      <summary>
        <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ProcessId" /> プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.RootElement">
      <summary>現在のデスクトップのルート <see cref="T:System.Windows.Automation.AutomationElement" /> を取得します。</summary>
      <returns>ルート要素。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.RuntimeIdProperty">
      <summary>要素のランタイム識別子を格納するプロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.SetFocus">
      <summary>
        <see cref="T:System.Windows.Automation.AutomationElement" /> にフォーカスを設定します。</summary>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">
        <see cref="T:System.Windows.Automation.AutomationElement" /> の UI はなくなりました。</exception>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.SizeOfSetProperty">
      <summary>グループまたはセット内の兄弟と見なされるオートメーション要素の数を記述します。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.StructureChangedEvent">
      <summary>UI オートメーション ツリー構造が変更されたときに発生するイベントを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.ToolTipClosedEvent">
      <summary>ツールヒントが閉じたときに発生するイベントを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.ToolTipOpenedEvent">
      <summary>ツールヒントが開いたときに発生するイベントを識別します。</summary>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.TryGetCachedPattern(System.Windows.Automation.AutomationPattern,System.Object@)">
      <summary>キャッシュからコントロール パターンを取得します。</summary>
      <param name="pattern">取得するコントロール パターンの識別子。</param>
      <param name="patternObject">戻り時に、キャッシュ内にパターンが存在する場合はそのパターンが格納されます。それ以外の場合は <see langword="null" /> が格納されます。</param>
      <returns>キャッシュ内にパターンが存在する場合は <see langword="true" />。キャッシュ内に存在しない場合やサポートされていない場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.TryGetClickablePoint(System.Windows.Point@)">
      <summary>要素内のクリック可能なポイントを取得します。</summary>
      <param name="pt">このメソッドが戻るときに、クリック可能なポイントの物理的な画面座標が格納されます。</param>
      <returns>クリック可能なポイントがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.TryGetCurrentPattern(System.Windows.Automation.AutomationPattern,System.Object@)">
      <summary>コントロール パターンを実装するオブジェクトを取得します。</summary>
      <param name="pattern">取得するコントロール パターンの識別子。</param>
      <param name="patternObject">戻り時に、コントロール パターンがサポートされている場合はそのパターンが格納されます。それ以外の場合は <see langword="null" /> が格納されます。</param>
      <returns>パターンがサポートされている場合は<see langword="true" /> 。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.Automation.AutomationElementCollection">
      <summary>
        <see cref="T:System.Windows.Automation.AutomationElement" /> オブジェクトのコレクションを表します。</summary>
    </member>
    <member name="M:System.Windows.Automation.AutomationElementCollection.CopyTo(System.Array,System.Int32)">
      <summary>コレクションの要素を配列にコピーします。コピー操作は、コピー先の配列の指定したインデックスから開始されます。</summary>
      <param name="array">コレクションの要素のコピー先。</param>
      <param name="index">コピーの開始位置となる、コピー先配列内の 0 から始まるインデックス。</param>
    </member>
    <member name="M:System.Windows.Automation.AutomationElementCollection.CopyTo(System.Windows.Automation.AutomationElement[],System.Int32)">
      <summary>このコレクションの要素を特殊な配列インスタンスにコピーします。コピー操作は、コピー先の配列の指定したインデックスから開始されます。</summary>
      <param name="array">コレクションの要素のコピー先。</param>
      <param name="index">コピーの開始位置となる、コピー先配列内の 0 から始まるインデックス。</param>
      <exception cref="T:System.ArgumentException">コピー先の配列のサイズが十分に大きくないか、<paramref name="index" /> が配列の境界の外側にあります。</exception>
    </member>
    <member name="P:System.Windows.Automation.AutomationElementCollection.Count">
      <summary>このコレクション内の要素の数を取得します。</summary>
      <returns>要素の数。</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationElementCollection.GetEnumerator">
      <summary>コレクション内の項目を反復処理するために使用できる列挙子を返します。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.AutomationElementCollection" /> を反復処理するために使用できる列挙子。</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElementCollection.IsSynchronized">
      <summary>
        <see cref="T:System.Windows.Automation.AutomationElementCollection" /> オブジェクトが同期されている (スレッド セーフである) かどうかを示す値を取得します。</summary>
      <returns>常に <see langword="false" /> を返します。</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElementCollection.Item(System.Int32)">
      <summary>指定されたインデックス位置にある <see cref="T:System.Windows.Automation.AutomationElement" /> を取得します。</summary>
      <param name="index">コレクション内の要素の 0 から始まるインデックス。</param>
      <returns>指定されたインデックス位置にある <see cref="T:System.Windows.Automation.AutomationElement" />。</returns>
      <exception cref="T:System.IndexOutOfRangeException">負の整数が <paramref name="index" /> に対して指定されたか、<paramref name="index" /> が <see cref="P:System.Windows.Automation.AutomationElementCollection.Count" /> 以上です。</exception>
    </member>
    <member name="P:System.Windows.Automation.AutomationElementCollection.SyncRoot">
      <summary>
        <see cref="T:System.Windows.Automation.AutomationElementCollection" /> コレクションへのアクセスを同期するために使用できるオブジェクトを取得します。</summary>
      <returns>コレクションへのアクセスを同期するために使用できるオブジェクト。</returns>
    </member>
    <member name="T:System.Windows.Automation.AutomationElementMode">
      <summary>UI オートメーション要素を返すときに使用する参照の型を指定する値を格納します。 これらの値は、<see cref="P:System.Windows.Automation.CacheRequest.AutomationElementMode" /> プロパティで使用されます。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementMode.Full">
      <summary>返される要素に、基になる UI への完全参照を含めるように指定します。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementMode.None">
      <summary>返される要素に、基になる UI への参照を含めず、キャッシュされた情報だけを含めるように指定します。 このモードは、項目自体への参照を取得しないでリスト ボックス内の項目の名前を取得する場合などに使用できます。</summary>
    </member>
    <member name="T:System.Windows.Automation.AutomationFocusChangedEventArgs">
      <summary>フォーカス変更イベントに対してデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Automation.AutomationFocusChangedEventArgs.#ctor(System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Windows.Automation.AutomationFocusChangedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="idObject">フォーカスを受け取ったオブジェクトの 識別子 (ID)。</param>
      <param name="idChild">フォーカスを受け取ったオブジェクトの子 ID。</param>
    </member>
    <member name="P:System.Windows.Automation.AutomationFocusChangedEventArgs.ChildId">
      <summary>フォーカスを受け取るオブジェクトの子 Microsoft Active Accessibility 識別子を取得します。</summary>
      <returns>識別子。</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationFocusChangedEventArgs.ObjectId">
      <summary>イベントを生成した Microsoft Active Accessibility オブジェクトの識別子 (ID) を取得します。</summary>
      <returns>フォーカスを受け取るユーザー インターフェイス (UI)要素の ID。 使用可能な値については、Microsoft Active Accessibility ドキュメントの「オブジェクト識別子」を参照してください。</returns>
    </member>
    <member name="T:System.Windows.Automation.AutomationFocusChangedEventHandler">
      <summary>フォーカスが変更されたときに UI オートメーション プロバイダーで発生するイベントを処理する UI オートメーション クライアント アプリケーションによって実装されるメソッドを表します。</summary>
      <param name="sender">イベントを発生させたオブジェクト。</param>
      <param name="e">イベントに関する情報。</param>
    </member>
    <member name="T:System.Windows.Automation.BasePattern">
      <summary>コントロール パターン クラスの基本実装を提供します。</summary>
    </member>
    <member name="M:System.Windows.Automation.BasePattern.Finalize">
      <summary>オブジェクトがガベージ コレクションによってクリアされる前に、リソースを解放し、その他のクリーンアップ操作を実行します。</summary>
    </member>
    <member name="T:System.Windows.Automation.CacheRequest">
      <summary>
        <see cref="T:System.Windows.Automation.AutomationElement" /> が取得されるときに、UI オートメーション フレームワークがキャッシュするプロパティおよびパターンを指定します。</summary>
    </member>
    <member name="M:System.Windows.Automation.CacheRequest.#ctor">
      <summary>
        <see cref="T:System.Windows.Automation.CacheRequest" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Automation.CacheRequest.Activate">
      <summary>この <see cref="T:System.Windows.Automation.CacheRequest" /> を、同じスレッドで <see cref="T:System.Windows.Automation.AutomationElement" /> が要求されたときに返される項目のアクティブな指定として設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.CacheRequest" /> を破棄するために使用できるオブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationPattern)">
      <summary>指定した <see cref="T:System.Windows.Automation.AutomationPattern" /> 識別子を、この <see cref="T:System.Windows.Automation.CacheRequest" /> に追加します。</summary>
      <param name="pattern">キャッシュするパターンを指定する識別子。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Automation.CacheRequest" /> がアクティブです。</exception>
    </member>
    <member name="M:System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationProperty)">
      <summary>指定した <see cref="T:System.Windows.Automation.AutomationProperty" /> 識別子を、この <see cref="T:System.Windows.Automation.CacheRequest" /> に追加します。</summary>
      <param name="property">キャッシュするプロパティ値を指定する識別子。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Automation.CacheRequest" /> がアクティブです。</exception>
    </member>
    <member name="P:System.Windows.Automation.CacheRequest.AutomationElementMode">
      <summary>返される要素に、基になるユーザー インターフェイス (UI) への完全参照を含めるか、またはキャッシュされた情報だけを含めるかを指定する値を取得または設定します。</summary>
      <returns>返される要素に基になるユーザー インターフェイス (UI) への完全参照を含める場合は、<see cref="F:System.Windows.Automation.AutomationElementMode.Full" />。それ以外の場合は <see cref="F:System.Windows.Automation.AutomationElementMode.None" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.CacheRequest.Clone">
      <summary>この <see cref="T:System.Windows.Automation.CacheRequest" /> のコピーを作成します。</summary>
      <returns>現在のオブジェクトの変更可能なコピー。</returns>
    </member>
    <member name="P:System.Windows.Automation.CacheRequest.Current">
      <summary>現在のスレッドでアクティブな <see cref="T:System.Windows.Automation.CacheRequest" /> を取得します。</summary>
      <returns>アクティブな <see cref="T:System.Windows.Automation.CacheRequest" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.CacheRequest.Pop">
      <summary>現在のスレッドの内部スタックから、アクティブな <see cref="T:System.Windows.Automation.CacheRequest" /> を削除します。</summary>
      <exception cref="T:System.InvalidOperationException">スタックに最後にプッシュされたものではないキャッシュ要求を削除しようとしました。</exception>
    </member>
    <member name="M:System.Windows.Automation.CacheRequest.Push">
      <summary>
        <see cref="T:System.Windows.Automation.CacheRequest" /> を内部状態スタックに配置して、現在のスレッドのアクティブな要求にします。</summary>
    </member>
    <member name="P:System.Windows.Automation.CacheRequest.TreeFilter">
      <summary>キャッシュ時に使用する、UI オートメーション要素ツリーのビューを指定する値を取得または設定します。</summary>
      <returns>UI オートメーション 要素ツリーのビュー。 既定のビューは、<see cref="F:System.Windows.Automation.Automation.ControlViewCondition" /> です。</returns>
    </member>
    <member name="P:System.Windows.Automation.CacheRequest.TreeScope">
      <summary>キャッシュをサブツリーのルートに対してだけ実行するか、または子または子孫に対しても実行するかを指定する値を取得または設定します。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.TreeScope.Element" />、<see cref="F:System.Windows.Automation.TreeScope.Children" />、<see cref="F:System.Windows.Automation.TreeScope.Descendants" />、または <see cref="F:System.Windows.Automation.TreeScope.Subtree" /> のうちの 1 つ以上。 既定値は <see cref="F:System.Windows.Automation.TreeScope.Element" /> です。</returns>
      <exception cref="T:System.ArgumentException">プロパティを <see cref="F:System.Windows.Automation.TreeScope.Parent" /> または <see cref="F:System.Windows.Automation.TreeScope.Ancestors" /> に設定しようとしました。</exception>
    </member>
    <member name="T:System.Windows.Automation.ClientSettings">
      <summary>クライアント側プロバイダーをクライアントで使用できるようにするメソッドを格納します。</summary>
    </member>
    <member name="M:System.Windows.Automation.ClientSettings.RegisterClientSideProviderAssembly(System.Reflection.AssemblyName)">
      <summary>クライアント側プロバイダーを格納するアセンブリを登録します。</summary>
      <param name="assemblyName">アセンブリの名前。</param>
      <exception cref="T:System.Windows.Automation.ProxyAssemblyNotLoadedException">アセンブリを読み込めませんでした。</exception>
    </member>
    <member name="M:System.Windows.Automation.ClientSettings.RegisterClientSideProviders(System.Windows.Automation.ClientSideProviderDescription[])">
      <summary>クライアント側プロバイダーを登録します。</summary>
      <param name="clientSideProviderDescription">プロバイダー説明の配列。</param>
      <exception cref="T:System.Windows.Automation.ProxyAssemblyNotLoadedException">アセンブリを読み込めませんでした。</exception>
    </member>
    <member name="T:System.Windows.Automation.ClientSideProviderDescription">
      <summary>クライアント側 UI オートメーション プロバイダーのスコープを表し、このプロバイダーを UI オートメーション クライアント アプリケーションに登録できるようにします。</summary>
    </member>
    <member name="M:System.Windows.Automation.ClientSideProviderDescription.#ctor(System.Windows.Automation.ClientSideProviderFactoryCallback,System.String)">
      <summary>
        <see cref="T:System.Windows.Automation.ClientSideProviderDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="clientSideProviderFactoryCallback">ウィンドウのクライアント側プロバイダーを作成するメソッド。</param>
      <param name="className">プロバイダーが使用されるウィンドウのクラス名。</param>
    </member>
    <member name="M:System.Windows.Automation.ClientSideProviderDescription.#ctor(System.Windows.Automation.ClientSideProviderFactoryCallback,System.String,System.String,System.Windows.Automation.ClientSideProviderMatchIndicator)">
      <summary>
        <see cref="T:System.Windows.Automation.ClientSideProviderDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="clientSideProviderFactoryCallback">ウィンドウのクライアント側プロバイダーを作成するメソッド。</param>
      <param name="className">プロバイダーが使用されるウィンドウのクラス名。</param>
      <param name="imageName">ウィンドウを格納しているプロセスの実行可能ファイルまたは DLL の名前。</param>
      <param name="flags">ウィンドウのクラス名を照合するときの動作を指定するフラグ。</param>
    </member>
    <member name="P:System.Windows.Automation.ClientSideProviderDescription.ClassName">
      <summary>プロバイダーが使用されるウィンドウのクラス名を取得します。</summary>
      <returns>ウィンドウのクラス名。</returns>
    </member>
    <member name="P:System.Windows.Automation.ClientSideProviderDescription.ClientSideProviderFactoryCallback">
      <summary>クライアント側プロバイダーを作成するメソッドを取得します。</summary>
      <returns>コールバック メソッド。</returns>
    </member>
    <member name="P:System.Windows.Automation.ClientSideProviderDescription.Flags">
      <summary>ウィンドウのクラス名を照合するときの動作を指定するフラグを取得します。</summary>
      <returns>値のビットごとの組み合わせ。</returns>
    </member>
    <member name="P:System.Windows.Automation.ClientSideProviderDescription.ImageName">
      <summary>ウィンドウを格納しているプロセスの実行可能ファイルまたはダイナミック リンク ライブラリ (DLL) の名前を取得します。</summary>
      <returns>イメージの名前。</returns>
    </member>
    <member name="T:System.Windows.Automation.ClientSideProviderFactoryCallback">
      <summary>ウィンドウのクライアント側 UI オートメーション プロバイダーを作成するメソッドを表します。</summary>
      <param name="hwnd">プロバイダーを作成する対象となるウィンドウ。</param>
      <param name="idChild">オブジェクトの子 ID。</param>
      <param name="idObject">オブジェクトの ID。</param>
    </member>
    <member name="T:System.Windows.Automation.ClientSideProviderMatchIndicator">
      <summary>
        <see cref="T:System.Windows.Automation.ClientSideProviderDescription" /> 内のクラス名を照合するときの動作を指定する値を格納します。</summary>
    </member>
    <member name="F:System.Windows.Automation.ClientSideProviderMatchIndicator.AllowSubstringMatch">
      <summary>クラス名の比較に、部分文字列比較が使用されるように指定します。</summary>
    </member>
    <member name="F:System.Windows.Automation.ClientSideProviderMatchIndicator.DisallowBaseClassNameMatch">
      <summary>ウィンドウ クラス名を照合するときに、オブジェクトの基本クラスが使用されないように指定します。</summary>
    </member>
    <member name="F:System.Windows.Automation.ClientSideProviderMatchIndicator.None">
      <summary>特殊フラグがありません。</summary>
    </member>
    <member name="T:System.Windows.Automation.Condition">
      <summary>UI オートメーション ツリー内の要素を検索する際に、フィルター処理で使用される条件の基本型。</summary>
    </member>
    <member name="F:System.Windows.Automation.Condition.FalseCondition">
      <summary>常に <see langword="false" /> と評価される <see cref="T:System.Windows.Automation.Condition" /> を表します。</summary>
    </member>
    <member name="F:System.Windows.Automation.Condition.TrueCondition">
      <summary>常に <see langword="true" /> と評価される <see cref="T:System.Windows.Automation.Condition" /> を表します。</summary>
    </member>
    <member name="T:System.Windows.Automation.DockPattern">
      <summary>ドッキング コンテナー内のドッキング プロパティを公開するコントロールを表します。</summary>
    </member>
    <member name="P:System.Windows.Automation.DockPattern.Cached">
      <summary>この <see cref="T:System.Windows.Automation.DockPattern" /> のキャッシュされた UI オートメーション プロパティ値を取得します。</summary>
      <returns>コントロール パターンのキャッシュされた UI オートメーション プロパティ値を格納する構造体。</returns>
      <exception cref="T:System.InvalidOperationException">要求されたプロパティがキャッシュ内にありません。</exception>
    </member>
    <member name="P:System.Windows.Automation.DockPattern.Current">
      <summary>この UI オートメーション の現在の <see cref="T:System.Windows.Automation.DockPattern" />プロパティ値を取得します。</summary>
      <returns>コントロール パターンの現在の UI オートメーション プロパティ値を格納する構造体。</returns>
    </member>
    <member name="T:System.Windows.Automation.DockPattern.DockPatternInformation">
      <summary>
        <see cref="T:System.Windows.Automation.DockPattern" /> アクセサーまたは <see cref="P:System.Windows.Automation.DockPattern.Current" /> アクセサーを使用して、<see cref="P:System.Windows.Automation.DockPattern.Cached" /> オブジェクトのプロパティ値へのアクセスを提供します。</summary>
    </member>
    <member name="P:System.Windows.Automation.DockPattern.DockPatternInformation.DockPosition">
      <summary>ドッキング コンテナー内の <see cref="T:System.Windows.Automation.DockPosition" /> の <see cref="T:System.Windows.Automation.AutomationElement" /> を取得します。</summary>
      <returns>そのドッキング コンテナーおよび内部のその他の要素の境界に対して相対的な、要素の <see cref="T:System.Windows.Automation.DockPosition" />。</returns>
    </member>
    <member name="F:System.Windows.Automation.DockPattern.DockPositionProperty">
      <summary>
        <see cref="P:System.Windows.Automation.DockPattern.DockPatternInformation.DockPosition" /> プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.DockPattern.Pattern">
      <summary>
        <see cref="T:System.Windows.Automation.DockPattern" /> コントロール パターンを識別します。</summary>
    </member>
    <member name="M:System.Windows.Automation.DockPattern.SetDockPosition(System.Windows.Automation.DockPosition)">
      <summary>ドッキング コンテナー内の要求された <see cref="T:System.Windows.Automation.AutomationElement" /> に <see cref="T:System.Windows.Automation.DockPosition" /> をドッキングします。</summary>
      <param name="dockPosition">ドッキング コンテナーの境界およびコンテナー内の他の要素に対する相対的なドッキング位置。</param>
      <exception cref="T:System.InvalidOperationException">要求されたドッキング スタイルをコントロールが実行することができない場合。</exception>
    </member>
    <member name="T:System.Windows.Automation.ExpandCollapsePattern">
      <summary>画面上で展開するとコンテンツが表示され、折りたたむとコンテンツが非表示になるコントロールを表します。</summary>
    </member>
    <member name="P:System.Windows.Automation.ExpandCollapsePattern.Cached">
      <summary>この <see cref="T:System.Windows.Automation.ExpandCollapsePattern" /> のキャッシュされた UI オートメーション プロパティ値を取得します。</summary>
      <returns>コントロール パターンのキャッシュされた UI オートメーション プロパティ値を格納する構造体。</returns>
      <exception cref="T:System.InvalidOperationException">要求されたプロパティがキャッシュ内にありません。</exception>
    </member>
    <member name="M:System.Windows.Automation.ExpandCollapsePattern.Collapse">
      <summary>
        <see cref="T:System.Windows.Automation.AutomationElement" /> の子孫ノード、コントロール、またはコンテンツをすべて非表示にします。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Automation.ExpandCollapseState" /> = <see cref="F:System.Windows.Automation.ExpandCollapseState.LeafNode" /> の場合、<see cref="M:System.Windows.Automation.ExpandCollapsePattern.Collapse" /> が呼び出されます。</exception>
    </member>
    <member name="P:System.Windows.Automation.ExpandCollapsePattern.Current">
      <summary>この <see cref="T:System.Windows.Automation.ExpandCollapsePattern" /> の現在の UI オートメーション プロパティ値を取得します。</summary>
      <returns>コントロール パターンの現在の UI オートメーション プロパティ値を格納する構造体。</returns>
    </member>
    <member name="M:System.Windows.Automation.ExpandCollapsePattern.Expand">
      <summary>すべての子ノード、コントロール、または <see cref="T:System.Windows.Automation.AutomationElement" /> のコンテンツを表示します。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Automation.ExpandCollapseState" /> = <see cref="F:System.Windows.Automation.ExpandCollapseState.LeafNode" /> の場合、<see cref="M:System.Windows.Automation.ExpandCollapsePattern.Expand" /> が呼び出されます。</exception>
    </member>
    <member name="T:System.Windows.Automation.ExpandCollapsePattern.ExpandCollapsePatternInformation">
      <summary>
        <see cref="T:System.Windows.Automation.ExpandCollapsePattern" /> アクセサーまたは <see cref="P:System.Windows.Automation.ExpandCollapsePattern.Current" /> アクセサーを使用して、<see cref="P:System.Windows.Automation.ExpandCollapsePattern.Cached" /> オブジェクトのプロパティ値へのアクセスを提供します。</summary>
    </member>
    <member name="P:System.Windows.Automation.ExpandCollapsePattern.ExpandCollapsePatternInformation.ExpandCollapseState">
      <summary>
        <see cref="T:System.Windows.Automation.ExpandCollapseState" /> の <see cref="T:System.Windows.Automation.AutomationElement" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.ExpandCollapseState" /> の <see cref="T:System.Windows.Automation.AutomationElement" />。</returns>
    </member>
    <member name="F:System.Windows.Automation.ExpandCollapsePattern.ExpandCollapseStateProperty">
      <summary>
        <see cref="P:System.Windows.Automation.ExpandCollapsePattern.ExpandCollapsePatternInformation.ExpandCollapseState" /> プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.ExpandCollapsePattern.Pattern">
      <summary>
        <see cref="T:System.Windows.Automation.ExpandCollapsePattern" /> コントロール パターンを識別します。</summary>
    </member>
    <member name="T:System.Windows.Automation.GridItemPattern">
      <summary>
        <see cref="T:System.Windows.Automation.GridPattern" /> をサポートするコンテナーの子コントロールを表します。</summary>
    </member>
    <member name="P:System.Windows.Automation.GridItemPattern.Cached">
      <summary>この <see cref="T:System.Windows.Automation.GridItemPattern" /> のキャッシュされたプロパティ値を取得します。</summary>
      <returns>キャッシュされたプロパティ値。</returns>
      <exception cref="T:System.InvalidOperationException">要求されたプロパティがキャッシュ内にありません。</exception>
    </member>
    <member name="F:System.Windows.Automation.GridItemPattern.ColumnProperty">
      <summary>
        <see cref="P:System.Windows.Automation.GridItemPattern.GridItemPatternInformation.Column" /> プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.GridItemPattern.ColumnSpanProperty">
      <summary>
        <see cref="P:System.Windows.Automation.GridItemPattern.GridItemPatternInformation.ColumnSpan" /> プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.GridItemPattern.ContainingGridProperty">
      <summary>
        <see cref="P:System.Windows.Automation.GridItemPattern.GridItemPatternInformation.ContainingGrid" /> プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Automation.GridItemPattern.Current">
      <summary>この <see cref="T:System.Windows.Automation.GridItemPattern" /> の現在のプロパティ値を取得します。</summary>
      <returns>現在のプロパティ値。</returns>
    </member>
    <member name="T:System.Windows.Automation.GridItemPattern.GridItemPatternInformation">
      <summary>
        <see cref="T:System.Windows.Automation.GridItemPattern" /> アクセサーまたは <see cref="P:System.Windows.Automation.GridItemPattern.Current" /> アクセサーを使用して、<see cref="P:System.Windows.Automation.GridItemPattern.Cached" /> オブジェクトのプロパティ値へのアクセスを提供します。</summary>
    </member>
    <member name="P:System.Windows.Automation.GridItemPattern.GridItemPatternInformation.Column">
      <summary>セルまたは項目を格納する列の序数を取得します。</summary>
      <returns>セルまたは項目を格納する列を識別する、0 から始まる序数。 既定値は 0 です。</returns>
    </member>
    <member name="P:System.Windows.Automation.GridItemPattern.GridItemPatternInformation.ColumnSpan">
      <summary>セルまたは項目がまたがる列の数を取得します。</summary>
      <returns>またがる列の数。 既定値は 1 です。</returns>
    </member>
    <member name="P:System.Windows.Automation.GridItemPattern.GridItemPatternInformation.ContainingGrid">
      <summary>
        <see cref="T:System.Windows.Automation.GridPattern" /> をサポートし、セルまたは項目のコンテナーを表す UI オートメーション要素を取得します。</summary>
      <returns>GridPattern をサポートし、テーブルのセルまたは項目のコンテナーを表す UI オートメーション要素。 既定値は null 参照 (<see langword="Nothing" /> Microsoft Visual Basic .net の場合) です。</returns>
    </member>
    <member name="P:System.Windows.Automation.GridItemPattern.GridItemPatternInformation.Row">
      <summary>セルまたは項目を格納する行の序数を取得します。</summary>
      <returns>テーブル セルまたは項目を格納する行を識別する、0 から始まる序数。 既定値は 0 です。</returns>
    </member>
    <member name="P:System.Windows.Automation.GridItemPattern.GridItemPatternInformation.RowSpan">
      <summary>セルまたは項目がまたがる行の数を取得します。</summary>
      <returns>またがる行の数。 既定値は 1 です。</returns>
    </member>
    <member name="F:System.Windows.Automation.GridItemPattern.Pattern">
      <summary>
        <see cref="T:System.Windows.Automation.GridItemPattern" /> コントロール パターンを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.GridItemPattern.RowProperty">
      <summary>
        <see cref="P:System.Windows.Automation.GridItemPattern.GridItemPatternInformation.Row" /> プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.GridItemPattern.RowSpanProperty">
      <summary>
        <see cref="P:System.Windows.Automation.GridItemPattern.GridItemPatternInformation.RowSpan" /> プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Automation.GridPattern">
      <summary>子要素のコレクションのコンテナーとして機能するコントロールを表します。 このコントロールの子は <see cref="T:System.Windows.Automation.GridItemPattern" /> をサポートし、行と列でスキャン可能な 2 次元の論理座標系で構成されます。</summary>
    </member>
    <member name="P:System.Windows.Automation.GridPattern.Cached">
      <summary>この <see cref="T:System.Windows.Automation.GridPattern" /> のキャッシュされた UI オートメーション プロパティ値を取得します。</summary>
      <returns>コントロール パターンのキャッシュされた UI オートメーション プロパティ値を格納する構造体。</returns>
      <exception cref="T:System.InvalidOperationException">要求されたプロパティがキャッシュ内にありません。</exception>
    </member>
    <member name="F:System.Windows.Automation.GridPattern.ColumnCountProperty">
      <summary>
        <see cref="P:System.Windows.Automation.GridPattern.GridPatternInformation.ColumnCount" /> プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Automation.GridPattern.Current">
      <summary>この <see cref="T:System.Windows.Automation.GridPattern" /> の現在の UI オートメーション プロパティ値を取得します。</summary>
      <returns>コントロール パターンの現在の UI オートメーション プロパティ値を格納する構造体。</returns>
    </member>
    <member name="M:System.Windows.Automation.GridPattern.GetItem(System.Int32,System.Int32)">
      <summary>指定したセルを表す <see cref="T:System.Windows.Automation.AutomationElement" /> を取得します。</summary>
      <param name="row">目的の行の序数。</param>
      <param name="column">目的の列の序数。</param>
      <returns>取得したセルを表す <see cref="T:System.Windows.Automation.AutomationElement" />。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">要求された行座標または列座標が 0 未満です。
または
要求された行座標が <see cref="P:System.Windows.Automation.GridPattern.GridPatternInformation.RowCount" /> を超えているか、列座標が <see cref="P:System.Windows.Automation.GridPattern.GridPatternInformation.ColumnCount" /> を超えています。</exception>
    </member>
    <member name="T:System.Windows.Automation.GridPattern.GridPatternInformation">
      <summary>
        <see cref="T:System.Windows.Automation.GridPattern" /> アクセサーまたは <see cref="P:System.Windows.Automation.GridPattern.Current" /> アクセサーを使用して、<see cref="P:System.Windows.Automation.GridPattern.Cached" /> オブジェクトのプロパティ値へのアクセスを提供します。</summary>
    </member>
    <member name="P:System.Windows.Automation.GridPattern.GridPatternInformation.ColumnCount">
      <summary>グリッド内の列の数を取得します。</summary>
      <returns>グリッド内の列の合計数。</returns>
    </member>
    <member name="P:System.Windows.Automation.GridPattern.GridPatternInformation.RowCount">
      <summary>グリッド内の行の合計数を取得します。</summary>
      <returns>グリッド内の行の合計数。</returns>
    </member>
    <member name="F:System.Windows.Automation.GridPattern.Pattern">
      <summary>
        <see cref="T:System.Windows.Automation.GridPattern" /> コントロール パターンを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.GridPattern.RowCountProperty">
      <summary>
        <see cref="P:System.Windows.Automation.GridPattern.GridPatternInformation.RowCount" /> プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Automation.InvokePattern">
      <summary>単一の明確な処理を開始または実行し、アクティブになったときに状態を保持しないコントロールを表します。</summary>
    </member>
    <member name="M:System.Windows.Automation.InvokePattern.Invoke">
      <summary>要求を送信してコントロールをアクティブ化し、その 1 つの明確なアクションを開始します。</summary>
      <exception cref="T:System.InvalidOperationException">要素が <see cref="T:System.Windows.Automation.InvokePattern" /> コントロール パターンをサポートしていないか、非表示またはブロックされています。</exception>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">この要素は有効ではありません。 UI オートメーション プロバイダーが <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled" /> プロパティの独自の処理を実装した場合に発生する可能性があります。</exception>
    </member>
    <member name="F:System.Windows.Automation.InvokePattern.InvokedEvent">
      <summary>コントロールが呼び出されたとき、またはアクティブになったときに発生するイベントを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.InvokePattern.Pattern">
      <summary>
        <see cref="T:System.Windows.Automation.InvokePattern" /> コントロール パターンを識別します。</summary>
    </member>
    <member name="T:System.Windows.Automation.ItemContainerPattern">
      <summary>項目を管理し、プロパティ値による項目の取得をサポートするオブジェクトを表します。</summary>
    </member>
    <member name="M:System.Windows.Automation.ItemContainerPattern.FindItemByProperty(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationProperty,System.Object)">
      <summary>指定したプロパティ値を持つ要素を取得します。</summary>
      <param name="startAfter">検索の開始位置となるコンテナー内の項目。</param>
      <param name="property">取得する値を格納するプロパティ。</param>
      <param name="value">取得する値。</param>
      <returns>検索条件に一致する最初の項目。一致する項目がない場合は <see langword="null" />。</returns>
    </member>
    <member name="F:System.Windows.Automation.ItemContainerPattern.Pattern">
      <summary>
        <see cref="T:System.Windows.Automation.ItemContainerPattern" /> コントロール パターンを識別します。</summary>
    </member>
    <member name="T:System.Windows.Automation.MultipleViewPattern">
      <summary>同じ情報セットの複数の表現または子コントロールを提供し、その間で切り替えができるようにするコントロールを表します。</summary>
    </member>
    <member name="P:System.Windows.Automation.MultipleViewPattern.Cached">
      <summary>この <see cref="T:System.Windows.Automation.MultipleViewPattern" /> のキャッシュされた UI オートメーション プロパティ値を取得します。</summary>
      <returns>コントロール パターンのキャッシュされた UI オートメーション プロパティ値を格納する構造体。</returns>
      <exception cref="T:System.InvalidOperationException">要求されたプロパティがキャッシュ内にありません。</exception>
    </member>
    <member name="P:System.Windows.Automation.MultipleViewPattern.Current">
      <summary>この UI オートメーション の現在の <see cref="T:System.Windows.Automation.MultipleViewPattern" />プロパティ値を取得します。</summary>
      <returns>コントロール パターンの現在の UI オートメーション プロパティ値を格納する構造体。</returns>
    </member>
    <member name="F:System.Windows.Automation.MultipleViewPattern.CurrentViewProperty">
      <summary>
        <see cref="P:System.Windows.Automation.MultipleViewPattern.MultipleViewPatternInformation.CurrentView" /> プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Automation.MultipleViewPattern.GetViewName(System.Int32)">
      <summary>コントロール固有のビューの名前を取得します。</summary>
      <param name="viewId">コントロール固有のビュー識別子。</param>
      <returns>コントロール固有のビューの名前を表すローカライズされた文字列。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="viewId" /> は、サポートされているビュー コレクションのメンバーではありません。</exception>
    </member>
    <member name="T:System.Windows.Automation.MultipleViewPattern.MultipleViewPatternInformation">
      <summary>
        <see cref="T:System.Windows.Automation.MultipleViewPattern" /> アクセサーまたは <see cref="P:System.Windows.Automation.MultipleViewPattern.Current" /> アクセサーを使用して、<see cref="P:System.Windows.Automation.MultipleViewPattern.Cached" /> オブジェクトのプロパティ値へのアクセスを提供します。</summary>
    </member>
    <member name="P:System.Windows.Automation.MultipleViewPattern.MultipleViewPatternInformation.CurrentView">
      <summary>現在のコントロール固有のビューを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.AutomationElement" /> の現在のビューの整数値。 既定値は 0 です。</returns>
    </member>
    <member name="M:System.Windows.Automation.MultipleViewPattern.MultipleViewPatternInformation.GetSupportedViews">
      <summary>コントロール固有のビュー識別子のコレクションを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.AutomationElement" /> で使用できるビューを識別する整数値のコレクション。 既定値は空の整数配列です。</returns>
    </member>
    <member name="F:System.Windows.Automation.MultipleViewPattern.Pattern">
      <summary>
        <see cref="T:System.Windows.Automation.MultipleViewPattern" /> コントロール パターンを識別します。</summary>
    </member>
    <member name="M:System.Windows.Automation.MultipleViewPattern.SetCurrentView(System.Int32)">
      <summary>現在のコントロールに固有のビューを設定します。</summary>
      <param name="viewId">コントロール固有のビュー ID。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="viewId" /> は、サポートされているビュー コレクションのメンバーではありません。</exception>
    </member>
    <member name="F:System.Windows.Automation.MultipleViewPattern.SupportedViewsProperty">
      <summary>コントロールに固有のビューのコレクションを取得するプロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Automation.NotCondition">
      <summary>指定した <see cref="T:System.Windows.Automation.Condition" /> の否定である <see cref="T:System.Windows.Automation.Condition" /> を表します。</summary>
    </member>
    <member name="M:System.Windows.Automation.NotCondition.#ctor(System.Windows.Automation.Condition)">
      <summary>
        <see cref="T:System.Windows.Automation.NotCondition" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="condition">否定する条件。</param>
    </member>
    <member name="P:System.Windows.Automation.NotCondition.Condition">
      <summary>この <see cref="T:System.Windows.Automation.Condition" /> が否定する <see cref="T:System.Windows.Automation.NotCondition" /> を取得します。</summary>
      <returns>この <see cref="T:System.Windows.Automation.Condition" /> が否定する <see cref="T:System.Windows.Automation.NotCondition" />。</returns>
    </member>
    <member name="T:System.Windows.Automation.OrCondition">
      <summary>いずれかの条件が true の場合に一致が存在する、複数の条件の組み合わせを表します。</summary>
    </member>
    <member name="M:System.Windows.Automation.OrCondition.#ctor(System.Windows.Automation.Condition[])">
      <summary>
        <see cref="T:System.Windows.Automation.OrCondition" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="conditions">一致のためにはいずれかが true である、複数の条件。</param>
    </member>
    <member name="M:System.Windows.Automation.OrCondition.GetConditions">
      <summary>この条件で結合される条件を取得します。</summary>
      <returns>この条件で結合された条件。</returns>
    </member>
    <member name="T:System.Windows.Automation.PropertyCondition">
      <summary>指定した値をプロパティが持つかどうかをテストする <see cref="T:System.Windows.Automation.Condition" /> を表します。</summary>
    </member>
    <member name="M:System.Windows.Automation.PropertyCondition.#ctor(System.Windows.Automation.AutomationProperty,System.Object)">
      <summary>
        <see cref="T:System.Windows.Automation.PropertyCondition" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="property">テスト対象のプロパティ。</param>
      <param name="value">プロパティをテストする値。</param>
    </member>
    <member name="M:System.Windows.Automation.PropertyCondition.#ctor(System.Windows.Automation.AutomationProperty,System.Object,System.Windows.Automation.PropertyConditionFlags)">
      <summary>フラグを使用して、<see cref="T:System.Windows.Automation.PropertyCondition" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="property">テスト対象のプロパティ。</param>
      <param name="value">プロパティをテストする値。</param>
      <param name="flags">比較に影響するフラグ。</param>
    </member>
    <member name="P:System.Windows.Automation.PropertyCondition.Flags">
      <summary>プロパティ値のテストに使用されるフラグを取得します。</summary>
    </member>
    <member name="P:System.Windows.Automation.PropertyCondition.Property">
      <summary>この条件によってテストされているプロパティを取得します。</summary>
    </member>
    <member name="P:System.Windows.Automation.PropertyCondition.Value">
      <summary>この条件によってテストされているプロパティ値を取得します。</summary>
    </member>
    <member name="T:System.Windows.Automation.PropertyConditionFlags">
      <summary>
        <see cref="T:System.Windows.Automation.PropertyCondition" /> で、プロパティ値をテストする方法を指定する値を格納します。</summary>
    </member>
    <member name="F:System.Windows.Automation.PropertyConditionFlags.IgnoreCase">
      <summary>文字列のプロパティ値の比較では大文字と小文字を区別しないことを指定します。</summary>
    </member>
    <member name="F:System.Windows.Automation.PropertyConditionFlags.None">
      <summary>既定の動作を使用してプロパティ値をテストすることを指定します (文字列の比較では大文字と小文字を区別します)。</summary>
    </member>
    <member name="T:System.Windows.Automation.RangeValuePattern">
      <summary>範囲内の値に設定できるコントロールを表します。</summary>
    </member>
    <member name="P:System.Windows.Automation.RangeValuePattern.Cached">
      <summary>この <see cref="T:System.Windows.Automation.RangeValuePattern" /> のキャッシュされたプロパティ値を取得します。</summary>
      <returns>キャッシュされたプロパティ値。</returns>
      <exception cref="T:System.InvalidOperationException">要求されたプロパティがキャッシュ内にありません。</exception>
    </member>
    <member name="P:System.Windows.Automation.RangeValuePattern.Current">
      <summary>この <see cref="T:System.Windows.Automation.RangeValuePattern" /> の現在のプロパティ値を取得します。</summary>
      <returns>現在のプロパティ値。</returns>
    </member>
    <member name="F:System.Windows.Automation.RangeValuePattern.IsReadOnlyProperty">
      <summary>
        <see cref="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.IsReadOnly" /> プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.RangeValuePattern.LargeChangeProperty">
      <summary>
        <see cref="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.LargeChange" /> プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.RangeValuePattern.MaximumProperty">
      <summary>
        <see cref="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.Maximum" /> プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.RangeValuePattern.MinimumProperty">
      <summary>
        <see cref="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.Minimum" /> プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.RangeValuePattern.Pattern">
      <summary>
        <see cref="T:System.Windows.Automation.RangeValuePattern" /> コントロール パターンを識別します。</summary>
    </member>
    <member name="T:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation">
      <summary>
        <see cref="T:System.Windows.Automation.RangeValuePattern" /> アクセサーまたは <see cref="P:System.Windows.Automation.TransformPattern.Current" /> アクセサーを使用して、<see cref="P:System.Windows.Automation.TransformPattern.Cached" /> オブジェクトのプロパティ値へのアクセスを提供します。</summary>
    </member>
    <member name="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.IsReadOnly">
      <summary>UI オートメーション 要素の値が読み取り専用かどうかを指定する値を取得します。</summary>
      <returns>値が読み取り専用の場合は <see langword="true" />。変更可能な場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.LargeChange">
      <summary>
        <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /> プロパティに対して加算または減算されるコントロール固有の大きな変更値を取得します。</summary>
      <returns>大きな変更値、または要素が <see cref="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.LargeChange" /> をサポートしていない場合は <see langword="null" />。 既定値は 0.0 です。</returns>
    </member>
    <member name="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.Maximum">
      <summary>UI オートメーション 要素でサポートされる最大の範囲値を取得します。</summary>
      <returns>UI オートメーション要素によってサポートされる最大<see langword="null" />値。または、要素<see cref="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.Maximum" />がをサポートしていない場合は。 既定値は 0.0 です。</returns>
    </member>
    <member name="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.Minimum">
      <summary>UI オートメーション 要素でサポートされる範囲の最小値を取得します。</summary>
      <returns>UI オートメーション要素によってサポートされる最小<see langword="null" />値。要素がをサポート<see cref="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.Minimum" />していない場合は。 既定値は 0.0 です。</returns>
    </member>
    <member name="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.SmallChange">
      <summary>要素の <see cref="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.Value" /> プロパティに対して加算または減算される、UI オートメーション 要素に固有の小さな変更値を取得します。</summary>
      <returns>UI オートメーション要素に固有の小さな変更値。要素が<see langword="null" />をサポート<see cref="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.SmallChange" />していない場合は。 既定値は 0.0 です。</returns>
    </member>
    <member name="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.Value">
      <summary>UI オートメーション 要素の現在の値を取得します。</summary>
      <returns>UI オートメーション要素の現在の値。要素<see langword="null" />がをサポート<see cref="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.Value" />していない場合は。 既定値は 0.0 です。</returns>
    </member>
    <member name="M:System.Windows.Automation.RangeValuePattern.SetValue(System.Double)">
      <summary>UI オートメーション 要素と関連付けられた値を設定します。</summary>
      <param name="value">要素の新しい値。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> がコントロールの最小値よりも小さいか、最大値よりも大きい。</exception>
    </member>
    <member name="F:System.Windows.Automation.RangeValuePattern.SmallChangeProperty">
      <summary>
        <see cref="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.SmallChange" /> プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.RangeValuePattern.ValueProperty">
      <summary>
        <see cref="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.Value" /> プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Automation.ScrollItemPattern">
      <summary>
        <see cref="T:System.Windows.Automation.ScrollPattern" /> コントロール パターンをサポートするコンテナーの子コントロールを表します。</summary>
    </member>
    <member name="F:System.Windows.Automation.ScrollItemPattern.Pattern">
      <summary>
        <see cref="T:System.Windows.Automation.ScrollItemPattern" /> コントロール パターンを識別します。</summary>
    </member>
    <member name="M:System.Windows.Automation.ScrollItemPattern.ScrollIntoView">
      <summary>コンテナーの可視領域 (ビューポート) 内の <see cref="T:System.Windows.Automation.AutomationElement" /> を表示するために、コンテナー オブジェクトのコンテンツ エリアをスクロールします。</summary>
      <exception cref="T:System.InvalidOperationException">項目は、スクロールして表示できませんでした。</exception>
    </member>
    <member name="T:System.Windows.Automation.ScrollPattern">
      <summary>子要素のコレクションのスクロール可能なコンテナーとして機能するコントロール表します。 この要素の子は、<see cref="T:System.Windows.Automation.ScrollItemPattern" /> をサポートします。</summary>
    </member>
    <member name="P:System.Windows.Automation.ScrollPattern.Cached">
      <summary>この <see cref="T:System.Windows.Automation.ScrollPattern" /> のキャッシュされた UI オートメーション プロパティ値を取得します。</summary>
      <returns>コントロール パターンのキャッシュされた UI オートメーション プロパティ値を格納する構造体。</returns>
      <exception cref="T:System.InvalidOperationException">要求されたプロパティがキャッシュ内にありません。</exception>
    </member>
    <member name="P:System.Windows.Automation.ScrollPattern.Current">
      <summary>この UI オートメーション の現在の <see cref="T:System.Windows.Automation.ScrollPattern" />プロパティ値を取得します。</summary>
      <returns>コントロール パターンの現在の UI オートメーション プロパティ値を格納する構造体。</returns>
    </member>
    <member name="F:System.Windows.Automation.ScrollPattern.HorizontallyScrollableProperty">
      <summary>
        <see cref="P:System.Windows.Automation.ScrollPattern.ScrollPatternInformation.HorizontallyScrollable" /> プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.ScrollPattern.HorizontalScrollPercentProperty">
      <summary>
        <see cref="P:System.Windows.Automation.ScrollPattern.ScrollPatternInformation.HorizontalScrollPercent" /> プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.ScrollPattern.HorizontalViewSizeProperty">
      <summary>
        <see cref="P:System.Windows.Automation.ScrollPattern.ScrollPatternInformation.HorizontalViewSize" /> プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.ScrollPattern.NoScroll">
      <summary>スクロールを実行しないように指定します。</summary>
    </member>
    <member name="F:System.Windows.Automation.ScrollPattern.Pattern">
      <summary>
        <see cref="T:System.Windows.Automation.ScrollPattern" /> コントロール パターンを識別します。</summary>
    </member>
    <member name="M:System.Windows.Automation.ScrollPattern.Scroll(System.Windows.Automation.ScrollAmount,System.Windows.Automation.ScrollAmount)">
      <summary>コンテンツ エリアの可視領域を水平方向および垂直方向にスクロールします。</summary>
      <param name="horizontalAmount">コントロール固有の水平方向インクリメント。 コントロールをこの方向にスクロールできない場合、<see cref="F:System.Windows.Automation.ScrollPattern.NoScroll" /> を渡す必要があります。</param>
      <param name="verticalAmount">コントロール固有の垂直方向インクリメント。 コントロールをこの方向にスクロールできない場合、<see cref="F:System.Windows.Automation.ScrollPattern.NoScroll" /> を渡す必要があります。</param>
      <exception cref="T:System.ArgumentException">コントロールが水平方向スクロールまたは垂直方向スクロールのためだけに <see cref="F:System.Windows.Automation.ScrollAmount.SmallIncrement" /> 値をサポートしているが、<see cref="F:System.Windows.Automation.ScrollAmount.LargeIncrement" /> が渡された。</exception>
      <exception cref="T:System.InvalidOperationException">サポートされていない方向にスクロールしようとしました。</exception>
    </member>
    <member name="M:System.Windows.Automation.ScrollPattern.ScrollHorizontal(System.Windows.Automation.ScrollAmount)">
      <summary>指定した <see cref="T:System.Windows.Automation.ScrollAmount" /> の分、コンテンツ エリアの現在の可視領域を水平方向にスクロールします。</summary>
      <param name="amount">コントロール固有の水平方向 <see cref="T:System.Windows.Automation.ScrollAmount" /> インクリメント。</param>
      <exception cref="T:System.ArgumentException">コントロールは水平または垂直方向のスクロールのためだけに <see cref="F:System.Windows.Automation.ScrollAmount.SmallIncrement" /> 値をサポートしていますが、<see cref="F:System.Windows.Automation.ScrollAmount.LargeIncrement" /> 値が渡されました。</exception>
      <exception cref="T:System.InvalidOperationException">サポートされていない方向にスクロールしようとしました。</exception>
    </member>
    <member name="T:System.Windows.Automation.ScrollPattern.ScrollPatternInformation">
      <summary>
        <see cref="T:System.Windows.Automation.ScrollPattern" /> アクセサーまたは <see cref="P:System.Windows.Automation.ScrollPattern.Current" /> アクセサーを使用して、<see cref="P:System.Windows.Automation.ScrollPattern.Cached" /> オブジェクトのプロパティ値へのアクセスを提供します。</summary>
    </member>
    <member name="P:System.Windows.Automation.ScrollPattern.ScrollPatternInformation.HorizontallyScrollable">
      <summary>UI オートメーション要素を水平方向にスクロールできるかどうかを示す値を取得します。</summary>
      <returns>UI オートメーション要素が水平方向にスクロールできる場合は、<see langword="true" />。それ以外の場合は、<see langword="false" />。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Windows.Automation.ScrollPattern.ScrollPatternInformation.HorizontalScrollPercent">
      <summary>現在の水平方向のスクロール位置を取得します。</summary>
      <returns>UI オートメーション要素内のコンテンツ エリア全体のパーセンテージで示した水平スクロール位置。 既定値は 0.0 です。</returns>
    </member>
    <member name="P:System.Windows.Automation.ScrollPattern.ScrollPatternInformation.HorizontalViewSize">
      <summary>現在の水平方向のビュー サイズを取得します。</summary>
      <returns>UI オートメーション要素内のコンテンツ エリア全体のパーセンテージで示した表示可能領域の水平方向のサイズ。 既定値は 100.0 です。</returns>
    </member>
    <member name="P:System.Windows.Automation.ScrollPattern.ScrollPatternInformation.VerticallyScrollable">
      <summary>UI オートメーション要素を垂直方向にスクロールできるかどうかを示す値を取得します。</summary>
      <returns>UI オートメーション要素が水平方向にスクロールできる場合は、<see langword="true" />。それ以外の場合は、<see langword="false" />。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Windows.Automation.ScrollPattern.ScrollPatternInformation.VerticalScrollPercent">
      <summary>現在の垂直方向のスクロール位置を取得します。</summary>
      <returns>UI オートメーション要素内のコンテンツ エリア全体のパーセンテージで示した垂直スクロール位置。 既定値は 0.0 です。</returns>
    </member>
    <member name="P:System.Windows.Automation.ScrollPattern.ScrollPatternInformation.VerticalViewSize">
      <summary>現在のビューの垂直方向のサイズを取得します。</summary>
      <returns>表示可能な領域の垂直方向のサイズを、UI オートメーション要素内で総コンテンツ領域が占める割合によって表したもの。 既定値は 100.0 です。</returns>
    </member>
    <member name="M:System.Windows.Automation.ScrollPattern.ScrollVertical(System.Windows.Automation.ScrollAmount)">
      <summary>指定した <see cref="T:System.Windows.Automation.ScrollAmount" /> の分、コンテンツ エリアの現在の可視領域を垂直方向にスクロールします。</summary>
      <param name="amount">コントロール固有の垂直方向 <see cref="T:System.Windows.Automation.ScrollAmount" /> インクリメント。</param>
      <exception cref="T:System.ArgumentException">コントロールは水平または垂直方向のスクロールのためだけに <see cref="F:System.Windows.Automation.ScrollAmount.SmallIncrement" /> 値をサポートしていますが、<see cref="F:System.Windows.Automation.ScrollAmount.LargeIncrement" /> 値が渡されました。</exception>
      <exception cref="T:System.InvalidOperationException">サポートされていない方向にスクロールしようとしました。</exception>
    </member>
    <member name="M:System.Windows.Automation.ScrollPattern.SetScrollPercent(System.Double,System.Double)">
      <summary>
        <see cref="T:System.Windows.Automation.AutomationElement" /> 内のコンテンツ エリア全体のパーセンテージとして、水平スクロール位置と垂直スクロール位置、またはこれらのいずれかを設定します。</summary>
      <param name="horizontalPercent">コンテンツ領域の水平方向の全域に対する割合。 コントロールをこの方向にスクロールできない場合、<see cref="F:System.Windows.Automation.ScrollPattern.NoScroll" /> を渡す必要があります。</param>
      <param name="verticalPercent">コンテンツ領域の垂直方向の全域に対する割合。 コントロールをこの方向にスクロールできない場合、<see cref="F:System.Windows.Automation.ScrollPattern.NoScroll" /> を渡す必要があります。</param>
      <exception cref="T:System.ArgumentException">倍精度浮動小数点型に変換できない値が渡されています。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">100 より大きい、または 0 より小さい値が渡された (<see cref="F:System.Windows.Automation.ScrollPattern.NoScroll" /> と等価の -1 を除く)。 <see cref="P:System.Windows.Automation.ScrollPattern.ScrollPatternInformation.HorizontalScrollPercent" /> および <see cref="P:System.Windows.Automation.ScrollPattern.ScrollPatternInformation.VerticalScrollPercent" /> の値は 0% または 100% に正規化されます。</exception>
      <exception cref="T:System.InvalidOperationException">サポートされていない方向にスクロールしようとしました。</exception>
    </member>
    <member name="F:System.Windows.Automation.ScrollPattern.VerticallyScrollableProperty">
      <summary>
        <see cref="P:System.Windows.Automation.ScrollPattern.ScrollPatternInformation.VerticallyScrollable" /> プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.ScrollPattern.VerticalScrollPercentProperty">
      <summary>
        <see cref="P:System.Windows.Automation.ScrollPattern.ScrollPatternInformation.VerticalScrollPercent" /> プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.ScrollPattern.VerticalViewSizeProperty">
      <summary>
        <see cref="P:System.Windows.Automation.ScrollPattern.ScrollPatternInformation.VerticalViewSize" /> プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Automation.SelectionItemPattern">
      <summary>
        <see cref="T:System.Windows.Automation.SelectionPattern" /> をサポートするコンテナー コントロールの選択可能な子項目を表します。</summary>
    </member>
    <member name="M:System.Windows.Automation.SelectionItemPattern.AddToSelection">
      <summary>選択した項目のコレクションに現在の要素を追加します。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="F:System.Windows.Automation.SelectionPattern.CanSelectMultipleProperty" /> = <see langword="false" /> であり、別の要素が既に選択されている場合に、単一選択コンテナーに選択を追加しようとしました。</exception>
    </member>
    <member name="P:System.Windows.Automation.SelectionItemPattern.Cached">
      <summary>この <see cref="T:System.Windows.Automation.SelectionItemPattern" /> のキャッシュされたプロパティ値を取得します。</summary>
      <returns>キャッシュされたプロパティ値。</returns>
      <exception cref="T:System.InvalidOperationException">要求されたプロパティがキャッシュ内にありません。</exception>
    </member>
    <member name="P:System.Windows.Automation.SelectionItemPattern.Current">
      <summary>この <see cref="T:System.Windows.Automation.SelectionItemPattern" /> の現在のプロパティ値を取得します。</summary>
      <returns>現在のプロパティ値。</returns>
    </member>
    <member name="F:System.Windows.Automation.SelectionItemPattern.ElementAddedToSelectionEvent">
      <summary>選択した項目のコレクションに項目が追加されるときに発生するイベントを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.SelectionItemPattern.ElementRemovedFromSelectionEvent">
      <summary>選択した項目のコレクションから項目が削除されるときに発生するイベントを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.SelectionItemPattern.ElementSelectedEvent">
      <summary>
        <see cref="M:System.Windows.Automation.SelectionItemPattern.Select" />、<see cref="M:System.Windows.Automation.SelectionItemPattern.AddToSelection" />、<see cref="M:System.Windows.Automation.SelectionItemPattern.RemoveFromSelection" /> のいずれかを呼び出した結果として 1 つの項目が選択された状態になったときに発生するイベントを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.SelectionItemPattern.IsSelectedProperty">
      <summary>
        <see cref="P:System.Windows.Automation.SelectionItemPattern.SelectionItemPatternInformation.IsSelected" /> プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.SelectionItemPattern.Pattern">
      <summary>
        <see cref="T:System.Windows.Automation.SelectionItemPattern" /> コントロール パターンを識別します。</summary>
    </member>
    <member name="M:System.Windows.Automation.SelectionItemPattern.RemoveFromSelection">
      <summary>選択した項目のコレクションから現在の要素を削除します。</summary>
      <exception cref="T:System.InvalidOperationException">1 つの項目が選択されており、<see cref="F:System.Windows.Automation.SelectionPattern.IsSelectionRequiredProperty" /> = <see langword="true" /> である場合に、選択コンテナーから選択を削除しようとしました。</exception>
    </member>
    <member name="M:System.Windows.Automation.SelectionItemPattern.Select">
      <summary>選択したアイテムの選択を解除し、現在の要素を選択します。</summary>
    </member>
    <member name="F:System.Windows.Automation.SelectionItemPattern.SelectionContainerProperty">
      <summary>
        <see cref="P:System.Windows.Automation.SelectionItemPattern.SelectionItemPatternInformation.SelectionContainer" /> プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Automation.SelectionItemPattern.SelectionItemPatternInformation">
      <summary>
        <see cref="T:System.Windows.Automation.SelectionItemPattern" /> アクセサーまたは <see cref="P:System.Windows.Automation.SelectionItemPattern.Current" /> アクセサーを使用して、<see cref="P:System.Windows.Automation.SelectionItemPattern.Cached" /> オブジェクトのプロパティ値へのアクセスを提供します。</summary>
    </member>
    <member name="P:System.Windows.Automation.SelectionItemPattern.SelectionItemPatternInformation.IsSelected">
      <summary>項目が選択されているかどうかを示す値を取得します。</summary>
      <returns>項目が選択されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Automation.SelectionItemPattern.SelectionItemPatternInformation.SelectionContainer">
      <summary>
        <see cref="T:System.Windows.Automation.SelectionPattern" /> コントロール パターンをサポートし、呼び出し元オブジェクトのコンテナーとして機能する <see cref="T:System.Windows.Automation.AutomationElement" /> を取得します。</summary>
      <returns>コンテナーオブジェクト。 既定値は null 参照 (Visual Basic では <see langword="Nothing" />) です。</returns>
    </member>
    <member name="T:System.Windows.Automation.SelectionPattern">
      <summary>選択可能な子項目のコレクションのコンテナーとして機能するコントロールを表します。 この要素の子は <see cref="T:System.Windows.Automation.SelectionItemPattern" /> をサポートしています。</summary>
    </member>
    <member name="P:System.Windows.Automation.SelectionPattern.Cached">
      <summary>この <see cref="T:System.Windows.Automation.SelectionPattern" /> のキャッシュされた UI オートメーション プロパティ値を取得します。</summary>
      <returns>コントロール パターンのキャッシュされた UI オートメーション プロパティ値を格納する構造体。</returns>
      <exception cref="T:System.InvalidOperationException">要求されたプロパティがキャッシュ内にありません。</exception>
    </member>
    <member name="F:System.Windows.Automation.SelectionPattern.CanSelectMultipleProperty">
      <summary>
        <see cref="P:System.Windows.Automation.SelectionPattern.SelectionPatternInformation.CanSelectMultiple" /> プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Automation.SelectionPattern.Current">
      <summary>この <see cref="T:System.Windows.Automation.SelectionPattern" /> の現在の UI オートメーション プロパティ値を取得します。</summary>
      <returns>コントロール パターンの現在の UI オートメーション プロパティ値を格納する構造体。</returns>
    </member>
    <member name="F:System.Windows.Automation.SelectionPattern.InvalidatedEvent">
      <summary>コンテナー内での選択内容が大幅に変更され、<see cref="F:System.Windows.Automation.Provider.AutomationInteropProvider.InvalidateLimit" /> 定数が許容するより多くの追加および削除イベントの送信が必要になった場合に、発生するイベントを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.SelectionPattern.IsSelectionRequiredProperty">
      <summary>
        <see cref="P:System.Windows.Automation.SelectionPattern.SelectionPatternInformation.IsSelectionRequired" /> プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.SelectionPattern.Pattern">
      <summary>
        <see cref="T:System.Windows.Automation.SelectionPattern" /> コントロール パターンを識別します。</summary>
    </member>
    <member name="T:System.Windows.Automation.SelectionPattern.SelectionPatternInformation">
      <summary>
        <see cref="T:System.Windows.Automation.SelectionPattern" /> アクセサーまたは <see cref="P:System.Windows.Automation.SelectionPattern.Current" /> アクセサーを使用して、<see cref="P:System.Windows.Automation.SelectionPattern.Cached" /> オブジェクトのプロパティ値へのアクセスを提供します。</summary>
    </member>
    <member name="P:System.Windows.Automation.SelectionPattern.SelectionPatternInformation.CanSelectMultiple">
      <summary>コンテナーが複数の子要素の同時選択を許可するかどうかを示す値を取得します。</summary>
      <returns>コンテナーが複数の選択サポートする場合は <see langword="true" />、サポートしない場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.SelectionPattern.SelectionPatternInformation.GetSelection">
      <summary>選択されている選択コンテナー内のすべての項目を取得します。</summary>
      <returns>選択した項目のコレクション。 既定値は空の配列です。</returns>
    </member>
    <member name="P:System.Windows.Automation.SelectionPattern.SelectionPatternInformation.IsSelectionRequired">
      <summary>コンテナーが少なくとも 1 つの子項目の選択を必要とするかどうかを示す値を取得します。</summary>
      <returns>コンテナーが少なくとも 1 つの子項目の選択を必要とする場合は、<see langword="true" />。それ以外の場合は、<see langword="false" />。</returns>
    </member>
    <member name="F:System.Windows.Automation.SelectionPattern.SelectionProperty">
      <summary>コンテナー内の選択項目を取得するプロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Automation.SynchronizedInputPattern">
      <summary>同期入力イベントをサポートするオブジェクトを表します。</summary>
    </member>
    <member name="M:System.Windows.Automation.SynchronizedInputPattern.Cancel">
      <summary>入力のリッスンを停止します。</summary>
    </member>
    <member name="F:System.Windows.Automation.SynchronizedInputPattern.InputDiscardedEvent">
      <summary>WPF が入力を破棄するときに発生するイベントを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.SynchronizedInputPattern.InputReachedOtherElementEvent">
      <summary>現在入力をリッスンしている要素以外の要素が入力を受け取ったときに発生したイベントを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.SynchronizedInputPattern.InputReachedTargetEvent">
      <summary>現在入力をリッスンしている要素が入力を受け取ったときに発生したイベントを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.SynchronizedInputPattern.Pattern">
      <summary>
        <see cref="T:System.Windows.Automation.SynchronizedInputPattern" /> コントロール パターンを識別します。</summary>
    </member>
    <member name="M:System.Windows.Automation.SynchronizedInputPattern.StartListening(System.Windows.Automation.SynchronizedInputType)">
      <summary>指定された型の入力のリッスンをプロバイダーが開始するよう指定します。</summary>
      <param name="inputType">リッスンする入力の型。</param>
    </member>
    <member name="T:System.Windows.Automation.TableItemPattern">
      <summary>
        <see cref="T:System.Windows.Automation.TablePattern" /> をサポートするコンテナーの子コントロールを表します。</summary>
    </member>
    <member name="P:System.Windows.Automation.TableItemPattern.Cached">
      <summary>この <see cref="T:System.Windows.Automation.TableItemPattern" /> のキャッシュされたプロパティ値を取得します。</summary>
      <returns>キャッシュされたプロパティ値。</returns>
      <exception cref="T:System.InvalidOperationException">要求されたプロパティがキャッシュ内にありません。</exception>
    </member>
    <member name="F:System.Windows.Automation.TableItemPattern.ColumnHeaderItemsProperty">
      <summary>テーブルの項目またはセルに関連付けられた、すべての列ヘッダーを取得するプロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Automation.TableItemPattern.Current">
      <summary>この <see cref="T:System.Windows.Automation.TableItemPattern" /> の現在のプロパティ値を取得します。</summary>
      <returns>現在のプロパティ値。</returns>
    </member>
    <member name="F:System.Windows.Automation.TableItemPattern.Pattern">
      <summary>
        <see cref="T:System.Windows.Automation.TableItemPattern" /> コントロール パターンを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TableItemPattern.RowHeaderItemsProperty">
      <summary>テーブルの項目またはセルに関連付けられているすべての行ヘッダーを取得するプロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Automation.TableItemPattern.TableItemPatternInformation">
      <summary>
        <see cref="T:System.Windows.Automation.TableItemPattern" /> アクセサーまたは <see cref="P:System.Windows.Automation.TableItemPattern.Current" /> アクセサーを使用して、<see cref="P:System.Windows.Automation.TableItemPattern.Cached" /> オブジェクトのプロパティ値へのアクセスを提供します。</summary>
    </member>
    <member name="P:System.Windows.Automation.TableItemPattern.TableItemPatternInformation.Column">
      <summary>テーブルのセルまたは項目を格納している列の序数を取得します。</summary>
      <returns>テーブルのセルまたは項目を格納する列を表す、0 から始まる序数。</returns>
    </member>
    <member name="P:System.Windows.Automation.TableItemPattern.TableItemPatternInformation.ColumnSpan">
      <summary>テーブルのセルまたは項目がまたがる列の数を取得します。</summary>
      <returns>またがる列の数。 既定値は 1 です。</returns>
    </member>
    <member name="P:System.Windows.Automation.TableItemPattern.TableItemPatternInformation.ContainingGrid">
      <summary>GridPattern コントロール パターンをサポートし、テーブルのセルまたはアイテムのコンテナーを表す UI オートメーション 要素を取得します。</summary>
      <returns>GridPattern コントロール パターンをサポートし、テーブルのセルまたはアイテムのコンテナーを表す UI オートメーション 要素。</returns>
    </member>
    <member name="M:System.Windows.Automation.TableItemPattern.TableItemPatternInformation.GetColumnHeaderItems">
      <summary>テーブルの項目またはセルに関連付けられたすべての列ヘッダーを取得します。</summary>
      <returns>列ヘッダー要素のコレクション。 既定値は空の配列です。</returns>
    </member>
    <member name="M:System.Windows.Automation.TableItemPattern.TableItemPatternInformation.GetRowHeaderItems">
      <summary>テーブルの項目またはセルに関連付けられたすべての行ヘッダーを取得します。</summary>
      <returns>行ヘッダー要素のコレクション。 既定値は空の配列です。</returns>
    </member>
    <member name="P:System.Windows.Automation.TableItemPattern.TableItemPatternInformation.Row">
      <summary>テーブルのセルまたは項目を格納している行の序数を取得します。</summary>
      <returns>テーブルのセルまたは項目を格納する列を表す、0 から始まる序数。</returns>
    </member>
    <member name="P:System.Windows.Automation.TableItemPattern.TableItemPatternInformation.RowSpan">
      <summary>テーブルのセルまたは項目がまたがる行の数を取得します。</summary>
      <returns>またがる列の数。 既定値は 1 です。</returns>
    </member>
    <member name="T:System.Windows.Automation.TablePattern">
      <summary>子要素のコレクションのコンテナーとして機能するコントロールを表します。 この要素の子は <see cref="T:System.Windows.Automation.TableItemPattern" /> をサポートし、行と列のそれぞれで処理可能な 2 次元の論理座標システムで構成されます。</summary>
    </member>
    <member name="P:System.Windows.Automation.TablePattern.Cached">
      <summary>この <see cref="T:System.Windows.Automation.TablePattern" /> のキャッシュされた UI オートメーション プロパティ値を取得します。</summary>
      <returns>コントロール パターンのキャッシュされた UI オートメーション プロパティ値を格納する構造体。</returns>
      <exception cref="T:System.InvalidOperationException">要求されたプロパティがキャッシュ内にありません。</exception>
    </member>
    <member name="F:System.Windows.Automation.TablePattern.ColumnHeadersProperty">
      <summary>テーブルの列ヘッダーのコレクションを取得するプロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Automation.TablePattern.Current">
      <summary>この <see cref="T:System.Windows.Automation.TablePattern" /> の現在の UI オートメーション プロパティ値を取得します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TablePattern.Pattern">
      <summary>
        <see cref="T:System.Windows.Automation.TablePattern" /> コントロール パターンを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TablePattern.RowHeadersProperty">
      <summary>テーブルの行ヘッダーのコレクションを取得するプロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TablePattern.RowOrColumnMajorProperty">
      <summary>
        <see cref="P:System.Windows.Automation.TablePattern.TablePatternInformation.RowOrColumnMajor" /> プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Automation.TablePattern.TablePatternInformation">
      <summary>
        <see cref="T:System.Windows.Automation.TablePattern" /> アクセサーまたは <see cref="P:System.Windows.Automation.TablePattern.Current" /> アクセサーを使用して、<see cref="P:System.Windows.Automation.TablePattern.Cached" /> オブジェクトのプロパティ値へのアクセスを提供します。</summary>
    </member>
    <member name="P:System.Windows.Automation.TablePattern.TablePatternInformation.ColumnCount">
      <summary>テーブル内の列の合計数を取得します。</summary>
      <returns>テーブル内の列の合計数。 既定値は 0 です。</returns>
    </member>
    <member name="M:System.Windows.Automation.TablePattern.TablePatternInformation.GetColumnHeaders">
      <summary>テーブルのすべての列ヘッダーを表す <see cref="T:System.Windows.Automation.AutomationElement" /> のコレクションを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.AutomationElement" /> のコレクション。 既定値は空の配列です。</returns>
    </member>
    <member name="M:System.Windows.Automation.TablePattern.TablePatternInformation.GetRowHeaders">
      <summary>テーブルのすべての行ヘッダーを表す <see cref="T:System.Windows.Automation.AutomationElement" /> のコレクションを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.AutomationElement" /> のコレクション。 既定値は空の配列です。</returns>
    </member>
    <member name="P:System.Windows.Automation.TablePattern.TablePatternInformation.RowCount">
      <summary>テーブル内の行の合計数を取得します。</summary>
      <returns>テーブル内の行の合計数。 既定値は 0 です。</returns>
    </member>
    <member name="P:System.Windows.Automation.TablePattern.TablePatternInformation.RowOrColumnMajor">
      <summary>テーブルの主要な移動方向 (<see cref="F:System.Windows.Automation.RowOrColumnMajor.ColumnMajor" />、<see cref="F:System.Windows.Automation.RowOrColumnMajor.RowMajor" />、<see cref="F:System.Windows.Automation.RowOrColumnMajor.Indeterminate" />) を取得します。</summary>
      <returns>主要な移動方向。 既定値は、<see cref="F:System.Windows.Automation.RowOrColumnMajor.Indeterminate" /> です。</returns>
    </member>
    <member name="T:System.Windows.Automation.Text.TextPatternRange">
      <summary>
        <see cref="T:System.Windows.Automation.TextPattern" /> コンテナー内の連続するテキストの範囲を表します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Text.TextPatternRange.AddToSelection">
      <summary>複数の非結合選択をサポートするテキスト コンテナー内の強調表示されたテキストのコレクションに追加します。</summary>
      <exception cref="T:System.InvalidOperationException">テキスト プロバイダーが複数の非結合選択をサポートしていない (たとえば、<see cref="P:System.Windows.Automation.TextPattern.SupportedTextSelection" /> の値は <see langword="Multiple" /> である必要があります)。</exception>
    </member>
    <member name="M:System.Windows.Automation.Text.TextPatternRange.Clone">
      <summary>元の <see cref="T:System.Windows.Automation.Text.TextPatternRange" /> と同一で、元のプロパティをすべて継承する新しい <see cref="T:System.Windows.Automation.Text.TextPatternRange" /> を取得します。</summary>
      <returns>新しいテキスト範囲。 null 参照 (Visual Basic では <see langword="Nothing" />) は返されません。</returns>
    </member>
    <member name="M:System.Windows.Automation.Text.TextPatternRange.Compare(System.Windows.Automation.Text.TextPatternRange)">
      <summary>テキスト範囲全体 (<see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> エンドポイントから <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> エンドポイントまで) が別のテキスト範囲と同じであるかどうかを示す <see cref="T:System.Boolean" /> 値を返します。</summary>
      <param name="range">比較するテキスト範囲。</param>
      <returns>両方のテキスト範囲が同じである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">比較している範囲が同じテキスト プロバイダーからのものではない。</exception>
    </member>
    <member name="M:System.Windows.Automation.Text.TextPatternRange.CompareEndpoints(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextPatternRange,System.Windows.Automation.Text.TextPatternRangeEndpoint)">
      <summary>2 つのテキスト範囲のエンドポイントが同じかどうかを示す <see cref="T:System.Int32" /> を返します。</summary>
      <param name="endpoint">呼び出し元の <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> エンドポイントまたは <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> エンドポイント。</param>
      <param name="targetRange">比較対象の範囲。</param>
      <param name="targetEndpoint">比較対象の <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> エンドポイントまたは <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> エンドポイント。</param>
      <returns>テキストにおいて、呼び出し元のエンドポイントが比較対象のエンドポイントよりも前方にある場合は、負の値を返します。  
 呼び出し元のエンドポイントが比較対象のエンドポイントと同じ位置にある場合は、0 を返します。  
 テキストにおいて、呼び出し元のエンドポイントが比較対象のエンドポイントより後方にある場合は、正の値を返します。</returns>
      <exception cref="T:System.ArgumentNullException">範囲が null 参照 (Visual Basic では <see langword="Nothing" />) の場合。</exception>
      <exception cref="T:System.ArgumentException">別のコンテナーの範囲である場合。</exception>
    </member>
    <member name="M:System.Windows.Automation.Text.TextPatternRange.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)">
      <summary>指定した <see cref="T:System.Windows.Automation.Text.TextUnit" /> にテキスト範囲を拡大します。</summary>
      <param name="unit">テキスト単位。</param>
    </member>
    <member name="M:System.Windows.Automation.Text.TextPatternRange.FindAttribute(System.Windows.Automation.AutomationTextAttribute,System.Object,System.Boolean)">
      <summary>指定された属性の値を持つテキスト範囲のサブセットを返します。</summary>
      <param name="attribute">検索対象の属性。</param>
      <param name="value">検索対象の属性値。 この値は、属性に指定されている型と一致する必要があります。</param>
      <param name="backward">最初に発生したテキスト範囲ではなく、最後に発生したテキスト範囲を返す必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <returns>一致する属性と属性値を持つテキスト範囲。それ以外の場合は null (Visual Basic では <see langword="Nothing" />)。</returns>
    </member>
    <member name="M:System.Windows.Automation.Text.TextPatternRange.FindText(System.String,System.Boolean,System.Boolean)">
      <summary>指定したテキストを含むテキスト範囲のサブセットを返します。</summary>
      <param name="text">検索対象の文字列。</param>
      <param name="backward">最初に発生したテキスト範囲ではなく、最後に発生したテキスト範囲を返す必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="ignoreCase">大文字と小文字を区別しない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <returns>指定したテキストと一致するテキスト範囲。それ以外の場合は null (Visual Basic では <see langword="Nothing" />)。</returns>
    </member>
    <member name="M:System.Windows.Automation.Text.TextPatternRange.GetAttributeValue(System.Windows.Automation.AutomationTextAttribute)">
      <summary>指定した属性の値をテキスト範囲全体から返します。</summary>
      <param name="attribute">テキスト属性。</param>
      <returns>指定した属性の値を返します。 たとえば、GetAttributeValue(TextPattern.FontNameAttribute) はテキスト範囲のフォント名が一意の場合にそのフォント名を表す文字列を返し、GetAttributeValue(TextPattern.IsItalicAttribute) はブール値を返します。  
指定した属性の値がテキスト範囲内で異なる場合は <see cref="F:System.Windows.Automation.TextPattern.MixedAttributeValue" /> を返します。  
指定された属性がプロバイダーまたはコントロールによってサポートされない場合は <see cref="F:System.Windows.Automation.AutomationElement.NotSupported" /> を返します。</returns>
      <exception cref="T:System.ArgumentException">指定した属性が無効な場合。</exception>
    </member>
    <member name="M:System.Windows.Automation.Text.TextPatternRange.GetBoundingRectangles">
      <summary>テキスト範囲内のテキストの表示されている各行 (全体または一部) に外接する四角形のコレクションを取得します。</summary>
      <returns>テキスト範囲内の各行 (全体または一部) に外接する四角形の配列。  
 低次元テキスト範囲の空の配列。  
 完全に画面外となる、スクロール アウトする、または重なったウィンドウによって隠れる画面座標を持つテキスト範囲を表す空の配列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Text.TextPatternRange.GetChildren">
      <summary>テキスト範囲内にあるすべての埋め込みオブジェクトのコレクションを取得します。</summary>
      <returns>範囲内にあるすべての子オブジェクトのコレクション。 範囲と重なっているが完全には範囲に含まれていない子オブジェクトもコレクションに含まれます。  
 子オブジェクトが存在しない場合は、空のコレクションを返します。</returns>
    </member>
    <member name="M:System.Windows.Automation.Text.TextPatternRange.GetEnclosingElement">
      <summary>テキスト範囲を囲む最も内側の <see cref="T:System.Windows.Automation.AutomationElement" /> を返します。</summary>
      <returns>呼び出し元を囲む最も内側の要素。</returns>
    </member>
    <member name="M:System.Windows.Automation.Text.TextPatternRange.GetText(System.Int32)">
      <summary>テキスト範囲のプレーンテキストを返します。</summary>
      <param name="maxLength">返す文字列の最大長。 制限が必要ない場合は、<c>-1</c> を使用します。</param>
      <returns>テキスト範囲のプレーンテキスト。指定した <paramref name="maxLength" /> で切り捨てられている可能性があります。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maxLength" /> が -1 より小さい場合。</exception>
    </member>
    <member name="M:System.Windows.Automation.Text.TextPatternRange.Move(System.Windows.Automation.Text.TextUnit,System.Int32)">
      <summary>指定されたテキスト単位数の分、テキスト範囲を移動します。</summary>
      <param name="unit">テキスト単位の境界。</param>
      <param name="count">移動するテキスト単位の数。 正の値はテキスト範囲を前方に移動し、負の値はテキスト範囲を後方に移動します。0 の場合は移動されません。</param>
      <returns>実際に移動された単位の数。 移動後のテキスト範囲のエンドポイントのいずれかが <see cref="P:System.Windows.Automation.TextPattern.DocumentRange" /> エンドポイントよりも大きい、または小さい場合、要求した数よりも小さくなる場合があります。</returns>
    </member>
    <member name="M:System.Windows.Automation.Text.TextPatternRange.MoveEndpointByRange(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextPatternRange,System.Windows.Automation.Text.TextPatternRangeEndpoint)">
      <summary>テキスト範囲の 1 つのエンドポイントを、2 番目のテキスト範囲の指定のエンドポイントに移動します。</summary>
      <param name="endpoint">移動するエンドポイント。</param>
      <param name="targetRange">同じテキスト プロバイダーからの別の範囲。</param>
      <param name="targetEndpoint">他の範囲にあるエンドポイント。</param>
    </member>
    <member name="M:System.Windows.Automation.Text.TextPatternRange.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)">
      <summary>テキスト範囲の 1 つのエンドポイントを、指定された数の <see cref="T:System.Windows.Automation.Text.TextUnit" /> の分、ドキュメントの範囲内で移動します。</summary>
      <param name="endpoint">移動するエンドポイント。</param>
      <param name="unit">移動対象のテキスト範囲。</param>
      <param name="count">移動する単位の数。 正の数はエンドポイントを前方に移動します。 負の数は後方に移動します。 0 の場合は移動されません。</param>
      <returns>実際に移動した単位の数。エンドポイントの移動によりドキュメントの先頭または末尾に達した場合は、要求した数よりも小さくなる場合があります。</returns>
    </member>
    <member name="M:System.Windows.Automation.Text.TextPatternRange.RemoveFromSelection">
      <summary>複数の非結合選択をサポートするテキスト コンテナー内の強調表示されたテキストの既存のコレクションから、呼び出し元のテキスト範囲の <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> エンドポイントおよび <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> エンドポイントに対応する、強調表示されたセクションを削除します。</summary>
      <exception cref="T:System.InvalidOperationException">テキスト プロバイダーが複数の非結合選択をサポートしていない (たとえば、<see cref="P:System.Windows.Automation.TextPattern.SupportedTextSelection" /> の値は <see langword="Multiple" /> である必要があります)。</exception>
    </member>
    <member name="M:System.Windows.Automation.Text.TextPatternRange.ScrollIntoView(System.Boolean)">
      <summary>テキスト範囲がビューポート内に表示されるまで、テキスト コントロールを垂直方向にスクロールします。</summary>
      <param name="alignToTop">テキスト範囲をスクロールしてビューポートの上辺と揃える場合は <see langword="true" />。ビューポートの底辺と揃える場合は <see langword="false" /></param>
      <exception cref="T:System.InvalidOperationException">スクロールがコントロールでサポートされていない場合。</exception>
    </member>
    <member name="M:System.Windows.Automation.Text.TextPatternRange.Select">
      <summary>テキスト範囲の <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> エンドポイントおよび <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> エンドポイントに対応するテキスト コントロール内のテキストを強調表示します。</summary>
      <exception cref="T:System.InvalidOperationException">テキストの選択がテキスト コントロールによってサポートされていない場合に発生します。</exception>
    </member>
    <member name="P:System.Windows.Automation.Text.TextPatternRange.TextPattern">
      <summary>テキスト範囲に関連付けられている <see cref="T:System.Windows.Automation.TextPattern" /> を取得します。</summary>
      <returns>テキスト プロバイダー。</returns>
    </member>
    <member name="T:System.Windows.Automation.TextPattern">
      <summary>テキストを格納しているコントロールを表します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.AnimationStyleAttribute">
      <summary>テキスト範囲の <see cref="T:System.Windows.Automation.Text.AnimationStyle" /> 属性を識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.BackgroundColorAttribute">
      <summary>テキスト範囲の BackgroundColor 属性を識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.BulletStyleAttribute">
      <summary>テキスト範囲の <see cref="T:System.Windows.Automation.Text.BulletStyle" /> 属性を識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.CapStyleAttribute">
      <summary>テキスト範囲の <see cref="T:System.Windows.Automation.Text.CapStyle" /> 属性を識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.CultureAttribute">
      <summary>フランス語 (fr) ではなくフランス語 (スイス) (fr-CH) など、サブ言語レベルまでのテキスト範囲の <see langword="Culture" /> (<see cref="T:System.Globalization.CultureInfo" />) 属性を識別します。</summary>
    </member>
    <member name="P:System.Windows.Automation.TextPattern.DocumentRange">
      <summary>ドキュメントのメイン テキストを囲むテキスト範囲を取得します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.FontNameAttribute">
      <summary>テキスト範囲の <see langword="FontName" /> 属性を識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.FontSizeAttribute">
      <summary>テキスト範囲の <see langword="FontSize" /> 属性を識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.FontWeightAttribute">
      <summary>テキスト範囲の <see langword="FontWeight" /> 属性を識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.ForegroundColorAttribute">
      <summary>テキスト範囲の <see langword="ForegroundColor" /> (COLORREF) 属性を識別します。</summary>
    </member>
    <member name="M:System.Windows.Automation.TextPattern.GetSelection">
      <summary>現在の 1 つ以上のテキスト選択に関連付けられている、非結合テキスト範囲のコレクションを取得します。</summary>
      <returns>非結合テキスト範囲のコレクション。</returns>
      <exception cref="T:System.InvalidOperationException">テキスト コンテナーはテキスト選択をサポートしていません。</exception>
    </member>
    <member name="M:System.Windows.Automation.TextPattern.GetVisibleRanges">
      <summary>テキスト コンテナーから非結合テキスト範囲の配列を取得します。それぞれのテキスト範囲は部分的に表示されている最初の行から始まり、部分的に表示されている最後の行の末尾で終わります。</summary>
      <returns>コンテナーまたは空の配列に含まれる表示テキスト範囲のコレクション。 <see langword="Null" /> は返されません。</returns>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.HorizontalTextAlignmentAttribute">
      <summary>テキスト範囲の <see cref="T:System.Windows.Automation.Text.HorizontalTextAlignment" /> 属性を識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.IndentationFirstLineAttribute">
      <summary>テキスト範囲の <see langword="IndentationFirstLine" /> (<see cref="P:System.Windows.Documents.Paragraph.TextIndent" />) 属性を識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.IndentationLeadingAttribute">
      <summary>テキスト範囲の <see langword="IndentationLeading" /> (<see cref="P:System.Windows.Documents.Paragraph.TextIndent" />) 属性を識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.IndentationTrailingAttribute">
      <summary>テキスト範囲の <see langword="IndentationTrailing" /> (<see cref="P:System.Windows.Documents.Paragraph.TextIndent" />) 属性を識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.IsHiddenAttribute">
      <summary>テキスト範囲の <see langword="IsHidden" /> 属性を識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.IsItalicAttribute">
      <summary>テキスト範囲の <see langword="IsItalic" /> (<see cref="T:System.Windows.FontStyle" />) 属性を識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.IsReadOnlyAttribute">
      <summary>テキスト範囲の <see langword="IsReadOnly" /> 属性を識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.IsSubscriptAttribute">
      <summary>テキスト範囲の <see langword="IsSubscript" /> (<see cref="T:System.Windows.FontVariants" />) 属性を識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.IsSuperscriptAttribute">
      <summary>テキスト範囲の <see langword="IsSuperscript" /> (<see cref="T:System.Windows.FontVariants" />) 属性を識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.MarginBottomAttribute">
      <summary>テキスト範囲の <see langword="MarginBottom" /> (<see cref="T:System.Drawing.Printing.PageSettings" />) 属性を識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.MarginLeadingAttribute">
      <summary>テキスト範囲の <see langword="MarginLeading" /> (<see cref="T:System.Drawing.Printing.PageSettings" />) 属性を識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.MarginTopAttribute">
      <summary>テキスト範囲の <see langword="MarginTop" /> (<see cref="T:System.Drawing.Printing.PageSettings" />) 属性を識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.MarginTrailingAttribute">
      <summary>テキスト範囲の <see langword="MarginTrailing" /> (<see cref="T:System.Drawing.Printing.PageSettings" />) 属性を識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.MixedAttributeValue">
      <summary>指定した属性の値が、リッチ エディット コントロールのテキスト範囲内で異なるかどうかを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.OutlineStylesAttribute">
      <summary>テキスト範囲の <see langword="OutlineStyles" /> (<see cref="T:System.Windows.Automation.Text.OutlineStyles" />) 属性を識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.OverlineColorAttribute">
      <summary>テキスト範囲の <see langword="OverlineColor" /> 属性を識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.OverlineStyleAttribute">
      <summary>テキスト範囲の <see langword="OverlineStyle" /> (<see cref="T:System.Windows.Automation.Text.TextDecorationLineStyle" />) 属性を識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.Pattern">
      <summary>
        <see cref="T:System.Windows.Automation.TextPattern" /> パターンを識別します。</summary>
    </member>
    <member name="M:System.Windows.Automation.TextPattern.RangeFromChild(System.Windows.Automation.AutomationElement)">
      <summary>イメージ、ハイパーリンク、Microsoft Excel スプレッドシート、その他の埋め込みオブジェクトなどの子要素を囲むテキスト範囲を取得します。</summary>
      <param name="childElement">囲まれたオブジェクト。</param>
      <returns>子要素に及ぶ範囲。</returns>
      <exception cref="T:System.ArgumentNullException">子要素は <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException">要素は、テキスト コンテナーの子ではありません。</exception>
    </member>
    <member name="M:System.Windows.Automation.TextPattern.RangeFromPoint(System.Windows.Point)">
      <summary>指定した画面座標の最も近くにある低次元 (空の) テキスト範囲を返します。</summary>
      <param name="screenLocation">画面座標での位置。</param>
      <returns>指定した位置の最も近くにある低次元テキスト範囲。 <see langword="Null" /> は返されません。</returns>
      <exception cref="T:System.ArgumentException">指定した位置は、テキスト パターンに関連付けられている <see cref="T:System.Windows.Automation.AutomationElement" /> の外側にあります。</exception>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.StrikethroughColorAttribute">
      <summary>テキスト範囲の <see langword="StrikethroughColor" /> 属性を識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.StrikethroughStyleAttribute">
      <summary>テキスト範囲の <see langword="StrikethroughStyle" /> (<see cref="T:System.Windows.Automation.Text.TextDecorationLineStyle" />) 属性を識別します。</summary>
    </member>
    <member name="P:System.Windows.Automation.TextPattern.SupportedTextSelection">
      <summary>テキスト プロバイダーが選択をサポートするかどうかを指定する値を取得し、選択をサポートする場合はサポートされる選択の種類を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.SupportedTextSelection" /> の <see langword="None" />、<see langword="Single" />、または <see langword="Multiple" />。</returns>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.TabsAttribute">
      <summary>テキスト範囲の <see langword="Tabs" /> 属性を識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.TextChangedEvent">
      <summary>テキスト コンテンツが変更されるたびに発生するイベントを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.TextFlowDirectionsAttribute">
      <summary>テキスト範囲の <see langword="TextFlowDirections" /> (<see cref="T:System.Windows.Automation.Text.FlowDirections" />) 属性を識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.TextSelectionChangedEvent">
      <summary>テキストの選択が変更されるときに発生するイベントを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.UnderlineColorAttribute">
      <summary>テキスト範囲の <see langword="UnderlineColor" /> 属性を識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.UnderlineStyleAttribute">
      <summary>テキスト範囲の <see langword="UnderlineStyle" /> (<see cref="T:System.Windows.Automation.Text.TextDecorationLineStyle" />) 属性を識別します。</summary>
    </member>
    <member name="T:System.Windows.Automation.TogglePattern">
      <summary>一連の状態を切り替え、1 回設定された状態を保持できるコントロールを表します。</summary>
    </member>
    <member name="P:System.Windows.Automation.TogglePattern.Cached">
      <summary>この <see cref="T:System.Windows.Automation.TogglePattern" /> のキャッシュされた UI オートメーション プロパティ値を取得します。</summary>
      <returns>コントロール パターンのキャッシュされた UI オートメーション プロパティ値を格納する構造体。</returns>
      <exception cref="T:System.InvalidOperationException">要求されたプロパティがキャッシュ内にありません。</exception>
    </member>
    <member name="P:System.Windows.Automation.TogglePattern.Current">
      <summary>この UI オートメーション の現在の <see cref="T:System.Windows.Automation.TogglePattern" />プロパティ値を取得します。</summary>
      <returns>コントロール パターンの現在の UI オートメーション プロパティ値を格納する構造体。</returns>
    </member>
    <member name="F:System.Windows.Automation.TogglePattern.Pattern">
      <summary>
        <see cref="T:System.Windows.Automation.TogglePattern" /> コントロール パターンを識別します。</summary>
    </member>
    <member name="M:System.Windows.Automation.TogglePattern.Toggle">
      <summary>
        <see cref="T:System.Windows.Automation.AutomationElement" /> のトグル状態を切り替えます。</summary>
    </member>
    <member name="T:System.Windows.Automation.TogglePattern.TogglePatternInformation">
      <summary>
        <see cref="T:System.Windows.Automation.TogglePattern" /> アクセサーまたは <see cref="P:System.Windows.Automation.TogglePattern.Current" /> アクセサーを使用して、<see cref="P:System.Windows.Automation.TogglePattern.Cached" /> オブジェクトのプロパティ値へのアクセスを提供します。</summary>
    </member>
    <member name="P:System.Windows.Automation.TogglePattern.TogglePatternInformation.ToggleState">
      <summary>
        <see cref="T:System.Windows.Automation.AutomationElement" /> の切り替え状態を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.AutomationElement" /> の <see cref="T:System.Windows.Automation.ToggleState" />。 既定値は <see cref="F:System.Windows.Automation.ToggleState.Indeterminate" /> です。</returns>
    </member>
    <member name="F:System.Windows.Automation.TogglePattern.ToggleStateProperty">
      <summary>
        <see cref="P:System.Windows.Automation.TogglePattern.TogglePatternInformation.ToggleState" /> プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Automation.TransformPattern">
      <summary>2 次元空間で移動、サイズ変更、または回転できるコントロールを表します。</summary>
    </member>
    <member name="P:System.Windows.Automation.TransformPattern.Cached">
      <summary>この <see cref="T:System.Windows.Automation.TransformPattern" /> のキャッシュされた UI オートメーション プロパティ値を取得します。</summary>
      <returns>コントロール パターンのキャッシュされた UI オートメーション プロパティ値を格納する構造体。</returns>
      <exception cref="T:System.InvalidOperationException">要求されたプロパティがキャッシュ内にありません。</exception>
    </member>
    <member name="F:System.Windows.Automation.TransformPattern.CanMoveProperty">
      <summary>
        <see cref="P:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanMove" /> プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TransformPattern.CanResizeProperty">
      <summary>
        <see cref="P:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanResize" /> プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TransformPattern.CanRotateProperty">
      <summary>
        <see cref="P:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanRotate" /> プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Automation.TransformPattern.Current">
      <summary>この <see cref="T:System.Windows.Automation.TransformPattern" /> の現在の UI オートメーション プロパティ値を取得します。</summary>
      <returns>コントロール パターンの現在の UI オートメーション プロパティ値を格納する構造体。</returns>
    </member>
    <member name="M:System.Windows.Automation.TransformPattern.Move(System.Double,System.Double)">
      <summary>コントロールを移動します。</summary>
      <param name="x">コントロールの左側の絶対画面座標。</param>
      <param name="y">コントロールの上部の絶対画面座標。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanMove" /> プロパティが false です。</exception>
    </member>
    <member name="F:System.Windows.Automation.TransformPattern.Pattern">
      <summary>
        <see cref="T:System.Windows.Automation.TransformPattern" /> コントロール パターンを識別します。</summary>
    </member>
    <member name="M:System.Windows.Automation.TransformPattern.Resize(System.Double,System.Double)">
      <summary>コントロールのサイズを変更します。</summary>
      <param name="width">ウィンドウの新しい幅 (ピクセル単位)。</param>
      <param name="height">ウィンドウの新しい高さ (ピクセル単位)。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanResize" /> プロパティが false です。</exception>
    </member>
    <member name="M:System.Windows.Automation.TransformPattern.Rotate(System.Double)">
      <summary>コントロールを回転します。</summary>
      <param name="degrees">要素を回転する角度の数値。 正の値は時計回りの回転、負の値は反時計回りの回転を表します。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanRotate" /> プロパティが false です。</exception>
    </member>
    <member name="T:System.Windows.Automation.TransformPattern.TransformPatternInformation">
      <summary>
        <see cref="T:System.Windows.Automation.TransformPattern" /> アクセサーまたは <see cref="P:System.Windows.Automation.TransformPattern.Current" /> アクセサーを使用して、<see cref="P:System.Windows.Automation.TransformPattern.Cached" /> オブジェクトのプロパティ値へのアクセスを提供します。</summary>
    </member>
    <member name="P:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanMove">
      <summary>UI オートメーション 要素を移動できるかどうかを指定する値を取得します。</summary>
      <returns>要素を移動できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanResize">
      <summary>UI オートメーション要素のサイズが変更可能かどうかを指定する値を取得します。</summary>
      <returns>要素のサイズを変更できる場合は <see langword="true" />。変更できない場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanRotate">
      <summary>UI オートメーション 要素を回転できるかどうかを指定する値を取得します。</summary>
      <returns>要素を回転できる場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.Automation.TreeWalker">
      <summary>UI オートメーション ツリーの移動に使用されるメソッドとプロパティを提供します。</summary>
    </member>
    <member name="M:System.Windows.Automation.TreeWalker.#ctor(System.Windows.Automation.Condition)">
      <summary>
        <see cref="T:System.Windows.Automation.TreeWalker" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="condition">
        <see cref="T:System.Windows.Automation.TreeWalker" /> が移動する UI オートメーション要素ツリーのビュー。</param>
    </member>
    <member name="P:System.Windows.Automation.TreeWalker.Condition">
      <summary>
        <see cref="T:System.Windows.Automation.TreeWalker" /> オブジェクトのビューを定義するオブジェクトを取得します。</summary>
      <returns>ビューを定義する条件。 これは、コンストラクターに渡された値です。</returns>
    </member>
    <member name="F:System.Windows.Automation.TreeWalker.ContentViewWalker">
      <summary>コンテンツ コントロールとしてマークされているツリー内の要素のビューを格納している定義済みの <see cref="T:System.Windows.Automation.TreeWalker" /> を表します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TreeWalker.ControlViewWalker">
      <summary>コントロールとしてマークされているツリー内の要素のビューを格納している、定義済みの <see cref="T:System.Windows.Automation.TreeWalker" /> を表します。</summary>
    </member>
    <member name="M:System.Windows.Automation.TreeWalker.GetFirstChild(System.Windows.Automation.AutomationElement)">
      <summary>指定した <see cref="T:System.Windows.Automation.AutomationElement" /> の最初の子要素を取得します。</summary>
      <param name="element">最初の子の取得元の要素。</param>
      <returns>最初の子要素。存在しない場合は null 参照 (Visual Basic では <see langword="Nothing" />)。</returns>
    </member>
    <member name="M:System.Windows.Automation.TreeWalker.GetFirstChild(System.Windows.Automation.AutomationElement,System.Windows.Automation.CacheRequest)">
      <summary>指定した <see cref="T:System.Windows.Automation.AutomationElement" /> の最初の子要素を取得し、プロパティとパターンをキャッシュします。</summary>
      <param name="element">最初の子の取得元の要素。</param>
      <param name="request">キャッシュ対象として返される <see cref="T:System.Windows.Automation.AutomationElement" /> のプロパティおよびパターンを指定するキャッシュ要求オブジェクト。</param>
      <returns>最初の子要素。存在しない場合は null 参照 (Visual Basic では <see langword="Nothing" />)。</returns>
    </member>
    <member name="M:System.Windows.Automation.TreeWalker.GetLastChild(System.Windows.Automation.AutomationElement)">
      <summary>指定した <see cref="T:System.Windows.Automation.AutomationElement" /> の最後の子要素を取得します。</summary>
      <param name="element">最後の子の取得元の要素。</param>
      <returns>最後の子要素である <see cref="T:System.Windows.Automation.AutomationElement" />。存在しない場合は null 参照 (Visual Basic では <see langword="Nothing" />)。</returns>
    </member>
    <member name="M:System.Windows.Automation.TreeWalker.GetLastChild(System.Windows.Automation.AutomationElement,System.Windows.Automation.CacheRequest)">
      <summary>指定した <see cref="T:System.Windows.Automation.AutomationElement" /> の最後の子要素を取得し、プロパティとパターンをキャッシュします。</summary>
      <param name="element">最後の子の取得元の要素。</param>
      <param name="request">キャッシュ対象として返される <see cref="T:System.Windows.Automation.AutomationElement" /> のプロパティおよびパターンを指定するキャッシュ要求オブジェクト。</param>
      <returns>最後の子要素。存在しない場合は null 参照 (Visual Basic では <see langword="Nothing" />)。</returns>
    </member>
    <member name="M:System.Windows.Automation.TreeWalker.GetNextSibling(System.Windows.Automation.AutomationElement)">
      <summary>指定した <see cref="T:System.Windows.Automation.AutomationElement" /> の次の兄弟要素を取得します。</summary>
      <param name="element">次の兄弟の取得元となる <see cref="T:System.Windows.Automation.AutomationElement" />。</param>
      <returns>次の兄弟要素。存在しない場合は null 参照 (Visual Basic では <see langword="Nothing" />)。</returns>
    </member>
    <member name="M:System.Windows.Automation.TreeWalker.GetNextSibling(System.Windows.Automation.AutomationElement,System.Windows.Automation.CacheRequest)">
      <summary>指定した <see cref="T:System.Windows.Automation.AutomationElement" /> の次の兄弟要素を取得し、プロパティとパターンをキャッシュします。</summary>
      <param name="element">次の兄弟の取得元の要素。</param>
      <param name="request">キャッシュ対象として返される <see cref="T:System.Windows.Automation.AutomationElement" /> のプロパティおよびパターンを指定するキャッシュ要求オブジェクト。</param>
      <returns>次の兄弟要素。存在しない場合は null 参照 (Visual Basic では <see langword="Nothing" />)。</returns>
    </member>
    <member name="M:System.Windows.Automation.TreeWalker.GetParent(System.Windows.Automation.AutomationElement)">
      <summary>指定した <see cref="T:System.Windows.Automation.AutomationElement" /> の親要素を取得します。</summary>
      <param name="element">親が返される要素。</param>
      <returns>親要素。指定した要素がツリーのルート要素である場合、または親要素が現在のビューに表示されない場合は、null 参照 (Visual Basic では <see langword="Nothing" />)。</returns>
    </member>
    <member name="M:System.Windows.Automation.TreeWalker.GetParent(System.Windows.Automation.AutomationElement,System.Windows.Automation.CacheRequest)">
      <summary>指定した <see cref="T:System.Windows.Automation.AutomationElement" /> の親要素を取得し、プロパティとパターンをキャッシュします。</summary>
      <param name="element">親が返される要素。</param>
      <param name="request">キャッシュ対象として返される <see cref="T:System.Windows.Automation.AutomationElement" /> のメンバーを指定するキャッシュ要求オブジェクト。</param>
      <returns>親要素。指定した要素がツリーのルート要素である場合、または親要素がこのビューに表示されない場合は、null 参照 (Visual Basic では <see langword="Nothing" />)。</returns>
    </member>
    <member name="M:System.Windows.Automation.TreeWalker.GetPreviousSibling(System.Windows.Automation.AutomationElement)">
      <summary>指定した <see cref="T:System.Windows.Automation.AutomationElement" /> の直前の兄弟を取得します。</summary>
      <param name="element">直前の兄弟の取得元の要素。</param>
      <returns>直前の兄弟要素。存在しない場合は null 参照 (Visual Basic では <see langword="Nothing" />)。</returns>
    </member>
    <member name="M:System.Windows.Automation.TreeWalker.GetPreviousSibling(System.Windows.Automation.AutomationElement,System.Windows.Automation.CacheRequest)">
      <summary>指定した <see cref="T:System.Windows.Automation.AutomationElement" /> の直前の兄弟を取得し、プロパティとパターンをキャッシュします。</summary>
      <param name="element">直前の兄弟の取得元の要素。</param>
      <param name="request">キャッシュ対象として返される <see cref="T:System.Windows.Automation.AutomationElement" /> のプロパティおよびパターンを指定するキャッシュ要求オブジェクト。</param>
      <returns>直前の兄弟要素。存在しない場合は null 参照 (Visual Basic では <see langword="Nothing" />)。</returns>
    </member>
    <member name="M:System.Windows.Automation.TreeWalker.Normalize(System.Windows.Automation.AutomationElement)">
      <summary>ノード自体が <see cref="P:System.Windows.Automation.TreeWalker.Condition" /> を満たす場合はそのノード自体を取得し、それ以外の場合は <see cref="P:System.Windows.Automation.TreeWalker.Condition" /> を満たす最も近い親ノードまたは先祖ノードを取得します。</summary>
      <param name="element">正規化の開始点となった要素。</param>
      <returns>現在のビュー内で最も近くにある <see cref="T:System.Windows.Automation.AutomationElement" />。 先祖チェーンを上方向に移動することによってルート要素に到達した場合は、ルート要素が返されます。</returns>
    </member>
    <member name="M:System.Windows.Automation.TreeWalker.Normalize(System.Windows.Automation.AutomationElement,System.Windows.Automation.CacheRequest)">
      <summary>ノード自体が <see cref="P:System.Windows.Automation.TreeWalker.Condition" /> を満たす場合はそのノード自体を取得し、それ以外の場合は <see cref="P:System.Windows.Automation.TreeWalker.Condition" /> を満たす最も近い親ノードまたは先祖ノードを取得し、プロパティとパターンをキャッシュします。</summary>
      <param name="element">正規化の開始点となった要素。</param>
      <param name="request">キャッシュ対象として返される <see cref="T:System.Windows.Automation.AutomationElement" /> のプロパティおよびパターンを指定するキャッシュ要求オブジェクト。</param>
      <returns>現在のビュー内で最も近くにある <see cref="T:System.Windows.Automation.AutomationElement" />。 先祖チェーンを上方向に移動することによってルート要素に到達した場合は、ルート要素が返されます。</returns>
    </member>
    <member name="F:System.Windows.Automation.TreeWalker.RawViewWalker">
      <summary>ツリー内のすべての要素のビューを格納している、定義済みの <see cref="T:System.Windows.Automation.TreeWalker" /> を表します。</summary>
    </member>
    <member name="T:System.Windows.Automation.ValuePattern">
      <summary>1 つの範囲に広がらず、文字列として表すことができる固有の値を持つコントロールを表します。 この文字列は、コントロールと設定に応じて、編集できることもできないこともあります。</summary>
    </member>
    <member name="P:System.Windows.Automation.ValuePattern.Cached">
      <summary>この <see cref="T:System.Windows.Automation.ValuePattern" /> のキャッシュされた UI オートメーション プロパティ値を取得します。</summary>
      <returns>キャッシュされたプロパティ値。</returns>
      <exception cref="T:System.InvalidOperationException">要求されたプロパティがキャッシュ内にありません。</exception>
    </member>
    <member name="P:System.Windows.Automation.ValuePattern.Current">
      <summary>この <see cref="T:System.Windows.Automation.ValuePattern" /> の現在の UI オートメーション プロパティ値を取得します。</summary>
      <returns>現在のプロパティ値。</returns>
    </member>
    <member name="F:System.Windows.Automation.ValuePattern.IsReadOnlyProperty">
      <summary>
        <see cref="P:System.Windows.Automation.ValuePattern.ValuePatternInformation.IsReadOnly" /> プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.ValuePattern.Pattern">
      <summary>
        <see cref="T:System.Windows.Automation.ValuePattern" /> コントロール パターンを識別します。</summary>
    </member>
    <member name="M:System.Windows.Automation.ValuePattern.SetValue(System.String)">
      <summary>コントロールの値を設定します。</summary>
      <param name="value">設定する値。 UI オートメーション プロバイダーは、値を適切なデータ型に変換します。</param>
      <exception cref="T:System.InvalidOperationException">コントロールは読み取り専用です。</exception>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">コントロールは無効です。</exception>
    </member>
    <member name="T:System.Windows.Automation.ValuePattern.ValuePatternInformation">
      <summary>
        <see cref="T:System.Windows.Automation.ValuePattern" /> アクセサーまたは <see cref="P:System.Windows.Automation.ValuePattern.Current" /> アクセサーを使用して、<see cref="P:System.Windows.Automation.ValuePattern.Cached" /> オブジェクトのプロパティ値へのアクセスを提供します。</summary>
    </member>
    <member name="P:System.Windows.Automation.ValuePattern.ValuePatternInformation.IsReadOnly">
      <summary>UI オートメーション 要素の値が読み取り専用かどうかを指定する値を取得します。</summary>
      <returns>値が読み取り専用の場合は <see langword="true" />。変更可能な場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Automation.ValuePattern.ValuePatternInformation.Value">
      <summary>UI オートメーション 要素の値を取得します。</summary>
      <returns>文字列としてUI オートメーションの要素の値。 既定値は空の文字列です。</returns>
    </member>
    <member name="F:System.Windows.Automation.ValuePattern.ValueProperty">
      <summary>
        <see cref="P:System.Windows.Automation.ValuePattern.ValuePatternInformation.Value" /> プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Automation.VirtualizedItemPattern">
      <summary>仮想化されたコンテナー内にあり、UI オートメーション要素として全面的にアクセスできるようにする必要のある項目を表します。</summary>
    </member>
    <member name="F:System.Windows.Automation.VirtualizedItemPattern.Pattern">
      <summary>
        <see cref="T:System.Windows.Automation.VirtualizedItemPattern" /> コントロール パターンを識別します。</summary>
    </member>
    <member name="M:System.Windows.Automation.VirtualizedItemPattern.Realize">
      <summary>仮想項目に UI オートメーション要素として全面的にアクセスできるようにします。</summary>
    </member>
    <member name="T:System.Windows.Automation.WindowPattern">
      <summary>従来のグラフィカル ユーザー インターフェイス (GUI) 内で、ウィンドウ ベースの基本的な機能を提供するコントロールを表します。</summary>
    </member>
    <member name="P:System.Windows.Automation.WindowPattern.Cached">
      <summary>この <see cref="T:System.Windows.Automation.WindowPattern" /> のキャッシュされた UI オートメーション プロパティ値を取得します。</summary>
      <returns>コントロール パターンのキャッシュされた UI オートメーション プロパティ値を格納する構造体。</returns>
      <exception cref="T:System.InvalidOperationException">要求されたプロパティがキャッシュ内にありません。</exception>
    </member>
    <member name="F:System.Windows.Automation.WindowPattern.CanMaximizeProperty">
      <summary>
        <see cref="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.CanMaximize" /> プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.WindowPattern.CanMinimizeProperty">
      <summary>
        <see cref="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.CanMinimize" /> プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Automation.WindowPattern.Close">
      <summary>現在のウィンドウを閉じることを試みます。</summary>
      <exception cref="T:System.InvalidOperationException">コントロールは、要求されたアクションを実行できません。</exception>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">コントロールを使用できなくなった場合。</exception>
    </member>
    <member name="P:System.Windows.Automation.WindowPattern.Current">
      <summary>この <see cref="T:System.Windows.Automation.WindowPattern" /> の現在の UI オートメーション プロパティ値を取得します。</summary>
      <returns>コントロール パターンの現在の UI オートメーション プロパティ値を格納する構造体。</returns>
    </member>
    <member name="F:System.Windows.Automation.WindowPattern.IsModalProperty">
      <summary>
        <see cref="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.IsModal" /> プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.WindowPattern.IsTopmostProperty">
      <summary>
        <see cref="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.IsTopmost" /> プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.WindowPattern.Pattern">
      <summary>
        <see cref="T:System.Windows.Automation.WindowPattern" /> コントロール パターンを識別します。</summary>
    </member>
    <member name="M:System.Windows.Automation.WindowPattern.SetWindowVisualState(System.Windows.Automation.WindowVisualState)">
      <summary>ウィンドウの <see cref="T:System.Windows.Automation.WindowVisualState" /> を変更します。</summary>
      <param name="state">ウィンドウの要求された <see cref="T:System.Windows.Automation.WindowVisualState" />。</param>
      <exception cref="T:System.InvalidOperationException">要求された動作をコントロールがサポートしない場合。</exception>
    </member>
    <member name="M:System.Windows.Automation.WindowPattern.WaitForInputIdle(System.Int32)">
      <summary>呼び出し元のコードは、指定された時間、または関連付けられたプロセスがアイドル状態に入るまでブロックされます。どちらが最初に完了するかは関係ありません。</summary>
      <param name="milliseconds">関連付けられたプロセスがアイドル状態になるまで待機する時間。単位はミリ秒です。 最大値は <see cref="F:System.Int32.MaxValue" /> です。</param>
      <returns>ウィンドウがアイドル状態になっている場合は <see langword="true" />、タイムアウトが発生した場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">渡されたパラメーターは有効な数ではありません。</exception>
    </member>
    <member name="F:System.Windows.Automation.WindowPattern.WindowClosedEvent">
      <summary>ウィンドウを閉じたときに発生するイベントを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.WindowPattern.WindowInteractionStateProperty">
      <summary>
        <see cref="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.WindowInteractionState" /> プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.WindowPattern.WindowOpenedEvent">
      <summary>ウィンドウを開いたときに発生するイベントを識別します。</summary>
    </member>
    <member name="T:System.Windows.Automation.WindowPattern.WindowPatternInformation">
      <summary>
        <see cref="T:System.Windows.Automation.WindowPattern" /> アクセサーまたは <see cref="P:System.Windows.Automation.WindowPattern.Current" /> アクセサーを使用して、<see cref="P:System.Windows.Automation.WindowPattern.Cached" /> オブジェクトのプロパティ値へのアクセスを提供します。</summary>
    </member>
    <member name="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.CanMaximize">
      <summary>
        <see cref="T:System.Windows.Automation.AutomationElement" /> を最大化できるかどうかを指定する値を取得します。</summary>
      <returns>
        <see langword="true" /> を最大化できる場合は <see cref="T:System.Windows.Automation.AutomationElement" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.CanMinimize">
      <summary>現在の <see cref="T:System.Windows.Automation.AutomationElement" /> を最小化できるかどうかを指定する値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.AutomationElement" /> を最小化できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.IsModal">
      <summary>
        <see cref="T:System.Windows.Automation.AutomationElement" /> がモーダルかどうかを指定する値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.AutomationElement" /> がモーダルの場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.IsTopmost">
      <summary>
        <see cref="T:System.Windows.Automation.AutomationElement" /> が z オーダーの最上位の要素かどうかを指定する値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.AutomationElement" /> が最上位の場合は <see langword="true" />、それ以外は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.WindowInteractionState">
      <summary>
        <see cref="T:System.Windows.Automation.WindowInteractionState" /> の <see cref="T:System.Windows.Automation.AutomationElement" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.AutomationElement" /> の <see cref="T:System.Windows.Automation.WindowInteractionState" />。 既定値は <see cref="F:System.Windows.Automation.WindowInteractionState.Running" /> です。</returns>
    </member>
    <member name="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.WindowVisualState">
      <summary>
        <see cref="T:System.Windows.Automation.WindowVisualState" /> の <see cref="T:System.Windows.Automation.AutomationElement" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.AutomationElement" /> の <see cref="T:System.Windows.Automation.WindowVisualState" />。 既定値は <see cref="F:System.Windows.Automation.WindowVisualState.Normal" /> です。</returns>
    </member>
    <member name="F:System.Windows.Automation.WindowPattern.WindowVisualStateProperty">
      <summary>
        <see cref="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.WindowVisualState" /> プロパティを識別します。</summary>
    </member>
  </members>
</doc>